================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = input()
    if n == '0':
        break
    n = int(n)
    sales = {}
    order = []
    for _ in range(n):
        data = input().split()
        i = data[0]
        p = int(data[1])
        q = int(data[2])
        if i not in sales:
            sales[i] = 0
            order.append(i)
        sales[i] += p * q
    result = []
    for i in order:
        if sales[i] >= 1000000:
            result.append(i)
    if result:
        for r in result:
            print(r)
    else:
        print("NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8705378770828247
    2. '=' → logprob: -1.4955378770828247
    3. 'u' → logprob: -1.9955378770828247
    4. '   ' → logprob: -2.745537757873535
    5. 'o' → logprob: -3.245537757873535
    6. '+' → logprob: -3.745537757873535
    7. '_' → logprob: -4.245537757873535
    8. '>' → logprob: -4.245537757873535
    9. ' =' → logprob: -4.370537757873535
    10. '  ' → logprob: -4.620537757873535

Token 6: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.39534392952919006
    2. ' input' → logprob: -1.2703438997268677
    3. 'input' → logprob: -3.3953440189361572
    4. 'int' → logprob: -4.645343780517578
    5. ' n' → logprob: -6.270343780517578
    6. ' ' → logprob: -7.770343780517578
    7. 'n' → logprob: -9.395343780517578
    8. ' randint' → logprob: -9.770343780517578
    9. '```' → logprob: -11.020343780517578
    10. ' a' → logprob: -11.020343780517578

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011896300129592419
    2. '('' → logprob: -7.251189708709717
    3. ''' → logprob: -8.251189231872559
    4. '("("' → logprob: -9.126189231872559
    5. '(
' → logprob: -10.626189231872559
    6. '"' → logprob: -10.751189231872559
    7. '```' → logprob: -11.251189231872559
    8. '()' → logprob: -11.251189231872559
    9. '`' → logprob: -11.626189231872559
    10. ' (' → logprob: -12.251189231872559

Token 8: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6571558713912964
    2. ' ' → logprob: -2.282155990600586
    3. '   ' → logprob: -2.657155990600586
    4. '.' → logprob: -3.157155990600586
    5. '\n' → logprob: -3.157155990600586
    6. ' ==' → logprob: -3.157155990600586
    7. '<|end|>' → logprob: -3.157155990600586
    8. '```' → logprob: -3.532155990600586
    9. 'if' → logprob: -4.282155990600586
    10. ')' → logprob: -4.282155990600586

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5926225781440735
    2. ' ==' → logprob: -1.7176225185394287
    3. ' ' → logprob: -2.7176225185394287
    4. '.' → logprob: -2.8426225185394287
    5. 'if' (adapté à ' if') → logprob: -3.0926225185394287
    6. '==' → logprob: -3.2176225185394287
    7. '.strip' → logprob: -4.342622756958008
    8. '<|end|>' → logprob: -5.092622756958008
    9. '   ' → logprob: -5.217622756958008
    10. '    ' → logprob: -5.342622756958008

Token 10: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1133025735616684
    2. ' n' → logprob: -2.73830246925354
    3. ' ' → logprob: -3.23830246925354
    4. 'not' → logprob: -6.113302707672119
    5. 'n' → logprob: -7.113302707672119
    6. '  ' → logprob: -8.738302230834961
    7. ' ' → logprob: -11.863302230834961
    8. ' n't' → logprob: -12.613302230834961
    9. '	not' → logprob: -13.863302230834961
    10. ' len' → logprob: -13.863302230834961

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.022259756922721863
    2. '==' → logprob: -4.022259712219238
    3. '.' → logprob: -6.272259712219238
    4. ' !=' → logprob: -7.397259712219238
    5. ' .' → logprob: -7.647259712219238
    6. ' ' → logprob: -8.272259712219238
    7. '.strip' → logprob: -8.272259712219238
    8. ' =' → logprob: -8.772259712219238
    9. '.is' → logprob: -9.022259712219238
    10. ' ===' → logprob: -9.772259712219238

Token 12: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.32064422965049744
    2. ''' → logprob: -1.3206442594528198
    3. '""' → logprob: -6.070644378662109
    4. ' '' → logprob: -6.320644378662109
    5. ' "' → logprob: -6.445644378662109
    6. '''' → logprob: -7.195644378662109
    7. ' ' → logprob: -7.320644378662109
    8. ' ""' → logprob: -9.69564437866211
    9. ' ''' → logprob: -9.82064437866211
    10. '"\' → logprob: -10.19564437866211

Token 13: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09033937007188797
    2. '':' → logprob: -3.465339422225952
    3. '0' → logprob: -4.090339183807373
    4. '\n' → logprob: -4.590339183807373
    5. 'q' → logprob: -5.215339183807373
    6. ''\' → logprob: -5.215339183807373
    7. 'exit' → logprob: -5.340339183807373
    8. ''ex' → logprob: -5.340339183807373
    9. 'quit' → logprob: -5.840339183807373
    10. '"' → logprob: -5.965339183807373

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07306335121393204
    2. ''' → logprob: -2.948063373565674
    3. '\n' → logprob: -4.073063373565674
    4. '':
' → logprob: -7.698063373565674
    5. ':' → logprob: -8.198062896728516
    6. '':
' → logprob: -8.948062896728516
    7. ' ':' → logprob: -9.948062896728516
    8. ''or' → logprob: -11.198062896728516
    9. '\r' → logprob: -11.448062896728516
    10. ' '' → logprob: -11.573062896728516

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005705519113689661
    2. ' break' → logprob: -5.6307053565979
    3. '   ' → logprob: -6.2557053565979
    4. '	break' → logprob: -9.505705833435059
    5. '    ' → logprob: -11.130705833435059
    6. '\n' → logprob: -11.130705833435059
    7. ' ' → logprob: -11.255705833435059
    8. ' ' → logprob: -11.380705833435059
    9. '      ' → logprob: -11.380705833435059
    10. 'break' → logprob: -11.755705833435059

Token 16: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09271702170372009
    2. ' break' → logprob: -2.467716932296753
    3. '\n' → logprob: -6.342717170715332
    4. '   ' → logprob: -6.592717170715332
    5. '           ' → logprob: -8.717717170715332
    6. '	break' → logprob: -9.092717170715332
    7. 'break' (adapté à ' break') → logprob: -9.342717170715332
    8. ' \' → logprob: -9.467717170715332
    9. '    ' → logprob: -10.342717170715332
    10. ' ' → logprob: -10.342717170715332

Token 17: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.051997184753418
    2. ':' → logprob: -1.176997184753418
    3. '   ' → logprob: -2.051997184753418
    4. '    
' → logprob: -2.926997184753418
    5. '
' → logprob: -3.051997184753418
    6. 'n' → logprob: -4.051997184753418
    7. '<|end|>' → logprob: -4.051997184753418
    8. '\' → logprob: -4.176997184753418
    9. '  
' → logprob: -4.426997184753418
    10. '\r' → logprob: -4.551997184753418

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06078985705971718
    2. '    
' → logprob: -3.5607898235321045
    3. '
' → logprob: -4.435790061950684
    4. 'n' → logprob: -5.435790061950684
    5. '<|end|>' → logprob: -5.435790061950684
    6. '\n' → logprob: -5.685790061950684
    7. '  
' → logprob: -5.935790061950684
    8. 'print' → logprob: -6.685790061950684
    9. '  ' → logprob: -7.560790061950684
    10. '   
' → logprob: -7.935790061950684

Token 19: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.782690703868866
    2. '\n' → logprob: -1.7826907634735107
    3. '   ' → logprob: -1.7826907634735107
    4. '\' → logprob: -3.0326907634735107
    5. ' 
' → logprob: -3.9076907634735107
    6. '    ' → logprob: -3.9076907634735107
    7. 'n' (adapté à ' n') → logprob: -3.9076907634735107
    8. ':' → logprob: -4.032690525054932
    9. ',' → logprob: -4.407690525054932
    10. '    
' → logprob: -4.532690525054932

Token 20: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4285601079463959
    2. '.' → logprob: -2.0535600185394287
    3. '<|end|>' → logprob: -2.4285600185394287
    4. ')' → logprob: -3.0535600185394287
    5. '=' → logprob: -3.8035600185394287
    6. '[' → logprob: -4.178560256958008
    7. ' ' → logprob: -4.928560256958008
    8. '#' → logprob: -4.928560256958008
    9. '
' → logprob: -5.303560256958008
    10. '\n' → logprob: -5.428560256958008

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08242101222276688
    2. 'int' → logprob: -3.082421064376831
    3. ' n' → logprob: -3.582421064376831
    4. ' list' → logprob: -5.707420825958252
    5. 'n' → logprob: -6.457420825958252
    6. 'list' → logprob: -8.58242130279541
    7. ' ' → logprob: -9.33242130279541
    8. ' len' → logprob: -9.83242130279541
    9. ' float' → logprob: -9.95742130279541
    10. ' [' → logprob: -10.33242130279541

Token 22: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931745409965515
    2. '(n' → logprob: -0.6931745409965515
    3. ' (' → logprob: -11.443174362182617
    4. '()' → logprob: -11.943174362182617
    5. '(
' → logprob: -12.943174362182617
    6. '(

' → logprob: -13.693174362182617
    7. ' ' → logprob: -13.818174362182617
    8. '(int' → logprob: -14.318174362182617
    9. '(input' → logprob: -14.443174362182617
    10. '(nn' → logprob: -14.693174362182617

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046951865078881383
    2. ' )' → logprob: -7.87546968460083
    3. '+' → logprob: -10.125469207763672
    4. '*' → logprob: -11.000469207763672
    5. '**' → logprob: -11.625469207763672
    6. '))' → logprob: -11.875469207763672
    7. '`)' → logprob: -12.375469207763672
    8. '   ' → logprob: -13.125469207763672
    9. ')
' → logprob: -13.125469207763672
    10. ' +' → logprob: -13.625469207763672

Token 24: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' sales' (ID: 7155)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4380645453929901
    2. '   ' → logprob: -1.3130645751953125
    3. ' if' → logprob: -3.9380645751953125
    4. ' 
' → logprob: -4.1880645751953125
    5. '    ' → logprob: -4.4380645751953125
    6. 'n' → logprob: -5.0630645751953125
    7. ' ,' → logprob: -5.5630645751953125
    8. '  ' → logprob: -5.6880645751953125
    9. '\' → logprob: -5.8130645751953125
    10. ',' → logprob: -6.1880645751953125

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.681184709072113
    2. '[' → logprob: -1.3061847686767578
    3. '=' → logprob: -2.681184768676758
    4. '_data' → logprob: -3.056184768676758
    5. ' +=' → logprob: -3.931184768676758
    6. '_count' → logprob: -4.431184768676758
    7. 's' → logprob: -4.556184768676758
    8. '_' → logprob: -4.681184768676758
    9. '_sum' → logprob: -4.931184768676758
    10. '_counts' → logprob: -4.931184768676758

Token 27: ' {}
' (ID: 11421)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7429115176200867
    2. ' []' → logprob: -1.2429115772247314
    3. ' n' → logprob: -2.8679115772247314
    4. '[]' → logprob: -2.8679115772247314
    5. '[' → logprob: -3.1179115772247314
    6. ' list' → logprob: -3.9929115772247314
    7. ' ' → logprob: -4.867911338806152
    8. '[n' → logprob: -4.867911338806152
    9. '[int' → logprob: -4.867911338806152
    10. '{}' → logprob: -4.867911338806152

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9127480983734131
    2. 'for' → logprob: -1.037748098373413
    3. ' for' → logprob: -2.162748098373413
    4. ' ' → logprob: -2.787748098373413
    5. ' 
' → logprob: -4.287748336791992
    6. '<|end|>' → logprob: -4.287748336791992
    7. '    
' → logprob: -4.662748336791992
    8. 'n' → logprob: -5.037748336791992
    9. '    ' → logprob: -5.162748336791992
    10. '
' → logprob: -6.037748336791992

Token 29: ' order' (ID: 2569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3204227685928345
    2. ' for' → logprob: -2.070422649383545
    3. ' ' → logprob: -2.570422649383545
    4. '   ' → logprob: -3.320422649383545
    5. 'n' → logprob: -4.320422649383545
    6. 's' → logprob: -5.195422649383545
    7. 't' → logprob: -5.695422649383545
    8. '    ' → logprob: -6.070422649383545
    9. '	for' → logprob: -6.070422649383545
    10. '\t' → logprob: -6.195422649383545

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2722899317741394
    2. 's' → logprob: -2.022289991378784
    3. '=' → logprob: -2.647289991378784
    4. 'ed' → logprob: -4.022289752960205
    5. '_list' → logprob: -4.397289752960205
    6. '=[]' → logprob: -6.522289752960205
    7. '_ids' → logprob: -6.897289752960205
    8. '_count' → logprob: -7.397289752960205
    9. '_' → logprob: -7.897289752960205
    10. '[' → logprob: -8.647290229797363

Token 31: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1270073801279068
    2. ' []' → logprob: -2.127007484436035
    3. '[' → logprob: -10.627007484436035
    4. ' ' → logprob: -10.752007484436035
    5. '   ' → logprob: -11.252007484436035
    6. 'list' → logprob: -11.627007484436035
    7. '[]}' → logprob: -12.252007484436035
    8. '[]
' → logprob: -13.127007484436035
    9. '[]>' → logprob: -13.502007484436035
    10. '0' → logprob: -13.877007484436035

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8972238898277283
    2. 'for' → logprob: -0.8972238898277283
    3. ' for' → logprob: -2.522223949432373
    4. '<|end|>' → logprob: -3.397223949432373
    5. '
' → logprob: -3.897223949432373
    6. ' 
' → logprob: -4.272223949432373
    7. 'n' → logprob: -4.522223949432373
    8. '    
' → logprob: -4.897223949432373
    9. ' ' → logprob: -5.772223949432373
    10. '\n' → logprob: -5.897223949432373

Token 33: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.32823094725608826
    2. ' for' → logprob: -2.078230857849121
    3. '   ' → logprob: -2.703230857849121
    4. ' ' → logprob: -2.953230857849121
    5. ' 
' → logprob: -4.578230857849121
    6. '<|end|>' → logprob: -5.328230857849121
    7. '    
' → logprob: -5.578230857849121
    8. 'n' → logprob: -5.828230857849121
    9. '	for' → logprob: -5.953230857849121
    10. 's' → logprob: -6.453230857849121

Token 34: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12227927148342133
    2. ' ' → logprob: -2.747279167175293
    3. ' i' → logprob: -3.122279167175293
    4. '_' → logprob: -4.997279167175293
    5. 'i' → logprob: -9.622279167175293
    6. ' ' → logprob: -10.247279167175293
    7. ' range' → logprob: -10.497279167175293
    8. ' in' → logprob: -11.122279167175293
    9. '  ' → logprob: -11.247279167175293
    10. ' ▁' → logprob: -11.872279167175293

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012376103550195694
    2. 'in' → logprob: -6.751237392425537
    3. ' ' → logprob: -9.876237869262695
    4. '_' → logprob: -11.501237869262695
    5. ' _' → logprob: -12.751237869262695
    6. ' i' → logprob: -14.001237869262695
    7. 'range' → logprob: -14.376237869262695
    8. ' range' → logprob: -14.876237869262695
    9. '  ' → logprob: -15.376237869262695
    10. ' ,' → logprob: -15.626237869262695

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931506395339966
    2. 'range' → logprob: -0.6931506395339966
    3. '	range' → logprob: -13.443150520324707
    4. ' ' → logprob: -13.943150520324707
    5. 'ran' → logprob: -15.318150520324707
    6. '(range' → logprob: -15.318150520324707
    7. 'rang' → logprob: -15.443150520324707
    8. ' ran' → logprob: -16.068151473999023
    9. '  ' → logprob: -16.193151473999023
    10. '_range' → logprob: -16.818151473999023

Token 37: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25964459776878357
    2. '(' → logprob: -2.1346445083618164
    3. ' (' → logprob: -2.2596445083618164
    4. ' n' → logprob: -5.134644508361816
    5. 'n' → logprob: -9.634644508361816
    6. ' ' → logprob: -10.759644508361816
    7. '(int' → logprob: -12.259644508361816
    8. '()' → logprob: -12.384644508361816
    9. '	n' → logprob: -12.759644508361816
    10. '(s' → logprob: -13.134644508361816

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011271213879808784
    2. ' ):' → logprob: -7.626127243041992
    3. ')' → logprob: -7.876127243041992
    4. ':' → logprob: -8.751127243041992
    5. '):
' → logprob: -9.501127243041992
    6. '   ' → logprob: -11.626127243041992
    7. ',' → logprob: -12.126127243041992
    8. '+' → logprob: -13.001127243041992
    9. ' )' → logprob: -13.251127243041992
    10. ' ' → logprob: -13.626127243041992

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3601479232311249
    2. '   ' → logprob: -1.6101479530334473
    3. '<|end|>' → logprob: -2.6101479530334473
    4. '    ' → logprob: -4.485147953033447
    5. ' ' → logprob: -4.610147953033447
    6. ' s' → logprob: -6.360147953033447
    7. '<|end|>' → logprob: -6.610147953033447
    8. ' line' → logprob: -6.610147953033447
    9. ' input' → logprob: -7.860147953033447
    10. '	   ' → logprob: -8.110147476196289

Token 40: ' data' (ID: 1238)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5787108540534973
    2. ' item' → logprob: -1.4537107944488525
    3. ' s' → logprob: -2.0787107944488525
    4. ' product' → logprob: -3.7037107944488525
    5. '   ' → logprob: -4.453711032867432
    6. ' data' → logprob: -4.828711032867432
    7. ' name' → logprob: -4.953711032867432
    8. ' sale' → logprob: -4.953711032867432
    9. '    ' → logprob: -5.203711032867432
    10. ' ' → logprob: -5.578711032867432

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005935193970799446
    2. '=' → logprob: -5.130935192108154
    3. '   ' → logprob: -13.505935668945312
    4. ',' → logprob: -13.630935668945312
    5. ' ' → logprob: -14.005935668945312
    6. 'line' → logprob: -14.505935668945312
    7. '=input' → logprob: -14.755935668945312
    8. '_line' → logprob: -14.880935668945312
    9. '_' → logprob: -15.255935668945312
    10. '=line' → logprob: -15.255935668945312

Token 42: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.00997352134436369
    2. 'input' → logprob: -4.634973526000977
    3. ' ' → logprob: -8.634973526000977
    4. ' list' → logprob: -10.634973526000977
    5. '	input' → logprob: -13.134973526000977
    6. '=input' → logprob: -13.447473526000977
    7. ' data' → logprob: -13.634973526000977
    8. 'list' → logprob: -13.634973526000977
    9. '(input' → logprob: -13.697473526000977
    10. ' ' → logprob: -13.884973526000977

Token 43: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012714827433228493
    2. '().' → logprob: -4.387714862823486
    3. '(' → logprob: -8.637714385986328
    4. '())' → logprob: -11.137714385986328
    5. ' ()' → logprob: -12.637714385986328
    6. '()`' → logprob: -13.387714385986328
    7. '()>' → logprob: -13.637714385986328
    8. '()
' → logprob: -13.887714385986328
    9. '('' → logprob: -13.887714385986328
    10. '("' → logprob: -14.387714385986328

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003808146109804511
    2. 'strip' → logprob: -5.62880802154541
    3. 'rstrip' → logprob: -8.50380802154541
    4. ' split' → logprob: -12.87880802154541
    5. 'rs' → logprob: -13.25380802154541
    6. 'spl' → logprob: -14.87880802154541
    7. 'replace' → logprob: -15.12880802154541
    8. 'sp' → logprob: -16.378808975219727
    9. '(split' → logprob: -16.628808975219727
    10. 's' → logprob: -16.753808975219727

Token 45: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008548821206204593
    2. '(' → logprob: -7.625854969024658
    3. '('' → logprob: -8.0008544921875
    4. '())' → logprob: -10.7508544921875
    5. '()]' → logprob: -12.8758544921875
    6. ' ()' → logprob: -13.6258544921875
    7. ')' → logprob: -14.0008544921875
    8. '(),' → logprob: -14.0008544921875
    9. '()
' → logprob: -14.3758544921875
    10. '("' → logprob: -14.6258544921875

Token 46: '       ' (ID: 309)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -1.026803731918335
    2. '   ' → logprob: -1.526803731918335
    3. 'product' → logprob: -2.026803731918335
    4. ' name' → logprob: -3.026803731918335
    5. 'item' → logprob: -3.151803731918335
    6. '<|end|>' → logprob: -3.151803731918335
    7. ' product' → logprob: -3.276803731918335
    8. ' ' → logprob: -3.651803731918335
    9. 'year' → logprob: -4.401803970336914
    10. ' item' → logprob: -4.401803970336914

Token 47: ' i' (ID: 575)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.5512215495109558
    2. 'item' → logprob: -1.8012216091156006
    3. 'product' → logprob: -2.1762216091156006
    4. ' name' → logprob: -3.4262216091156006
    5. ' item' → logprob: -3.4262216091156006
    6. ' product' → logprob: -4.1762213706970215
    7. 'fruit' → logprob: -4.5512213706970215
    8. 'day' → logprob: -5.3012213706970215
    9. 'year' → logprob: -5.4262213706970215
    10. 'date' → logprob: -5.5512213706970215

Token 48: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2263488471508026
    2. 'tem' → logprob: -1.726348876953125
    3. 'f' → logprob: -4.851348876953125
    4. 'n' → logprob: -5.476348876953125
    5. 'm' → logprob: -5.726348876953125
    6. 't' → logprob: -5.976348876953125
    7. 'nd' → logprob: -6.226348876953125
    8. 'tems' → logprob: -6.601348876953125
    9. 'dx' → logprob: -6.726348876953125
    10. ' =' → logprob: -7.601348876953125

Token 49: ' data' (ID: 1238)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9668300151824951
    2. 'data' → logprob: -1.3418300151824951
    3. ' int' → logprob: -1.5918300151824951
    4. ' data' → logprob: -2.341830015182495
    5. '0' → logprob: -3.341830015182495
    6. 'nt' → logprob: -4.216830253601074
    7. ' ' → logprob: -4.966830253601074
    8. 'n' → logprob: -6.966830253601074
    9. 'd' → logprob: -8.716830253601074
    10. 'len' → logprob: -9.341830253601074

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023407360538840294
    2. '0' → logprob: -3.773407459259033
    3. ' [' → logprob: -10.023406982421875
    4. ' ' → logprob: -10.148406982421875
    5. '[-' → logprob: -10.398406982421875
    6. '1' → logprob: -11.148406982421875
    7. 's' → logprob: -11.648406982421875
    8. '2' → logprob: -12.898406982421875
    9. '3' → logprob: -12.898406982421875
    10. '[
' → logprob: -13.023406982421875

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00028743778239004314
    2. '1' → logprob: -8.625287055969238
    3. ' ' → logprob: -9.250287055969238
    4. '-' → logprob: -12.250287055969238
    5. '2' → logprob: -12.250287055969238
    6. '3' → logprob: -14.187787055969238
    7. '   ' → logprob: -14.750287055969238
    8. '[' → logprob: -15.375287055969238
    9. '4' → logprob: -15.812787055969238
    10. '  ' → logprob: -15.875287055969238

Token 52: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005244385101832449
    2. '<|end|>' → logprob: -8.375524520874023
    3. ' ]' → logprob: -9.000524520874023
    4. ']
' → logprob: -9.375524520874023
    5. ')' → logprob: -9.875524520874023
    6. '])' → logprob: -11.875524520874023
    7. ']int' → logprob: -12.000524520874023
    8. '<|end|>' → logprob: -12.250524520874023
    9. ',' → logprob: -12.750524520874023
    10. ')]' → logprob: -13.250524520874023

Token 53: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2626263499259949
    2. '<|end|>' → logprob: -2.8876264095306396
    3. '   ' → logprob: -3.2626264095306396
    4. '    ' → logprob: -3.5126264095306396
    5. ',' → logprob: -3.8876264095306396
    6. '_' → logprob: -3.8876264095306396
    7. ':' → logprob: -5.2626261711120605
    8. '  ' → logprob: -5.2626261711120605
    9. ' sales' → logprob: -5.2626261711120605
    10. 'sales' → logprob: -5.3876261711120605

Token 54: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -1.013954997062683
    2. 'v' → logprob: -1.513954997062683
    3. 'a' → logprob: -2.0139551162719727
    4. 'q' → logprob: -2.3889551162719727
    5. 's' → logprob: -2.7639551162719727
    6. 'c' → logprob: -3.3889551162719727
    7. 'd' → logprob: -4.263955116271973
    8. 'j' → logprob: -4.388955116271973
    9. ' p' → logprob: -4.513955116271973
    10. 'k' → logprob: -4.763955116271973

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20696093142032623
    2. 'rice' → logprob: -1.956960916519165
    3. '=' → logprob: -3.206960916519165
    4. 'rices' → logprob: -6.081961154937744
    5. 'r' → logprob: -6.456961154937744
    6. ' ' → logprob: -7.581961154937744
    7. 'ro' → logprob: -8.706960678100586
    8. 'iece' → logprob: -9.456960678100586
    9. 'urchased' → logprob: -9.581960678100586
    10. 'urchase' → logprob: -9.956960678100586

Token 56: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3492555320262909
    2. ' int' → logprob: -1.2242555618286133
    3. ' data' → logprob: -8.349255561828613
    4. ' float' → logprob: -8.349255561828613
    5. 'float' → logprob: -8.599255561828613
    6. 'data' → logprob: -8.849255561828613
    7. ' ' → logprob: -12.224255561828613
    8. '=int' → logprob: -13.849255561828613
    9. '	int' → logprob: -14.349255561828613
    10. '(int' → logprob: -14.474255561828613

Token 57: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.0032420014031231403
    2. '(' → logprob: -5.753242015838623
    3. 'data' → logprob: -10.003241539001465
    4. ' data' → logprob: -11.503241539001465
    5. ')data' → logprob: -12.503241539001465
    6. ')' → logprob: -13.003241539001465
    7. ' (' → logprob: -13.253241539001465
    8. '[data' → logprob: -14.753241539001465
    9. '(
' → logprob: -15.128241539001465
    10. ',data' → logprob: -16.00324249267578

Token 58: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023441045777872205
    2. '1' → logprob: -8.625234603881836
    3. '])' → logprob: -10.750234603881836
    4. ' [' → logprob: -11.625234603881836
    5. ']' → logprob: -11.750234603881836
    6. '[-' → logprob: -11.750234603881836
    7. '][' → logprob: -12.625234603881836
    8. ')' → logprob: -12.750234603881836
    9. '   ' → logprob: -14.875234603881836
    10. '```' → logprob: -14.875234603881836

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002506111632101238
    2. '2' → logprob: -8.500250816345215
    3. ' ' → logprob: -10.875250816345215
    4. '-' → logprob: -11.500250816345215
    5. '0' → logprob: -12.125250816345215
    6. '])' → logprob: -12.125250816345215
    7. '3' → logprob: -12.250250816345215
    8. '4' → logprob: -14.625250816345215
    9. '[' → logprob: -14.875250816345215
    10. ']' → logprob: -15.062750816345215

Token 60: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003464289184194058
    2. ' )' → logprob: -8.750346183776855
    3. '])' → logprob: -9.000346183776855
    4. ']' → logprob: -10.500346183776855
    5. ')
' → logprob: -11.500346183776855
    6. ')])' → logprob: -12.250346183776855
    7. '   ' → logprob: -12.500346183776855
    8. '）' → logprob: -12.625346183776855
    9. ')]' → logprob: -12.750346183776855
    10. ',' → logprob: -13.250346183776855

Token 61: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6237325668334961
    2. '<|end|>' → logprob: -1.498732566833496
    3. ' ' → logprob: -1.748732566833496
    4. '
' → logprob: -3.873732566833496
    5. ')' → logprob: -4.248732566833496
    6. ' 
' → logprob: -4.623732566833496
    7. '    
' → logprob: -4.998732566833496
    8. '  ' → logprob: -5.623732566833496
    9. '    ' → logprob: -6.248732566833496
    10. '#' → logprob: -6.373732566833496

Token 62: ' q' (ID: 2335)
  Prédit: 'sales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sales' → logprob: -0.880403995513916
    2. ' sales' → logprob: -1.380403995513916
    3. '   ' → logprob: -1.880403995513916
    4. ' if' → logprob: -2.130403995513916
    5. 'if' → logprob: -3.755403995513916
    6. ' ' → logprob: -4.255403995513916
    7. 's' → logprob: -4.505403995513916
    8. '<|end|>' → logprob: -5.630403995513916
    9. '	s' → logprob: -6.005403995513916
    10. 'sale' → logprob: -6.130403995513916

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47454628348350525
    2. ' =' → logprob: -0.9745463132858276
    3. ')' → logprob: -8.599546432495117
    4. '<|end|>' → logprob: -8.849546432495117
    5. ',' → logprob: -10.599546432495117
    6. ' ' → logprob: -10.849546432495117
    7. '<|end|>' → logprob: -10.849546432495117
    8. ']' → logprob: -11.099546432495117
    9. '.' → logprob: -11.474546432495117
    10. '=int' → logprob: -11.849546432495117

Token 64: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31326475739479065
    2. 'int' → logprob: -1.3132647275924683
    3. ' ' → logprob: -14.063264846801758
    4. '=int' → logprob: -14.188264846801758
    5. '	int' → logprob: -15.188264846801758
    6. '<int' → logprob: -15.188264846801758
    7. ' q' → logprob: -15.438264846801758
    8. '(int' → logprob: -15.563264846801758
    9. '[int' → logprob: -15.563264846801758
    10. ' p' → logprob: -16.063264846801758

Token 65: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.016155896708369255
    2. '(' → logprob: -4.14115571975708
    3. ' (' → logprob: -9.641156196594238
    4. '()' → logprob: -10.391156196594238
    5. ')' → logprob: -11.891156196594238
    6. ' data' → logprob: -12.516156196594238
    7. 'data' → logprob: -13.016156196594238
    8. '[data' → logprob: -13.141156196594238
    9. ')data' → logprob: -13.141156196594238
    10. '(q' → logprob: -13.641156196594238

Token 66: '[' (ID: 58)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.32416704297065735
    2. '[' → logprob: -1.449167013168335
    3. ']' → logprob: -3.699167013168335
    4. '1' → logprob: -4.199167251586914
    5. '][' → logprob: -6.699167251586914
    6. '2' → logprob: -7.949167251586914
    7. ')' → logprob: -8.699167251586914
    8. ' ' → logprob: -9.574167251586914
    9. '])
' → logprob: -9.699167251586914
    10. ' ])' → logprob: -9.699167251586914

Token 67: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2826092839241028
    2. '2' → logprob: -1.532609224319458
    3. '0' → logprob: -3.532609224319458
    4. ' ' → logprob: -7.032609462738037
    5. '])' → logprob: -9.782608985900879
    6. ']' → logprob: -11.032608985900879
    7. '   ' → logprob: -11.407608985900879
    8. '3' → logprob: -12.157608985900879
    9. ')' → logprob: -12.657608985900879
    10. '-' → logprob: -13.220108985900879

Token 68: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037800322752445936
    2. '])' → logprob: -8.250377655029297
    3. ')
' → logprob: -9.750377655029297
    4. ']' → logprob: -11.250377655029297
    5. '）' → logprob: -11.250377655029297
    6. ')])' → logprob: -11.750377655029297
    7. ' )' → logprob: -11.875377655029297
    8. ')]' → logprob: -12.125377655029297
    9. '   ' → logprob: -13.000377655029297
    10. '))' → logprob: -13.000377655029297

Token 69: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.832733690738678
    2. '       ' → logprob: -0.957733690738678
    3. '<|end|>' → logprob: -2.457733631134033
    4. '
' → logprob: -2.832733631134033
    5. ' ' → logprob: -3.832733631134033
    6. ')' → logprob: -5.457733631134033
    7. ' 
' → logprob: -6.082733631134033
    8. '    
' → logprob: -6.082733631134033
    9. 's' → logprob: -6.582733631134033
    10. '        
' → logprob: -7.332733631134033

Token 70: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36454659700393677
    2. '<|end|>' → logprob: -2.239546537399292
    3. 's' → logprob: -2.614546537399292
    4. ' 
' → logprob: -2.864546537399292
    5. '   ' → logprob: -3.239546537399292
    6. 'sales' → logprob: -4.739546775817871
    7. ')' → logprob: -5.489546775817871
    8. ' sales' → logprob: -5.739546775817871
    9. '    
' → logprob: -5.864546775817871
    10. '
' → logprob: -6.114546775817871

Token 71: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0013565480476245284
    2. 'i' → logprob: -6.626356601715088
    3. ' ' → logprob: -10.62635612487793
    4. ' p' → logprob: -12.37635612487793
    5. ' q' → logprob: -14.25135612487793
    6. ' ' → logprob: -14.75135612487793
    7. '	i' → logprob: -14.87635612487793
    8. '<|end|>' → logprob: -15.12635612487793
    9. 'p' → logprob: -16.00135612487793
    10. '  ' → logprob: -16.12635612487793

Token 72: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04417112097144127
    2. ' not' → logprob: -3.294171094894409
    3. ' ' → logprob: -5.294171333312988
    4. 'in' → logprob: -7.044171333312988
    5. 'not' → logprob: -9.044171333312988
    6. ' n' → logprob: -9.919171333312988
    7. ' i' → logprob: -11.294171333312988
    8. '<|end|>' → logprob: -11.544171333312988
    9. '  ' → logprob: -11.919171333312988
    10. 'n' → logprob: -11.919171333312988

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09096638113260269
    2. 'in' → logprob: -3.0909664630889893
    3. '<|end|>' → logprob: -3.7159664630889893
    4. ' sales' → logprob: -4.34096622467041
    5. 'sales' → logprob: -6.09096622467041
    6. '<|end|>' → logprob: -6.96596622467041
    7. ' ' → logprob: -7.71596622467041
    8. ')' → logprob: -9.34096622467041
    9. '  ' → logprob: -9.84096622467041
    10. ' Sales' → logprob: -10.21596622467041

Token 74: ' sales' (ID: 7155)
  Prédit: ' sales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sales' → logprob: -0.575951874256134
    2. 'sales' → logprob: -0.825951874256134
    3. 'sale' → logprob: -11.82595157623291
    4. ' sale' → logprob: -12.95095157623291
    5. 's' → logprob: -13.32595157623291
    6. '_sales' → logprob: -14.82595157623291
    7. '.sales' → logprob: -15.57595157623291
    8. '<|end|>' → logprob: -16.700952529907227
    9. '`s' → logprob: -17.075952529907227
    10. ')' → logprob: -17.200952529907227

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012809180771000683
    2. ' :' → logprob: -9.375127792358398
    3. ']:' → logprob: -10.750127792358398
    4. '):' → logprob: -11.875127792358398
    5. ':
' → logprob: -12.000127792358398
    6. '.keys' → logprob: -12.375127792358398
    7. ']' → logprob: -13.500127792358398
    8. '：' → logprob: -13.750127792358398
    9. '   ' → logprob: -14.750127792358398
    10. ':**' → logprob: -15.250127792358398

Token 76: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035019537899643183
    2. ':
' → logprob: -6.128501892089844
    3. '       ' → logprob: -8.003501892089844
    4. ' :' → logprob: -8.128501892089844
    5. '<|end|>' → logprob: -8.628501892089844
    6. '):' → logprob: -9.003501892089844
    7. ' =' → logprob: -9.253501892089844
    8. '   ' → logprob: -9.878501892089844
    9. '[' → logprob: -10.253501892089844
    10. '           ' → logprob: -10.628501892089844

Token 77: ' sales' (ID: 7155)
  Prédit: ' sales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sales' → logprob: -0.005119546316564083
    2. ' order' → logprob: -5.630119323730469
    3. 'sales' (adapté à ' sales') → logprob: -6.755119323730469
    4. ' sale' → logprob: -8.255119323730469
    5. ' ' → logprob: -11.380119323730469
    6. 'order' → logprob: -11.505119323730469
    7. '       ' → logprob: -11.505119323730469
    8. '    ' → logprob: -11.630119323730469
    9. '	s' → logprob: -12.005119323730469
    10. '   ' → logprob: -12.130119323730469

Token 78: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020735491125378758
    2. '[' → logprob: -8.50020694732666
    3. '[I' → logprob: -12.87520694732666
    4. '=' → logprob: -15.37520694732666
    5. ']' → logprob: -15.50020694732666
    6. '\[' → logprob: -16.250207901000977
    7. '[...]' → logprob: -16.375207901000977
    8. ' [' → logprob: -16.375207901000977
    9. '.setdefault' → logprob: -16.625207901000977
    10. 'i' → logprob: -17.000207901000977

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019269285257905722
    2. ']=' → logprob: -8.875192642211914
    3. ' ]' → logprob: -10.375192642211914
    4. ' =' → logprob: -11.500192642211914
    5. '=' → logprob: -12.125192642211914
    6. ' ' → logprob: -13.875192642211914
    7. '[' → logprob: -13.875192642211914
    8. '   ' → logprob: -14.250192642211914
    9. '']' → logprob: -14.375192642211914
    10. '"]' → logprob: -14.375192642211914

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08936351537704468
    2. '=' → logprob: -2.4643635749816895
    3. ']' → logprob: -7.8393635749816895
    4. ',' → logprob: -11.714363098144531
    5. ']=' → logprob: -12.089363098144531
    6. ')' → logprob: -12.589363098144531
    7. '<|end|>' → logprob: -12.964363098144531
    8. ' ' → logprob: -13.464363098144531
    9. '[' → logprob: -13.464363098144531
    10. 's' → logprob: -13.839363098144531

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1523628681898117
    2. 'p' → logprob: -2.277362823486328
    3. ' ' → logprob: -4.402362823486328
    4. ' p' → logprob: -4.777362823486328
    5. 'q' → logprob: -4.902362823486328
    6. '[' → logprob: -5.277362823486328
    7. '[p' → logprob: -5.652362823486328
    8. ' [' → logprob: -7.277362823486328
    9. ' q' → logprob: -7.527362823486328
    10. '[q' → logprob: -8.152362823486328

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13225069642066956
    2. 'p' → logprob: -2.2572507858276367
    3. '[' → logprob: -4.757250785827637
    4. '[p' → logprob: -5.632250785827637
    5. 'q' → logprob: -5.882250785827637
    6. ' ' → logprob: -5.882250785827637
    7. ' p' → logprob: -7.257250785827637
    8. ' [' → logprob: -8.507250785827637
    9. '[q' → logprob: -8.882250785827637
    10. '(p' → logprob: -9.132250785827637

Token 83: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6200718879699707
    2. ' 
' → logprob: -1.9950718879699707
    3. '<|end|>' → logprob: -2.1200718879699707
    4. ' ' → logprob: -2.4950718879699707
    5. '+' → logprob: -2.6200718879699707
    6. '    
' → logprob: -4.495071887969971
    7. '    ' → logprob: -4.995071887969971
    8. '        
' → logprob: -4.995071887969971
    9. '        ' → logprob: -4.995071887969971
    10. '   ' → logprob: -5.495071887969971

Token 84: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5148182511329651
    2. '<|end|>' → logprob: -1.6398181915283203
    3. '       ' → logprob: -2.2648181915283203
    4. ' 
' → logprob: -2.5148181915283203
    5. '    ' → logprob: -5.51481819152832
    6. '        
' → logprob: -5.76481819152832
    7. '    
' → logprob: -5.88981819152832
    8. '   ' → logprob: -6.13981819152832
    9. '        ' → logprob: -6.13981819152832
    10. '     
' → logprob: -6.26481819152832

Token 85: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.9273369312286377
    2. '   ' → logprob: -1.3023369312286377
    3. '       ' → logprob: -1.3023369312286377
    4. ' order' → logprob: -3.3023369312286377
    5. '           ' → logprob: -3.8023369312286377
    6. '	order' → logprob: -7.427336692810059
    7. ' ' → logprob: -7.552336692810059
    8. '  ' → logprob: -9.177336692810059
    9. '    ' → logprob: -9.677336692810059
    10. '     ' → logprob: -10.177336692810059

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03811929374933243
    2. '.' → logprob: -3.288119316101074
    3. '.app' → logprob: -9.788119316101074
    4. '.ap' → logprob: -11.538119316101074
    5. ' .' → logprob: -12.288119316101074
    6. '.extend' → logprob: -12.538119316101074
    7. '.add' → logprob: -13.413119316101074
    8. '.Append' → logprob: -14.538119316101074
    9. 'append' → logprob: -14.538119316101074
    10. '.setdefault' → logprob: -15.163119316101074

Token 87: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00020354038861114532
    2. '(' → logprob: -8.500203132629395
    3. '((' → logprob: -18.00020408630371
    4. '(
' → logprob: -18.62520408630371
    5. '(s' → logprob: -18.75020408630371
    6. '(I' → logprob: -20.37520408630371
    7. '(ii' → logprob: -20.75020408630371
    8. '(n' → logprob: -20.87520408630371
    9. '(data' → logprob: -21.37520408630371
    10. '(a' → logprob: -21.37520408630371

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002493729814887047
    2. ')
' → logprob: -6.002493858337402
    3. '       ' → logprob: -11.752493858337402
    4. '   ' → logprob: -12.377493858337402
    5. ' )' → logprob: -13.127493858337402
    6. '<|end|>' → logprob: -13.252493858337402
    7. '
' → logprob: -14.252493858337402
    8. ')
' → logprob: -15.377493858337402
    9. ')n' → logprob: -15.502493858337402
    10. ')

' → logprob: -15.627493858337402

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3848523795604706
    2. '<|end|>' → logprob: -2.134852409362793
    3. '   ' → logprob: -2.509852409362793
    4. ' sales' → logprob: -2.634852409362793
    5. ' 
' → logprob: -3.759852409362793
    6. '    
' → logprob: -5.634852409362793
    7. '	s' → logprob: -5.759852409362793
    8. '        
' → logprob: -5.759852409362793
    9. 's' → logprob: -6.134852409362793
    10. 'sales' → logprob: -6.259852409362793

Token 90: ' sales' (ID: 7155)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1398757123970427e-05
    2. '[' → logprob: -11.500011444091797
    3. '```' → logprob: -14.750011444091797
    4. 'i' → logprob: -14.875011444091797
    5. '[I' → logprob: -15.125011444091797
    6. ' [' → logprob: -16.375011444091797
    7. '<|end|>' → logprob: -17.375011444091797
    8. '[s' → logprob: -17.625011444091797
    9. '][' → logprob: -17.750011444091797
    10. '\[' → logprob: -17.750011444091797

Token 92: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014240846037864685
    2. ']+=' → logprob: -4.264240741729736
    3. ']+' → logprob: -9.639241218566895
    4. ')' → logprob: -12.139241218566895
    5. ' ]' → logprob: -12.264241218566895
    6. ' +=' → logprob: -14.764241218566895
    7. '']' → logprob: -14.764241218566895
    8. '+=' → logprob: -15.014241218566895
    9. '"]' → logprob: -15.764241218566895
    10. '+' → logprob: -15.764241218566895

Token 93: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1276998668909073
    2. ' +=' → logprob: -2.127699851989746
    3. '+' → logprob: -7.377699851989746
    4. '=' → logprob: -9.752699851989746
    5. ']+=' → logprob: -9.752699851989746
    6. '+=(' → logprob: -10.627699851989746
    7. '+='' → logprob: -13.002699851989746
    8. '+="' → logprob: -13.877699851989746
    9. '<|end|>' → logprob: -14.502699851989746
    10. ' ' → logprob: -14.502699851989746

Token 94: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.20143799483776093
    2. 'p' → logprob: -1.7014379501342773
    3. 'q' → logprob: -11.701437950134277
    4. ' ' → logprob: -12.076437950134277
    5. ' q' → logprob: -12.201437950134277
    6. '   ' → logprob: -12.951437950134277
    7. '(p' → logprob: -13.201437950134277
    8. ' (' → logprob: -14.451437950134277
    9. '(' → logprob: -15.326437950134277
    10. '  ' → logprob: -15.826437950134277

Token 95: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2752193510532379
    2. '*' → logprob: -1.6502193212509155
    3. '*q' → logprob: -3.025219440460205
    4. ' ' → logprob: -10.525218963623047
    5. ' ' → logprob: -12.025218963623047
    6. '*p' → logprob: -12.900218963623047
    7. '*object' → logprob: -14.400218963623047
    8. '   ' → logprob: -14.900218963623047
    9. '**' → logprob: -15.025218963623047
    10. 'q' → logprob: -15.025218963623047

Token 96: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.474081814289093
    2. ' q' → logprob: -0.974081814289093
    3. '	q' → logprob: -12.599081993103027
    4. ' ' → logprob: -13.849081993103027
    5. '<|end|>' → logprob: -15.349081993103027
    6. '*q' → logprob: -16.34908103942871
    7. ' ' → logprob: -16.72408103942871
    8. '    ' → logprob: -17.59908103942871
    9. '   ' → logprob: -17.84908103942871
    10. ''q' → logprob: -17.84908103942871

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05923605337738991
    2. '   ' → logprob: -3.0592360496520996
    3. 'for' → logprob: -5.3092360496521
    4. ' for' → logprob: -5.8092360496521
    5. '    
' → logprob: -7.1842360496521
    6. 'print' → logprob: -7.4342360496521
    7. '\n' → logprob: -7.5592360496521
    8. '<|end|>' → logprob: -8.184236526489258
    9. '  
' → logprob: -8.684236526489258
    10. '
' → logprob: -9.309236526489258

Token 98: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33648034930229187
    2. '   ' → logprob: -1.4614803791046143
    3. ' for' → logprob: -3.0864803791046143
    4. 'print' → logprob: -5.461480140686035
    5. '
' → logprob: -5.961480140686035
    6. '    
' → logprob: -7.086480140686035
    7. '```' → logprob: -8.336480140686035
    8. '  
' → logprob: -10.586480140686035
    9. '<|end|>' → logprob: -10.586480140686035
    10. 'total' → logprob: -10.586480140686035

Token 99: ' result' (ID: 1534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06516081839799881
    2. ' for' → logprob: -2.8151607513427734
    3. 'print' → logprob: -6.440160751342773
    4. 'total' → logprob: -6.815160751342773
    5. '
' → logprob: -8.190160751342773
    6. '   ' → logprob: -9.565160751342773
    7. ' print' → logprob: -10.190160751342773
    8. 'sum' → logprob: -10.565160751342773
    9. ' total' → logprob: -10.690160751342773
    10. '    
' → logprob: -10.815160751342773

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043960090726614
    2. '=' → logprob: -3.1689600944519043
    3. 's' → logprob: -7.043960094451904
    4. '_' → logprob: -10.418959617614746
    5. ':' → logprob: -10.793959617614746
    6. ' ' → logprob: -11.043959617614746
    7. ',' → logprob: -12.418959617614746
    8. '[]' → logprob: -12.793959617614746
    9. '[' → logprob: -13.168959617614746
    10. '[:]' → logprob: -13.168959617614746

Token 101: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.47169145941734314
    2. ' []' → logprob: -1.8466914892196655
    3. '0' → logprob: -2.971691370010376
    4. '""' → logprob: -3.096691370010376
    5. '"' → logprob: -3.221691370010376
    6. '[' → logprob: -3.596691370010376
    7. 'sum' → logprob: -3.721691370010376
    8. '[]
' → logprob: -4.596691608428955
    9. ' [' → logprob: -4.971691608428955
    10. ''' → logprob: -5.471691608428955

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28491032123565674
    2. 'for' → logprob: -1.7849103212356567
    3. ' for' → logprob: -2.534910202026367
    4. '<|end|>' → logprob: -7.409910202026367
    5. '
' → logprob: -9.159910202026367
    6. '	for' → logprob: -9.784910202026367
    7. '    
' → logprob: -10.784910202026367
    8. ' ' → logprob: -10.909910202026367
    9. '    ' → logprob: -12.159910202026367
    10. '  ' → logprob: -12.284910202026367

Token 103: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.049635615199804306
    2. ' for' → logprob: -3.049635648727417
    3. '   ' → logprob: -6.924635410308838
    4. 'result' → logprob: -10.174635887145996
    5. 'order' → logprob: -10.924635887145996
    6. ' ' → logprob: -12.799635887145996
    7. '	for' → logprob: -13.174635887145996
    8. '
' → logprob: -13.924635887145996
    9. 'total' → logprob: -14.299635887145996
    10. '    
' → logprob: -14.799635887145996

Token 104: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25609269738197327
    2. 'i' → logprob: -2.2560927867889404
    3. ' item' → logprob: -2.8810927867889404
    4. ' key' → logprob: -3.6310927867889404
    5. ' o' → logprob: -4.256092548370361
    6. 'item' → logprob: -5.006092548370361
    7. ' k' → logprob: -5.006092548370361
    8. 'k' → logprob: -5.881092548370361
    9. ' ' → logprob: -6.006092548370361
    10. 'o' → logprob: -6.131092548370361

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00442418223246932
    2. 'in' → logprob: -5.504424095153809
    3. ' ' → logprob: -8.004424095153809
    4. '	in' → logprob: -12.754424095153809
    5. ' i' → logprob: -13.254424095153809
    6. 'n' → logprob: -13.254424095153809
    7. ' ' → logprob: -13.254424095153809
    8. '  ' → logprob: -13.379424095153809
    9. '   ' → logprob: -14.879424095153809
    10. '    ' → logprob: -15.254424095153809

Token 106: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.1269323080778122
    2. ' order' → logprob: -2.126932382583618
    3. 'range' → logprob: -12.876932144165039
    4. ' range' → logprob: -13.626932144165039
    5. ' ' → logprob: -15.251932144165039
    6. '	order' → logprob: -16.12693214416504
    7. '(order' → logprob: -17.12693214416504
    8. '   ' → logprob: -17.50193214416504
    9. '$order' → logprob: -18.37693214416504
    10. 'answer' → logprob: -19.12693214416504

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005241583567112684
    2. ':
' → logprob: -5.255241394042969
    3. '):' → logprob: -13.755241394042969
    4. ',' → logprob: -13.755241394042969
    5. '):
' → logprob: -13.880241394042969
    6. ':

' → logprob: -14.130241394042969
    7. '<|end|>' → logprob: -14.255241394042969
    8. '=' → logprob: -14.755241394042969
    9. '[' → logprob: -14.755241394042969
    10. '   ' → logprob: -14.755241394042969

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021523471921682358
    2. '   ' → logprob: -4.271523475646973
    3. 'result' → logprob: -5.896523475646973
    4. ' result' → logprob: -6.021523475646973
    5. '
' → logprob: -7.271523475646973
    6. ':' → logprob: -7.521523475646973
    7. '    
' → logprob: -8.146523475646973
    8. '<|end|>' → logprob: -8.396523475646973
    9. '```' → logprob: -9.271523475646973
    10. '        
' → logprob: -9.521523475646973

Token 109: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12138474732637405
    2. ' result' → logprob: -2.371384859085083
    3. '   ' → logprob: -3.871384859085083
    4. '
' → logprob: -9.871384620666504
    5. '```' → logprob: -10.246384620666504
    6. ' if' → logprob: -11.371384620666504
    7. 'if' (adapté à ' if') → logprob: -11.496384620666504
    8. '       ' → logprob: -12.121384620666504
    9. '    
' → logprob: -12.621384620666504
    10. '	result' → logprob: -12.621384620666504

Token 110: ' sales' (ID: 7155)
  Prédit: ' sales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sales' → logprob: -0.25195103883743286
    2. 'sales' → logprob: -1.501950979232788
    3. ' i' → logprob: -11.751951217651367
    4. 'i' → logprob: -12.126951217651367
    5. '   ' → logprob: -13.126951217651367
    6. 'sale' → logprob: -13.501951217651367
    7. ' sale' → logprob: -13.751951217651367
    8. '_sales' → logprob: -13.751951217651367
    9. 's' → logprob: -14.126951217651367
    10. '.sales' → logprob: -14.876951217651367

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -11.875008583068848
    3. '[s' → logprob: -14.625008583068848
    4. '[I' → logprob: -15.375008583068848
    5. ' [' → logprob: -15.500008583068848
    6. '[in' → logprob: -16.62500762939453
    7. '.get' → logprob: -17.12500762939453
    8. '[int' → logprob: -17.37500762939453
    9. '\[' → logprob: -17.62500762939453
    10. '.setdefault' → logprob: -17.75000762939453

Token 112: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09247436374425888
    2. ' !=' → logprob: -3.4674744606018066
    3. ' %' → logprob: -3.7174744606018066
    4. ' >=' → logprob: -4.717474460601807
    5. '>' → logprob: -4.842474460601807
    6. ')' → logprob: -5.717474460601807
    7. ' ' → logprob: -5.717474460601807
    8. '%' → logprob: -5.967474460601807
    9. ' ==' → logprob: -5.967474460601807
    10. ' <' → logprob: -6.217474460601807

Token 113: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09721981734037399
    2. '>' → logprob: -3.097219705581665
    3. ' !=' → logprob: -3.847219705581665
    4. ' %' → logprob: -4.347219944000244
    5. ' >=' → logprob: -5.222219944000244
    6. '%' → logprob: -6.097219944000244
    7. ' ==' → logprob: -6.347219944000244
    8. '!=' → logprob: -6.597219944000244
    9. '<|end|>' → logprob: -6.972219944000244
    10. ' <' → logprob: -7.722219944000244

Token 114: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03800935670733452
    2. ' ' → logprob: -3.5380094051361084
    3. '500' → logprob: -5.788009166717529
    4. '10' → logprob: -6.663009166717529
    5. '200' → logprob: -6.788009166717529
    6. '300' → logprob: -7.038009166717529
    7. '   ' → logprob: -7.788009166717529
    8. '150' → logprob: -8.038009643554688
    9. '1' → logprob: -8.288009643554688
    10. '50' → logprob: -9.163009643554688

Token 115: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.008476519957184792
    2. '500' → logprob: -5.633476734161377
    3. '200' → logprob: -6.008476734161377
    4. '300' → logprob: -7.133476734161377
    5. '10' → logprob: -7.508476734161377
    6. '150' → logprob: -8.008476257324219
    7. '50' → logprob: -9.008476257324219
    8. ' ' → logprob: -9.383476257324219
    9. '0' → logprob: -9.633476257324219
    10. '1' → logprob: -9.633476257324219

Token 116: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4332681894302368
    2. ':' → logprob: -1.3082681894302368
    3. '000' → logprob: -3.0582680702209473
    4. '00' → logprob: -3.4332680702209473
    5. ' ' → logprob: -6.808268070220947
    6. ':
' → logprob: -8.058268547058105
    7. ' :' → logprob: -8.558268547058105
    8. '   ' → logprob: -9.058268547058105
    9. '':' → logprob: -9.620768547058105
    10. ':

' → logprob: -9.683268547058105

Token 117: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5770062208175659
    2. ':
' → logprob: -0.8270062208175659
    3. '0' → logprob: -7.0770063400268555
    4. ' :
' → logprob: -9.577006340026855
    5. '   ' → logprob: -9.827006340026855
    6. ':
' → logprob: -10.577006340026855
    7. ' :' → logprob: -10.952006340026855
    8. ':

' → logprob: -11.077006340026855
    9. '):
' → logprob: -11.577006340026855
    10. '       ' → logprob: -11.827006340026855

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4742231070995331
    2. ':
' → logprob: -0.9742231369018555
    3. '       ' → logprob: -9.849223136901855
    4. '   ' → logprob: -10.474223136901855
    5. ':

' → logprob: -10.974223136901855
    6. '):
' → logprob: -11.474223136901855
    7. ':
' → logprob: -11.474223136901855
    8. ' and' → logprob: -11.724223136901855
    9. ' :
' → logprob: -12.099223136901855
    10. '0' → logprob: -12.849223136901855

Token 119: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21836890280246735
    2. ':' → logprob: -2.0933690071105957
    3. '
' → logprob: -3.5933690071105957
    4. '           ' → logprob: -3.9683690071105957
    5. ':
' → logprob: -4.218369007110596
    6. '   ' → logprob: -5.343369007110596
    7. ' :' → logprob: -7.218369007110596
    8. '\n' → logprob: -7.468369007110596
    9. 'print' → logprob: -7.593369007110596
    10. '    
' → logprob: -7.968369007110596

Token 120: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.3280324339866638
    2. 'result' (adapté à ' result') → logprob: -1.9530324935913086
    3. '       ' → logprob: -2.0780324935913086
    4. '   ' → logprob: -4.703032493591309
    5. '    ' → logprob: -6.453032493591309
    6. '
' → logprob: -8.078032493591309
    7. '	result' → logprob: -8.390532493591309
    8. ' print' → logprob: -8.453032493591309
    9. ' 
' → logprob: -9.078032493591309
    10. '    
' → logprob: -9.328032493591309

Token 121: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007621295750141144
    2. '.' → logprob: -4.8826212882995605
    3. '.extend' → logprob: -11.882621765136719
    4. '.add' → logprob: -12.257621765136719
    5. ' .' → logprob: -13.632621765136719
    6. '.app' → logprob: -14.632621765136719
    7. '.push' → logprob: -14.632621765136719
    8. '.Append' → logprob: -14.632621765136719
    9. 'append' → logprob: -15.257621765136719
    10. '.insert' → logprob: -16.00762176513672

Token 122: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05811686813831329
    2. '(' → logprob: -3.933116912841797
    3. '(f' → logprob: -4.058116912841797
    4. '((' → logprob: -4.683116912841797
    5. '('' → logprob: -5.183116912841797
    6. '("' → logprob: -5.683116912841797
    7. '("'' → logprob: -8.558116912841797
    8. '("'"' → logprob: -8.683116912841797
    9. '(True' → logprob: -8.808116912841797
    10. '('"' → logprob: -8.933116912841797

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009311101748608053
    2. '+' → logprob: -7.500931262969971
    3. ' +' → logprob: -8.500930786132812
    4. ')
' → logprob: -9.250930786132812
    5. '*' → logprob: -11.375930786132812
    6. '+)' → logprob: -11.375930786132812
    7. '   ' → logprob: -11.500930786132812
    8. ' )' → logprob: -11.625930786132812
    9. '[' → logprob: -12.500930786132812
    10. '))' → logprob: -12.500930786132812

Token 124: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.44107186794281006
    2. '   ' → logprob: -1.19107186794281
    3. '
' → logprob: -3.4410719871520996
    4. ' print' → logprob: -4.3160719871521
    5. '    
' → logprob: -5.4410719871521
    6. 'for' → logprob: -7.4410719871521
    7. ' if' → logprob: -7.5660719871521
    8. ' 
' → logprob: -7.9410719871521
    9. 'if' → logprob: -8.066071510314941
    10. ' for' → logprob: -8.066071510314941

Token 125: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04785694181919098
    2. 'if' (adapté à ' if') → logprob: -3.4228570461273193
    3. '   ' → logprob: -4.42285680770874
    4. 'for' → logprob: -6.92285680770874
    5. ' if' → logprob: -7.54785680770874
    6. '
' → logprob: -8.547857284545898
    7. ' print' → logprob: -8.797857284545898
    8. 'result' → logprob: -9.172857284545898
    9. '```' → logprob: -9.672857284545898
    10. '    
' → logprob: -10.047857284545898

Token 126: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.08284115046262741
    2. ' len' → logprob: -2.582841157913208
    3. 'result' → logprob: -5.707840919494629
    4. ' not' → logprob: -7.832840919494629
    5. 'len' → logprob: -8.582840919494629
    6. ' ' → logprob: -10.207840919494629
    7. 'not' → logprob: -13.957840919494629
    8. ' ' → logprob: -14.332840919494629
    9. '(result' → logprob: -14.957840919494629
    10. '  ' → logprob: -15.082840919494629

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002526376338209957
    2. '==' → logprob: -8.500252723693848
    3. ' ==' → logprob: -10.250252723693848
    4. ':
' → logprob: -12.375252723693848
    5. '):' → logprob: -12.875252723693848
    6. '>:' → logprob: -13.250252723693848
    7. ' :' → logprob: -13.625252723693848
    8. '[:]' → logprob: -14.125252723693848
    9. '!=' → logprob: -14.375252723693848
    10. '>' → logprob: -14.625252723693848

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1307656466960907
    2. ':' → logprob: -2.130765676498413
    3. ':
' → logprob: -5.630765438079834
    4. '   ' → logprob: -9.255765914916992
    5. 'print' → logprob: -10.005765914916992
    6. ' print' → logprob: -10.630765914916992
    7. '
' → logprob: -10.880765914916992
    8. ',' → logprob: -11.380765914916992
    9. '):
' → logprob: -11.755765914916992
    10. '<|end|>' → logprob: -12.255765914916992

Token 129: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.049395106732845306
    2. ' print' → logprob: -3.1743950843811035
    3. '   ' → logprob: -5.6743950843811035
    4. 'for' (adapté à ' for') → logprob: -6.1743950843811035
    5. ' for' → logprob: -7.2993950843811035
    6. '       ' → logprob: -8.674395561218262
    7. '```' → logprob: -12.549395561218262
    8. '	print' → logprob: -13.049395561218262
    9. '           ' → logprob: -13.299395561218262
    10. ' ' → logprob: -13.424395561218262

Token 130: ' r' (ID: 428)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.6497061848640442
    2. 'item' → logprob: -1.2747061252593994
    3. 'i' → logprob: -2.0247061252593994
    4. ' i' → logprob: -3.0247061252593994
    5. ' name' → logprob: -5.6497063636779785
    6. 'name' → logprob: -5.8997063636779785
    7. 'r' → logprob: -6.2747063636779785
    8. ' x' → logprob: -6.2747063636779785
    9. ' r' → logprob: -6.5247063636779785
    10. 'x' → logprob: -6.5247063636779785

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017086135921999812
    2. 'in' → logprob: -6.376708507537842
    3. ' ' → logprob: -12.126708984375
    4. '	in' → logprob: -15.126708984375
    5. ' i' → logprob: -15.626708984375
    6. '  ' → logprob: -15.876708984375
    7. 'n' → logprob: -16.126708984375
    8. ',' → logprob: -16.126708984375
    9. 'r' → logprob: -16.251708984375
    10. 'i' → logprob: -17.251708984375

Token 132: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04858975484967232
    2. ' result' → logprob: -3.0485897064208984
    3. '(result' → logprob: -13.548589706420898
    4. 'sorted' → logprob: -13.923589706420898
    5. '   ' → logprob: -16.1735897064209
    6. ' sorted' → logprob: -16.5485897064209
    7. 'range' → logprob: -16.5485897064209
    8. '	result' → logprob: -17.1735897064209
    9. ' ' → logprob: -17.9235897064209
    10. 'r' → logprob: -18.5485897064209

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16270285844802856
    2. ':
' → logprob: -1.9127027988433838
    3. '():
' → logprob: -6.162703037261963
    4. 'print' → logprob: -9.162702560424805
    5. '():' → logprob: -9.537702560424805
    6. '           ' → logprob: -9.787702560424805
    7. '):
' → logprob: -10.287702560424805
    8. '       ' → logprob: -10.537702560424805
    9. '()' → logprob: -11.037702560424805
    10. '.print' → logprob: -11.912702560424805

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010520312935113907
    2. ':
' → logprob: -5.5105204582214355
    3. 'print' → logprob: -6.0105204582214355
    4. '
' → logprob: -6.3855204582214355
    5. ' print' → logprob: -6.8855204582214355
    6. '       ' → logprob: -7.1355204582214355
    7. ':' → logprob: -8.385519981384277
    8. '   ' → logprob: -10.135519981384277
    9. '               ' → logprob: -10.260519981384277
    10. '<|end|>' → logprob: -11.135519981384277

Token 135: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6572710871696472
    2. '           ' → logprob: -1.282271146774292
    3. ' print' → logprob: -1.657271146774292
    4. '
' → logprob: -4.782270908355713
    5. '               ' → logprob: -6.032270908355713
    6. '       ' → logprob: -6.282270908355713
    7. '   ' → logprob: -7.907270908355713
    8. '
' → logprob: -8.782271385192871
    9. '```' → logprob: -8.782271385192871
    10. '	print' → logprob: -9.032271385192871

Token 136: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.09414631873369217
    2. '(' → logprob: -2.594146251678467
    3. '('' → logprob: -4.969146251678467
    4. '(f' → logprob: -4.969146251678467
    5. '("' → logprob: -6.719146251678467
    6. '("("' → logprob: -10.969146728515625
    7. '()' → logprob: -11.844146728515625
    8. ' (' → logprob: -13.094146728515625
    9. '((' → logprob: -13.219146728515625
    10. 'r' → logprob: -13.594146728515625

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.440506407059729e-05
    2. ')
' → logprob: -10.37503433227539
    3. ' )' → logprob: -13.75003433227539
    4. '())' → logprob: -13.75003433227539
    5. '()' → logprob: -15.12503433227539
    6. '')' → logprob: -16.00003433227539
    7. '```' → logprob: -16.00003433227539
    8. ')`' → logprob: -16.12503433227539
    9. '))' → logprob: -16.25003433227539
    10. '   ' → logprob: -16.50003433227539

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6982066631317139
    2. '<|end|>' → logprob: -1.3232066631317139
    3. 'else' → logprob: -1.5732066631317139
    4. ' else' → logprob: -3.698206663131714
    5. '```' → logprob: -6.698206901550293
    6. '<|end|>' → logprob: -6.823206901550293
    7. '
' → logprob: -7.573206901550293
    8. '	else' → logprob: -7.823206901550293
    9. '    
' → logprob: -8.573206901550293
    10. 'elif' → logprob: -9.198206901550293

Token 139: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.008874074555933475
    2. ' else' → logprob: -4.75887393951416
    3. '   ' → logprob: -8.25887393951416
    4. 'elif' → logprob: -15.25887393951416
    5. 'print' → logprob: -16.008874893188477
    6. '	else' → logprob: -16.258874893188477
    7. '_else' → logprob: -17.133874893188477
    8. '```' → logprob: -17.258874893188477
    9. ' ' → logprob: -17.883874893188477
    10. '    ' → logprob: -18.008874893188477

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037890311796218157
    2. ':
' → logprob: -5.628788948059082
    3. '       ' → logprob: -8.628788948059082
    4. '   ' → logprob: -12.378788948059082
    5. ' :' → logprob: -12.378788948059082
    6. '():' → logprob: -14.753788948059082
    7. ' :
' → logprob: -15.003788948059082
    8. ':

' → logprob: -16.0037899017334
    9. '           ' → logprob: -16.1287899017334
    10. '<|end|>' → logprob: -16.1287899017334

Token 141: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6966168284416199
    2. '       ' → logprob: -0.6966168284416199
    3. ' print' → logprob: -6.0716166496276855
    4. 'print' → logprob: -7.0716166496276855
    5. '	   ' → logprob: -8.821617126464844
    6. '    ' → logprob: -9.571617126464844
    7. '	print' → logprob: -11.196617126464844
    8. '     ' → logprob: -11.446617126464844
    9. '```' → logprob: -11.446617126464844
    10. '           ' → logprob: -11.446617126464844

Token 142: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4102247357368469
    2. ' print' → logprob: -1.1602246761322021
    3. '   ' → logprob: -3.785224676132202
    4. '    ' → logprob: -8.410224914550781
    5. '	print' → logprob: -9.660224914550781
    6. '       ' → logprob: -9.910224914550781
    7. ' ' → logprob: -11.160224914550781
    8. '  ' → logprob: -11.660224914550781
    9. '    
' → logprob: -12.535224914550781
    10. '```' → logprob: -12.535224914550781

Token 143: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.80460125207901
    2. '(' → logprob: -1.3046011924743652
    3. '('' → logprob: -1.4296011924743652
    4. '()' → logprob: -3.1796011924743652
    5. '(-' → logprob: -8.929601669311523
    6. '(None' → logprob: -9.179601669311523
    7. '("")' → logprob: -9.804601669311523
    8. '('?' → logprob: -11.054601669311523
    9. '(`' → logprob: -11.304601669311523
    10. '("("' → logprob: -11.304601669311523

Token 144: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.01280662976205349
    2. '-' → logprob: -4.637806415557861
    3. 'No' → logprob: -6.887806415557861
    4. 'None' → logprob: -8.26280689239502
    5. 'Sorry' → logprob: -8.63780689239502
    6. 'NO' → logprob: -8.88780689239502
    7. '0' → logprob: -9.01280689239502
    8. '"' → logprob: -9.20030689239502
    9. 'na' → logprob: -9.51280689239502
    10. 'Nak' → logprob: -9.57530689239502

Token 145: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -8.017927029868588e-05
    2. ')' → logprob: -9.750080108642578
    3. ')")' → logprob: -10.875080108642578
    4. '")
' → logprob: -12.875080108642578
    5. '"' → logprob: -15.375080108642578
    6. '')' → logprob: -16.750080108642578
    7. '}")' → logprob: -18.125080108642578
    8. '!")' → logprob: -18.250080108642578
    9. '")
' → logprob: -18.375080108642578
    10. ' ")' → logprob: -18.500080108642578


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 143
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 121
Précision stricte (1ère position): 43.36%
Précision adaptée (1ère position): 48.25%
Précision (top 10): 84.62%
================================================================================
