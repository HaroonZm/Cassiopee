================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

M,N=map(int,input().split())
P=[int(input()) for _ in range(M)]
boxes=[tuple(map(int,input().split())) for _ in range(N)]

P.sort(reverse=True)

dp=[float('-inf')]*(M+1)
dp[0]=0
for c,e in boxes:
    for i in range(M-c,-1,-1):
        val=sum(P[i:i+c]) - e
        if dp[i]+val>dp[i+c]:
            dp[i+c]=dp[i]+val

print(max(0,max(dp)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030854942742735147
    2. '.' → logprob: -5.878085613250732
    3. '(
' → logprob: -8.628085136413574
    4. ' (' → logprob: -10.878085136413574
    5. '(

' → logprob: -11.503085136413574
    6. '('' → logprob: -11.503085136413574
    7. ')' → logprob: -11.628085136413574
    8. ''' → logprob: -11.628085136413574
    9. '()' → logprob: -11.753085136413574
    10. '=' → logprob: -12.253085136413574

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003986144147347659
    2. '.readline' → logprob: -8.500398635864258
    3. ' .' → logprob: -9.250398635864258
    4. '.
' → logprob: -10.500398635864258
    5. '[' → logprob: -10.625398635864258
    6. '.get' → logprob: -12.125398635864258
    7. '.setdefault' → logprob: -12.375398635864258
    8. '```' → logprob: -12.375398635864258
    9. '.

' → logprob: -12.625398635864258
    10. ''.' → logprob: -12.875398635864258

Token 6: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.08321286737918854
    2. '.' → logprob: -2.5832128524780273
    3. '.read' → logprob: -5.458212852478027
    4. '.Read' → logprob: -10.958212852478027
    5. '.readlines' → logprob: -11.583212852478027
    6. '```' → logprob: -11.833212852478027
    7. '.get' → logprob: -12.583212852478027
    8. '.READ' → logprob: -13.583212852478027
    9. '.\' → logprob: -13.708212852478027
    10. '.next' → logprob: -13.708212852478027

Token 7: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020644422620534897
    2. '(' → logprob: -4.395644187927246
    3. '().' → logprob: -4.895644187927246
    4. '()
' → logprob: -7.895644187927246
    5. '(
' → logprob: -9.645644187927246
    6. '()\' → logprob: -9.770644187927246
    7. ')' → logprob: -10.270644187927246
    8. '()

' → logprob: -10.770644187927246
    9. '
' → logprob: -11.520644187927246
    10. ' ()' → logprob: -11.645644187927246

Token 8: 'M' (ID: 44)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5767456889152527
    2. '(' → logprob: -0.8267456889152527
    3. '().' → logprob: -8.326745986938477
    4. '(
' → logprob: -8.326745986938477
    5. '()
' → logprob: -8.576745986938477
    6. '()

' → logprob: -10.701745986938477
    7. ')' → logprob: -11.326745986938477
    8. '\(' → logprob: -11.326745986938477
    9. '("")' → logprob: -11.576745986938477
    10. '.' → logprob: -11.826745986938477

Token 9: ',N' (ID: 49539)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.701728343963623
    2. '=' → logprob: -1.076728343963623
    3. 'a' → logprob: -2.326728343963623
    4. '.' → logprob: -3.951728343963623
    5. ')' → logprob: -4.326728343963623
    6. ',' → logprob: -4.701728343963623
    7. '[' → logprob: -4.826728343963623
    8. '=int' → logprob: -5.576728343963623
    9. '_' → logprob: -5.701728343963623
    10. 's' → logprob: -5.826728343963623

Token 10: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4402416944503784
    2. ',' → logprob: -1.6902416944503784
    3. ' =' → logprob: -1.8152416944503784
    4. '<|end|>' → logprob: -5.315241813659668
    5. ')' → logprob: -6.565241813659668
    6. ' ' → logprob: -7.815241813659668
    7. ' ,' → logprob: -8.190241813659668
    8. '[' → logprob: -8.565241813659668
    9. '=input' → logprob: -8.565241813659668
    10. '```' → logprob: -8.815241813659668

Token 11: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12699352204799652
    2. ' map' → logprob: -2.126993417739868
    3. 'list' → logprob: -9.876993179321289
    4. ' list' → logprob: -12.501993179321289
    5. 'int' → logprob: -13.001993179321289
    6. ' ' → logprob: -13.251993179321289
    7. '[' → logprob: -13.376993179321289
    8. 'input' → logprob: -13.376993179321289
    9. '0' → logprob: -14.001993179321289
    10. '(map' → logprob: -14.251993179321289

Token 12: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.501224935054779
    2. '(int' → logprob: -1.0012249946594238
    3. '(lambda' → logprob: -4.126224994659424
    4. '(str' → logprob: -4.626224994659424
    5. '(input' → logprob: -8.626224517822266
    6. '(tuple' → logprob: -8.626224517822266
    7. '(
' → logprob: -9.126224517822266
    8. '(list' → logprob: -9.251224517822266
    9. '(len' → logprob: -9.876224517822266
    10. '[int' → logprob: -10.376224517822266

Token 13: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.7639974355697632
    2. ',' → logprob: -0.8889974355697632
    3. ',int' → logprob: -2.1389975547790527
    4. '(' → logprob: -6.388997554779053
    5. ',(' → logprob: -6.763997554779053
    6. ',str' → logprob: -7.263997554779053
    7. ',float' → logprob: -7.763997554779053
    8. ',line' → logprob: -8.138997077941895
    9. ',list' → logprob: -8.513997077941895
    10. '(sys' → logprob: -8.513997077941895

Token 14: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03879735618829727
    2. '())' → logprob: -3.288797378540039
    3. '()' → logprob: -7.788797378540039
    4. ')' → logprob: -8.038797378540039
    5. '(' → logprob: -12.288797378540039
    6. '(),' → logprob: -12.538797378540039
    7. '()))' → logprob: -12.788797378540039
    8. '());' → logprob: -13.413797378540039
    9. '()),' → logprob: -13.538797378540039
    10. '()[' → logprob: -13.913797378540039

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00904823001474142
    2. 'strip' → logprob: -4.7590484619140625
    3. 'rstrip' → logprob: -7.7590484619140625
    4. ' split' → logprob: -12.509048461914062
    5. ')' → logprob: -13.009048461914062
    6. 'read' → logprob: -15.134048461914062
    7. 'rs' → logprob: -15.509048461914062
    8. '(split' → logprob: -15.509048461914062
    9. 'rst' → logprob: -16.384048461914062
    10. 'spl' → logprob: -16.384048461914062

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.7689099018462e-05
    2. '))' → logprob: -9.62508773803711
    3. '())' → logprob: -11.50008773803711
    4. '()' → logprob: -12.00008773803711
    5. '(' → logprob: -13.62508773803711
    6. '),' → logprob: -13.87508773803711
    7. '`)' → logprob: -14.25008773803711
    8. ')`' → logprob: -14.50008773803711
    9. '')' → logprob: -14.75008773803711
    10. ' )' → logprob: -15.37508773803711

Token 17: 'P' (ID: 47)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6675482392311096
    2. 'matrix' → logprob: -1.5425481796264648
    3. 'board' → logprob: -2.542548179626465
    4. 'grid' → logprob: -3.042548179626465
    5. 'arr' → logprob: -3.292548179626465
    6. 'data' → logprob: -3.917548179626465
    7. 'A' → logprob: -4.167548179626465
    8. 'a' → logprob: -4.542548179626465
    9. 'lst' → logprob: -4.542548179626465
    10. 'array' → logprob: -4.792548179626465

Token 18: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1969125121831894
    2. 'r' → logprob: -2.6969125270843506
    3. '=[]' → logprob: -2.8219125270843506
    4. ' =' → logprob: -4.4469122886657715
    5. 'l' → logprob: -5.9469122886657715
    6. 'matrix' → logprob: -6.1969122886657715
    7. '=[' → logprob: -6.4469122886657715
    8. 'op' → logprob: -6.5719122886657715
    9. '_list' → logprob: -6.5719122886657715
    10. ')' → logprob: -6.5719122886657715

Token 19: 'int' (ID: 491)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2713102102279663
    2. 'int' → logprob: -1.6463102102279663
    3. '0' → logprob: -3.271310329437256
    4. '[]' → logprob: -5.646310329437256
    5. '[int' → logprob: -7.021310329437256
    6. 'tuple' → logprob: -7.021310329437256
    7. ']' → logprob: -7.646310329437256
    8. 'False' → logprob: -8.271309852600098
    9. ' list' → logprob: -8.646309852600098
    10. '(int' → logprob: -9.021309852600098

Token 20: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16102397441864014
    2. '(' → logprob: -2.0360240936279297
    3. '(x' → logprob: -4.28602409362793
    4. '()' → logprob: -5.78602409362793
    5. '(i' → logprob: -7.03602409362793
    6. '()]' → logprob: -8.78602409362793
    7. ']' → logprob: -9.41102409362793
    8. '(a' → logprob: -9.66102409362793
    9. '(
' → logprob: -9.91102409362793
    10. '(

' → logprob: -10.03602409362793

Token 21: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00045736716128885746
    2. '()' → logprob: -8.250457763671875
    3. '()]' → logprob: -9.250457763671875
    4. ')' → logprob: -9.875457763671875
    5. '().' → logprob: -10.625457763671875
    6. '())
' → logprob: -11.750457763671875
    7. '()))' → logprob: -12.125457763671875
    8. '()),' → logprob: -12.500457763671875
    9. ')]' → logprob: -12.625457763671875
    10. ')])' → logprob: -13.750457763671875

Token 22: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05838442221283913
    2. ')' → logprob: -2.933384418487549
    3. '())' → logprob: -6.683384418487549
    4. 'for' → logprob: -6.808384418487549
    5. '()]' → logprob: -7.558384418487549
    6. ' for' → logprob: -8.433384895324707
    7. '(' → logprob: -8.433384895324707
    8. ')]' → logprob: -9.683384895324707
    9. ']' → logprob: -9.808384895324707
    10. '(i' → logprob: -10.433384895324707

Token 23: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.015649287030100822
    2. '_' → logprob: -4.390649318695068
    3. ' _' → logprob: -6.390649318695068
    4. 'range' → logprob: -7.265649318695068
    5. ' ' → logprob: -7.390649318695068
    6. '_range' → logprob: -9.76564884185791
    7. ' in' → logprob: -10.01564884185791
    8. '	range' → logprob: -10.76564884185791
    9. '(range' → logprob: -11.64064884185791
    10. ' i' → logprob: -12.14064884185791

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.943398118019104
    2. 'range' → logprob: -1.193398118019104
    3. 'in' → logprob: -1.568398118019104
    4. ' range' → logprob: -2.3183979988098145
    5. '(range' → logprob: -8.318398475646973
    6. '_' → logprob: -8.443398475646973
    7. '	range' → logprob: -9.193398475646973
    8. ' ' → logprob: -10.193398475646973
    9. '  ' → logprob: -10.693398475646973
    10. '_range' → logprob: -10.693398475646973

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000158842682139948
    2. ' range' → logprob: -8.75015926361084
    3. '(range' → logprob: -15.25015926361084
    4. '	range' → logprob: -16.875158309936523
    5. '[' → logprob: -19.375158309936523
    6. 'P' → logprob: -19.750158309936523
    7. '.range' → logprob: -19.875158309936523
    8. 'M' → logprob: -20.000158309936523
    9. '```' → logprob: -20.000158309936523
    10. ')' → logprob: -20.125158309936523

Token 26: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.000531467841938138
    2. '(' → logprob: -7.7505316734313965
    3. '(N' → logprob: -9.250531196594238
    4. 'M' → logprob: -12.375531196594238
    5. '(
' → logprob: -15.375531196594238
    6. ')' → logprob: -16.000532150268555
    7. ' (' → logprob: -17.000532150268555
    8. '(

' → logprob: -17.500532150268555
    9. '(n' → logprob: -17.625532150268555
    10. '(int' → logprob: -18.000532150268555

Token 27: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004657968878746033
    2. ']' → logprob: -6.004657745361328
    3. ')' → logprob: -6.129657745361328
    4. '])]' → logprob: -14.129657745361328
    5. ')])' → logprob: -14.504657745361328
    6. '])' → logprob: -15.004657745361328
    7. ')],' → logprob: -15.129657745361328
    8. ' )' → logprob: -16.004657745361328
    9. ')]
' → logprob: -16.129657745361328
    10. '))' → logprob: -16.129657745361328

Token 28: 'boxes' (ID: 49577)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.07867119461297989
    2. '
' → logprob: -2.9536712169647217
    3. 's' → logprob: -5.703670978546143
    4. 'for' → logprob: -5.828670978546143
    5. '[' → logprob: -5.953670978546143
    6. 'sorted' → logprob: -6.078670978546143
    7. '```' → logprob: -6.578670978546143
    8. 'result' → logprob: -6.578670978546143
    9. '=' → logprob: -7.328670978546143
    10. '#' → logprob: -7.328670978546143

Token 29: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12771497666835785
    2. '=[]' → logprob: -2.5027148723602295
    3. ' =' → logprob: -3.3777148723602295
    4. '=[' → logprob: -6.127715110778809
    5. '[' → logprob: -7.002715110778809
    6. '_' → logprob: -8.377715110778809
    7. '.' → logprob: -8.877715110778809
    8. '=[]
' → logprob: -9.252715110778809
    9. '[:]' → logprob: -9.252715110778809
    10. '_sizes' → logprob: -10.002715110778809

Token 30: 'tuple' (ID: 52834)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5803654789924622
    2. 'int' → logprob: -1.7053654193878174
    3. '[]' → logprob: -1.9553654193878174
    4. 'list' → logprob: -2.5803654193878174
    5. '[' → logprob: -4.8303656578063965
    6. '[int' → logprob: -4.9553656578063965
    7. ']' → logprob: -5.0803656578063965
    8. 'False' → logprob: -5.0803656578063965
    9. 'N' → logprob: -5.8303656578063965
    10. '1' → logprob: -6.0803656578063965

Token 31: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.011458735913038254
    2. '(input' → logprob: -4.636458873748779
    3. '(int' → logprob: -6.511458873748779
    4. '(' → logprob: -9.136458396911621
    5. 'map' → logprob: -9.386458396911621
    6. '(list' → logprob: -11.386458396911621
    7. 'input' → logprob: -12.636458396911621
    8. '(sorted' → logprob: -12.761458396911621
    9. ' map' → logprob: -14.011458396911621
    10. '((' → logprob: -14.011458396911621

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019966813270002604
    2. 'int' → logprob: -6.7519965171813965
    3. ',int' → logprob: -7.2519965171813965
    4. '[int' → logprob: -9.876996994018555
    5. '<int' → logprob: -10.751996994018555
    6. '=int' → logprob: -11.001996994018555
    7. ']int' → logprob: -11.751996994018555
    8. ' int' → logprob: -12.126996994018555
    9. 'list' → logprob: -12.376996994018555
    10. '(' → logprob: -13.001996994018555

Token 33: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0023685127962380648
    2. ',' → logprob: -6.377368450164795
    3. '(input' → logprob: -7.502368450164795
    4. ',int' → logprob: -9.252368927001953
    5. 'input' → logprob: -11.377368927001953
    6. ' ,' → logprob: -12.752368927001953
    7. '(' → logprob: -13.252368927001953
    8. ' input' → logprob: -13.627368927001953
    9. ',(' → logprob: -15.127368927001953
    10. '=input' → logprob: -15.252368927001953

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1160349458805285e-05
    2. '()' → logprob: -11.500011444091797
    3. ' ().' → logprob: -14.375011444091797
    4. '.' → logprob: -16.125011444091797
    5. '(' → logprob: -16.125011444091797
    6. '()))' → logprob: -16.500011444091797
    7. '.split' → logprob: -16.500011444091797
    8. 'split' → logprob: -17.125011444091797
    9. '   ' → logprob: -18.125011444091797
    10. ')' → logprob: -18.125011444091797

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5094070477061905e-05
    2. 'strip' → logprob: -11.250015258789062
    3. 'rstrip' → logprob: -13.625015258789062
    4. ' split' → logprob: -14.250015258789062
    5. '(split' → logprob: -15.500015258789062
    6. '().' → logprob: -18.000015258789062
    7. ' ' → logprob: -18.625015258789062
    8. 'spl' → logprob: -19.125015258789062
    9. '```' → logprob: -19.125015258789062
    10. '.split' → logprob: -19.375015258789062

Token 36: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.12938541173934937
    2. '))' → logprob: -2.129385471343994
    3. '())' → logprob: -6.754385471343994
    4. '()' → logprob: -6.754385471343994
    5. '(' → logprob: -10.129384994506836
    6. '()))
' → logprob: -10.254384994506836
    7. ')' → logprob: -10.254384994506836
    8. ' ))' → logprob: -13.254384994506836
    9. '())))' → logprob: -13.254384994506836
    10. '()));' → logprob: -13.504384994506836

Token 37: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13670465350151062
    2. ')' → logprob: -2.761704683303833
    3. ' for' → logprob: -3.011704683303833
    4. '()' → logprob: -4.761704444885254
    5. '(' → logprob: -5.511704444885254
    6. '(M' → logprob: -7.011704444885254
    7. '(N' → logprob: -7.511704444885254
    8. '(i' → logprob: -8.136704444885254
    9. ')]' → logprob: -8.511704444885254
    10. '(P' → logprob: -8.886704444885254

Token 38: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02902435138821602
    2. 'range' → logprob: -3.779024362564087
    3. '_' → logprob: -5.279024124145508
    4. '(range' → logprob: -7.904024124145508
    5. ' in' → logprob: -8.654024124145508
    6. '_range' → logprob: -9.529024124145508
    7. ' _' → logprob: -10.029024124145508
    8. '	range' → logprob: -13.654024124145508
    9. ' ' → logprob: -14.279024124145508
    10. '(' → logprob: -14.529024124145508

Token 39: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20248447358608246
    2. 'range' → logprob: -1.7024844884872437
    3. ' in' → logprob: -6.952484607696533
    4. '(range' → logprob: -9.327484130859375
    5. 'in' → logprob: -10.827484130859375
    6. ' ' → logprob: -13.327484130859375
    7. '	range' → logprob: -13.452484130859375
    8. '(' → logprob: -13.827484130859375
    9. '_range' → logprob: -14.202484130859375
    10. ' xrange' → logprob: -15.077484130859375

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04860202223062515
    2. ' range' → logprob: -3.0486021041870117
    3. '(range' → logprob: -11.298602104187012
    4. 'N' → logprob: -13.298602104187012
    5. 'M' → logprob: -15.048602104187012
    6. '	range' → logprob: -16.423601150512695
    7. ' xrange' → logprob: -17.048601150512695
    8. ' ' → logprob: -17.048601150512695
    9. 'Range' → logprob: -17.173601150512695
    10. 'P' → logprob: -17.298601150512695

Token 41: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4292360544204712
    2. '(M' → logprob: -1.0542360544204712
    3. '(' → logprob: -7.804235935211182
    4. 'N' → logprob: -10.17923641204834
    5. ' (' → logprob: -10.17923641204834
    6. 'M' → logprob: -11.05423641204834
    7. ' N' → logprob: -11.92923641204834
    8. ' range' → logprob: -12.05423641204834
    9. '(Q' → logprob: -12.42923641204834
    10. '(range' → logprob: -12.55423641204834

Token 42: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003601336502470076
    2. ')' → logprob: -8.000360488891602
    3. ']' → logprob: -11.000360488891602
    4. ')])' → logprob: -12.500360488891602
    5. ')]
' → logprob: -13.750360488891602
    6. '])]' → logprob: -14.250360488891602
    7. '))' → logprob: -14.500360488891602
    8. '')]' → logprob: -14.500360488891602
    9. ' )' → logprob: -14.625360488891602
    10. ')][' → logprob: -15.625360488891602

Token 43: 'P' (ID: 47)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4193902611732483
    2. 'boxes' → logprob: -1.4193902015686035
    3. ' boxes' → logprob: -3.0443902015686035
    4. 'result' → logprob: -4.7943902015686035
    5. '<|end|>' → logprob: -4.7943902015686035
    6. 'sorted' → logprob: -5.0443902015686035
    7. 'for' → logprob: -5.4193902015686035
    8. '\n' → logprob: -5.7943902015686035
    9. ')' → logprob: -6.1693902015686035
    10. '#' → logprob: -6.1693902015686035

Token 44: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021437479183077812
    2. '(' → logprob: -3.896437406539917
    3. '()
' → logprob: -7.271437644958496
    4. ')' → logprob: -9.771437644958496
    5. '()

' → logprob: -9.896437644958496
    6. '(
' → logprob: -10.021437644958496
    7. '(reverse' → logprob: -10.896437644958496
    8. '()\' → logprob: -11.646437644958496
    9. '(

' → logprob: -12.396437644958496
    10. '()
' → logprob: -13.021437644958496

Token 46: '=True' (ID: 7827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014879832975566387
    2. '())' → logprob: -5.0148797035217285
    3. '()' → logprob: -5.3898797035217285
    4. '=True' → logprob: -6.0148797035217285
    5. '(True' → logprob: -7.2648797035217285
    6. '(' → logprob: -8.139880180358887
    7. '))' → logprob: -9.889880180358887
    8. '=' → logprob: -11.264880180358887
    9. ')
' → logprob: -11.264880180358887
    10. ',' → logprob: -11.639880180358887

Token 47: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.00000286102295
    3. ' )' → logprob: -15.00000286102295
    4. '))' → logprob: -16.750001907348633
    5. '),' → logprob: -17.750001907348633
    6. ')`' → logprob: -17.750001907348633
    7. ')

' → logprob: -17.875001907348633
    8. '#' → logprob: -18.125001907348633
    9. ')#' → logprob: -18.250001907348633
    10. ')
' → logprob: -18.875001907348633

Token 48: 'dp' (ID: 19037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8037037253379822
    2. 'max' → logprob: -1.303703784942627
    3. 'boxes' → logprob: -1.803703784942627
    4. 'result' → logprob: -3.553703784942627
    5. 'answer' → logprob: -3.553703784942627
    6. 'count' → logprob: -4.678703784942627
    7. 'idx' → logprob: -4.928703784942627
    8. 'dp' → logprob: -5.678703784942627
    9. 'capacity' → logprob: -5.803703784942627
    10. ' for' → logprob: -5.928703784942627

Token 49: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1750745326280594
    2. '=' → logprob: -1.925074577331543
    3. '=[' → logprob: -4.925074577331543
    4. '[' → logprob: -5.050074577331543
    5. ' =[' → logprob: -7.300074577331543
    6. '=[]' → logprob: -8.175074577331543
    7. '=[[' → logprob: -10.425074577331543
    8. '={}' → logprob: -10.550074577331543
    9. ' ' → logprob: -11.300074577331543
    10. '0' → logprob: -12.050074577331543

Token 50: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013203764334321022
    2. 'float' → logprob: -5.2632036209106445
    3. '[' → logprob: -5.8882036209106445
    4. '-' → logprob: -6.0132036209106445
    5. '(' → logprob: -7.1382036209106445
    6. '10' → logprob: -7.6382036209106445
    7. '1' → logprob: -7.6382036209106445
    8. '100' → logprob: -7.7632036209106445
    9. 'False' → logprob: -8.263203620910645
    10. ' ' → logprob: -10.013203620910645

Token 51: '('-' (ID: 33343)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08902889490127563
    2. '('-' → logprob: -2.464028835296631
    3. '("' → logprob: -10.214029312133789
    4. '(' → logprob: -10.839029312133789
    5. '("-' → logprob: -10.839029312133789
    6. 'inf' → logprob: -12.339029312133789
    7. ''-' → logprob: -12.589029312133789
    8. '('+' → logprob: -13.089029312133789
    9. '-inf' → logprob: -13.714029312133789
    10. ''' → logprob: -14.714029312133789

Token 52: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.9186317482963204e-05
    2. 'in' → logprob: -10.500049591064453
    3. ''' → logprob: -11.500049591064453
    4. ''in' → logprob: -12.750049591064453
    5. '100' → logprob: -13.000049591064453
    6. 'INF' → logprob: -13.625049591064453
    7. '1' → logprob: -13.750049591064453
    8. '10' → logprob: -14.750049591064453
    9. '∞' → logprob: -15.000049591064453
    10. '9' → logprob: -15.250049591064453

Token 53: '')' (ID: 1542)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1980685293674469
    2. '')]' → logprob: -2.073068618774414
    3. ')' → logprob: -3.448068618774414
    4. ']' → logprob: -3.948068618774414
    5. ',' → logprob: -6.573068618774414
    6. '')' → logprob: -7.198068618774414
    7. ' )' → logprob: -8.823068618774414
    8. '']' → logprob: -8.823068618774414
    9. '),' → logprob: -9.073068618774414
    10. '")]' → logprob: -9.448068618774414

Token 54: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3512845039367676
    2. ']*(' → logprob: -1.3512845039367676
    3. ']+' → logprob: -3.7262845039367676
    4. ']*' → logprob: -4.851284503936768
    5. 'for' → logprob: -5.726284503936768
    6. ' for' → logprob: -6.476284503936768
    7. ',' → logprob: -7.601284503936768
    8. ')]' → logprob: -9.97628402709961
    9. ' ]' → logprob: -10.47628402709961
    10. ')' → logprob: -11.22628402709961

Token 55: 'M' (ID: 44)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6726956963539124
    2. 'M' → logprob: -2.1726956367492676
    3. 'N' → logprob: -2.2976956367492676
    4. '101' → logprob: -2.2976956367492676
    5. '500' → logprob: -3.0476956367492676
    6. '200' → logprob: -3.7976956367492676
    7. '501' → logprob: -3.9226956367492676
    8. '250' → logprob: -4.422695636749268
    9. '400' → logprob: -4.922695636749268
    10. 'sum' → logprob: -5.047695636749268

Token 56: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.036524842376821e-05
    2. ' +' → logprob: -10.250040054321289
    3. '+
' → logprob: -12.500040054321289
    4. ')' → logprob: -14.625040054321289
    5. '+)' → logprob: -14.750040054321289
    6. '*' → logprob: -15.625040054321289
    7. '1' → logprob: -17.12504005432129
    8. ')+' → logprob: -17.25004005432129
    9. '+

' → logprob: -17.62504005432129
    10. '+[' → logprob: -18.50004005432129

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.684157026233152e-05
    2. '2' → logprob: -9.875077247619629
    3. ' ' → logprob: -10.750077247619629
    4. '100' → logprob: -14.125077247619629
    5. '10' → logprob: -14.312577247619629
    6. '3' → logprob: -14.750077247619629
    7. '7' → logprob: -15.187577247619629
    8. '5' → logprob: -15.625077247619629
    9. '101' → logprob: -15.812577247619629
    10. '11' → logprob: -16.000076293945312

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ' )' → logprob: -12.500006675720215
    3. ')
' → logprob: -13.125006675720215
    4. '```' → logprob: -15.625006675720215
    5. ')

' → logprob: -15.750006675720215
    6. '}' → logprob: -16.7500057220459
    7. '+' → logprob: -16.7500057220459
    8. ']' → logprob: -17.2500057220459
    9. '<|end|>' → logprob: -17.2500057220459
    10. '),' → logprob: -17.2500057220459

Token 59: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.253090865968261e-06
    2. ' dp' → logprob: -12.375009536743164
    3. '0' → logprob: -12.500009536743164
    4. '<|end|>' → logprob: -14.500009536743164
    5. '_dp' → logprob: -15.500009536743164
    6. '(dp' → logprob: -15.625009536743164
    7. '
' → logprob: -15.875009536743164
    8. '	dp' → logprob: -16.125009536743164
    9. '[' → logprob: -17.000009536743164
    10. '```' → logprob: -17.000009536743164

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '=' → logprob: -14.000003814697266
    3. '```' → logprob: -14.125003814697266
    4. '0' → logprob: -14.625003814697266
    5. '\[' → logprob: -14.625003814697266
    6. '=[' → logprob: -15.375003814697266
    7. ' [' → logprob: -15.500003814697266
    8. '[
' → logprob: -15.875003814697266
    9. 'dp' → logprob: -16.500003814697266
    10. ' =' → logprob: -16.625003814697266

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. '1' → logprob: -11.62501335144043
    3. ' ' → logprob: -13.25001335144043
    4. '```' → logprob: -14.50001335144043
    5. '[' → logprob: -14.68751335144043
    6. ')' → logprob: -15.81251335144043
    7. '2' → logprob: -15.87501335144043
    8. ']' → logprob: -16.43751335144043
    9. 'M' → logprob: -16.56251335144043
    10. '3' → logprob: -16.75001335144043

Token 62: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16037745773792267
    2. ']=' → logprob: -1.9103775024414062
    3. ' ]' → logprob: -8.910377502441406
    4. '=' → logprob: -11.035377502441406
    5. ']=(' → logprob: -14.660377502441406
    6. ']==' → logprob: -14.910377502441406
    7. ']=-' → logprob: -15.285377502441406
    8. ']={' → logprob: -15.285377502441406
    9. ']+=' → logprob: -15.410377502441406
    10. ']

' → logprob: -16.035377502441406

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'float' → logprob: -17.625003814697266
    4. '00' → logprob: -18.125003814697266
    5. '۰' → logprob: -18.250003814697266
    6. '1' → logprob: -18.375003814697266
    7. '[' → logprob: -18.562503814697266
    8. '000' → logprob: -18.875003814697266
    9. '```' → logprob: -19.000003814697266
    10. 'int' → logprob: -19.312503814697266

Token 64: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6545742750167847
    2. ' 
' → logprob: -1.9045742750167847
    3. '<|end|>' → logprob: -1.9045742750167847
    4. '
' → logprob: -2.404574394226074
    5. 'for' → logprob: -2.904574394226074
    6. '\n' → logprob: -3.404574394226074
    7. '  
' → logprob: -6.654574394226074
    8. ' ' → logprob: -7.029574394226074
    9. '\' → logprob: -7.404574394226074
    10. '<|end|>' → logprob: -7.904574394226074

Token 65: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010310318320989609
    2. ' for' → logprob: -4.635310173034668
    3. '<|end|>' → logprob: -7.635310173034668
    4. '\n' → logprob: -10.135310173034668
    5. ' 
' → logprob: -11.760310173034668
    6. '```' → logprob: -12.135310173034668
    7. '
' → logprob: -12.135310173034668
    8. '\' → logprob: -12.510310173034668
    9. '<|end|>' → logprob: -12.635310173034668
    10. '	for' → logprob: -14.010310173034668

Token 66: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.017666466534137726
    2. ' _' → logprob: -4.892666339874268
    3. ' j' → logprob: -5.642666339874268
    4. 'i' → logprob: -5.767666339874268
    5. ' box' → logprob: -6.392666339874268
    6. ' b' → logprob: -7.017666339874268
    7. ' p' → logprob: -9.017666816711426
    8. '_' → logprob: -9.142666816711426
    9. ' ' → logprob: -9.517666816711426
    10. '_i' → logprob: -9.517666816711426

Token 67: ',e' (ID: 43127)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028915267437696457
    2. 'in' → logprob: -3.7789151668548584
    3. 'ount' → logprob: -6.1539154052734375
    4. ',' → logprob: -6.2789154052734375
    5. 'i' → logprob: -7.5289154052734375
    6. ' i' → logprob: -7.9039154052734375
    7. ' ' → logprob: -9.278915405273438
    8. 'ont' → logprob: -9.403915405273438
    9. 'range' → logprob: -9.403915405273438
    10. 'nt' → logprob: -9.653915405273438

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4411943256855011
    2. 'in' → logprob: -1.4411942958831787
    3. ',' → logprob: -2.1911942958831787
    4. ',in' → logprob: -5.816194534301758
    5. ',n' → logprob: -7.191194534301758
    6. ',count' → logprob: -7.691194534301758
    7. ',c' → logprob: -7.816194534301758
    8. 'x' → logprob: -7.816194534301758
    9. ',_' → logprob: -7.941194534301758
    10. ',i' → logprob: -8.066194534301758

Token 69: ' boxes' (ID: 21967)
  Prédit: 'boxes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boxes' → logprob: -0.04861870035529137
    2. ' boxes' → logprob: -3.048618793487549
    3. 'box' → logprob: -11.29861831665039
    4. 'b' → logprob: -12.04861831665039
    5. 'c' → logprob: -13.42361831665039
    6. 'boxed' → logprob: -13.86111831665039
    7. '_boxes' → logprob: -13.92361831665039
    8. 'range' → logprob: -14.04861831665039
    9. '[' → logprob: -14.11111831665039
    10. 'Boxes' → logprob: -14.17361831665039

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.318681188422488e-05
    2. ':
' → logprob: -11.50001335144043
    3. '):' → logprob: -13.75001335144043
    4. ' :' → logprob: -14.62501335144043
    5. '>:' → logprob: -15.12501335144043
    6. ',:' → logprob: -15.50001335144043
    7. ':**' → logprob: -15.50001335144043
    8. ',' → logprob: -15.75001335144043
    9. ':c' → logprob: -16.00001335144043
    10. ':

' → logprob: -16.62501335144043

Token 71: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01458464190363884
    2. '   ' → logprob: -5.014584541320801
    3. '	for' → logprob: -5.514584541320801
    4. '<|end|>' → logprob: -6.014584541320801
    5. 'for' → logprob: -7.764584541320801
    6. ' 
' → logprob: -8.0145845413208
    7. '    
' → logprob: -8.3895845413208
    8. ' ' → logprob: -9.3895845413208
    9. '
' → logprob: -9.8895845413208
    10. '```' → logprob: -10.1395845413208

Token 72: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1602339744567871
    2. ' for' → logprob: -1.910233974456787
    3. '   ' → logprob: -11.660234451293945
    4. '	for' → logprob: -14.785234451293945
    5. 'range' → logprob: -15.160234451293945
    6. 'dp' → logprob: -15.535234451293945
    7. ' range' → logprob: -16.410234451293945
    8. '_for' → logprob: -17.035234451293945
    9. '    
' → logprob: -17.160234451293945
    10. 'd' → logprob: -17.285234451293945

Token 73: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2081620842218399
    2. ' j' → logprob: -1.8331620693206787
    3. 'i' → logprob: -4.083162307739258
    4. 'j' → logprob: -5.208162307739258
    5. ' c' → logprob: -6.458162307739258
    6. ' w' → logprob: -6.833162307739258
    7. ' x' → logprob: -7.083162307739258
    8. ' p' → logprob: -7.708162307739258
    9. ' range' → logprob: -7.833162307739258
    10. ' m' → logprob: -7.958162307739258

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014184189029037952
    2. 'in' → logprob: -4.26418399810791
    3. 'range' → logprob: -11.38918399810791
    4. ' ' → logprob: -12.76418399810791
    5. '	in' → logprob: -13.01418399810791
    6. 'n' → logprob: -13.76418399810791
    7. ' range' → logprob: -14.26418399810791
    8. '1' → logprob: -14.88918399810791
    9. '_in' → logprob: -15.13918399810791
    10. '  ' → logprob: -15.38918399810791

Token 75: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031794982496649027
    2. ' range' → logprob: -5.753179550170898
    3. 're' → logprob: -13.503179550170898
    4. 'reverse' → logprob: -16.5031795501709
    5. ' reversed' → logprob: -16.6281795501709
    6. 'P' → logprob: -16.8781795501709
    7. 'r' → logprob: -17.2531795501709
    8. '   ' → logprob: -18.1281795501709
    9. '(range' → logprob: -18.5031795501709
    10. 'rang' → logprob: -18.6281795501709

Token 76: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.012567573226988316
    2. 'M' → logprob: -4.387567520141602
    3. '(' → logprob: -10.012567520141602
    4. '1' → logprob: -12.762567520141602
    5. ' M' → logprob: -12.887567520141602
    6. '(len' → logprob: -13.262567520141602
    7. '	M' → logprob: -14.012567520141602
    8. '[M' → logprob: -14.012567520141602
    9. ',M' → logprob: -14.262567520141602
    10. '(c' → logprob: -14.262567520141602

Token 77: '-c' (ID: 3452)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45257052779197693
    2. ',c' → logprob: -1.8275705575942993
    3. '-c' → logprob: -2.5775704383850098
    4. ',-' → logprob: -2.9525704383850098
    5. '-' → logprob: -3.3275704383850098
    6. '+' → logprob: -3.9525704383850098
    7. ' -' → logprob: -4.70257043838501
    8. ' ,' → logprob: -4.95257043838501
    9. '):' → logprob: -6.57757043838501
    10. '+c' → logprob: -6.57757043838501

Token 78: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6980090141296387
    2. ',-' → logprob: -0.6980090141296387
    3. ' ,' → logprob: -5.698009014129639
    4. '+' → logprob: -7.448009014129639
    5. ' ,-' → logprob: -7.448009014129639
    6. ',+' → logprob: -8.823009490966797
    7. ',M' → logprob: -10.073009490966797
    8. '-' → logprob: -10.573009490966797
    9. ' -' → logprob: -11.198009490966797
    10. ',c' → logprob: -11.448009490966797

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.875000953674316
    3. '-' → logprob: -15.375000953674316
    4. ' -' → logprob: -16.6875
    5. '```' → logprob: -16.8125
    6. '

' → logprob: -17.25
    7. '   ' → logprob: -17.6875
    8. '
' → logprob: -17.875
    9. ' ' → logprob: -18.5
    10. '2' → logprob: -18.5

Token 80: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0003647826088126749
    2. ',' → logprob: -8.125365257263184
    3. '-' → logprob: -10.000365257263184
    4. ' ,-' → logprob: -11.000365257263184
    5. '   ' → logprob: -13.250365257263184
    6. '):-' → logprob: -13.625365257263184
    7. ' -' → logprob: -13.750365257263184
    8. ' ,' → logprob: -14.250365257263184
    9. ',true' → logprob: -14.500365257263184
    10. ':-' → logprob: -14.750365257263184

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.27099974633893e-05
    2. ' ' → logprob: -11.375012397766113
    3. ')' → logprob: -14.625012397766113
    4. '   ' → logprob: -15.500012397766113
    5. '```' → logprob: -16.18751335144043
    6. '１' → logprob: -17.00001335144043
    7. 'c' → logprob: -17.06251335144043
    8. '):
' → logprob: -17.18751335144043
    9. ',' → logprob: -17.62501335144043
    10. '۱' → logprob: -18.00001335144043

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014318282715976238
    2. '):
' → logprob: -4.264318466186523
    3. ' ):' → logprob: -9.389318466186523
    4. ':' → logprob: -10.139318466186523
    5. '):
' → logprob: -11.264318466186523
    6. ')' → logprob: -12.139318466186523
    7. '):-' → logprob: -12.889318466186523
    8. '):

' → logprob: -12.889318466186523
    9. ' ):
' → logprob: -13.014318466186523
    10. '0' → logprob: -13.514318466186523

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3405652940273285
    2. '   ' → logprob: -1.5905653238296509
    3. ' dp' → logprob: -3.2155652046203613
    4. 'dp' → logprob: -3.3405652046203613
    5. ' if' → logprob: -4.965565204620361
    6. '	dp' → logprob: -7.340565204620361
    7. 'if' → logprob: -7.840565204620361
    8. '        
' → logprob: -8.21556568145752
    9. '    
' → logprob: -8.34056568145752
    10. '```' → logprob: -8.59056568145752

Token 84: ' val' (ID: 1459)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18291880190372467
    2. ' dp' → logprob: -2.3079187870025635
    3. ' if' → logprob: -3.5579187870025635
    4. '           ' → logprob: -3.9329187870025635
    5. 'if' → logprob: -4.057919025421143
    6. '   ' → logprob: -7.057919025421143
    7. '	dp' → logprob: -7.182919025421143
    8. '       ' → logprob: -7.682919025421143
    9. ' ' → logprob: -8.557918548583984
    10. '_dp' → logprob: -11.182918548583984

Token 85: '=sum' (ID: 174693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5804008841514587
    2. '=max' → logprob: -1.0804009437561035
    3. ' =' → logprob: -2.4554009437561035
    4. 'dp' → logprob: -4.9554009437561035
    5. 'max' → logprob: -5.2054009437561035
    6. 'al' → logprob: -7.9554009437561035
    7. '   ' → logprob: -8.080400466918945
    8. 'ue' → logprob: -8.830400466918945
    9. 'ax' → logprob: -9.080400466918945
    10. '=d' → logprob: -9.205400466918945

Token 86: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0019090042915195227
    2. 'P' → logprob: -6.501908779144287
    3. '(' → logprob: -8.001909255981445
    4. '(p' → logprob: -11.251909255981445
    5. '(dp' → logprob: -11.376909255981445
    6. '([' → logprob: -11.501909255981445
    7. 'val' → logprob: -11.626909255981445
    8. '[P' → logprob: -11.751909255981445
    9. 'dp' → logprob: -12.376909255981445
    10. '((' → logprob: -13.001909255981445

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016420685278717428
    2. 'i' → logprob: -8.875164031982422
    3. '[' → logprob: -12.125164031982422
    4. ')' → logprob: -12.625164031982422
    5. ' i' → logprob: -12.750164031982422
    6. '[j' → logprob: -13.000164031982422
    7. ' [' → logprob: -13.500164031982422
    8. '(i' → logprob: -13.625164031982422
    9. 'val' → logprob: -13.750164031982422
    10. '{i' → logprob: -13.875164031982422

Token 88: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.0002933942887466401
    2. ':' → logprob: -8.875293731689453
    3. ' :' → logprob: -10.000293731689453
    4. 'i' → logprob: -10.125293731689453
    5. '   ' → logprob: -11.125293731689453
    6. '+' → logprob: -11.500293731689453
    7. ']' → logprob: -11.625293731689453
    8. '+i' → logprob: -11.625293731689453
    9. ']+' → logprob: -12.125293731689453
    10. ':j' → logprob: -12.500293731689453

Token 89: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.00038920470979064703
    2. 'c' → logprob: -7.875389099121094
    3. ':c' → logprob: -12.750389099121094
    4. ' +' → logprob: -12.875389099121094
    5. '+' → logprob: -12.875389099121094
    6. '<c' → logprob: -14.625389099121094
    7. '-c' → logprob: -15.375389099121094
    8. '	c' → logprob: -16.500389099121094
    9. '   ' → logprob: -16.750389099121094
    10. ',c' → logprob: -17.000389099121094

Token 90: '])' (ID: 4636)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.26885709166526794
    2. '])*' → logprob: -1.8938571214675903
    3. ']*' → logprob: -3.143857002258301
    4. '])' → logprob: -3.768857002258301
    5. ')' → logprob: -4.143857002258301
    6. '])+' → logprob: -6.518857002258301
    7. ')+' → logprob: -7.643857002258301
    8. ']' → logprob: -7.893857002258301
    9. '*' → logprob: -8.1438570022583
    10. ')e' → logprob: -8.8938570022583

Token 91: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14154034852981567
    2. ' +' → logprob: -2.141540288925171
    3. '
' → logprob: -5.51654052734375
    4. '<|end|>' → logprob: -5.64154052734375
    5. '+c' → logprob: -5.76654052734375
    6. '+
' → logprob: -7.51654052734375
    7. ')' → logprob: -7.64154052734375
    8. '       ' → logprob: -8.01654052734375
    9. ')+' → logprob: -8.01654052734375
    10. ' if' → logprob: -8.26654052734375

Token 92: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05562305077910423
    2. ' e' → logprob: -2.9306230545043945
    3. 'c' → logprob: -7.8056230545043945
    4. ' ' → logprob: -9.555623054504395
    5. '(e' → logprob: -9.680623054504395
    6. '	e' → logprob: -10.055623054504395
    7. '   ' → logprob: -10.180623054504395
    8. '(' → logprob: -10.180623054504395
    9. ' (' → logprob: -10.555623054504395
    10. ' c' → logprob: -10.805623054504395

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008061408996582031
    2. '  
' → logprob: -6.258061408996582
    3. '<|end|>' → logprob: -6.383061408996582
    4. ' if' → logprob: -6.883061408996582
    5. ' 
' → logprob: -7.008061408996582
    6. '
' → logprob: -7.133061408996582
    7. 'if' → logprob: -7.633061408996582
    8. ')' → logprob: -8.008061408996582
    9. ')
' → logprob: -8.383061408996582
    10. '    
' → logprob: -8.758061408996582

Token 94: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0036540029104799032
    2. '<|end|>' → logprob: -7.0036540031433105
    3. '
' → logprob: -7.2536540031433105
    4. '  
' → logprob: -7.7536540031433105
    5. 'dp' → logprob: -8.128653526306152
    6. ' if' → logprob: -8.503653526306152
    7. '\n' → logprob: -8.503653526306152
    8. '    
' → logprob: -8.628653526306152
    9. '        
' → logprob: -8.878653526306152
    10. ' 
' → logprob: -8.878653526306152

Token 95: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04945557564496994
    2. ' dp' → logprob: -3.1744556427001953
    3. 'if' (adapté à ' if') → logprob: -5.549455642700195
    4. ' if' → logprob: -6.424455642700195
    5. '
' → logprob: -7.299455642700195
    6. '	dp' → logprob: -9.049455642700195
    7. '       ' → logprob: -9.424455642700195
    8. '(dp' → logprob: -10.924455642700195
    9. ' ' → logprob: -11.924455642700195
    10. '           ' → logprob: -11.924455642700195

Token 96: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.42106151580810547
    2. ' val' → logprob: -1.4210615158081055
    3. 'dp' → logprob: -2.6710615158081055
    4. 'val' → logprob: -3.4210615158081055
    5. '	dp' → logprob: -8.796061515808105
    6. '(dp' → logprob: -9.671061515808105
    7. ' ' → logprob: -10.733561515808105
    8. ' ' → logprob: -10.858561515808105
    9. '	val' → logprob: -10.858561515808105
    10. '   ' → logprob: -11.421061515808105

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. 'i' → logprob: -16.875
    4. '[I' → logprob: -17.5
    5. ' [' → logprob: -18.625
    6. '[j' → logprob: -18.75
    7. '[int' → logprob: -19.5
    8. '[max' → logprob: -20.125
    9. '[idx' → logprob: -20.125
    10. '[
' → logprob: -20.125

Token 98: ']+' (ID: 15344)
  Prédit: ']!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.7367849349975586
    2. ']' → logprob: -0.8617849349975586
    3. '+c' → logprob: -2.9867849349975586
    4. ']+' → logprob: -3.4867849349975586
    5. '+i' → logprob: -4.361784934997559
    6. '+' → logprob: -5.986784934997559
    7. ']>=' → logprob: -7.111784934997559
    8. ']>' → logprob: -7.486784934997559
    9. 'i' → logprob: -7.986784934997559
    10. ' ]' → logprob: -8.361784934997559

Token 99: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -2.7968066206085496e-05
    2. ' val' → logprob: -10.500027656555176
    3. '	val' → logprob: -15.750027656555176
    4. '           ' → logprob: -16.375028610229492
    5. '[val' → logprob: -16.875028610229492
    6. '<|end|>' → logprob: -17.625028610229492
    7. '       ' → logprob: -18.250028610229492
    8. '   ' → logprob: -18.500028610229492
    9. '(val' → logprob: -18.750028610229492
    10. ',val' → logprob: -19.250028610229492

Token 100: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.003601617179811001
    2. ' >' → logprob: -5.628601551055908
    3. ')>' → logprob: -14.378602027893066
    4. '">' → logprob: -15.003602027893066
    5. ']>' → logprob: -15.878602027893066
    6. '>d' → logprob: -16.00360107421875
    7. '>
' → logprob: -16.62860107421875
    8. '>`' → logprob: -16.75360107421875
    9. ' ' → logprob: -16.87860107421875
    10. '>

' → logprob: -16.87860107421875

Token 101: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003364158037584275
    2. ' dp' → logprob: -8.000336647033691
    3. '	dp' → logprob: -13.875336647033691
    4. '(dp' → logprob: -17.375335693359375
    5. '_dp' → logprob: -18.000335693359375
    6. '   ' → logprob: -18.750335693359375
    7. '           ' → logprob: -19.500335693359375
    8. 'd' → logprob: -20.125335693359375
    9. '       ' → logprob: -20.250335693359375
    10. '0' → logprob: -20.500335693359375

Token 102: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3306015716807451e-05
    2. 'i' → logprob: -11.50001335144043
    3. '[' → logprob: -12.87501335144043
    4. 'dp' → logprob: -15.37501335144043
    5. '```' → logprob: -16.12501335144043
    6. '[
' → logprob: -16.75001335144043
    7. '(i' → logprob: -16.87501335144043
    8. '[max' → logprob: -17.12501335144043
    9. '[j' → logprob: -17.25001335144043
    10. '   ' → logprob: -17.87501335144043

Token 103: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.0013202388072386384
    2. '+i' → logprob: -7.6263203620910645
    3. '[c' → logprob: -7.8763203620910645
    4. '[i' → logprob: -8.376319885253906
    5. '+' → logprob: -8.501319885253906
    6. ' +' → logprob: -11.251319885253906
    7. 'c' → logprob: -13.001319885253906
    8. '-c' → logprob: -13.626319885253906
    9. ']' → logprob: -14.876319885253906
    10. '[' → logprob: -15.001319885253906

Token 104: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08192808926105499
    2. ']:' → logprob: -2.706928014755249
    3. ':
' → logprob: -5.081928253173828
    4. '):' → logprob: -5.706928253173828
    5. ']:
' → logprob: -6.206928253173828
    6. '):
' → logprob: -8.206928253173828
    7. ']' → logprob: -9.956928253173828
    8. ' :' → logprob: -10.956928253173828
    9. ']:
' → logprob: -12.206928253173828
    10. '[' → logprob: -12.456928253173828

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05162865296006203
    2. ' dp' → logprob: -3.176628589630127
    3. 'dp' → logprob: -4.801628589630127
    4. '	dp' → logprob: -8.801629066467285
    5. '(dp' → logprob: -8.926629066467285
    6. '               ' → logprob: -10.801629066467285
    7. '```' → logprob: -10.801629066467285
    8. '            
' → logprob: -11.176629066467285
    9. '		' → logprob: -11.676629066467285
    10. '
' → logprob: -12.176629066467285

Token 106: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.16030952334403992
    2. ' dp' → logprob: -1.9103095531463623
    3. '           ' → logprob: -9.660309791564941
    4. '	dp' → logprob: -11.410309791564941
    5. '               ' → logprob: -11.785309791564941
    6. '_dp' → logprob: -13.660309791564941
    7. '(dp' → logprob: -14.160309791564941
    8. '   ' → logprob: -14.660309791564941
    9. '       ' → logprob: -15.035309791564941
    10. '```' → logprob: -15.160309791564941

Token 107: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.0
    3. '[' → logprob: -17.0
    4. '(i' → logprob: -18.625
    5. '{i' → logprob: -20.25
    6. ',i' → logprob: -20.375
    7. ' i' → logprob: -20.375
    8. '=i' → logprob: -20.75
    9. '[I' → logprob: -21.375
    10. '```' → logprob: -21.375

Token 108: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -9.610702363715973e-06
    2. '+' → logprob: -11.875009536743164
    3. ' +' → logprob: -13.250009536743164
    4. '+i' → logprob: -14.500009536743164
    5. '[c' → logprob: -16.625009536743164
    6. ']+' → logprob: -17.125009536743164
    7. '+C' → logprob: -17.625009536743164
    8. ']' → logprob: -17.750009536743164
    9. '+]' → logprob: -17.750009536743164
    10. 'c' → logprob: -17.875009536743164

Token 109: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.029874062165617943
    2. ']' → logprob: -3.529874086380005
    3. '=' → logprob: -9.154873847961426
    4. ']+=' → logprob: -11.654873847961426
    5. ' ]' → logprob: -12.029873847961426
    6. ']=(' → logprob: -13.654873847961426
    7. '']=' → logprob: -14.404873847961426
    8. '"]=' → logprob: -14.779873847961426
    9. ')=' → logprob: -15.404873847961426
    10. ']=-' → logprob: -15.779873847961426

Token 110: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.180879816180095e-05
    2. ' dp' → logprob: -9.875051498413086
    3. '           ' → logprob: -15.500051498413086
    4. '	dp' → logprob: -16.250051498413086
    5. '(dp' → logprob: -18.500051498413086
    6. '               ' → logprob: -19.125051498413086
    7. '   ' → logprob: -19.125051498413086
    8. 'd' → logprob: -19.125051498413086
    9. 'df' → logprob: -19.375051498413086
    10. 'dc' → logprob: -19.375051498413086

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. 'i' → logprob: -12.375004768371582
    3. '[' → logprob: -15.875004768371582
    4. '```' → logprob: -18.750003814697266
    5. '[I' → logprob: -19.250003814697266
    6. ' i' → logprob: -19.625003814697266
    7. '][' → logprob: -20.000003814697266
    8. ' [' → logprob: -20.625003814697266
    9. '[
' → logprob: -20.625003814697266
    10. '[c' → logprob: -20.625003814697266

Token 112: ']+' (ID: 15344)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.00010807292710524052
    2. ']+' → logprob: -10.000107765197754
    3. 'c' → logprob: -10.250107765197754
    4. ' +' → logprob: -11.000107765197754
    5. '+' → logprob: -12.125107765197754
    6. '   ' → logprob: -13.500107765197754
    7. '+i' → logprob: -14.250107765197754
    8. ']' → logprob: -14.625107765197754
    9. ')+' → logprob: -14.875107765197754
    10. '	c' → logprob: -15.000107765197754

Token 113: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -2.7610454708337784e-05
    2. ' val' → logprob: -10.500027656555176
    3. '	val' → logprob: -17.25002670288086
    4. '           ' → logprob: -18.50002670288086
    5. '(val' → logprob: -18.50002670288086
    6. '[val' → logprob: -18.62502670288086
    7. '```' → logprob: -19.12502670288086
    8. '_val' → logprob: -19.75002670288086
    9. '   ' → logprob: -19.87502670288086
    10. ' ' → logprob: -20.00002670288086

Token 114: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: 'print' (ID: 1598)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6659314632415771
    2. 'i' → logprob: -1.1659314632415771
    3. 'dp' → logprob: -3.665931463241577
    4. '[i' → logprob: -4.040931701660156
    5. ')' → logprob: -4.040931701660156
    6. ']' → logprob: -4.165931701660156
    7. 'max' → logprob: -4.415931701660156
    8. '```' → logprob: -4.415931701660156
    9. 'print' → logprob: -4.540931701660156
    10. '+' → logprob: -4.790931701660156

Token 116: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.00010914575977949426
    2. '(' → logprob: -9.37510871887207
    3. '(dp' → logprob: -10.87510871887207
    4. 'max' → logprob: -12.25010871887207
    5. '()' → logprob: -15.62510871887207
    6. '((' → logprob: -16.87510871887207
    7. '(min' → logprob: -17.00010871887207
    8. ' (' → logprob: -17.12510871887207
    9. '=max' → logprob: -17.12510871887207
    10. ' max' → logprob: -17.25010871887207

Token 117: '(' (ID: 7)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.127333340875339e-06
    2. ')' → logprob: -13.125003814697266
    3. 'dp' → logprob: -13.125003814697266
    4. '(' → logprob: -16.625003814697266
    5. '(
' → logprob: -17.375003814697266
    6. ' dp' → logprob: -18.000003814697266
    7. '	dp' → logprob: -18.125003814697266
    8. '(df' → logprob: -19.125003814697266
    9. ')(' → logprob: -19.375003814697266
    10. ' (' → logprob: -19.375003814697266

Token 118: '0' (ID: 15)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3856492842023727e-06
    2. '(dp' → logprob: -14.000000953674316
    3. ' dp' → logprob: -14.625000953674316
    4. ')' → logprob: -18.000001907348633
    5. '	dp' → logprob: -19.875001907348633
    6. '_dp' → logprob: -19.875001907348633
    7. 'd' → logprob: -21.750001907348633
    8. 'dpi' → logprob: -22.625001907348633
    9. '.dp' → logprob: -23.375001907348633
    10. '[' → logprob: -23.500001907348633

Token 119: ',max' (ID: 81466)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4213852286338806
    2. ')' → logprob: -1.6713852882385254
    3. 'dp' → logprob: -2.4213852882385254
    4. '(dp' → logprob: -3.2963852882385254
    5. '))' → logprob: -3.5463852882385254
    6. ' dp' → logprob: -7.046385288238525
    7. ')
' → logprob: -9.546384811401367
    8. '])' → logprob: -9.921384811401367
    9. ',max' → logprob: -9.921384811401367
    10. '),' → logprob: -10.421384811401367

Token 120: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.4987974029500037e-05
    2. 'dp' → logprob: -10.625024795532227
    3. ' dp' → logprob: -15.500024795532227
    4. ')' → logprob: -15.625024795532227
    5. '	dp' → logprob: -17.000024795532227
    6. '(' → logprob: -17.375024795532227
    7. '_dp' → logprob: -18.000024795532227
    8. ' (' → logprob: -18.125024795532227
    9. '(
' → logprob: -18.250024795532227
    10. '(d' → logprob: -19.500024795532227

Token 121: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03600504994392395
    2. ')))' → logprob: -3.6610050201416016
    3. '()))' → logprob: -4.661005020141602
    4. ')' → logprob: -9.161005020141602
    5. '())))' → logprob: -10.286005020141602
    6. '))
' → logprob: -10.661005020141602
    7. '[' → logprob: -11.911005020141602
    8. '())' → logprob: -12.036005020141602
    9. '}))' → logprob: -12.161005020141602
    10. ']))' → logprob: -12.161005020141602


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 45.38%
Précision adaptée (1ère position): 47.06%
Précision (top 10): 82.35%
================================================================================
