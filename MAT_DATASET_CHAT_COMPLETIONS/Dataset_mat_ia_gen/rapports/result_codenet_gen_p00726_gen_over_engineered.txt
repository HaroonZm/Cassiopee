================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Tuple, Union, Optional, Iterator


class GenomeComponent(ABC):
    """
    Abstract base class representing any component in the genome sequence.
    """

    @abstractmethod
    def length(self) -> int:
        """
        Returns the length of the expanded genome sequence represented by this component.
        """
        pass

    @abstractmethod
    def get_char_at(self, index: int) -> Optional[str]:
        """
        Returns the character at the given index in the expanded genome sequence.
        If index is out of bounds, returns None.
        """
        pass


class Literal(GenomeComponent):
    """
    Represents a literal sequence of characters (A-Z) without compression.
    """

    def __init__(self, sequence: str):
        self._sequence = sequence
        self._len = len(sequence)

    def length(self) -> int:
        return self._len

    def get_char_at(self, index: int) -> Optional[str]:
        if 0 <= index < self._len:
            return self._sequence[index]
        return None


class Repetition(GenomeComponent):
    """
    Represents a repetition of a component multiple times.
    Example: 4(AB) or 10C
    """

    def __init__(self, count: int, component: GenomeComponent):
        assert count >= 2, "Repetition count must be at least 2"
        self._count = count
        self._component = component
        self._len = self._count * self._component.length()

    def length(self) -> int:
        return self._len

    def get_char_at(self, index: int) -> Optional[str]:
        if 0 <= index < self._len:
            comp_len = self._component.length()
            inner_index = index % comp_len
            return self._component.get_char_at(inner_index)
        return None


class GenomeParser:
    """
    A sophisticated recursive descent parser for the compressed genome representation,
    anticipating extensibility for more features and complexity.
    """

    def __init__(self, data: str):
        self._data = data
        self._pos = 0
        self._length = len(data)

    def parse(self) -> GenomeComponent:
        """
        Parse the entire genome string into a GenomeComponent hierarchy.
        """
        components: List[GenomeComponent] = []
        while self._pos < self._length:
            comp = self._parse_element()
            if comp is not None:
                components.append(comp)
            else:
                break
        if len(components) == 1:
            return components[0]
        else:
            # If multiple components, unify them as a single literal sequence
            # or a compound Literal if parsing found multiple discrete literals
            # Combine Literal components into one where possible
            combined_literals = []
            combined_components = []
            for component in components:
                if isinstance(component, Literal):
                    combined_literals.append(component._sequence)
                else:
                    if combined_literals:
                        combined_components.append(Literal(''.join(combined_literals)))
                        combined_literals = []
                    combined_components.append(component)
            if combined_literals:
                combined_components.append(Literal(''.join(combined_literals)))
            if len(combined_components) == 1:
                return combined_components[0]
            else:
                # Create a CompoundSequence to keep abstractions uniform
                return CompoundSequence(combined_components)

    def _peek(self) -> Optional[str]:
        """
        Peek the current character without consuming it.
        """
        if self._pos < self._length:
            return self._data[self._pos]
        return None

    def _consume(self, expected: Optional[str] = None) -> str:
        """
        Consume and return the current character. If expected is provided,
        asserts the current character is the expected one.
        """
        if self._pos >= self._length:
            raise ValueError("Unexpected end of input while parsing")
        current_char = self._data[self._pos]
        if expected is not None and current_char != expected:
            raise ValueError(f"Expected '{expected}' but found '{current_char}' at position {self._pos}")
        self._pos += 1
        return current_char

    def _parse_digits(self) -> int:
        """
        Parses a sequence of digits from current position, returns as integer.
        Raises ValueError if no digits found.
        """
        start_pos = self._pos
        while self._pos < self._length and self._data[self._pos].isdigit():
            self._pos += 1
        if start_pos == self._pos:
            raise ValueError(f"Expected digits at position {start_pos}")
        num = int(self._data[start_pos:self._pos])
        return num

    def _parse_element(self) -> Optional[GenomeComponent]:
        """
        Parses one element which can be:
         - a repetition with parentheses e.g., N(...)
         - a repetition of a single letter e.g., N c
         - a literal sequence of letters (A-Z)
        Returns GenomeComponent or None if no more elements.
        """
        if self._pos >= self._length:
            return None
        curr = self._peek()
        if curr is None:
            return None

        if curr.isdigit():
            # Parse repetition count
            count = self._parse_digits()
            if self._pos < self._length and self._peek() == '(':
                # repetition on a parenthesized sequence
                self._consume('(')
                # parse sequence inside parentheses recursively until matching )
                inner_component = self._parse_until_closing_paren()
                self._consume(')')
                return Repetition(count, inner_component)
            else:
                # repetition on a single character literal (no parentheses)
                if self._pos >= self._length:
                    raise ValueError("Unexpected end of input after repetition count")
                char = self._consume()
                if not ('A' <= char <= 'Z'):
                    raise ValueError(f"Expected uppercase letter after repetition count at position {self._pos-1}")
                inner_component = Literal(char)
                return Repetition(count, inner_component)
        else:
            # Parse a literal sequence until digit or '(' or ')' or end
            literal_chars = []
            while self._pos < self._length:
                curr = self._peek()
                if curr is None or curr.isdigit() or curr in '()':
                    break
                if 'A' <= curr <= 'Z':
                    literal_chars.append(curr)
                    self._pos += 1
                else:
                    raise ValueError(f"Unexpected character '{curr}' in literal at position {self._pos}")
            if literal_chars:
                return Literal(''.join(literal_chars))
            return None

    def _parse_until_closing_paren(self) -> GenomeComponent:
        """
        Parses until matching closing parenthesis.
        Components inside may be nested repetitions or literals.
        """
        components: List[GenomeComponent] = []
        while self._pos < self._length:
            if self._peek() == ')':
                break
            comp = self._parse_element()
            if comp is None:
                break
            components.append(comp)
        if not components:
            # Empty parentheses could theoretically occur but problem states seq length >=1, we'll treat empty as error
            raise ValueError("Empty parentheses are invalid")
        if len(components) == 1:
            return components[0]
        else:
            return CompoundSequence(components)


class CompoundSequence(GenomeComponent):
    """
    A complex sequence composed of multiple genome components in order.
    Abstracting concatenation to handle pieces of parsed sequences uniformly.
    """

    def __init__(self, components: List[GenomeComponent]):
        self._components = components
        self._length = sum(c.length() for c in self._components)

    def length(self) -> int:
        return self._length

    def get_char_at(self, index: int) -> Optional[str]:
        if not (0 <= index < self._length):
            return None
        current_index = 0
        for component in self._components:
            comp_len = component.length()
            if current_index + comp_len > index:
                return component.get_char_at(index - current_index)
            current_index += comp_len
        return None


class GenomeQuery:
    """
    External interface representing a query to fetch the i-th character from genome.
    This abstraction is made anticipating support for bulk queries or caching.
    """

    def __init__(self, genome_str: str):
        parser = GenomeParser(genome_str)
        self._genome = parser.parse()

    def query(self, index: int) -> str:
        if index < 0 or index >= self._genome.length():
            return '0'
        result = self._genome.get_char_at(index)
        if result is None:
            return '0'
        return result


def main():
    import sys
    lines = (line.rstrip('\n') for line in sys.stdin)
    for line in lines:
        if line == "0 0":
            break
        if not line:
            continue
        genome_str, idx_str = line.split(' ', 1)
        idx = int(idx_str)
        gql = GenomeQuery(genome_str)
        print(gql.query(idx))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.1003241017460823
    2. ' ABC' → logprob: -2.3503241539001465
    3. 'AB' → logprob: -9.600323677062988
    4. 'abc' → logprob: -10.975323677062988
    5. 'ABCDE' → logprob: -10.975323677062988
    6. 'abstract' → logprob: -11.725323677062988
    7. 'A' → logprob: -12.600323677062988
    8. 'import' → logprob: -13.600323677062988
    9. '`' → logprob: -14.100323677062988
    10. '```' → logprob: -14.475323677062988

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4833469092845917
    2. '.' → logprob: -0.9833469390869141
    3. 'import' → logprob: -5.358346939086914
    4. '```' → logprob: -6.608346939086914
    5. ':' → logprob: -7.233346939086914
    6. ' ,' → logprob: -7.358346939086914
    7. '<|end|>' → logprob: -7.608346939086914
    8. ' import' → logprob: -8.608346939086914
    9. ' .' → logprob: -8.858346939086914
    10. '\' → logprob: -9.108346939086914

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5438321828842163
    2. 'abstract' → logprob: -0.9188321828842163
    3. 'Abstract' → logprob: -3.918832302093506
    4. ' ' → logprob: -8.668831825256348
    5. ' Abstract' → logprob: -9.043831825256348
    6. '.abstract' → logprob: -9.293831825256348
    7. ' A' → logprob: -9.918831825256348
    8. '```' → logprob: -10.543831825256348
    9. ' ABC' → logprob: -10.918831825256348
    10. ' ABSTRACT' → logprob: -11.356331825256348

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -8.709308167453855e-05
    2. 'm' → logprob: -10.125086784362793
    3. 'classmethod' → logprob: -10.625086784362793
    4. 'meth' → logprob: -11.750086784362793
    5. '_method' → logprob: -12.000086784362793
    6. ' method' → logprob: -12.750086784362793
    7. 'staticmethod' → logprob: -13.125086784362793
    8. 'met' → logprob: -14.125086784362793
    9. '```' → logprob: -14.500086784362793
    10. '	method' → logprob: -14.625086784362793

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6977417469024658
    2. '```' → logprob: -1.0727417469024658
    3. 'class' → logprob: -2.322741746902466
    4. '\n' → logprob: -3.947741746902466
    5. '

' → logprob: -3.947741746902466
    6. '<|end|>' → logprob: -5.322741508483887
    7. '' → logprob: -5.572741508483887
    8. '``' → logprob: -5.822741508483887
    9. ' class' → logprob: -5.947741508483887
    10. '\' → logprob: -6.072741508483887

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30175668001174927
    2. '

' → logprob: -1.5517566204071045
    3. 'class' → logprob: -3.4267566204071045
    4. '```' → logprob: -4.426756858825684
    5. '' → logprob: -6.801756858825684
    6. '
' → logprob: -7.301756858825684
    7. ' 

' → logprob: -7.676756858825684
    8. ' class' → logprob: -7.801756858825684
    9. '\n' → logprob: -8.051756858825684
    10. '``' → logprob: -8.176756858825684

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.11309073120355606
    2. ' collections' → logprob: -2.488090753555298
    3. 'typing' → logprob: -4.488090515136719
    4. ' dat' → logprob: -4.988090515136719
    5. 'collections' → logprob: -6.363090515136719
    6. ' os' → logprob: -6.488090515136719
    7. ' sys' → logprob: -7.613090515136719
    8. ' math' → logprob: -7.613090515136719
    9. ' datetime' → logprob: -7.738090515136719
    10. ' io' → logprob: -7.988090515136719

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04913841187953949
    2. 'import' → logprob: -3.049138307571411
    3. '.' → logprob: -8.549138069152832
    4. '```' → logprob: -9.424138069152832
    5. '.import' → logprob: -9.924138069152832
    6. ' ' → logprob: -10.049138069152832
    7. '<|end|>' → logprob: -10.049138069152832
    8. ' as' → logprob: -10.424138069152832
    9. '_import' → logprob: -10.674138069152832
    10. '[' → logprob: -10.799138069152832

Token 11: ' List' (ID: 2655)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.2519164979457855
    2. ' Any' → logprob: -1.751916527748108
    3. 'List' → logprob: -4.376916408538818
    4. ' List' → logprob: -4.876916408538818
    5. 'Union' → logprob: -5.001916408538818
    6. ' Union' → logprob: -5.376916408538818
    7. 'Callable' → logprob: -5.376916408538818
    8. 'Protocol' → logprob: -5.501916408538818
    9. ' Callable' → logprob: -5.626916408538818
    10. ' Protocol' → logprob: -5.876916408538818

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5872112512588501
    2. '
' → logprob: -0.8372112512588501
    3. 'class' → logprob: -4.8372111320495605
    4. '


' → logprob: -6.8372111320495605
    5. '```' → logprob: -6.8372111320495605
    6. '\n' → logprob: -7.3372111320495605
    7. '
' → logprob: -8.212211608886719
    8. '``' → logprob: -9.712211608886719
    9. '`

' → logprob: -10.587211608886719
    10. '



' → logprob: -10.837211608886719

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.9574022889137268
    2. ' Optional' → logprob: -1.207402229309082
    3. ' Callable' → logprob: -2.082402229309082
    4. 'Optional' → logprob: -2.707402229309082
    5. ' Any' → logprob: -3.207402229309082
    6. 'Any' → logprob: -3.582402229309082
    7. 'Union' → logprob: -4.082402229309082
    8. ' Tuple' → logprob: -4.832402229309082
    9. 'Callable' → logprob: -4.832402229309082
    10. 'Iterable' → logprob: -5.082402229309082

Token 14: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6561225652694702
    2. '

' → logprob: -1.2811225652694702
    3. '
' → logprob: -1.9061225652694702
    4. '```' → logprob: -3.0311226844787598
    5. '\n' → logprob: -5.78112268447876
    6. '``' → logprob: -6.15612268447876
    7. ' class' → logprob: -8.031122207641602
    8. '


' → logprob: -8.156122207641602
    9. '
' → logprob: -8.531122207641602
    10. '<class' → logprob: -8.656122207641602

Token 15: ' Union' (ID: 14746)
  Prédit: ' Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.0465728044509888
    2. ' Optional' → logprob: -1.7965728044509888
    3. 'Any' → logprob: -2.171572685241699
    4. ' Any' → logprob: -2.421572685241699
    5. ' Callable' → logprob: -2.421572685241699
    6. 'Optional' → logprob: -2.671572685241699
    7. 'Union' → logprob: -2.671572685241699
    8. 'Callable' → logprob: -3.921572685241699
    9. ' Protocol' → logprob: -4.546572685241699
    10. ' Dict' → logprob: -4.921572685241699

Token 16: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9264613389968872
    2. 'class' → logprob: -1.1764613389968872
    3. '
' → logprob: -1.3014613389968872
    4. '```' → logprob: -4.176461219787598
    5. '\n' → logprob: -5.176461219787598
    6. '


' → logprob: -7.426461219787598
    7. '``' → logprob: -7.676461219787598
    8. ' class' → logprob: -7.926461219787598
    9. '`

' → logprob: -7.926461219787598
    10. '<class' → logprob: -8.426461219787598

Token 17: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.6261566281318665
    2. 'Optional' → logprob: -1.8761565685272217
    3. 'Any' → logprob: -2.0011565685272217
    4. ' Any' → logprob: -2.3761565685272217
    5. ' Callable' → logprob: -2.8761565685272217
    6. 'Callable' → logprob: -4.501156806945801
    7. ' Dict' → logprob: -4.876156806945801
    8. 'Dict' → logprob: -5.376156806945801
    9. 'Iterable' → logprob: -6.126156806945801
    10. ' Protocol' → logprob: -7.001156806945801

Token 18: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.26069512963294983
    2. '
' → logprob: -2.010695219039917
    3. '

' → logprob: -2.760695219039917
    4. '```' → logprob: -3.635695219039917
    5. '\n' → logprob: -5.510694980621338
    6. ' class' → logprob: -7.260694980621338
    7. '``' → logprob: -8.010695457458496
    8. '


' → logprob: -8.385695457458496
    9. '<class' → logprob: -8.510695457458496
    10. '
' → logprob: -9.010695457458496

Token 19: ' Iterator' (ID: 41994)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.8497977256774902
    2. ' Any' → logprob: -1.7247977256774902
    3. ' Callable' → logprob: -1.7247977256774902
    4. 'Callable' → logprob: -2.8497977256774902
    5. ' Dict' → logprob: -2.8497977256774902
    6. 'Dict' → logprob: -3.3497977256774902
    7. 'Iterable' → logprob: -3.5997977256774902
    8. ' Protocol' → logprob: -4.34979772567749
    9. 'Protocol' → logprob: -5.09979772567749
    10. ' Iterable' → logprob: -5.34979772567749

Token 20: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.08282370865345001
    2. '
' → logprob: -3.3328237533569336
    3. '```' → logprob: -3.5828237533569336
    4. '

' → logprob: -4.832823753356934
    5. '\n' → logprob: -5.082823753356934
    6. ' class' → logprob: -6.957823753356934
    7. '<class' → logprob: -7.707823753356934
    8. '``' → logprob: -8.957823753356934
    9. 'import' → logprob: -9.832823753356934
    10. '-class' → logprob: -9.957823753356934

Token 21: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.190178904333152e-05
    2. '```' → logprob: -11.000031471252441
    3. '
' → logprob: -11.750031471252441
    4. ' class' → logprob: -12.875031471252441
    5. 'c' → logprob: -13.500031471252441
    6. 'clas' → logprob: -14.000031471252441
    7. '"class' → logprob: -14.250031471252441
    8. '<class' → logprob: -14.625031471252441
    9. '\n' → logprob: -15.000031471252441
    10. '``' → logprob: -15.500031471252441

Token 22: ' Genome' (ID: 168601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11130405962467194
    2. ' Abstract' → logprob: -3.1113040447235107
    3. ' Base' → logprob: -4.23630428314209
    4. ' Serializer' → logprob: -4.98630428314209
    5. ' Basic' → logprob: -5.11130428314209
    6. ' Space' → logprob: -5.23630428314209
    7. ' ABC' → logprob: -5.36130428314209
    8. ' My' → logprob: -5.36130428314209
    9. ' Shape' → logprob: -5.61130428314209
    10. ' Parser' → logprob: -6.23630428314209

Token 23: 'Component' (ID: 2746)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04940406605601311
    2. ':' → logprob: -3.0494041442871094
    3. '(Abstract' → logprob: -7.174404144287109
    4. '<|end|>' → logprob: -11.67440414428711
    5. '(object' → logprob: -12.04940414428711
    6. ')' → logprob: -12.17440414428711
    7. ' (' → logprob: -12.29940414428711
    8. '():' → logprob: -12.54940414428711
    9. '):' → logprob: -12.67440414428711
    10. '(
' → logprob: -12.67440414428711

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18062785267829895
    2. ':' → logprob: -1.8056278228759766
    3. '(Abstract' → logprob: -7.055627822875977
    4. ' :' → logprob: -11.930627822875977
    5. '(:' → logprob: -12.930627822875977
    6. '```' → logprob: -13.305627822875977
    7. '():' → logprob: -13.555627822875977
    8. '(Base' → logprob: -13.805627822875977
    9. '(Exception' → logprob: -14.180627822875977
    10. '(object' → logprob: -14.305627822875977

Token 25: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.3133106827735901
    2. ' ABC' → logprob: -1.3133106231689453
    3. ')' → logprob: -11.188310623168945
    4. 'abc' → logprob: -11.438310623168945
    5. ' ' → logprob: -12.063310623168945
    6. '   ' → logprob: -12.188310623168945
    7. 'ABCDE' → logprob: -12.438310623168945
    8. 'Abstract' → logprob: -12.688310623168945
    9. 'AB' → logprob: -13.688310623168945
    10. '  ' → logprob: -13.938310623168945

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005244385101832449
    2. ')' → logprob: -8.000524520874023
    3. ':' → logprob: -8.625524520874023
    4. '):
' → logprob: -12.000524520874023
    5. ',' → logprob: -13.125524520874023
    6. ' ):' → logprob: -14.000524520874023
    7. '):

' → logprob: -15.750524520874023
    8. '):
' → logprob: -16.750524520874023
    9. ']:' → logprob: -16.875524520874023
    10. '():' → logprob: -17.500524520874023

Token 27: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014852700755000114
    2. '   ' → logprob: -4.389852523803711
    3. '<|end|>' → logprob: -6.514852523803711
    4. ':
' → logprob: -8.514852523803711
    5. '    
' → logprob: -9.014852523803711
    6. ' :' → logprob: -9.389852523803711
    7. '```' → logprob: -9.514852523803711
    8. '    ' → logprob: -9.514852523803711
    9. '<|end|>' → logprob: -9.639852523803711
    10. '
' → logprob: -10.139852523803711

Token 28: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10392340272665024
    2. '    ' → logprob: -2.8539233207702637
    3. '    
' → logprob: -4.353923320770264
    4. 'def' → logprob: -4.353923320770264
    5. ':' → logprob: -5.353923320770264
    6. ' ' → logprob: -5.603923320770264
    7. ' def' → logprob: -6.228923320770264
    8. ' 
' → logprob: -6.728923320770264
    9. '  ' → logprob: -7.853923320770264
    10. '
' → logprob: -7.853923320770264

Token 29: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4045761823654175
    2. ' """
' → logprob: -2.154576301574707
    3. '"""
' → logprob: -2.654576301574707
    4. '   ' → logprob: -2.779576301574707
    5. ' """' → logprob: -2.779576301574707
    6. 'abstract' → logprob: -4.404576301574707
    7. '""' → logprob: -5.529576301574707
    8. 'class' → logprob: -6.279576301574707
    9. 'doc' → logprob: -6.779576301574707
    10. '"' → logprob: -7.279576301574707

Token 30: ' Abstract' (ID: 17413)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3915891945362091
    2. 'Rep' → logprob: -1.7665891647338867
    3. 'A' → logprob: -3.1415891647338867
    4. 'Base' → logprob: -3.2665891647338867
    5. 'An' → logprob: -3.5165891647338867
    6. 'Abstract' (adapté à ' Abstract') → logprob: -4.141589164733887
    7. ' """' → logprob: -5.516589164733887
    8. '"""
' → logprob: -5.516589164733887
    9. ' Represents' → logprob: -6.016589164733887
    10. '   ' → logprob: -6.141589164733887

Token 31: ' base' (ID: 3611)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.47564202547073364
    2. ' base' → logprob: -1.3506419658660889
    3. '   ' → logprob: -2.975641965866089
    4. 'class' → logprob: -3.100641965866089
    5. 'Base' → logprob: -4.475642204284668
    6. ' Base' → logprob: -5.600642204284668
    7. '    
' → logprob: -5.725642204284668
    8. ' ' → logprob: -6.475642204284668
    9. '    ' → logprob: -6.725642204284668
    10. '
' → logprob: -6.850642204284668

Token 32: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5417383909225464
    2. ' class' → logprob: -0.9167383909225464
    3. ' ' → logprob: -4.541738510131836
    4. '<|end|>' → logprob: -5.041738510131836
    5. '   ' → logprob: -7.416738510131836
    6. '<|end|>' → logprob: -8.666738510131836
    7. '  ' → logprob: -8.791738510131836
    8. '<class' → logprob: -9.041738510131836
    9. '```' → logprob: -9.416738510131836
    10. 'classmethod' → logprob: -9.791738510131836

Token 33: ' representing' (ID: 25389)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04213576391339302
    2. '<|end|>' → logprob: -3.542135715484619
    3. '   ' → logprob: -4.917135715484619
    4. 'for' → logprob: -5.792135715484619
    5. '<|end|>' → logprob: -7.167135715484619
    6. 'class' → logprob: -8.542136192321777
    7. ' of' → logprob: -8.792136192321777
    8. '```' → logprob: -8.792136192321777
    9. ' representing' → logprob: -8.792136192321777
    10. ':' → logprob: -9.042136192321777

Token 34: ' any' (ID: 1062)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.003000404452905059
    2. ' an' → logprob: -6.753000259399414
    3. ' the' → logprob: -7.003000259399414
    4. '<|end|>' → logprob: -7.128000259399414
    5. 'a' → logprob: -10.003000259399414
    6. '<|end|>' → logprob: -10.503000259399414
    7. ' genomic' → logprob: -11.253000259399414
    8. ' components' → logprob: -12.003000259399414
    9. ' part' → logprob: -12.128000259399414
    10. ' genetic' → logprob: -12.628000259399414

Token 35: ' component' (ID: 6392)
  Prédit: ' genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' genome' → logprob: -0.28966766595840454
    2. ' component' → logprob: -1.7896676063537598
    3. ' genomic' → logprob: -3.1646676063537598
    4. 'component' → logprob: -4.78966760635376
    5. 'gen' → logprob: -4.91466760635376
    6. ' part' → logprob: -5.03966760635376
    7. 'Genome' → logprob: -5.16466760635376
    8. ' genetic' → logprob: -5.41466760635376
    9. ' Genome' → logprob: -5.66466760635376
    10. ' gene' → logprob: -6.53966760635376

Token 36: ' in' (ID: 306)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0911029800772667
    2. '<|end|>' → logprob: -2.4661030769348145
    3. '<|end|>' → logprob: -7.2161030769348145
    4. '```' → logprob: -7.8411030769348145
    5. 'of' → logprob: -8.216102600097656
    6. ' in' → logprob: -8.716102600097656
    7. '   ' → logprob: -8.966102600097656
    8. 'class' → logprob: -9.216102600097656
    9. ' that' → logprob: -9.466102600097656
    10. ' class' → logprob: -9.841102600097656

Token 37: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5948039293289185
    2. ' a' → logprob: -0.8448039293289185
    3. ' genome' → logprob: -4.844803810119629
    4. ' DNA' → logprob: -5.844803810119629
    5. ' an' → logprob: -6.219803810119629
    6. ' genomic' → logprob: -6.594803810119629
    7. ' genetic' → logprob: -6.719803810119629
    8. ' genetics' → logprob: -7.094803810119629
    9. 'the' → logprob: -7.219803810119629
    10. ' genomes' → logprob: -7.344803810119629

Token 38: ' genome' (ID: 64778)
  Prédit: ' genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' genome' → logprob: -0.051749564707279205
    2. ' genetic' → logprob: -3.9267494678497314
    3. ' genomic' → logprob: -4.4267497062683105
    4. ' Genome' → logprob: -4.9267497062683105
    5. ' gene' → logprob: -5.8017497062683105
    6. ' genom' → logprob: -6.4267497062683105
    7. ' DNA' → logprob: -6.5517497062683105
    8. ' genomes' → logprob: -6.9267497062683105
    9. ' a' → logprob: -7.3017497062683105
    10. ' genetics' → logprob: -7.3017497062683105

Token 39: ' sequence' (ID: 16281)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33738091588020325
    2. '.' → logprob: -1.9623808860778809
    3. '"""' → logprob: -2.712380886077881
    4. '```' → logprob: -3.212380886077881
    5. ')' → logprob: -3.712380886077881
    6. '"""
' → logprob: -5.712380886077881
    7. '`' → logprob: -6.587380886077881
    8. '
' → logprob: -6.712380886077881
    9. '."""' → logprob: -6.837380886077881
    10. '.
' → logprob: -7.087380886077881

Token 40: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8534494042396545
    2. '   ' → logprob: -1.1034493446350098
    3. '```' → logprob: -2.1034493446350098
    4. '"""' → logprob: -2.8534493446350098
    5. ')' → logprob: -3.4784493446350098
    6. '
' → logprob: -4.10344934463501
    7. '<|end|>' → logprob: -5.97844934463501
    8. ',' → logprob: -6.10344934463501
    9. '`' → logprob: -6.22844934463501
    10. '."""' → logprob: -6.97844934463501

Token 41: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.21308723092079163
    2. '   ' → logprob: -1.7130872011184692
    3. ')' → logprob: -4.96308708190918
    4. '```' → logprob: -5.96308708190918
    5. ' """' → logprob: -6.71308708190918
    6. '""' → logprob: -7.83808708190918
    7. '"""
' → logprob: -8.96308708190918
    8. '
' → logprob: -9.71308708190918
    9. '"""

' → logprob: -10.08808708190918
    10. '    
' → logprob: -10.21308708190918

Token 42: ' """

' (ID: 28800)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.34669190645217896
    2. '   ' → logprob: -1.8466918468475342
    3. ')' → logprob: -2.471691846847534
    4. '```' → logprob: -3.471691846847534
    5. '
' → logprob: -4.971692085266113
    6. '\n' → logprob: -5.346692085266113
    7. '""' → logprob: -6.346692085266113
    8. '    
' → logprob: -6.846692085266113
    9. ' """' → logprob: -7.096692085266113
    10. '"' → logprob: -7.346692085266113

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41116568446159363
    2. '@' → logprob: -1.411165714263916
    3. '    
' → logprob: -3.161165714263916
    4. ' 
' → logprob: -3.411165714263916
    5. ' ' → logprob: -5.161165714263916
    6. '    ' → logprob: -5.286165714263916
    7. '     
' → logprob: -6.161165714263916
    8. '
' → logprob: -6.411165714263916
    9. ' @' → logprob: -6.661165714263916
    10. '   
' → logprob: -7.661165714263916

Token 44: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0031936357263475657
    2. '   ' → logprob: -6.1281938552856445
    3. ' @' → logprob: -7.0031938552856445
    4. ' ' → logprob: -10.378193855285645
    5. '@
' → logprob: -10.753193855285645
    6. '    
' → logprob: -11.128193855285645
    7. '    ' → logprob: -11.128193855285645
    8. '
' → logprob: -11.878193855285645
    9. '  ' → logprob: -12.628193855285645
    10. ' 
' → logprob: -12.753193855285645

Token 45: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -8.85235276655294e-05
    2. 'ab' → logprob: -10.000088691711426
    3. 'abs' → logprob: -10.125088691711426
    4. 'abc' → logprob: -13.000088691711426
    5. '.abstract' → logprob: -15.375088691711426
    6. 'a' → logprob: -15.750088691711426
    7. 'staticmethod' → logprob: -16.25008773803711
    8. ' abstract' → logprob: -16.37508773803711
    9. 'property' → logprob: -17.25008773803711
    10. 'absolute' → logprob: -17.50008773803711

Token 46: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0003728774609044194
    2. '_method' → logprob: -8.000372886657715
    3. 'meth' → logprob: -11.000372886657715
    4. 'm' → logprob: -11.250372886657715
    5. 'classmethod' → logprob: -13.000372886657715
    6. '_' → logprob: -13.000372886657715
    7. '   ' → logprob: -14.125372886657715
    8. 'staticmethod' → logprob: -15.000372886657715
    9. '```' → logprob: -15.000372886657715
    10. '	method' → logprob: -15.125372886657715

Token 47: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5601957440376282
    2. '
' → logprob: -0.9351957440376282
    3. ' def' → logprob: -3.5601956844329834
    4. '    
' → logprob: -5.9351959228515625
    5. '   ' → logprob: -7.0601959228515625
    6. '(' → logprob: -7.1851959228515625
    7. '	def' → logprob: -7.1851959228515625
    8. '<|end|>' → logprob: -7.4351959228515625
    9. ' 
' → logprob: -7.8101959228515625
    10. '(
' → logprob: -8.060195922851562

Token 48: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4784986972808838
    2. '(' → logprob: -1.2284986972808838
    3. '    
' → logprob: -3.853498697280884
    4. 'method' → logprob: -4.103498458862305
    5. '
' → logprob: -4.353498458862305
    6. '(
' → logprob: -4.603498458862305
    7. ' def' → logprob: -4.603498458862305
    8. '<|end|>' → logprob: -5.478498458862305
    9. '(def' → logprob: -6.353498458862305
    10. '   ' → logprob: -6.728498458862305

Token 49: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.24855566024780273
    2. 'method' → logprob: -2.4985556602478027
    3. 'classmethod' → logprob: -2.7485556602478027
    4. ' def' → logprob: -2.9985556602478027
    5. 'abstract' → logprob: -4.373555660247803
    6. 'abc' → logprob: -5.248555660247803
    7. 'property' → logprob: -5.873555660247803
    8. 'staticmethod' → logprob: -6.248555660247803
    9. '
' → logprob: -8.248556137084961
    10. 'class' → logprob: -8.498556137084961

Token 50: ' length' (ID: 5517)
  Prédit: ' decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' decode' → logprob: -0.6067840456962585
    2. ' get' → logprob: -1.4817841053009033
    3. ' generate' → logprob: -2.9817841053009033
    4. ' def' → logprob: -3.1067841053009033
    5. ' sequence' → logprob: -3.7317841053009033
    6. ' serialize' → logprob: -3.8567841053009033
    7. ' process' → logprob: -4.106783866882324
    8. ' describe' → logprob: -4.481783866882324
    9. ' parse' → logprob: -4.606783866882324
    10. ' iterate' → logprob: -4.856783866882324

Token 51: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28207260370254517
    2. '(self' → logprob: -1.4070725440979004
    3. '(
' → logprob: -7.7820725440979
    4. '()' → logprob: -8.157073020935059
    5. '<|end|>' → logprob: -9.657073020935059
    6. 'self' → logprob: -9.907073020935059
    7. '(s' → logprob: -10.157073020935059
    8. 's' → logprob: -11.032073020935059
    9. ' (' → logprob: -11.282073020935059
    10. ')' → logprob: -11.782073020935059

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04402339830994606
    2. '):' → logprob: -3.1690235137939453
    3. ' )' → logprob: -7.294023513793945
    4. 'self' → logprob: -8.794023513793945
    5. ' ):' → logprob: -9.044023513793945
    6. ')->' → logprob: -10.794023513793945
    7. ',' → logprob: -10.919023513793945
    8. '):
' → logprob: -11.294023513793945
    9. ' ' → logprob: -11.544023513793945
    10. ':' → logprob: -12.294023513793945

Token 53: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5765089392662048
    2. '(' → logprob: -0.8265089392662048
    3. '(
' → logprob: -7.95150899887085
    4. 'self' → logprob: -9.201508522033691
    5. '(s' → logprob: -9.576508522033691
    6. 's' → logprob: -10.701508522033691
    7. '()' → logprob: -11.826508522033691
    8. '(

' → logprob: -12.576508522033691
    9. ':' → logprob: -12.701508522033691
    10. ')' → logprob: -13.201508522033691

Token 54: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0024799390230327845
    2. 'int' → logprob: -6.0024800300598145
    3. ' ' → logprob: -12.502479553222656
    4. ' Optional' → logprob: -15.252479553222656
    5. ' in' → logprob: -15.877479553222656
    6. ' Integer' → logprob: -17.127479553222656
    7. ' Int' → logprob: -17.127479553222656
    8. ' i' → logprob: -17.252479553222656
    9. ' ' → logprob: -17.252479553222656
    10. ':int' → logprob: -17.502479553222656

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013596400385722518
    2. '<|end|>' → logprob: -7.376359462738037
    3. '():' → logprob: -7.751359462738037
    4. ':return' → logprob: -9.251359939575195
    5. ':
' → logprob: -9.626359939575195
    6. '(' → logprob: -10.376359939575195
    7. '   ' → logprob: -10.751359939575195
    8. ')' → logprob: -11.001359939575195
    9. '<|end|>' → logprob: -11.251359939575195
    10. '()' → logprob: -11.376359939575195

Token 56: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3084728717803955
    2. 'pass' → logprob: -1.9334728717803955
    3. ' pass' → logprob: -2.1834728717803955
    4. '   ' → logprob: -5.808472633361816
    5. ' ' → logprob: -6.933472633361816
    6. '...' → logprob: -7.183472633361816
    7. '    ' → logprob: -7.433472633361816
    8. '\n' → logprob: -7.808472633361816
    9. 'raise' → logprob: -7.933472633361816
    10. ' raise' → logprob: -8.058472633361816

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.721228368813172e-05
    2. ' pass' → logprob: -10.000086784362793
    3. '   ' → logprob: -11.000086784362793
    4. '      ' → logprob: -12.000086784362793
    5. 'pass' → logprob: -12.250086784362793
    6. '"""' → logprob: -12.750086784362793
    7. '     ' → logprob: -13.000086784362793
    8. '        ' → logprob: -13.125086784362793
    9. '    ' → logprob: -13.250086784362793
    10. '...' → logprob: -13.625086784362793

Token 59: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015242788940668106
    2. '"""' → logprob: -4.765242576599121
    3. ' pass' → logprob: -5.640242576599121
    4. ' """' → logprob: -5.890242576599121
    5. 'pass' → logprob: -9.640242576599121
    6. 'Calculate' → logprob: -10.140242576599121
    7. ' Calculate' → logprob: -10.515242576599121
    8. '        ' → logprob: -10.515242576599121
    9. '```' → logprob: -10.515242576599121
    10. '   ' → logprob: -11.015242576599121

Token 60: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3167575001716614
    2. '<|end|>' → logprob: -1.3167574405670166
    3. '<|end|>' → logprob: -6.316757678985596
    4. 'the' → logprob: -7.066757678985596
    5. ' ' → logprob: -7.441757678985596
    6. '       ' → logprob: -9.566757202148438
    7. '   ' → logprob: -9.691757202148438
    8. ' a' → logprob: -10.941757202148438
    9. '  ' → logprob: -10.941757202148438
    10. '    ' → logprob: -11.066757202148438

Token 61: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.036031730473041534
    2. 'length' → logprob: -3.536031723022461
    3. ' total' → logprob: -5.286031723022461
    4. ' number' → logprob: -6.911031723022461
    5. 'total' → logprob: -9.161031723022461
    6. 'number' → logprob: -9.411031723022461
    7. ' overall' → logprob: -12.536031723022461
    8. '   ' → logprob: -12.786031723022461
    9. ' current' → logprob: -13.036031723022461
    10. 'l' → logprob: -13.661031723022461

Token 62: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.006676767487078905
    2. 'the' → logprob: -5.13167667388916
    3. '<|end|>' → logprob: -7.50667667388916
    4. ' ' → logprob: -9.50667667388916
    5. ' a' → logprob: -10.00667667388916
    6. ' self' → logprob: -10.50667667388916
    7. ' ' → logprob: -11.25667667388916
    8. 'self' → logprob: -11.50667667388916
    9. '<|end|>' → logprob: -11.63167667388916
    10. ' this' → logprob: -11.88167667388916

Token 64: ' expanded' (ID: 28044)
  Prédit: ' component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' component' → logprob: -0.46838852763175964
    2. ' genome' → logprob: -1.343388557434082
    3. 'component' → logprob: -2.718388557434082
    4. ' sequence' → logprob: -3.468388557434082
    5. 'sequence' → logprob: -4.718388557434082
    6. 'gen' → logprob: -5.343388557434082
    7. ' genomic' → logprob: -6.593388557434082
    8. 'Genome' → logprob: -8.218388557434082
    9. ' current' → logprob: -8.468388557434082
    10. ' Genome' → logprob: -8.718388557434082

Token 65: ' genome' (ID: 64778)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.28033360838890076
    2. ' component' → logprob: -2.1553335189819336
    3. ' genome' → logprob: -2.2803335189819336
    4. 'sequence' → logprob: -3.7803335189819336
    5. 'component' → logprob: -6.155333518981934
    6. 'gen' → logprob: -7.905333518981934
    7. ' genomic' → logprob: -8.280333518981934
    8. '<|end|>' → logprob: -8.530333518981934
    9. ' DNA' → logprob: -8.655333518981934
    10. ' ' → logprob: -9.780333518981934

Token 66: ' sequence' (ID: 16281)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.7250626087188721
    2. ' component' → logprob: -1.225062608718872
    3. '   ' → logprob: -2.350062608718872
    4. 'sequence' → logprob: -3.225062608718872
    5. ' sequence' → logprob: -3.225062608718872
    6. '<|end|>' → logprob: -3.725062608718872
    7. '_component' → logprob: -5.100062370300293
    8. '       ' → logprob: -5.725062370300293
    9. '.' → logprob: -5.975062370300293
    10. '```' → logprob: -6.350062370300293

Token 67: ' represented' (ID: 27328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.03692171350121498
    2. 'by' → logprob: -3.911921739578247
    3. '<|end|>' → logprob: -4.161921501159668
    4. '   ' → logprob: -8.161921501159668
    5. '<|end|>' → logprob: -8.411921501159668
    6. '  ' → logprob: -10.161921501159668
    7. '.' → logprob: -10.286921501159668
    8. '    ' → logprob: -10.536921501159668
    9. ' ' → logprob: -11.036921501159668
    10. '```' → logprob: -11.161921501159668

Token 69: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6937955617904663
    2. 'self' → logprob: -1.3187955617904663
    3. ' self' → logprob: -1.5687955617904663
    4. 'the' → logprob: -3.818795680999756
    5. ' ' → logprob: -6.943795680999756
    6. ' this' → logprob: -7.568795680999756
    7. '   ' → logprob: -8.943795204162598
    8. '<|end|>' → logprob: -8.943795204162598
    9. ' `' → logprob: -9.068795204162598
    10. '    ' → logprob: -9.193795204162598

Token 70: ' component' (ID: 6392)
  Prédit: ' component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' component' → logprob: -0.15316468477249146
    2. '<|end|>' → logprob: -2.4031646251678467
    3. ' object' → logprob: -3.5281646251678467
    4. 'component' → logprob: -4.028164863586426
    5. ' ' → logprob: -6.403164863586426
    6. '.' → logprob: -7.528164863586426
    7. '<|end|>' → logprob: -8.028164863586426
    8. 'object' → logprob: -8.278164863586426
    9. '   ' → logprob: -8.528164863586426
    10. '
' → logprob: -8.528164863586426

Token 71: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.08952363580465317
    2. '<|end|>' → logprob: -3.2145235538482666
    3. '\' → logprob: -3.4645235538482666
    4. '   ' → logprob: -5.464523792266846
    5. '       ' → logprob: -5.964523792266846
    6. '```' → logprob: -6.089523792266846
    7. '\r' → logprob: -6.839523792266846
    8. '"\' → logprob: -7.339523792266846
    9. ' 
' → logprob: -7.339523792266846
    10. '
' → logprob: -7.714523792266846

Token 73: ' """
' (ID: 7037)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.02305794693529606
    2. '<|end|>' → logprob: -5.02305793762207
    3. ' 
' → logprob: -5.27305793762207
    4. '\' → logprob: -5.52305793762207
    5. '
' → logprob: -6.14805793762207
    6. '```' → logprob: -6.64805793762207
    7. '"""' → logprob: -7.02305793762207
    8. '\r' → logprob: -7.39805793762207
    9. '"""
' (adapté à ' """
') → logprob: -8.14805793762207
    10. '       ' → logprob: -8.27305793762207

Token 74: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.12531085312366486
    2. '   ' → logprob: -2.8753108978271484
    3. ' 
' → logprob: -3.3753108978271484
    4. '\' → logprob: -4.875310897827148
    5. '    
' → logprob: -5.000310897827148
    6. '       ' → logprob: -5.125310897827148
    7. '\r' → logprob: -6.125310897827148
    8. 'n' → logprob: -6.625310897827148
    9. '    ' → logprob: -7.000310897827148
    10. '        
' → logprob: -7.875310897827148

Token 75: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.20990625023841858
    2. '...' → logprob: -1.7099062204360962
    3. 'raise' → logprob: -5.209906101226807
    4. ' pass' → logprob: -6.584906101226807
    5. '       ' → logprob: -6.709906101226807
    6. '   ' → logprob: -8.709906578063965
    7. ' ...' → logprob: -9.584906578063965
    8. 'pas' → logprob: -9.959906578063965
    9. '```' → logprob: -10.084906578063965
    10. 'p' → logprob: -10.834906578063965

Token 76: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4014446437358856
    2. '\n' → logprob: -1.651444673538208
    3. '   ' → logprob: -2.776444673538208
    4. '<|end|>' → logprob: -3.401444673538208
    5. '    
' → logprob: -3.901444673538208
    6. '

' → logprob: -4.401444435119629
    7. '```' → logprob: -6.401444435119629
    8. 'newline' → logprob: -6.526444435119629
    9. '<|end|>' → logprob: -6.526444435119629
    10. '


' → logprob: -6.651444435119629

Token 77: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.365496963262558
    2. '\n' → logprob: -2.365496873855591
    3. '   ' → logprob: -2.490496873855591
    4. '<|end|>' → logprob: -2.615496873855591
    5. '

' → logprob: -3.490496873855591
    6. '    
' → logprob: -4.86549711227417
    7. '```' → logprob: -5.24049711227417
    8. '


' → logprob: -6.11549711227417
    9. '<|end|>' → logprob: -6.24049711227417
    10. ' 
' → logprob: -6.36549711227417

Token 78: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4898325204849243
    2. '
' → logprob: -2.1148324012756348
    3. '\n' → logprob: -2.4898324012756348
    4. '@' (adapté à ' @') → logprob: -2.7398324012756348
    5. '    
' → logprob: -2.9898324012756348
    6. 'def' → logprob: -3.6148324012756348
    7. '```' → logprob: -4.989832401275635
    8. '@property' → logprob: -5.364832401275635
    9. '<|end|>' → logprob: -5.364832401275635
    10. '

' → logprob: -5.364832401275635

Token 79: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.004133372567594051
    2. 'property' → logprob: -5.504133224487305
    3. 'staticmethod' → logprob: -10.629133224487305
    4. 'classmethod' → logprob: -10.879133224487305
    5. 'abc' → logprob: -12.254133224487305
    6. 'ab' → logprob: -13.129133224487305
    7. 'class' → logprob: -13.254133224487305
    8. 'abs' → logprob: -13.504133224487305
    9. 'b' → logprob: -14.004133224487305
    10. ' abstract' → logprob: -14.504133224487305

Token 80: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.055233389139175415
    2. 'def' → logprob: -3.0552334785461426
    3. '_method' → logprob: -5.055233478546143
    4. 'meth' → logprob: -9.430233001708984
    5. '   ' → logprob: -10.180233001708984
    6. '<|end|>' → logprob: -10.430233001708984
    7. 'classmethod' → logprob: -10.930233001708984
    8. ' def' → logprob: -11.305233001708984
    9. 'token' → logprob: -11.555233001708984
    10. ')' → logprob: -11.680233001708984

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31928160786628723
    2. ' def' → logprob: -2.194281578063965
    3. 'def' → logprob: -2.444281578063965
    4. '<|end|>' → logprob: -2.694281578063965
    5. ' 
' → logprob: -5.569281578063965
    6. '<|end|>' → logprob: -7.069281578063965
    7. '    
' → logprob: -7.194281578063965
    8. '  
' → logprob: -7.944281578063965
    9. ')' → logprob: -8.069281578063965
    10. '   ' → logprob: -8.444281578063965

Token 82: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5744702219963074
    2. '
' → logprob: -1.3244702816009521
    3. ' def' → logprob: -1.8244702816009521
    4. '   ' → logprob: -4.949470043182373
    5. '```' → logprob: -7.949470043182373
    6. '    ' → logprob: -8.074470520019531
    7. '<|end|>' → logprob: -8.324470520019531
    8. ' 
' → logprob: -8.324470520019531
    9. '	def' → logprob: -8.449470520019531
    10. ')' → logprob: -8.699470520019531

Token 83: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005533903022296727
    2. ' def' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.500553131103516
    4. '
' → logprob: -16.625553131103516
    5. '```' → logprob: -17.000553131103516
    6. 'd' → logprob: -17.125553131103516
    7. 'de' → logprob: -17.250553131103516
    8. ' ' → logprob: -17.875553131103516
    9. 'e' → logprob: -18.500553131103516
    10. '  ' → logprob: -19.250553131103516

Token 84: ' get' (ID: 717)
  Prédit: ' expand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expand' → logprob: -0.10180209577083588
    2. ' get' → logprob: -4.101801872253418
    3. ' expanded' → logprob: -4.101801872253418
    4. ' iter' → logprob: -4.351801872253418
    5. 'expand' → logprob: -4.351801872253418
    6. ' sequence' → logprob: -4.476801872253418
    7. ' iterator' → logprob: -4.726801872253418
    8. ' generate' → logprob: -5.476801872253418
    9. ' to' → logprob: -5.851801872253418
    10. ' render' → logprob: -6.101801872253418

Token 85: '_char' (ID: 23398)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.02133280783891678
    2. '_iterator' → logprob: -4.146332740783691
    3. '_sequences' → logprob: -6.896332740783691
    4. '_' → logprob: -7.021332740783691
    5. '_component' → logprob: -7.521332740783691
    6. '_sub' → logprob: -7.896332740783691
    7. '_tokens' → logprob: -8.021332740783691
    8. '_exp' → logprob: -8.271332740783691
    9. '_data' → logprob: -8.521332740783691
    10. '_iter' → logprob: -8.646332740783691

Token 86: '_at' (ID: 8254)
  Prédit: 'acter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acter' → logprob: -0.5039379000663757
    2. 'acters' → logprob: -1.2539379596710205
    3. '<|end|>' → logprob: -3.3789379596710205
    4. 's' → logprob: -3.5039379596710205
    5. '_at' → logprob: -3.7539379596710205
    6. '(self' → logprob: -5.003937721252441
    7. '(' → logprob: -5.003937721252441
    8. 'ACTER' → logprob: -6.003937721252441
    9. ' at' → logprob: -6.253937721252441
    10. 'at' → logprob: -6.378937721252441

Token 87: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6442714929580688
    2. '(self' → logprob: -0.7692714929580688
    3. '<|end|>' → logprob: -4.644271373748779
    4. 'self' → logprob: -7.019271373748779
    5. '(
' → logprob: -7.269271373748779
    6. 's' → logprob: -9.144271850585938
    7. '```' → logprob: -9.644271850585938
    8. ' (' → logprob: -9.644271850585938
    9. '(s' → logprob: -9.894271850585938
    10. '<|end|>' → logprob: -10.769271850585938

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026873981580138206
    2. ' ,' → logprob: -3.65187406539917
    3. ')' → logprob: -8.026873588562012
    4. ' )' → logprob: -9.026873588562012
    5. ',index' → logprob: -9.901873588562012
    6. 'index' → logprob: -10.276873588562012
    7. ',
' → logprob: -10.901873588562012
    8. '  ' → logprob: -12.026873588562012
    9. '    ' → logprob: -13.026873588562012
    10. ' ,
' → logprob: -13.151873588562012

Token 89: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.03910612687468529
    2. 'index' → logprob: -3.4141061305999756
    3. ' self' → logprob: -5.5391058921813965
    4. ' pos' → logprob: -7.0391058921813965
    5. ' idx' → logprob: -8.289106369018555
    6. 'self' → logprob: -8.539106369018555
    7. ' position' → logprob: -8.914106369018555
    8. 'pos' → logprob: -11.289106369018555
    9. ' i' → logprob: -11.539106369018555
    10. '   ' → logprob: -11.914106369018555

Token 90: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4012059271335602
    2. ':' → logprob: -1.1512058973312378
    3. '):' → logprob: -4.901206016540527
    4. '<|end|>' → logprob: -5.151206016540527
    5. '<|end|>' → logprob: -7.776206016540527
    6. ':int' → logprob: -8.651206016540527
    7. ' )' → logprob: -9.151206016540527
    8. '=' → logprob: -9.276206016540527
    9. ' ' → logprob: -10.151206016540527
    10. ',' → logprob: -10.776206016540527

Token 91: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12375375628471375
    2. ' int' → logprob: -2.248753786087036
    3. ')' → logprob: -4.623753547668457
    4. '[int' → logprob: -7.498753547668457
    5. ':int' → logprob: -8.873753547668457
    6. '<|end|>' → logprob: -8.998753547668457
    7. ']int' → logprob: -9.123753547668457
    8. ' )' → logprob: -9.248753547668457
    9. 'Int' → logprob: -11.373753547668457
    10. ' ' → logprob: -12.373753547668457

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016921341011766344
    2. '):' → logprob: -8.750168800354004
    3. ':' → logprob: -12.125168800354004
    4. ' )' → logprob: -12.250168800354004
    5. '):
' → logprob: -15.250168800354004
    6. ')->' → logprob: -15.375168800354004
    7. ')
' → logprob: -16.12516975402832
    8. ' ' → logprob: -17.25016975402832
    9. '   ' → logprob: -17.87516975402832
    10. '),' → logprob: -18.12516975402832

Token 93: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028290389105677605
    2. ':' → logprob: -3.903290271759033
    3. ' ->' → logprob: -5.653290271759033
    4. '->' → logprob: -6.153290271759033
    5. ')->' → logprob: -6.778290271759033
    6. '):' → logprob: -7.278290271759033
    7. ' )' → logprob: -8.528290748596191
    8. ' :' → logprob: -11.028290748596191
    9. ' )->' → logprob: -11.653290748596191
    10. '<|end|>' → logprob: -11.653290748596191

Token 94: ' Optional' (ID: 19351)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.0036334465257823467
    2. 'str' → logprob: -5.628633499145508
    3. ' ' → logprob: -11.128633499145508
    4. ' Optional' → logprob: -11.878633499145508
    5. '	str' → logprob: -12.378633499145508
    6. '[str' → logprob: -12.503633499145508
    7. ' Union' → logprob: -13.253633499145508
    8. ' '' → logprob: -14.128633499145508
    9. ' ' → logprob: -15.253633499145508
    10. ' int' → logprob: -15.378633499145508

Token 95: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.2855416066013277e-05
    2. '[' → logprob: -10.375032424926758
    3. '[
' → logprob: -13.875032424926758
    4. '[int' → logprob: -14.500032424926758
    5. 'str' → logprob: -15.875032424926758
    6. '[s' → logprob: -17.875032424926758
    7. '(str' → logprob: -19.125032424926758
    8. ' str' → logprob: -19.375032424926758
    9. '['' → logprob: -19.500032424926758
    10. ' [' → logprob: -19.875032424926758

Token 96: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10028517246246338
    2. ')' → logprob: -2.350285053253174
    3. '):
' → logprob: -10.100285530090332
    4. ':' → logprob: -10.975285530090332
    5. ']:' → logprob: -11.600285530090332
    6. ' ):' → logprob: -12.600285530090332
    7. ']' → logprob: -12.850285530090332
    8. ' ' → logprob: -12.850285530090332
    9. '   ' → logprob: -14.225285530090332
    10. '）：' → logprob: -14.975285530090332

Token 97: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' """
' (ID: 7037)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032638829201459885
    2. '   ' → logprob: -3.5326387882232666
    3. ')' → logprob: -7.282639026641846
    4. '<|end|>' → logprob: -7.657639026641846
    5. '"""' → logprob: -7.657639026641846
    6. '    ' → logprob: -7.782639026641846
    7. '#' → logprob: -8.907638549804688
    8. '      ' → logprob: -8.907638549804688
    9. '     ' → logprob: -9.032638549804688
    10. '"' → logprob: -9.282638549804688

Token 100: ' Returns' (ID: 9609)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.18758797645568848
    2. '       ' → logprob: -2.1875879764556885
    3. 'Retrieve' → logprob: -3.9375879764556885
    4. '"""
' → logprob: -4.062587738037109
    5. 'Returns' (adapté à ' Returns') → logprob: -4.437587738037109
    6. 'Return' → logprob: -5.437587738037109
    7. 'Get' → logprob: -6.062587738037109
    8. 'Retr' → logprob: -6.437587738037109
    9. 'Pass' → logprob: -7.312587738037109
    10. ' """' → logprob: -8.06258773803711

Token 101: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2107200175523758
    2. '<|end|>' → logprob: -2.0857200622558594
    3. ' a' → logprob: -3.7107200622558594
    4. ' ' → logprob: -3.8357200622558594
    5. ' None' → logprob: -3.9607200622558594
    6. 'the' → logprob: -7.960720062255859
    7. 'None' → logprob: -8.71072006225586
    8. '<|end|>' → logprob: -9.58572006225586
    9. ' ' → logprob: -10.58572006225586
    10. ' an' → logprob: -11.21072006225586

Token 102: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.012207991443574429
    2. 'character' → logprob: -4.512207984924316
    3. ' genome' → logprob: -7.637207984924316
    4. ' component' → logprob: -8.262207984924316
    5. ' None' → logprob: -8.762207984924316
    6. ' nucleotide' → logprob: -9.387207984924316
    7. 'char' → logprob: -10.012207984924316
    8. ' sequence' → logprob: -10.262207984924316
    9. ' ' → logprob: -10.887207984924316
    10. ' char' → logprob: -11.387207984924316

Token 103: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.06933967769145966
    2. '<|end|>' → logprob: -2.8193397521972656
    3. ' ' → logprob: -5.194339752197266
    4. ' a' → logprob: -7.194339752197266
    5. 'at' → logprob: -7.194339752197266
    6. '<|end|>' → logprob: -9.444339752197266
    7. '   ' → logprob: -9.819339752197266
    8. '       ' → logprob: -10.069339752197266
    9. '  ' → logprob: -10.569339752197266
    10. '    ' → logprob: -10.569339752197266

Token 104: ' the' (ID: 290)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.1187063604593277
    2. 'index' → logprob: -2.243706464767456
    3. ' the' → logprob: -5.243706226348877
    4. ' ' → logprob: -7.993706226348877
    5. '<|end|>' → logprob: -9.368706703186035
    6. 'the' → logprob: -9.743706703186035
    7. ' ' → logprob: -11.118706703186035
    8. ' a' → logprob: -11.368706703186035
    9. '	index' → logprob: -11.368706703186035
    10. '[index' → logprob: -11.493706703186035

Token 105: ' given' (ID: 4335)
  Prédit: ' given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.04775966331362724
    2. ' specified' → logprob: -3.172759771347046
    3. 'given' → logprob: -6.297759532928467
    4. ' index' → logprob: -6.547759532928467
    5. 'index' → logprob: -7.422759532928467
    6. 'specified' → logprob: -7.797759532928467
    7. ' requested' → logprob: -8.297760009765625
    8. ' provided' → logprob: -8.922760009765625
    9. ' ' → logprob: -9.922760009765625
    10. ' specific' → logprob: -12.297760009765625

Token 106: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.14429253339767456
    2. 'index' → logprob: -2.0192925930023193
    3. ' ' → logprob: -7.14429235458374
    4. ' position' → logprob: -8.144292831420898
    5. '<|end|>' → logprob: -8.519292831420898
    6. 'position' → logprob: -9.769292831420898
    7. '[index' → logprob: -9.769292831420898
    8. '	index' → logprob: -10.394292831420898
    9. ' ' → logprob: -10.519292831420898
    10. '=index' → logprob: -10.894292831420898

Token 107: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.002895571291446686
    2. 'the' → logprob: -5.877895355224609
    3. '<|end|>' → logprob: -9.87789535522461
    4. ' this' → logprob: -11.00289535522461
    5. '       ' → logprob: -12.00289535522461
    6. ' ' → logprob: -12.37789535522461
    7. '<|end|>' → logprob: -12.87789535522461
    8. ' sequence' → logprob: -13.00289535522461
    9. '   ' → logprob: -13.12789535522461
    10. ' a' → logprob: -13.62789535522461

Token 109: ' expanded' (ID: 28044)
  Prédit: ' expanded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expanded' → logprob: -0.14176061749458313
    2. 'expanded' → logprob: -2.1417605876922607
    3. ' genome' → logprob: -4.26676082611084
    4. ' sequence' → logprob: -8.01676082611084
    5. 'sequence' → logprob: -8.39176082611084
    6. 'gen' → logprob: -9.01676082611084
    7. '   ' → logprob: -11.89176082611084
    8. '       ' → logprob: -13.01676082611084
    9. 'expand' → logprob: -13.51676082611084
    10. 'exp' → logprob: -13.64176082611084

Token 110: ' genome' (ID: 64778)
  Prédit: ' genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' genome' → logprob: -0.2376457154750824
    2. ' sequence' → logprob: -1.6126457452774048
    3. 'sequence' → logprob: -4.737645626068115
    4. '<|end|>' → logprob: -6.112645626068115
    5. 'gen' → logprob: -7.112645626068115
    6. ' component' → logprob: -8.612646102905273
    7. ' ' → logprob: -10.487646102905273
    8. ' genomic' → logprob: -10.737646102905273
    9. '<|end|>' → logprob: -10.737646102905273
    10. 'component' → logprob: -10.862646102905273

Token 111: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.1477152705192566
    2. 'sequence' → logprob: -2.2727153301239014
    3. '<|end|>' → logprob: -3.6477153301239014
    4. '   ' → logprob: -5.147715091705322
    5. '_sequence' → logprob: -6.897715091705322
    6. '       ' → logprob: -7.897715091705322
    7. '  ' → logprob: -8.39771556854248
    8. ' ' → logprob: -8.89771556854248
    9. ' string' → logprob: -9.39771556854248
    10. ' component' → logprob: -9.77271556854248

Token 112: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' If' (ID: 1843)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7458449602127075
    2. '<|end|>' → logprob: -1.2458449602127075
    3. '\n' → logprob: -1.7458449602127075
    4. '       ' → logprob: -3.995844841003418
    5. '```' → logprob: -4.245844841003418
    6. ' ' → logprob: -5.245844841003418
    7. '  
' → logprob: -5.495844841003418
    8. '"""' → logprob: -5.745844841003418
    9. '        
' → logprob: -5.870844841003418
    10. '\' → logprob: -6.245844841003418

Token 115: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.011065863072872162
    2. 'index' → logprob: -4.51106595993042
    3. ' the' → logprob: -11.386065483093262
    4. ' not' → logprob: -13.011065483093262
    5. ' None' → logprob: -13.011065483093262
    6. ' ' → logprob: -13.761065483093262
    7. '0' → logprob: -15.261065483093262
    8. '#index' → logprob: -15.261065483093262
    9. '	index' → logprob: -16.386066436767578
    10. ' ind' → logprob: -16.636066436767578

Token 116: ' is' (ID: 382)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02226080745458603
    2. '<|end|>' → logprob: -4.897260665893555
    3. ' ' → logprob: -5.022260665893555
    4. ' is' → logprob: -5.272260665893555
    5. ' >=' → logprob: -6.147260665893555
    6. '<' → logprob: -7.522260665893555
    7. ' out' → logprob: -10.272260665893555
    8. '>=' → logprob: -10.897260665893555
    9. '<|end|>' → logprob: -11.147260665893555
    10. '   ' → logprob: -11.397260665893555

Token 117: ' out' (ID: 842)
  Prédit: ' out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.003045569872483611
    2. 'out' → logprob: -6.128045558929443
    3. ' <' → logprob: -8.503046035766602
    4. '<' → logprob: -8.503046035766602
    5. ' outside' → logprob: -8.503046035766602
    6. ' negative' → logprob: -9.128046035766602
    7. ' ' → logprob: -10.128046035766602
    8. ' invalid' → logprob: -10.378046035766602
    9. '   ' → logprob: -10.878046035766602
    10. 'negative' → logprob: -11.503046035766602

Token 118: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10821999609470367
    2. '_of' → logprob: -2.983220100402832
    3. ' ' → logprob: -3.858220100402832
    4. 'of' → logprob: -3.983220100402832
    5. '_' → logprob: -5.483220100402832
    6. '    ' → logprob: -5.858220100402832
    7. '-of' → logprob: -6.608220100402832
    8. '	of' → logprob: -6.858220100402832
    9. '-' → logprob: -7.108220100402832
    10. '  ' → logprob: -7.358220100402832

Token 119: ' bounds' (ID: 30227)
  Prédit: ' bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bounds' → logprob: -0.6133162379264832
    2. ' range' → logprob: -0.8633162379264832
    3. 'range' → logprob: -3.738316297531128
    4. 'bounds' → logprob: -4.363316059112549
    5. 'bound' → logprob: -9.613316535949707
    6. ' the' → logprob: -10.488316535949707
    7. ' bound' → logprob: -10.738316535949707
    8. ' ' → logprob: -11.363316535949707
    9. '_bounds' → logprob: -11.363316535949707
    10. '   ' → logprob: -12.238316535949707

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03400883451104164
    2. ':' → logprob: -3.409008741378784
    3. '   ' → logprob: -8.909008979797363
    4. '       ' → logprob: -9.659008979797363
    5. ' or' → logprob: -9.784008979797363
    6. ':return' → logprob: -10.409008979797363
    7. ' ,' → logprob: -10.784008979797363
    8. ':
' → logprob: -11.534008979797363
    9. ',
' → logprob: -11.784008979797363
    10. ')' → logprob: -11.784008979797363

Token 121: ' returns' (ID: 7377)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.10955073684453964
    2. ' ' → logprob: -2.859550714492798
    3. ' 
' → logprob: -3.484550714492798
    4. 'None' → logprob: -4.484550952911377
    5. ' ' → logprob: -6.484550952911377
    6. '    ' → logprob: -6.984550952911377
    7. '     
' → logprob: -7.484550952911377
    8. ' return' → logprob: -7.609550952911377
    9. '
' → logprob: -8.484550476074219
    10. '        ' → logprob: -8.609550476074219

Token 122: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0040785204619169235
    2. 'None' → logprob: -5.504078388214111
    3. '=None' → logprob: -16.879077911376953
    4. '(None' → logprob: -16.879077911376953
    5. '_None' → logprob: -17.504077911376953
    6. ' ' → logprob: -18.004077911376953
    7. ',None' → logprob: -18.879077911376953
    8. ' none' → logprob: -19.379077911376953
    9. '   ' → logprob: -19.754077911376953
    10. '.None' → logprob: -20.004077911376953

Token 123: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04817177727818489
    2. '   ' → logprob: -3.4231717586517334
    3. '
' → logprob: -5.4231719970703125
    4. '<|end|>' → logprob: -5.4231719970703125
    5. '```' → logprob: -5.9231719970703125
    6. '"""' → logprob: -6.9231719970703125
    7. '    
' → logprob: -8.173171997070312
    8. '    ' → logprob: -8.173171997070312
    9. ' 
' → logprob: -8.298171997070312
    10. '\n' → logprob: -8.548171997070312

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19746030867099762
    2. '<|end|>' → logprob: -2.322460412979126
    3. '   ' → logprob: -2.822460412979126
    4. '\n' → logprob: -4.697460174560547
    5. ' 
' → logprob: -5.697460174560547
    6. ' ' → logprob: -6.072460174560547
    7. '    ' → logprob: -6.197460174560547
    8. '    
' → logprob: -7.322460174560547
    9. ' pass' → logprob: -7.572460174560547
    10. '  ' → logprob: -7.822460174560547

Token 127: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.0008116515236906707
    2. ' pass' → logprob: -7.250811576843262
    3. '       ' → logprob: -9.250811576843262
    4. '   ' → logprob: -12.375811576843262
    5. 'raise' → logprob: -14.625811576843262
    6. '	pass' → logprob: -15.125811576843262
    7. '```' → logprob: -15.750811576843262
    8. '...' → logprob: -15.875811576843262
    9. 'return' → logprob: -15.875811576843262
    10. '    ' → logprob: -16.125812530517578

Token 128: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04452940821647644
    2. '\n' → logprob: -3.669529438018799
    3. '

' → logprob: -4.669529438018799
    4. '<|end|>' → logprob: -5.294529438018799
    5. '   ' → logprob: -6.169529438018799
    6. '    
' → logprob: -7.419529438018799
    7. '


' → logprob: -7.919529438018799
    8. '\' → logprob: -9.29452896118164
    9. '
    
' → logprob: -9.29452896118164
    10. '\
' → logprob: -9.54452896118164

Token 129: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17096230387687683
    2. 'class' → logprob: -1.9209623336791992
    3. '

' → logprob: -4.670962333679199
    4. '\n' → logprob: -7.920962333679199
    5. ' 
' → logprob: -8.1709623336792
    6. 'c' → logprob: -8.9209623336792
    7. '    
' → logprob: -9.1709623336792
    8. '' → logprob: -9.2959623336792
    9. ' class' → logprob: -9.6709623336792
    10. '  
' → logprob: -9.6709623336792

Token 130: ' Literal' (ID: 100414)
  Prédit: ' Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sequence' → logprob: -0.6954010128974915
    2. ' Genome' → logprob: -1.8204009532928467
    3. ' Simple' → logprob: -2.4454009532928467
    4. ' Composite' → logprob: -2.9454009532928467
    5. ' DNA' → logprob: -3.1954009532928467
    6. ' Leaf' → logprob: -3.6954009532928467
    7. ' Literal' → logprob: -3.8204009532928467
    8. ' Repeat' → logprob: -3.9454009532928467
    9. ' Single' → logprob: -4.070401191711426
    10. ' ' → logprob: -4.195401191711426

Token 131: '(' (ID: 7)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.4905635714530945
    2. 'Sequence' → logprob: -1.2405636310577393
    3. 'Component' → logprob: -2.9905636310577393
    4. '(' → logprob: -3.4905636310577393
    5. 'Segment' → logprob: -4.11556339263916
    6. 'Gen' → logprob: -7.61556339263916
    7. 'String' → logprob: -8.49056339263916
    8. 'Gene' → logprob: -8.86556339263916
    9. ' Genome' → logprob: -9.11556339263916
    10. '(Component' → logprob: -9.49056339263916

Token 132: 'Genome' (ID: 184055)
  Prédit: 'Genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.001935661886818707
    2. ' Genome' → logprob: -6.2519354820251465
    3. 'Gen' → logprob: -12.376935958862305
    4. ' genome' → logprob: -13.626935958862305
    5. ')' → logprob: -13.751935958862305
    6. 'Gene' → logprob: -14.751935958862305
    7. '   ' → logprob: -16.251935958862305
    8. 'str' → logprob: -16.751935958862305
    9. ' str' → logprob: -17.751935958862305
    10. 'string' → logprob: -18.126935958862305

Token 133: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -7.896309739408025e-07
    2. 'Com' → logprob: -15.250000953674316
    3. '<Component' → logprob: -15.375000953674316
    4. '@Component' → logprob: -15.625000953674316
    5. '_Component' → logprob: -16.0
    6. ' Component' → logprob: -17.75
    7. 'Comp' → logprob: -18.0
    8. '_COMPONENT' → logprob: -18.375
    9. '_component' → logprob: -18.375
    10. '.Component' → logprob: -19.0

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0047218031249940395
    2. ')' → logprob: -5.379721641540527
    3. '):
' → logprob: -9.379721641540527
    4. ' ):' → logprob: -12.129721641540527
    5. ':' → logprob: -12.379721641540527
    6. ',' → logprob: -12.504721641540527
    7. '   ' → logprob: -13.629721641540527
    8. '):

' → logprob: -14.004721641540527
    9. '[]):' → logprob: -15.254721641540527
    10. '<|end|>' → logprob: -15.504721641540527

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12222640961408615
    2. ':' → logprob: -2.4972264766693115
    3. ' ' → logprob: -4.872226238250732
    4. '    ' → logprob: -4.997226238250732
    5. '<|end|>' → logprob: -5.122226238250732
    6. '    
' → logprob: -5.372226238250732
    7. '  ' → logprob: -5.747226238250732
    8. '
' → logprob: -7.247226238250732
    9. '   
' → logprob: -7.247226238250732
    10. ' 
' → logprob: -7.247226238250732

Token 136: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5384384989738464
    2. ' def' → logprob: -1.0384385585784912
    3. 'def' → logprob: -2.788438558578491
    4. '    ' → logprob: -8.03843879699707
    5. ' ' → logprob: -8.03843879699707
    6. '  ' → logprob: -9.16343879699707
    7. '    
' → logprob: -10.28843879699707
    8. ')' → logprob: -11.28843879699707
    9. ' """' → logprob: -12.66343879699707
    10. ' 
' → logprob: -12.66343879699707

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16345834732055664
    2. ' def' → logprob: -2.1634583473205566
    3. '    ' → logprob: -4.163458347320557
    4. 'def' → logprob: -4.413458347320557
    5. ' """' → logprob: -4.913458347320557
    6. ' """
' → logprob: -7.538458347320557
    7. ' ' → logprob: -9.038457870483398
    8. '"""' → logprob: -9.163457870483398
    9. ')' → logprob: -10.788457870483398
    10. ' "' → logprob: -11.288457870483398

Token 138: ' Represents' (ID: 84592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9849527478218079
    2. 'def' → logprob: -1.734952688217163
    3. ' Represents' → logprob: -1.859952688217163
    4. 'class' → logprob: -2.234952688217163
    5. ' def' → logprob: -2.484952688217163
    6. 'Rep' → logprob: -3.734952688217163
    7. ' A' → logprob: -3.984952688217163
    8. ' """
' → logprob: -4.109952926635742
    9. 'A' → logprob: -4.359952926635742
    10. '"""' → logprob: -4.484952926635742

Token 139: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1272895485162735
    2. 'a' → logprob: -2.1272895336151123
    3. ' an' → logprob: -8.127289772033691
    4. 'an' → logprob: -11.252289772033691
    5. ' ' → logprob: -11.627289772033691
    6. ' single' → logprob: -11.752289772033691
    7. 'A' → logprob: -12.002289772033691
    8. ' the' → logprob: -12.127289772033691
    9. ' literal' → logprob: -12.627289772033691
    10. 'single' → logprob: -12.877289772033691

Token 140: ' literal' (ID: 41271)
  Prédit: ' literal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' literal' → logprob: -0.23841147124767303
    2. ' sequence' → logprob: -2.1134114265441895
    3. 'literal' → logprob: -3.4884114265441895
    4. ' single' → logprob: -3.7384114265441895
    5. ' fixed' → logprob: -4.2384114265441895
    6. 'sequence' → logprob: -4.6134114265441895
    7. 'single' → logprob: -5.8634114265441895
    8. ' genome' → logprob: -6.4884114265441895
    9. ' concrete' → logprob: -6.6134114265441895
    10. ' raw' → logprob: -6.8634114265441895

Token 141: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.736988365650177
    2. ' string' → logprob: -1.2369883060455322
    3. ' DNA' → logprob: -2.6119883060455322
    4. 'sequence' → logprob: -2.7369883060455322
    5. ' genome' → logprob: -3.4869883060455322
    6. 'DNA' → logprob: -3.4869883060455322
    7. 'string' → logprob: -3.9869883060455322
    8. ' nucleotide' → logprob: -5.236988544464111
    9. ' segment' → logprob: -5.861988544464111
    10. ' part' → logprob: -6.361988544464111

Token 142: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7071911692619324
    2. ' sequence' → logprob: -0.9571911692619324
    3. ' string' → logprob: -3.082191228866577
    4. '   ' → logprob: -3.457191228866577
    5. ':' → logprob: -3.957191228866577
    6. 'sequence' → logprob: -4.332190990447998
    7. ' ' → logprob: -5.707190990447998
    8. ' DNA' → logprob: -6.082190990447998
    9. 'string' → logprob: -6.207190990447998
    10. '  ' → logprob: -6.707190990447998

Token 143: ' characters' (ID: 9862)
  Prédit: ' DNA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DNA' → logprob: -0.24730771780014038
    2. 'DNA' → logprob: -1.7473077774047852
    3. ' nucle' → logprob: -4.622307777404785
    4. ' genome' → logprob: -4.872307777404785
    5. ' characters' → logprob: -4.997307777404785
    6. 'dna' → logprob: -5.497307777404785
    7. ' sequence' → logprob: -5.872307777404785
    8. ' bases' → logprob: -5.997307777404785
    9. ' dna' → logprob: -6.122307777404785
    10. ' the' → logprob: -6.247307777404785

Token 144: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8370444774627686
    2. '.' → logprob: -1.4620444774627686
    3. '<|end|>' → logprob: -1.8370444774627686
    4. ',' → logprob: -2.7120444774627686
    5. '   ' → logprob: -2.9620444774627686
    6. ':' → logprob: -4.212044715881348
    7. ' (' → logprob: -4.337044715881348
    8. ' ' → logprob: -4.462044715881348
    9. ' that' → logprob: -4.587044715881348
    10. '  ' → logprob: -6.337044715881348

Token 145: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9725862741470337
    2. 'n' → logprob: -1.8475862741470337
    3. 'DNA' → logprob: -1.8475862741470337
    4. ' a' → logprob: -1.9725862741470337
    5. ' DNA' → logprob: -2.472586154937744
    6. 'A' → logprob: -3.597586154937744
    7. ' nucle' → logprob: -4.597586154937744
    8. 'e' → logprob: -4.722586154937744
    9. ')' → logprob: -4.972586154937744
    10. 'str' → logprob: -5.472586154937744

Token 146: '-Z' (ID: 17216)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04272144287824631
    2. ',' → logprob: -3.5427215099334717
    3. ',C' → logprob: -4.917721271514893
    4. 'CG' → logprob: -5.667721271514893
    5. ' C' → logprob: -6.667721271514893
    6. '   ' → logprob: -7.792721271514893
    7. 'T' → logprob: -8.79272174835205
    8. ' ,' → logprob: -9.54272174835205
    9. '  ' → logprob: -9.54272174835205
    10. ',T' → logprob: -10.16772174835205

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0159535463899374
    2. 'A' → logprob: -4.890953540802002
    3. ',' → logprob: -5.390953540802002
    4. ' )' → logprob: -6.140953540802002
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -8.14095401763916
    6. '   ' → logprob: -8.39095401763916
    7. ' uppercase' → logprob: -8.51595401763916
    8. ').' → logprob: -8.64095401763916
    9. 'uppercase' → logprob: -9.14095401763916
    10. ' A' → logprob: -9.14095401763916

Token 148: ' without' (ID: 2935)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0817546546459198
    2. '):' → logprob: -2.956754684448242
    3. '   ' → logprob: -4.206754684448242
    4. ')' → logprob: -5.206754684448242
    5. ' :' → logprob: -5.331754684448242
    6. ':
' → logprob: -8.081754684448242
    7. ',' → logprob: -8.206754684448242
    8. ' ):' → logprob: -8.331754684448242
    9. '):
' → logprob: -8.456754684448242
    10. '.' → logprob: -9.581754684448242

Token 149: ' compression' (ID: 41811)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.14613720774650574
    2. ' repeats' → logprob: -2.896137237548828
    3. ' compression' → logprob: -3.396137237548828
    4. ' repetition' → logprob: -3.521137237548828
    5. ' expansion' → logprob: -4.646137237548828
    6. ' spaces' → logprob: -6.271137237548828
    7. 'any' → logprob: -6.646137237548828
    8. 'compression' → logprob: -6.771137237548828
    9. ' repetitions' → logprob: -6.896137237548828
    10. ' repeating' → logprob: -7.396137237548828

Token 150: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6613855957984924
    2. '.' → logprob: -0.7863855957984924
    3. ',' → logprob: -4.536385536193848
    4. '   ' → logprob: -4.536385536193848
    5. ')' → logprob: -5.911385536193848
    6. ' :' → logprob: -6.536385536193848
    7. ' ' → logprob: -7.036385536193848
    8. '):' → logprob: -7.161385536193848
    9. '  ' → logprob: -8.161385536193848
    10. '_' → logprob: -8.411385536193848

Token 151: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27395081520080566
    2. '   ' → logprob: -1.6489508152008057
    3. ' ' → logprob: -4.148950576782227
    4. '    
' → logprob: -4.898950576782227
    5. '<|end|>' → logprob: -4.898950576782227
    6. ')' → logprob: -5.523950576782227
    7. ' 
' → logprob: -5.773950576782227
    8. '  
' → logprob: -6.148950576782227
    9. '  ' → logprob: -6.398950576782227
    10. '    ' → logprob: -6.898950576782227

Token 152: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03304257243871689
    2. '   ' → logprob: -3.5330426692962646
    3. '    
' → logprob: -6.0330424308776855
    4. ' 
' → logprob: -7.5330424308776855
    5. 'def' → logprob: -9.283042907714844
    6. ' ' → logprob: -9.533042907714844
    7. '  
' → logprob: -9.908042907714844
    8. '   
' → logprob: -10.408042907714844
    9. '```' → logprob: -10.533042907714844
    10. '    ' → logprob: -10.658042907714844

Token 153: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09777012467384338
    2. ' def' → logprob: -2.8477702140808105
    3. '   ' → logprob: -3.3477702140808105
    4. ' ' → logprob: -12.222769737243652
    5. '  ' → logprob: -14.347769737243652
    6. '    ' → logprob: -14.597769737243652
    7. 'de' → logprob: -15.847769737243652
    8. '	def' → logprob: -16.72277069091797
    9. ' _' → logprob: -17.09777069091797
    10. '    
' → logprob: -17.47277069091797

Token 154: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00012368128227535635
    2. ' def' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.875123977661133
    4. '_def' → logprob: -16.125123977661133
    5. 'de' → logprob: -17.375123977661133
    6. '__' → logprob: -17.875123977661133
    7. ' ' → logprob: -19.125123977661133
    8. '
' → logprob: -20.500123977661133
    9. '	def' → logprob: -20.750123977661133
    10. '```' → logprob: -21.125123977661133

Token 155: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005152162164449692
    2. '__' → logprob: -5.380152225494385
    3. '_init' → logprob: -8.005151748657227
    4. 'init' → logprob: -9.130151748657227
    5. ' def' → logprob: -10.130151748657227
    6. 'def' → logprob: -10.880151748657227
    7. ' init' → logprob: -11.005151748657227
    8. ' ' → logprob: -11.755151748657227
    9. ' ' → logprob: -12.755151748657227
    10. '_' → logprob: -13.505151748657227

Token 156: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -17.125
    3. 'inite' → logprob: -20.5
    4. 'i' → logprob: -20.625
    5. 'in' → logprob: -20.625
    6. '_init' → logprob: -21.625
    7. ' init' → logprob: -21.875
    8. '	init' → logprob: -22.25
    9. 'innit' → logprob: -22.5
    10. ' ' → logprob: -23.375

Token 157: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0032252485398203135
    2. '__(
' → logprob: -6.378225326538086
    3. '(self' → logprob: -7.253225326538086
    4. '__' → logprob: -7.378225326538086
    5. '(' → logprob: -8.753225326538086
    6. '__((' → logprob: -11.128225326538086
    7. '__(*' → logprob: -12.378225326538086
    8. ' (' → logprob: -12.378225326538086
    9. '__('' → logprob: -13.253225326538086
    10. '<|end|>' → logprob: -13.253225326538086

Token 158: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043126524542458355
    2. ' self' → logprob: -7.750431060791016
    3. '
' → logprob: -14.625431060791016
    4. '	self' → logprob: -16.250431060791016
    5. '(self' → logprob: -17.875431060791016
    6. ',' → logprob: -18.250431060791016
    7. ' ' → logprob: -18.375431060791016
    8. '   ' → logprob: -19.250431060791016
    9. ',self' → logprob: -19.375431060791016
    10. 's' → logprob: -19.750431060791016

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009782671695575118
    2. ' ,' → logprob: -7.375978469848633
    3. 'self' → logprob: -8.000978469848633
    4. ',self' → logprob: -11.500978469848633
    5. ',
' → logprob: -14.125978469848633
    6. ' ' → logprob: -14.250978469848633
    7. ' self' → logprob: -14.500978469848633
    8. ',value' → logprob: -15.000978469848633
    9. ',length' → logprob: -15.000978469848633
    10. '_,' → logprob: -15.125978469848633

Token 160: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.15371449291706085
    2. ' sequence' → logprob: -2.028714418411255
    3. 'value' → logprob: -4.778714656829834
    4. 'self' → logprob: -7.028714656829834
    5. 'data' → logprob: -7.528714656829834
    6. ' value' → logprob: -7.903714656829834
    7. 'text' → logprob: -8.153714179992676
    8. ' data' → logprob: -9.528714179992676
    9. 'chars' → logprob: -9.653714179992676
    10. 'literal' → logprob: -9.653714179992676

Token 161: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.9160102712921798e-05
    2. ':str' → logprob: -11.250029563903809
    3. '):' → logprob: -11.250029563903809
    4. ' :' → logprob: -12.875029563903809
    5. ')' → logprob: -14.750029563903809
    6. '):
' → logprob: -16.250028610229492
    7. ' ):' → logprob: -16.750028610229492
    8. '_:' → logprob: -17.125028610229492
    9. '=' → logprob: -18.000028610229492
    10. '<|end|>' → logprob: -18.375028610229492

Token 162: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.47409728169441223
    2. ' str' → logprob: -0.9740972518920898
    3. ' ' → logprob: -11.59909725189209
    4. '[str' → logprob: -12.22409725189209
    5. ')' → logprob: -13.09909725189209
    6. ':str' → logprob: -13.72409725189209
    7. ' Union' → logprob: -14.09909725189209
    8. '	str' → logprob: -14.97409725189209
    9. '   ' → logprob: -15.09909725189209
    10. '(str' → logprob: -15.22409725189209

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04101258143782616
    2. ')' → logprob: -3.2910125255584717
    3. '):
' → logprob: -6.416012763977051
    4. ':' → logprob: -6.666012763977051
    5. ' ):' → logprob: -10.16601276397705
    6. '   ' → logprob: -11.29101276397705
    7. '):
' → logprob: -13.04101276397705
    8. ' )' → logprob: -13.29101276397705
    9. ')->' → logprob: -13.66601276397705
    10. ' ' → logprob: -14.16601276397705

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007214829791337252
    2. ':' → logprob: -5.3822150230407715
    3. '):' → logprob: -6.5072150230407715
    4. ')' → logprob: -7.2572150230407715
    5. 'self' → logprob: -9.257214546203613
    6. ',' → logprob: -9.257214546203613
    7. '):
' → logprob: -10.007214546203613
    8. ' self' → logprob: -10.257214546203613
    9. '<|end|>' → logprob: -10.257214546203613
    10. '   ' → logprob: -10.632214546203613

Token 165: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4076228141784668
    2. ' self' → logprob: -1.4076228141784668
    3. '       ' → logprob: -2.407622814178467
    4. ' ' → logprob: -12.157623291015625
    5. '   ' → logprob: -12.407623291015625
    6. 'super' → logprob: -13.032623291015625
    7. '	self' → logprob: -13.157623291015625
    8. ' super' → logprob: -14.032623291015625
    9. '      ' → logprob: -14.282623291015625
    10. '        ' → logprob: -14.407623291015625

Token 166: '._' (ID: 2697)
  Prédit: '.sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sequence' → logprob: -0.03858460858464241
    2. '.' → logprob: -3.2885847091674805
    3. 'sequence' → logprob: -7.5385847091674805
    4. ' sequence' → logprob: -12.53858470916748
    5. ' .' → logprob: -12.91358470916748
    6. '._' → logprob: -13.91358470916748
    7. '_sequence' → logprob: -14.16358470916748
    8. ' ' → logprob: -14.53858470916748
    9. ':' → logprob: -14.66358470916748
    10. '.se' → logprob: -14.66358470916748

Token 167: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.2352385965641588e-05
    2. '_sequence' → logprob: -11.375012397766113
    3. ' sequence' → logprob: -14.250012397766113
    4. '.sequence' → logprob: -16.625011444091797
    5. '(sequence' → logprob: -17.750011444091797
    6. '   ' → logprob: -18.625011444091797
    7. 'seq' → logprob: -18.750011444091797
    8. ' ' → logprob: -19.000011444091797
    9. 'sequ' → logprob: -19.125011444091797
    10. 'source' → logprob: -19.250011444091797

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25237107276916504
    2. '=' → logprob: -1.502371072769165
    3. ' ' → logprob: -7.752370834350586
    4. ':' → logprob: -11.627370834350586
    5. '<|end|>' → logprob: -13.002370834350586
    6. ')' → logprob: -15.127370834350586
    7. ' =
' → logprob: -15.877370834350586
    8. '  ' → logprob: -16.127370834350586
    9. ' =)' → logprob: -16.252370834350586
    10. ' :' → logprob: -16.502370834350586

Token 169: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.03804149478673935
    2. ' sequence' → logprob: -3.288041591644287
    3. '(sequence' → logprob: -17.788042068481445
    4. '_sequence' → logprob: -20.163042068481445
    5. ' ' → logprob: -20.288042068481445
    6. '.sequence' → logprob: -20.413042068481445
    7. 'Sequence' → logprob: -20.663042068481445
    8. 'quence' → logprob: -22.413042068481445
    9. 'sequ' → logprob: -22.413042068481445
    10. '   ' → logprob: -22.538042068481445

Token 170: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16799083352088928
    2. '<|end|>' → logprob: -2.2929909229278564
    3. '
' → logprob: -3.4179909229278564
    4. '   ' → logprob: -4.417990684509277
    5. ' def' → logprob: -5.042990684509277
    6. '<|end|>' → logprob: -6.917990684509277
    7. ' ' → logprob: -7.292990684509277
    8. '    
' → logprob: -9.167990684509277
    9. '```' → logprob: -9.292990684509277
    10. '

' → logprob: -9.667990684509277

Token 173: '._' (ID: 2697)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.8958460688591003
    2. '.' → logprob: -1.6458461284637451
    3. '_len' → logprob: -1.8958461284637451
    4. '._' → logprob: -2.645846128463745
    5. '.length' → logprob: -2.770846128463745
    6. 'def' → logprob: -3.145846128463745
    7. 'length' → logprob: -4.145845890045166
    8. ' length' → logprob: -4.895845890045166
    9. '_' → logprob: -5.020845890045166
    10. ':' → logprob: -5.145845890045166

Token 174: 'len' (ID: 3303)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.013979081995785236
    2. 'len' → logprob: -4.638978958129883
    3. 'cached' → logprob: -6.013978958129883
    4. 'cache' → logprob: -6.888978958129883
    5. '_length' → logprob: -7.763978958129883
    6. '_cached' → logprob: -9.388978958129883
    7. '_cache' → logprob: -9.513978958129883
    8. 'leng' → logprob: -9.763978958129883
    9. '_len' → logprob: -10.263978958129883
    10. 'l' → logprob: -11.263978958129883

Token 175: ' =' (ID: 314)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.009510506875813007
    2. '=' → logprob: -5.509510517120361
    3. ' =' → logprob: -5.634510517120361
    4. 'gt' → logprob: -7.384510517120361
    5. '_' → logprob: -7.634510517120361
    6. '_sequence' → logprob: -9.259510040283203
    7. '```' → logprob: -9.384510040283203
    8. ' ' → logprob: -9.384510040283203
    9. '<|end|>' → logprob: -9.509510040283203
    10. 'gh' → logprob: -9.634510040283203

Token 176: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4740805923938751
    2. ' len' → logprob: -0.9740805625915527
    3. ' ' → logprob: -13.474081039428711
    4. '(len' → logprob: -13.974081039428711
    5. '	len' → logprob: -14.474081039428711
    6. '=len' → logprob: -14.974081039428711
    7. '[len' → logprob: -15.724081039428711
    8. '<|end|>' → logprob: -16.09908103942871
    9. '<len' → logprob: -16.09908103942871
    10. ',len' → logprob: -16.34908103942871

Token 177: '(sequence' (ID: 129991)
  Prédit: '(sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.005242056678980589
    2. '(' → logprob: -5.255241870880127
    3. '(self' → logprob: -12.255242347717285
    4. '(
' → logprob: -13.005242347717285
    5. '(sentence' → logprob: -14.130242347717285
    6. 'sequence' → logprob: -15.505242347717285
    7. '(expression' → logprob: -16.88024139404297
    8. '(space' → logprob: -17.00524139404297
    9. '(session' → logprob: -17.13024139404297
    10. '<|end|>' → logprob: -17.25524139404297

Token 178: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019138160860165954
    2. '<|end|>' → logprob: -8.750191688537598
    3. ' )' → logprob: -10.875191688537598
    4. ')
' → logprob: -11.750191688537598
    5. '<|end|>' → logprob: -13.000191688537598
    6. ' ' → logprob: -13.625191688537598
    7. '}' → logprob: -14.125191688537598
    8. ')return' → logprob: -14.250191688537598
    9. '   ' → logprob: -14.750191688537598
    10. '```' → logprob: -15.875191688537598

Token 179: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4995586574077606
    2. '<|end|>' → logprob: -1.124558687210083
    3. '   ' → logprob: -3.124558687210083
    4. '    
' → logprob: -4.624558448791504
    5. '<|end|>' → logprob: -5.124558448791504
    6. '

' → logprob: -5.874558448791504
    7. '  
' → logprob: -6.499558448791504
    8. '```' → logprob: -6.624558448791504
    9. ' 
' → logprob: -6.999558448791504
    10. '\n' → logprob: -7.249558448791504

Token 180: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.3915141355246305e-05
    2. '@property' → logprob: -11.12502384185791
    3. ' def' → logprob: -11.62502384185791
    4. '   ' → logprob: -16.500024795532227
    5. '@' → logprob: -17.250024795532227
    6. '```' → logprob: -19.000024795532227
    7. 'de' → logprob: -19.250024795532227
    8. 'super' → logprob: -19.875024795532227
    9. 'length' → logprob: -20.125024795532227
    10. ')' → logprob: -20.750024795532227

Token 181: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.001044124481268227
    2. 'length' → logprob: -6.876044273376465
    3. '_length' → logprob: -11.626044273376465
    4. '.length' → logprob: -14.376044273376465
    5. '	length' → logprob: -14.501044273376465
    6. ' ' → logprob: -15.376044273376465
    7. ' def' → logprob: -15.376044273376465
    8. ' len' → logprob: -15.876044273376465
    9. '(length' → logprob: -16.12604331970215
    10. 'ength' → logprob: -16.25104331970215

Token 182: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2166239470243454
    2. '(' → logprob: -2.2166240215301514
    3. '(self' → logprob: -2.4666240215301514
    4. '(
' → logprob: -7.091623783111572
    5. '(

' → logprob: -10.21662425994873
    6. '()
' → logprob: -11.59162425994873
    7. '<|end|>' → logprob: -11.59162425994873
    8. ' ()' → logprob: -11.96662425994873
    9. '()>' → logprob: -12.46662425994873
    10. '()(' → logprob: -12.71662425994873

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20957712829113007
    2. '()' → logprob: -1.7095770835876465
    3. '())' → logprob: -4.9595770835876465
    4. ' )' → logprob: -7.4595770835876465
    5. '(' → logprob: -8.334577560424805
    6. ' ()' → logprob: -9.209577560424805
    7. '()
' → logprob: -9.459577560424805
    8. ' ' → logprob: -10.084577560424805
    9. '   ' → logprob: -10.834577560424805
    10. ')
' → logprob: -10.959577560424805

Token 184: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04231918230652809
    2. '->' → logprob: -4.292319297790527
    3. ')' → logprob: -4.417319297790527
    4. ' ->' → logprob: -4.542319297790527
    5. '(' → logprob: -5.667319297790527
    6. 'self' → logprob: -7.292319297790527
    7. '       ' → logprob: -8.292319297790527
    8. '   ' → logprob: -8.667319297790527
    9. '()' → logprob: -9.167319297790527
    10. ' self' → logprob: -9.292319297790527

Token 185: ' int' (ID: 677)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20252546668052673
    2. 'self' → logprob: -1.7025254964828491
    3. ' ' → logprob: -6.827525615692139
    4. ' ' → logprob: -11.45252513885498
    5. '_self' → logprob: -11.45252513885498
    6. ' _' → logprob: -12.20252513885498
    7. ' len' → logprob: -14.70252513885498
    8. '(self' → logprob: -15.32752513885498
    9. '_' → logprob: -15.32752513885498
    10. ' 
' → logprob: -15.57752513885498

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011154991574585438
    2. ':
' → logprob: -4.511155128479004
    3. ':return' → logprob: -9.761155128479004
    4. '():' → logprob: -11.261155128479004
    5. '():
' → logprob: -11.886155128479004
    6. ' :' → logprob: -11.886155128479004
    7. '       ' → logprob: -12.136155128479004
    8. '):' → logprob: -12.261155128479004
    9. '):
' → logprob: -12.636155128479004
    10. '   ' → logprob: -12.761155128479004

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05488758534193039
    2. ' return' → logprob: -3.179887533187866
    3. ' 
' → logprob: -5.429887771606445
    4. '
' → logprob: -5.929887771606445
    5. '   ' → logprob: -6.054887771606445
    6. 'return' → logprob: -6.804887771606445
    7. '    ' → logprob: -8.304887771606445
    8. '    
' → logprob: -8.304887771606445
    9. '        
' → logprob: -8.429887771606445
    10. '        ' → logprob: -9.179887771606445

Token 188: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13104277849197388
    2. ' return' → logprob: -2.131042718887329
    3. '       ' → logprob: -5.631042957305908
    4. ' 
' → logprob: -8.00604248046875
    5. '
' → logprob: -8.75604248046875
    6. '        
' → logprob: -10.75604248046875
    7. '```' → logprob: -12.88104248046875
    8. '   ' → logprob: -13.25604248046875
    9. 'self' → logprob: -14.00604248046875
    10. '        ' → logprob: -14.13104248046875

Token 189: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0788901224732399
    2. 'self' → logprob: -2.578890085220337
    3. ' len' → logprob: -15.328889846801758
    4. ' ' → logprob: -16.078889846801758
    5. 'len' → logprob: -17.328889846801758
    6. '	self' → logprob: -17.453889846801758
    7. '(self' → logprob: -17.828889846801758
    8. '_self' → logprob: -18.953889846801758
    9. ' ' → logprob: -19.078889846801758
    10. ' _' → logprob: -19.703889846801758

Token 190: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.375005722045898
    3. '_' → logprob: -14.125005722045898
    4. ' .' → logprob: -15.500005722045898
    5. ')._' → logprob: -15.750005722045898
    6. '.__' → logprob: -16.5000057220459
    7. ']._' → logprob: -16.5000057220459
    8. '   ' → logprob: -16.5000057220459
    9. '_len' → logprob: -17.2500057220459
    10. 'self' → logprob: -17.5000057220459

Token 191: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.36574100604048e-06
    2. '_len' → logprob: -13.125004768371582
    3. 'sequence' → logprob: -13.125004768371582
    4. 'seq' → logprob: -15.875004768371582
    5. 'length' → logprob: -16.750003814697266
    6. ' len' → logprob: -16.875003814697266
    7. '	len' → logprob: -18.250003814697266
    8. 'leni' → logprob: -18.375003814697266
    9. '.len' → logprob: -19.000003814697266
    10. '[len' → logprob: -19.000003814697266

Token 192: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3502245247364044
    2. '<|end|>' → logprob: -1.350224494934082
    3. '

' → logprob: -4.475224494934082
    4. '   ' → logprob: -4.850224494934082
    5. '    
' → logprob: -5.100224494934082
    6. '\n' → logprob: -5.600224494934082
    7. '<|end|>' → logprob: -6.225224494934082
    8. 'newline' → logprob: -6.350224494934082
    9. ' 
' → logprob: -6.725224494934082
    10. '  
' → logprob: -7.225224494934082

Token 193: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03641538321971893
    2. '   ' → logprob: -4.0364155769348145
    3. '<|end|>' → logprob: -5.2864155769348145
    4. ' 
' → logprob: -5.6614155769348145
    5. '    
' → logprob: -5.6614155769348145
    6. '```' → logprob: -5.9114155769348145
    7. '  
' → logprob: -6.1614155769348145
    8. '\n' → logprob: -8.036415100097656
    9. '

' → logprob: -8.411415100097656
    10. ' ' → logprob: -8.661415100097656

Token 194: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005021936725825071
    2. ' def' → logprob: -5.505022048950195
    3. '   ' → logprob: -7.005022048950195
    4. '
' → logprob: -11.630022048950195
    5. ' ' → logprob: -11.755022048950195
    6. '    
' → logprob: -11.755022048950195
    7. '```' → logprob: -12.505022048950195
    8. '	def' → logprob: -13.005022048950195
    9. ' 
' → logprob: -13.130022048950195
    10. '  
' → logprob: -14.005022048950195

Token 195: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.03827110677957535
    2. 'get' → logprob: -3.288271188735962
    3. '_get' → logprob: -8.413270950317383
    4. ' def' → logprob: -12.663270950317383
    5. ' _' → logprob: -13.413270950317383
    6. 'def' → logprob: -13.663270950317383
    7. ' ' → logprob: -14.413270950317383
    8. '_' → logprob: -14.663270950317383
    9. '.get' → logprob: -15.288270950317383
    10. ' ' → logprob: -15.288270950317383

Token 196: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00011784763046307489
    2. '_' → logprob: -9.125118255615234
    3. ' _' → logprob: -11.750118255615234
    4. '_chars' → logprob: -14.625118255615234
    5. '_CHAR' → logprob: -16.000118255615234
    6. '_c' → logprob: -16.375118255615234
    7. '```' → logprob: -16.625118255615234
    8. ')_' → logprob: -16.750118255615234
    9. '_
' → logprob: -16.875118255615234
    10. '##_' → logprob: -17.000118255615234

Token 197: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -3.7385154428193346e-05
    2. '_' → logprob: -10.25003719329834
    3. '_a' → logprob: -13.62503719329834
    4. ' _' → logprob: -14.75003719329834
    5. ')_' → logprob: -15.87503719329834
    6. '__' → logprob: -16.500038146972656
    7. '_AT' → logprob: -17.125038146972656
    8. '##_' → logprob: -17.250038146972656
    9. '```' → logprob: -17.500038146972656
    10. '"_' → logprob: -19.000038146972656

Token 198: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000647029432002455
    2. ' (' → logprob: -7.750647068023682
    3. '(self' → logprob: -9.125646591186523
    4. '<|end|>' → logprob: -9.875646591186523
    5. '(
' → logprob: -10.375646591186523
    6. ' ' → logprob: -11.375646591186523
    7. '(

' → logprob: -12.750646591186523
    8. '('' → logprob: -13.000646591186523
    9. '(index' → logprob: -13.125646591186523
    10. '(s' → logprob: -13.250646591186523

Token 199: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.064283847808838
    2. '[' → logprob: -1.564283847808838
    3. ',' → logprob: -1.564283847808838
    4. '(' → logprob: -2.689283847808838
    5. ' )' → logprob: -2.689283847808838
    6. ' ' → logprob: -3.439283847808838
    7. '<|end|>' → logprob: -3.564283847808838
    8. ' ,' → logprob: -3.814283847808838
    9. ' (' → logprob: -5.439283847808838
    10. 'index' → logprob: -5.814283847808838

Token 200: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.31327807903289795
    2. 'index' → logprob: -1.313278079032898
    3. ' ' → logprob: -11.188278198242188
    4. '#index' → logprob: -14.063278198242188
    5. '	index' → logprob: -14.938278198242188
    6. '(index' → logprob: -15.188278198242188
    7. ' 
' → logprob: -15.438278198242188
    8. '=index' → logprob: -15.688278198242188
    9. ' idx' → logprob: -16.313278198242188
    10. ',index' → logprob: -16.313278198242188

Token 201: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6097644567489624
    2. ':' → logprob: -0.8597644567489624
    3. '):' → logprob: -3.609764575958252
    4. ' )' → logprob: -5.859764575958252
    5. ' ):' → logprob: -6.984764575958252
    6. '   ' → logprob: -7.234764575958252
    7. ' :' → logprob: -7.484764575958252
    8. ':int' → logprob: -7.984764575958252
    9. '):
' → logprob: -8.359764099121094
    10. ' ' → logprob: -8.484764099121094

Token 202: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5328694581985474
    2. 'int' → logprob: -0.9078694581985474
    3. ' ' → logprob: -5.407869338989258
    4. ')' → logprob: -5.532869338989258
    5. ' )' → logprob: -7.407869338989258
    6. '<|end|>' → logprob: -7.907869338989258
    7. '[int' → logprob: -9.157869338989258
    8. ' 
' → logprob: -10.032869338989258
    9. 'index' → logprob: -10.032869338989258
    10. ':int' → logprob: -10.782869338989258

Token 203: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006879476364701986
    2. '):' → logprob: -5.0068793296813965
    3. ' )' → logprob: -9.506879806518555
    4. '):
' → logprob: -9.506879806518555
    5. ':' → logprob: -11.881879806518555
    6. ' ):' → logprob: -12.131879806518555
    7. '   ' → logprob: -13.381879806518555
    8. ')->' → logprob: -14.381879806518555
    9. '):
' → logprob: -14.381879806518555
    10. ' ):
' → logprob: -16.006879806518555

Token 204: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12851914763450623
    2. ' ->' → logprob: -2.753519058227539
    3. ')' → logprob: -3.378519058227539
    4. '->' → logprob: -3.878519058227539
    5. ')->' → logprob: -6.503519058227539
    6. ' :' → logprob: -8.253519058227539
    7. ':
' → logprob: -9.128519058227539
    8. '):' → logprob: -9.253519058227539
    9. '   ' → logprob: -10.378519058227539
    10. '>' → logprob: -10.878519058227539

Token 205: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.015047053806483746
    2. 'Optional' → logprob: -4.390047073364258
    3. ' str' → logprob: -6.015047073364258
    4. ' None' → logprob: -9.890047073364258
    5. ' ' → logprob: -11.140047073364258
    6. 'str' → logprob: -11.140047073364258
    7. '(Optional' → logprob: -12.015047073364258
    8. ' Union' → logprob: -13.015047073364258
    9. '_optional' → logprob: -13.015047073364258
    10. '	Optional' → logprob: -14.265047073364258

Token 206: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0005622077151201665
    2. '[' → logprob: -7.5005621910095215
    3. '[
' → logprob: -11.75056266784668
    4. ' [' → logprob: -14.87556266784668
    5. ':' → logprob: -15.25056266784668
    6. '(str' → logprob: -15.50056266784668
    7. ':str' → logprob: -15.50056266784668
    8. 'str' → logprob: -16.12556266784668
    9. ' str' → logprob: -17.00056266784668
    10. '['' → logprob: -17.12556266784668

Token 207: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5806371569633484
    2. '):
' → logprob: -0.8306371569633484
    3. ']:' → logprob: -5.955636978149414
    4. ')' → logprob: -6.705636978149414
    5. ']:
' → logprob: -7.455636978149414
    6. '):
' → logprob: -8.705636978149414
    7. '   ' → logprob: -9.955636978149414
    8. ']' → logprob: -10.205636978149414
    9. ':' → logprob: -11.205636978149414
    10. '       ' → logprob: -11.830636978149414

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019030551193282008
    2. ' if' → logprob: -6.751903057098389
    3. '   ' → logprob: -7.626903057098389
    4. ' ' → logprob: -9.87690258026123
    5. ' 
' → logprob: -10.12690258026123
    6. '    ' → logprob: -10.12690258026123
    7. '<|end|>' → logprob: -10.62690258026123
    8. '        
' → logprob: -11.00190258026123
    9. '    
' → logprob: -11.25190258026123
    10. 'if' → logprob: -11.75190258026123

Token 209: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6099141836166382
    2. '       ' → logprob: -1.3599141836166382
    3. ' if' → logprob: -1.6099141836166382
    4. 'return' → logprob: -11.85991382598877
    5. '	if' → logprob: -13.23491382598877
    6. '
' → logprob: -13.48491382598877
    7. ' ' → logprob: -13.48491382598877
    8. '   ' → logprob: -14.23491382598877
    9. ' 
' → logprob: -14.48491382598877
    10. '        
' → logprob: -14.73491382598877

Token 210: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24596671760082245
    2. '0' → logprob: -1.6209666728973389
    3. ' index' → logprob: -4.120966911315918
    4. 'index' → logprob: -5.495966911315918
    5. '(index' → logprob: -12.245966911315918
    6. '	index' → logprob: -12.995966911315918
    7. '   ' → logprob: -13.745966911315918
    8. '  ' → logprob: -13.995966911315918
    9. '=index' → logprob: -14.120966911315918
    10. ' ' → logprob: -14.495966911315918

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06233568489551544
    2. 'index' → logprob: -2.812335729598999
    3. ' ' → logprob: -8.562335968017578
    4. ' index' → logprob: -8.687335968017578
    5. '(index' → logprob: -12.062335968017578
    6. '   ' → logprob: -14.187335968017578
    7. '	index' → logprob: -14.812335968017578
    8. 'not' → logprob: -14.812335968017578
    9. '=index' → logprob: -15.312335968017578
    10. '#index' → logprob: -15.937335968017578

Token 212: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16022808849811554
    2. '<=' → logprob: -1.9102281332015991
    3. '<' → logprob: -13.28522777557373
    4. ' <' → logprob: -14.41022777557373
    5. ' >' → logprob: -15.03522777557373
    6. '   ' → logprob: -15.03522777557373
    7. '>' → logprob: -15.03522777557373
    8. ' ' → logprob: -15.28522777557373
    9. ')<=' → logprob: -15.91022777557373
    10. 'index' → logprob: -16.160228729248047

Token 213: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -4.5491004129871726e-05
    2. ' index' → logprob: -10.000045776367188
    3. '_index' → logprob: -22.500045776367188
    4. '	index' → logprob: -22.625045776367188
    5. ' ' → logprob: -22.750045776367188
    6. '   ' → logprob: -22.875045776367188
    7. '
' → logprob: -23.750045776367188
    8. '#index' → logprob: -24.125045776367188
    9. 'Index' → logprob: -24.500045776367188
    10. '[index' → logprob: -24.625045776367188

Token 214: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.01110135205090046
    2. ' <' → logprob: -4.511101245880127
    3. 'and' → logprob: -10.636101722717285
    4. '<len' → logprob: -11.136101722717285
    5. ' and' → logprob: -11.386101722717285
    6. '<size' → logprob: -13.511101722717285
    7. '<int' → logprob: -14.261101722717285
    8. '<n' → logprob: -14.886101722717285
    9. '<
' → logprob: -15.136101722717285
    10. '<const' → logprob: -15.386101722717285

Token 215: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006715370807796717
    2. ' self' → logprob: -5.006715297698975
    3. '       ' → logprob: -16.881715774536133
    4. 'len' → logprob: -19.006715774536133
    5. '   ' → logprob: -19.631715774536133
    6. '	self' → logprob: -20.256715774536133
    7. '           ' → logprob: -21.006715774536133
    8. '=self' → logprob: -21.006715774536133
    9. ' len' → logprob: -21.131715774536133
    10. '(self' → logprob: -21.256715774536133

Token 216: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0024800582323223352
    2. '_len' → logprob: -6.0024800300598145
    3. '_length' → logprob: -12.877480506896973
    4. '.length' → logprob: -14.377480506896973
    5. '.' → logprob: -14.627480506896973
    6. '   ' → logprob: -15.377480506896973
    7. '.len' → logprob: -15.627480506896973
    8. ' _' → logprob: -16.252479553222656
    9. '       ' → logprob: -17.127479553222656
    10. '
' → logprob: -17.377479553222656

Token 217: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004093004856258631
    2. '_len' → logprob: -5.504093170166016
    3. 'sequence' → logprob: -11.754093170166016
    4. ' len' → logprob: -12.504093170166016
    5. 'length' → logprob: -13.504093170166016
    6. '	len' → logprob: -15.129093170166016
    7. '_sequence' → logprob: -15.254093170166016
    8. '   ' → logprob: -15.504093170166016
    9. '
' → logprob: -15.879093170166016
    10. 'seq' → logprob: -16.004093170166016

Token 218: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47412368655204773
    2. ':' → logprob: -0.9741237163543701
    3. ':return' → logprob: -10.72412395477295
    4. ':
' → logprob: -11.22412395477295
    5. ' :
' → logprob: -12.34912395477295
    6. ':

' → logprob: -12.72412395477295
    7. '):
' → logprob: -13.34912395477295
    8. '       ' → logprob: -13.47412395477295
    9. ' :' → logprob: -14.84912395477295
    10. '           ' → logprob: -15.84912395477295

Token 219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026371359825134277
    2. 'return' → logprob: -3.776371479034424
    3. ' return' → logprob: -5.776371479034424
    4. '       ' → logprob: -12.401371002197266
    5. '            
' → logprob: -12.401371002197266
    6. '   ' → logprob: -12.776371002197266
    7. ':return' → logprob: -12.776371002197266
    8. '
' → logprob: -13.151371002197266
    9. '               ' → logprob: -14.026371002197266
    10. '          ' → logprob: -14.151371002197266

Token 220: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009155054576694965
    2. ' return' → logprob: -7.00091552734375
    3. '           ' → logprob: -12.50091552734375
    4. '
' → logprob: -16.25091552734375
    5. '               ' → logprob: -16.37591552734375
    6. '	return' → logprob: -16.50091552734375
    7. '   ' → logprob: -17.37591552734375
    8. ':return' → logprob: -18.37591552734375
    9. '{return' → logprob: -19.00091552734375
    10. '       ' → logprob: -19.75091552734375

Token 221: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804149478673935
    2. ' self' → logprob: -3.288041591644287
    3. '	self' → logprob: -20.288042068481445
    4. '       ' → logprob: -20.413042068481445
    5. '           ' → logprob: -21.288042068481445
    6. '(self' → logprob: -21.663042068481445
    7. '
' → logprob: -22.038042068481445
    8. '   ' → logprob: -22.788042068481445
    9. '[self' → logprob: -22.788042068481445
    10. '_self' → logprob: -23.038042068481445

Token 222: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.8325677703833207e-05
    2. '.' → logprob: -10.750028610229492
    3. '_' → logprob: -12.125028610229492
    4. ' .' → logprob: -14.750028610229492
    5. ' ' → logprob: -15.250028610229492
    6. '."_' → logprob: -16.000028610229492
    7. ']._' → logprob: -16.125028610229492
    8. '->_' → logprob: -16.250028610229492
    9. '_s' → logprob: -16.625028610229492
    10. '._
' → logprob: -16.625028610229492

Token 223: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -7.517272024415433e-05
    2. '_sequence' → logprob: -9.500075340270996
    3. ' sequence' → logprob: -15.375075340270996
    4. '.sequence' → logprob: -19.00007438659668
    5. '(sequence' → logprob: -19.87507438659668
    6. 'quence' → logprob: -20.00007438659668
    7. 'series' → logprob: -20.00007438659668
    8. 'sequ' → logprob: -20.62507438659668
    9. 'Sequence' → logprob: -20.87507438659668
    10. '_SEQUENCE' → logprob: -20.87507438659668

Token 224: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -11.50001049041748
    3. 'index' → logprob: -14.75001049041748
    4. '[
' → logprob: -17.125011444091797
    5. '[in' → logprob: -18.375011444091797
    6. '[ind' → logprob: -18.750011444091797
    7. '```' → logprob: -19.250011444091797
    8. '[Index' → logprob: -20.000011444091797
    9. ' index' → logprob: -20.125011444091797
    10. '[i' → logprob: -20.375011444091797

Token 225: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004938178462907672
    2. ')' → logprob: -8.500494003295898
    3. ']
' → logprob: -8.625494003295898
    4. ' ]' → logprob: -9.875494003295898
    5. '<|end|>' → logprob: -10.750494003295898
    6. '}' → logprob: -10.875494003295898
    7. '       ' → logprob: -11.125494003295898
    8. '[' → logprob: -13.625494003295898
    9. '']' → logprob: -13.875494003295898
    10. '   ' → logprob: -14.250494003295898

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.137130498653278e-05
    2. '<|end|>' → logprob: -10.375081062316895
    3. 'return' → logprob: -10.625081062316895
    4. '        ' → logprob: -11.250081062316895
    5. ' else' → logprob: -13.000081062316895
    6. '      ' → logprob: -13.125081062316895
    7. '	' → logprob: -13.250081062316895
    8. 'else' → logprob: -13.250081062316895
    9. ' return' → logprob: -13.500081062316895
    10. '               ' → logprob: -13.875081062316895

Token 227: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5412000417709351
    2. 'else' → logprob: -1.291200041770935
    3. '       ' → logprob: -2.5412001609802246
    4. ' else' → logprob: -2.7912001609802246
    5. ' return' → logprob: -6.041200160980225
    6. 'None' → logprob: -8.166199684143066
    7. '
' → logprob: -8.916199684143066
    8. ' None' → logprob: -9.541199684143066
    9. '   ' → logprob: -11.166199684143066
    10. '        
' → logprob: -13.541199684143066

Token 228: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12692810595035553
    2. ' None' → logprob: -2.1269280910491943
    3. '_None' → logprob: -20.126928329467773
    4. '(None' → logprob: -20.751928329467773
    5. '=None' → logprob: -22.001928329467773
    6. ',None' → logprob: -23.001928329467773
    7. 'none' → logprob: -23.751928329467773
    8. '.None' → logprob: -24.501928329467773
    9. '   ' → logprob: -24.876928329467773
    10. '_none' → logprob: -25.501928329467773

Token 229: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06646540760993958
    2. '
' → logprob: -2.941465377807617
    3. '

' → logprob: -4.816465377807617
    4. ' class' → logprob: -6.191465377807617
    5. '<|end|>' → logprob: -7.941465377807617
    6. '```' → logprob: -8.191465377807617
    7. '\n' → logprob: -8.941465377807617
    8. ' 
' → logprob: -9.191465377807617
    9. 'c' → logprob: -9.316465377807617
    10. '<class' → logprob: -9.566465377807617

Token 231: ' Re' (ID: 907)
  Prédit: 'Repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Repeat' → logprob: -0.34973928332328796
    2. ' Repeat' → logprob: -1.4747393131256104
    3. 'Repeated' → logprob: -3.4747393131256104
    4. ' Re' → logprob: -4.599739074707031
    5. 'Sequence' → logprob: -4.849739074707031
    6. 'Compressed' → logprob: -5.224739074707031
    7. 'Repe' → logprob: -5.599739074707031
    8. 'Re' → logprob: -6.099739074707031
    9. ' Sequence' → logprob: -6.474739074707031
    10. 'Composite' → logprob: -6.724739074707031

Token 232: 'petition' (ID: 134449)
  Prédit: 'peat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peat' → logprob: -0.47877201437950134
    2. 'peated' → logprob: -0.9787720441818237
    3. 'peater' → logprob: -5.728772163391113
    4. 'petition' → logprob: -7.228772163391113
    5. 'pe' → logprob: -7.478772163391113
    6. 'p' → logprob: -9.978772163391113
    7. 'peating' → logprob: -10.103772163391113
    8. 'pea' → logprob: -10.853772163391113
    9. 'pet' → logprob: -11.353772163391113
    10. 'PEAT' → logprob: -11.728772163391113

Token 233: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.5577775128767826e-06
    2. '(L' → logprob: -12.500005722045898
    3. ' (' → logprob: -13.500005722045898
    4. '(
' → logprob: -15.500005722045898
    5. '(

' → logprob: -16.8750057220459
    6. ':' → logprob: -18.0000057220459
    7. '((' → logprob: -18.3750057220459
    8. 'Literal' → logprob: -18.8750057220459
    9. '(`' → logprob: -19.0000057220459
    10. '```' → logprob: -19.0000057220459

Token 234: 'Genome' (ID: 184055)
  Prédit: 'Genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.0001239196863025427
    2. ' Genome' → logprob: -9.000123977661133
    3. 'Gen' → logprob: -15.000123977661133
    4. '(' → logprob: -16.750123977661133
    5. ' genome' → logprob: -17.875123977661133
    6. 'Gene' → logprob: -18.125123977661133
    7. '   ' → logprob: -18.250123977661133
    8. 'Genre' → logprob: -19.000123977661133
    9. ')' → logprob: -19.750123977661133
    10. '
' → logprob: -20.000123977661133

Token 235: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -2.1008713702030946e-06
    2. '(Component' → logprob: -13.875001907348633
    3. '(' → logprob: -14.875001907348633
    4. 'component' → logprob: -15.625001907348633
    5. ' Component' → logprob: -15.750001907348633
    6. '_component' → logprob: -16.000001907348633
    7. '_Component' → logprob: -16.375001907348633
    8. 'Com' → logprob: -16.500001907348633
    9. 'Comp' → logprob: -16.625001907348633
    10. 'Sequence' → logprob: -17.500001907348633

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1459701508283615
    2. '):
' → logprob: -2.020970106124878
    3. ',' → logprob: -6.020970344543457
    4. '(' → logprob: -7.645970344543457
    5. ')' → logprob: -8.895970344543457
    6. '):

' → logprob: -9.395970344543457
    7. ' ):' → logprob: -10.145970344543457
    8. ':' → logprob: -10.645970344543457
    9. '):
' → logprob: -10.645970344543457
    10. '<|end|>' → logprob: -10.645970344543457

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016439596191048622
    2. '(' → logprob: -5.516439437866211
    3. ' def' → logprob: -5.516439437866211
    4. 'def' → logprob: -6.141439437866211
    5. '  ' → logprob: -6.391439437866211
    6. ')' → logprob: -7.266439437866211
    7. ':' → logprob: -7.266439437866211
    8. 'Genome' → logprob: -7.516439437866211
    9. ' Genome' → logprob: -7.766439437866211
    10. ' ' → logprob: -8.016439437866211

Token 238: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0684632882475853
    2. 'def' → logprob: -3.4434633255004883
    3. '
' → logprob: -3.9434633255004883
    4. ' def' → logprob: -4.568463325500488
    5. 'class' → logprob: -5.943463325500488
    6. '  ' → logprob: -7.568463325500488
    7. '    
' → logprob: -8.443463325500488
    8. ' ' → logprob: -8.443463325500488
    9. '"' → logprob: -8.693463325500488
    10. '(' → logprob: -8.818463325500488

Token 239: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1622004508972168
    2. '   ' → logprob: -2.537200450897217
    3. '"""
' → logprob: -2.912200450897217
    4. ' def' → logprob: -4.162200450897217
    5. ' """
' → logprob: -7.412200450897217
    6. '"""' → logprob: -9.912200927734375
    7. '"' → logprob: -10.662200927734375
    8. ' ' → logprob: -11.162200927734375
    9. '"
' → logprob: -12.162200927734375
    10. '
' → logprob: -12.537200927734375

Token 240: ' Represents' (ID: 84592)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019504984840750694
    2. ' def' → logprob: -4.394505023956299
    3. 'class' → logprob: -5.269505023956299
    4. '   ' → logprob: -6.644505023956299
    5. 'Rep' → logprob: -8.26950454711914
    6. 'from' → logprob: -9.64450454711914
    7. '"""
' → logprob: -9.89450454711914
    8. ' Represents' → logprob: -10.14450454711914
    9. '
' → logprob: -10.26950454711914
    10. 'Represent' → logprob: -10.89450454711914

Token 241: ' a' (ID: 261)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.8246839046478271
    2. ' a' → logprob: -1.0746839046478271
    3. 'a' → logprob: -2.199683904647827
    4. ' Genome' → logprob: -2.699683904647827
    5. '   ' → logprob: -3.324683904647827
    6. 'class' → logprob: -6.074684143066406
    7. ' an' → logprob: -6.199684143066406
    8. ' the' → logprob: -7.949684143066406
    9. 'the' → logprob: -8.074684143066406
    10. 'A' → logprob: -8.449684143066406

Token 242: ' repetition' (ID: 100556)
  Prédit: ' component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' component' → logprob: -1.2283227443695068
    2. ' repeated' → logprob: -1.2283227443695068
    3. ' sequence' → logprob: -1.6033227443695068
    4. 'component' → logprob: -2.853322744369507
    5. ' genome' → logprob: -2.978322744369507
    6. 'sequence' → logprob: -3.478322744369507
    7. 'compressed' → logprob: -3.478322744369507
    8. ' compressed' → logprob: -3.478322744369507
    9. 're' → logprob: -5.478322982788086
    10. ' repetition' → logprob: -6.603322982788086

Token 243: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15421415865421295
    2. ' of' → logprob: -2.7792141437530518
    3. ' ' → logprob: -3.4042141437530518
    4. 'of' → logprob: -3.6542141437530518
    5. '(
' → logprob: -4.904214382171631
    6. ' (' → logprob: -5.279214382171631
    7. '   ' → logprob: -6.404214382171631
    8. ',' → logprob: -6.404214382171631
    9. 'sequence' → logprob: -6.654214382171631
    10. '[' → logprob: -7.154214382171631

Token 244: ' a' (ID: 261)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.19191691279411316
    2. ' Genome' → logprob: -2.3169169425964355
    3. '   ' → logprob: -2.8169169425964355
    4. 'Literal' → logprob: -5.6919169425964355
    5. 'int' → logprob: -6.0669169425964355
    6. '       ' → logprob: -6.1919169425964355
    7. ' ' → logprob: -6.5669169425964355
    8. 'str' → logprob: -7.1919169425964355
    9. ' a' → logprob: -7.3169169425964355
    10. 'component' → logprob: -7.4419169425964355

Token 245: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.04176105186343193
    2. 'Genome' → logprob: -3.6667611598968506
    3. ' component' → logprob: -5.4167609214782715
    4. 'sub' → logprob: -5.6667609214782715
    5. ' Genome' → logprob: -5.6667609214782715
    6. 'sequence' → logprob: -5.7917609214782715
    7. 'child' → logprob: -7.9167609214782715
    8. 'pattern' → logprob: -8.79176139831543
    9. 'base' → logprob: -9.41676139831543
    10. ' genome' → logprob: -9.66676139831543

Token 246: ' multiple' (ID: 7598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5893125534057617
    2. ',' → logprob: -1.5893125534057617
    3. '   ' → logprob: -1.5893125534057617
    4. 'of' → logprob: -2.8393125534057617
    5. 'times' → logprob: -2.9643125534057617
    6. 'component' → logprob: -3.4643125534057617
    7. 'with' → logprob: -3.5893125534057617
    8. '(
' → logprob: -3.8393125534057617
    9. ' that' → logprob: -3.9643125534057617
    10. ' multiplied' → logprob: -3.9643125534057617

Token 247: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.09034819155931473
    2. 'times' → logprob: -2.465348243713379
    3. '   ' → logprob: -6.840348243713379
    4. '_times' → logprob: -8.090348243713379
    5. ' of' → logprob: -11.590348243713379
    6. 's' → logprob: -11.965348243713379
    7. '(times' → logprob: -12.840348243713379
    8. ',' → logprob: -13.090348243713379
    9. ':' → logprob: -13.340348243713379
    10. '    ' → logprob: -13.465348243713379

Token 248: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5513386726379395
    2. ':' → logprob: -1.1763386726379395
    3. '   ' → logprob: -3.4263386726379395
    4. ' in' → logprob: -3.6763386726379395
    5. ',' → logprob: -3.8013386726379395
    6. '(' → logprob: -4.5513386726379395
    7. 'in' → logprob: -4.5513386726379395
    8. ' (' → logprob: -5.5513386726379395
    9. '<|end|>' → logprob: -6.1763386726379395
    10. 'with' → logprob: -6.4263386726379395

Token 249: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1541040986776352
    2. '   ' → logprob: -2.029103994369507
    3. '

' → logprob: -5.279104232788086
    4. '    
' → logprob: -5.529104232788086
    5. ' 
' → logprob: -7.404104232788086
    6. ' ' → logprob: -7.779104232788086
    7. '  
' → logprob: -8.029104232788086
    8. 'def' → logprob: -8.279104232788086
    9. '   
' → logprob: -9.154104232788086
    10. '
' → logprob: -9.279104232788086

Token 250: ' Example' (ID: 24855)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024878723546862602
    2. '   ' → logprob: -3.774878740310669
    3. '

' → logprob: -6.89987850189209
    4. 'def' → logprob: -8.52487850189209
    5. '    
' → logprob: -8.64987850189209
    6. '
' → logprob: -9.14987850189209
    7. ' 
' → logprob: -10.02487850189209
    8. '```' → logprob: -10.27487850189209
    9. '  
' → logprob: -10.89987850189209
    10. ')' → logprob: -10.89987850189209

Token 251: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029949959367513657
    2. '   ' → logprob: -4.279950141906738
    3. ':
' → logprob: -4.279950141906738
    4. ',' → logprob: -7.654950141906738
    5. ':

' → logprob: -7.779950141906738
    6. 'class' → logprob: -8.654950141906738
    7. '    
' → logprob: -8.904950141906738
    8. '(' → logprob: -9.029950141906738
    9. '```' → logprob: -9.279950141906738
    10. ' :' → logprob: -9.404950141906738

Token 252: ' ' (ID: 220)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.716544508934021
    2. '   ' → logprob: -0.841544508934021
    3. 'def' → logprob: -3.5915446281433105
    4. '
' → logprob: -4.0915446281433105
    5. '"""
' → logprob: -4.8415446281433105
    6. '(' → logprob: -5.4665446281433105
    7. ' ' → logprob: -5.4665446281433105
    8. '(
' → logprob: -5.4665446281433105
    9. 'from' → logprob: -5.7165446281433105
    10. ' def' → logprob: -6.3415446281433105

Token 253: '4' (ID: 19)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8443989753723145
    2. 'def' → logprob: -1.2193989753723145
    3. 'Genome' → logprob: -2.5943989753723145
    4. '3' → logprob: -3.4693989753723145
    5. 'from' → logprob: -3.9693989753723145
    6. '(' → logprob: -3.9693989753723145
    7. '   ' → logprob: -4.3443989753723145
    8. '(
' → logprob: -4.3443989753723145
    9. 'Re' → logprob: -5.0943989753723145
    10. 'Repeated' → logprob: -5.2193989753723145

Token 254: '(' (ID: 7)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20473997294902802
    2. '*' → logprob: -2.079740047454834
    3. '(' → logprob: -3.454740047454834
    4. ' (' → logprob: -4.329740047454834
    5. '[' → logprob: -4.829740047454834
    6. '(
' → logprob: -6.704740047454834
    7. 'times' → logprob: -6.704740047454834
    8. ' ' → logprob: -7.079740047454834
    9. ',' → logprob: -7.454740047454834
    10. '*(' → logprob: -7.579740047454834

Token 255: 'AB' (ID: 2912)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35444873571395874
    2. 'self' → logprob: -1.8544487953186035
    3. 'Literal' → logprob: -2.6044487953186035
    4. 'component' → logprob: -3.6044487953186035
    5. 'Genome' → logprob: -4.2294487953186035
    6. 'sub' → logprob: -5.8544487953186035
    7. '...' → logprob: -6.1044487953186035
    8. 'sequence' → logprob: -6.3544487953186035
    9. '
' → logprob: -6.4794487953186035
    10. '   ' → logprob: -6.4794487953186035

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012316440232098103
    2. 'C' → logprob: -4.7623162269592285
    3. 'CD' → logprob: -7.3873162269592285
    4. 'solute' → logprob: -7.3873162269592285
    5. 's' → logprob: -7.5123162269592285
    6. 'c' → logprob: -7.8873162269592285
    7. '))' → logprob: -8.012316703796387
    8. 'sequence' → logprob: -8.512316703796387
    9. 'cd' → logprob: -8.637316703796387
    10. 'S' → logprob: -9.637316703796387

Token 257: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08543482422828674
    2. ')' → logprob: -2.710434913635254
    3. '
' → logprob: -4.460434913635254
    4. ':' → logprob: -6.710434913635254
    5. '):' → logprob: -7.335434913635254
    6. 'def' → logprob: -7.460434913635254
    7. '):
' → logprob: -7.960434913635254
    8. '

' → logprob: -8.210434913635254
    9. '    
' → logprob: -8.210434913635254
    10. '  ' → logprob: -9.210434913635254

Token 258: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2511756420135498
    2. '10' → logprob: -2.37617564201355
    3. ' ' → logprob: -2.87617564201355
    4. '2' → logprob: -3.00117564201355
    5. '5' → logprob: -4.626175880432129
    6. '   ' → logprob: -5.501175880432129
    7. '12' → logprob: -6.126175880432129
    8. '(' → logprob: -6.251175880432129
    9. '100' → logprob: -6.626175880432129
    10. '7' → logprob: -7.751175880432129

Token 259: '10' (ID: 702)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.30461847782135
    2. 'Genome' → logprob: -1.42961847782135
    3. '2' → logprob: -2.5546183586120605
    4. '(' → logprob: -2.5546183586120605
    5. '10' → logprob: -2.6796183586120605
    6. 'Repeat' → logprob: -3.1796183586120605
    7. 'class' → logprob: -3.5546183586120605
    8. '5' → logprob: -3.6796183586120605
    9. 'AB' → logprob: -3.8046183586120605
    10. ' ' → logprob: -3.9296183586120605

Token 260: 'C' (ID: 34)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6797159314155579
    2. '(' → logprob: -0.9297159314155579
    3. ' *' → logprob: -3.054715871810913
    4. ')' → logprob: -4.054716110229492
    5. ' (
' → logprob: -4.804716110229492
    6. '*' → logprob: -4.929716110229492
    7. '*(' → logprob: -5.429716110229492
    8. '(
' → logprob: -5.679716110229492
    9. ' ' → logprob: -5.804716110229492
    10. ' )' → logprob: -6.929716110229492

Token 261: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029909003525972366
    2. ')' → logprob: -4.154909133911133
    3. 'def' → logprob: -5.404909133911133
    4. ' def' → logprob: -5.779909133911133
    5. '):' → logprob: -6.029909133911133
    6. '):
' → logprob: -6.404909133911133
    7. '):

' → logprob: -7.529909133911133
    8. '
' → logprob: -8.029909133911133
    9. '  ' → logprob: -8.029909133911133
    10. ' ' → logprob: -8.529909133911133

Token 262: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3434443175792694
    2. ')' → logprob: -1.9684443473815918
    3. '   ' → logprob: -2.343444347381592
    4. '

' → logprob: -3.218444347381592
    5. '):' → logprob: -5.218444347381592
    6. '):

' → logprob: -5.468444347381592
    7. '):
' → logprob: -5.968444347381592
    8. ':' → logprob: -6.968444347381592
    9. '    
' → logprob: -7.468444347381592
    10. ')
' → logprob: -8.593443870544434

Token 263: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.303802490234375
    2. '   ' → logprob: -1.678802490234375
    3. '

' → logprob: -3.428802490234375
    4. ')' → logprob: -3.428802490234375
    5. 'def' → logprob: -5.178802490234375
    6. '):

' → logprob: -5.803802490234375
    7. '):
' → logprob: -7.428802490234375
    8. '):' → logprob: -7.928802490234375
    9. ' def' → logprob: -8.178802490234375
    10. '    
' → logprob: -8.178802490234375

Token 264: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0649564117193222
    2. '   ' → logprob: -2.8149564266204834
    3. ' def' → logprob: -5.814956188201904
    4. '	def' → logprob: -14.064956665039062
    5. '
' → logprob: -14.564956665039062
    6. '    
' → logprob: -15.189956665039062
    7. '__' → logprob: -16.689956665039062
    8. 'de' → logprob: -17.064956665039062
    9. '_def' → logprob: -17.314956665039062
    10. ')' → logprob: -17.939956665039062

Token 265: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001584850688232109
    2. ' def' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.875158309936523
    4. '__' → logprob: -17.500158309936523
    5. '_def' → logprob: -19.250158309936523
    6. 'de' → logprob: -19.625158309936523
    7. '	def' → logprob: -19.750158309936523
    8. '
' → logprob: -20.125158309936523
    9. ' ' → logprob: -20.750158309936523
    10. 'from' → logprob: -21.500158309936523

Token 266: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06660682708024979
    2. '__' → logprob: -2.9416067600250244
    3. 'def' → logprob: -5.0666069984436035
    4. ' def' → logprob: -5.4416069984436035
    5. '_init' → logprob: -7.0666069984436035
    6. 'init' → logprob: -8.816606521606445
    7. ' init' → logprob: -12.316606521606445
    8. ' ' → logprob: -12.566606521606445
    9. ' ' → logprob: -12.691606521606445
    10. '**' → logprob: -12.941606521606445

Token 267: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0009237268241122365
    2. '_init' → logprob: -7.0009236335754395
    3. '__' → logprob: -11.500924110412598
    4. 'def' → logprob: -13.500924110412598
    5. '_' → logprob: -14.750924110412598
    6. ' init' → logprob: -16.87592315673828
    7. 'int' → logprob: -17.37592315673828
    8. '```' → logprob: -17.37592315673828
    9. 'in' → logprob: -17.50092315673828
    10. 'ini' → logprob: -18.00092315673828

Token 268: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06337668001651764
    2. '(self' → logprob: -2.8133766651153564
    3. '__(
' → logprob: -6.8133769035339355
    4. '(' → logprob: -9.188376426696777
    5. ' (' → logprob: -9.438376426696777
    6. '__' → logprob: -10.313376426696777
    7. '_(' → logprob: -10.313376426696777
    8. 'self' → logprob: -10.688376426696777
    9. '=(' → logprob: -11.313376426696777
    10. '=self' → logprob: -12.188376426696777

Token 269: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016206118743866682
    2. ' self' → logprob: -9.125162124633789
    3. '
' → logprob: -9.875162124633789
    4. '   ' → logprob: -14.125162124633789
    5. '(self' → logprob: -14.875162124633789
    6. ',' → logprob: -15.250162124633789
    7. '       ' → logprob: -15.625162124633789
    8. '0' → logprob: -17.12516212463379
    9. '
' → logprob: -17.37516212463379
    10. ' ' → logprob: -17.62516212463379

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21323876082897186
    2. 'self' → logprob: -2.0882387161254883
    3. ' ,' → logprob: -2.7132387161254883
    4. ' self' → logprob: -6.588238716125488
    5. ',self' → logprob: -8.838238716125488
    6. '       ' → logprob: -9.088238716125488
    7. ' (' → logprob: -9.463238716125488
    8. '_,' → logprob: -10.213238716125488
    9. '(self' → logprob: -10.463238716125488
    10. ',
' → logprob: -11.463238716125488

Token 271: ' count' (ID: 3605)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.04061134159564972
    2. 'count' → logprob: -3.2906112670898438
    3. ' component' → logprob: -6.290611267089844
    4. 'times' → logprob: -7.540611267089844
    5. ' count' → logprob: -9.290611267089844
    6. 'self' → logprob: -10.290611267089844
    7. 'sub' → logprob: -11.415611267089844
    8. 'child' → logprob: -12.040611267089844
    9. 'inner' → logprob: -12.165611267089844
    10. 'factor' → logprob: -12.165611267089844

Token 272: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.052377623040229e-05
    2. ',' → logprob: -10.250070571899414
    3. ':int' → logprob: -10.375070571899414
    4. ' :' → logprob: -12.500070571899414
    5. '   ' → logprob: -16.625070571899414
    6. '_:' → logprob: -17.250070571899414
    7. ' ,' → logprob: -17.750070571899414
    8. ':,' → logprob: -18.500070571899414
    9. 'int' → logprob: -20.000070571899414
    10. '  ' → logprob: -20.000070571899414

Token 273: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20151254534721375
    2. ' int' → logprob: -1.7015125751495361
    3. 'count' → logprob: -9.326512336730957
    4. ' count' → logprob: -12.326512336730957
    5. ' ' → logprob: -13.326512336730957
    6. ':int' → logprob: -13.326512336730957
    7. ')' → logprob: -14.701512336730957
    8. '(int' → logprob: -14.826512336730957
    9. '[int' → logprob: -14.951512336730957
    10. '<|end|>' → logprob: -15.076512336730957

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012403888104017824
    2. ' ,' → logprob: -9.000123977661133
    3. ',
' → logprob: -14.875123977661133
    4. '       ' → logprob: -16.375123977661133
    5. '   ' → logprob: -16.875123977661133
    6. ',re' → logprob: -17.250123977661133
    7. ',

' → logprob: -18.125123977661133
    8. '‌,' → logprob: -18.250123977661133
    9. ')' → logprob: -18.375123977661133
    10. '):' → logprob: -18.625123977661133

Token 275: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.0007668639300391078
    2. ' component' → logprob: -7.250766754150391
    3. 'child' → logprob: -10.25076675415039
    4. 'sequence' → logprob: -11.87576675415039
    5. 'sub' → logprob: -12.12576675415039
    6. 'content' → logprob: -12.25076675415039
    7. 'inner' → logprob: -13.25076675415039
    8. 'pattern' → logprob: -14.25076675415039
    9. 'element' → logprob: -14.37576675415039
    10. '	component' → logprob: -15.50076675415039

Token 276: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021843716967850924
    2. '):' → logprob: -8.500218391418457
    3. ')' → logprob: -11.625218391418457
    4. '):
' → logprob: -12.625218391418457
    5. ' :' → logprob: -13.125218391418457
    6. ' ):' → logprob: -14.375218391418457
    7. ' )' → logprob: -16.500219345092773
    8. '<|end|>' → logprob: -17.625219345092773
    9. '   ' → logprob: -18.000219345092773
    10. '=None' → logprob: -18.250219345092773

Token 277: ' Genome' (ID: 168601)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.2014327198266983
    2. ' Genome' → logprob: -1.701432704925537
    3. 'Union' → logprob: -11.326433181762695
    4. ' genome' → logprob: -12.826433181762695
    5. ')' → logprob: -13.076433181762695
    6. ' ' → logprob: -14.451433181762695
    7. 'Optional' → logprob: -14.451433181762695
    8. ' Union' → logprob: -14.576433181762695
    9. '   ' → logprob: -14.951433181762695
    10. ' '' → logprob: -15.451433181762695

Token 278: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: 0.0
    2. '<Component' → logprob: -17.25
    3. '@Component' → logprob: -17.75
    4. '(Component' → logprob: -19.75
    5. '.Component' → logprob: -20.25
    6. '_Component' → logprob: -20.375
    7. ' Component' → logprob: -20.375
    8. 'component' → logprob: -21.0
    9. '[' → logprob: -21.25
    10. '_COMPONENT' → logprob: -21.25

Token 279: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13101255893707275
    2. '):
' → logprob: -2.131012439727783
    3. ')' → logprob: -5.506012439727783
    4. '):
' → logprob: -12.006012916564941
    5. '   ' → logprob: -12.256012916564941
    6. ' ):' → logprob: -13.381012916564941
    7. ':' → logprob: -14.631012916564941
    8. ' ):
' → logprob: -14.631012916564941
    9. '):

' → logprob: -15.506012916564941
    10. '       ' → logprob: -16.006011962890625

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007702684495598078
    2. ':' → logprob: -5.007702827453613
    3. '):' → logprob: -7.882702827453613
    4. 'self' → logprob: -8.257702827453613
    5. '):
' → logprob: -8.882702827453613
    6. ':
' → logprob: -10.007702827453613
    7. ',' → logprob: -10.007702827453613
    8. ')' → logprob: -10.257702827453613
    9. '   ' → logprob: -10.507702827453613
    10. ' self' → logprob: -10.632702827453613

Token 281: ' assert' (ID: 3696)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2816391587257385
    2. ' self' → logprob: -1.5316390991210938
    3. '       ' → logprob: -3.5316390991210938
    4. '	self' → logprob: -11.781639099121094
    5. '   ' → logprob: -12.781639099121094
    6. 'super' → logprob: -13.156639099121094
    7. ' ' → logprob: -13.406639099121094
    8. ' ' → logprob: -14.531639099121094
    9. ' super' → logprob: -14.656639099121094
    10. '      ' → logprob: -15.531639099121094

Token 282: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.029806263744831085
    2. ' count' → logprob: -3.52980637550354
    3. ' isinstance' → logprob: -10.279806137084961
    4. 'is' → logprob: -11.779806137084961
    5. '       ' → logprob: -12.154806137084961
    6. '0' → logprob: -12.904806137084961
    7. '   ' → logprob: -13.279806137084961
    8. '1' → logprob: -13.529806137084961
    9. 'type' → logprob: -13.779806137084961
    10. '(count' → logprob: -14.154806137084961

Token 283: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.056399326771497726
    2. '>=' → logprob: -3.556399345397949
    3. ' >' → logprob: -3.681399345397949
    4. ' >=' → logprob: -6.806399345397949
    5. ' ' → logprob: -13.80639934539795
    6. ' ' → logprob: -14.80639934539795
    7. '≥' → logprob: -15.80639934539795
    8. '   ' → logprob: -15.93139934539795
    9. ')>' → logprob: -16.181398391723633
    10. ')' → logprob: -16.181398391723633

Token 284: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00321336486376822
    2. '0' → logprob: -5.753213405609131
    3. ' ' → logprob: -10.253212928771973
    4. '
' → logprob: -15.378212928771973
    5. '   ' → logprob: -15.628212928771973
    6. '```' → logprob: -19.62821388244629
    7. '  ' → logprob: -20.25321388244629
    8. '01' → logprob: -20.69071388244629
    9. '' → logprob: -20.94071388244629
    10. '    ' → logprob: -20.94071388244629

Token 285: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048588961362838745
    2. '0' → logprob: -3.048588991165161
    3. ' ' → logprob: -13.423588752746582
    4. '   ' → logprob: -16.6735897064209
    5. '
' → logprob: -18.4235897064209
    6. '```' → logprob: -18.5485897064209
    7. '' → logprob: -19.9235897064209
    8. '

' → logprob: -20.4235897064209
    9. '  ' → logprob: -20.6735897064209
    10. '01' → logprob: -21.2985897064209

Token 286: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8069520592689514
    2. '       ' → logprob: -0.8069520592689514
    3. ',' → logprob: -2.3069519996643066
    4. '<|end|>' → logprob: -5.431951999664307
    5. ' 
' → logprob: -6.806951999664307
    6. ' ,' → logprob: -7.181951999664307
    7. '        
' → logprob: -7.306951999664307
    8. ',
' → logprob: -7.431951999664307
    9. '<|end|>' → logprob: -8.681952476501465
    10. ' and' → logprob: -8.931952476501465

Token 287: ' "' (ID: 392)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.09024231880903244
    2. 'count' → logprob: -2.465242385864258
    3. ' ' → logprob: -7.590242385864258
    4. ' component' → logprob: -8.340242385864258
    5. '"' → logprob: -8.590242385864258
    6. ' "' → logprob: -8.840242385864258
    7. ' f' → logprob: -9.215242385864258
    8. 'component' → logprob: -10.340242385864258
    9. '       ' → logprob: -11.215242385864258
    10. '<|end|>' → logprob: -11.340242385864258

Token 288: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.5735237002372742
    2. 'Count' → logprob: -1.198523759841919
    3. 'Repeat' → logprob: -2.823523759841919
    4. ' Re' → logprob: -3.073523759841919
    5. 'count' → logprob: -3.698523759841919
    6. ' count' → logprob: -6.57352352142334
    7. ' repetition' → logprob: -6.82352352142334
    8. 'The' → logprob: -7.69852352142334
    9. ' Count' → logprob: -7.69852352142334
    10. 'Repe' → logprob: -7.82352352142334

Token 289: 'petition' (ID: 134449)
  Prédit: 'petition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'petition' → logprob: -0.018633536994457245
    2. 'peat' → logprob: -4.0186333656311035
    3. 'count' → logprob: -7.8936333656311035
    4. 'pet' → logprob: -9.518633842468262
    5. 'pe' → logprob: -10.893633842468262
    6. 'peated' → logprob: -11.518633842468262
    7. 'p' → logprob: -12.518633842468262
    8. 'pit' → logprob: -14.018633842468262
    9. 'quest' → logprob: -14.393633842468262
    10. 'pt' → logprob: -14.393633842468262

Token 290: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.2232460081577301
    2. 'count' → logprob: -1.9732459783554077
    3. ' must' → logprob: -2.8482460975646973
    4. '>' → logprob: -7.223246097564697
    5. '.count' → logprob: -7.473246097564697
    6. ' counts' → logprob: -7.473246097564697
    7. 'must' → logprob: -8.473245620727539
    8. ' >' → logprob: -8.598245620727539
    9. ' should' → logprob: -8.723245620727539
    10. ')' → logprob: -8.848245620727539

Token 291: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0007848527166061103
    2. 'must' → logprob: -7.625784873962402
    3. ' should' → logprob: -8.125784873962402
    4. 'should' → logprob: -14.625784873962402
    5. '<|end|>' → logprob: -15.125784873962402
    6. '>' → logprob: -15.875784873962402
    7. ' has' → logprob: -16.500783920288086
    8. '```' → logprob: -16.625783920288086
    9. ' needs' → logprob: -17.000783920288086
    10. ' cannot' → logprob: -17.875783920288086

Token 292: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.04534529149532318
    2. ' >=' → logprob: -3.9203453063964844
    3. '<|end|>' → logprob: -4.295345306396484
    4. '>=' → logprob: -4.670345306396484
    5. ' ' → logprob: -6.795345306396484
    6. '2' → logprob: -8.795345306396484
    7. ')>=' → logprob: -9.795345306396484
    8. ']>=' → logprob: -10.170345306396484
    9. '```' → logprob: -10.420345306396484
    10. ' not' → logprob: -10.795345306396484

Token 293: ' at' (ID: 540)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0050744833424687386
    2. ' ' → logprob: -5.380074501037598
    3. ' at' → logprob: -7.755074501037598
    4. 'at' → logprob: -10.880074501037598
    5. '>=' → logprob: -12.130074501037598
    6. ' >=' → logprob: -13.880074501037598
    7. '
' → logprob: -15.130074501037598
    8. '```' → logprob: -16.13007354736328
    9. ' atleast' → logprob: -17.13007354736328
    10. ' two' → logprob: -17.13007354736328

Token 294: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.018352337181568146
    2. ' least' → logprob: -4.018352508544922
    3. '2' → logprob: -8.518352508544922
    4. 'Least' → logprob: -13.518352508544922
    5. 'lease' → logprob: -15.143352508544922
    6. 'le' → logprob: -15.268352508544922
    7. 'lest' → logprob: -15.393352508544922
    8. ' ' → logprob: -15.893352508544922
    9. '```' → logprob: -16.018352508544922
    10. '1' → logprob: -16.268352508544922

Token 295: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '```' → logprob: -19.003177642822266
    4. '   ' → logprob: -20.128177642822266
    5. '  ' → logprob: -20.878177642822266
    6. '۲' → logprob: -20.878177642822266
    7. ' two' → logprob: -22.003177642822266
    8. '1' → logprob: -22.253177642822266
    9. ' ' → logprob: -22.378177642822266
    10. '
' → logprob: -22.440677642822266

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -21.0
    5. '۲' → logprob: -21.5
    6. '
' → logprob: -22.0
    7. 'two' → logprob: -22.125
    8. '1' → logprob: -22.125
    9. '<|end|>' → logprob: -22.75
    10. '２' → logprob: -23.0

Token 297: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.02491290681064129
    2. '"' → logprob: -3.8999128341674805
    3. '       ' → logprob: -5.8999128341674805
    4. ')
' → logprob: -7.7749128341674805
    5. ')"
' → logprob: -7.7749128341674805
    6. ' "
' → logprob: -8.02491283416748
    7. '."
' → logprob: -8.89991283416748
    8. ')' → logprob: -9.27491283416748
    9. '   ' → logprob: -9.52491283416748
    10. ',' → logprob: -9.52491283416748

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012843120843172073
    2. 'self' → logprob: -4.387843132019043
    3. ' self' → logprob: -8.137843132019043
    4. '	' → logprob: -11.012843132019043
    5. '   ' → logprob: -11.512843132019043
    6. '	self' → logprob: -11.637843132019043
    7. '
' → logprob: -13.387843132019043
    8. ',' → logprob: -13.762843132019043
    9. ' ' → logprob: -14.012843132019043
    10. '           ' → logprob: -14.887843132019043

Token 299: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0032534082420170307
    2. ' self' → logprob: -6.25325345993042
    3. '       ' → logprob: -6.62825345993042
    4. '	self' → logprob: -14.253252983093262
    5. '   ' → logprob: -14.753252983093262
    6. '	' → logprob: -16.128253936767578
    7. 'super' → logprob: -16.128253936767578
    8. '
' → logprob: -16.253253936767578
    9. '        
' → logprob: -17.628253936767578
    10. ' ' → logprob: -18.003253936767578

Token 300: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.020199410617351532
    2. '.count' → logprob: -4.020199298858643
    3. '_count' → logprob: -6.270199298858643
    4. '.' → logprob: -9.2701997756958
    5. 'count' → logprob: -10.3951997756958
    6. ' .' → logprob: -11.2701997756958
    7. '   ' → logprob: -12.1451997756958
    8. '.__' → logprob: -13.0201997756958
    9. '_' → logprob: -13.3951997756958
    10. ' ' → logprob: -14.2701997756958

Token 301: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.512236498361744e-07
    2. '_count' → logprob: -15.500000953674316
    3. ' count' → logprob: -15.875000953674316
    4. 'component' → logprob: -17.625
    5. '
' → logprob: -17.875
    6. '   ' → logprob: -18.5
    7. ' ' → logprob: -18.5
    8. 'c' → logprob: -18.75
    9. '	count' → logprob: -18.875
    10. 'counts' → logprob: -18.875

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14568506181240082
    2. '=' → logprob: -2.0206849575042725
    3. ',' → logprob: -5.895685195922852
    4. ' ,' → logprob: -9.020685195922852
    5. ' ' → logprob: -9.270685195922852
    6. '<|end|>' → logprob: -10.520685195922852
    7. ')' → logprob: -11.895685195922852
    8. '=count' → logprob: -12.895685195922852
    9. '    ' → logprob: -14.645685195922852
    10. ' =
' → logprob: -15.395685195922852

Token 303: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.061967797577381134
    2. ' count' → logprob: -2.8119678497314453
    3. '	count' → logprob: -15.686967849731445
    4. '(count' → logprob: -16.936967849731445
    5. '[count' → logprob: -17.811967849731445
    6. ' ' → logprob: -18.686967849731445
    7. '$count' → logprob: -18.811967849731445
    8. '=count' → logprob: -19.436967849731445
    9. '<count' → logprob: -19.436967849731445
    10. '_count' → logprob: -19.686967849731445

Token 304: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05402237921953201
    2. '<|end|>' → logprob: -3.3040223121643066
    3. 'self' → logprob: -4.929022312164307
    4. '
' → logprob: -5.554022312164307
    5. ',' → logprob: -5.804022312164307
    6. '<|end|>' → logprob: -6.929022312164307
    7. ' self' → logprob: -8.304022789001465
    8. '   ' → logprob: -9.054022789001465
    9. ',
' → logprob: -9.304022789001465
    10. ',self' → logprob: -10.304022789001465

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018142868066206574
    2. 'self' → logprob: -6.501814365386963
    3. ' self' → logprob: -8.876813888549805
    4. '<|end|>' → logprob: -9.376813888549805
    5. ',' → logprob: -10.001813888549805
    6. '   ' → logprob: -11.001813888549805
    7. '
' → logprob: -12.501813888549805
    8. ' ' → logprob: -12.876813888549805
    9. '        
' → logprob: -13.001813888549805
    10. '	' → logprob: -13.126813888549805

Token 306: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.029860293492674828
    2. ' self' → logprob: -3.529860258102417
    3. '       ' → logprob: -9.154860496520996
    4. '	self' → logprob: -13.404860496520996
    5. '   ' → logprob: -14.154860496520996
    6. 'component' → logprob: -14.904860496520996
    7. '(self' → logprob: -15.154860496520996
    8. ' ' → logprob: -15.654860496520996
    9. '        
' → logprob: -15.654860496520996
    10. '_self' → logprob: -15.779860496520996

Token 307: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.005438066087663174
    2. '.' → logprob: -5.630437850952148
    3. '.component' → logprob: -6.505437850952148
    4. '_' → logprob: -8.630437850952148
    5. '_component' → logprob: -9.255437850952148
    6. 'component' → logprob: -11.380437850952148
    7. ' .' → logprob: -11.505437850952148
    8. '
' → logprob: -11.755437850952148
    9. '.__' → logprob: -11.880437850952148
    10. '   ' → logprob: -12.005437850952148

Token 308: 'component' (ID: 16294)
  Prédit: 'component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.0011013990733772516
    2. 'length' → logprob: -7.001101493835449
    3. 'comp' → logprob: -9.50110149383545
    4. 'len' → logprob: -10.12610149383545
    5. 'inner' → logprob: -10.25110149383545
    6. '_component' → logprob: -11.12610149383545
    7. 'sub' → logprob: -12.00110149383545
    8. ' component' → logprob: -12.12610149383545
    9. 'count' → logprob: -13.37610149383545
    10. 'wrapped' → logprob: -13.62610149383545

Token 309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47533828020095825
    2. ' =' → logprob: -0.9753382802009583
    3. '_length' → logprob: -7.225338459014893
    4. '.length' → logprob: -7.975338459014893
    5. 'length' → logprob: -9.100337982177734
    6. '.' → logprob: -10.850337982177734
    7. ' length' → logprob: -11.350337982177734
    8. ' ' → logprob: -11.600337982177734
    9. '_len' → logprob: -11.600337982177734
    10. '<|end|>' → logprob: -11.600337982177734

Token 310: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.00671584764495492
    2. ' component' → logprob: -5.006715774536133
    3. '(component' → logprob: -15.131715774536133
    4. '	component' → logprob: -15.756715774536133
    5. '_component' → logprob: -17.006715774536133
    6. 'Component' → logprob: -17.131715774536133
    7. '.component' → logprob: -18.131715774536133
    8. ' ' → logprob: -18.506715774536133
    9. '
' → logprob: -19.506715774536133
    10. '@Component' → logprob: -19.756715774536133

Token 311: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02148217149078846
    2. '       ' → logprob: -4.396481990814209
    3. '
' → logprob: -4.896481990814209
    4. '<|end|>' → logprob: -7.271481990814209
    5. '

' → logprob: -7.896481990814209
    6. 'def' → logprob: -8.146482467651367
    7. '<|end|>' → logprob: -10.521482467651367
    8. '    
' → logprob: -10.646482467651367
    9. ' def' → logprob: -11.396482467651367
    10. ')' → logprob: -11.896482467651367

Token 312: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051530834287405014
    2. '       ' → logprob: -3.8015308380126953
    3. '<|end|>' → logprob: -4.051530838012695
    4. '
' → logprob: -4.926530838012695
    5. 'def' → logprob: -6.051530838012695
    6. '<|end|>' → logprob: -8.176530838012695
    7. 'self' → logprob: -8.926530838012695
    8. ' ' → logprob: -9.051530838012695
    9. ' def' → logprob: -9.176530838012695
    10. '  ' → logprob: -9.426530838012695

Token 313: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7451195120811462
    2. 'def' → logprob: -0.8701195120811462
    3. '       ' → logprob: -2.870119571685791
    4. '   ' → logprob: -3.120119571685791
    5. '

' → logprob: -5.995119571685791
    6. '
' → logprob: -6.495119571685791
    7. ' self' → logprob: -6.995119571685791
    8. '	self' → logprob: -8.870119094848633
    9. '@property' → logprob: -9.120119094848633
    10. ' def' → logprob: -9.870119094848633

Token 314: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0273272842168808
    2. '_length' → logprob: -4.277327060699463
    3. '_len' → logprob: -4.652327060699463
    4. '.' → logprob: -5.902327060699463
    5. '_' → logprob: -7.402327060699463
    6. '.length' → logprob: -10.152327537536621
    7. 'length' → logprob: -10.527327537536621
    8. 'len' → logprob: -10.902327537536621
    9. ' _' → logprob: -10.902327537536621
    10. ' .' → logprob: -11.277327537536621

Token 315: 'len' (ID: 3303)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5785630345344543
    2. 'len' → logprob: -0.8285630345344543
    3. 'total' → logprob: -6.328563213348389
    4. '_len' → logprob: -7.578563213348389
    5. 'cached' → logprob: -8.82856273651123
    6. '_length' → logprob: -8.95356273651123
    7. 'expanded' → logprob: -11.45356273651123
    8. 'cache' → logprob: -11.82856273651123
    9. 'count' → logprob: -12.20356273651123
    10. 'size' → logprob: -12.82856273651123

Token 316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. '=int' → logprob: -17.648244857788086
    4. '=self' → logprob: -17.773244857788086
    5. '=_' → logprob: -18.273244857788086
    6. '   ' → logprob: -18.523244857788086
    7. '=
' → logprob: -18.523244857788086
    8. '_=' → logprob: -19.023244857788086
    9. ' ' → logprob: -19.148244857788086
    10. '=len' → logprob: -19.773244857788086

Token 317: ' self' (ID: 1051)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5604600310325623
    2. 'count' → logprob: -1.310460090637207
    3. ' self' → logprob: -2.185460090637207
    4. 'self' → logprob: -3.060460090637207
    5. ' ' → logprob: -9.810460090637207
    6. '   ' → logprob: -12.810460090637207
    7. '	count' → logprob: -13.185460090637207
    8. ' component' → logprob: -13.685460090637207
    9. '  ' → logprob: -13.810460090637207
    10. '_count' → logprob: -14.435460090637207

Token 318: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.2994620242971e-06
    2. '_count' → logprob: -12.125008583068848
    3. '_' → logprob: -14.000008583068848
    4. 'count' → logprob: -14.250008583068848
    5. '.count' → logprob: -14.625008583068848
    6. '.' → logprob: -15.250008583068848
    7. '   ' → logprob: -16.37500762939453
    8. ')._' → logprob: -16.87500762939453
    9. ']._' → logprob: -17.00000762939453
    10. '->_' → logprob: -17.37500762939453

Token 319: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00523837935179472
    2. 'component' → logprob: -5.2552385330200195
    3. 'len' → logprob: -12.75523853302002
    4. '_count' → logprob: -14.25523853302002
    5. 'length' → logprob: -15.00523853302002
    6. ' count' → logprob: -15.88023853302002
    7. '   ' → logprob: -16.255237579345703
    8. '_component' → logprob: -16.255237579345703
    9. '.count' → logprob: -17.005237579345703
    10. 'repeat' → logprob: -17.505237579345703

Token 320: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023246407508850098
    2. '*' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.898246765136719
    4. '*self' → logprob: -15.148246765136719
    5. ' ' → logprob: -15.523246765136719
    6. '*object' → logprob: -16.02324676513672
    7. ' *
' → logprob: -17.39824676513672
    8. '   ' → logprob: -17.64824676513672
    9. '**' → logprob: -18.89824676513672
    10. '  ' → logprob: -18.89824676513672

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03826972469687462
    2. ' self' → logprob: -3.4132697582244873
    3. 'component' → logprob: -5.413269519805908
    4. ' component' → logprob: -8.788269996643066
    5. '(self' → logprob: -13.663269996643066
    6. ' ' → logprob: -13.913269996643066
    7. '<|end|>' → logprob: -14.538269996643066
    8. '
' → logprob: -15.663269996643066
    9. '	self' → logprob: -16.03826904296875
    10. '   ' → logprob: -16.28826904296875

Token 322: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.023764459416270256
    2. '_component' → logprob: -3.7737643718719482
    3. '.component' → logprob: -7.648764610290527
    4. '.' → logprob: -10.898764610290527
    5. 'component' → logprob: -11.773764610290527
    6. ' .' → logprob: -12.898764610290527
    7. '_' → logprob: -13.148764610290527
    8. '.Component' → logprob: -13.273764610290527
    9. '   ' → logprob: -13.773764610290527
    10. '@Component' → logprob: -13.773764610290527

Token 323: 'component' (ID: 16294)
  Prédit: 'component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -5.5577775128767826e-06
    2. 'len' → logprob: -12.625005722045898
    3. '_component' → logprob: -13.750005722045898
    4. '_len' → logprob: -13.875005722045898
    5. ' component' → logprob: -15.750005722045898
    6. 'count' → logprob: -16.8750057220459
    7. 'length' → logprob: -17.7500057220459
    8. '.component' → logprob: -18.2500057220459
    9. '	component' → logprob: -18.3750057220459
    10. '
' → logprob: -19.2500057220459

Token 324: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.250000953674316
    3. 'length' → logprob: -14.625000953674316
    4. ' .' → logprob: -16.250001907348633
    5. '.len' → logprob: -18.500001907348633
    6. ':length' → logprob: -19.500001907348633
    7. '.LENGTH' → logprob: -19.875001907348633
    8. ' length' → logprob: -20.500001907348633
    9. '.size' → logprob: -20.500001907348633
    10. '.l' → logprob: -20.625001907348633

Token 325: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10086245089769363
    2. 'def' → logprob: -2.725862503051758
    3. '

' → logprob: -4.350862503051758
    4. '<|end|>' → logprob: -4.600862503051758
    5. ' def' → logprob: -6.100862503051758
    6. '
' → logprob: -6.225862503051758
    7. '(' → logprob: -6.600862503051758
    8. '    
' → logprob: -7.725862503051758
    9. '<|end|>' → logprob: -7.725862503051758
    10. '()' → logprob: -8.100862503051758

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10056442767381668
    2. 'def' → logprob: -2.350564479827881
    3. ' def' → logprob: -8.600564002990723
    4. '<|end|>' → logprob: -8.975564002990723
    5. '    
' → logprob: -10.725564002990723
    6. '```' → logprob: -11.850564002990723
    7. ')' → logprob: -12.350564002990723
    8. ' ' → logprob: -12.725564002990723
    9. '
' → logprob: -12.975564002990723
    10. '<|end|>' → logprob: -13.475564002990723

Token 327: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.102680633077398e-05
    2. '   ' → logprob: -10.000090599060059
    3. ' def' → logprob: -10.000090599060059
    4. '```' → logprob: -17.000091552734375
    5. '@property' → logprob: -17.500091552734375
    6. '
' → logprob: -17.500091552734375
    7. '	def' → logprob: -18.125091552734375
    8. '    
' → logprob: -18.125091552734375
    9. ')' → logprob: -18.500091552734375
    10. 'de' → logprob: -19.125091552734375

Token 328: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0007099286303855479
    2. ' length' → logprob: -7.2507100105285645
    3. 'len' → logprob: -18.250709533691406
    4. 'leng' → logprob: -18.250709533691406
    5. '_length' → logprob: -18.875709533691406
    6. '	length' → logprob: -19.500709533691406
    7. ' ' → logprob: -19.875709533691406
    8. '   ' → logprob: -21.000709533691406
    9. '-length' → logprob: -21.125709533691406
    10. 'width' → logprob: -21.375709533691406

Token 329: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.021718181669712067
    2. '(' → logprob: -4.0217180252075195
    3. '()' → logprob: -5.6467180252075195
    4. '(
' → logprob: -10.39671802520752
    5. '(

' → logprob: -14.02171802520752
    6. ' (' → logprob: -14.39671802520752
    7. '   ' → logprob: -15.89671802520752
    8. 'self' → logprob: -15.89671802520752
    9. ')' → logprob: -16.271718978881836
    10. ' ()' → logprob: -16.521718978881836

Token 330: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1606580913066864
    2. ')' → logprob: -1.9106581211090088
    3. '(' → logprob: -8.78565788269043
    4. '())' → logprob: -8.91065788269043
    5. ' ()' → logprob: -9.78565788269043
    6. '()
' → logprob: -10.03565788269043
    7. '(self' → logprob: -10.91065788269043
    8. ' )' → logprob: -11.16065788269043
    9. '   ' → logprob: -12.28565788269043
    10. ' ' → logprob: -13.16065788269043

Token 331: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03166951611638069
    2. '(' → logprob: -3.5316696166992188
    3. '()' → logprob: -6.406669616699219
    4. '(
' → logprob: -9.406669616699219
    5. ' (' → logprob: -9.656669616699219
    6. '->' → logprob: -10.031669616699219
    7. ')' → logprob: -10.406669616699219
    8. ' ->' → logprob: -10.531669616699219
    9. 'self' → logprob: -11.531669616699219
    10. 'def' → logprob: -12.906669616699219

Token 332: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12693357467651367
    2. ' int' → logprob: -2.1269335746765137
    3. 'self' → logprob: -12.876934051513672
    4. '   ' → logprob: -13.501934051513672
    5. ' self' → logprob: -13.626934051513672
    6. '       ' → logprob: -16.251934051513672
    7. '(int' → logprob: -16.626934051513672
    8. ' ' → logprob: -16.626934051513672
    9. ' return' → logprob: -17.251934051513672
    10. 'return' → logprob: -17.626934051513672

Token 333: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004369240254163742
    2. '(' → logprob: -5.879369258880615
    3. '(
' → logprob: -6.879369258880615
    4. '()' → logprob: -8.504368782043457
    5. '       ' → logprob: -8.879368782043457
    6. 'self' → logprob: -9.004368782043457
    7. '   ' → logprob: -10.504368782043457
    8. ':' → logprob: -11.129368782043457
    9. '():
' → logprob: -11.629368782043457
    10. '():' → logprob: -12.004368782043457

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008720697835087776
    2. ' return' → logprob: -5.133720874786377
    3. 'return' → logprob: -5.883720874786377
    4. '
' → logprob: -13.633720397949219
    5. '   ' → logprob: -13.758720397949219
    6. '	return' → logprob: -14.258720397949219
    7. '```' → logprob: -15.008720397949219
    8. ' 
' → logprob: -16.00872039794922
    9. '        
' → logprob: -16.75872039794922
    10. '	' → logprob: -17.00872039794922

Token 335: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005939012626186013
    2. ' return' → logprob: -7.750594139099121
    3. '       ' → logprob: -8.750594139099121
    4. 'self' → logprob: -12.250594139099121
    5. '{return' → logprob: -17.000593185424805
    6. '   ' → logprob: -17.500593185424805
    7. '```' → logprob: -17.500593185424805
    8. '	return' → logprob: -17.500593185424805
    9. ':return' → logprob: -18.500593185424805
    10. 'Return' → logprob: -19.125593185424805

Token 336: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005233763717114925
    2. ' self' → logprob: -5.2552337646484375
    3. '       ' → logprob: -18.005233764648438
    4. '_self' → logprob: -18.255233764648438
    5. '	self' → logprob: -18.880233764648438
    6. '(self' → logprob: -19.755233764648438
    7. '   ' → logprob: -19.755233764648438
    8. ' ' → logprob: -21.255233764648438
    9. '
' → logprob: -21.505233764648438
    10. 'sel' → logprob: -21.880233764648438

Token 337: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0015193840954452753
    2. '_len' → logprob: -6.501519203186035
    3. '_' → logprob: -11.251519203186035
    4. '.' → logprob: -13.126519203186035
    5. '_length' → logprob: -14.001519203186035
    6. ' _' → logprob: -15.126519203186035
    7. '   ' → logprob: -16.37652015686035
    8. '_l' → logprob: -16.50152015686035
    9. ')._' → logprob: -16.62652015686035
    10. ']._' → logprob: -16.75152015686035

Token 338: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00020389800192788243
    2. '_len' → logprob: -8.500204086303711
    3. ' len' → logprob: -15.375204086303711
    4. 'count' → logprob: -16.37520408630371
    5. 'length' → logprob: -16.75020408630371
    6. 'Len' → logprob: -17.50020408630371
    7. '	len' → logprob: -17.87520408630371
    8. '[len' → logprob: -18.25020408630371
    9. '<len' → logprob: -19.00020408630371
    10. 'en' → logprob: -19.25020408630371

Token 339: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9543212056159973
    2. 'def' → logprob: -0.9543212056159973
    3. '   ' → logprob: -1.8293211460113525
    4. '    
' → logprob: -3.5793211460113525
    5. '<|end|>' → logprob: -3.9543211460113525
    6. '```' → logprob: -4.579321384429932
    7. ' def' → logprob: -4.954321384429932
    8. '  
' → logprob: -6.204321384429932
    9. '

' → logprob: -7.204321384429932
    10. '<|end|>' → logprob: -7.704321384429932

Token 340: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10162484645843506
    2. '   ' → logprob: -2.3516249656677246
    3. ' def' → logprob: -6.726624965667725
    4. '
' → logprob: -9.226624488830566
    5. '```' → logprob: -9.226624488830566
    6. '    
' → logprob: -10.976624488830566
    7. '	def' → logprob: -13.101624488830566
    8. '  ' → logprob: -14.101624488830566
    9. '   
' → logprob: -14.726624488830566
    10. '  
' → logprob: -15.101624488830566

Token 341: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.3458322731312364e-06
    2. ' def' → logprob: -12.000007629394531
    3. '   ' → logprob: -13.750007629394531
    4. '
' → logprob: -19.00000762939453
    5. '	def' → logprob: -19.50000762939453
    6. '    
' → logprob: -19.62500762939453
    7. '```' → logprob: -21.37500762939453
    8. '        
' → logprob: -21.75000762939453
    9. 'de' → logprob: -22.75000762939453
    10. ' ' → logprob: -22.75000762939453

Token 342: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03378757834434509
    2. ' get' → logprob: -3.408787488937378
    3. 'def' → logprob: -9.033787727355957
    4. '_get' → logprob: -10.908787727355957
    5. ' def' → logprob: -12.908787727355957
    6. '.get' → logprob: -14.283787727355957
    7. ' ' → logprob: -14.908787727355957
    8. '   ' → logprob: -15.033787727355957
    9. '	get' → logprob: -15.783787727355957
    10. '@get' → logprob: -16.03378677368164

Token 343: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -9.014684110297821e-06
    2. '_' → logprob: -12.375008583068848
    3. ' _' → logprob: -12.500008583068848
    4. ''_' → logprob: -15.375008583068848
    5. '```' → logprob: -15.500008583068848
    6. '_chars' → logprob: -16.000009536743164
    7. ')_' → logprob: -16.125009536743164
    8. '"_' → logprob: -16.125009536743164
    9. '##_' → logprob: -16.375009536743164
    10. '_CHAR' → logprob: -16.375009536743164

Token 344: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.4498052223643754e-05
    2. '_' → logprob: -11.875014305114746
    3. '_a' → logprob: -12.500014305114746
    4. ' _' → logprob: -12.625014305114746
    5. ')_' → logprob: -16.500015258789062
    6. '_
' → logprob: -16.875015258789062
    7. '__' → logprob: -17.000015258789062
    8. '_char' → logprob: -17.125015258789062
    9. '```' → logprob: -17.250015258789062
    10. '##_' → logprob: -17.375015258789062

Token 345: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0487673394382
    2. '(' → logprob: -3.048767328262329
    3. '(
' → logprob: -9.29876708984375
    4. 'self' → logprob: -9.79876708984375
    5. ' (' → logprob: -11.42376708984375
    6. '(s' → logprob: -11.92376708984375
    7. 's' → logprob: -12.42376708984375
    8. ' ' → logprob: -12.79876708984375
    9. ' self' → logprob: -13.04876708984375
    10. '<|end|>' → logprob: -13.92376708984375

Token 346: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19454391300678253
    2. '(' → logprob: -1.9445439577102661
    3. ')' → logprob: -4.694543838500977
    4. ',' → logprob: -4.819543838500977
    5. '<|end|>' → logprob: -5.069543838500977
    6. ' (' → logprob: -5.694543838500977
    7. ' ' → logprob: -6.694543838500977
    8. '   ' → logprob: -7.069543838500977
    9. 'self' → logprob: -7.194543838500977
    10. '(
' → logprob: -7.194543838500977

Token 347: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8351798057556152
    2. 'index' → logprob: -0.8351798057556152
    3. ' index' → logprob: -2.3351798057556152
    4. ' self' → logprob: -3.3351798057556152
    5. '(self' → logprob: -13.210180282592773
    6. '   ' → logprob: -13.585180282592773
    7. ' ' → logprob: -13.960180282592773
    8. '       ' → logprob: -14.210180282592773
    9. '0' → logprob: -15.335180282592773
    10. '	index' → logprob: -16.210180282592773

Token 348: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46241170167922974
    2. '):
' → logprob: -1.962411642074585
    3. '):' → logprob: -3.337411642074585
    4. ' )' → logprob: -3.337411642074585
    5. ' ):
' → logprob: -3.587411642074585
    6. '   ' → logprob: -3.837411642074585
    7. ':' → logprob: -3.837411642074585
    8. ' >' → logprob: -4.087411880493164
    9. '       ' → logprob: -4.087411880493164
    10. '    ' → logprob: -4.337411880493164

Token 349: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023246292024850845
    2. ' int' → logprob: -3.7732462882995605
    3. '[int' → logprob: -14.773246765136719
    4. 'Optional' → logprob: -15.148246765136719
    5. '(int' → logprob: -16.14824676513672
    6. ':int' → logprob: -16.77324676513672
    7. '   ' → logprob: -17.39824676513672
    8. '=int' → logprob: -17.89824676513672
    9. '<int' → logprob: -18.39824676513672
    10. ')' → logprob: -18.39824676513672

Token 350: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004833088256418705
    2. '):' → logprob: -6.254833221435547
    3. '):
' → logprob: -6.504833221435547
    4. ' )' → logprob: -6.629833221435547
    5. ':' → logprob: -10.379833221435547
    6. ' ):' → logprob: -10.504833221435547
    7. ' ):
' → logprob: -11.004833221435547
    8. '):
' → logprob: -13.004833221435547
    9. '   ' → logprob: -13.004833221435547
    10. ')->' → logprob: -13.754833221435547

Token 351: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034310310147702694
    2. ' :' → logprob: -6.2534308433532715
    3. ' ->' → logprob: -7.1284308433532715
    4. '->' → logprob: -7.5034308433532715
    5. ':
' → logprob: -9.25343132019043
    6. ')' → logprob: -10.50343132019043
    7. ':return' → logprob: -12.12843132019043
    8. '>' → logprob: -12.37843132019043
    9. '):' → logprob: -12.37843132019043
    10. ' :
' → logprob: -12.75343132019043

Token 352: ' Optional' (ID: 19351)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09712386876344681
    2. ' int' → logprob: -2.597123861312866
    3. 'Optional' → logprob: -4.097124099731445
    4. ' Optional' → logprob: -6.597124099731445
    5. 'None' → logprob: -9.847124099731445
    6. '(int' → logprob: -10.972124099731445
    7. 'if' → logprob: -12.347124099731445
    8. '(Optional' → logprob: -12.597124099731445
    9. ' None' → logprob: -13.347124099731445
    10. ' (' → logprob: -13.722124099731445

Token 353: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.004595791921019554
    2. '[' → logprob: -5.504595756530762
    3. '[
' → logprob: -8.254595756530762
    4. 'str' → logprob: -8.629595756530762
    5. '['' → logprob: -10.129595756530762
    6. '.str' → logprob: -11.629595756530762
    7. '[String' → logprob: -12.254595756530762
    8. '_str' → logprob: -12.504595756530762
    9. ':str' → logprob: -12.629595756530762
    10. '.' → logprob: -13.004595756530762

Token 354: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.049894675612449646
    2. '):' → logprob: -3.0498945713043213
    3. ')' → logprob: -7.1748948097229
    4. '   ' → logprob: -8.674894332885742
    5. '):
' → logprob: -8.674894332885742
    6. ' ):
' → logprob: -8.924894332885742
    7. '       ' → logprob: -10.174894332885742
    8. ' ):' → logprob: -11.549894332885742
    9. ':' → logprob: -11.924894332885742
    10. '):

' → logprob: -12.174894332885742

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014828400453552604
    2. ' if' → logprob: -7.251482963562012
    3. '   ' → logprob: -7.626482963562012
    4. '        
' → logprob: -9.126482963562012
    5. '    ' → logprob: -9.876482963562012
    6. 'if' → logprob: -10.501482963562012
    7. '        ' → logprob: -11.126482963562012
    8. '```' → logprob: -11.251482963562012
    9. '      ' → logprob: -11.376482963562012
    10. '           ' → logprob: -11.376482963562012

Token 356: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0026283347979187965
    2. ' if' → logprob: -6.002628326416016
    3. '       ' → logprob: -8.877628326416016
    4. 'component' → logprob: -11.377628326416016
    5. '0' → logprob: -14.627628326416016
    6. '   ' → logprob: -15.002628326416016
    7. '
' → logprob: -15.252628326416016
    8. '           ' → logprob: -16.002628326416016
    9. ' component' → logprob: -16.127628326416016
    10. '```' → logprob: -16.377628326416016

Token 357: ' ' (ID: 220)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.35597893595695496
    2. ' ' → logprob: -2.1059789657592773
    3. 'index' → logprob: -2.2309789657592773
    4. '0' → logprob: -3.3559789657592773
    5. ' not' → logprob: -3.3559789657592773
    6. 'not' → logprob: -7.480978965759277
    7. '1' → logprob: -10.605978965759277
    8. '(index' → logprob: -12.105978965759277
    9. '	index' → logprob: -12.355978965759277
    10. '   ' → logprob: -12.605978965759277

Token 358: '0' (ID: 15)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.2044597715139389
    2. '0' → logprob: -1.7044597864151
    3. 'not' → logprob: -5.9544596672058105
    4. ' index' → logprob: -8.079460144042969
    5. ' not' → logprob: -9.204460144042969
    6. ' ' → logprob: -10.579460144042969
    7. '(index' → logprob: -11.954460144042969
    8. '   ' → logprob: -13.079460144042969
    9. '	index' → logprob: -14.454460144042969
    10. '=index' → logprob: -14.579460144042969

Token 359: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.233202263712883
    2. ' >=' → logprob: -2.2332022190093994
    3. '<' → logprob: -2.3582022190093994
    4. '>=' → logprob: -5.4832024574279785
    5. ' ' → logprob: -6.3582024574279785
    6. '   ' → logprob: -8.98320198059082
    7. '>' → logprob: -10.10820198059082
    8. ' >' → logprob: -10.10820198059082
    9. '_' → logprob: -10.48320198059082
    10. '    ' → logprob: -10.60820198059082

Token 360: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.006715370807796717
    2. ' index' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.881715774536133
    4. '	index' → logprob: -18.881715774536133
    5. '   ' → logprob: -19.006715774536133
    6. '[index' → logprob: -19.006715774536133
    7. '
' → logprob: -19.131715774536133
    8. '(index' → logprob: -19.256715774536133
    9. '#index' → logprob: -19.256715774536133
    10. '_index' → logprob: -19.381715774536133

Token 361: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20142094790935516
    2. ' <' → logprob: -1.7014209032058716
    3. '<int' → logprob: -13.701420783996582
    4. '[' → logprob: -13.701420783996582
    5. '<size' → logprob: -13.951420783996582
    6. '<|end|>' → logprob: -13.951420783996582
    7. '<n' → logprob: -14.201420783996582
    8. '<len' → logprob: -14.326420783996582
    9. '<num' → logprob: -14.576420783996582
    10. '<
' → logprob: -15.076420783996582

Token 362: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416750717908144
    2. ' self' → logprob: -4.264167308807373
    3. '       ' → logprob: -12.764167785644531
    4. '           ' → logprob: -14.014167785644531
    5. '(self' → logprob: -16.26416778564453
    6. '               ' → logprob: -16.51416778564453
    7. '0' → logprob: -16.88916778564453
    8. 'len' → logprob: -17.26416778564453
    9. '=self' → logprob: -17.51416778564453
    10. '        ' → logprob: -18.01416778564453

Token 363: '._' (ID: 2697)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.10027502477169037
    2. '._' → logprob: -2.3502750396728516
    3. '_length' → logprob: -10.225275039672852
    4. '_' → logprob: -11.475275039672852
    5. '.' → logprob: -11.975275039672852
    6. '_.' → logprob: -12.225275039672852
    7. ' _' → logprob: -12.725275039672852
    8. '_self' → logprob: -13.475275039672852
    9. '_LEN' → logprob: -13.725275039672852
    10. '.len' → logprob: -13.850275039672852

Token 364: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.003178782993927598
    2. '_len' → logprob: -5.753178596496582
    3. 'length' → logprob: -14.628178596496582
    4. ' len' → logprob: -14.878178596496582
    5. 'Len' → logprob: -16.3781795501709
    6. '	len' → logprob: -17.0031795501709
    7. '<len' → logprob: -18.0031795501709
    8. '.len' → logprob: -18.3781795501709
    9. '=len' → logprob: -18.6281795501709
    10. '[len' → logprob: -18.7531795501709

Token 365: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08899443596601486
    2. ':' → logprob: -2.4639945030212402
    3. '       ' → logprob: -10.338994026184082
    4. ':

' → logprob: -11.838994026184082
    5. '):
' → logprob: -11.963994026184082
    6. ':
' → logprob: -12.088994026184082
    7. '():
' → logprob: -13.338994026184082
    8. ' :
' → logprob: -14.338994026184082
    9. '           ' → logprob: -14.838994026184082
    10. ':return' → logprob: -14.963994026184082

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013405739329755306
    2. 'component' → logprob: -4.763405799865723
    3. ':
' → logprob: -6.138405799865723
    4. '_component' → logprob: -7.138405799865723
    5. ' component' → logprob: -7.388405799865723
    6. ':' → logprob: -7.513405799865723
    7. 'segment' → logprob: -9.138405799865723
    8. 'count' → logprob: -9.263405799865723
    9. 'block' → logprob: -9.888405799865723
    10. '{
' → logprob: -10.013405799865723

Token 367: ' comp' (ID: 1050)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.3117237985134125
    2. 'sub' → logprob: -1.5617238283157349
    3. 'inner' → logprob: -3.3117237091064453
    4. 'return' → logprob: -4.561723709106445
    5. 'comp' (adapté à ' comp') → logprob: -4.811723709106445
    6. 'part' → logprob: -7.186723709106445
    7. 'child' → logprob: -7.811723709106445
    8. '           ' → logprob: -7.936723709106445
    9. 'segment' → logprob: -8.061723709106445
    10. 'unit' → logprob: -8.311723709106445

Token 368: '_len' (ID: 13683)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.022695813328027725
    2. '_idx' → logprob: -4.272696018218994
    3. 'onent' → logprob: -5.022696018218994
    4. '_len' → logprob: -6.772696018218994
    5. 'Index' → logprob: -7.772696018218994
    6. '_pos' → logprob: -9.397695541381836
    7. '_length' → logprob: -9.522695541381836
    8. 'index' → logprob: -9.522695541381836
    9. '_ind' → logprob: -10.897695541381836
    10. '_size' → logprob: -11.022695541381836

Token 369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11284509301185608
    2. '=' → logprob: -2.2378451824188232
    3. ' ' → logprob: -11.612845420837402
    4. '=self' → logprob: -12.237845420837402
    5. '	' → logprob: -13.862845420837402
    6. '   ' → logprob: -13.987845420837402
    7. '=len' → logprob: -13.987845420837402
    8. '=_' → logprob: -13.987845420837402
    9. '		' → logprob: -14.237845420837402
    10. '=
' → logprob: -14.362845420837402

Token 370: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234952084720135
    2. ' self' → logprob: -5.255234718322754
    3. '           ' → logprob: -13.755234718322754
    4. '               ' → logprob: -17.00523567199707
    5. '(self' → logprob: -18.00523567199707
    6. '       ' → logprob: -18.50523567199707
    7. '	self' → logprob: -19.13023567199707
    8. ' ' → logprob: -20.13023567199707
    9. '[self' → logprob: -20.50523567199707
    10. '   ' → logprob: -20.88023567199707

Token 371: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.001544141792692244
    2. '_component' → logprob: -6.501543998718262
    3. '.component' → logprob: -11.626543998718262
    4. '.' → logprob: -11.626543998718262
    5. '.get' → logprob: -11.751543998718262
    6. '_length' → logprob: -12.376543998718262
    7. '   ' → logprob: -13.001543998718262
    8. '_get' → logprob: -13.251543998718262
    9. '_' → logprob: -13.876543998718262
    10. '
' → logprob: -13.876543998718262

Token 372: 'component' (ID: 16294)
  Prédit: 'component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -1.3856492842023727e-06
    2. '_component' → logprob: -13.875000953674316
    3. ' component' → logprob: -15.250000953674316
    4. '	component' → logprob: -17.375001907348633
    5. '.component' → logprob: -17.625001907348633
    6. 'len' → logprob: -17.750001907348633
    7. 'comp' → logprob: -18.750001907348633
    8. '(component' → logprob: -19.000001907348633
    9. '_len' → logprob: -19.500001907348633
    10. 'length' → logprob: -19.500001907348633

Token 373: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -1.4378848391061183e-05
    2. 'length' → logprob: -11.500014305114746
    3. '.' → logprob: -12.375014305114746
    4. '.LENGTH' → logprob: -19.000015258789062
    5. ':length' → logprob: -19.375015258789062
    6. ' .' → logprob: -19.625015258789062
    7. ' length' → logprob: -20.000015258789062
    8. '.l' → logprob: -20.125015258789062
    9. '	length' → logprob: -20.250015258789062
    10. '.len' → logprob: -20.375015258789062

Token 374: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5168210864067078
    2. '
' → logprob: -1.0168211460113525
    3. '            
' → logprob: -3.5168211460113525
    4. '  
' → logprob: -5.891820907592773
    5. ' 
' → logprob: -6.016820907592773
    6. '        
' → logprob: -6.641820907592773
    7. '       ' → logprob: -6.766820907592773
    8. '<|end|>' → logprob: -6.891820907592773
    9. '    
' → logprob: -7.016820907592773
    10. ')' → logprob: -8.016820907592773

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.639793872833252
    2. '
' → logprob: -0.764793872833252
    3. '            
' → logprob: -6.514793872833252
    4. 'return' → logprob: -6.639793872833252
    5. 'segment' → logprob: -7.389793872833252
    6. 'index' → logprob: -7.639793872833252
    7. 'idx' → logprob: -8.014793395996094
    8. ' 
' → logprob: -8.264793395996094
    9. 'component' → logprob: -8.264793395996094
    10. 'token' → logprob: -8.514793395996094

Token 376: ' inner' (ID: 12694)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.823956310749054
    2. 'return' → logprob: -1.6989562511444092
    3. 'pos' → logprob: -1.6989562511444092
    4. 'inner' (adapté à ' inner') → logprob: -2.948956251144409
    5. 'component' → logprob: -3.323956251144409
    6. 'part' → logprob: -3.323956251144409
    7. 'rep' → logprob: -3.573956251144409
    8. 'offset' → logprob: -4.823956489562988
    9. 'repeat' → logprob: -4.823956489562988
    10. 'comp' → logprob: -5.198956489562988

Token 377: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0007829454843886197
    2. '_idx' → logprob: -7.7507829666137695
    3. '_' → logprob: -8.00078296661377
    4. 'index' → logprob: -11.62578296661377
    5. '_pos' → logprob: -12.37578296661377
    6. 'Index' → logprob: -13.12578296661377
    7. '_i' → logprob: -13.50078296661377
    8. '_ind' → logprob: -15.62578296661377
    9. ' =' → logprob: -16.750782012939453
    10. '=' → logprob: -17.625782012939453

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693148672580719
    2. ' =' → logprob: -0.693148672580719
    3. '=index' → logprob: -13.943148612976074
    4. ',' → logprob: -15.693148612976074
    5. ' ' → logprob: -16.06814956665039
    6. ' ' → logprob: -16.81814956665039
    7. '	' → logprob: -16.94314956665039
    8. ' =
' → logprob: -17.06814956665039
    9. '=int' → logprob: -17.19314956665039
    10. '=
' → logprob: -17.56814956665039

Token 379: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.31326213479042053
    2. 'index' → logprob: -1.3132621049880981
    3. '(index' → logprob: -15.438261985778809
    4. '	index' → logprob: -16.813262939453125
    5. '[index' → logprob: -16.938262939453125
    6. '#index' → logprob: -16.938262939453125
    7. '=index' → logprob: -17.063262939453125
    8. ' ' → logprob: -18.813262939453125
    9. '   ' → logprob: -18.938262939453125
    10. ',index' → logprob: -19.188262939453125

Token 380: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.029762526974081993
    2. '%' → logprob: -3.5297625064849854
    3. ' ' → logprob: -11.904762268066406
    4. ' ' → logprob: -12.529762268066406
    5. ' %
' → logprob: -14.029762268066406
    6. ' //' → logprob: -14.779762268066406
    7. ' %=' → logprob: -15.404762268066406
    8. '%d' → logprob: -16.029762268066406
    9. '%i' → logprob: -16.404762268066406
    10. '%s' → logprob: -16.779762268066406

Token 381: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.014163863845169544
    2. ' comp' → logprob: -4.264163970947266
    3. '	comp' → logprob: -15.764163970947266
    4. 'com' → logprob: -16.139163970947266
    5. '(comp' → logprob: -16.139163970947266
    6. '_comp' → logprob: -17.514163970947266
    7. ' ' → logprob: -18.889163970947266
    8. 'cmp' → logprob: -20.264163970947266
    9. 'compl' → logprob: -20.264163970947266
    10. '.comp' → logprob: -20.639163970947266

Token 382: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: 0.0
    2. '_l' → logprob: -16.875
    3. '_' → logprob: -17.75
    4. 'len' → logprob: -19.0
    5. '_LEN' → logprob: -19.125
    6. '_le' → logprob: -19.375
    7. '__' → logprob: -20.875
    8. '```' → logprob: -21.5
    9. 'onent' → logprob: -21.625
    10. ' _' → logprob: -21.75

Token 383: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006345495581626892
    2. '
' → logprob: -5.131345272064209
    3. 'return' → logprob: -8.131345748901367
    4. '            
' → logprob: -9.381345748901367
    5. ' return' → logprob: -11.506345748901367
    6. '               ' → logprob: -12.131345748901367
    7. ' 
' → logprob: -12.506345748901367
    8. '  
' → logprob: -12.631345748901367
    9. '       ' → logprob: -12.881345748901367
    10. ',' → logprob: -13.256345748901367

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006869370117783546
    2. 'return' → logprob: -7.500687122344971
    3. ' return' → logprob: -9.000686645507812
    4. '
' → logprob: -12.375686645507812
    5. '            
' → logprob: -12.875686645507812
    6. '       ' → logprob: -13.500686645507812
    7. '               ' → logprob: -14.250686645507812
    8. '   ' → logprob: -14.750686645507812
    9. '		' → logprob: -14.875686645507812
    10. ' 
' → logprob: -15.125686645507812

Token 385: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00034023032640106976
    2. '           ' → logprob: -8.000340461730957
    3. ' return' → logprob: -12.250340461730957
    4. '	return' → logprob: -19.62533950805664
    5. '
' → logprob: -20.50033950805664
    6. '{return' → logprob: -20.50033950805664
    7. '```' → logprob: -20.87533950805664
    8. '               ' → logprob: -20.87533950805664
    9. 'result' → logprob: -21.50033950805664
    10. '       ' → logprob: -22.12533950805664

Token 386: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519291639328003
    2. ' self' → logprob: -1.5019291639328003
    3. '           ' → logprob: -17.376928329467773
    4. '	self' → logprob: -17.626928329467773
    5. '(self' → logprob: -18.126928329467773
    6. '_self' → logprob: -18.751928329467773
    7. ' ' → logprob: -19.001928329467773
    8. '[self' → logprob: -19.251928329467773
    9. '```' → logprob: -19.751928329467773
    10. 'Self' → logprob: -20.251928329467773

Token 387: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -13.250004768371582
    3. '.' → logprob: -13.875004768371582
    4. ')._' → logprob: -14.625004768371582
    5. '_component' → logprob: -15.125004768371582
    6. '
' → logprob: -15.375004768371582
    7. '._
' → logprob: -15.500004768371582
    8. ']._' → logprob: -15.625004768371582
    9. '.__' → logprob: -16.125003814697266
    10. '."_' → logprob: -16.125003814697266

Token 388: 'component' (ID: 16294)
  Prédit: 'component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -2.451116051815916e-05
    2. '_component' → logprob: -10.625024795532227
    3. '	component' → logprob: -17.000024795532227
    4. ' component' → logprob: -17.125024795532227
    5. 'comp' → logprob: -18.500024795532227
    6. 'character' → logprob: -18.750024795532227
    7. '.component' → logprob: -19.000024795532227
    8. '(component' → logprob: -19.000024795532227
    9. 'com' → logprob: -19.125024795532227
    10. 'get' → logprob: -19.375024795532227

Token 389: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.47495681833243e-05
    2. '.' → logprob: -10.625024795532227
    3. 'get' → logprob: -15.000024795532227
    4. ' .' → logprob: -16.125024795532227
    5. '@get' → logprob: -19.625024795532227
    6. '
' → logprob: -20.125024795532227
    7. '_get' → logprob: -20.500024795532227
    8. '.
' → logprob: -20.750024795532227
    9. '.Get' → logprob: -20.750024795532227
    10. '[' → logprob: -21.125024795532227

Token 390: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -9.088346359931165e-07
    2. 'char' → logprob: -14.625000953674316
    3. '```' → logprob: -16.625
    4. '_' → logprob: -16.875
    5. '
' → logprob: -17.125
    6. 'Char' → logprob: -17.25
    7. '_chars' → logprob: -17.375
    8. '_get' → logprob: -17.625
    9. ' _' → logprob: -17.625
    10. '_CHAR' → logprob: -18.25

Token 391: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.0280383548888494e-06
    2. '_char' → logprob: -14.375000953674316
    3. 'at' → logprob: -15.000000953674316
    4. 'At' → logprob: -16.875001907348633
    5. '```' → logprob: -16.875001907348633
    6. '_att' → logprob: -18.125001907348633
    7. '_' → logprob: -19.000001907348633
    8. ')_' → logprob: -19.500001907348633
    9. ' _' → logprob: -19.875001907348633
    10. '	at' → logprob: -20.125001907348633

Token 392: '(inner' (ID: 125841)
  Prédit: '(inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inner' → logprob: -3.857719275401905e-05
    2. '(' → logprob: -10.250038146972656
    3. 'inner' → logprob: -12.750038146972656
    4. '(
' → logprob: -15.750038146972656
    5. ' inner' → logprob: -16.625038146972656
    6. '(in' → logprob: -17.625038146972656
    7. '(left' → logprob: -18.125038146972656
    8. ' (' → logprob: -18.625038146972656
    9. '_inner' → logprob: -20.250038146972656
    10. '(next' → logprob: -20.375038146972656

Token 393: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.153795766294934e-06
    2. 'index' → logprob: -12.625005722045898
    3. '_' → logprob: -13.000005722045898
    4. '_
' → logprob: -15.375005722045898
    5. ' _' → logprob: -16.2500057220459
    6. '__' → logprob: -17.2500057220459
    7. '_i' → logprob: -17.6250057220459
    8. '```' → logprob: -17.7500057220459
    9. '
' → logprob: -18.3750057220459
    10. '_in' → logprob: -18.5000057220459

Token 394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003270403016358614
    2. ')
' → logprob: -5.753270626068115
    3. ' )' → logprob: -9.378270149230957
    4. '       ' → logprob: -12.503270149230957
    5. ' )
' → logprob: -12.753270149230957
    6. ')return' → logprob: -14.378270149230957
    7. ')
' → logprob: -15.003270149230957
    8. '   ' → logprob: -15.628270149230957
    9. ')

' → logprob: -16.253271102905273
    10. '<|end|>' → logprob: -16.503271102905273

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.220573363360018e-05
    2. 'return' → logprob: -10.500082015991211
    3. '   ' → logprob: -10.750082015991211
    4. '	' → logprob: -11.000082015991211
    5. '<|end|>' → logprob: -12.000082015991211
    6. ' return' → logprob: -12.625082015991211
    7. '	return' → logprob: -13.000082015991211
    8. '        
' → logprob: -13.125082015991211
    9. '	   ' → logprob: -14.625082015991211
    10. '           ' → logprob: -14.625082015991211

Token 396: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02021459862589836
    2. '       ' → logprob: -4.020214557647705
    3. '   ' → logprob: -6.520214557647705
    4. ' return' → logprob: -7.520214557647705
    5. 'None' → logprob: -10.645215034484863
    6. '
' → logprob: -11.145215034484863
    7. 'else' → logprob: -12.020215034484863
    8. '	return' → logprob: -13.020215034484863
    9. '    
' → logprob: -15.895215034484863
    10. 'eturn' → logprob: -16.145214080810547

Token 397: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004078401252627373
    2. ' None' → logprob: -5.504078388214111
    3. '_None' → logprob: -18.879077911376953
    4. '(None' → logprob: -19.629077911376953
    5. '=None' → logprob: -21.879077911376953
    6. 'No' → logprob: -21.879077911376953
    7. ',None' → logprob: -22.129077911376953
    8. '.None' → logprob: -24.004077911376953
    9. 'none' → logprob: -24.004077911376953
    10. '_none' → logprob: -24.379077911376953

Token 398: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00015109812375158072
    2. 'c' → logprob: -9.000150680541992
    3. '<class' → logprob: -12.000150680541992
    4. 'clas' → logprob: -12.250150680541992
    5. '#' → logprob: -12.500150680541992
    6. '"class' → logprob: -12.625150680541992
    7. ' class' → logprob: -13.250150680541992
    8. 'from' → logprob: -13.375150680541992
    9. '
' → logprob: -13.625150680541992
    10. '```' → logprob: -13.875150680541992

Token 400: ' Genome' (ID: 168601)
  Prédit: 'Conc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Conc' → logprob: -0.6676148176193237
    2. 'Sequence' → logprob: -0.9176148176193237
    3. 'Composite' → logprob: -3.1676149368286133
    4. 'Concat' → logprob: -3.1676149368286133
    5. 'Compound' → logprob: -6.667614936828613
    6. 'Genome' → logprob: -6.792614936828613
    7. ' Conc' → logprob: -8.042614936828613
    8. 'Con' → logprob: -8.792614936828613
    9. 'Group' → logprob: -9.417614936828613
    10. 'Combined' → logprob: -9.667614936828613

Token 401: 'Parser' (ID: 9231)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.011424905620515347
    2. '(' → logprob: -5.011425018310547
    3. 'Parser' → logprob: -6.136425018310547
    4. 'Composite' → logprob: -6.886425018310547
    5. ':' → logprob: -7.636425018310547
    6. 'sequence' → logprob: -8.261425018310547
    7. 'Decoder' → logprob: -8.761425018310547
    8. 'Builder' → logprob: -9.136425018310547
    9. 'Assembler' → logprob: -9.386425018310547
    10. 'Component' → logprob: -10.011425018310547

Token 402: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017785917734727263
    2. '(' → logprob: -6.376778602600098
    3. ':
' → logprob: -10.376778602600098
    4. ' :' → logprob: -11.126778602600098
    5. '():' → logprob: -11.501778602600098
    6. '(object' → logprob: -12.001778602600098
    7. '):' → logprob: -12.501778602600098
    8. ':**' → logprob: -13.376778602600098
    9. ':def' → logprob: -13.376778602600098
    10. '(Parser' → logprob: -13.626778602600098

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006481022574007511
    2. ' def' → logprob: -7.625648021697998
    3. '    
' → logprob: -9.375648498535156
    4. '
' → logprob: -10.125648498535156
    5. 'def' → logprob: -11.250648498535156
    6. ' indentation' → logprob: -11.750648498535156
    7. ' 
' → logprob: -13.000648498535156
    8. '(' → logprob: -13.250648498535156
    9. '    ' → logprob: -13.375648498535156
    10. ':' → logprob: -13.625648498535156

Token 404: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3578542172908783
    2. '   ' → logprob: -1.2328542470932007
    3. 'def' → logprob: -4.73285436630249
    4. ' """
' → logprob: -7.73285436630249
    5. '```' → logprob: -10.732853889465332
    6. '    ' → logprob: -10.857853889465332
    7. '
' → logprob: -11.107853889465332
    8. ' 
' → logprob: -11.232853889465332
    9. 'class' → logprob: -11.857853889465332
    10. ' ' → logprob: -12.107853889465332

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21279627084732056
    2. '"""
' → logprob: -1.7127962112426758
    3. ' """
' → logprob: -5.212796211242676
    4. '"""' → logprob: -5.587796211242676
    5. 'class' → logprob: -6.337796211242676
    6. 'def' → logprob: -8.462796211242676
    7. ' def' → logprob: -10.337796211242676
    8. '"
' → logprob: -10.587796211242676
    9. '"' → logprob: -10.712796211242676
    10. 'Class' → logprob: -11.212796211242676

Token 406: ' A' (ID: 355)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14878636598587036
    2. 'class' → logprob: -3.0237863063812256
    3. '"""
' → logprob: -3.2737863063812256
    4. ' def' → logprob: -3.5237863063812256
    5. '   ' → logprob: -3.8987863063812256
    6. ' """
' → logprob: -6.523786544799805
    7. '"""' → logprob: -7.898786544799805
    8. '
' → logprob: -9.148786544799805
    9. '```' → logprob: -10.898786544799805
    10. ' ' → logprob: -11.773786544799805

Token 407: ' sophisticated' (ID: 36278)
  Prédit: ' parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.16009756922721863
    2. ' def' → logprob: -3.035097599029541
    3. 'n' → logprob: -3.535097599029541
    4. 'def' → logprob: -3.785097599029541
    5. 'class' → logprob: -3.785097599029541
    6. 'parser' → logprob: -4.660097599029541
    7. ' class' → logprob: -4.910097599029541
    8. 'ims' → logprob: -6.660097599029541
    9. 'imed' → logprob: -6.785097599029541
    10. ' Parser' → logprob: -6.910097599029541

Token 408: ' recursive' (ID: 66711)
  Prédit: ' parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.2266199141740799
    2. 'parser' → logprob: -1.7266199588775635
    3. ' genome' → logprob: -3.8516199588775635
    4. ' class' → logprob: -6.476619720458984
    5. 'class' → logprob: -6.601619720458984
    6. 'gen' → logprob: -9.226619720458984
    7. 'Genome' → logprob: -9.351619720458984
    8. ' def' → logprob: -9.601619720458984
    9. ' genomic' → logprob: -9.851619720458984
    10. 'def' → logprob: -9.851619720458984

Token 409: ' descent' (ID: 67101)
  Prédit: ' parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.6085100769996643
    2. 'parser' → logprob: -0.8585100769996643
    3. 'des' → logprob: -4.2335100173950195
    4. 'class' → logprob: -5.1085100173950195
    5. 'def' → logprob: -5.7335100173950195
    6. 'decoder' → logprob: -5.9835100173950195
    7. ' genome' → logprob: -6.7335100173950195
    8. ' descent' → logprob: -6.7335100173950195
    9. 'gen' → logprob: -6.8585100173950195
    10. 'code' → logprob: -7.8585100173950195

Token 410: ' parser' (ID: 14216)
  Prédit: ' parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.5786405205726624
    2. 'parser' → logprob: -0.8286405205726624
    3. ' genome' → logprob: -6.828640460968018
    4. 'gen' → logprob: -7.328640460968018
    5. 'des' → logprob: -8.203640937805176
    6. 'class' → logprob: -8.453640937805176
    7. 'Parser' → logprob: -9.328640937805176
    8. 'decoder' → logprob: -9.328640937805176
    9. '_parser' → logprob: -9.828640937805176
    10. 'def' → logprob: -10.578640937805176

Token 411: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7619711756706238
    2. '   ' → logprob: -1.0119712352752686
    3. ' that' → logprob: -1.8869712352752686
    4. '<|end|>' → logprob: -5.2619709968566895
    5. ' ' → logprob: -5.7619709968566895
    6. 'for' → logprob: -6.0119709968566895
    7. '  ' → logprob: -6.3869709968566895
    8. ' to' → logprob: -6.5119709968566895
    9. ' of' → logprob: -6.6369709968566895
    10. '<|end|>' → logprob: -7.2619709968566895

Token 412: ' the' (ID: 290)
  Prédit: 'gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gen' → logprob: -1.5603686571121216
    2. 'the' → logprob: -1.5603686571121216
    3. 'par' → logprob: -1.8103686571121216
    4. ' genome' → logprob: -1.8103686571121216
    5. 'compressed' → logprob: -2.310368537902832
    6. ' parsing' → logprob: -2.685368537902832
    7. ' the' → logprob: -2.935368537902832
    8. 'expanded' → logprob: -4.685368537902832
    9. ' compressed' → logprob: -5.310368537902832
    10. ' decoding' → logprob: -5.685368537902832

Token 413: ' compressed' (ID: 58419)
  Prédit: 'gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gen' → logprob: -0.31403180956840515
    2. 'compressed' → logprob: -2.0640318393707275
    3. ' genome' → logprob: -2.3140318393707275
    4. 'expanded' → logprob: -3.3140318393707275
    5. 'given' → logprob: -5.689031600952148
    6. ' expanded' → logprob: -6.939031600952148
    7. ' compressed' → logprob: -7.314031600952148
    8. 'custom' → logprob: -7.814031600952148
    9. ' given' → logprob: -7.939031600952148
    10. 'Genome' → logprob: -8.314031600952148

Token 414: ' genome' (ID: 64778)
  Prédit: ' genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' genome' → logprob: -0.34882164001464844
    2. 'gen' → logprob: -1.2238216400146484
    3. 'sequence' → logprob: -8.473821640014648
    4. 'def' → logprob: -10.348821640014648
    5. 'compressed' → logprob: -10.723821640014648
    6. 'code' → logprob: -10.973821640014648
    7. 'Genome' → logprob: -10.973821640014648
    8. ' sequence' → logprob: -11.098821640014648
    9. 'class' → logprob: -11.473821640014648
    10. 'string' → logprob: -11.598821640014648

Token 415: ' representation' (ID: 22311)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.021491743624210358
    2. 'sequence' → logprob: -4.021491527557373
    3. ' sequences' → logprob: -5.896491527557373
    4. ' string' → logprob: -8.896492004394531
    5. ' code' → logprob: -8.896492004394531
    6. '_sequence' → logprob: -9.271492004394531
    7. 'string' → logprob: -9.396492004394531
    8. '   ' → logprob: -9.771492004394531
    9. ' genome' → logprob: -11.521492004394531
    10. ' expression' → logprob: -11.646492004394531

Token 416: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2942982316017151
    2. '.' → logprob: -1.6692981719970703
    3. ' that' → logprob: -3.5442981719970703
    4. ' of' → logprob: -4.41929817199707
    5. ',' → logprob: -5.04429817199707
    6. ' code' → logprob: -5.16929817199707
    7. '
' → logprob: -6.04429817199707
    8. '  ' → logprob: -6.29429817199707
    9. '.
' → logprob: -6.54429817199707
    10. ' in' → logprob: -7.04429817199707

Token 417: '   ' (ID: 271)
  Prédit: ' capable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capable' → logprob: -0.28568705916404724
    2. '   ' → logprob: -1.6606870889663696
    3. ' designed' → logprob: -3.91068696975708
    4. ' able' → logprob: -4.78568696975708
    5. 'des' → logprob: -5.16068696975708
    6. ' that' → logprob: -5.28568696975708
    7. 'which' → logprob: -5.53568696975708
    8. 'cap' → logprob: -5.66068696975708
    9. 'that' → logprob: -5.91068696975708
    10. ' which' → logprob: -6.03568696975708

Token 418: ' anticipating' (ID: 136423)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9239003658294678
    2. ' capable' → logprob: -0.9239003658294678
    3. 'def' → logprob: -2.0489003658294678
    4. ' designed' → logprob: -3.7989003658294678
    5. ' def' → logprob: -4.423900604248047
    6. 'which' → logprob: -5.048900604248047
    7. ' able' → logprob: -5.173900604248047
    8. ' which' → logprob: -5.298900604248047
    9. 'des' → logprob: -5.673900604248047
    10. ' that' → logprob: -5.923900604248047

Token 419: ' extens' (ID: 34241)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.9949638843536377
    2. ' the' → logprob: -2.2449638843536377
    3. ' possible' → logprob: -2.6199638843536377
    4. ' multiple' → logprob: -3.4949638843536377
    5. ' that' → logprob: -3.6199638843536377
    6. ' more' → logprob: -3.6199638843536377
    7. ' future' → logprob: -3.7449638843536377
    8. ' complex' → logprob: -3.9949638843536377
    9. 'the' → logprob: -3.9949638843536377
    10. ' a' → logprob: -4.119963645935059

Token 420: 'ibility' (ID: 4295)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.12867407500743866
    2. 'ed' → logprob: -2.503674030303955
    3. 'e' → logprob: -4.253674030303955
    4. 'ended' → logprob: -4.628674030303955
    5. 'ensions' → logprob: -5.253674030303955
    6. 'ion' → logprob: -5.628674030303955
    7. 'eded' → logprob: -6.503674030303955
    8. 'ending' → logprob: -6.628674030303955
    9. 'end' → logprob: -6.878674030303955
    10. 'ible' → logprob: -7.253674030303955

Token 421: ' for' (ID: 395)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06130203604698181
    2. ',' → logprob: -3.8113019466400146
    3. ' and' → logprob: -3.8113019466400146
    4. ' to' → logprob: -5.436302185058594
    5. ' for' → logprob: -5.686302185058594
    6. ' .' → logprob: -6.311302185058594
    7. ' of' → logprob: -6.311302185058594
    8. 'and' → logprob: -7.061302185058594
    9. '   ' → logprob: -7.436302185058594
    10. ' with' → logprob: -7.561302185058594

Token 422: ' more' (ID: 945)
  Prédit: ' future'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' future' → logprob: -1.482973337173462
    2. ' more' → logprob: -2.107973337173462
    3. 'future' → logprob: -2.232973337173462
    4. ' nested' → logprob: -2.357973337173462
    5. 'additional' → logprob: -2.607973337173462
    6. 'more' → logprob: -2.857973337173462
    7. ' complex' → logprob: -2.982973337173462
    8. 'var' → logprob: -3.107973337173462
    9. ' additional' → logprob: -3.232973337173462
    10. 'nested' → logprob: -3.357973337173462

Token 423: ' features' (ID: 4877)
  Prédit: ' complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complex' → logprob: -0.4085700809955597
    2. 'complex' → logprob: -1.1585700511932373
    3. ' features' → logprob: -4.783570289611816
    4. 'features' → logprob: -5.158570289611816
    5. ' advanced' → logprob: -6.533570289611816
    6. 'components' → logprob: -7.033570289611816
    7. 'formats' → logprob: -7.158570289611816
    8. 'advanced' → logprob: -7.408570289611816
    9. 'compressed' → logprob: -7.408570289611816
    10. ' components' → logprob: -7.408570289611816

Token 424: ' and' (ID: 326)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00901313778012991
    2. ',' → logprob: -6.1340131759643555
    3. ' and' → logprob: -6.1340131759643555
    4. '.
' → logprob: -6.6340131759643555
    5. '   ' → logprob: -6.7590131759643555
    6. ' .' → logprob: -7.2590131759643555
    7. ' like' → logprob: -7.7590131759643555
    8. '."""' → logprob: -8.384013175964355
    9. ' beyond' → logprob: -8.509013175964355
    10. ' in' → logprob: -8.759013175964355

Token 425: ' complexity' (ID: 37588)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.9744191765785217
    2. 'future' → logprob: -2.224419116973877
    3. 'optim' → logprob: -2.474419116973877
    4. 'rob' → logprob: -2.599419116973877
    5. 'mod' → logprob: -2.974419116973877
    6. 'flex' → logprob: -3.099419116973877
    7. 'custom' → logprob: -3.849419116973877
    8. 'maint' → logprob: -3.974419116973877
    9. 'different' → logprob: -3.974419116973877
    10. ' optim' → logprob: -4.099419116973877

Token 426: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012360364198684692
    2. '   ' → logprob: -4.762360572814941
    3. '.
' → logprob: -5.887360572814941
    4. ',' → logprob: -7.137360572814941
    5. ')' → logprob: -10.512360572814941
    6. '
' → logprob: -10.637360572814941
    7. ' .' → logprob: -10.762360572814941
    8. '.

' → logprob: -11.512360572814941
    9. ').' → logprob: -11.637360572814941
    10. ']' → logprob: -11.762360572814941

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007699491921812296
    2. '
' → logprob: -5.132699489593506
    3. ')' → logprob: -6.757699489593506
    4. '

' → logprob: -8.507699966430664
    5. '<|end|>' → logprob: -9.007699966430664
    6. '```' → logprob: -9.632699966430664
    7. 'def' → logprob: -9.757699966430664
    8. '    
' → logprob: -9.757699966430664
    9. '"""' → logprob: -10.382699966430664
    10. ' def' → logprob: -11.132699966430664

Token 428: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5981010794639587
    2. '"""' → logprob: -0.9731010794639587
    3. 'def' → logprob: -3.3481011390686035
    4. '
' → logprob: -3.9731011390686035
    5. '```' → logprob: -5.0981011390686035
    6. ')' → logprob: -5.3481011390686035
    7. ' def' → logprob: -5.8481011390686035
    8. '

' → logprob: -6.0981011390686035
    9. ' """' → logprob: -7.0981011390686035
    10. '"""

' (adapté à ' """

') → logprob: -7.8481011390686035

Token 429: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.01770312339067459
    2. 'def' → logprob: -4.517703056335449
    3. '   ' → logprob: -5.017703056335449
    4. '    ' → logprob: -12.01770305633545
    5. ' indentation' → logprob: -13.26770305633545
    6. ' indent' → logprob: -13.89270305633545
    7. ' _' → logprob: -14.14270305633545
    8. 'class' → logprob: -14.26770305633545
    9. '```' → logprob: -14.26770305633545
    10. ' class' → logprob: -14.39270305633545

Token 430: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005651841638609767
    2. ' def' → logprob: -7.500565052032471
    3. 'class' → logprob: -12.625565528869629
    4. 'de' → logprob: -13.000565528869629
    5. '   ' → logprob: -13.500565528869629
    6. '
' → logprob: -13.750565528869629
    7. '__' → logprob: -14.000565528869629
    8. '_def' → logprob: -14.000565528869629
    9. 'TOKEN' → logprob: -14.500565528869629
    10. 'import' → logprob: -14.625565528869629

Token 431: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.13442537188529968
    2. ' def' → logprob: -2.134425401687622
    3. 'def' → logprob: -5.384425163269043
    4. '__' → logprob: -5.884425163269043
    5. '_init' → logprob: -9.759425163269043
    6. 'init' → logprob: -11.009425163269043
    7. ' ' → logprob: -11.009425163269043
    8. ' _' → logprob: -12.884425163269043
    9. ' init' → logprob: -13.134425163269043
    10. '_def' → logprob: -13.634425163269043

Token 432: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.5
    3. '```' → logprob: -20.375
    4. '
' → logprob: -20.5
    5. '_init' → logprob: -20.625
    6. '`' → logprob: -20.75
    7. '   ' → logprob: -21.5
    8. 'def' → logprob: -21.75
    9. '_' → logprob: -21.875
    10. '__' → logprob: -22.5

Token 433: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18198007345199585
    2. '__(' → logprob: -1.8069801330566406
    3. '(' → logprob: -7.181980133056641
    4. ' (' → logprob: -7.181980133056641
    5. '__(
' → logprob: -7.806980133056641
    6. 'self' → logprob: -8.55698013305664
    7. '(
' → logprob: -10.68198013305664
    8. '__' → logprob: -10.80698013305664
    9. '_(' → logprob: -10.93198013305664
    10. ')(' → logprob: -11.05698013305664

Token 434: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.522638169466518e-05
    2. ' self' → logprob: -11.250024795532227
    3. '
' → logprob: -11.375024795532227
    4. '   ' → logprob: -14.625024795532227
    5. '(self' → logprob: -15.625024795532227
    6. '0' → logprob: -18.375024795532227
    7. '	self' → logprob: -18.625024795532227
    8. ')' → logprob: -19.000024795532227
    9. '       ' → logprob: -19.000024795532227
    10. ',' → logprob: -19.125024795532227

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00411129230633378
    2. 'self' → logprob: -5.504111289978027
    3. ' ,' → logprob: -10.629111289978027
    4. ',self' → logprob: -12.504111289978027
    5. ',
' → logprob: -13.504111289978027
    6. '(self' → logprob: -13.754111289978027
    7. ' self' → logprob: -14.129111289978027
    8. '   ' → logprob: -14.254111289978027
    9. '```' → logprob: -15.254111289978027
    10. '__,' → logprob: -15.254111289978027

Token 436: ' data' (ID: 1238)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.5939836502075195
    2. 'sequence' → logprob: -1.2189836502075195
    3. 'data' → logprob: -2.9689836502075195
    4. 'source' → logprob: -3.5939836502075195
    5. 'input' → logprob: -3.7189836502075195
    6. 'self' → logprob: -3.9689836502075195
    7. ' sequence' → logprob: -4.5939836502075195
    8. ' text' → logprob: -4.5939836502075195
    9. 'compressed' → logprob: -5.4689836502075195
    10. ' genome' → logprob: -6.5939836502075195

Token 437: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012987985974177718
    2. ':str' → logprob: -9.125129699707031
    3. ' :' → logprob: -10.875129699707031
    4. '):' → logprob: -14.000129699707031
    5. '):
' → logprob: -14.375129699707031
    6. '_:' → logprob: -15.000129699707031
    7. '   ' → logprob: -15.500129699707031
    8. ')' → logprob: -17.12512969970703
    9. '```' → logprob: -17.87512969970703
    10. ' ):' → logprob: -18.37512969970703

Token 438: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.001929228543303907
    2. ' str' → logprob: -6.25192928314209
    3. '[str' → logprob: -14.62692928314209
    4. ')' → logprob: -16.376928329467773
    5. '(str' → logprob: -17.376928329467773
    6. '   ' → logprob: -17.501928329467773
    7. ':str' → logprob: -18.251928329467773
    8. '	str' → logprob: -18.751928329467773
    9. '=str' → logprob: -19.376928329467773
    10. ' ' → logprob: -19.751928329467773

Token 439: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4767311215400696
    2. '):' → logprob: -0.9767311215400696
    3. ')' → logprob: -5.976731300354004
    4. '):
' → logprob: -9.851731300354004
    5. '   ' → logprob: -10.851731300354004
    6. ':' → logprob: -10.976731300354004
    7. ',' → logprob: -10.976731300354004
    8. ' ):' → logprob: -12.726731300354004
    9. ' ):
' → logprob: -12.976731300354004
    10. '):

' → logprob: -14.351731300354004

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052030593156814575
    2. 'self' → logprob: -3.052030563354492
    3. ' self' → logprob: -5.677030563354492
    4. '   ' → logprob: -11.677030563354492
    5. '	self' → logprob: -12.927030563354492
    6. '	' → logprob: -14.302030563354492
    7. ' ' → logprob: -14.302030563354492
    8. '      ' → logprob: -14.427030563354492
    9. '           ' → logprob: -15.302030563354492
    10. 's' → logprob: -15.302030563354492

Token 441: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001248089363798499
    2. ' self' → logprob: -7.001247882843018
    3. '       ' → logprob: -8.001248359680176
    4. '
' → logprob: -14.126248359680176
    5. '   ' → logprob: -14.251248359680176
    6. 'from' → logprob: -16.62624740600586
    7. 'data' → logprob: -18.37624740600586
    8. 'import' → logprob: -18.50124740600586
    9. '	self' → logprob: -18.50124740600586
    10. ' ' → logprob: -18.87624740600586

Token 442: '._' (ID: 2697)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.29983487725257874
    2. '._' → logprob: -1.4248348474502563
    3. ' .' → logprob: -4.299834728240967
    4. '.' → logprob: -5.674834728240967
    5. '_data' → logprob: -7.049834728240967
    6. 'data' → logprob: -7.924834728240967
    7. ' ' → logprob: -8.674835205078125
    8. '   ' → logprob: -10.549835205078125
    9. ' data' → logprob: -10.799835205078125
    10. '
' → logprob: -11.424835205078125

Token 443: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0001317871210630983
    2. 'pos' → logprob: -9.125131607055664
    3. 'index' → logprob: -11.625131607055664
    4. '_data' → logprob: -11.875131607055664
    5. 'input' → logprob: -12.625131607055664
    6. 'position' → logprob: -12.875131607055664
    7. ' data' → logprob: -15.375131607055664
    8. '
' → logprob: -15.625131607055664
    9. 'source' → logprob: -16.125131607055664
    10. 'buffer' → logprob: -16.250131607055664

Token 444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3895268738269806
    2. ' =' → logprob: -1.1395268440246582
    3. ':' → logprob: -6.139526844024658
    4. '   ' → logprob: -9.139527320861816
    5. '<|end|>' → logprob: -9.514527320861816
    6. ')' → logprob: -9.764527320861816
    7. '    ' → logprob: -10.014527320861816
    8. ' ' → logprob: -10.264527320861816
    9. '_index' → logprob: -10.389527320861816
    10. '=data' → logprob: -10.889527320861816

Token 445: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0019287518225610256
    2. ' data' → logprob: -6.251928806304932
    3. 'dat' → logprob: -17.251928329467773
    4. ' ' → logprob: -17.501928329467773
    5. '   ' → logprob: -18.001928329467773
    6. '_data' → logprob: -18.876928329467773
    7. '	data' → logprob: -19.001928329467773
    8. '(data' → logprob: -19.001928329467773
    9. 'd' → logprob: -19.501928329467773
    10. '$data' → logprob: -19.751928329467773

Token 446: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011686758371070027
    2. 'self' → logprob: -7.251168727874756
    3. ',' → logprob: -8.126168251037598
    4. '<|end|>' → logprob: -9.001168251037598
    5. ' self' → logprob: -11.626168251037598
    6. ',
' → logprob: -12.001168251037598
    7. '   ' → logprob: -12.001168251037598
    8. '<|end|>' → logprob: -12.626168251037598
    9. ')' → logprob: -13.001168251037598
    10. '
' → logprob: -13.126168251037598

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017521760892122984
    2. 'self' → logprob: -6.3767523765563965
    3. '   ' → logprob: -10.501751899719238
    4. ' self' → logprob: -11.126751899719238
    5. ',' → logprob: -12.376751899719238
    6. '[self' → logprob: -14.376751899719238
    7. '	' → logprob: -14.501751899719238
    8. '           ' → logprob: -14.876751899719238
    9. '
' → logprob: -14.876751899719238
    10. ' ' → logprob: -15.001751899719238

Token 448: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002478694950696081
    2. ' self' → logprob: -8.875247955322266
    3. '0' → logprob: -10.375247955322266
    4. '_self' → logprob: -10.500247955322266
    5. '       ' → logprob: -11.000247955322266
    6. '
' → logprob: -11.500247955322266
    7. '_len' → logprob: -11.625247955322266
    8. '   ' → logprob: -11.750247955322266
    9. 'len' → logprob: -13.375247955322266
    10. '_length' → logprob: -13.875247955322266

Token 449: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.08401516079902649
    2. '_pos' → logprob: -3.084015130996704
    3. '_idx' → logprob: -4.584015369415283
    4. '_index' → logprob: -4.584015369415283
    5. '_len' → logprob: -4.584015369415283
    6. '_length' → logprob: -6.084015369415283
    7. '.' → logprob: -7.959015369415283
    8. '_cursor' → logprob: -8.459014892578125
    9. '_size' → logprob: -8.834014892578125
    10. 'pos' → logprob: -8.959014892578125

Token 450: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.007192816119641066
    2. 'index' → logprob: -5.007192611694336
    3. 'position' → logprob: -7.882192611694336
    4. 'length' → logprob: -9.382192611694336
    5. 'idx' → logprob: -11.632192611694336
    6. 'len' → logprob: -12.507192611694336
    7. '_pos' → logprob: -13.132192611694336
    8. 'i' → logprob: -14.757192611694336
    9. ' pos' → logprob: -14.757192611694336
    10. 'ptr' → logprob: -15.757192611694336

Token 451: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1115267276763916
    2. '=' → logprob: -2.3615267276763916
    3. '<|end|>' → logprob: -5.1115264892578125
    4. ' +=' → logprob: -5.8615264892578125
    5. ' ' → logprob: -6.7365264892578125
    6. ':' → logprob: -8.361526489257812
    7. '+=' → logprob: -8.861526489257812
    8. ')' → logprob: -8.986526489257812
    9. '   ' → logprob: -9.111526489257812
    10. '  ' → logprob: -9.236526489257812

Token 452: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -21.0000057220459
    4. '۰' → logprob: -21.0000057220459
    5. '  ' → logprob: -22.0000057220459
    6. '[' → logprob: -22.8750057220459
    7. '00' → logprob: -23.1250057220459
    8. '000' → logprob: -23.3125057220459
    9. '-' → logprob: -23.5000057220459
    10. '```' → logprob: -23.5625057220459

Token 453: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۰' → logprob: -20.25
    4. '000' → logprob: -21.0
    5. '[' → logprob: -21.375
    6. '```' → logprob: -22.0
    7. '00' → logprob: -22.125
    8. '`' → logprob: -22.75
    9. '=' → logprob: -22.75
    10. '০' → logprob: -23.125

Token 454: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5018783807754517
    2. '<|end|>' → logprob: -1.3768783807754517
    3. '   ' → logprob: -2.251878261566162
    4. '    
' → logprob: -4.376878261566162
    5. '       ' → logprob: -4.626878261566162
    6. ' ' → logprob: -5.251878261566162
    7. '<|end|>' → logprob: -6.376878261566162
    8. 'def' → logprob: -6.626878261566162
    9. ' 
' → logprob: -6.876878261566162
    10. '  
' → logprob: -7.126878261566162

Token 455: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6444337368011475
    2. '<|end|>' → logprob: -1.3944337368011475
    3. '
' → logprob: -2.0194337368011475
    4. '    
' → logprob: -3.5194337368011475
    5. 'def' → logprob: -4.019433975219727
    6. ' ' → logprob: -4.269433975219727
    7. ' def' → logprob: -4.644433975219727
    8. '```' → logprob: -5.144433975219727
    9. '  
' → logprob: -5.394433975219727
    10. ' 
' → logprob: -5.644433975219727

Token 456: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.043422404676675797
    2. 'self' (adapté à ' self') → logprob: -3.2934224605560303
    3. '   ' → logprob: -5.668422222137451
    4. ' def' → logprob: -7.043422222137451
    5. ' self' → logprob: -8.16842269897461
    6. '       ' → logprob: -8.41842269897461
    7. '<|end|>' → logprob: -8.41842269897461
    8. '@property' → logprob: -9.29342269897461
    9. '    
' → logprob: -9.29342269897461
    10. '	self' → logprob: -10.54342269897461

Token 457: '._' (ID: 2697)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.576961874961853
    2. '_' → logprob: -1.701961874961853
    3. '._' → logprob: -1.701961874961853
    4. ' _' → logprob: -3.5769619941711426
    5. '_length' → logprob: -3.5769619941711426
    6. '
' → logprob: -6.076961994171143
    7. '   ' → logprob: -6.201961994171143
    8. '_size' → logprob: -6.451961994171143
    9. '_current' → logprob: -6.576961994171143
    10. '.' → logprob: -6.701961994171143

Token 458: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.04312056675553322
    2. 'len' → logprob: -3.1681206226348877
    3. 'cache' → logprob: -9.793120384216309
    4. 'stack' → logprob: -10.293120384216309
    5. 'data' → logprob: -11.918120384216309
    6. 'current' → logprob: -12.168120384216309
    7. ' length' → logprob: -12.793120384216309
    8. '_len' → logprob: -12.918120384216309
    9. 'n' → logprob: -13.043120384216309
    10. 'leng' → logprob: -13.168120384216309

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5780071020126343
    2. ' =' → logprob: -0.8280071020126343
    3. '=len' → logprob: -6.328007221221924
    4. '<|end|>' → logprob: -8.703006744384766
    5. ' ' → logprob: -9.578006744384766
    6. ')' → logprob: -10.703006744384766
    7. ',' → logprob: -11.828006744384766
    8. 'len' → logprob: -12.203006744384766
    9. '   ' → logprob: -12.953006744384766
    10. '  ' → logprob: -13.578006744384766

Token 460: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002613358374219388
    2. ' len' → logprob: -8.250261306762695
    3. '(len' → logprob: -18.000261306762695
    4. '   ' → logprob: -19.500261306762695
    5. 'length' → logprob: -19.875261306762695
    6. ' ' → logprob: -20.125261306762695
    7. '
' → logprob: -21.125261306762695
    8. '[len' → logprob: -21.125261306762695
    9. '=len' → logprob: -21.375261306762695
    10. '	len' → logprob: -22.500261306762695

Token 461: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -2.3557529857498594e-05
    2. 'data' → logprob: -11.25002384185791
    3. '(self' → logprob: -12.00002384185791
    4. '(' → logprob: -12.37502384185791
    5. '(
' → logprob: -17.125022888183594
    6. '```' → logprob: -18.500022888183594
    7. '=data' → logprob: -18.750022888183594
    8. '(dat' → logprob: -19.000022888183594
    9. ')data' → logprob: -19.000022888183594
    10. 'self' → logprob: -19.125022888183594

Token 462: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1928003813372925e-05
    2. '<|end|>' → logprob: -10.000051498413086
    3. ')
' → logprob: -12.500051498413086
    4. ' )' → logprob: -13.875051498413086
    5. '<|end|>' → logprob: -14.375051498413086
    6. '}' → logprob: -14.750051498413086
    7. '   ' → logprob: -15.750051498413086
    8. '),' → logprob: -15.875051498413086
    9. ' ' → logprob: -15.875051498413086
    10. ')return' → logprob: -16.500051498413086

Token 463: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12657755613327026
    2. 'def' → logprob: -3.501577615737915
    3. '    
' → logprob: -3.751577615737915
    4. '
' → logprob: -4.001577377319336
    5. ' def' → logprob: -4.001577377319336
    6. '```' → logprob: -4.376577377319336
    7. '<|end|>' → logprob: -4.626577377319336
    8. ' ' → logprob: -5.876577377319336
    9. ' 
' → logprob: -7.001577377319336
    10. '  
' → logprob: -7.501577377319336

Token 464: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01854882203042507
    2. ' def' → logprob: -4.018548965454102
    3. '   ' → logprob: -7.893548965454102
    4. '
' → logprob: -11.518548965454102
    5. '@property' → logprob: -11.893548965454102
    6. '    
' → logprob: -12.268548965454102
    7. '	def' → logprob: -13.643548965454102
    8. '```' → logprob: -13.893548965454102
    9. ' 
' → logprob: -14.643548965454102
    10. '@' → logprob: -14.893548965454102

Token 465: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.14107075333595276
    2. 'peek' → logprob: -2.89107084274292
    3. '_parse' → logprob: -3.51607084274292
    4. ' parse' → logprob: -4.39107084274292
    5. '_next' → logprob: -4.51607084274292
    6. 'next' → logprob: -5.14107084274292
    7. 'advance' → logprob: -5.26607084274292
    8. 'def' → logprob: -5.39107084274292
    9. '_current' → logprob: -6.01607084274292
    10. ' peek' → logprob: -6.64107084274292

Token 466: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015322498977184296
    2. '_component' → logprob: -4.640322685241699
    3. '_sequence' → logprob: -5.890322685241699
    4. '_' → logprob: -7.640322685241699
    5. '_expression' → logprob: -7.890322685241699
    6. '_com' → logprob: -8.0153226852417
    7. '(' → logprob: -8.0153226852417
    8. '()' → logprob: -8.1403226852417
    9. '_token' → logprob: -8.1403226852417
    10. '_literal' → logprob: -8.2653226852417

Token 467: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03320080041885376
    2. '):' → logprob: -3.658200740814209
    3. 'self' → logprob: -5.658200740814209
    4. '(self' → logprob: -6.533200740814209
    5. '_component' → logprob: -7.408200740814209
    6. '):
' → logprob: -7.533200740814209
    7. ')_' → logprob: -8.658201217651367
    8. '   ' → logprob: -9.033201217651367
    9. '_token' → logprob: -9.158201217651367
    10. ')->' → logprob: -9.158201217651367

Token 468: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.49127086997032166
    2. ' ->' → logprob: -0.991270899772644
    3. ':' → logprob: -4.116271018981934
    4. ')->' → logprob: -8.616271018981934
    5. '   ' → logprob: -8.741271018981934
    6. ')' → logprob: -8.866271018981934
    7. '->_' → logprob: -9.491271018981934
    8. '       ' → logprob: -10.366271018981934
    9. '(self' → logprob: -10.616271018981934
    10. 'self' → logprob: -10.866271018981934

Token 469: ' Genome' (ID: 168601)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.003756970865651965
    2. ' Genome' → logprob: -5.753756999969482
    3. 'Optional' → logprob: -7.878756999969482
    4. 'Union' → logprob: -8.628756523132324
    5. 'Literal' → logprob: -11.128756523132324
    6. 'Tuple' → logprob: -13.378756523132324
    7. 'List' → logprob: -13.503756523132324
    8. 'Gene' → logprob: -14.253756523132324
    9. 'Gen' → logprob: -14.253756523132324
    10. 'Genre' → logprob: -14.628756523132324

Token 470: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: 0.0
    2. '@Component' → logprob: -20.375
    3. 'Com' → logprob: -21.5
    4. '<Component' → logprob: -21.875
    5. 'Sequence' → logprob: -22.0
    6. '_component' → logprob: -22.25
    7. 'component' → logprob: -22.375
    8. '_COMPONENT' → logprob: -22.625
    9. '_Component' → logprob: -22.625
    10. '.Component' → logprob: -22.875

Token 471: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08509602397680283
    2. ':
' → logprob: -3.3350961208343506
    3. '():' → logprob: -3.5850961208343506
    4. '():
' → logprob: -4.0850958824157715
    5. '()' → logprob: -7.5850958824157715
    6. '(self' → logprob: -7.8350958824157715
    7. '   ' → logprob: -8.08509635925293
    8. '(' → logprob: -9.58509635925293
    9. '       ' → logprob: -10.33509635925293
    10. 'self' → logprob: -10.83509635925293

Token 472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021815462969243526
    2. 'return' → logprob: -6.627181529998779
    3. ' return' → logprob: -7.252181529998779
    4. ':' → logprob: -9.752182006835938
    5. ':
' → logprob: -10.127182006835938
    6. '
' → logprob: -10.752182006835938
    7. 'result' → logprob: -12.502182006835938
    8. 'self' → logprob: -12.752182006835938
    9. ':return' → logprob: -12.752182006835938
    10. '        
' → logprob: -12.752182006835938

Token 473: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11695239692926407
    2. ' return' → logprob: -2.616952419281006
    3. 'result' → logprob: -3.616952419281006
    4. 'component' → logprob: -4.741952419281006
    5. ' result' → logprob: -6.866952419281006
    6. ' component' → logprob: -8.116951942443848
    7. '       ' → logprob: -8.491951942443848
    8. 'components' → logprob: -9.116951942443848
    9. 'comp' → logprob: -9.866951942443848
    10. ' comp' → logprob: -10.741951942443848

Token 474: '       ' (ID: 309)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.5817501544952393
    2. 'self' → logprob: -1.5817501544952393
    3. 'return' → logprob: -2.4567501544952393
    4. 'result' → logprob: -2.5817501544952393
    5. '       ' → logprob: -3.2067501544952393
    6. 'comp' → logprob: -4.33174991607666
    7. ' component' → logprob: -4.83174991607666
    8. ' comp' → logprob: -5.83174991607666
    9. ' return' → logprob: -5.83174991607666
    10. ' result' → logprob: -5.95674991607666

Token 475: ' Parse' (ID: 26701)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03070928156375885
    2. 'self' → logprob: -4.530709266662598
    3. 'result' → logprob: -4.655709266662598
    4. 'component' → logprob: -4.780709266662598
    5. 'components' → logprob: -7.280709266662598
    6. ' return' → logprob: -7.280709266662598
    7. '       ' → logprob: -9.780709266662598
    8. 'root' → logprob: -10.530709266662598
    9. '   ' → logprob: -10.655709266662598
    10. 'Return' → logprob: -11.280709266662598

Token 476: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10132813453674316
    2. 'self' → logprob: -2.851328134536743
    3. 'return' → logprob: -3.851328134536743
    4. ' the' → logprob: -5.476327896118164
    5. '()
' → logprob: -5.726327896118164
    6. 'the' → logprob: -6.101327896118164
    7. ' self' → logprob: -6.601327896118164
    8. 'result' → logprob: -7.101327896118164
    9. 'def' → logprob: -7.226327896118164
    10. '   ' → logprob: -7.226327896118164

Token 477: ' entire' (ID: 6508)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.8101683259010315
    2. 'return' → logprob: -1.6851682662963867
    3. ' genome' → logprob: -1.8101682662963867
    4. 'result' → logprob: -2.1851682662963867
    5. 'ent' → logprob: -4.060168266296387
    6. 'gen' → logprob: -4.185168266296387
    7. 'sequence' → logprob: -4.810168266296387
    8. ' component' → logprob: -4.810168266296387
    9. 'whole' → logprob: -4.810168266296387
    10. 'components' → logprob: -4.810168266296387

Token 478: ' genome' (ID: 64778)
  Prédit: ' genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' genome' → logprob: -0.4829096794128418
    2. 'sequence' → logprob: -1.8579096794128418
    3. 'gen' → logprob: -2.607909679412842
    4. ' sequence' → logprob: -2.732909679412842
    5. 'data' → logprob: -3.732909679412842
    6. 'input' → logprob: -3.857909679412842
    7. 'expression' → logprob: -4.232909679412842
    8. ' input' → logprob: -4.482909679412842
    9. '_gen' → logprob: -5.357909679412842
    10. ' expression' → logprob: -5.732909679412842

Token 479: ' string' (ID: 1621)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.1986410915851593
    2. ' sequence' → logprob: -1.823641061782837
    3. '_sequence' → logprob: -4.448641300201416
    4. '()' → logprob: -5.323641300201416
    5. '
' → logprob: -7.198641300201416
    6. '   ' → logprob: -7.948641300201416
    7. '       ' → logprob: -8.823640823364258
    8. '()
' → logprob: -8.823640823364258
    9. ' and' → logprob: -8.948640823364258
    10. 'component' → logprob: -9.073640823364258

Token 480: ' into' (ID: 1511)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.36283186078071594
    2. '       ' → logprob: -1.3628318309783936
    3. 'and' → logprob: -4.237832069396973
    4. ' into' → logprob: -4.487832069396973
    5. '()' → logprob: -5.362832069396973
    6. ' to' → logprob: -5.362832069396973
    7. '
' → logprob: -5.612832069396973
    8. 'return' → logprob: -5.612832069396973
    9. ',' → logprob: -6.237832069396973
    10. '.' → logprob: -6.862832069396973

Token 481: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18214035034179688
    2. ' a' → logprob: -1.8071403503417969
    3. 'self' → logprob: -6.057140350341797
    4. 'return' → logprob: -11.057140350341797
    5. ' self' → logprob: -11.307140350341797
    6. 'the' → logprob: -12.057140350341797
    7. 'component' → logprob: -12.057140350341797
    8. 'Genome' → logprob: -12.182140350341797
    9. ' the' → logprob: -13.182140350341797
    10. ' one' → logprob: -13.557140350341797

Token 482: ' Genome' (ID: 168601)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.0020279695745557547
    2. ' Genome' → logprob: -6.252027988433838
    3. 'component' → logprob: -10.12702751159668
    4. 'return' → logprob: -10.75202751159668
    5. 'self' → logprob: -10.87702751159668
    6. 'Literal' → logprob: -12.00202751159668
    7. 'Gen' → logprob: -12.12702751159668
    8. 'Composite' → logprob: -13.62702751159668
    9. '
' → logprob: -13.62702751159668
    10. ' genome' → logprob: -13.87702751159668

Token 483: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: 0.0
    2. 'component' → logprob: -18.75
    3. '   ' → logprob: -19.25
    4. 'Components' → logprob: -19.75
    5. '@Component' → logprob: -19.75
    6. '
' → logprob: -20.875
    7. '       ' → logprob: -21.0
    8. 'Composite' → logprob: -21.125
    9. 'Com' → logprob: -21.25
    10. '_component' → logprob: -21.5

Token 484: ' hierarchy' (ID: 61537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43999120593070984
    2. '.' → logprob: -2.3149912357330322
    3. '()' → logprob: -2.8149912357330322
    4. '()
' → logprob: -3.0649912357330322
    5. ':' → logprob: -3.3149912357330322
    6. '   ' → logprob: -3.5649912357330322
    7. ':
' → logprob: -3.6899912357330322
    8. '
' → logprob: -3.8149912357330322
    9. '.
' → logprob: -3.8149912357330322
    10. ',' → logprob: -5.314990997314453

Token 485: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004812084604054689
    2. '.' → logprob: -5.629812240600586
    3. ',' → logprob: -7.879812240600586
    4. '.
' → logprob: -8.004812240600586
    5. '()' → logprob: -8.504812240600586
    6. ' that' → logprob: -9.629812240600586
    7. ':
' → logprob: -10.129812240600586
    8. '   ' → logprob: -10.254812240600586
    9. '()
' → logprob: -10.754812240600586
    10. 'return' → logprob: -11.004812240600586

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001843485952122137
    2. 'return' → logprob: -9.250184059143066
    3. ' return' → logprob: -9.625184059143066
    4. '        
' → logprob: -11.750184059143066
    5. '
' → logprob: -12.250184059143066
    6. '        ' → logprob: -13.000184059143066
    7. '   ' → logprob: -13.250184059143066
    8. '           ' → logprob: -13.375184059143066
    9. '      ' → logprob: -13.625184059143066
    10. '```' → logprob: -13.875184059143066

Token 487: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029832987114787102
    2. 'return' → logprob: -3.7798330783843994
    3. ' return' → logprob: -5.02983283996582
    4. '```' → logprob: -11.90483283996582
    5. '
' → logprob: -12.40483283996582
    6. 'self' → logprob: -12.65483283996582
    7. '      ' → logprob: -13.02983283996582
    8. '        
' → logprob: -13.15483283996582
    9. '   ' → logprob: -13.40483283996582
    10. '        ' → logprob: -13.52983283996582

Token 488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31478792428970337
    2. 'return' → logprob: -1.3147878646850586
    3. ' return' → logprob: -6.689787864685059
    4. 'result' → logprob: -8.439787864685059
    5. 'component' → logprob: -10.314787864685059
    6. '
' → logprob: -10.689787864685059
    7. 'components' → logprob: -12.314787864685059
    8. 'self' → logprob: -13.564787864685059
    9. '   ' → logprob: -13.689787864685059
    10. ' result' → logprob: -14.689787864685059

Token 489: ' components' (ID: 10674)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.017743179574608803
    2. 'result' → logprob: -4.267743110656738
    3. 'return' → logprob: -5.767743110656738
    4. 'comp' → logprob: -7.767743110656738
    5. 'components' (adapté à ' components') → logprob: -11.267743110656738
    6. 'node' → logprob: -11.767743110656738
    7. ' component' → logprob: -13.267743110656738
    8. 'self' → logprob: -14.892743110656738
    9. '   ' → logprob: -15.142743110656738
    10. 'root' → logprob: -15.892743110656738

Token 490: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3136351406574249
    2. ' =' → logprob: -1.3136351108551025
    3. ':' → logprob: -7.938635349273682
    4. '=[]
' → logprob: -11.438634872436523
    5. '=[]' → logprob: -12.563634872436523
    6. '   ' → logprob: -14.188634872436523
    7. 'return' → logprob: -14.563634872436523
    8. ',' → logprob: -14.938634872436523
    9. '=
' → logprob: -15.188634872436523
    10. 's' → logprob: -15.563634872436523

Token 491: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.002637130208313465
    2. ' List' → logprob: -6.002636909484863
    3. '[List' → logprob: -8.752636909484863
    4. '[]' → logprob: -13.627636909484863
    5. '	List' → logprob: -14.127636909484863
    6. '   ' → logprob: -14.127636909484863
    7. 'list' → logprob: -14.877636909484863
    8. '[' → logprob: -15.877636909484863
    9. ' ' → logprob: -15.877636909484863
    10. '=' → logprob: -17.62763786315918

Token 492: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00115617411211133
    2. ' =' → logprob: -7.126156330108643
    3. '[
' → logprob: -8.251155853271484
    4. '=' → logprob: -9.876155853271484
    5. ']' → logprob: -11.751155853271484
    6. '=[]' → logprob: -12.001155853271484
    7. '['' → logprob: -12.501155853271484
    8. '[self' → logprob: -12.626155853271484
    9. '[...]' → logprob: -12.751155853271484
    10. '=[
' → logprob: -13.251155853271484

Token 493: 'Genome' (ID: 184055)
  Prédit: 'Genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -3.7697225252486533e-06
    2. ' Genome' → logprob: -13.125003814697266
    3. 'Union' → logprob: -13.625003814697266
    4. '[' → logprob: -15.375003814697266
    5. 'Tuple' → logprob: -16.375003814697266
    6. 'Gen' → logprob: -17.125003814697266
    7. 'Genre' → logprob: -17.125003814697266
    8. 'Gene' → logprob: -17.750003814697266
    9. 'Grammar' → logprob: -17.875003814697266
    10. 'Optional' → logprob: -18.500003814697266

Token 494: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -1.981667537620524e-06
    2. ']' → logprob: -13.500001907348633
    3. '<Component' → logprob: -15.875001907348633
    4. '_component' → logprob: -16.250001907348633
    5. '@Component' → logprob: -16.500001907348633
    6. 'Components' → logprob: -16.500001907348633
    7. '_COMPONENT' → logprob: -16.625001907348633
    8. 'component' → logprob: -17.625001907348633
    9. '.Component' → logprob: -18.250001907348633
    10. ']=' → logprob: -18.250001907348633

Token 495: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00025311444187536836
    2. ']=' → logprob: -8.875252723693848
    3. ' ]' → logprob: -9.750252723693848
    4. '=' → logprob: -10.375252723693848
    5. ' =' → logprob: -10.875252723693848
    6. '[' → logprob: -12.250252723693848
    7. ')' → logprob: -16.875253677368164
    8. '"]' → logprob: -17.375253677368164
    9. '[]' → logprob: -17.375253677368164
    10. ' ' → logprob: -17.500253677368164

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326571106910706
    2. ' =' → logprob: -1.3132656812667847
    3. '=[]
' → logprob: -13.563265800476074
    4. '=[]' → logprob: -13.813265800476074
    5. '   ' → logprob: -14.063265800476074
    6. '[]' → logprob: -14.813265800476074
    7. '       ' → logprob: -15.688265800476074
    8. ' ' → logprob: -16.688264846801758
    9. ':' → logprob: -16.813264846801758
    10. ',' → logprob: -16.813264846801758

Token 497: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10034846514463425
    2. '[]
' → logprob: -2.350348472595215
    3. 'self' → logprob: -9.100348472595215
    4. '[self' → logprob: -11.100348472595215
    5. '[]

' → logprob: -11.350348472595215
    6. '[' → logprob: -12.725348472595215
    7. ' []' → logprob: -16.1003475189209
    8. '[])' → logprob: -16.2253475189209
    9. '[
' → logprob: -16.7253475189209
    10. ' []
' → logprob: -16.7253475189209

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7770727276802063
    2. 'while' → logprob: -0.7770727276802063
    3. ' while' → logprob: -2.5270726680755615
    4. '        
' → logprob: -8.52707290649414
    5. '	while' → logprob: -8.77707290649414
    6. '```' → logprob: -8.90207290649414
    7. '
' → logprob: -10.15207290649414
    8. 'token' → logprob: -10.52707290649414
    9. '   ' → logprob: -10.77707290649414
    10. 'While' → logprob: -11.90207290649414

Token 499: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -3.4121114822482923e-06
    2. ' while' → logprob: -13.375003814697266
    3. '       ' → logprob: -13.875003814697266
    4. '
' → logprob: -15.000003814697266
    5. 'wh' → logprob: -15.750003814697266
    6. 'component' → logprob: -15.750003814697266
    7. '        
' → logprob: -16.250003814697266
    8. '	while' → logprob: -16.375003814697266
    9. 'components' → logprob: -17.000003814697266
    10. 'While' → logprob: -17.125003814697266

Token 500: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005948706530034542
    2. ' self' → logprob: -5.130948543548584
    3. 'not' → logprob: -11.130949020385742
    4. ' not' → logprob: -13.005949020385742
    5. '	self' → logprob: -13.255949020385742
    6. '(self' → logprob: -14.255949020385742
    7. 'True' → logprob: -14.380949020385742
    8. '
' → logprob: -16.380949020385742
    9. '   ' → logprob: -16.630949020385742
    10. '_self' → logprob: -17.255949020385742

Token 501: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.9054008084349334e-05
    2. '.<' → logprob: -10.500039100646973
    3. '.' → logprob: -12.500039100646973
    4. 'self' → logprob: -13.375039100646973
    5. '_pos' → logprob: -13.875039100646973
    6. '.__' → logprob: -14.000039100646973
    7. '_self' → logprob: -14.125039100646973
    8. '.
' → logprob: -14.375039100646973
    9. '_current' → logprob: -14.500039100646973
    10. ' .' → logprob: -15.125039100646973

Token 502: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.9875325708417222e-05
    2. '_pos' → logprob: -10.875029563903809
    3. 'peek' → logprob: -12.625029563903809
    4. 'current' → logprob: -13.000029563903809
    5. 'skip' → logprob: -13.125029563903809
    6. 'parse' → logprob: -14.250029563903809
    7. 'position' → logprob: -14.375029563903809
    8. 'has' → logprob: -14.625029563903809
    9. 'data' → logprob: -14.875029563903809
    10. '.pos' → logprob: -15.500029563903809

Token 503: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018305746838450432
    2. '<' → logprob: -4.018305778503418
    3. ' ' → logprob: -9.518305778503418
    4. '<len' → logprob: -9.518305778503418
    5. '()<' → logprob: -13.518305778503418
    6. '[' → logprob: -13.518305778503418
    7. '<n' → logprob: -13.643305778503418
    8. '<size' → logprob: -14.268305778503418
    9. '<int' → logprob: -14.518305778503418
    10. ' <
' → logprob: -14.518305778503418

Token 504: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011724866926670074
    2. ' self' → logprob: -6.7511725425720215
    3. 'len' → logprob: -13.001172065734863
    4. ' len' → logprob: -17.37617301940918
    5. '       ' → logprob: -17.75117301940918
    6. '
' → logprob: -17.87617301940918
    7. '=self' → logprob: -19.25117301940918
    8. '	self' → logprob: -19.25117301940918
    9. '_self' → logprob: -19.37617301940918
    10. '           ' → logprob: -20.25117301940918

Token 505: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0005443345289677382
    2. '_length' → logprob: -8.000544548034668
    3. '_len' → logprob: -8.875544548034668
    4. '.' → logprob: -10.250544548034668
    5. ' .' → logprob: -11.500544548034668
    6. '.length' → logprob: -12.125544548034668
    7. '   ' → logprob: -12.750544548034668
    8. 'len' → logprob: -12.875544548034668
    9. '
' → logprob: -13.000544548034668
    10. '.len' → logprob: -13.500544548034668

Token 506: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -8.77627644513268e-06
    2. '_length' → logprob: -12.250008583068848
    3. 'len' → logprob: -13.500008583068848
    4. 'ength' → logprob: -13.750008583068848
    5. ' length' → logprob: -14.250008583068848
    6. 'pos' → logprob: -15.375008583068848
    7. 'leng' → logprob: -15.375008583068848
    8. 'data' → logprob: -16.625009536743164
    9. '	length' → logprob: -16.875009536743164
    10. 'position' → logprob: -17.000009536743164

Token 507: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5324656963348389
    2. ':
' → logprob: -1.1574656963348389
    3. ':' → logprob: -2.407465696334839
    4. 'and' → logprob: -4.782465934753418
    5. '           ' → logprob: -10.157465934753418
    6. '       ' → logprob: -10.657465934753418
    7. ':

' → logprob: -11.032465934753418
    8. '):
' → logprob: -11.282465934753418
    9. '   ' → logprob: -11.532465934753418
    10. '():
' → logprob: -11.532465934753418

Token 508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20262376964092255
    2. 'component' → logprob: -1.952623724937439
    3. ' component' → logprob: -3.4526238441467285
    4. 'token' → logprob: -5.2026238441467285
    5. ' if' → logprob: -6.2026238441467285
    6. 'if' → logprob: -7.4526238441467285
    7. 'c' → logprob: -7.5776238441467285
    8. 'comp' → logprob: -8.45262336730957
    9. ' token' → logprob: -8.57762336730957
    10. 'char' → logprob: -8.70262336730957

Token 509: ' comp' (ID: 1050)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.20849309861660004
    2. 'comp' (adapté à ' comp') → logprob: -1.7084931135177612
    3. '           ' → logprob: -5.708493232727051
    4. 'token' → logprob: -6.458493232727051
    5. 'components' → logprob: -6.708493232727051
    6. 'c' → logprob: -7.708493232727051
    7. 'char' → logprob: -8.08349323272705
    8. 'if' → logprob: -9.45849323272705
    9. ' component' → logprob: -10.45849323272705
    10. ' comp' → logprob: -10.58349323272705

Token 510: ' =' (ID: 314)
  Prédit: 'onent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -0.044595081359148026
    2. ' =' → logprob: -3.2945950031280518
    3. '=' → logprob: -5.044595241546631
    4. 'on' → logprob: -9.669594764709473
    5. 'ONENT' → logprob: -11.044594764709473
    6. 'ponent' → logprob: -12.919594764709473
    7. 'ont' → logprob: -13.169594764709473
    8. 'ent' → logprob: -13.169594764709473
    9. '   ' → logprob: -14.669594764709473
    10. ' ' → logprob: -14.794594764709473

Token 511: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033760786755010486
    2. ' self' → logprob: -8.000337600708008
    3. '
' → logprob: -13.750337600708008
    4. '   ' → logprob: -15.000337600708008
    5. '_self' → logprob: -15.625337600708008
    6. '(self' → logprob: -15.875337600708008
    7. '=self' → logprob: -16.500337600708008
    8. 's' → logprob: -16.625337600708008
    9. '       ' → logprob: -17.000337600708008
    10. 'Self' → logprob: -17.375337600708008

Token 512: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00528427679091692
    2. '.parse' → logprob: -5.255284309387207
    3. 'parse' → logprob: -10.630284309387207
    4. '_parse' → logprob: -10.630284309387207
    5. '.next' → logprob: -13.880284309387207
    6. '.' → logprob: -15.005284309387207
    7. '.Parse' → logprob: -15.880284309387207
    8. '   ' → logprob: -15.880284309387207
    9. '.consume' → logprob: -16.63028335571289
    10. '```' → logprob: -16.63028335571289

Token 513: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -7.958325295476243e-05
    2. 'next' → logprob: -9.625079154968262
    3. '_parse' → logprob: -11.625079154968262
    4. 'consume' → logprob: -13.750079154968262
    5. 'read' → logprob: -13.875079154968262
    6. ' parse' → logprob: -14.125079154968262
    7. 'try' → logprob: -15.000079154968262
    8. '.parse' → logprob: -15.125079154968262
    9. 'component' → logprob: -15.375079154968262
    10. '_next' → logprob: -15.625079154968262

Token 514: '_element' (ID: 21131)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.4746200144290924
    2. '_component' → logprob: -0.97461998462677
    3. '_element' → logprob: -8.59961986541748
    4. 'element' → logprob: -9.47461986541748
    5. '_sequence' → logprob: -9.97461986541748
    6. '_term' → logprob: -9.97461986541748
    7. '_expression' → logprob: -10.09961986541748
    8. 'sequence' → logprob: -10.34961986541748
    9. 'term' → logprob: -10.72461986541748
    10. '_next' → logprob: -10.84961986541748

Token 515: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029757322743535042
    2. '()
' → logprob: -3.529757261276245
    3. '()
' → logprob: -12.029757499694824
    4. '()

' → logprob: -14.654757499694824
    5. '()`' → logprob: -15.029757499694824
    6. '()\' → logprob: -17.029756546020508
    7. '();' → logprob: -17.279756546020508
    8. '()"' → logprob: -17.279756546020508
    9. ' ()' → logprob: -17.904756546020508
    10. '())' → logprob: -18.654756546020508

Token 516: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016349162615370005
    2. '
' → logprob: -10.000163078308105
    3. '            
' → logprob: -10.250163078308105
    4. '[' → logprob: -10.500163078308105
    5. ' if' → logprob: -11.625163078308105
    6. '()
' → logprob: -12.125163078308105
    7. 'if' → logprob: -12.250163078308105
    8. '<|end|>' → logprob: -12.250163078308105
    9. '.' → logprob: -12.375163078308105
    10. '       ' → logprob: -12.625163078308105

Token 517: ' if' (ID: 538)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.13422755897045135
    2. 'if' (adapté à ' if') → logprob: -2.2592275142669678
    3. ' if' → logprob: -4.259227752685547
    4. ' components' → logprob: -5.259227752685547
    5. '           ' → logprob: -6.384227752685547
    6. '
' → logprob: -9.384227752685547
    7. '       ' → logprob: -10.634227752685547
    8. '.components' → logprob: -10.884227752685547
    9. '            
' → logprob: -11.259227752685547
    10. '   ' → logprob: -11.759227752685547

Token 518: ' comp' (ID: 1050)
  Prédit: ' comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.3868757486343384
    2. 'comp' → logprob: -1.1368757486343384
    3. '	comp' → logprob: -12.761876106262207
    4. ' not' → logprob: -14.136876106262207
    5. 'not' → logprob: -14.136876106262207
    6. 'com' → logprob: -16.01187515258789
    7. ' ' → logprob: -16.01187515258789
    8. '   ' → logprob: -16.88687515258789
    9. '(comp' → logprob: -17.88687515258789
    10. 'compl' → logprob: -18.13687515258789

Token 519: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0028061794582754374
    2. 'is' → logprob: -5.877806186676025
    3. ':' → logprob: -14.502805709838867
    4. '	is' → logprob: -15.002805709838867
    5. ' ' → logprob: -16.002805709838867
    6. '<|end|>' → logprob: -16.002805709838867
    7. ')' → logprob: -16.252805709838867
    8. ')is' → logprob: -17.002805709838867
    9. ':
' → logprob: -17.127805709838867
    10. '[' → logprob: -17.252805709838867

Token 520: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004154975991696119
    2. ' None' → logprob: -5.504155158996582
    3. 'not' → logprob: -9.504155158996582
    4. ' not' → logprob: -13.129155158996582
    5. 'none' → logprob: -17.504154205322266
    6. '   ' → logprob: -17.504154205322266
    7. '_None' → logprob: -17.629154205322266
    8. 'Not' → logprob: -18.129154205322266
    9. '(None' → logprob: -18.254154205322266
    10. '=None' → logprob: -19.004154205322266

Token 521: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.547789674485102e-05
    2. ' None' → logprob: -10.250035285949707
    3. 'not' → logprob: -17.125036239624023
    4. 'none' → logprob: -19.125036239624023
    5. '_None' → logprob: -19.500036239624023
    6. '   ' → logprob: -20.750036239624023
    7. '
' → logprob: -21.125036239624023
    8. '(None' → logprob: -21.500036239624023
    9. 'Not' → logprob: -22.125036239624023
    10. '_none' → logprob: -22.250036239624023

Token 522: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5922343730926514
    2. ':
' → logprob: -0.8422343730926514
    3. '           ' → logprob: -4.8422346115112305
    4. '               ' → logprob: -4.8422346115112305
    5. '):
' → logprob: -9.21723461151123
    6. ' and' → logprob: -9.71723461151123
    7. '.' → logprob: -10.46723461151123
    8. ',' → logprob: -10.46723461151123
    9. ':
' → logprob: -10.59223461151123
    10. '       ' → logprob: -11.09223461151123

Token 523: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00067966926144436
    2. 'components' → logprob: -7.7506794929504395
    3. ' components' → logprob: -8.875679969787598
    4. '           ' → logprob: -9.500679969787598
    5. '                
' → logprob: -11.250679969787598
    6. '                   ' → logprob: -12.250679969787598
    7. '	           ' → logprob: -12.375679969787598
    8. '.components' → logprob: -12.625679969787598
    9. '<|end|>' → logprob: -13.500679969787598
    10. '```' → logprob: -13.625679969787598

Token 524: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' (adapté à ' components') → logprob: -0.2826993465423584
    2. ' components' → logprob: -1.4076993465423584
    3. '               ' → logprob: -6.7826995849609375
    4. '           ' → logprob: -8.032699584960938
    5. '.components' → logprob: -10.032699584960938
    6. '                   ' → logprob: -10.407699584960938
    7. '   ' → logprob: -11.907699584960938
    8. '
' → logprob: -13.032699584960938
    9. '_components' → logprob: -13.532699584960938
    10. '                ' → logprob: -13.907699584960938

Token 525: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005237429868429899
    2. '.' → logprob: -5.255237579345703
    3. '.app' → logprob: -13.380237579345703
    4. ' .' → logprob: -13.755237579345703
    5. 'append' → logprob: -14.755237579345703
    6. '.extend' → logprob: -15.130237579345703
    7. '.add' → logprob: -16.505237579345703
    8. '.ap' → logprob: -16.630237579345703
    9. '.
' → logprob: -17.005237579345703
    10. '.Append' → logprob: -17.130237579345703

Token 526: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -1.3782830137643032e-05
    2. 'comp' → logprob: -11.75001335144043
    3. '(' → logprob: -12.25001335144043
    4. '(
' → logprob: -13.87501335144043
    5. '(com' → logprob: -16.62501335144043
    6. ' comp' → logprob: -17.50001335144043
    7. '	comp' → logprob: -18.50001335144043
    8. '(component' → logprob: -19.37501335144043
    9. ' (' → logprob: -19.87501335144043
    10. '(c' → logprob: -20.75001335144043

Token 527: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13646787405014038
    2. ')' → logprob: -2.136467933654785
    3. ')
' → logprob: -4.886467933654785
    4. '            
' → logprob: -7.261467933654785
    5. '
' → logprob: -7.511467933654785
    6. 'else' → logprob: -8.886467933654785
    7. ' else' → logprob: -9.386467933654785
    8. '            ' → logprob: -9.761467933654785
    9. '<|end|>' → logprob: -9.761467933654785
    10. '):
' → logprob: -9.886467933654785

Token 528: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002169294049963355
    2. '
' → logprob: -6.752169132232666
    3. 'else' → logprob: -8.002169609069824
    4. 'return' → logprob: -8.252169609069824
    5. ' else' → logprob: -8.752169609069824
    6. '       ' → logprob: -9.127169609069824
    7. '            
' → logprob: -10.127169609069824
    8. '               ' → logprob: -10.502169609069824
    9. '            ' → logprob: -11.127169609069824
    10. ' return' → logprob: -11.377169609069824

Token 529: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -1.0970396995544434
    2. '       ' → logprob: -1.2220396995544434
    3. '           ' → logprob: -1.4720396995544434
    4. ' else' → logprob: -2.0970396995544434
    5. 'return' → logprob: -4.222039699554443
    6. '
' → logprob: -5.722039699554443
    7. 'self' → logprob: -7.347039699554443
    8. 'elif' → logprob: -8.222040176391602
    9. ' return' → logprob: -9.097040176391602
    10. '	else' → logprob: -9.972040176391602

Token 530: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15404023230075836
    2. ':' → logprob: -2.7790403366088867
    3. '           ' → logprob: -2.7790403366088867
    4. ':
' → logprob: -4.154040336608887
    5. 'break' → logprob: -7.279040336608887
    6. '       ' → logprob: -7.654040336608887
    7. '                   ' → logprob: -8.029040336608887
    8. '              ' → logprob: -8.154040336608887
    9. '            ' → logprob: -8.404040336608887
    10. ',' → logprob: -8.654040336608887

Token 531: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007398230955004692
    2. 'break' → logprob: -7.375740051269531
    3. ' break' → logprob: -10.000740051269531
    4. '           ' → logprob: -10.000740051269531
    5. '                   ' → logprob: -11.625740051269531
    6. '	break' → logprob: -12.125740051269531
    7. '	           ' → logprob: -12.625740051269531
    8. '       ' → logprob: -13.750740051269531
    9. '   ' → logprob: -14.125740051269531
    10. '              ' → logprob: -14.125740051269531

Token 532: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0060637714341282845
    2. ' break' → logprob: -5.256063938140869
    3. '               ' → logprob: -7.256063938140869
    4. '           ' → logprob: -9.131063461303711
    5. 'raise' → logprob: -11.506063461303711
    6. '	break' → logprob: -12.631063461303711
    7. '                   ' → logprob: -14.006063461303711
    8. '   ' → logprob: -14.131063461303711
    9. '_break' → logprob: -15.381063461303711
    10. '
' → logprob: -15.631063461303711

Token 533: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08175674080848694
    2. '
' → logprob: -3.206756830215454
    3. '        
' → logprob: -4.081756591796875
    4. ' return' → logprob: -4.581756591796875
    5. 'return' → logprob: -5.331756591796875
    6. '           ' → logprob: -6.456756591796875
    7. '        ' → logprob: -6.831756591796875
    8. '<|end|>' → logprob: -6.956756591796875
    9. '            
' → logprob: -7.331756591796875
    10. '    
' → logprob: -7.956756591796875

Token 534: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6663222908973694
    2. '       ' → logprob: -0.7913222908973694
    3. '        
' → logprob: -3.9163222312927246
    4. '           ' → logprob: -4.791322231292725
    5. '
' → logprob: -6.291322231292725
    6. ' return' → logprob: -7.041322231292725
    7. 'return' → logprob: -7.041322231292725
    8. '            
' → logprob: -7.791322231292725
    9. '    
' → logprob: -8.541322708129883
    10. '<|end|>' → logprob: -8.791322708129883

Token 535: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5499900579452515
    2. '
' → logprob: -1.1749900579452515
    3. '       ' → logprob: -2.674990177154541
    4. 'if' (adapté à ' if') → logprob: -3.174990177154541
    5. ' return' → logprob: -6.424990177154541
    6. '        
' → logprob: -6.924990177154541
    7. 'return' → logprob: -7.299990177154541
    8. ' 
' → logprob: -9.049989700317383
    9. '    
' → logprob: -11.049989700317383
    10. '  
' → logprob: -11.049989700317383

Token 536: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5765479803085327
    2. 'len' → logprob: -0.8265479803085327
    3. ' not' → logprob: -7.576548099517822
    4. 'not' → logprob: -9.326547622680664
    5. 'components' → logprob: -13.201547622680664
    6. '   ' → logprob: -13.576547622680664
    7. ' ' → logprob: -13.701547622680664
    8. '	len' → logprob: -13.951547622680664
    9. ' components' → logprob: -14.076547622680664
    10. '
' → logprob: -14.701547622680664

Token 537: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. 'components' → logprob: -13.625000953674316
    3. '(
' → logprob: -16.625001907348633
    4. ' (' → logprob: -17.750001907348633
    5. ' components' → logprob: -18.125001907348633
    6. '(com' → logprob: -18.750001907348633
    7. '(component' → logprob: -20.125001907348633
    8. '(comp' → logprob: -20.375001907348633
    9. '(parts' → logprob: -21.375001907348633
    10. '(

' → logprob: -21.375001907348633

Token 538: 'components' (ID: 8395)
  Prédit: 'components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.38687703013420105
    2. '(' → logprob: -1.1368770599365234
    3. ' components' → logprob: -12.136877059936523
    4. '[' → logprob: -15.261877059936523
    5. 'Components' → logprob: -15.636877059936523
    6. '.components' → logprob: -15.636877059936523
    7. '_components' → logprob: -17.261877059936523
    8. '```' → logprob: -18.011877059936523
    9. ')' → logprob: -18.136877059936523
    10. '/components' → logprob: -18.261877059936523

Token 539: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2527286410331726
    2. '==' → logprob: -1.5027287006378174
    3. ')' → logprob: -7.877728462219238
    4. '>' → logprob: -8.502728462219238
    5. ' >' → logprob: -9.252728462219238
    6. '=' → logprob: -9.877728462219238
    7. ')==' → logprob: -10.377728462219238
    8. '()==' → logprob: -10.877728462219238
    9. '()' → logprob: -11.377728462219238
    10. ' =' → logprob: -12.752728462219238

Token 540: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02987128682434559
    2. ' ==' → logprob: -3.5298712253570557
    3. '=' → logprob: -9.529870986938477
    4. '()==' → logprob: -10.529870986938477
    5. '==
' → logprob: -12.029870986938477
    6. '()' → logprob: -12.154870986938477
    7. ')==' → logprob: -12.654870986938477
    8. ')' → logprob: -13.029870986938477
    9. '===' → logprob: -13.279870986938477
    10. '>' → logprob: -13.529870986938477

Token 541: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.955703818472102e-05
    2. '0' → logprob: -9.875059127807617
    3. ' ' → logprob: -11.750059127807617
    4. '   ' → logprob: -15.750059127807617
    5. '
' → logprob: -18.500059127807617
    6. '  ' → logprob: -19.125059127807617
    7. '```' → logprob: -19.250059127807617
    8. '۱' → logprob: -19.750059127807617
    9. '=' → logprob: -20.000059127807617
    10. '１' → logprob: -20.125059127807617

Token 542: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003820524725597352
    2. '0' → logprob: -7.875381946563721
    3. ' ' → logprob: -13.250382423400879
    4. '   ' → logprob: -16.625381469726562
    5. '۱' → logprob: -17.000381469726562
    6. '
' → logprob: -17.125381469726562
    7. '```' → logprob: -17.750381469726562
    8. '１' → logprob: -18.375381469726562
    9. '=' → logprob: -18.500381469726562
    10. '१' → logprob: -19.000381469726562

Token 543: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.043378688395023346
    2. ':' → logprob: -3.2933785915374756
    3. ':return' → logprob: -5.418378829956055
    4. 'return' → logprob: -8.668378829956055
    5. '[' → logprob: -8.793378829956055
    6. '           ' → logprob: -9.043378829956055
    7. ')' → logprob: -9.168378829956055
    8. '       ' → logprob: -9.293378829956055
    9. '):
' → logprob: -9.918378829956055
    10. '   ' → logprob: -10.043378829956055

Token 544: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4634073078632355
    2. ':
' → logprob: -1.338407278060913
    3. ':' → logprob: -2.963407278060913
    4. 'return' → logprob: -3.838407278060913
    5. ':return' → logprob: -4.213407516479492
    6. ' return' → logprob: -4.588407516479492
    7. '       ' → logprob: -4.963407516479492
    8. '[' → logprob: -5.963407516479492
    9. '               ' → logprob: -8.588407516479492
    10. '   ' → logprob: -9.088407516479492

Token 545: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13097511231899261
    2. ' return' → logprob: -2.1309750080108643
    3. '           ' → logprob: -5.630975246429443
    4. '       ' → logprob: -8.380974769592285
    5. '
' → logprob: -8.630974769592285
    6. '	return' → logprob: -10.880974769592285
    7. ':return' → logprob: -11.505974769592285
    8. '               ' → logprob: -12.130974769592285
    9. '{return' → logprob: -12.505974769592285
    10. ')return' → logprob: -13.005974769592285

Token 546: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.0024756586644798517
    2. ' components' → logprob: -6.002475738525391
    3. 'component' → logprob: -19.62747573852539
    4. '.components' → logprob: -19.75247573852539
    5. '   ' → logprob: -21.00247573852539
    6. '
' → logprob: -22.00247573852539
    7. 'comp' → logprob: -22.00247573852539
    8. '/components' → logprob: -23.00247573852539
    9. 'Components' → logprob: -23.12747573852539
    10. '	' → logprob: -23.12747573852539

Token 547: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.141186450899113e-05
    2. '0' → logprob: -10.875020980834961
    3. '
' → logprob: -13.375020980834961
    4. '[
' → logprob: -14.125020980834961
    5. '```' → logprob: -16.75002098083496
    6. 's' → logprob: -16.87502098083496
    7. ' [' → logprob: -18.00002098083496
    8. '   ' → logprob: -18.50002098083496
    9. '][' → logprob: -18.75002098083496
    10. ' ' → logprob: -19.50002098083496

Token 548: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.875000953674316
    3. '-' → logprob: -15.625000953674316
    4. '[' → logprob: -16.25
    5. '
' → logprob: -16.25
    6. '   ' → logprob: -17.125
    7. '```' → logprob: -18.375
    8. ']' → logprob: -19.3125
    9. '00' → logprob: -19.625
    10. '1' → logprob: -20.0625

Token 549: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0022709369659424
    2. '
' → logprob: -1.0022709369659424
    3. ')' → logprob: -1.6272709369659424
    4. '<|end|>' → logprob: -3.6272709369659424
    5. ']
' → logprob: -3.8772709369659424
    6. ')
' → logprob: -4.377270698547363
    7. '}' → logprob: -5.377270698547363
    8. '       ' → logprob: -6.252270698547363
    9. 'else' → logprob: -6.627270698547363
    10. '}
' → logprob: -7.127270698547363

Token 550: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006914764177054167
    2. '
' → logprob: -5.6319146156311035
    3. '        
' → logprob: -6.6319146156311035
    4. 'return' → logprob: -7.2569146156311035
    5. '   ' → logprob: -7.6319146156311035
    6. '    
' → logprob: -8.131915092468262
    7. 'else' → logprob: -9.131915092468262
    8. '<|end|>' → logprob: -9.756915092468262
    9. ' return' → logprob: -9.881915092468262
    10. ' else' → logprob: -9.881915092468262

Token 551: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12662912905216217
    2. '       ' → logprob: -2.501629114151001
    3. ' return' → logprob: -4.25162935256958
    4. 'else' (adapté à ' else') → logprob: -4.37662935256958
    5. '
' → logprob: -5.25162935256958
    6. 'from' → logprob: -6.12662935256958
    7. ' else' → logprob: -6.62662935256958
    8. '   ' → logprob: -7.12662935256958
    9. '        
' → logprob: -8.126628875732422
    10. 'elif' → logprob: -9.751628875732422

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2521377503871918
    2. ':
' → logprob: -1.5021377801895142
    3. ':return' → logprob: -9.252138137817383
    4. ',' → logprob: -10.252138137817383
    5. ' :' → logprob: -10.877138137817383
    6. '       ' → logprob: -11.127138137817383
    7. ':
' → logprob: -11.377138137817383
    8. ':

' → logprob: -11.752138137817383
    9. '[' → logprob: -11.877138137817383
    10. ' :
' → logprob: -12.252138137817383

Token 553: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7129620909690857
    2. '       ' → logprob: -0.8379620909690857
    3. ' return' → logprob: -2.5879621505737305
    4. '           ' → logprob: -6.2129621505737305
    5. 'from' → logprob: -11.58796215057373
    6. '	return' → logprob: -11.71296215057373
    7. '{return' → logprob: -12.46296215057373
    8. '        ' → logprob: -12.96296215057373
    9. ')return' → logprob: -12.96296215057373
    10. ':return' → logprob: -12.96296215057373

Token 554: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0016300749266520143
    2. ' return' → logprob: -6.5016303062438965
    3. 'from' → logprob: -9.001629829406738
    4. '#' (adapté à ' #') → logprob: -13.626629829406738
    5. '   ' → logprob: -13.751629829406738
    6. '           ' → logprob: -13.876629829406738
    7. '
' → logprob: -14.626629829406738
    8. '       ' → logprob: -14.751629829406738
    9. 'Literal' → logprob: -15.626629829406738
    10. ' from' → logprob: -16.251630783081055

Token 555: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0014783211518079042
    2. 'from' → logprob: -6.62647819519043
    3. ' return' → logprob: -9.25147819519043
    4. 'class' → logprob: -10.87647819519043
    5. '#' → logprob: -11.25147819519043
    6. 'combined' → logprob: -11.75147819519043
    7. 'com' → logprob: -12.37647819519043
    8. '   ' → logprob: -12.37647819519043
    9. 'Literal' → logprob: -12.75147819519043
    10. 'literal' → logprob: -13.50147819519043

Token 556: ' multiple' (ID: 7598)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.2362237274646759
    2. 'components' → logprob: -2.1112236976623535
    3. 'len' → logprob: -2.8612236976623535
    4. ' Literal' → logprob: -4.3612236976623535
    5. ' len' → logprob: -4.4862236976623535
    6. ' components' → logprob: -6.1112236976623535
    7. 'self' → logprob: -6.2362236976623535
    8. 'Re' → logprob: -6.4862236976623535
    9. ' isinstance' → logprob: -7.1112236976623535
    10. 'Composite' → logprob: -7.3612236976623535

Token 557: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.3402298390865326
    2. 'return' → logprob: -2.3402297496795654
    3. '_literal' → logprob: -2.7152297496795654
    4. ' components' → logprob: -3.2152297496795654
    5. 'Literal' → logprob: -3.3402297496795654
    6. ' return' → logprob: -4.0902299880981445
    7. 'from' → logprob: -4.5902299880981445
    8. '_literals' → logprob: -5.2152299880981445
    9. '_components' → logprob: -5.4652299880981445
    10. 'comp' → logprob: -5.7152299880981445

Token 558: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2061729431152344
    2. ',' → logprob: -1.4561729431152344
    3. ' are' → logprob: -1.5811729431152344
    4. ':' → logprob: -1.8311729431152344
    5. ' return' → logprob: -3.3311729431152344
    6. 'are' → logprob: -3.3311729431152344
    7. ':return' → logprob: -5.081172943115234
    8. ')' → logprob: -5.331172943115234
    9. 'components' → logprob: -5.956172943115234
    10. '=' → logprob: -6.081172943115234

Token 559: ' unify' (ID: 192300)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008440467528998852
    2. ' return' → logprob: -5.3834404945373535
    3. 'from' → logprob: -5.6334404945373535
    4. '           ' → logprob: -8.633440017700195
    5. '#' → logprob: -10.508440017700195
    6. ' from' → logprob: -11.383440017700195
    7. '       ' → logprob: -12.258440017700195
    8. '   ' → logprob: -12.883440017700195
    9. '
' → logprob: -13.008440017700195
    10. 'class' → logprob: -13.008440017700195

Token 560: ' them' (ID: 1373)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22221559286117554
    2. ' return' → logprob: -1.8472156524658203
    3. 'components' → logprob: -3.7222156524658203
    4. ' into' → logprob: -4.34721565246582
    5. ' components' → logprob: -6.34721565246582
    6. '           ' → logprob: -6.72221565246582
    7. '(
' → logprob: -8.47221565246582
    8. '
' → logprob: -8.84721565246582
    9. ')' → logprob: -8.97221565246582
    10. ' them' → logprob: -9.22221565246582

Token 561: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1364946365356445
    2. ' into' → logprob: -1.1364946365356445
    3. ' =' → logprob: -1.2614946365356445
    4. 'return' → logprob: -4.1364946365356445
    5. 'into' → logprob: -4.1364946365356445
    6. ',' → logprob: -4.5114946365356445
    7. ' as' → logprob: -4.7614946365356445
    8. '           ' → logprob: -5.2614946365356445
    9. ' in' → logprob: -5.7614946365356445
    10. ' return' → logprob: -6.0114946365356445

Token 562: ' a' (ID: 261)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.4784776270389557
    2. 'Re' → logprob: -0.9784775972366333
    3. 'Conc' → logprob: -5.978477478027344
    4. 'a' → logprob: -6.853477478027344
    5. 'Concat' → logprob: -8.228477478027344
    6. 'Sequence' → logprob: -8.478477478027344
    7. 'self' → logprob: -8.853477478027344
    8. 'Composite' → logprob: -8.978477478027344
    9. ' Re' → logprob: -10.853477478027344
    10. ' Literal' → logprob: -11.353477478027344

Token 563: ' single' (ID: 4590)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.03190070018172264
    2. 'Re' → logprob: -3.531900644302368
    3. 'Conc' → logprob: -6.531900882720947
    4. 'Sequence' → logprob: -8.031900405883789
    5. 'Composite' → logprob: -8.406900405883789
    6. 'Concat' → logprob: -9.656900405883789
    7. ' Literal' → logprob: -10.781900405883789
    8. '_literal' → logprob: -11.156900405883789
    9. 'self' → logprob: -11.656900405883789
    10. 'Repeated' → logprob: -11.906900405883789

Token 564: ' literal' (ID: 41271)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.0015865087043493986
    2. 'Re' → logprob: -6.501586437225342
    3. ' Literal' → logprob: -9.8765869140625
    4. 'Composite' → logprob: -11.2515869140625
    5. '_literal' → logprob: -12.1265869140625
    6. 'Sequence' → logprob: -12.5015869140625
    7. 'literal' → logprob: -12.8765869140625
    8. 'self' → logprob: -13.0015869140625
    9. 'Conc' → logprob: -13.3765869140625
    10. 'class' → logprob: -14.2515869140625

Token 565: ' sequence' (ID: 16281)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2845548689365387
    2. 'Literal' → logprob: -2.034554958343506
    3. ' return' → logprob: -2.534554958343506
    4. 'sequence' → logprob: -4.534554958343506
    5. 'component' → logprob: -5.659554958343506
    6. '       ' → logprob: -5.659554958343506
    7. ',' → logprob: -5.909554958343506
    8. '(' → logprob: -6.034554958343506
    9. '_literal' → logprob: -6.159554958343506
    10. '           ' → logprob: -6.534554958343506

Token 566: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6737229228019714
    2. '       ' → logprob: -1.6737229824066162
    3. ' return' → logprob: -1.7987229824066162
    4. 'Literal' → logprob: -2.673722982406616
    5. '           ' → logprob: -3.298722982406616
    6. '
' → logprob: -4.048722743988037
    7. ',' → logprob: -4.923722743988037
    8. ' Literal' → logprob: -6.298722743988037
    9. '_literal' → logprob: -6.923722743988037
    10. '[' → logprob: -7.923722743988037

Token 567: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3893905580043793
    2. 'return' → logprob: -1.8893905878067017
    3. ' return' → logprob: -2.389390468597412
    4. '           ' → logprob: -3.014390468597412
    5. ',' → logprob: -4.139390468597412
    6. 'Literal' → logprob: -5.389390468597412
    7. ':' → logprob: -6.264390468597412
    8. '
' → logprob: -6.389390468597412
    9. ':
' → logprob: -7.014390468597412
    10. '[' → logprob: -7.014390468597412

Token 568: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.022929904982447624
    2. 'sequence' → logprob: -4.397929668426514
    3. 'combined' → logprob: -5.022929668426514
    4. 'literal' → logprob: -6.897929668426514
    5. ' return' → logprob: -7.022929668426514
    6. 'joined' → logprob: -7.272929668426514
    7. 'seq' → logprob: -7.772929668426514
    8. 'merged' → logprob: -8.147930145263672
    9. 'all' → logprob: -9.772930145263672
    10. 'Literal' → logprob: -9.897930145263672

Token 569: ' or' (ID: 503)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09763075411319733
    2. 'sequence' → logprob: -2.597630739212036
    3. 'combined' → logprob: -4.722630977630615
    4. ' return' → logprob: -4.972630977630615
    5. 'literal' → logprob: -7.472630977630615
    6. ' sequences' → logprob: -7.847630977630615
    7. 'joined' → logprob: -7.972630977630615
    8. 'seq' → logprob: -8.222630500793457
    9. 'merged' → logprob: -8.347630500793457
    10. 'se' → logprob: -8.472630500793457

Token 570: ' a' (ID: 261)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.5007720589637756
    2. 'return' → logprob: -2.125771999359131
    3. 'self' → logprob: -2.250771999359131
    4. 'Re' → logprob: -3.000771999359131
    5. 'conc' → logprob: -3.500771999359131
    6. 'Genome' → logprob: -4.250771999359131
    7. 'raise' → logprob: -4.500771999359131
    8. '#' → logprob: -4.625771999359131
    9. ' Literal' → logprob: -4.875771999359131
    10. 'combine' → logprob: -5.125771999359131

Token 571: ' compound' (ID: 36762)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.49158719182014465
    2. 'Re' → logprob: -2.1165871620178223
    3. 'Composite' → logprob: -2.7415871620178223
    4. ' Literal' → logprob: -2.9915871620178223
    5. 'Conc' → logprob: -3.3665871620178223
    6. 'self' → logprob: -3.4915871620178223
    7. 'Sequence' → logprob: -3.8665871620178223
    8. 'Concat' → logprob: -3.8665871620178223
    9. ' Re' → logprob: -4.616587162017822
    10. 'class' → logprob: -4.991587162017822

Token 572: ' Literal' (ID: 100414)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.8324165940284729
    2. 'Genome' → logprob: -1.3324165344238281
    3. ' Genome' → logprob: -1.9574165344238281
    4. ' Literal' → logprob: -2.207416534423828
    5. ' component' → logprob: -4.207416534423828
    6. '_literal' → logprob: -4.957416534423828
    7. ' sequence' → logprob: -5.207416534423828
    8. 'component' → logprob: -5.332416534423828
    9. '(
' → logprob: -5.832416534423828
    10. '(' → logprob: -5.957416534423828

Token 573: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.111867256462574
    2. '(
' → logprob: -2.4868671894073486
    3. 'Literal' → logprob: -4.236867427825928
    4. ',' → logprob: -6.611867427825928
    5. '(L' → logprob: -6.861867427825928
    6. '[' → logprob: -7.236867427825928
    7. '()' → logprob: -7.236867427825928
    8. 'Sequence' → logprob: -7.361867427825928
    9. '('' → logprob: -7.861867427825928
    10. ' (' → logprob: -7.986867427825928

Token 574: ' parsing' (ID: 51039)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.9172855615615845
    2. 'len' → logprob: -1.6672855615615845
    3. 'all' → logprob: -2.042285442352295
    4. 'any' → logprob: -2.292285442352295
    5. 'components' → logprob: -2.542285442352295
    6. '"' → logprob: -3.667285442352295
    7. ' all' → logprob: -4.292285442352295
    8. ' any' → logprob: -4.667285442352295
    9. 'False' → logprob: -4.667285442352295
    10. '
' → logprob: -4.917285442352295

Token 575: ' found' (ID: 2491)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.0484963655471802
    2. ' components' → logprob: -1.4234963655471802
    3. ' all' → logprob: -2.9234962463378906
    4. ' is' → logprob: -2.9234962463378906
    5. 'Literal' → logprob: -3.2984962463378906
    6. ' not' → logprob: -3.4234962463378906
    7. ' and' → logprob: -3.5484962463378906
    8. 'all' → logprob: -3.9234962463378906
    9. ' multiple' → logprob: -3.9234962463378906
    10. '_literal' → logprob: -4.173496246337891

Token 576: ' multiple' (ID: 7598)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.7773246765136719
    2. 'all' → logprob: -2.152324676513672
    3. 'len' → logprob: -2.277324676513672
    4. 'Literal' → logprob: -2.527324676513672
    5. 'True' → logprob: -2.777324676513672
    6. ' components' → logprob: -3.027324676513672
    7. ' all' → logprob: -3.152324676513672
    8. '"' → logprob: -3.277324676513672
    9. 'self' → logprob: -3.277324676513672
    10. 'multiple' → logprob: -3.277324676513672

Token 577: ' discrete' (ID: 76501)
  Prédit: ' components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' components' → logprob: -0.44762536883354187
    2. 'components' → logprob: -1.8226253986358643
    3. ' sequences' → logprob: -2.0726253986358643
    4. ' parts' → logprob: -3.4476253986358643
    5. ' tokens' → logprob: -4.697625160217285
    6. ' literals' → logprob: -5.072625160217285
    7. 'tokens' → logprob: -5.197625160217285
    8. 'Literal' → logprob: -5.572625160217285
    9. ' strings' → logprob: -6.072625160217285
    10. ' elements' → logprob: -6.072625160217285

Token 578: ' literals' (ID: 193569)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.6307473182678223
    2. ' sequences' → logprob: -1.7557473182678223
    3. ' components' → logprob: -2.3807473182678223
    4. 'se' → logprob: -2.5057473182678223
    5. 'strings' → logprob: -2.5057473182678223
    6. ' literals' → logprob: -4.880747318267822
    7. 'parts' → logprob: -5.130747318267822
    8. 'elements' → logprob: -5.630747318267822
    9. 'Literal' → logprob: -5.630747318267822
    10. ' parts' → logprob: -5.630747318267822

Token 579: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1274547576904297
    2. '       ' → logprob: -1.1274547576904297
    3. 'Literal' → logprob: -1.7524547576904297
    4. 'return' → logprob: -3.3774547576904297
    5. ' return' → logprob: -3.5024547576904297
    6. '           ' → logprob: -4.00245475769043
    7. '        
' → logprob: -4.00245475769043
    8. '(
' → logprob: -4.25245475769043
    9. ' Literal' → logprob: -4.50245475769043
    10. ',' → logprob: -4.75245475769043

Token 580: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36410143971443176
    2. '
' → logprob: -2.2391014099121094
    3. ' return' → logprob: -2.4891014099121094
    4. 'return' → logprob: -2.6141014099121094
    5. '           ' → logprob: -3.7391014099121094
    6. ',' → logprob: -4.864101409912109
    7. '        
' → logprob: -5.864101409912109
    8. ' 
' → logprob: -6.614101409912109
    9. '   ' → logprob: -6.989101409912109
    10. '[' → logprob: -7.614101409912109

Token 581: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.36796805262565613
    2. 'sequence' → logprob: -1.3679680824279785
    3. 'combined' → logprob: -3.3679680824279785
    4. ' return' → logprob: -5.1179680824279785
    5. 'joined' → logprob: -6.1179680824279785
    6. '       ' → logprob: -6.6179680824279785
    7. 'seq' → logprob: -6.6179680824279785
    8. 'merged' → logprob: -6.7429680824279785
    9. ' sequences' → logprob: -6.8679680824279785
    10. 'literal' → logprob: -6.9929680824279785

Token 582: ' Combine' (ID: 78092)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2653331756591797
    2. 'sequence' → logprob: -1.6403331756591797
    3. ' return' → logprob: -4.01533317565918
    4. 'combined' → logprob: -4.39033317565918
    5. ' sequence' → logprob: -6.39033317565918
    6. '       ' → logprob: -6.51533317565918
    7. 'joined' → logprob: -7.01533317565918
    8. ' sequences' → logprob: -7.01533317565918
    9. 'literal' → logprob: -7.26533317565918
    10. 'merged' → logprob: -7.39033317565918

Token 583: ' Literal' (ID: 100414)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6938615441322327
    2. 'components' → logprob: -1.443861484527588
    3. '_literal' → logprob: -2.193861484527588
    4. ' sequence' → logprob: -3.443861484527588
    5. ' sequences' → logprob: -3.693861484527588
    6. 'literal' → logprob: -4.193861484527588
    7. '''.' → logprob: -4.193861484527588
    8. ' components' → logprob: -4.443861484527588
    9. ' ''.' → logprob: -4.568861484527588
    10. '_sequence' → logprob: -5.193861484527588

Token 584: ' components' (ID: 10674)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.550676167011261
    2. 's' → logprob: -1.5506761074066162
    3. '('' → logprob: -1.9256761074066162
    4. '(
' → logprob: -3.050676107406616
    5. 'components' → logprob: -5.175676345825195
    6. '(s' → logprob: -5.550676345825195
    7. '("' → logprob: -5.675676345825195
    8. ' components' → logprob: -6.800676345825195
    9. 'Sequence' → logprob: -7.300676345825195
    10. '("("' → logprob: -7.425676345825195

Token 585: ' into' (ID: 1511)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4824460744857788
    2. 'sequence' → logprob: -1.9824460744857788
    3. 'if' → logprob: -2.2324461936950684
    4. ' =' → logprob: -2.2324461936950684
    5. ' and' → logprob: -2.9824461936950684
    6. '(
' → logprob: -3.1074461936950684
    7. '       ' → logprob: -3.2324461936950684
    8. 'components' → logprob: -3.4824461936950684
    9. ',' → logprob: -3.7324461936950684
    10. 's' → logprob: -3.9824461936950684

Token 586: ' one' (ID: 1001)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.14380577206611633
    2. 'a' → logprob: -2.393805742263794
    3. ' Literal' → logprob: -4.018805980682373
    4. ' a' → logprob: -4.393805980682373
    5. 'one' → logprob: -5.393805980682373
    6. '_literal' → logprob: -5.518805980682373
    7. ' one' → logprob: -6.268805980682373
    8. 'single' → logprob: -7.893805980682373
    9. '[' → logprob: -8.268805503845215
    10. 'literal' → logprob: -8.518805503845215

Token 587: ' where' (ID: 1919)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.31179606914520264
    2. ' sequence' → logprob: -2.186796188354492
    3. '
' → logprob: -2.936796188354492
    4. ' sequences' → logprob: -3.811796188354492
    5. ' if' → logprob: -4.561796188354492
    6. '       ' → logprob: -4.811796188354492
    7. ' =' → logprob: -4.811796188354492
    8. '_literal' → logprob: -4.936796188354492
    9. 'if' → logprob: -5.186796188354492
    10. '_sequence' → logprob: -5.186796188354492

Token 588: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.6184717416763306
    2. 'components' → logprob: -1.6184717416763306
    3. 'possible' → logprob: -2.243471622467041
    4. ' components' → logprob: -2.493471622467041
    5. 'if' → logprob: -2.618471622467041
    6. ' if' → logprob: -2.993471622467041
    7. '_literal' → logprob: -2.993471622467041
    8. 'comp' → logprob: -3.118471622467041
    9. '_possible' → logprob: -3.868471622467041
    10. '
' → logprob: -4.118471622467041

Token 589: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3976573050022125
    2. '       ' → logprob: -1.6476572751998901
    3. '        
' → logprob: -2.3976573944091797
    4. ' 
' → logprob: -4.02265739440918
    5. '    
' → logprob: -4.77265739440918
    6. ' if' → logprob: -5.39765739440918
    7. ',' → logprob: -6.14765739440918
    8. '  
' → logprob: -6.52265739440918
    9. '            
' → logprob: -6.64765739440918
    10. '           ' → logprob: -6.89765739440918

Token 590: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1549309492111206
    2. ' if' → logprob: -3.65493106842041
    3. '        
' → logprob: -3.65493106842041
    4. '
' → logprob: -3.77993106842041
    5. ' 
' → logprob: -4.15493106842041
    6. 'if' → logprob: -4.27993106842041
    7. 'result' → logprob: -5.02993106842041
    8. '           ' → logprob: -5.52993106842041
    9. 'components' → logprob: -5.77993106842041
    10. 'return' → logprob: -5.90493106842041

Token 591: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' (adapté à ' combined') → logprob: -0.2136978954076767
    2. 'sequence' → logprob: -1.838697910308838
    3. 'seq' → logprob: -4.213697910308838
    4. 'result' → logprob: -4.963697910308838
    5. ' combined' → logprob: -5.838697910308838
    6. 'merged' → logprob: -5.963697910308838
    7. 'if' → logprob: -6.463697910308838
    8. 'literal' → logprob: -7.213697910308838
    9. 'se' → logprob: -7.213697910308838
    10. '#' → logprob: -7.963697910308838

Token 592: '_literals' (ID: 139304)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.027246540412306786
    2. '_seq' → logprob: -3.7772464752197266
    3. '_sequences' → logprob: -5.777246475219727
    4. '_str' → logprob: -7.777246475219727
    5. '_string' → logprob: -8.652246475219727
    6. '_literal' → logprob: -8.777246475219727
    7. '_parts' → logprob: -9.777246475219727
    8. ' =' → logprob: -10.402246475219727
    9. '_literals' → logprob: -10.402246475219727
    10. '_chars' → logprob: -11.402246475219727

Token 593: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34530624747276306
    2. '=' → logprob: -1.3453062772750854
    3. '_sequence' → logprob: -4.345306396484375
    4. '_str' → logprob: -5.220306396484375
    5. '_seq' → logprob: -5.345306396484375
    6. '_chars' → logprob: -6.220306396484375
    7. '_parts' → logprob: -6.345306396484375
    8. ':' → logprob: -6.845306396484375
    9. '_sequences' → logprob: -6.845306396484375
    10. '_tokens' → logprob: -6.970306396484375

Token 594: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.35524865984916687
    2. '[]' → logprob: -1.3552486896514893
    3. '"' → logprob: -3.6052486896514893
    4. '[]
' → logprob: -4.98024845123291
    5. '''' → logprob: -4.98024845123291
    6. '''
' → logprob: -9.60524845123291
    7. '[]

' → logprob: -10.35524845123291
    8. ''' → logprob: -10.60524845123291
    9. '[' → logprob: -10.73024845123291
    10. '[]"' → logprob: -10.98024845123291

Token 595: '           ' (ID: 352)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.892888069152832
    2. 'for' → logprob: -1.392888069152832
    3. '           ' → logprob: -2.267888069152832
    4. ' for' → logprob: -2.517888069152832
    5. 'sequence' → logprob: -2.767888069152832
    6. 'buffer' → logprob: -3.267888069152832
    7. 'token' → logprob: -4.017888069152832
    8. 'temp' → logprob: -4.392888069152832
    9. ' current' → logprob: -5.892888069152832
    10. 'tokens' → logprob: -5.892888069152832

Token 596: ' combined' (ID: 15890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00434336019679904
    2. 'current' → logprob: -6.754343509674072
    3. 'i' → logprob: -7.004343509674072
    4. 'temp' → logprob: -7.254343509674072
    5. 'buffer' → logprob: -7.379343509674072
    6. ' for' → logprob: -8.879343032836914
    7. 'literal' → logprob: -9.004343032836914
    8. 'idx' → logprob: -9.129343032836914
    9. '           ' → logprob: -9.379343032836914
    10. 'new' → logprob: -9.379343032836914

Token 597: '_components' (ID: 55324)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.38786470890045166
    2. '_seq' → logprob: -2.262864589691162
    3. '_string' → logprob: -2.387864589691162
    4. '_str' → logprob: -2.512864589691162
    5. '_chars' → logprob: -3.762864589691162
    6. 'sequence' → logprob: -5.137864589691162
    7. 'string' → logprob: -5.512864589691162
    8. '_literal' → logprob: -5.637864589691162
    9. '_text' → logprob: -5.887864589691162
    10. '_sequences' → logprob: -6.012864589691162

Token 598: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04873349890112877
    2. ' =' → logprob: -3.5487334728240967
    3. ':' → logprob: -4.048733711242676
    4. '=[]' → logprob: -6.673733711242676
    5. '=[]
' → logprob: -9.673733711242676
    6. '   ' → logprob: -11.173733711242676
    7. ',' → logprob: -11.673733711242676
    8. '=
' → logprob: -13.298733711242676
    9. ' :' → logprob: -13.798733711242676
    10. '[]' → logprob: -13.923733711242676

Token 599: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3133251368999481
    2. '[]
' → logprob: -1.3133251667022705
    3. '[]

' → logprob: -10.063324928283691
    4. ' []' → logprob: -10.938324928283691
    5. ' []
' → logprob: -12.813324928283691
    6. '[' → logprob: -15.938324928283691
    7. '[
' → logprob: -16.688325881958008
    8. '[]}' → logprob: -17.313325881958008
    9. '   ' → logprob: -17.688325881958008
    10. '[],' → logprob: -17.938325881958008

Token 600: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5652574300765991
    2. ' for' → logprob: -0.9402574300765991
    3. '           ' → logprob: -3.5652575492858887
    4. 'current' → logprob: -5.690257549285889
    5. 'token' → logprob: -5.940257549285889
    6. '       ' → logprob: -6.440257549285889
    7. 'i' → logprob: -6.690257549285889
    8. 'last' → logprob: -6.815257549285889
    9. 'prev' → logprob: -7.565257549285889
    10. '   ' → logprob: -7.815257549285889

Token 601: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.9292415749514475e-05
    2. ' for' → logprob: -10.375039100646973
    3. '           ' → logprob: -13.000039100646973
    4. 'current' → logprob: -13.000039100646973
    5. 'i' → logprob: -13.125039100646973
    6. 'def' → logprob: -14.250039100646973
    7. 'last' → logprob: -14.875039100646973
    8. 'prev' → logprob: -16.12504005432129
    9. 'temp' → logprob: -16.50004005432129
    10. 'idx' → logprob: -16.75004005432129

Token 602: ' component' (ID: 6392)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.011094387620687485
    2. 'c' → logprob: -4.511094570159912
    3. 'component' → logprob: -10.261094093322754
    4. ' comp' → logprob: -11.386094093322754
    5. 'cmp' → logprob: -16.01109504699707
    6. '   ' → logprob: -16.13609504699707
    7. ' c' → logprob: -16.63609504699707
    8. '	comp' → logprob: -17.38609504699707
    9. 'Comp' → logprob: -17.63609504699707
    10. 'elem' → logprob: -19.88609504699707

Token 603: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029754308983683586
    2. 'in' → logprob: -3.529754400253296
    3. '	in' → logprob: -13.154754638671875
    4. ' ' → logprob: -14.154754638671875
    5. '   ' → logprob: -14.904754638671875
    6. 'import' → logprob: -15.279754638671875
    7. '  ' → logprob: -16.154754638671875
    8. '_in' → logprob: -16.529754638671875
    9. 'inthe' → logprob: -16.529754638671875
    10. '
' → logprob: -16.529754638671875

Token 604: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.00023166877508629113
    2. ' components' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.000231742858887
    4. '           ' → logprob: -15.875231742858887
    5. '       ' → logprob: -17.50023078918457
    6. '.components' → logprob: -17.50023078918457
    7. 'component' → logprob: -17.62523078918457
    8. ' ' → logprob: -19.37523078918457
    9. '
' → logprob: -19.62523078918457
    10. '  ' → logprob: -20.50023078918457

Token 605: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2816406786441803
    2. ':' → logprob: -1.406640648841858
    3. '               ' → logprob: -7.906640529632568
    4. '):
' → logprob: -10.031641006469727
    5. ' :
' → logprob: -10.656641006469727
    6. '       ' → logprob: -11.156641006469727
    7. ':

' → logprob: -11.656641006469727
    8. ',' → logprob: -12.031641006469727
    9. ':
' → logprob: -12.406641006469727
    10. ' :' → logprob: -12.531641006469727

Token 606: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9196353554725647
    2. ' if' → logprob: -1.04463529586792
    3. 'if' → logprob: -1.41963529586792
    4. '       ' → logprob: -5.16963529586792
    5. '           ' → logprob: -7.41963529586792
    6. '	           ' → logprob: -7.66963529586792
    7. '   ' → logprob: -8.419635772705078
    8. '<|end|>' → logprob: -8.919635772705078
    9. '	if' → logprob: -9.044635772705078
    10. '		       ' → logprob: -9.794635772705078

Token 607: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005417665932327509
    2. ' if' → logprob: -5.255417823791504
    3. '               ' → logprob: -8.630417823791504
    4. '   ' → logprob: -12.880417823791504
    5. '           ' → logprob: -13.630417823791504
    6. '                   ' → logprob: -14.130417823791504
    7. '	if' → logprob: -14.380417823791504
    8. '```' → logprob: -16.005416870117188
    9. 'is' → logprob: -16.130416870117188
    10. '       ' → logprob: -17.005416870117188

Token 608: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0005599428550340235
    2. ' isinstance' → logprob: -7.5005598068237305
    3. '   ' → logprob: -12.62555980682373
    4. '       ' → logprob: -13.75055980682373
    5. '           ' → logprob: -13.75055980682373
    6. '
' → logprob: -14.25055980682373
    7. '(is' → logprob: -14.37555980682373
    8. '               ' → logprob: -15.75055980682373
    9. '  ' → logprob: -17.250560760498047
    10. '    ' → logprob: -17.500560760498047

Token 609: '(component' (ID: 44144)
  Prédit: '(component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(component' → logprob: -0.005236956290900707
    2. 'component' → logprob: -5.255237102508545
    3. ' component' → logprob: -12.880236625671387
    4. '(com' → logprob: -15.380236625671387
    5. '(
' → logprob: -16.005237579345703
    6. '(' → logprob: -16.130237579345703
    7. '	component' → logprob: -16.255237579345703
    8. 'Literal' → logprob: -16.880237579345703
    9. ' (' → logprob: -18.755237579345703
    10. '(L' → logprob: -19.505237579345703

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008834764012135565
    2. '(component' → logprob: -7.37588357925415
    3. '(L' → logprob: -9.625883102416992
    4. 'component' → logprob: -9.875883102416992
    5. ',L' → logprob: -9.875883102416992
    6. '(' → logprob: -10.250883102416992
    7. ',
' → logprob: -10.750883102416992
    8. 'Literal' → logprob: -11.375883102416992
    9. ' ,' → logprob: -11.375883102416992
    10. 'L' → logprob: -12.750883102416992

Token 611: ' Literal' (ID: 100414)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -5.836499985889532e-05
    2. ' Literal' → logprob: -9.7500581741333
    3. 'Liter' → logprob: -20.375059127807617
    4. 'Lit' → logprob: -21.625059127807617
    5. '   ' → logprob: -21.875059127807617
    6. ' ' → logprob: -22.250059127807617
    7. '_literal' → logprob: -22.375059127807617
    8. 'literal' → logprob: -23.250059127807617
    9. 'L' → logprob: -23.750059127807617
    10. ' literal' → logprob: -24.250059127807617

Token 612: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.254837304353714
    2. '):
' → logprob: -1.5048372745513916
    3. '):' → logprob: -5.879837512969971
    4. ' )' → logprob: -10.254837036132812
    5. '):
' → logprob: -10.504837036132812
    6. '):

' → logprob: -11.004837036132812
    7. ' ):
' → logprob: -11.379837036132812
    8. ' and' → logprob: -12.254837036132812
    9. ')
' → logprob: -12.254837036132812
    10. 'and' → logprob: -13.129837036132812

Token 613: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34900569915771484
    2. 'and' → logprob: -1.4740056991577148
    3. '                   ' → logprob: -3.349005699157715
    4. ':
' → logprob: -4.224005699157715
    5. ':' → logprob: -4.349005699157715
    6. '               ' → logprob: -6.474005699157715
    7. '           ' → logprob: -7.974005699157715
    8. '):
' → logprob: -8.099005699157715
    9. '                       ' → logprob: -8.474005699157715
    10. 'if' → logprob: -8.974005699157715

Token 614: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' (adapté à ' combined') → logprob: -0.00894745159894228
    2. 'if' → logprob: -5.008947372436523
    3. ' combined' → logprob: -6.633947372436523
    4. '                   ' → logprob: -7.133947372436523
    5. ' if' → logprob: -9.383947372436523
    6. '                       ' → logprob: -10.758947372436523
    7. '               ' → logprob: -11.883947372436523
    8. '   ' → logprob: -13.508947372436523
    9. '                    
' → logprob: -13.883947372436523
    10. '           ' → logprob: -14.883947372436523

Token 615: '_literals' (ID: 139304)
  Prédit: '_literals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literals' → logprob: -0.0005687602679245174
    2. '_literal' → logprob: -8.000568389892578
    3. '_components' → logprob: -9.625568389892578
    4. '_sequences' → logprob: -10.000568389892578
    5. '_sequence' → logprob: -10.375568389892578
    6. '=' → logprob: -10.750568389892578
    7. '
' → logprob: -11.000568389892578
    8. 'if' → logprob: -11.625568389892578
    9. 'sequence' → logprob: -12.000568389892578
    10. '_' → logprob: -12.125568389892578

Token 616: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011186653282493353
    2. '[-' → logprob: -6.8761186599731445
    3. '.' → logprob: -9.876118659973145
    4. 'append' → logprob: -11.001118659973145
    5. '+=' → logprob: -12.126118659973145
    6. '.extend' → logprob: -12.251118659973145
    7. ' .' → logprob: -12.376118659973145
    8. ' +=' → logprob: -14.126118659973145
    9. '_append' → logprob: -14.751118659973145
    10. '=' → logprob: -15.001118659973145

Token 617: '(component' (ID: 44144)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -4.584861744660884e-05
    2. '(component' → logprob: -10.000045776367188
    3. ' component' → logprob: -15.000045776367188
    4. '
' → logprob: -17.375045776367188
    5. '	component' → logprob: -19.500045776367188
    6. '(
' → logprob: -19.750045776367188
    7. '   ' → logprob: -20.625045776367188
    8. ' ' → logprob: -21.000045776367188
    9. '(' → logprob: -21.125045776367188
    10. '  ' → logprob: -21.500045776367188

Token 618: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.8802491215174086e-05
    2. ')._' → logprob: -11.000028610229492
    3. '.' → logprob: -12.000028610229492
    4. ')' → logprob: -12.500028610229492
    5. '.
' → logprob: -14.625028610229492
    6. ' .' → logprob: -14.875028610229492
    7. ']._' → logprob: -15.250028610229492
    8. '.get' → logprob: -15.250028610229492
    9. '_sequence' → logprob: -15.500028610229492
    10. '.sequence' → logprob: -15.625028610229492

Token 619: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.1756367712223437e-05
    2. ' sequence' → logprob: -11.875011444091797
    3. '_sequence' → logprob: -12.625011444091797
    4. '
' → logprob: -15.375011444091797
    5. '(sequence' → logprob: -15.500011444091797
    6. '.sequence' → logprob: -15.625011444091797
    7. 'series' → logprob: -16.000011444091797
    8. 'len' → logprob: -16.250011444091797
    9. '   ' → logprob: -16.375011444091797
    10. '`' → logprob: -16.500011444091797

Token 620: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003023345780093223
    2. ')
' → logprob: -8.6253023147583
    3. '<|end|>' → logprob: -10.1253023147583
    4. '               ' → logprob: -10.7503023147583
    5. ' )' → logprob: -10.7503023147583
    6. '
' → logprob: -11.6253023147583
    7. '):
' → logprob: -12.0003023147583
    8. 'else' → logprob: -12.5003023147583
    9. '                   ' → logprob: -12.7503023147583
    10. '),' → logprob: -12.8753023147583

Token 621: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007379923947155476
    2. 'else' → logprob: -5.63238000869751
    3. 'elif' → logprob: -6.00738000869751
    4. ' else' → logprob: -7.38238000869751
    5. ' elif' → logprob: -7.75738000869751
    6. '
' → logprob: -8.882379531860352
    7. '                
' → logprob: -10.632379531860352
    8. '                ' → logprob: -10.882379531860352
    9. ' 
' → logprob: -11.007379531860352
    10. '.' → logprob: -11.632379531860352

Token 622: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7708635926246643
    2. '               ' → logprob: -1.1458635330200195
    3. 'else' (adapté à ' else') → logprob: -1.6458635330200195
    4. ' elif' → logprob: -4.0208635330200195
    5. 'elif' → logprob: -4.7708635330200195
    6. '           ' → logprob: -9.14586353302002
    7. '	else' → logprob: -11.39586353302002
    8. '                ' → logprob: -11.64586353302002
    9. '			' → logprob: -11.64586353302002
    10. '	elif' → logprob: -11.77086353302002

Token 623: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31386449933052063
    2. ':
' → logprob: -1.3138644695281982
    3. '                   ' → logprob: -8.563864707946777
    4. ' :
' → logprob: -8.938864707946777
    5. ' :' → logprob: -9.188864707946777
    6. '               ' → logprob: -10.188864707946777
    7. ',' → logprob: -10.313864707946777
    8. '{' → logprob: -10.938864707946777
    9. ' if' → logprob: -11.188864707946777
    10. 'if' → logprob: -11.313864707946777

Token 624: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9396330714225769
    2. ':
' → logprob: -1.3146331310272217
    3. '               ' → logprob: -1.5646331310272217
    4. ':' → logprob: -2.1896331310272217
    5. ' if' → logprob: -5.189632892608643
    6. '           ' → logprob: -5.189632892608643
    7. 'if' → logprob: -6.064632892608643
    8. '   ' → logprob: -6.439632892608643
    9. '):
' → logprob: -7.064632892608643
    10. '                       ' → logprob: -7.564632892608643

Token 625: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011976092355325818
    2. ' if' → logprob: -6.751197814941406
    3. '                   ' → logprob: -10.751197814941406
    4. '           ' → logprob: -12.626197814941406
    5. '               ' → logprob: -13.876197814941406
    6. '   ' → logprob: -14.126197814941406
    7. '#' → logprob: -15.126197814941406
    8. ' ' → logprob: -15.251197814941406
    9. '       ' → logprob: -15.751197814941406
    10. '	if' → logprob: -15.876197814941406

Token 626: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' → logprob: -0.004080301150679588
    2. ' combined' → logprob: -5.504080295562744
    3. 'len' → logprob: -13.254080772399902
    4. '           ' → logprob: -16.629079818725586
    5. '   ' → logprob: -17.629079818725586
    6. ' len' → logprob: -19.004079818725586
    7. '
' → logprob: -19.504079818725586
    8. '                   ' → logprob: -20.004079818725586
    9. ' ' → logprob: -20.004079818725586
    10. '```' → logprob: -20.379079818725586

Token 627: '_literals' (ID: 139304)
  Prédit: '_literals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literals' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -13.125003814697266
    3. '_literal' → logprob: -13.375003814697266
    4. '```' → logprob: -15.875003814697266
    5. '_components' → logprob: -16.250003814697266
    6. '_letters' → logprob: -17.125003814697266
    7. ' literals' → logprob: -17.250003814697266
    8. '_tokens' → logprob: -17.375003814697266
    9. 'l' → logprob: -17.750003814697266
    10. '_helpers' → logprob: -18.000003814697266

Token 628: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28118428587913513
    2. ':
' → logprob: -1.4061843156814575
    3. '):
' → logprob: -12.031184196472168
    4. '```' → logprob: -12.281184196472168
    5. ':

' → logprob: -12.531184196472168
    6. '!=' → logprob: -12.906184196472168
    7. ' and' → logprob: -13.281184196472168
    8. '.' → logprob: -13.281184196472168
    9. 'and' → logprob: -13.406184196472168
    10. '):' → logprob: -13.531184196472168

Token 629: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4417620897293091
    2. ' combined' → logprob: -2.1917619705200195
    3. '                        
' → logprob: -2.4417619705200195
    4. '                   ' → logprob: -2.8167619705200195
    5. 'combined' → logprob: -3.3167619705200195
    6. '                    
' → logprob: -4.0667619705200195
    7. '<|end|>' → logprob: -4.6917619705200195
    8. '
' → logprob: -5.3167619705200195
    9. '               ' → logprob: -5.3167619705200195
    10. ',' → logprob: -5.9417619705200195

Token 630: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' (adapté à ' combined') → logprob: -0.07893253117799759
    2. ' combined' → logprob: -2.578932523727417
    3. '                   ' → logprob: -10.203932762145996
    4. 'component' → logprob: -13.578932762145996
    5. '
' → logprob: -13.578932762145996
    6. 'joined' → logprob: -14.078932762145996
    7. '   ' → logprob: -14.578932762145996
    8. 'merged' → logprob: -14.953932762145996
    9. '_comb' → logprob: -15.203932762145996
    10. '                    
' → logprob: -15.328932762145996

Token 631: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.4047337472438812
    2. '_sequence' → logprob: -1.2797337770462036
    3. '_str' → logprob: -4.029733657836914
    4. '.append' → logprob: -4.654733657836914
    5. '_seq' → logprob: -4.654733657836914
    6. '_sequences' → logprob: -5.154733657836914
    7. '_literals' → logprob: -5.404733657836914
    8. 'components' → logprob: -5.404733657836914
    9. 'sequence' → logprob: -6.779733657836914
    10. '_string' → logprob: -7.654733657836914

Token 632: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00029828163678757846
    2. '.' → logprob: -8.125298500061035
    3. ' .' → logprob: -14.125298500061035
    4. 'append' → logprob: -14.500298500061035
    5. '.app' → logprob: -14.750298500061035
    6. '.ap' → logprob: -15.000298500061035
    7. '.
' → logprob: -15.875298500061035
    8. '.extend' → logprob: -16.62529754638672
    9. '
' → logprob: -16.87529754638672
    10. '.Append' → logprob: -17.87529754638672

Token 633: '(L' (ID: 11075)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -5.1093578804284334e-05
    2. '(L' → logprob: -10.000051498413086
    3. ' Literal' → logprob: -12.125051498413086
    4. 'L' → logprob: -16.375051498413086
    5. '   ' → logprob: -17.125051498413086
    6. 'Liter' → logprob: -17.625051498413086
    7. '	L' → logprob: -17.875051498413086
    8. 'Lit' → logprob: -18.000051498413086
    9. '_LITERAL' → logprob: -18.375051498413086
    10. '_literal' → logprob: -18.750051498413086

Token 634: 'iteral' (ID: 17598)
  Prédit: 'iteral'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iteral' → logprob: -3.7697225252486533e-06
    2. 'Literal' → logprob: -12.625003814697266
    3. 'ITERAL' → logprob: -14.750003814697266
    4. '"' → logprob: -17.125003814697266
    5. 'iterals' → logprob: -18.375003814697266
    6. ' Literal' → logprob: -18.875003814697266
    7. 'it' → logprob: -20.000003814697266
    8. '   ' → logprob: -20.125003814697266
    9. 'inear' → logprob: -20.125003814697266
    10. 'literal' → logprob: -20.250003814697266

Token 635: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.20146965980529785
    2. '("' → logprob: -1.7014696598052979
    3. '(' → logprob: -9.826469421386719
    4. '''.' → logprob: -13.951469421386719
    5. '"' → logprob: -14.076469421386719
    6. '(
' → logprob: -15.201469421386719
    7. '(""' → logprob: -15.951469421386719
    8. '('').' → logprob: -16.07646942138672
    9. '(('' → logprob: -16.82646942138672
    10. '(("' → logprob: -16.82646942138672

Token 636: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.039237383753061295
    2. ''.' → logprob: -3.2892374992370605
    3. '".' → logprob: -6.7892374992370605
    4. ' ''.' → logprob: -9.914237022399902
    5. '"' → logprob: -11.414237022399902
    6. '''' → logprob: -12.289237022399902
    7. ''' → logprob: -12.414237022399902
    8. ' "".' → logprob: -16.41423797607422
    9. '('').' → logprob: -16.78923797607422
    10. '```' → logprob: -16.91423797607422

Token 637: 'join' (ID: 10891)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.2193220853805542
    2. 'join' → logprob: -1.7193220853805542
    3. '.join' → logprob: -4.469322204589844
    4. '.' → logprob: -5.094322204589844
    5. ''.' → logprob: -9.594322204589844
    6. '"' → logprob: -10.719322204589844
    7. '('').' → logprob: -10.844322204589844
    8. '```' → logprob: -11.344322204589844
    9. '".' → logprob: -11.594322204589844
    10. ' join' → logprob: -11.719322204589844

Token 638: '(com' (ID: 27868)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' → logprob: -0.25195029377937317
    2. '(com' → logprob: -1.5019502639770508
    3. 'comb' → logprob: -11.75195026397705
    4. 'com' → logprob: -12.25195026397705
    5. ' combined' → logprob: -12.50195026397705
    6. ')' → logprob: -13.62695026397705
    7. '
' → logprob: -13.75195026397705
    8. '(' → logprob: -13.87695026397705
    9. '   ' → logprob: -14.50195026397705
    10. 'combine' → logprob: -15.37695026397705

Token 639: 'bined' (ID: 172357)
  Prédit: 'bined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bined' → logprob: -0.161704882979393
    2. 'ined' → logprob: -1.9117048978805542
    3. 'combined' → logprob: -6.786705017089844
    4. 'inated' → logprob: -9.161705017089844
    5. '(com' → logprob: -9.286705017089844
    6. '[' → logprob: -10.036705017089844
    7. 'uted' → logprob: -10.411705017089844
    8. 'itted' → logprob: -11.036705017089844
    9. '_comb' → logprob: -11.536705017089844
    10. 'erged' → logprob: -12.161705017089844

Token 640: '_literals' (ID: 139304)
  Prédit: '_literals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literals' → logprob: -0.00020461321400944144
    2. 'iterals' → logprob: -8.500205039978027
    3. 'l' → logprob: -13.875205039978027
    4. ' literals' → logprob: -16.50020408630371
    5. 'iteral' → logprob: -18.00020408630371
    6. '_letters' → logprob: -18.87520408630371
    7. 'inals' → logprob: -19.00020408630371
    8. '_literal' → logprob: -19.25020408630371
    9. ')' → logprob: -19.25020408630371
    10. '```' → logprob: -19.50020408630371

Token 641: ')))
' (ID: 12562)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.20168231427669525
    2. '))' → logprob: -1.7016823291778564
    3. ' ))
' → logprob: -9.076682090759277
    4. '))

' → logprob: -9.576682090759277
    5. '                   ' → logprob: -10.576682090759277
    6. ' ))' → logprob: -11.076682090759277
    7. '()))
' → logprob: -11.451682090759277
    8. '))
' → logprob: -11.701682090759277
    9. ')))
' → logprob: -12.451682090759277
    10. '               ' → logprob: -12.576682090759277

Token 642: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.012952915392816067
    2. '                   ' → logprob: -4.88795280456543
    3. '               ' → logprob: -6.26295280456543
    4. '                        
' → logprob: -6.38795280456543
    5. '           ' → logprob: -7.76295280456543
    6. 'combined' → logprob: -8.13795280456543
    7. '                    
' → logprob: -8.26295280456543
    8. '                           ' → logprob: -8.51295280456543
    9. ' combined' → logprob: -8.63795280456543
    10. '
' → logprob: -8.88795280456543

Token 643: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' (adapté à ' combined') → logprob: -0.08948691189289093
    2. ' combined' → logprob: -2.464486837387085
    3. '                   ' → logprob: -7.839487075805664
    4. '           ' → logprob: -9.589487075805664
    5. '                       ' → logprob: -10.589487075805664
    6. '               ' → logprob: -10.589487075805664
    7. '                           ' → logprob: -11.214487075805664
    8. '[' → logprob: -12.089487075805664
    9. '_comb' → logprob: -12.214487075805664
    10. '       ' → logprob: -12.839487075805664

Token 644: '_literals' (ID: 139304)
  Prédit: '_literals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literals' → logprob: -3.128163257315464e-07
    2. '_literal' → logprob: -15.25
    3. 'iterals' → logprob: -18.0
    4. 'l' → logprob: -19.125
    5. '_letters' → logprob: -19.5
    6. ' literals' → logprob: -20.5
    7. '_' → logprob: -21.125
    8. '_logits' → logprob: -21.25
    9. '\' → logprob: -21.75
    10. '```' → logprob: -21.75

Token 645: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.6789137084269896e-05
    2. ' =' → logprob: -10.62503719329834
    3. '=[]' → logprob: -11.62503719329834
    4. '.clear' → logprob: -12.62503719329834
    5. '.=' → logprob: -16.875036239624023
    6. '＝' → logprob: -17.875036239624023
    7. '=}' → logprob: -18.500036239624023
    8. '=

' → logprob: -18.875036239624023
    9. '[:]' → logprob: -19.000036239624023
    10. '=[]
' → logprob: -19.250036239624023

Token 646: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0031790214125066996
    2. '[]
' → logprob: -5.75317907333374
    3. '[]

' → logprob: -14.003178596496582
    4. ' []' → logprob: -15.378178596496582
    5. '[]"' → logprob: -17.0031795501709
    6. '[])' → logprob: -17.2531795501709
    7. '[' → logprob: -17.3781795501709
    8. '[]>' → logprob: -17.5031795501709
    9. '[]}' → logprob: -17.5031795501709
    10. '['' → logprob: -18.7531795501709

Token 647: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04551900550723076
    2. '           ' → logprob: -3.1705191135406494
    3. '
' → logprob: -6.54551887512207
    4. '               ' → logprob: -7.04551887512207
    5. '                    
' → logprob: -9.42051887512207
    6. '            
' → logprob: -10.54551887512207
    7. 'component' → logprob: -10.92051887512207
    8. '       ' → logprob: -11.29551887512207
    9. 'combined' → logprob: -11.29551887512207
    10. '   ' → logprob: -11.67051887512207

Token 648: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' (adapté à ' combined') → logprob: -0.001987994182854891
    2. ' combined' → logprob: -6.251987934112549
    3. '                   ' → logprob: -9.751988410949707
    4. '           ' → logprob: -14.376988410949707
    5. '               ' → logprob: -15.251988410949707
    6. '
' → logprob: -15.251988410949707
    7. '   ' → logprob: -15.751988410949707
    8. 'component' → logprob: -18.00198745727539
    9. '```' → logprob: -18.25198745727539
    10. '                       ' → logprob: -18.25198745727539

Token 649: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -1.8624639324116288e-06
    2. 'components' → logprob: -13.250001907348633
    3. 'Components' → logprob: -18.125001907348633
    4. '_component' → logprob: -18.625001907348633
    5. '
' → logprob: -18.750001907348633
    6. '_comp' → logprob: -19.250001907348633
    7. '_com' → logprob: -19.375001907348633
    8. '_' → logprob: -19.500001907348633
    9. '```' → logprob: -19.875001907348633
    10. '_helpers' → logprob: -20.000001907348633

Token 650: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.074907287256792e-05
    2. '.' → logprob: -9.75006103515625
    3. 'append' → logprob: -13.12506103515625
    4. '.app' → logprob: -15.00006103515625
    5. '.extend' → logprob: -17.00006103515625
    6. '.Append' → logprob: -17.12506103515625
    7. '.ap' → logprob: -17.62506103515625
    8. ' .' → logprob: -18.25006103515625
    9. '.push' → logprob: -18.50006103515625
    10. '.add' → logprob: -19.00006103515625

Token 651: '(component' (ID: 44144)
  Prédit: '(component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(component' → logprob: -0.10020732134580612
    2. 'component' → logprob: -2.3502073287963867
    3. ' component' → logprob: -14.600207328796387
    4. '(
' → logprob: -15.725207328796387
    5. '	component' → logprob: -16.47520637512207
    6. '(' → logprob: -18.22520637512207
    7. '
' → logprob: -18.60020637512207
    8. '@Component' → logprob: -19.35020637512207
    9. '(com' → logprob: -19.60020637512207
    10. '```' → logprob: -19.72520637512207

Token 652: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16292662918567657
    2. ')
' → logprob: -2.53792667388916
    3. ')' → logprob: -2.66292667388916
    4. '
' → logprob: -6.53792667388916
    5. '       ' → logprob: -9.66292667388916
    6. '               ' → logprob: -11.03792667388916
    7. '            
' → logprob: -11.41292667388916
    8. '<|end|>' → logprob: -11.41292667388916
    9. '          ' → logprob: -12.78792667388916
    10. '),' → logprob: -13.16292667388916

Token 653: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004083385691046715
    2. 'if' → logprob: -5.879083156585693
    3. ' if' → logprob: -7.129083156585693
    4. '
' → logprob: -7.879083156585693
    5. '[' → logprob: -10.879083633422852
    6. 'elif' → logprob: -10.879083633422852
    7. 'else' → logprob: -11.129083633422852
    8. '       ' → logprob: -11.254083633422852
    9. '            
' → logprob: -12.379083633422852
    10. '               ' → logprob: -12.504083633422852

Token 654: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.033787235617637634
    2. ' if' → logprob: -3.658787250518799
    3. '       ' → logprob: -5.533787250518799
    4. '           ' → logprob: -5.908787250518799
    5. 'for' → logprob: -7.408787250518799
    6. '#' → logprob: -9.65878677368164
    7. ' for' → logprob: -10.53378677368164
    8. '```' → logprob: -10.53378677368164
    9. '   ' → logprob: -10.65878677368164
    10. '
' → logprob: -11.03378677368164

Token 655: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' → logprob: -0.0031821096781641245
    2. ' combined' → logprob: -5.7531819343566895
    3. 'len' → logprob: -12.753182411193848
    4. '   ' → logprob: -13.628182411193848
    5. ' ' → logprob: -15.503182411193848
    6. ' len' → logprob: -17.25318145751953
    7. '  ' → logprob: -17.75318145751953
    8. '    ' → logprob: -18.12818145751953
    9. '
' → logprob: -18.50318145751953
    10. '           ' → logprob: -18.62818145751953

Token 656: '_literals' (ID: 139304)
  Prédit: '_literals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literals' → logprob: -0.001707659917883575
    2. '_components' → logprob: -6.376707553863525
    3. '_literal' → logprob: -12.751708030700684
    4. 'components' → logprob: -14.251708030700684
    5. '_' → logprob: -14.751708030700684
    6. 'L' → logprob: -15.251708030700684
    7. '_helpers' → logprob: -15.501708030700684
    8. '_letters' → logprob: -15.626708030700684
    9. '```' → logprob: -15.751708030700684
    10. '_constants' → logprob: -16.251707077026367

Token 657: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036035135854035616
    2. ':
' → logprob: -5.628603458404541
    3. '):' → logprob: -14.0036039352417
    4. '>' → logprob: -14.5036039352417
    5. '<|end|>' → logprob: -14.8786039352417
    6. '.' → logprob: -15.3786039352417
    7. ':

' → logprob: -15.3786039352417
    8. '[' → logprob: -15.5036039352417
    9. ',' → logprob: -15.7536039352417
    10. '):
' → logprob: -16.003602981567383

Token 658: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4012114405632019
    2. 'combined' → logprob: -1.2762115001678467
    3. ' combined' → logprob: -3.0262115001678467
    4. '                       ' → logprob: -5.901211261749268
    5. '                   ' → logprob: -9.276211738586426
    6. '   ' → logprob: -10.526211738586426
    7. '           ' → logprob: -11.526211738586426
    8. '(com' → logprob: -12.026211738586426
    9. '              ' → logprob: -12.151211738586426
    10. 'com' → logprob: -12.276211738586426

Token 659: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' (adapté à ' combined') → logprob: -0.030926985666155815
    2. ' combined' → logprob: -3.5309269428253174
    3. '               ' → logprob: -6.7809271812438965
    4. '                   ' → logprob: -10.280926704406738
    5. '   ' → logprob: -12.530926704406738
    6. '                       ' → logprob: -13.530926704406738
    7. '           ' → logprob: -14.655926704406738
    8. ' ' → logprob: -14.780926704406738
    9. '                ' → logprob: -16.030927658081055
    10. '       ' → logprob: -16.155927658081055

Token 660: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -8.061054359131958e-06
    2. 'components' → logprob: -11.750007629394531
    3. '_literals' → logprob: -16.25000762939453
    4. '
' → logprob: -17.25000762939453
    5. '_component' → logprob: -18.12500762939453
    6. 'Components' → logprob: -18.37500762939453
    7. '_comp' → logprob: -18.37500762939453
    8. '_com' → logprob: -18.50000762939453
    9. ' components' → logprob: -18.75000762939453
    10. '_' → logprob: -19.25000762939453

Token 661: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033581978641450405
    2. '.' → logprob: -8.000335693359375
    3. 'append' → logprob: -15.875335693359375
    4. '.app' → logprob: -16.125335693359375
    5. '.Append' → logprob: -16.750335693359375
    6. ' .' → logprob: -17.000335693359375
    7. '.
' → logprob: -18.750335693359375
    8. '.ap' → logprob: -19.125335693359375
    9. '.insert' → logprob: -19.500335693359375
    10. '.extend' → logprob: -20.875335693359375

Token 662: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.3306015716807451e-05
    2. 'Literal' → logprob: -11.25001335144043
    3. 'L' → logprob: -15.87501335144043
    4. '(' → logprob: -16.25001335144043
    5. ' Literal' → logprob: -18.62501335144043
    6. '	L' → logprob: -20.00001335144043
    7. '(
' → logprob: -20.12501335144043
    8. ' (' → logprob: -20.87501335144043
    9. '(Log' → logprob: -21.25001335144043
    10. '   ' → logprob: -21.50001335144043

Token 663: 'iteral' (ID: 17598)
  Prédit: 'iteral'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iteral' → logprob: -7.5649528298527e-05
    2. 'Literal' → logprob: -9.500075340270996
    3. 'ITERAL' → logprob: -14.500075340270996
    4. 'literal' → logprob: -16.750076293945312
    5. ' Literal' → logprob: -17.000076293945312
    6. 'L' → logprob: -17.750076293945312
    7. 'iter' → logprob: -17.875076293945312
    8. '_literal' → logprob: -17.875076293945312
    9. '   ' → logprob: -18.125076293945312
    10. 'iterals' → logprob: -18.375076293945312

Token 664: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.084206375409849e-05
    2. '''.' → logprob: -10.375041007995605
    3. '("' → logprob: -12.500041007995605
    4. '(' → logprob: -12.500041007995605
    5. '(
' → logprob: -14.250041007995605
    6. ' (' → logprob: -14.625041007995605
    7. '('').' → logprob: -14.625041007995605
    8. '(('' → logprob: -15.375041007995605
    9. '```' → logprob: -16.00004005432129
    10. '''' → logprob: -16.25004005432129

Token 665: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.001147837145254016
    2. '''' → logprob: -7.251147747039795
    3. ''.' → logprob: -8.251148223876953
    4. ''' → logprob: -8.876148223876953
    5. ' ''.' → logprob: -10.251148223876953
    6. '"' → logprob: -13.501148223876953
    7. '('' → logprob: -15.251148223876953
    8. '''
' → logprob: -16.001148223876953
    9. '('').' → logprob: -16.751148223876953
    10. ''',' → logprob: -16.751148223876953

Token 666: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.003240697318688035
    2. '''.' → logprob: -5.753240585327148
    3. '.join' → logprob: -10.628240585327148
    4. ''.' → logprob: -10.878240585327148
    5. '('').' → logprob: -11.628240585327148
    6. ''' → logprob: -11.628240585327148
    7. '''' → logprob: -14.253240585327148
    8. ' join' → logprob: -14.878240585327148
    9. '('' → logprob: -15.253240585327148
    10. '.' → logprob: -15.753240585327148

Token 667: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0009120595059357584
    2. 'combined' → logprob: -7.000912189483643
    3. '(' → logprob: -15.000911712646484
    4. 'com' → logprob: -16.375911712646484
    5. ' combined' → logprob: -17.875911712646484
    6. '(
' → logprob: -18.500911712646484
    7. '```' → logprob: -18.500911712646484
    8. 'comb' → logprob: -18.750911712646484
    9. '_comb' → logprob: -19.375911712646484
    10. ')' → logprob: -19.500911712646484

Token 668: 'bined' (ID: 172357)
  Prédit: '_literals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literals' → logprob: -0.13016153872013092
    2. 'combined' → logprob: -2.2551615238189697
    3. 'bined' → logprob: -4.255161762237549
    4. 'l' → logprob: -6.755161762237549
    5. 'ined' → logprob: -7.255161762237549
    6. 'iterals' → logprob: -8.38016128540039
    7. 'inated' → logprob: -8.50516128540039
    8. '(com' → logprob: -8.63016128540039
    9. '_l' → logprob: -9.25516128540039
    10. '_comb' → logprob: -9.63016128540039

Token 669: '_literals' (ID: 139304)
  Prédit: '_literals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literals' → logprob: -2.696889623621246e-06
    2. 'l' → logprob: -13.00000286102295
    3. 'iterals' → logprob: -14.75000286102295
    4. 'L' → logprob: -16.875001907348633
    5. ' Liter' → logprob: -18.375001907348633
    6. 'combined' → logprob: -19.375001907348633
    7. ' literals' → logprob: -19.375001907348633
    8. '_literal' → logprob: -19.500001907348633
    9. '```' → logprob: -19.625001907348633
    10. '_letters' → logprob: -20.250001907348633

Token 670: ')))
' (ID: 12562)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.025180310010910034
    2. '))' → logprob: -3.7751803398132324
    3. ')))
' → logprob: -6.900180339813232
    4. '           ' → logprob: -7.650180339813232
    5. '               ' → logprob: -8.025179862976074
    6. ')))' → logprob: -9.400179862976074
    7. '))

' → logprob: -10.900179862976074
    8. ')' → logprob: -12.150179862976074
    9. ''))
' → logprob: -12.650179862976074
    10. '       ' → logprob: -12.900179862976074

Token 671: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2617270052433014
    2. 'return' → logprob: -2.0117270946502686
    3. '       ' → logprob: -2.5117270946502686
    4. '
' → logprob: -4.5117268562316895
    5. ' return' → logprob: -5.6367268562316895
    6. '   ' → logprob: -7.1367268562316895
    7. '               ' → logprob: -11.386727333068848
    8. '        
' → logprob: -11.511727333068848
    9. '    
' → logprob: -11.761727333068848
    10. '            
' → logprob: -11.886727333068848

Token 672: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11387888342142105
    2. 'if' (adapté à ' if') → logprob: -2.3638789653778076
    3. '       ' → logprob: -4.3638787269592285
    4. 'from' → logprob: -7.2388787269592285
    5. ' return' → logprob: -10.113879203796387
    6. ' if' → logprob: -10.738879203796387
    7. '   ' → logprob: -10.738879203796387
    8. '
' → logprob: -11.113879203796387
    9. '           ' → logprob: -11.613879203796387
    10. 'import' → logprob: -11.863879203796387

Token 673: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002614550176076591
    2. ' len' → logprob: -8.250261306762695
    3. '           ' → logprob: -16.875261306762695
    4. '   ' → logprob: -18.125261306762695
    5. '(len' → logprob: -18.250261306762695
    6. '       ' → logprob: -20.250261306762695
    7. '	len' → logprob: -20.250261306762695
    8. '
' → logprob: -21.625261306762695
    9. ' ' → logprob: -22.250261306762695
    10. 'length' → logprob: -22.375261306762695

Token 674: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.00012094692647224292
    2. '(' → logprob: -9.125121116638184
    3. 'combined' → logprob: -11.500121116638184
    4. '(
' → logprob: -13.500121116638184
    5. '(comp' → logprob: -15.375121116638184
    6. ' (' → logprob: -16.750120162963867
    7. '```' → logprob: -18.000120162963867
    8. ' combined' → logprob: -18.000120162963867
    9. 'com' → logprob: -18.375120162963867
    10. '(`' → logprob: -18.500120162963867

Token 675: 'bined' (ID: 172357)
  Prédit: 'bined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bined' → logprob: -0.10098670423030853
    2. 'combined' → logprob: -2.3509867191314697
    3. 'ined' → logprob: -7.225986480712891
    4. 'b' → logprob: -10.47598648071289
    5. '(com' → logprob: -11.35098648071289
    6. ' combined' → logprob: -12.22598648071289
    7. '_comb' → logprob: -13.10098648071289
    8. '[' → logprob: -14.22598648071289
    9. '```' → logprob: -14.35098648071289
    10. 'inated' → logprob: -14.47598648071289

Token 676: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -2.141186450899113e-05
    2. 'components' → logprob: -11.375020980834961
    3. '_com' → logprob: -12.500020980834961
    4. '(com' → logprob: -13.000020980834961
    5. '_comb' → logprob: -13.000020980834961
    6. '_comp' → logprob: -14.625020980834961
    7. '```' → logprob: -14.750020980834961
    8. '
' → logprob: -15.375020980834961
    9. 'combined' → logprob: -15.625020980834961
    10. '(' → logprob: -15.875020980834961

Token 677: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5789191126823425
    2. ' ==' → logprob: -0.8289191126823425
    3. ')' → logprob: -6.328918933868408
    4. ')==' → logprob: -7.328918933868408
    5. '<|end|>' → logprob: -8.453919410705566
    6. '=' → logprob: -8.578919410705566
    7. '()==' → logprob: -10.078919410705566
    8. '==
' → logprob: -10.953919410705566
    9. '===' → logprob: -11.203919410705566
    10. ']==' → logprob: -11.203919410705566

Token 678: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1475558578968048
    2. ' ==' → logprob: -2.1475558280944824
    3. '>' → logprob: -4.022555828094482
    4. ' >' → logprob: -6.022555828094482
    5. '=' → logprob: -10.64755630493164
    6. '1' → logprob: -10.89755630493164
    7. '==
' → logprob: -11.02255630493164
    8. ' ' → logprob: -12.14755630493164
    9. ')==' → logprob: -12.52255630493164
    10. '()==' → logprob: -12.64755630493164

Token 679: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -14.750007629394531
    4. '   ' → logprob: -15.625007629394531
    5. '```' → logprob: -17.00000762939453
    6. '
' → logprob: -17.37500762939453
    7. '۱' → logprob: -17.62500762939453
    8. '  ' → logprob: -18.62500762939453
    9. '<|end|>' → logprob: -18.62500762939453
    10. '１' → logprob: -19.18750762939453

Token 680: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. '۱' → logprob: -15.750001907348633
    4. '   ' → logprob: -16.500001907348633
    5. '0' → logprob: -17.062501907348633
    6. '```' → logprob: -17.062501907348633
    7. '१' → logprob: -17.500001907348633
    8. '１' → logprob: -17.750001907348633
    9. '
' → logprob: -17.875001907348633
    10. '<|end|>' → logprob: -18.000001907348633

Token 681: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6887350678443909
    2. ':
' → logprob: -0.8137350678443909
    3. ':return' → logprob: -3.813735008239746
    4. '               ' → logprob: -4.063735008239746
    5. 'return' → logprob: -5.313735008239746
    6. '           ' → logprob: -5.563735008239746
    7. ')' → logprob: -6.188735008239746
    8. '):
' → logprob: -6.438735008239746
    9. '):' → logprob: -7.063735008239746
    10. ' return' → logprob: -7.313735008239746

Token 682: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5678207278251648
    2. ' return' → logprob: -1.4428207874298096
    3. 'return' → logprob: -2.0678207874298096
    4. '       ' → logprob: -2.6928207874298096
    5. '           ' → logprob: -6.3178205490112305
    6. '   ' → logprob: -8.06782054901123
    7. ':return' → logprob: -8.31782054901123
    8. '{return' → logprob: -8.44282054901123
    9. '	return' → logprob: -9.81782054901123
    10. '{
' → logprob: -10.06782054901123

Token 683: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000545526563655585
    2. ' return' → logprob: -7.625545501708984
    3. '               ' → logprob: -10.000545501708984
    4. '	return' → logprob: -11.625545501708984
    5. '   ' → logprob: -13.875545501708984
    6. ':return' → logprob: -14.000545501708984
    7. '           ' → logprob: -14.750545501708984
    8. '{return' → logprob: -15.250545501708984
    9. '                   ' → logprob: -15.375545501708984
    10. '       ' → logprob: -15.625545501708984

Token 684: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' → logprob: -7.493430894101039e-05
    2. ' combined' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.75007438659668
    4. '           ' → logprob: -19.62507438659668
    5. '
' → logprob: -21.87507438659668
    6. 'comb' → logprob: -22.12507438659668
    7. 'com' → logprob: -22.37507438659668
    8. 'compiled' → logprob: -23.12507438659668
    9. ' ' → logprob: -23.37507438659668
    10. 'completed' → logprob: -23.50007438659668

Token 685: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -2.1008713702030946e-06
    2. 'components' → logprob: -13.250001907348633
    3. 'Components' → logprob: -16.500001907348633
    4. '_comp' → logprob: -17.250001907348633
    5. '_com' → logprob: -17.500001907348633
    6. '_component' → logprob: -17.500001907348633
    7. '.components' → logprob: -20.125001907348633
    8. '
' → logprob: -20.625001907348633
    9. '_comb' → logprob: -20.750001907348633
    10. 's' → logprob: -21.250001907348633

Token 686: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.300083648762666e-05
    2. '0' → logprob: -9.875053405761719
    3. '[
' → logprob: -14.000053405761719
    4. '
' → logprob: -15.375053405761719
    5. '```' → logprob: -15.500053405761719
    6. '   ' → logprob: -16.50005340576172
    7. '][' → logprob: -17.12505340576172
    8. ' [' → logprob: -17.25005340576172
    9. '           ' → logprob: -17.75005340576172
    10. 'def' → logprob: -17.87505340576172

Token 687: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -15.375014305114746
    4. '
' → logprob: -15.375014305114746
    5. '-' → logprob: -15.875014305114746
    6. '1' → logprob: -16.12501335144043
    7. '[' → logprob: -16.25001335144043
    8. '```' → logprob: -16.50001335144043
    9. ')' → logprob: -17.00001335144043
    10. '  ' → logprob: -17.18751335144043

Token 688: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03718167543411255
    2. '
' → logprob: -3.6621816158294678
    3. ')' → logprob: -5.162181854248047
    4. ')
' → logprob: -5.412181854248047
    5. '       ' → logprob: -7.787181854248047
    6. '            
' → logprob: -9.162181854248047
    7. 'return' → logprob: -10.537181854248047
    8. '    
' → logprob: -11.287181854248047
    9. '),' → logprob: -11.787181854248047
    10. '          ' → logprob: -12.037181854248047

Token 689: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03162112459540367
    2. '       ' → logprob: -3.531621217727661
    3. 'return' → logprob: -6.531620979309082
    4. '
' → logprob: -8.281620979309082
    5. 'else' → logprob: -9.656620979309082
    6. '   ' → logprob: -10.281620979309082
    7. ' return' → logprob: -11.531620979309082
    8. '	       ' → logprob: -11.531620979309082
    9. '        
' → logprob: -11.781620979309082
    10. '               ' → logprob: -11.906620979309082

Token 690: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.470956027507782
    2. '           ' → logprob: -1.3459560871124268
    3. 'return' → logprob: -2.4709560871124268
    4. '
' → logprob: -4.220955848693848
    5. 'else' (adapté à ' else') → logprob: -4.345955848693848
    6. ' else' → logprob: -6.845955848693848
    7. ' return' → logprob: -7.095955848693848
    8. '   ' → logprob: -7.095955848693848
    9. '        
' → logprob: -8.470955848693848
    10. '            
' → logprob: -9.595955848693848

Token 691: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5412536263465881
    2. ':' → logprob: -1.1662535667419434
    3. '               ' → logprob: -3.2912535667419434
    4. 'return' → logprob: -3.4162535667419434
    5. '           ' → logprob: -4.041253566741943
    6. ':return' → logprob: -4.666253566741943
    7. ' return' → logprob: -5.041253566741943
    8. ' :
' → logprob: -6.916253566741943
    9. ' :' → logprob: -7.291253566741943
    10. ',' → logprob: -7.916253566741943

Token 692: '               ' (ID: 506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.32328668236732483
    2. '           ' → logprob: -1.3232866525650024
    3. '       ' → logprob: -5.073286533355713
    4. ' return' → logprob: -5.698286533355713
    5. '               ' → logprob: -8.573287010192871
    6. '   ' → logprob: -9.573287010192871
    7. 'raise' → logprob: -10.198287010192871
    8. '
' → logprob: -10.948287010192871
    9. '{return' → logprob: -11.573287010192871
    10. 'class' → logprob: -12.073287010192871

Token 693: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015459029003977776
    2. 'Literal' → logprob: -4.265459060668945
    3. ' return' → logprob: -7.265459060668945
    4. 'raise' → logprob: -7.890459060668945
    5. '               ' → logprob: -8.765459060668945
    6. 'self' → logprob: -11.140459060668945
    7. '   ' → logprob: -11.890459060668945
    8. '
' → logprob: -12.015459060668945
    9. '                   ' → logprob: -12.015459060668945
    10. '                
' → logprob: -12.140459060668945

Token 694: ' Create' (ID: 6585)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002109693828970194
    2. 'class' → logprob: -7.502109527587891
    3. '#' → logprob: -7.627109527587891
    4. 'raise' → logprob: -7.752109527587891
    5. 'from' → logprob: -8.37710952758789
    6. ' return' → logprob: -8.50210952758789
    7. '       ' → logprob: -9.37710952758789
    8. '           ' → logprob: -10.00210952758789
    9. '   ' → logprob: -10.62710952758789
    10. 'combined' → logprob: -10.87710952758789

Token 695: ' a' (ID: 261)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.0005195511621423066
    2. ' Literal' → logprob: -8.375519752502441
    3. 'self' → logprob: -9.000519752502441
    4. 'Composite' → logprob: -9.500519752502441
    5. 'a' → logprob: -10.875519752502441
    6. '   ' → logprob: -11.125519752502441
    7. 'Combined' → logprob: -11.250519752502441
    8. 'Compound' → logprob: -11.375519752502441
    9. '               ' → logprob: -11.750519752502441
    10. 'class' → logprob: -11.875519752502441

Token 696: ' Compound' (ID: 98467)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.04990669712424278
    2. 'class' → logprob: -3.5499067306518555
    3. 'Composite' → logprob: -4.6749067306518555
    4. 'Compound' → logprob: -5.0499067306518555
    5. 'Sequence' → logprob: -6.4249067306518555
    6. 'Conc' → logprob: -6.5499067306518555
    7. 'Concat' → logprob: -7.9249067306518555
    8. 'Re' → logprob: -8.674906730651855
    9. 'Combined' → logprob: -8.674906730651855
    10. 'self' → logprob: -8.924906730651855

Token 697: 'Sequence' (ID: 17333)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.04853660613298416
    2. 'class' → logprob: -4.173536777496338
    3. '(' → logprob: -4.298536777496338
    4. 'Component' → logprob: -4.923536777496338
    5. 'Sequence' → logprob: -5.673536777496338
    6. '(
' → logprob: -5.923536777496338
    7. ' Literal' → logprob: -6.423536777496338
    8. 'Compound' → logprob: -6.548536777496338
    9. 'component' → logprob: -7.673536777496338
    10. 'Composite' → logprob: -7.673536777496338

Token 698: ' to' (ID: 316)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.4894576668739319
    2. '(' → logprob: -1.364457607269287
    3. 'class' → logprob: -2.114457607269287
    4. '[' → logprob: -6.239457607269287
    5. 'Compound' → logprob: -6.239457607269287
    6. 'Literal' → logprob: -6.864457607269287
    7. 'Composite' → logprob: -7.364457607269287
    8. ' class' → logprob: -7.614457607269287
    9. '<|end|>' → logprob: -7.614457607269287
    10. '[
' → logprob: -7.864457607269287

Token 699: ' keep' (ID: 3357)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.038371481001377106
    2. '
' → logprob: -4.288371562957764
    3. 'return' → logprob: -4.288371562957764
    4. 'combine' → logprob: -5.413371562957764
    5. 'self' → logprob: -6.413371562957764
    6. 'pass' → logprob: -6.913371562957764
    7. '   ' → logprob: -7.288371562957764
    8. 'raise' → logprob: -8.038371086120605
    9. '           ' → logprob: -8.538371086120605
    10. '...' → logprob: -8.788371086120605

Token 700: ' abstra' (ID: 186216)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combined' → logprob: -0.003903026692569256
    2. ' combined' → logprob: -6.253902912139893
    3. 'comb' → logprob: -7.753902912139893
    4. 'the' → logprob: -7.878902912139893
    5. '               ' → logprob: -8.37890338897705
    6. 'components' → logprob: -8.62890338897705
    7. 'com' → logprob: -8.62890338897705
    8. 'self' → logprob: -8.75390338897705
    9. 'compound' → logprob: -8.75390338897705
    10. '           ' → logprob: -9.37890338897705

Token 701: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -9.372294698550832e-06
    2. 'cts' → logprob: -11.875009536743164
    3. 'ction' → logprob: -14.250009536743164
    4. 'cte' → logprob: -15.125009536743164
    5. 'ctions' → logprob: -15.375009536743164
    6. '
' → logprob: -15.375009536743164
    7. 'act' → logprob: -15.375009536743164
    8. '...' → logprob: -16.000009536743164
    9. '```' → logprob: -16.000009536743164
    10. 'CT' → logprob: -16.375009536743164

Token 702: ' uniform' (ID: 21219)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.10013625025749207
    2. '               ' → logprob: -3.3501362800598145
    3. 'class' → logprob: -3.7251362800598145
    4. '(' → logprob: -4.1001362800598145
    5. '[
' → logprob: -5.2251362800598145
    6. '
' → logprob: -5.6001362800598145
    7. '                   ' → logprob: -5.9751362800598145
    8. '           ' → logprob: -6.2251362800598145
    9. ',' → logprob: -6.8501362800598145
    10. 'compound' → logprob: -7.2251362800598145

Token 703: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9505897164344788
    2. '
' → logprob: -1.325589656829834
    3. '(
' → logprob: -1.825589656829834
    4. 'class' → logprob: -1.950589656829834
    5. 'return' → logprob: -4.075589656829834
    6. '(' → logprob: -4.075589656829834
    7. ' return' → logprob: -6.575589656829834
    8. '                
' → logprob: -6.575589656829834
    9. ' class' → logprob: -6.700589656829834
    10. '                   ' → logprob: -6.950589656829834

Token 704: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11286287009716034
    2. '
' → logprob: -2.9878628253936768
    3. 'class' → logprob: -3.3628628253936768
    4. '(' → logprob: -5.487863063812256
    5. '                   ' → logprob: -5.612863063812256
    6. '   ' → logprob: -5.862863063812256
    7. '           ' → logprob: -6.487863063812256
    8. '(
' → logprob: -6.737863063812256
    9. 'return' → logprob: -6.737863063812256
    10. ',' → logprob: -7.112863063812256

Token 705: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01711304299533367
    2. '               ' → logprob: -4.642113208770752
    3. 'class' → logprob: -5.142113208770752
    4. 'from' → logprob: -6.892113208770752
    5. ' return' → logprob: -7.892113208770752
    6. '           ' → logprob: -10.392112731933594
    7. '       ' → logprob: -11.017112731933594
    8. '
' → logprob: -11.267112731933594
    9. '                   ' → logprob: -11.392112731933594
    10. 'raise' → logprob: -11.892112731933594

Token 706: ' Compound' (ID: 98467)
  Prédit: 'Compound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Compound' → logprob: -0.00020246754866093397
    2. ' Compound' → logprob: -8.625202178955078
    3. 'self' → logprob: -10.875202178955078
    4. 'Composite' → logprob: -12.625202178955078
    5. 'Combined' → logprob: -15.500202178955078
    6. '           ' → logprob: -16.000202178955078
    7. '   ' → logprob: -16.375202178955078
    8. 'Sequence' → logprob: -16.500202178955078
    9. '       ' → logprob: -16.750202178955078
    10. '               ' → logprob: -16.750202178955078

Token 707: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -3.774276774493046e-05
    2. '(' → logprob: -10.375038146972656
    3. '(
' → logprob: -12.875038146972656
    4. '([' → logprob: -13.375038146972656
    5. 'Component' → logprob: -14.375038146972656
    6. 'sequence' → logprob: -14.625038146972656
    7. 'Components' → logprob: -14.625038146972656
    8. '[' → logprob: -15.000038146972656
    9. '([
' → logprob: -15.875038146972656
    10. '_sequence' → logprob: -16.000038146972656

Token 708: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.04671026021242142
    2. '(' → logprob: -3.296710252761841
    3. '(comp' → logprob: -5.29671049118042
    4. '(
' → logprob: -5.67171049118042
    5. 'combined' → logprob: -9.546710014343262
    6. '([' → logprob: -9.796710014343262
    7. ' (' → logprob: -11.796710014343262
    8. '(`' → logprob: -11.796710014343262
    9. '((' → logprob: -11.921710014343262
    10. '(component' → logprob: -12.296710014343262

Token 709: 'bined' (ID: 172357)
  Prédit: 'bined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bined' → logprob: -0.13424694538116455
    2. 'ponents' → logprob: -2.134246826171875
    3. 'ponent' → logprob: -5.384246826171875
    4. 'p' → logprob: -6.384246826171875
    5. '```' → logprob: -8.009246826171875
    6. '_' → logprob: -8.634246826171875
    7. '[' → logprob: -8.759246826171875
    8. 'combined' → logprob: -10.259246826171875
    9. '_components' → logprob: -10.384246826171875
    10. '...' → logprob: -10.384246826171875

Token 710: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.002027850365266204
    2. 'Components' → logprob: -6.252027988433838
    3. 'components' → logprob: -9.25202751159668
    4. '_sequences' → logprob: -13.37702751159668
    5. '_' → logprob: -15.12702751159668
    6. 'Sequence' → logprob: -15.37702751159668
    7. '```' → logprob: -15.50202751159668
    8. '_sequence' → logprob: -15.62702751159668
    9. '_comp' → logprob: -16.37702751159668
    10. '_COMPONENT' → logprob: -16.50202751159668

Token 711: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001032691914588213
    2. '<|end|>' → logprob: -7.126032829284668
    3. ')
' → logprob: -9.001032829284668
    4. '       ' → logprob: -10.376032829284668
    5. '[' → logprob: -10.876032829284668
    6. '<|end|>' → logprob: -11.251032829284668
    7. '           ' → logprob: -11.751032829284668
    8. '   ' → logprob: -12.001032829284668
    9. ' )' → logprob: -12.126032829284668
    10. ']' → logprob: -12.126032829284668

Token 712: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1520315706729889
    2. '

' → logprob: -2.027031660079956
    3. 'class' → logprob: -5.277031421661377
    4. '   ' → logprob: -5.527031421661377
    5. '


' → logprob: -9.277031898498535
    6. '```' → logprob: -10.277031898498535
    7. '<class' → logprob: -10.527031898498535
    8. '    
' → logprob: -10.777031898498535
    9. '
' → logprob: -11.652031898498535
    10. '<|end|>' → logprob: -11.902031898498535

Token 713: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3708290457725525
    2. '   ' → logprob: -1.2458291053771973
    3. 'class' → logprob: -4.745829105377197
    4. '    
' → logprob: -4.870829105377197
    5. '

' → logprob: -5.620829105377197
    6. 'def' (adapté à ' def') → logprob: -6.620829105377197
    7. '<|end|>' → logprob: -8.495828628540039
    8. '        
' → logprob: -8.870828628540039
    9. '```' → logprob: -9.120828628540039
    10. '  
' → logprob: -9.495828628540039

Token 714: ' _' (ID: 1175)
  Prédit: '_parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -0.06739993393421173
    2. ' _' → logprob: -2.8173999786376953
    3. '_skip' → logprob: -6.192399978637695
    4. '_pe' → logprob: -6.692399978637695
    5. '_next' → logprob: -6.817399978637695
    6. '_current' → logprob: -7.567399978637695
    7. '_' → logprob: -8.317399978637695
    8. '_try' → logprob: -10.192399978637695
    9. '_get' → logprob: -10.317399978637695
    10. '_def' → logprob: -10.317399978637695

Token 715: 'peek' (ID: 163275)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0010022050701081753
    2. 'peek' → logprob: -7.251002311706543
    3. '_parse' → logprob: -8.376002311706543
    4. 'skip' → logprob: -10.501002311706543
    5. 'consume' → logprob: -10.626002311706543
    6. 'advance' → logprob: -12.626002311706543
    7. 'next' → logprob: -13.001002311706543
    8. 'pos' → logprob: -13.751002311706543
    9. ' parse' → logprob: -13.876002311706543
    10. 'current' → logprob: -14.251002311706543

Token 716: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013232150813564658
    2. '(self' → logprob: -6.751323223114014
    3. '(' → logprob: -9.626322746276855
    4. ' ()' → logprob: -10.126322746276855
    5. 'self' → logprob: -10.376322746276855
    6. '<|end|>' → logprob: -12.376322746276855
    7. '()>' → logprob: -12.876322746276855
    8. '```' → logprob: -13.751322746276855
    9. '()
' → logprob: -14.251322746276855
    10. '()">' → logprob: -14.251322746276855

Token 717: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006203461904078722
    2. '(self' → logprob: -5.256203651428223
    3. '<|end|>' → logprob: -8.131203651428223
    4. 'self' → logprob: -8.881203651428223
    5. '(' → logprob: -8.881203651428223
    6. '()>' → logprob: -9.006203651428223
    7. '()<' → logprob: -9.756203651428223
    8. ' ()' → logprob: -10.006203651428223
    9. ' ' → logprob: -11.006203651428223
    10. '()">' → logprob: -11.131203651428223

Token 718: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5774160027503967
    2. '()' → logprob: -0.8274160027503967
    3. '(' → logprob: -6.577415943145752
    4. 'self' → logprob: -9.82741641998291
    5. ' ()' → logprob: -11.82741641998291
    6. '()
' → logprob: -12.32741641998291
    7. '(
' → logprob: -12.45241641998291
    8. ' (' → logprob: -13.45241641998291
    9. '():' → logprob: -13.45241641998291
    10. '():
' → logprob: -13.45241641998291

Token 719: ' Optional' (ID: 19351)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3874730169773102
    2. 'self' → logprob: -1.1374729871749878
    3. ' None' → logprob: -7.512473106384277
    4. 'None' → logprob: -9.887473106384277
    5. ' ' → logprob: -12.387473106384277
    6. '(self' → logprob: -15.637473106384277
    7. '	self' → logprob: -15.762473106384277
    8. '   ' → logprob: -16.51247215270996
    9. '[self' → logprob: -17.38747215270996
    10. '-self' → logprob: -17.51247215270996

Token 720: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0025601962115615606
    2. '[int' → logprob: -6.502560138702393
    3. '(str' → logprob: -7.127560138702393
    4. '[self' → logprob: -9.12756061553955
    5. '[' → logprob: -9.25256061553955
    6. '[
' → logprob: -11.00256061553955
    7. 'str' → logprob: -11.62756061553955
    8. '(self' → logprob: -11.75256061553955
    9. 'self' → logprob: -12.25256061553955
    10. '(' → logprob: -12.50256061553955

Token 721: ']:
' (ID: 22152)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.725423276424408
    2. '():
' → logprob: -1.1004233360290527
    3. '()' → logprob: -1.7254233360290527
    4. ':' → logprob: -6.850423336029053
    5. ']:' → logprob: -6.975423336029053
    6. ']' → logprob: -7.225423336029053
    7. '):
' → logprob: -7.725423336029053
    8. '):' → logprob: -7.725423336029053
    9. '   ' → logprob: -7.850423336029053
    10. ']:
' → logprob: -7.975423336029053

Token 722: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7281394600868225
    2. '       ' → logprob: -0.8531394600868225
    3. 'if' → logprob: -3.1031394004821777
    4. 'return' → logprob: -3.3531394004821777
    5. ' if' → logprob: -5.603139400482178
    6. ' return' → logprob: -5.853139400482178
    7. '()
' → logprob: -6.103139400482178
    8. '   ' → logprob: -6.353139400482178
    9. 'None' → logprob: -8.353139877319336
    10. 'self' → logprob: -9.478139877319336

Token 723: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5852873921394348
    2. 'if' → logprob: -0.8352873921394348
    3. ' if' → logprob: -5.085287570953369
    4. ' return' → logprob: -5.835287570953369
    5. '       ' → logprob: -9.585287094116211
    6. 'self' → logprob: -9.710287094116211
    7. '   ' → logprob: -10.085287094116211
    8. '
' → logprob: -10.835287094116211
    9. '        
' → logprob: -13.585287094116211
    10. 'None' → logprob: -14.210287094116211

Token 724: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004925496876239777
    2. ' self' → logprob: -5.504925727844238
    3. 'return' → logprob: -7.504925727844238
    4. 'None' → logprob: -8.254925727844238
    5. ' None' → logprob: -11.254925727844238
    6. ' return' → logprob: -11.254925727844238
    7. '   ' → logprob: -11.754925727844238
    8. ' ' → logprob: -13.379925727844238
    9. '
' → logprob: -14.629925727844238
    10. '       ' → logprob: -15.129925727844238

Token 725: ' Peek' (ID: 173714)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0464988574385643
    2. 'return' → logprob: -3.2964987754821777
    3. ' if' → logprob: -5.046498775482178
    4. '       ' → logprob: -6.296498775482178
    5. ' return' → logprob: -8.921499252319336
    6. 'while' → logprob: -12.046499252319336
    7. '```' → logprob: -12.921499252319336
    8. 'Return' → logprob: -13.046499252319336
    9. '
' → logprob: -13.421499252319336
    10. 'If' → logprob: -14.421499252319336

Token 726: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00034750174381770194
    2. '()
' → logprob: -8.625347137451172
    3. 'self' → logprob: -9.750347137451172
    4. '(self' → logprob: -9.875347137451172
    5. '():
' → logprob: -11.500347137451172
    6. '<|end|>' → logprob: -11.500347137451172
    7. ' ()' → logprob: -12.250347137451172
    8. '():' → logprob: -12.375347137451172
    9. '()`' → logprob: -12.500347137451172
    10. 'def' → logprob: -12.750347137451172

Token 727: ' current' (ID: 2208)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.6887798309326172
    2. ' next' → logprob: -0.9387798309326172
    3. 'next' → logprob: -2.563779830932617
    4. 'self' → logprob: -4.188779830932617
    5. '_current' → logprob: -5.313779830932617
    6. '_data' → logprob: -5.313779830932617
    7. '_char' → logprob: -6.438779830932617
    8. 'current' → logprob: -7.188779830932617
    9. ' current' → logprob: -7.313779830932617
    10. '_character' → logprob: -7.688779830932617

Token 728: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.4284767806529999
    2. ' character' → logprob: -2.1784768104553223
    3. 'char' → logprob: -2.3034768104553223
    4. '<|end|>' → logprob: -2.8034768104553223
    5. '_char' → logprob: -3.3034768104553223
    6. '_character' → logprob: -3.9284768104553223
    7. 'token' → logprob: -4.303476810455322
    8. '_token' → logprob: -6.553476810455322
    9. ' ' → logprob: -6.803476810455322
    10. ' token' → logprob: -7.803476810455322

Token 729: ' without' (ID: 2935)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.043083347380161285
    2. '       ' → logprob: -3.293083429336548
    3. '()
' → logprob: -5.543083190917969
    4. '   ' → logprob: -7.543083190917969
    5. ')' → logprob: -8.418083190917969
    6. 'self' → logprob: -9.918083190917969
    7. '           ' → logprob: -10.168083190917969
    8. '():
' → logprob: -10.168083190917969
    9. ' ' → logprob: -10.418083190917969
    10. '(self' → logprob: -10.543083190917969

Token 730: ' consuming' (ID: 47006)
  Prédit: ' advancing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' advancing' → logprob: -0.14472481608390808
    2. ' consuming' → logprob: -2.1447248458862305
    3. 'cons' → logprob: -4.3947248458862305
    4. ' moving' → logprob: -5.7697248458862305
    5. 'adv' → logprob: -6.3947248458862305
    6. 'moving' → logprob: -8.26972484588623
    7. 'advance' → logprob: -8.64472484588623
    8. 'consume' → logprob: -10.76972484588623
    9. 'self' → logprob: -10.89472484588623
    10. '_consum' → logprob: -11.64472484588623

Token 731: ' it' (ID: 480)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11469022184610367
    2. ' it' → logprob: -3.1146903038024902
    3. 'self' → logprob: -3.4896903038024902
    4. ' the' → logprob: -4.23969030380249
    5. ')' → logprob: -5.23969030380249
    6. '()
' → logprob: -5.86469030380249
    7. '(self' → logprob: -5.98969030380249
    8. 'the' → logprob: -6.36469030380249
    9. '.' → logprob: -6.48969030380249
    10. '   ' → logprob: -7.23969030380249

Token 732: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01853746734559536
    2. '   ' → logprob: -5.518537521362305
    3. '():
' → logprob: -5.643537521362305
    4. '       ' → logprob: -5.768537521362305
    5. '():' → logprob: -5.768537521362305
    6. '()
' → logprob: -6.018537521362305
    7. ')' → logprob: -7.268537521362305
    8. '.' → logprob: -7.643537521362305
    9. '(self' → logprob: -7.768537521362305
    10. ':' → logprob: -8.768537521362305

Token 733: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20093165338039398
    2. 'if' → logprob: -2.3259315490722656
    3. '   ' → logprob: -3.3259315490722656
    4. ' if' → logprob: -4.075931549072266
    5. 'return' → logprob: -4.200931549072266
    6. '```' → logprob: -4.700931549072266
    7. '
' → logprob: -5.450931549072266
    8. ' return' → logprob: -6.575931549072266
    9. ')' → logprob: -7.325931549072266
    10. '        
' → logprob: -8.325931549072266

Token 734: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022592443972826004
    2. '
' → logprob: -5.147592544555664
    3. 'return' → logprob: -5.397592544555664
    4. 'if' → logprob: -5.647592544555664
    5. '   ' → logprob: -5.772592544555664
    6. '```' → logprob: -6.022592544555664
    7. ')' → logprob: -6.397592544555664
    8. ' if' → logprob: -7.772592544555664
    9. ' return' → logprob: -8.272592544555664
    10. '        
' → logprob: -8.522592544555664

Token 735: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1659577339887619
    2. '       ' → logprob: -2.4159576892852783
    3. 'return' → logprob: -2.9159576892852783
    4. ' if' → logprob: -4.665957927703857
    5. ' return' → logprob: -9.6659574508667
    6. '```' → logprob: -11.7909574508667
    7. '   ' → logprob: -13.1659574508667
    8. 'try' → logprob: -15.7909574508667
    9. '        
' → logprob: -16.165958404541016
    10. '	if' → logprob: -16.165958404541016

Token 736: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6932265758514404
    2. 'return' → logprob: -0.6932265758514404
    3. ' if' → logprob: -9.94322681427002
    4. ' return' → logprob: -10.44322681427002
    5. '       ' → logprob: -13.44322681427002
    6. 'self' → logprob: -15.06822681427002
    7. '
' → logprob: -15.44322681427002
    8. '   ' → logprob: -15.69322681427002
    9. '        
' → logprob: -17.318225860595703
    10. 'try' → logprob: -17.443225860595703

Token 737: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005233882926404476
    2. ' self' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.005233764648438
    4. '	self' → logprob: -18.005233764648438
    5. '(self' → logprob: -18.380233764648438
    6. '       ' → logprob: -18.380233764648438
    7. ' ' → logprob: -18.505233764648438
    8. '_self' → logprob: -18.630233764648438
    9. '0' → logprob: -19.255233764648438
    10. ' ' → logprob: -19.380233764648438

Token 738: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0002457238151691854
    2. '_pos' → logprob: -8.625246047973633
    3. '_' → logprob: -10.000246047973633
    4. ' _' → logprob: -11.375246047973633
    5. '.' → logprob: -13.125246047973633
    6. '_self' → logprob: -13.250246047973633
    7. '<_' → logprob: -13.375246047973633
    8. '   ' → logprob: -14.250246047973633
    9. '
' → logprob: -14.500246047973633
    10. '_<' → logprob: -15.250246047973633

Token 739: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1875571544806007e-05
    2. '_pos' → logprob: -11.500011444091797
    3. ' pos' → logprob: -14.000011444091797
    4. 'position' → logprob: -15.250011444091797
    5. '
' → logprob: -15.625011444091797
    6. 'data' → logprob: -16.500011444091797
    7. '_data' → logprob: -16.625011444091797
    8. '	pos' → logprob: -17.000011444091797
    9. '   ' → logprob: -17.250011444091797
    10. ' ' → logprob: -17.750011444091797

Token 740: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.004798088222742081
    2. ' <' → logprob: -5.37979793548584
    3. '<len' → logprob: -9.50479793548584
    4. '>=' → logprob: -9.87979793548584
    5. '<size' → logprob: -10.75479793548584
    6. '<int' → logprob: -11.62979793548584
    7. '<data' → logprob: -13.00479793548584
    8. '[' → logprob: -13.12979793548584
    9. '<std' → logprob: -13.25479793548584
    10. '<n' → logprob: -13.25479793548584

Token 741: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009156247251667082
    2. ' self' → logprob: -7.00091552734375
    3. 'len' → logprob: -12.37591552734375
    4. ' len' → logprob: -17.12591552734375
    5. '	self' → logprob: -19.25091552734375
    6. '=self' → logprob: -19.75091552734375
    7. '(self' → logprob: -20.25091552734375
    8. '
' → logprob: -20.50091552734375
    9. '       ' → logprob: -20.62591552734375
    10. '_self' → logprob: -20.62591552734375

Token 742: '._' (ID: 2697)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.010124237276613712
    2. '._' → logprob: -5.135124206542969
    3. '_len' → logprob: -5.510124206542969
    4. ' _' → logprob: -9.635124206542969
    5. 'self' → logprob: -10.260124206542969
    6. '_self' → logprob: -10.760124206542969
    7. 'length' → logprob: -12.635124206542969
    8. '_lengths' → logprob: -12.760124206542969
    9. '.length' → logprob: -13.260124206542969
    10. '_l' → logprob: -13.385124206542969

Token 743: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -3.8889261304575484e-06
    2. '_length' → logprob: -13.250003814697266
    3. ' length' → logprob: -13.375003814697266
    4. 'len' → logprob: -15.625003814697266
    5. 'ength' → logprob: -16.500003814697266
    6. 'position' → logprob: -16.750003814697266
    7. '	length' → logprob: -16.750003814697266
    8. 'data' → logprob: -17.250003814697266
    9. 'pos' → logprob: -17.375003814697266
    10. '
' → logprob: -17.625003814697266

Token 744: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3153071701526642
    2. ':' → logprob: -1.3153071403503418
    3. ':return' → logprob: -7.190307140350342
    4. '):
' → logprob: -7.440307140350342
    5. 'and' → logprob: -8.9403076171875
    6. ' and' → logprob: -9.3153076171875
    7. '):' → logprob: -9.3153076171875
    8. '[' → logprob: -9.5653076171875
    9. '<|end|>' → logprob: -9.9403076171875
    10. ')' → logprob: -9.9403076171875

Token 745: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24196751415729523
    2. 'return' → logprob: -1.6169675588607788
    3. ' return' → logprob: -4.116967678070068
    4. ':return' → logprob: -10.24196720123291
    5. '	return' → logprob: -10.61696720123291
    6. '{return' → logprob: -11.11696720123291
    7. '   ' → logprob: -11.36696720123291
    8. '
' → logprob: -11.61696720123291
    9. '	       ' → logprob: -12.49196720123291
    10. '            
' → logprob: -12.61696720123291

Token 746: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.735893965815194e-05
    2. ' return' → logprob: -11.000017166137695
    3. '           ' → logprob: -14.375017166137695
    4. '
' → logprob: -16.750017166137695
    5. '	return' → logprob: -18.500017166137695
    6. '   ' → logprob: -20.250017166137695
    7. '            
' → logprob: -20.250017166137695
    8. 'eturn' → logprob: -20.625017166137695
    9. '{return' → logprob: -20.875017166137695
    10. '```' → logprob: -21.125017166137695

Token 747: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.836499985889532e-05
    2. ' self' → logprob: -9.7500581741333
    3. '(self' → logprob: -19.375059127807617
    4. '[self' → logprob: -19.500059127807617
    5. '
' → logprob: -19.625059127807617
    6. '=self' → logprob: -19.875059127807617
    7. '_self' → logprob: -19.875059127807617
    8. '`' → logprob: -20.500059127807617
    9. '	self' → logprob: -20.500059127807617
    10. '$self' → logprob: -21.625059127807617

Token 748: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.875
    3. '_' → logprob: -16.875
    4. 'self' → logprob: -17.125
    5. '_self' → logprob: -17.875
    6. '._
' → logprob: -17.875
    7. '
' → logprob: -18.125
    8. ' .' → logprob: -18.5
    9. ']._' → logprob: -18.625
    10. '   ' → logprob: -18.75

Token 749: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.011082365177571774
    2. '_data' → logprob: -4.511082172393799
    3. 'pos' → logprob: -11.136082649230957
    4. '_pos' → logprob: -11.636082649230957
    5. '
' → logprob: -12.511082649230957
    6. ' data' → logprob: -12.761082649230957
    7. '```' → logprob: -14.011082649230957
    8. '.data' → logprob: -14.636082649230957
    9. 'self' → logprob: -14.636082649230957
    10. '_' → logprob: -14.636082649230957

Token 750: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0007441143970936537
    2. '[' → logprob: -7.625744342803955
    3. 'self' → logprob: -8.375743865966797
    4. '[
' → logprob: -10.625743865966797
    5. ' self' → logprob: -14.000743865966797
    6. '[s' → logprob: -16.125743865966797
    7. '```' → logprob: -16.250743865966797
    8. ' [' → logprob: -16.625743865966797
    9. '	self' → logprob: -16.750743865966797
    10. '[_' → logprob: -17.000743865966797

Token 751: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.25198766589164734
    2. '_pos' → logprob: -1.5019876956939697
    3. '_' → logprob: -10.75198745727539
    4. ' _' → logprob: -10.87698745727539
    5. '_p' → logprob: -12.12698745727539
    6. '.' → logprob: -12.87698745727539
    7. '
' → logprob: -13.00198745727539
    8. '_code' → logprob: -13.62698745727539
    9. '_self' → logprob: -14.50198745727539
    10. '[_' → logprob: -14.75198745727539

Token 752: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -7.941850526549388e-06
    2. '_pos' → logprob: -11.750007629394531
    3. ' pos' → logprob: -18.12500762939453
    4. '.pos' → logprob: -19.37500762939453
    5. '	pos' → logprob: -19.87500762939453
    6. 'position' → logprob: -21.00000762939453
    7. 'Pos' → logprob: -21.50000762939453
    8. ' ' → logprob: -22.50000762939453
    9. '[pos' → logprob: -22.50000762939453
    10. '
' → logprob: -22.75000762939453

Token 753: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017763269133865833
    2. ']
' → logprob: -6.626776218414307
    3. ' ]' → logprob: -7.751776218414307
    4. '<|end|>' → logprob: -11.251776695251465
    5. '<|end|>' → logprob: -12.876776695251465
    6. ' ]
' → logprob: -13.626776695251465
    7. '       ' → logprob: -14.126776695251465
    8. '   ' → logprob: -14.376776695251465
    9. ' ' → logprob: -14.626776695251465
    10. '[' → logprob: -15.251776695251465

Token 754: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 755: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.702186107635498
    2. 'return' (adapté à ' return') → logprob: -0.827186107635498
    3. 'else' → logprob: -3.202186107635498
    4. ' return' → logprob: -5.077186107635498
    5. '
' → logprob: -5.327186107635498
    6. '   ' → logprob: -5.827186107635498
    7. '        
' → logprob: -6.077186107635498
    8. ' else' → logprob: -6.452186107635498
    9. ':return' → logprob: -6.452186107635498
    10. '```' → logprob: -6.577186107635498

Token 756: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.615255839889869e-05
    2. ' None' → logprob: -9.250096321105957
    3. '_None' → logprob: -20.62509536743164
    4. '(None' → logprob: -21.87509536743164
    5. ',None' → logprob: -22.75009536743164
    6. '=None' → logprob: -22.75009536743164
    7. 'none' → logprob: -23.00009536743164
    8. '_none' → logprob: -24.37509536743164
    9. 'No' → logprob: -24.75009536743164
    10. '
' → logprob: -25.12509536743164

Token 757: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 758: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09379037469625473
    2. 'def' → logprob: -2.468790292739868
    3. ' def' → logprob: -5.593790531158447
    4. '```' → logprob: -7.218790531158447
    5. ' ' → logprob: -8.593790054321289
    6. '    
' → logprob: -9.593790054321289
    7. '  ' → logprob: -10.343790054321289
    8. ' 
' → logprob: -11.093790054321289
    9. '<|end|>' → logprob: -11.343790054321289
    10. '  
' → logprob: -11.468790054321289

Token 759: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01860686205327511
    2. '   ' → logprob: -4.143606662750244
    3. ' def' → logprob: -6.018606662750244
    4. '    
' → logprob: -9.518607139587402
    5. '```' → logprob: -10.643607139587402
    6. '
' → logprob: -11.143607139587402
    7. ' 
' → logprob: -11.768607139587402
    8. '  
' → logprob: -12.018607139587402
    9. ' ' → logprob: -12.643607139587402
    10. '	def' → logprob: -13.393607139587402

Token 760: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.123603105545044
    2. '_cons' → logprob: -1.123603105545044
    3. '_parse' → logprob: -1.373603105545044
    4. '_next' → logprob: -3.123603105545044
    5. '_try' → logprob: -4.123602867126465
    6. '_accept' → logprob: -4.373602867126465
    7. '_skip' → logprob: -4.498602867126465
    8. '_current' → logprob: -5.998602867126465
    9. ' _' → logprob: -6.248602867126465
    10. '_expect' → logprob: -6.373602867126465

Token 761: 'consume' (ID: 166897)
  Prédit: 'consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.47751620411872864
    2. 'advance' → logprob: -0.9775161743164062
    3. 'next' → logprob: -5.727516174316406
    4. 'eat' → logprob: -9.727516174316406
    5. '_next' → logprob: -10.227516174316406
    6. 'peek' → logprob: -10.477516174316406
    7. 'read' → logprob: -10.977516174316406
    8. 'parse' → logprob: -11.227516174316406
    9. 'get' → logprob: -11.602516174316406
    10. 'skip' → logprob: -12.352516174316406

Token 762: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.26453539729118347
    2. '()' → logprob: -1.5145354270935059
    3. '(' → logprob: -4.514535427093506
    4. ' (' → logprob: -7.014535427093506
    5. ' ()' → logprob: -8.514534950256348
    6. 'self' → logprob: -8.514534950256348
    7. ' ' → logprob: -9.389534950256348
    8. '(
' → logprob: -10.514534950256348
    9. '()(' → logprob: -10.764534950256348
    10. '<|end|>' → logprob: -10.764534950256348

Token 763: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6393802762031555
    2. '()' → logprob: -0.7643802762031555
    3. ')' → logprob: -6.13938045501709
    4. 'self' → logprob: -6.63938045501709
    5. '(' → logprob: -6.63938045501709
    6. '())' → logprob: -6.76438045501709
    7. '():' → logprob: -7.76438045501709
    8. 'char' → logprob: -9.51438045501709
    9. '():
' → logprob: -10.01438045501709
    10. '_char' → logprob: -10.26438045501709

Token 764: ' expected' (ID: 5930)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2532997131347656
    2. ')' → logprob: -2.2532997131347656
    3. 'n' → logprob: -2.5032997131347656
    4. ' ' → logprob: -4.128299713134766
    5. 'amount' → logprob: -5.003299713134766
    6. 'expected' → logprob: -5.628299713134766
    7. ' n' → logprob: -5.753299713134766
    8. 'offset' → logprob: -6.253299713134766
    9. 'char' → logprob: -6.253299713134766
    10. 'step' → logprob: -7.128299713134766

Token 765: ':' (ID: 25)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.2786707878112793
    2. ':' → logprob: -1.5286707878112793
    3. ':str' → logprob: -4.278670787811279
    4. ')' → logprob: -5.153670787811279
    5. 'char' → logprob: -5.903670787811279
    6. '_token' → logprob: -6.278670787811279
    7. '):' → logprob: -6.903670787811279
    8. '_chars' → logprob: -7.278670787811279
    9. '_str' → logprob: -9.403671264648438
    10. '=None' → logprob: -9.403671264648438

Token 766: ' Optional' (ID: 19351)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03980667144060135
    2. 'Optional' → logprob: -3.289806604385376
    3. ' str' → logprob: -6.664806842803955
    4. ' Optional' → logprob: -7.664806842803955
    5. 'Union' → logprob: -11.414806365966797
    6. 'char' → logprob: -12.414806365966797
    7. '[str' → logprob: -12.664806365966797
    8. '(str' → logprob: -15.039806365966797
    9. '(Optional' → logprob: -15.164806365966797
    10. ' Union' → logprob: -15.289806365966797

Token 767: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -9.253090865968261e-06
    2. 'str' → logprob: -11.625009536743164
    3. '[int' → logprob: -15.875009536743164
    4. '=str' → logprob: -16.500009536743164
    5. ':str' → logprob: -16.875009536743164
    6. '[' → logprob: -18.875009536743164
    7. '	str' → logprob: -19.375009536743164
    8. 'char' → logprob: -19.625009536743164
    9. ' str' → logprob: -19.875009536743164
    10. '(str' → logprob: -20.000009536743164

Token 768: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26959434151649475
    2. '=' → logprob: -1.8945943117141724
    3. '=None' → logprob: -2.519594430923462
    4. ' =' → logprob: -5.269594192504883
    5. ')=' → logprob: -8.644594192504883
    6. ']' → logprob: -9.644594192504883
    7. '=False' → logprob: -11.394594192504883
    8. '])' → logprob: -11.894594192504883
    9. '):
' → logprob: -12.269594192504883
    10. '`)' → logprob: -12.394594192504883

Token 769: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.812563955783844
    2. '=' → logprob: -0.812563955783844
    3. '=None' → logprob: -2.187563896179199
    4. ' =' → logprob: -8.3125638961792
    5. ')=' → logprob: -9.5625638961792
    6. '=False' → logprob: -10.1875638961792
    7. '):
' → logprob: -11.9375638961792
    8. '=True' → logprob: -12.4375638961792
    9. '):' → logprob: -12.5625638961792
    10. ':' → logprob: -13.4375638961792

Token 770: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.2729995988775045e-06
    2. ' None' → logprob: -12.000006675720215
    3. '=None' → logprob: -18.0000057220459
    4. '   ' → logprob: -19.3750057220459
    5. '(None' → logprob: -21.6250057220459
    6. 'No' → logprob: -22.0000057220459
    7. '_None' → logprob: -22.2500057220459
    8. 'N' → logprob: -22.3750057220459
    9. 'none' → logprob: -23.1250057220459
    10. ',None' → logprob: -23.3750057220459

Token 771: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010152322240173817
    2. '):
' → logprob: -4.885152339935303
    3. '):' → logprob: -6.010152339935303
    4. ')->' → logprob: -9.760151863098145
    5. ' )' → logprob: -10.760151863098145
    6. '   ' → logprob: -12.760151863098145
    7. ':' → logprob: -13.010151863098145
    8. '):
' → logprob: -13.010151863098145
    9. '):

' → logprob: -14.010151863098145
    10. ' ):
' → logprob: -14.635151863098145

Token 772: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6302199363708496
    2. ':' → logprob: -1.0052199363708496
    3. ')' → logprob: -2.8802199363708496
    4. ' ->' → logprob: -3.6302199363708496
    5. ')->' → logprob: -4.75521993637085
    6. ':
' → logprob: -4.75521993637085
    7. '   ' → logprob: -7.25521993637085
    8. '):
' → logprob: -8.005220413208008
    9. '       ' → logprob: -8.380220413208008
    10. '):' → logprob: -9.130220413208008

Token 773: ' str' (ID: 989)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14676985144615173
    2. ' self' → logprob: -2.1467697620391846
    3. 'None' → logprob: -4.521770000457764
    4. ' None' → logprob: -5.271770000457764
    5. 'str' → logprob: -5.771770000457764
    6. ' str' → logprob: -8.521769523620605
    7. 'Optional' → logprob: -8.896769523620605
    8. '(self' → logprob: -9.771769523620605
    9. ' (' → logprob: -10.646769523620605
    10. ' ' → logprob: -10.646769523620605

Token 774: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3366612493991852
    2. '       ' → logprob: -2.2116613388061523
    3. ':
' → logprob: -2.5866613388061523
    4. '{' → logprob: -3.0866613388061523
    5. '   ' → logprob: -3.3366613388061523
    6. '):
' → logprob: -5.086661338806152
    7. '<|end|>' → logprob: -5.586661338806152
    8. '{
' → logprob: -6.211661338806152
    9. '):' → logprob: -6.336661338806152
    10. '():
' → logprob: -6.336661338806152

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015413363464176655
    2. '   ' → logprob: -5.515413284301758
    3. 'c' → logprob: -6.140413284301758
    4. ' c' → logprob: -6.515413284301758
    5. 'char' → logprob: -6.890413284301758
    6. ' s' → logprob: -7.140413284301758
    7. ' 
' → logprob: -7.140413284301758
    8. 'self' → logprob: -7.640413284301758
    9. ' char' → logprob: -7.640413284301758
    10. ' if' → logprob: -7.765413284301758

Token 776: ' """
' (ID: 7037)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.35266661643981934
    2. 'c' → logprob: -1.7276666164398193
    3. 'ch' → logprob: -2.9776666164398193
    4. 'token' → logprob: -3.7276666164398193
    5. ' c' → logprob: -3.8526666164398193
    6. ' char' → logprob: -4.352666854858398
    7. ' token' → logprob: -5.727666854858398
    8. '       ' → logprob: -5.852666854858398
    9. 'if' → logprob: -6.352666854858398
    10. ' ch' → logprob: -6.852666854858398

Token 777: '       ' (ID: 309)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.630087673664093
    2. 'c' → logprob: -1.6300876140594482
    3. 'if' → logprob: -1.8800876140594482
    4. 'ch' → logprob: -2.5050876140594482
    5. 'token' → logprob: -4.255087852478027
    6. ' if' → logprob: -4.380087852478027
    7. ' c' → logprob: -5.630087852478027
    8. 'self' → logprob: -6.130087852478027
    9. 'assert' → logprob: -6.630087852478027
    10. '       ' → logprob: -6.755087852478027

Token 778: ' Consume' (ID: 195805)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4154799282550812
    2. 'char' → logprob: -1.1654798984527588
    3. 'ch' → logprob: -4.290480136871338
    4. 'if' → logprob: -4.915480136871338
    5. 'token' → logprob: -5.040480136871338
    6. ' c' → logprob: -8.29047966003418
    7. ' if' → logprob: -8.66547966003418
    8. ' char' → logprob: -9.16547966003418
    9. 'character' → logprob: -9.91547966003418
    10. 'current' → logprob: -10.16547966003418

Token 779: ' and' (ID: 326)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14513090252876282
    2. ' self' → logprob: -2.0201308727264404
    3. ' the' → logprob: -6.8951311111450195
    4. 's' → logprob: -8.64513111114502
    5. 'char' → logprob: -8.64513111114502
    6. 'the' → logprob: -8.89513111114502
    7. '<|end|>' → logprob: -8.89513111114502
    8. 'next' → logprob: -9.14513111114502
    9. ' next' → logprob: -9.52013111114502
    10. 'token' → logprob: -9.52013111114502

Token 780: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5761885643005371
    2. ' return' → logprob: -0.8261885643005371
    3. 'char' → logprob: -9.451189041137695
    4. 'c' → logprob: -10.326189041137695
    5. ' if' → logprob: -10.576189041137695
    6. 'if' → logprob: -10.701189041137695
    7. 'self' → logprob: -10.951189041137695
    8. ' c' → logprob: -11.326189041137695
    9. '_return' → logprob: -11.326189041137695
    10. ' advance' → logprob: -11.701189041137695

Token 781: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018158255144953728
    2. ' self' → logprob: -4.018158435821533
    3. 'next' → logprob: -12.768157958984375
    4. ' the' → logprob: -13.018157958984375
    5. 'the' → logprob: -13.393157958984375
    6. ' ' → logprob: -14.643157958984375
    7. ' next' → logprob: -14.893157958984375
    8. '(self' → logprob: -16.018157958984375
    9. '
' → logprob: -16.018157958984375
    10. '1' → logprob: -16.143157958984375

Token 782: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8270198106765747
    2. ' next' → logprob: -1.0770198106765747
    3. 'next' → logprob: -1.8270198106765747
    4. '_next' → logprob: -3.202019691467285
    5. 'char' → logprob: -5.202019691467285
    6. 'current' → logprob: -5.327019691467285
    7. ' current' → logprob: -5.702019691467285
    8. '_char' → logprob: -5.952019691467285
    9. ' character' → logprob: -6.577019691467285
    10. 'character' → logprob: -6.702019691467285

Token 783: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.3048853576183319
    2. 'char' → logprob: -2.3048853874206543
    3. 'character' → logprob: -2.3048853874206543
    4. '_char' → logprob: -2.9298853874206543
    5. ' char' → logprob: -4.929885387420654
    6. '_character' → logprob: -6.054885387420654
    7. 'self' → logprob: -8.554884910583496
    8. ' self' → logprob: -11.054884910583496
    9. '<char' → logprob: -11.054884910583496
    10. 'token' → logprob: -11.179884910583496

Token 784: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 785: ' If' (ID: 1843)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3956596851348877
    2. 'c' → logprob: -2.2706596851348877
    3. ' char' → logprob: -2.6456596851348877
    4. 'char' → logprob: -2.8956596851348877
    5. '       ' → logprob: -3.2706596851348877
    6. ' if' → logprob: -3.8956596851348877
    7. ' 
' → logprob: -4.270659446716309
    8. 'token' → logprob: -4.895659446716309
    9. ' token' → logprob: -5.270659446716309
    10. ' ' → logprob: -6.145659446716309

Token 786: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -3.583550642360933e-05
    2. ' expected' → logprob: -10.250036239624023
    3. '
' → logprob: -15.000036239624023
    4. '(expected' → logprob: -17.625036239624023
    5. '	expected' → logprob: -18.250036239624023
    6. 'not' → logprob: -18.375036239624023
    7. 'self' → logprob: -20.375036239624023
    8. 'unexpected' → logprob: -20.500036239624023
    9. 'expect' → logprob: -20.750036239624023
    10. '```' → logprob: -21.125036239624023

Token 787: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0034596563782542944
    2. '_expected' → logprob: -6.253459453582764
    3. 'expected' → logprob: -6.878459453582764
    4. 'is' → logprob: -8.253459930419922
    5. '_char' → logprob: -9.253459930419922
    6. 'char' → logprob: -9.503459930419922
    7. ' expected' → logprob: -10.753459930419922
    8. '_token' → logprob: -11.503459930419922
    9. '_character' → logprob: -11.753459930419922
    10. ' and' → logprob: -12.503459930419922

Token 788: ' provided' (ID: 5181)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.05363231524825096
    2. ' not' → logprob: -3.0536322593688965
    3. 'None' → logprob: -5.3036322593688965
    4. ' None' → logprob: -9.803632736206055
    5. 'expected' → logprob: -13.178632736206055
    6. '
' → logprob: -14.178632736206055
    7. 'Not' → logprob: -15.178632736206055
    8. 'provided' → logprob: -15.303632736206055
    9. 'none' → logprob: -15.553632736206055
    10. '```' → logprob: -16.678632736206055

Token 789: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31408295035362244
    2. 'and' → logprob: -1.5640829801559448
    3. ' and' → logprob: -2.8140828609466553
    4. ',
' → logprob: -9.064083099365234
    5. ':' → logprob: -9.189083099365234
    6. ' ,' → logprob: -10.689083099365234
    7. ' is' → logprob: -10.939083099365234
    8. '<|end|>' → logprob: -11.439083099365234
    9. ':
' → logprob: -11.814083099365234
    10. '   ' → logprob: -12.314083099365234

Token 790: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39993739128112793
    2. ' return' → logprob: -2.149937391281128
    3. '       ' → logprob: -2.274937391281128
    4. '   ' → logprob: -3.274937391281128
    5. ',' → logprob: -4.399937629699707
    6. ' raise' → logprob: -4.524937629699707
    7. ' ' → logprob: -4.774937629699707
    8. '<|end|>' → logprob: -5.274937629699707
    9. 'if' → logprob: -5.649937629699707
    10. ' self' → logprob: -5.649937629699707

Token 791: ' asserts' (ID: 132407)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assert' → logprob: -0.5063048005104065
    2. ' if' → logprob: -2.0063047409057617
    3. ' assert' → logprob: -2.3813047409057617
    4. 'if' → logprob: -2.6313047409057617
    5. '       ' → logprob: -2.8813047409057617
    6. 'self' → logprob: -3.8813047409057617
    7. ' it' → logprob: -4.881304740905762
    8. ' self' → logprob: -5.131304740905762
    9. '           ' → logprob: -6.256304740905762
    10. ' c' → logprob: -7.006304740905762

Token 792: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5929502844810486
    2. ' self' → logprob: -0.8429502844810486
    3. 'expected' → logprob: -4.717950344085693
    4. ' expected' → logprob: -4.967950344085693
    5. ' that' → logprob: -7.842950344085693
    6. '(self' → logprob: -8.217949867248535
    7. '(expected' → logprob: -9.092949867248535
    8. 'that' → logprob: -9.342949867248535
    9. ' (' → logprob: -9.842949867248535
    10. '_expected' → logprob: -10.342949867248535

Token 793: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03547559678554535
    2. ' self' → logprob: -4.035475730895996
    3. 'expected' → logprob: -4.160475730895996
    4. ' expected' → logprob: -7.285475730895996
    5. '_expected' → logprob: -7.410475730895996
    6. '(expected' → logprob: -10.035475730895996
    7. 'current' → logprob: -10.285475730895996
    8. '_current' → logprob: -10.410475730895996
    9. '_next' → logprob: -10.410475730895996
    10. '(self' → logprob: -10.410475730895996

Token 794: ' character' (ID: 5855)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.8309613466262817
    2. ' character' → logprob: -1.3309613466262817
    3. 'character' → logprob: -2.330961227416992
    4. 'char' → logprob: -2.455961227416992
    5. '_character' → logprob: -2.705961227416992
    6. 'self' → logprob: -4.455961227416992
    7. ' char' → logprob: -4.955961227416992
    8. ' self' → logprob: -5.080961227416992
    9. ' _' → logprob: -5.205961227416992
    10. '_' → logprob: -5.330961227416992

Token 795: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20089100301265717
    2. '==' → logprob: -1.8258910179138184
    3. ' is' → logprob: -3.9508910179138184
    4. 'is' → logprob: -7.825891017913818
    5. ' to' → logprob: -8.32589054107666
    6. '```' → logprob: -8.82589054107666
    7. '           ' → logprob: -8.95089054107666
    8. 'to' → logprob: -9.20089054107666
    9. '===' → logprob: -9.82589054107666
    10. ')==' → logprob: -9.82589054107666

Token 796: ' the' (ID: 290)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.06213618069887161
    2. ' expected' → logprob: -2.812136173248291
    3. '(expected' → logprob: -9.43713665008545
    4. 'equal' → logprob: -9.56213665008545
    5. ' equal' → logprob: -11.43713665008545
    6. ' not' → logprob: -13.31213665008545
    7. '_expected' → logprob: -13.43713665008545
    8. 'the' → logprob: -14.18713665008545
    9. '	expected' → logprob: -14.31213665008545
    10. 'not' → logprob: -14.56213665008545

Token 797: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.011056310497224331
    2. ' expected' → logprob: -4.511056423187256
    3. '(expected' → logprob: -11.886055946350098
    4. '...' → logprob: -14.636055946350098
    5. '	expected' → logprob: -15.136055946350098
    6. '
' → logprob: -15.261055946350098
    7. '_expected' → logprob: -15.636055946350098
    8. '```' → logprob: -15.636055946350098
    9. '`' → logprob: -15.761055946350098
    10. '.expected' → logprob: -16.011056900024414

Token 798: ' one' (ID: 1001)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.8074910640716553
    2. '_char' → logprob: -1.1824910640716553
    3. 'char' → logprob: -2.1824910640716553
    4. 'character' → logprob: -2.5574910640716553
    5. ' char' → logprob: -3.1824910640716553
    6. '_character' → logprob: -5.307491302490234
    7. ' token' → logprob: -5.932491302490234
    8. 'token' → logprob: -5.932491302490234
    9. '_token' → logprob: -6.307491302490234
    10. ' ' → logprob: -6.682491302490234

Token 799: '.
' (ID: 558)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21636070311069489
    2. '       ' → logprob: -2.4663608074188232
    3. ',' → logprob: -2.5913608074188232
    4. '.' → logprob: -3.8413608074188232
    5. ' or' → logprob: -5.091360569000244
    6. ' if' → logprob: -6.466360569000244
    7. 'and' → logprob: -6.591360569000244
    8. ')' → logprob: -7.466360569000244
    9. '           ' → logprob: -7.466360569000244
    10. '   ' → logprob: -7.716360569000244

Token 800: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006664486136287451
    2. 'self' → logprob: -8.625666618347168
    3. '   ' → logprob: -8.875666618347168
    4. '        
' → logprob: -9.500666618347168
    5. ' if' → logprob: -10.000666618347168
    6. ')' → logprob: -10.375666618347168
    7. '           ' → logprob: -10.625666618347168
    8. '```' → logprob: -10.750666618347168
    9. 'if' → logprob: -10.875666618347168
    10. 'assert' → logprob: -10.875666618347168

Token 801: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2046823650598526
    2. ')' → logprob: -1.8296823501586914
    3. '   ' → logprob: -5.204682350158691
    4. 'self' → logprob: -5.579682350158691
    5. ')
' → logprob: -5.704682350158691
    6. '        
' → logprob: -6.079682350158691
    7. ' 
' → logprob: -6.704682350158691
    8. '")' → logprob: -6.704682350158691
    9. '):
' → logprob: -6.954682350158691
    10. '"' → logprob: -7.079682350158691

Token 802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0254011154174805
    2. 'c' → logprob: -1.2754011154174805
    3. 'char' → logprob: -1.6504011154174805
    4. ' c' → logprob: -2.9004011154174805
    5. 'token' → logprob: -3.2754011154174805
    6. 'if' → logprob: -3.6504011154174805
    7. ' if' → logprob: -3.9004011154174805
    8. 'ch' → logprob: -4.2754011154174805
    9. '```' → logprob: -5.4004011154174805
    10. ' char' → logprob: -5.4004011154174805

Token 803: ' if' (ID: 538)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.168801188468933
    2. 'char' → logprob: -1.168801188468933
    3. 'if' (adapté à ' if') → logprob: -1.418801188468933
    4. 'c' → logprob: -2.1688013076782227
    5. 'assert' → logprob: -4.168801307678223
    6. 'current' → logprob: -5.168801307678223
    7. ' if' → logprob: -7.168801307678223
    8. 'curr' → logprob: -9.043801307678223
    9. ' char' → logprob: -9.918801307678223
    10. ' assert' → logprob: -10.293801307678223

Token 804: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0553332157433033
    2. ' self' → logprob: -3.180333137512207
    3. 'expected' → logprob: -4.430333137512207
    4. ' expected' → logprob: -8.180333137512207
    5. '       ' → logprob: -10.430333137512207
    6. '	self' → logprob: -11.430333137512207
    7. '           ' → logprob: -11.680333137512207
    8. '   ' → logprob: -12.055333137512207
    9. ' ' → logprob: -12.680333137512207
    10. '(self' → logprob: -13.055333137512207

Token 805: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.25816580653190613
    2. '_pos' → logprob: -1.5081658363342285
    3. '_' → logprob: -5.5081658363342285
    4. ' _' → logprob: -6.8831658363342285
    5. '_expected' → logprob: -8.38316535949707
    6. '   ' → logprob: -9.25816535949707
    7. '_data' → logprob: -9.50816535949707
    8. '_code' → logprob: -9.63316535949707
    9. '_self' → logprob: -9.63316535949707
    10. '       ' → logprob: -9.88316535949707

Token 806: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0008483405690640211
    2. 'data' → logprob: -7.625848293304443
    3. 'consume' → logprob: -8.500848770141602
    4. 'peek' → logprob: -9.375848770141602
    5. '_pos' → logprob: -9.875848770141602
    6. 'length' → logprob: -12.000848770141602
    7. '_data' → logprob: -12.625848770141602
    8. ' pos' → logprob: -12.750848770141602
    9. 'cons' → logprob: -13.500848770141602
    10. '(pos' → logprob: -14.188348770141602

Token 807: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.06281550228595734
    2. ' >=' → logprob: -2.8128154277801514
    3. '<' → logprob: -7.1878156661987305
    4. ' <' → logprob: -9.93781566619873
    5. '<len' → logprob: -11.43781566619873
    6. '==' → logprob: -11.56281566619873
    7. ')>=' → logprob: -11.68781566619873
    8. ']>=' → logprob: -11.93781566619873
    9. '[' → logprob: -12.93781566619873
    10. '<data' → logprob: -13.81281566619873

Token 808: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.265633419388905e-05
    2. ' self' → logprob: -9.750062942504883
    3. 'len' → logprob: -12.375062942504883
    4. '       ' → logprob: -16.250062942504883
    5. '           ' → logprob: -19.375062942504883
    6. '   ' → logprob: -19.375062942504883
    7. '(self' → logprob: -19.500062942504883
    8. '=self' → logprob: -19.500062942504883
    9. '	self' → logprob: -19.625062942504883
    10. '[self' → logprob: -20.125062942504883

Token 809: '._' (ID: 2697)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.28425276279449463
    2. '_length' → logprob: -1.6592527627944946
    3. 'len' → logprob: -2.909252643585205
    4. '<len' → logprob: -7.284252643585205
    5. ' len' → logprob: -7.534252643585205
    6. 'self' → logprob: -7.784252643585205
    7. ' _' → logprob: -7.909252643585205
    8. '._' → logprob: -9.034253120422363
    9. 'length' → logprob: -9.409253120422363
    10. ')' → logprob: -9.534253120422363

Token 810: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -2.2007883671903983e-05
    2. '_length' → logprob: -11.000021934509277
    3. 'len' → logprob: -13.125021934509277
    4. ' length' → logprob: -13.125021934509277
    5. 'leng' → logprob: -14.250021934509277
    6. 'ength' → logprob: -15.375021934509277
    7. '	length' → logprob: -16.625022888183594
    8. '.length' → logprob: -16.625022888183594
    9. '-length' → logprob: -16.875022888183594
    10. '(length' → logprob: -17.250022888183594

Token 811: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04257727786898613
    2. ':' → logprob: -3.2925772666931152
    3. '           ' → logprob: -6.042577266693115
    4. '       ' → logprob: -6.417577266693115
    5. 'raise' → logprob: -8.042577743530273
    6. ',' → logprob: -10.167577743530273
    7. ' or' → logprob: -10.542577743530273
    8. ':
' → logprob: -10.917577743530273
    9. '):
' → logprob: -10.917577743530273
    10. ' and' → logprob: -11.292577743530273

Token 812: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01277226209640503
    2. 'raise' → logprob: -4.637772083282471
    3. ' raise' → logprob: -5.887772083282471
    4. '```' → logprob: -8.762772560119629
    5. '       ' → logprob: -10.012772560119629
    6. '   ' → logprob: -11.887772560119629
    7. '	raise' → logprob: -11.887772560119629
    8. 'Raise' → logprob: -12.012772560119629
    9. '_raise' → logprob: -13.387772560119629
    10. 'self' → logprob: -13.512772560119629

Token 813: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0007137430948205292
    2. ' raise' → logprob: -7.25071382522583
    3. '           ' → logprob: -13.250713348388672
    4. 'Raise' → logprob: -14.125713348388672
    5. '_raise' → logprob: -14.250713348388672
    6. '       ' → logprob: -15.375713348388672
    7. '	raise' → logprob: -15.625713348388672
    8. 'raising' → logprob: -16.750713348388672
    9. 'raises' → logprob: -16.750713348388672
    10. 'self' → logprob: -17.125713348388672

Token 814: ' Value' (ID: 9963)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.06323042511940002
    2. 'Index' → logprob: -2.813230514526367
    3. 'Runtime' → logprob: -7.313230514526367
    4. 'Value' → logprob: -7.813230514526367
    5. 'Stop' → logprob: -8.813230514526367
    6. ' EOF' → logprob: -10.563230514526367
    7. 'Exception' → logprob: -11.063230514526367
    8. ' Index' → logprob: -15.063230514526367
    9. 'Assertion' → logprob: -15.313230514526367
    10. '```' → logprob: -16.688230514526367

Token 815: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.011275934055447578
    2. 'rror' → logprob: -4.511275768280029
    3. 'EOF' → logprob: -9.136276245117188
    4. 'of' → logprob: -9.886276245117188
    5. 'Index' → logprob: -9.886276245117188
    6. 'nd' → logprob: -11.511276245117188
    7. 'SError' → logprob: -12.886276245117188
    8. 'OF' → logprob: -13.636276245117188
    9. 'Stop' → logprob: -13.886276245117188
    10. 'Unexpected' → logprob: -13.886276245117188

Token 816: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0010428131790831685
    2. '('' → logprob: -7.00104284286499
    3. '()' → logprob: -9.626042366027832
    4. '()
' → logprob: -10.251042366027832
    5. '"' → logprob: -11.626042366027832
    6. '(' → logprob: -11.751042366027832
    7. '       ' → logprob: -12.501042366027832
    8. '(
' → logprob: -12.876042366027832
    9. '(f' → logprob: -12.876042366027832
    10. '("'' → logprob: -13.626042366027832

Token 817: 'Unexpected' (ID: 59338)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5436194539070129
    2. 'Unexpected' → logprob: -0.9186194539070129
    3. 'EOF' → logprob: -4.293619632720947
    4. ''' → logprob: -5.043619632720947
    5. 'End' → logprob: -10.168619155883789
    6. ' Unexpected' → logprob: -10.293619155883789
    7. 'Un' → logprob: -10.543619155883789
    8. 'unexpected' → logprob: -11.043619155883789
    9. 'f' → logprob: -11.668619155883789
    10. '`' → logprob: -11.793619155883789

Token 818: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.07955112308263779
    2. 'end' → logprob: -2.5795512199401855
    3. 'EOF' → logprob: -7.3295512199401855
    4. ' EOF' → logprob: -12.579550743103027
    5. 'End' → logprob: -13.329550743103027
    6. '_end' → logprob: -16.829551696777344
    7. '	end' → logprob: -17.204551696777344
    8. ' eof' → logprob: -17.579551696777344
    9. ':end' → logprob: -17.954551696777344
    10. 'input' → logprob: -18.079551696777344

Token 819: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.038312871009111404
    2. 'of' → logprob: -3.2883129119873047
    3. '_of' → logprob: -8.288312911987305
    4. '       ' → logprob: -12.288312911987305
    5. '   ' → logprob: -12.538312911987305
    6. '
' → logprob: -13.038312911987305
    7. ')' → logprob: -13.413312911987305
    8. '```' → logprob: -13.538312911987305
    9. ' ' → logprob: -13.663312911987305
    10. 'Of' → logprob: -14.038312911987305

Token 820: ' input' (ID: 3422)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.31395402550697327
    2. 'input' → logprob: -1.3139539957046509
    3. ' input' → logprob: -7.813953876495361
    4. ' data' → logprob: -8.18895435333252
    5. 'file' → logprob: -13.18895435333252
    6. '_data' → logprob: -13.56395435333252
    7. 'string' → logprob: -13.56395435333252
    8. 'text' → logprob: -13.81395435333252
    9. '_input' → logprob: -13.81395435333252
    10. 'code' → logprob: -13.93895435333252

Token 821: ' while' (ID: 2049)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.011937100440263748
    2. '")' → logprob: -4.511937141418457
    3. ')")
' → logprob: -8.261937141418457
    4. '.")
' → logprob: -8.386937141418457
    5. ' ")
' → logprob: -8.886937141418457
    6. '")

' → logprob: -10.136937141418457
    7. '")
' → logprob: -10.261937141418457
    8. '   ' → logprob: -10.261937141418457
    9. '       ' → logprob: -10.386937141418457
    10. ')
' → logprob: -11.011937141418457

Token 822: ' parsing' (ID: 51039)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.6581424474716187
    2. 'par' → logprob: -0.7831424474716187
    3. ' parsing' → logprob: -4.158142566680908
    4. ' consuming' → logprob: -5.533142566680908
    5. 'trying' → logprob: -5.533142566680908
    6. ' trying' → logprob: -7.283142566680908
    7. 'reading' → logprob: -8.03314208984375
    8. 'attempt' → logprob: -8.65814208984375
    9. 'expect' → logprob: -8.90814208984375
    10. ' par' → logprob: -9.15814208984375

Token 823: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.017924213781952858
    2. '")' → logprob: -4.2679243087768555
    3. '.")
' → logprob: -6.0179243087768555
    4. ')")
' → logprob: -7.8929243087768555
    5. 'data' → logprob: -8.142924308776855
    6. 'input' → logprob: -8.142924308776855
    7. '")
' → logprob: -9.267924308776855
    8. 'code' → logprob: -9.767924308776855
    9. 'character' → logprob: -9.892924308776855
    10. ' data' → logprob: -11.017924308776855

Token 824: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21794383227825165
    2. '       ' → logprob: -1.967943787574768
    3. ' c' → logprob: -3.4679439067840576
    4. 'char' → logprob: -4.5929436683654785
    5. 'token' → logprob: -5.3429436683654785
    6. 'current' → logprob: -5.7179436683654785
    7. 'ch' → logprob: -5.9679436683654785
    8. '```' → logprob: -6.5929436683654785
    9. '
' → logprob: -7.3429436683654785
    10. ' char' → logprob: -8.092944145202637

Token 825: ' current' (ID: 2208)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.4779288172721863
    2. 'c' → logprob: -1.227928876876831
    3. 'char' → logprob: -2.477928876876831
    4. 'current' (adapté à ' current') → logprob: -5.977928638458252
    5. 'result' → logprob: -7.977928638458252
    6. 'curr' → logprob: -9.10292911529541
    7. ' ch' → logprob: -9.35292911529541
    8. 'cur' → logprob: -11.10292911529541
    9. ' char' → logprob: -11.47792911529541
    10. ' c' → logprob: -12.22792911529541

Token 826: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0005595852271653712
    2. 'char' → logprob: -7.7505598068237305
    3. '_' → logprob: -10.12555980682373
    4. '=' → logprob: -10.50055980682373
    5. ' =' → logprob: -10.75055980682373
    6. '_character' → logprob: -11.00055980682373
    7. 'Char' → logprob: -11.50055980682373
    8. '_c' → logprob: -12.62555980682373
    9. '_token' → logprob: -12.75055980682373
    10. '_chr' → logprob: -13.12555980682373

Token 827: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519327998161316
    2. ' =' → logprob: -1.5019328594207764
    3. '=
' → logprob: -13.126933097839355
    4. '=self' → logprob: -13.876933097839355
    5. ' ' → logprob: -15.626933097839355
    6. ' ' → logprob: -15.751933097839355
    7. ' =
' → logprob: -15.876933097839355
    8. 's' → logprob: -16.62693214416504
    9. '=data' → logprob: -17.62693214416504
    10. '_=' → logprob: -17.87693214416504

Token 828: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006715370807796717
    2. ' self' → logprob: -5.006715297698975
    3. '	self' → logprob: -18.631715774536133
    4. '[self' → logprob: -18.881715774536133
    5. '
' → logprob: -19.006715774536133
    6. '(self' → logprob: -19.381715774536133
    7. '=self' → logprob: -20.131715774536133
    8. '       ' → logprob: -20.381715774536133
    9. '_self' → logprob: -21.256715774536133
    10. '```' → logprob: -21.256715774536133

Token 829: '._' (ID: 2697)
  Prédit: '_self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_self' → logprob: -0.3607969582080841
    2. 'self' → logprob: -1.3607969284057617
    3. '_data' → logprob: -3.2357969284057617
    4. ' self' → logprob: -4.985796928405762
    5. ' _' → logprob: -8.985796928405762
    6. '[self' → logprob: -10.360796928405762
    7. '._' → logprob: -10.610796928405762
    8. '
' → logprob: -11.235796928405762
    9. '_s' → logprob: -11.360796928405762
    10. '_' → logprob: -11.485796928405762

Token 830: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.00020532844064291567
    2. '_data' → logprob: -8.500205039978027
    3. ' data' → logprob: -14.000205039978027
    4. '
' → logprob: -14.875205039978027
    5. 'user' → logprob: -15.500205039978027
    6. '```' → logprob: -15.750205039978027
    7. 'consume' → logprob: -16.625205993652344
    8. 'code' → logprob: -16.750205993652344
    9. 'self' → logprob: -17.250205993652344
    10. '.data' → logprob: -17.500205993652344

Token 831: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0017820450011640787
    2. 'self' → logprob: -6.376781940460205
    3. '[
' → logprob: -9.876782417297363
    4. '[' → logprob: -10.751782417297363
    5. '
' → logprob: -12.626782417297363
    6. ' self' → logprob: -13.376782417297363
    7. '```' → logprob: -14.251782417297363
    8. '[current' → logprob: -14.751782417297363
    9. '[s' → logprob: -14.876782417297363
    10. 's' → logprob: -15.751782417297363

Token 832: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.2014402449131012
    2. '_pos' → logprob: -1.7014402151107788
    3. '.pos' → logprob: -11.32643985748291
    4. ']._' → logprob: -12.20143985748291
    5. '.' → logprob: -13.32643985748291
    6. '_code' → logprob: -14.07643985748291
    7. '_POS' → logprob: -14.32643985748291
    8. 'self' → logprob: -14.45143985748291
    9. '_idx' → logprob: -14.57643985748291
    10. ']_' → logprob: -14.70143985748291

Token 833: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.4868770196917467e-05
    2. '_pos' → logprob: -10.750024795532227
    3. 'data' → logprob: -12.875024795532227
    4. ' pos' → logprob: -15.625024795532227
    5. '	pos' → logprob: -16.000024795532227
    6. '```' → logprob: -16.000024795532227
    7. '[pos' → logprob: -16.125024795532227
    8. '_data' → logprob: -16.125024795532227
    9. '.pos' → logprob: -16.625024795532227
    10. '   ' → logprob: -17.250024795532227

Token 834: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38512685894966125
    2. ')' → logprob: -2.010126829147339
    3. '       ' → logprob: -2.135126829147339
    4. 'self' → logprob: -2.885126829147339
    5. '
' → logprob: -4.885127067565918
    6. '[self' → logprob: -6.635127067565918
    7. ' self' → logprob: -7.135127067565918
    8. ']
' → logprob: -7.385127067565918
    9. ']' → logprob: -7.635127067565918
    10. ',' → logprob: -8.885127067565918

Token 835: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07095210999250412
    2. 'self' → logprob: -2.6959521770477295
    3. ' self' → logprob: -6.94595193862915
    4. '   ' → logprob: -10.695952415466309
    5. '
' → logprob: -11.695952415466309
    6. '	' → logprob: -12.195952415466309
    7. '	self' → logprob: -12.320952415466309
    8. '           ' → logprob: -12.820952415466309
    9. '```' → logprob: -12.820952415466309
    10. ' ' → logprob: -13.570952415466309

Token 836: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00030697984038852155
    2. '       ' → logprob: -8.250307083129883
    3. ' self' → logprob: -10.000307083129883
    4. '	self' → logprob: -15.250307083129883
    5. 'if' (adapté à ' if') → logprob: -16.875307083129883
    6. '
' → logprob: -17.375307083129883
    7. '   ' → logprob: -18.000307083129883
    8. 'assert' → logprob: -18.250307083129883
    9. '_self' → logprob: -18.375307083129883
    10. '(self' → logprob: -18.875307083129883

Token 837: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.006716674659401178
    2. ' expected' → logprob: -5.006716728210449
    3. '(expected' → logprob: -14.13171672821045
    4. '	expected' → logprob: -14.50671672821045
    5. '
' → logprob: -17.506715774536133
    6. '   ' → logprob: -17.631715774536133
    7. 'expect' → logprob: -18.756715774536133
    8. ' ' → logprob: -19.381715774536133
    9. '.expected' → logprob: -19.381715774536133
    10. '_expected' → logprob: -19.506715774536133

Token 838: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6214401721954346
    2. ' is' → logprob: -0.8714401721954346
    3. '==' → logprob: -3.1214401721954346
    4. 'is' → logprob: -8.121439933776855
    5. '=' → logprob: -10.996439933776855
    6. ' ' → logprob: -11.121439933776855
    7. ' and' → logprob: -11.121439933776855
    8. '<|end|>' → logprob: -11.246439933776855
    9. ' =' → logprob: -11.746439933776855
    10. '[' → logprob: -12.246439933776855

Token 839: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12703005969524384
    2. ' not' → logprob: -2.12703013420105
    3. 'None' → logprob: -9.627030372619629
    4. 'Not' → logprob: -10.877030372619629
    5. 'n' → logprob: -12.752030372619629
    6. '
' → logprob: -12.877030372619629
    7. '	not' → logprob: -13.127030372619629
    8. ')' → logprob: -13.502030372619629
    9. 'no' → logprob: -13.877030372619629
    10. 'n't' → logprob: -14.127030372619629

Token 840: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -8.0536883615423e-05
    2. ' None' → logprob: -9.500080108642578
    3. 'not' → logprob: -12.750080108642578
    4. 'none' → logprob: -12.875080108642578
    5. '=None' → logprob: -16.375080108642578
    6. '(None' → logprob: -18.375080108642578
    7. '_None' → logprob: -18.625080108642578
    8. '```' → logprob: -19.625080108642578
    9. '
' → logprob: -19.750080108642578
    10. '_none' → logprob: -19.750080108642578

Token 841: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010511236265301704
    2. 'and' → logprob: -4.76051139831543
    3. '           ' → logprob: -7.26051139831543
    4. ':
' → logprob: -7.63551139831543
    5. '==' → logprob: -8.38551139831543
    6. ':' → logprob: -8.38551139831543
    7. ' ==' → logprob: -8.76051139831543
    8. '       ' → logprob: -10.38551139831543
    9. ',' → logprob: -11.51051139831543
    10. '          ' → logprob: -11.76051139831543

Token 842: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0031907858792692423
    2. ' current' → logprob: -5.753190994262695
    3. 'expected' → logprob: -11.253190994262695
    4. ' expected' → logprob: -16.253190994262695
    5. '	current' → logprob: -16.753190994262695
    6. 'cur' → logprob: -18.253190994262695
    7. 'curr' → logprob: -18.503190994262695
    8. '
' → logprob: -18.753190994262695
    9. '$current' → logprob: -18.878190994262695
    10. '(current' → logprob: -18.878190994262695

Token 843: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -3.392824874026701e-05
    2. 'char' → logprob: -10.37503433227539
    3. '_chars' → logprob: -13.75003433227539
    4. 'Char' → logprob: -14.87503433227539
    5. '
' → logprob: -15.12503433227539
    6. '_pos' → logprob: -15.62503433227539
    7. '_' → logprob: -15.62503433227539
    8. '_CHAR' → logprob: -16.00003433227539
    9. '```' → logprob: -16.37503433227539
    10. '_data' → logprob: -16.50003433227539

Token 844: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07889419049024582
    2. ' !=' → logprob: -2.5788941383361816
    3. ')!=' → logprob: -13.45389461517334
    4. '()!=' → logprob: -13.95389461517334
    5. '!==' → logprob: -14.20389461517334
    6. '==' → logprob: -14.95389461517334
    7. ']!=' → logprob: -15.20389461517334
    8. '!="' → logprob: -15.20389461517334
    9. '```' → logprob: -15.57889461517334
    10. '!='' → logprob: -15.95389461517334

Token 845: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.0002613358374219388
    2. ' expected' → logprob: -8.250261306762695
    3. '(expected' → logprob: -17.375261306762695
    4. '	expected' → logprob: -17.625261306762695
    5. '.expected' → logprob: -19.625261306762695
    6. '```' → logprob: -20.125261306762695
    7. 'Expected' → logprob: -20.375261306762695
    8. 'expect' → logprob: -20.500261306762695
    9. '
' → logprob: -20.625261306762695
    10. '`' → logprob: -20.625261306762695

Token 846: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47569987177848816
    2. ':
' → logprob: -0.9756999015808105
    3. '<|end|>' → logprob: -7.7256999015808105
    4. '       ' → logprob: -7.8506999015808105
    5. '           ' → logprob: -7.9756999015808105
    6. ':return' → logprob: -8.850699424743652
    7. '):
' → logprob: -9.350699424743652
    8. '):' → logprob: -9.975699424743652
    9. ')' → logprob: -9.975699424743652
    10. ',' → logprob: -10.100699424743652

Token 847: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2880782186985016
    2. ':
' → logprob: -1.4130781888961792
    3. '       ' → logprob: -6.038078308105469
    4. ':' → logprob: -6.288078308105469
    5. 'raise' → logprob: -6.413078308105469
    6. 'self' → logprob: -7.538078308105469
    7. ' raise' → logprob: -8.913078308105469
    8. '):
' → logprob: -9.038078308105469
    9. '   ' → logprob: -9.163078308105469
    10. '          ' → logprob: -11.038078308105469

Token 848: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0087863989174366
    2. ' raise' → logprob: -5.008786201477051
    3. '           ' → logprob: -6.258786201477051
    4. '	raise' → logprob: -9.00878620147705
    5. '               ' → logprob: -11.75878620147705
    6. 'Raise' → logprob: -12.00878620147705
    7. '
' → logprob: -12.13378620147705
    8. 'self' → logprob: -12.63378620147705
    9. '            
' → logprob: -12.88378620147705
    10. '   ' → logprob: -13.25878620147705

Token 849: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -9.746380237629637e-05
    2. ' Value' → logprob: -9.250097274780273
    3. 'Assertion' → logprob: -13.625097274780273
    4. 'Syntax' → logprob: -16.250097274780273
    5. 'Runtime' → logprob: -17.375097274780273
    6. '(Value' → logprob: -17.625097274780273
    7. '_value' → logprob: -18.375097274780273
    8. '_Value' → logprob: -18.500097274780273
    9. '	Value' → logprob: -19.000097274780273
    10. 'value' → logprob: -19.625097274780273

Token 850: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00020401719666551799
    2. 'rror' → logprob: -8.500204086303711
    3. 'Value' → logprob: -14.625204086303711
    4. 'error' → logprob: -16.62520408630371
    5. 'n' → logprob: -17.00020408630371
    6. 'SError' → logprob: -18.00020408630371
    7. 'ror' → logprob: -19.00020408630371
    8. 'Unexpected' → logprob: -19.12520408630371
    9. 'of' → logprob: -19.25020408630371
    10. 'alue' → logprob: -19.25020408630371

Token 851: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.002976394956931472
    2. '(' → logprob: -6.752976417541504
    3. '(expected' → logprob: -7.377976417541504
    4. '("' → logprob: -7.377976417541504
    5. '(
' → logprob: -7.877976417541504
    6. 'f' → logprob: -8.752976417541504
    7. ' f' → logprob: -11.252976417541504
    8. '(Expected' → logprob: -13.627976417541504
    9. '('' → logprob: -13.877976417541504
    10. 'expected' → logprob: -14.377976417541504

Token 852: '"' (ID: 1)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.06410948932170868
    2. 'f' → logprob: -2.8141095638275146
    3. 'Expected' → logprob: -6.9391093254089355
    4. 'Unexpected' → logprob: -7.3141093254089355
    5. '"' → logprob: -8.314109802246094
    6. ' expected' → logprob: -9.064109802246094
    7. ' Expected' → logprob: -9.689109802246094
    8. ' Unexpected' → logprob: -10.439109802246094
    9. '(f' → logprob: -10.564109802246094
    10. 'expected' → logprob: -11.314109802246094

Token 853: 'Expected' (ID: 28041)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.018625108525156975
    2. 'expected' → logprob: -4.268625259399414
    3. 'Expected' → logprob: -5.643625259399414
    4. 'Unexpected' → logprob: -7.518625259399414
    5. '"' → logprob: -8.143625259399414
    6. '{' → logprob: -10.018625259399414
    7. 'unexpected' → logprob: -11.643625259399414
    8. ' f' → logprob: -11.643625259399414
    9. '(f' → logprob: -12.518625259399414
    10. '(expected' → logprob: -12.768625259399414

Token 854: ' '{' (ID: 24918)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3378784656524658
    2. ''{' → logprob: -1.8378784656524658
    3. 'expected' → logprob: -2.087878465652466
    4. ' expected' → logprob: -5.837878227233887
    5. '{
' → logprob: -8.462878227233887
    6. ' '{' → logprob: -8.587878227233887
    7. ''' → logprob: -9.087878227233887
    8. ' {' → logprob: -9.462878227233887
    9. '"{' → logprob: -10.087878227233887
    10. '(expected' → logprob: -10.712878227233887

Token 855: 'expected' (ID: 12575)
  Prédit: 'expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -2.8444881536415778e-05
    2. '{' → logprob: -10.500028610229492
    3. ' expected' → logprob: -14.625028610229492
    4. '
' → logprob: -15.625028610229492
    5. '(expected' → logprob: -16.375028610229492
    6. '{
' → logprob: -17.000028610229492
    7. '	expected' → logprob: -17.625028610229492
    8. '}' → logprob: -17.750028610229492
    9. '}{' → logprob: -19.000028610229492
    10. '.expected' → logprob: -19.500028610229492

Token 856: '}'' (ID: 24321)
  Prédit: '}','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}',' → logprob: -0.5348650217056274
    2. '}'' → logprob: -1.0348650217056274
    3. ''' → logprob: -3.409864902496338
    4. '',' → logprob: -3.659864902496338
    5. ',' → logprob: -9.034865379333496
    6. '}' → logprob: -10.284865379333496
    7. ' but' → logprob: -10.784865379333496
    8. '{' → logprob: -11.909865379333496
    9. '"',' → logprob: -12.409865379333496
    10. ')',' → logprob: -13.159865379333496

Token 857: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.5234529376029968
    2. ',' → logprob: -0.8984529376029968
    3. 'but' → logprob: -8.273452758789062
    4. ')' → logprob: -10.648452758789062
    5. ' got' → logprob: -11.148452758789062
    6. '")' → logprob: -11.898452758789062
    7. ' ,' → logprob: -11.898452758789062
    8. ' found' → logprob: -12.273452758789062
    9. ' at' → logprob: -12.398452758789062
    10. '')' → logprob: -13.273452758789062

Token 858: ' found' (ID: 2491)
  Prédit: 'got'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'got' → logprob: -0.08059030771255493
    2. 'found' → logprob: -2.58059024810791
    3. ' got' → logprob: -6.58059024810791
    4. ' found' → logprob: -8.08059024810791
    5. 'received' → logprob: -13.20559024810791
    6. '	got' → logprob: -15.08059024810791
    7. '
' → logprob: -15.33059024810791
    8. 'g' → logprob: -16.205591201782227
    9. '{' → logprob: -17.080591201782227
    10. '	found' → logprob: -17.330591201782227

Token 859: ' '{' (ID: 24918)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -0.28662949800491333
    2. 'current' → logprob: -1.7866294384002686
    3. '{' → logprob: -2.6616294384002686
    4. ''' → logprob: -4.536629676818848
    5. '`' → logprob: -7.786629676818848
    6. 'f' → logprob: -8.036629676818848
    7. ' current' → logprob: -8.786629676818848
    8. '"{' → logprob: -9.161629676818848
    9. ' '{' → logprob: -9.661629676818848
    10. '$current' → logprob: -11.036629676818848

Token 860: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -5.438573680294212e-06
    2. ' current' → logprob: -12.625005722045898
    3. '{' → logprob: -13.875005722045898
    4. 'cur' → logprob: -14.125005722045898
    5. '[current' → logprob: -15.625005722045898
    6. '$current' → logprob: -16.0000057220459
    7. 'curr' → logprob: -16.8750057220459
    8. '
' → logprob: -16.8750057220459
    9. '_current' → logprob: -17.8750057220459
    10. '(current' → logprob: -18.8750057220459

Token 861: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.026549914851784706
    2. 'char' → logprob: -3.651549816131592
    3. 'current' → logprob: -9.27655029296875
    4. '_data' → logprob: -9.90155029296875
    5. '
' → logprob: -10.40155029296875
    6. 'Char' → logprob: -11.77655029296875
    7. '_pos' → logprob: -11.77655029296875
    8. 'data' → logprob: -12.02655029296875
    9. '_current' → logprob: -12.02655029296875
    10. '`' → logprob: -12.27655029296875

Token 862: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02588730864226818
    2. ''")
' → logprob: -4.400887489318848
    3. ''"' → logprob: -4.650887489318848
    4. '}'' → logprob: -5.900887489318848
    5. '')' → logprob: -7.525887489318848
    6. '')
' → logprob: -8.650887489318848
    7. '')"' → logprob: -8.775887489318848
    8. ')'' → logprob: -10.400887489318848
    9. '"'' → logprob: -10.900887489318848
    10. '"' → logprob: -10.900887489318848

Token 863: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32753121852874756
    2. ')
' → logprob: -1.3275312185287476
    3. ')' → logprob: -5.327531337738037
    4. '")
' → logprob: -5.577531337738037
    5. '
' → logprob: -5.952531337738037
    6. 'self' → logprob: -6.827531337738037
    7. '')
' → logprob: -6.952531337738037
    8. '           ' → logprob: -8.827530860900879
    9. ',' → logprob: -8.952530860900879
    10. '   ' → logprob: -9.077530860900879

Token 864: ' position' (ID: 4010)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14831216633319855
    2. 'position' → logprob: -2.1483120918273926
    3. 'pos' → logprob: -3.8983120918273926
    4. ' position' → logprob: -7.648312091827393
    5. ' self' → logprob: -8.14831256866455
    6. 'index' → logprob: -9.14831256866455
    7. '_pos' → logprob: -12.39831256866455
    8. '{' → logprob: -13.02331256866455
    9. ' pos' → logprob: -13.64831256866455
    10. '_position' → logprob: -14.14831256866455

Token 865: ' {' (ID: 354)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2648164629936218
    2. '{' → logprob: -1.5148165225982666
    3. ' self' → logprob: -4.6398162841796875
    4. ' {' → logprob: -5.7648162841796875
    5. '(self' → logprob: -12.389816284179688
    6. '
' → logprob: -13.639816284179688
    7. '{
' → logprob: -13.889816284179688
    8. 'f' → logprob: -14.389816284179688
    9. ' ' → logprob: -14.889816284179688
    10. '`' → logprob: -14.889816284179688

Token 866: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.670925358776003e-05
    2. '{' → logprob: -9.750066757202148
    3. ' self' → logprob: -11.750066757202148
    4. '(self' → logprob: -15.000066757202148
    5. '
' → logprob: -15.875066757202148
    6. '	self' → logprob: -17.12506675720215
    7. '{
' → logprob: -17.37506675720215
    8. '`' → logprob: -18.25006675720215
    9. '[self' → logprob: -18.25006675720215
    10. 'str' → logprob: -18.37506675720215

Token 867: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.029894765466451645
    2. '_pos' → logprob: -3.5298948287963867
    3. '_' → logprob: -9.529894828796387
    4. '}_' → logprob: -11.529894828796387
    5. ' _' → logprob: -11.779894828796387
    6. 'self' → logprob: -11.904894828796387
    7. '
' → logprob: -12.029894828796387
    8. '}' → logprob: -12.154894828796387
    9. '_self' → logprob: -12.154894828796387
    10. ']._' → logprob: -12.404894828796387

Token 868: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -7.822646693966817e-06
    2. 'data' → logprob: -12.000007629394531
    3. '_pos' → logprob: -13.625007629394531
    4. '```' → logprob: -16.37500762939453
    5. '.pos' → logprob: -16.50000762939453
    6. ' pos' → logprob: -16.75000762939453
    7. 'length' → logprob: -17.12500762939453
    8. 'position' → logprob: -17.25000762939453
    9. '
' → logprob: -17.25000762939453
    10. '	pos' → logprob: -17.50000762939453

Token 869: '}")
' (ID: 23577)
  Prédit: '}")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")
' → logprob: -0.044200655072927475
    2. '")
' → logprob: -3.2942006587982178
    3. '')
' → logprob: -6.169200420379639
    4. '       ' → logprob: -6.294200420379639
    5. '}")' → logprob: -7.294200420379639
    6. '")' → logprob: -7.419200420379639
    7. ''")
' → logprob: -8.169200897216797
    8. '}')
' → logprob: -8.544200897216797
    9. ')")
' → logprob: -8.669200897216797
    10. '')' → logprob: -9.169200897216797

Token 870: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11372600495815277
    2. 'self' → logprob: -2.2387259006500244
    3. ' self' → logprob: -7.2387261390686035
    4. '   ' → logprob: -8.863725662231445
    5. '```' → logprob: -11.113725662231445
    6. '
' → logprob: -11.613725662231445
    7. '	self' → logprob: -11.613725662231445
    8. '        
' → logprob: -12.488725662231445
    9. '(self' → logprob: -13.863725662231445
    10. '           ' → logprob: -13.863725662231445

Token 871: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009806475136429071
    2. '       ' → logprob: -7.000980854034424
    3. ' self' → logprob: -9.625980377197266
    4. '	self' → logprob: -12.875980377197266
    5. '   ' → logprob: -15.375980377197266
    6. '
' → logprob: -15.750980377197266
    7. '```' → logprob: -15.875980377197266
    8. '        
' → logprob: -17.000980377197266
    9. '_self' → logprob: -17.125980377197266
    10. '(self' → logprob: -17.125980377197266

Token 872: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.967624019831419e-05
    2. '_pos' → logprob: -10.125060081481934
    3. '.' → logprob: -11.750060081481934
    4. '
' → logprob: -12.000060081481934
    5. '_' → logprob: -13.375060081481934
    6. '	' → logprob: -13.625060081481934
    7. '   ' → logprob: -14.250060081481934
    8. '._
' → logprob: -14.375060081481934
    9. ' .' → logprob: -15.000060081481934
    10. '.
' → logprob: -15.000060081481934

Token 873: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -6.706686690449715e-05
    2. '_pos' → logprob: -9.625066757202148
    3. 'data' → logprob: -14.500066757202148
    4. 'consume' → logprob: -14.750066757202148
    5. ' pos' → logprob: -17.50006675720215
    6. '_data' → logprob: -17.62506675720215
    7. '.pos' → logprob: -18.50006675720215
    8. '	pos' → logprob: -18.62506675720215
    9. '
' → logprob: -19.00006675720215
    10. '_cons' → logprob: -19.37506675720215

Token 874: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -7.493430894101039e-05
    2. ' +=' → logprob: -9.500075340270996
    3. ']+=' → logprob: -16.87507438659668
    4. '+' → logprob: -18.37507438659668
    5. '=' → logprob: -19.37507438659668
    6. '+="' → logprob: -20.62507438659668
    7. '   ' → logprob: -21.12507438659668
    8. '+='' → logprob: -21.50007438659668
    9. '```' → logprob: -22.00007438659668
    10. '+=(' → logprob: -22.62507438659668

Token 875: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '
' → logprob: -20.375
    4. '```' → logprob: -20.5
    5. '   ' → logprob: -22.0
    6. '۱' → logprob: -23.875
    7. '`' → logprob: -23.875
    8. '１' → logprob: -23.875
    9. '' → logprob: -25.125
    10. ' ' → logprob: -25.25

Token 876: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '```' → logprob: -21.875
    4. '۱' → logprob: -23.375
    5. '
' → logprob: -23.875
    6. '１' → logprob: -24.5
    7. '   ' → logprob: -25.0
    8. '१' → logprob: -25.625
    9. '' → logprob: -25.625
    10. '১' → logprob: -25.875

Token 877: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01021780539304018
    2. '
' → logprob: -5.635217666625977
    3. 'return' → logprob: -5.760217666625977
    4. '<|end|>' → logprob: -7.135217666625977
    5. '        
' → logprob: -7.260217666625977
    6. '	' → logprob: -7.760217666625977
    7. '  
' → logprob: -7.760217666625977
    8. ' return' → logprob: -8.260217666625977
    9. '   ' → logprob: -8.260217666625977
    10. '	return' → logprob: -8.510217666625977

Token 878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01679694466292858
    2. '   ' → logprob: -5.016797065734863
    3. '	' → logprob: -5.891797065734863
    4. 'return' → logprob: -5.891797065734863
    5. '```' → logprob: -6.266797065734863
    6. '	return' → logprob: -7.016797065734863
    7. '<|end|>' → logprob: -7.641797065734863
    8. ' return' → logprob: -8.016797065734863
    9. '
' → logprob: -8.766797065734863
    10. '`' → logprob: -8.766797065734863

Token 879: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13259799778461456
    2. '       ' → logprob: -2.1325979232788086
    3. '	return' → logprob: -5.882597923278809
    4. ' return' → logprob: -7.007597923278809
    5. '   ' → logprob: -7.257597923278809
    6. '	' → logprob: -7.757597923278809
    7. '```' → logprob: -8.007597923278809
    8. '
' → logprob: -9.132597923278809
    9. 'current' → logprob: -9.257597923278809
    10. '`' → logprob: -10.007597923278809

Token 880: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -6.2729995988775045e-06
    2. ' current' → logprob: -12.000006675720215
    3. 'cur' → logprob: -19.6250057220459
    4. '	current' → logprob: -21.7500057220459
    5. 'curr' → logprob: -22.5000057220459
    6. '$current' → logprob: -22.6250057220459
    7. 'c' → logprob: -22.7500057220459
    8. '`' → logprob: -22.7500057220459
    9. '
' → logprob: -23.2500057220459
    10. '(current' → logprob: -23.3750057220459

Token 881: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.981667537620524e-06
    2. 'char' → logprob: -13.250001907348633
    3. 'Char' → logprob: -16.500001907348633
    4. '_' → logprob: -16.500001907348633
    5. '_CHAR' → logprob: -18.000001907348633
    6. '__' → logprob: -18.875001907348633
    7. '```' → logprob: -18.875001907348633
    8. '_character' → logprob: -19.125001907348633
    9. '_c' → logprob: -19.625001907348633
    10. '_chars' → logprob: -19.875001907348633

Token 882: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5530353784561157
    2. '
' → logprob: -1.5530353784561157
    3. '<|end|>' → logprob: -2.178035259246826
    4. '```' → logprob: -2.553035259246826
    5. '    
' → logprob: -4.428035259246826
    6. '  
' → logprob: -5.803035259246826
    7. '

' → logprob: -5.928035259246826
    8. '<|end|>' → logprob: -6.678035259246826
    9. 'def' → logprob: -6.928035259246826
    10. ' 
' → logprob: -7.553035259246826

Token 883: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2919411063194275
    2. '
' → logprob: -1.4169411659240723
    3. '    
' → logprob: -5.291941165924072
    4. 'def' → logprob: -5.916941165924072
    5. '```' → logprob: -6.416941165924072
    6. '

' → logprob: -7.541941165924072
    7. '<|end|>' → logprob: -7.791941165924072
    8. ' 
' → logprob: -8.916940689086914
    9. ' def' → logprob: -9.916940689086914
    10. '<|end|>' → logprob: -10.041940689086914

Token 884: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002410373417660594
    2. '
' → logprob: -6.377410411834717
    3. '   ' → logprob: -8.002409934997559
    4. ' def' → logprob: -8.252409934997559
    5. '```' → logprob: -9.627409934997559
    6. '    
' → logprob: -10.502409934997559
    7. 'import' → logprob: -11.127409934997559
    8. '

' → logprob: -13.752409934997559
    9. '        
' → logprob: -14.127409934997559
    10. 'from' → logprob: -14.252409934997559

Token 885: ' _' (ID: 1175)
  Prédit: '_parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -0.007912397384643555
    2. ' _' → logprob: -5.257912635803223
    3. 'def' → logprob: -6.757912635803223
    4. '_def' → logprob: -7.132912635803223
    5. '_' → logprob: -8.007912635803223
    6. ' def' → logprob: -9.632912635803223
    7. '_get' → logprob: -10.007912635803223
    8. '_try' → logprob: -10.257912635803223
    9. '   ' → logprob: -10.382912635803223
    10. '_par' → logprob: -10.507912635803223

Token 886: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0009983942145481706
    2. 'peek' → logprob: -7.500998497009277
    3. 'consume' → logprob: -7.875998497009277
    4. 'try' → logprob: -10.250998497009277
    5. 'skip' → logprob: -11.250998497009277
    6. '_parse' → logprob: -12.250998497009277
    7. 'digit' → logprob: -12.750998497009277
    8. 'read' → logprob: -13.000998497009277
    9. ' parse' → logprob: -13.500998497009277
    10. 'match' → logprob: -13.500998497009277

Token 887: '_digits' (ID: 108638)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.26838332414627075
    2. '_element' → logprob: -1.518383264541626
    3. '_digit' → logprob: -4.268383502960205
    4. '_literal' → logprob: -7.768383502960205
    5. '_factor' → logprob: -7.893383502960205
    6. '_integer' → logprob: -7.893383502960205
    7. 'number' → logprob: -8.393383026123047
    8. '_re' → logprob: -8.393383026123047
    9. '_digits' → logprob: -8.768383026123047
    10. '_count' → logprob: -9.018383026123047

Token 888: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013285996101330966
    2. '(' → logprob: -9.00013256072998
    3. 'self' → logprob: -12.12513256072998
    4. '   ' → logprob: -13.50013256072998
    5. ' (' → logprob: -13.62513256072998
    6. '(s' → logprob: -14.75013256072998
    7. '()' → logprob: -14.87513256072998
    8. '       ' → logprob: -15.50013256072998
    9. '(
' → logprob: -15.87513256072998
    10. ' ' → logprob: -16.125133514404297

Token 889: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00419248640537262
    2. '(' → logprob: -6.379192352294922
    3. '()' → logprob: -6.504192352294922
    4. 'self' → logprob: -7.754192352294922
    5. ')' → logprob: -8.129192352294922
    6. '   ' → logprob: -8.629192352294922
    7. ' (' → logprob: -10.754192352294922
    8. 'def' → logprob: -11.379192352294922
    9. '       ' → logprob: -12.004192352294922
    10. '_' → logprob: -12.129192352294922

Token 890: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015407454338856041
    2. 'self' → logprob: -9.500154495239258
    3. '(' → logprob: -9.750154495239258
    4. '   ' → logprob: -11.250154495239258
    5. '       ' → logprob: -12.250154495239258
    6. ' (' → logprob: -13.625154495239258
    7. ' self' → logprob: -14.750154495239258
    8. '()' → logprob: -14.875154495239258
    9. '(s' → logprob: -15.000154495239258
    10. '(
' → logprob: -15.750154495239258

Token 891: ' int' (ID: 677)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.0806900262832642
    2. '''' → logprob: -1.3306900262832642
    3. '""' → logprob: -1.7056900262832642
    4. '[]' → logprob: -1.9556900262832642
    5. 'int' → logprob: -3.4556899070739746
    6. '"' → logprob: -4.580689907073975
    7. '''
' → logprob: -4.705689907073975
    8. '[]
' → logprob: -4.955689907073975
    9. ' []' → logprob: -5.705689907073975
    10. ''' → logprob: -5.705689907073975

Token 892: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1336514949798584
    2. ':' → logprob: -2.5086514949798584
    3. ':
' → logprob: -4.1336517333984375
    4. '   ' → logprob: -4.6336517333984375
    5. '(self' → logprob: -4.7586517333984375
    6. '(' → logprob: -5.5086517333984375
    7. 'self' → logprob: -5.6336517333984375
    8. '{' → logprob: -8.133651733398438
    9. '_' → logprob: -8.633651733398438
    10. ' self' → logprob: -8.883651733398438

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035327249206602573
    2. 'num' → logprob: -6.628532886505127
    3. 'd' → logprob: -6.878532886505127
    4. 'digits' → logprob: -7.878532886505127
    5. 'digit' → logprob: -8.128532409667969
    6. 'result' → logprob: -9.253532409667969
    7. 'start' → logprob: -9.253532409667969
    8. '   ' → logprob: -9.253532409667969
    9. '```' → logprob: -10.503532409667969
    10. ' digits' → logprob: -10.503532409667969

Token 894: ' """
' (ID: 7037)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03236948698759079
    2. 'num' → logprob: -3.532369375228882
    3. 'digits' → logprob: -6.282369613647461
    4. 'result' → logprob: -8.282369613647461
    5. 'value' → logprob: -8.532369613647461
    6. 'digit' → logprob: -9.157369613647461
    7. ' start' → logprob: -9.407369613647461
    8. '       ' → logprob: -10.157369613647461
    9. 'number' → logprob: -10.282369613647461
    10. 'count' → logprob: -10.907369613647461

Token 895: '       ' (ID: 309)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.013519699685275555
    2. 'num' → logprob: -4.513519763946533
    3. 'digits' → logprob: -6.263519763946533
    4. '       ' → logprob: -8.138519287109375
    5. 'result' → logprob: -8.888519287109375
    6. 'value' → logprob: -10.138519287109375
    7. 'digit' → logprob: -10.388519287109375
    8. ' start' → logprob: -10.638519287109375
    9. 'number' → logprob: -11.138519287109375
    10. 'count' → logprob: -11.638519287109375

Token 896: ' Parses' (ID: 179117)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004192129243165255
    2. 'num' → logprob: -5.754192352294922
    3. 'digits' → logprob: -7.004192352294922
    4. 'result' → logprob: -9.504192352294922
    5. ' start' → logprob: -11.504192352294922
    6. 'number' → logprob: -11.879192352294922
    7. 'value' → logprob: -12.379192352294922
    8. 'count' → logprob: -12.504192352294922
    9. 'digit' → logprob: -12.629192352294922
    10. 'Start' → logprob: -13.004192352294922

Token 897: ' a' (ID: 261)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.3297717273235321
    2. 'start' → logprob: -2.0797717571258545
    3. 'number' → logprob: -3.0797717571258545
    4. '0' → logprob: -3.0797717571258545
    5. 'digit' → logprob: -4.079771518707275
    6. 'num' → logprob: -4.329771518707275
    7. 'result' → logprob: -4.329771518707275
    8. '       ' → logprob: -4.829771518707275
    9. 'value' → logprob: -5.079771518707275
    10. 'd' → logprob: -6.829771518707275

Token 898: ' sequence' (ID: 16281)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05482179671525955
    2. 'num' → logprob: -3.804821729660034
    3. 'number' → logprob: -3.804821729660034
    4. 'digits' → logprob: -4.804821968078613
    5. 'digit' → logprob: -7.554821968078613
    6. 'count' → logprob: -10.054821968078613
    7. ' start' → logprob: -10.929821968078613
    8. 'value' → logprob: -11.054821968078613
    9. 'result' → logprob: -11.179821968078613
    10. '_start' → logprob: -12.429821968078613

Token 899: ' of' (ID: 328)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.26074984669685364
    2. ' of' → logprob: -2.1357498168945312
    3. '()' → logprob: -3.0107498168945312
    4. '       ' → logprob: -3.3857498168945312
    5. ' while' → logprob: -4.260749816894531
    6. 'of' → logprob: -4.510749816894531
    7. 'def' → logprob: -7.260749816894531
    8. '           ' → logprob: -8.010749816894531
    9. 's' → logprob: -8.385749816894531
    10. ':' → logprob: -8.635749816894531

Token 900: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.009221644140779972
    2. ' digits' → logprob: -5.00922155380249
    3. 'digit' → logprob: -6.00922155380249
    4. '_digits' → logprob: -10.509222030639648
    5. '0' → logprob: -11.884222030639648
    6. 'd' → logprob: -12.634222030639648
    7. 'self' → logprob: -12.759222030639648
    8. 'Digits' → logprob: -13.134222030639648
    9. 'while' → logprob: -13.134222030639648
    10. 'isdigit' → logprob: -14.134222030639648

Token 901: ' from' (ID: 591)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7133954167366028
    2. '       ' → logprob: -1.213395357131958
    3. ' while' → logprob: -1.588395357131958
    4. '(' → logprob: -6.338395595550537
    5. '   ' → logprob: -6.713395595550537
    6. '()' → logprob: -7.088395595550537
    7. '(self' → logprob: -7.338395595550537
    8. ' (' → logprob: -7.463395595550537
    9. 'self' → logprob: -7.963395595550537
    10. ':' → logprob: -7.963395595550537

Token 902: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.021096238866448402
    2. 'the' → logprob: -4.146096229553223
    3. ' self' → logprob: -5.646096229553223
    4. ' the' → logprob: -6.521096229553223
    5. '       ' → logprob: -10.521096229553223
    6. 'current' → logprob: -12.521096229553223
    7. '(self' → logprob: -13.271096229553223
    8. 'digits' → logprob: -13.396096229553223
    9. ' ' → logprob: -13.646096229553223
    10. '
' → logprob: -13.646096229553223

Token 903: ' position' (ID: 4010)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05118408799171448
    2. 'position' → logprob: -3.3011841773986816
    3. ' self' → logprob: -4.926184177398682
    4. ' position' → logprob: -5.676184177398682
    5. 'while' → logprob: -7.676184177398682
    6. 'pos' → logprob: -7.926184177398682
    7. '       ' → logprob: -8.301183700561523
    8. '_position' → logprob: -8.301183700561523
    9. '
' → logprob: -8.426183700561523
    10. 'token' → logprob: -8.551183700561523

Token 904: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8331192135810852
    2. 'while' → logprob: -0.8331192135810852
    3. ' while' → logprob: -2.0831191539764404
    4. ',' → logprob: -6.4581193923950195
    5. '   ' → logprob: -6.7081193923950195
    6. '           ' → logprob: -7.9581193923950195
    7. '(' → logprob: -8.08311939239502
    8. '```' → logprob: -8.20811939239502
    9. 'digits' → logprob: -8.20811939239502
    10. ':' → logprob: -8.58311939239502

Token 905: ' returns' (ID: 7377)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4329632818698883
    2. 'num' → logprob: -1.932963252067566
    3. ' start' → logprob: -2.6829633712768555
    4. 'result' → logprob: -2.6829633712768555
    5. 'digits' → logprob: -2.9329633712768555
    6. '       ' → logprob: -4.8079633712768555
    7. ' result' → logprob: -6.1829633712768555
    8. 'value' → logprob: -6.1829633712768555
    9. ' digits' → logprob: -6.6829633712768555
    10. ' num' → logprob: -6.6829633712768555

Token 906: ' as' (ID: 472)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11005499958992004
    2. 'number' → logprob: -3.6100549697875977
    3. 'value' → logprob: -3.6100549697875977
    4. 'the' → logprob: -3.7350549697875977
    5. 'result' → logprob: -4.110054969787598
    6. ' ' → logprob: -5.735054969787598
    7. ' the' → logprob: -5.985054969787598
    8. 'digits' → logprob: -6.485054969787598
    9. 'int' → logprob: -6.860054969787598
    10. ' value' → logprob: -7.860054969787598

Token 907: ' integer' (ID: 16336)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7015813589096069
    2. 'int' → logprob: -0.7015813589096069
    3. ' int' → logprob: -5.4515814781188965
    4. 'number' → logprob: -5.7015814781188965
    5. ' ' → logprob: -8.826581001281738
    6. 'num' → logprob: -8.951581001281738
    7. 'digits' → logprob: -9.201581001281738
    8. 'value' → logprob: -9.326581001281738
    9. 'result' → logprob: -9.451581001281738
    10. ' number' → logprob: -9.826581001281738

Token 908: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003292851848527789
    2. 'num' → logprob: -7.253293037414551
    3. 'digits' → logprob: -7.378293037414551
    4. ':' → logprob: -7.878293037414551
    5. 'number' → logprob: -8.00329303741455
    6. 'result' → logprob: -8.25329303741455
    7. 'while' → logprob: -8.37829303741455
    8. ',' → logprob: -9.00329303741455
    9. '```' → logprob: -9.37829303741455
    10. '   ' → logprob: -9.75329303741455

Token 909: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29744473099708557
    2. 'digits' → logprob: -2.0474448204040527
    3. 'num' → logprob: -2.6724448204040527
    4. 'result' → logprob: -3.1724448204040527
    5. 'start' → logprob: -4.797444820404053
    6. 'digit' → logprob: -5.672444820404053
    7. 'number' → logprob: -5.797444820404053
    8. 'd' → logprob: -6.797444820404053
    9. 'value' → logprob: -7.547444820404053
    10. '```' → logprob: -8.047444343566895

Token 910: ' Raises' (ID: 153754)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.061504602432251
    2. '       ' → logprob: -1.311504602432251
    3. 'digits' → logprob: -1.311504602432251
    4. 'start' → logprob: -2.936504602432251
    5. 'result' → logprob: -2.936504602432251
    6. 'number' → logprob: -5.436504364013672
    7. 'digit' → logprob: -5.936504364013672
    8. 'value' → logprob: -7.186504364013672
    9. '```' → logprob: -7.311504364013672
    10. 'count' → logprob: -8.686504364013672

Token 911: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.001175343873910606
    2. ' Value' → logprob: -6.751175403594971
    3. '```' → logprob: -13.126174926757812
    4. '_value' → logprob: -13.376174926757812
    5. '_Value' → logprob: -15.001174926757812
    6. '   ' → logprob: -15.376174926757812
    7. '(Value' → logprob: -15.376174926757812
    8. 'if' → logprob: -15.626174926757812
    9. ' ' → logprob: -15.751174926757812
    10. 'EOF' → logprob: -15.876174926757812

Token 912: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00010533124441280961
    2. 'rror' → logprob: -9.500104904174805
    3. '```' → logprob: -11.250104904174805
    4. 'of' → logprob: -11.875104904174805
    5. '       ' → logprob: -13.250104904174805
    6. 'Value' → logprob: -13.500104904174805
    7. 'error' → logprob: -13.500104904174805
    8. '   ' → logprob: -13.750104904174805
    9. '=' → logprob: -14.375104904174805
    10. 'for' → logprob: -14.500104904174805

Token 913: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04874156415462494
    2. '       ' → logprob: -4.298741340637207
    3. 'if' → logprob: -4.798741340637207
    4. '(' → logprob: -4.923741340637207
    5. ' for' → logprob: -5.423741340637207
    6. ' while' → logprob: -5.423741340637207
    7. '(
' → logprob: -6.048741340637207
    8. 'while' → logprob: -6.298741340637207
    9. '   ' → logprob: -6.548741340637207
    10. '(self' → logprob: -7.173741340637207

Token 914: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16222071647644043
    2. 'not' → logprob: -1.9122207164764404
    3. ' not' → logprob: -6.7872209548950195
    4. ' self' → logprob: -7.1622209548950195
    5. '       ' → logprob: -10.28722095489502
    6. 'no' → logprob: -11.16222095489502
    7. '   ' → logprob: -11.28722095489502
    8. '(self' → logprob: -11.28722095489502
    9. 'True' → logprob: -12.41222095489502
    10. '_not' → logprob: -12.78722095489502

Token 915: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.7726384401321411
    2. ' digits' → logprob: -1.2726384401321411
    3. 'digit' → logprob: -1.8976384401321411
    4. '_digits' → logprob: -2.8976383209228516
    5. ' digit' → logprob: -3.3976383209228516
    6. '_digit' → logprob: -4.147638320922852
    7. 'self' → logprob: -6.647638320922852
    8. ' self' → logprob: -7.147638320922852
    9. 'd' → logprob: -7.397638320922852
    10. '_' → logprob: -7.772638320922852

Token 916: ' found' (ID: 2491)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30547812581062317
    2. ' at' → logprob: -2.305478096008301
    3. 'while' → logprob: -2.680478096008301
    4. ' are' → logprob: -3.680478096008301
    5. ' is' → logprob: -4.055478096008301
    6. ' while' → logprob: -4.180478096008301
    7. ' or' → logprob: -4.680478096008301
    8. ' not' → logprob: -5.680478096008301
    9. ':' → logprob: -5.680478096008301
    10. ' and' → logprob: -6.305478096008301

Token 917: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018881797790527344
    2. ':' → logprob: -5.518881797790527
    3. ' while' → logprob: -5.518881797790527
    4. ' or' → logprob: -5.893881797790527
    5. 'while' → logprob: -6.393881797790527
    6. ' and' → logprob: -6.768881797790527
    7. ',' → logprob: -6.768881797790527
    8. '.' → logprob: -7.518881797790527
    9. '           ' → logprob: -7.643881797790527
    10. '   ' → logprob: -7.643881797790527

Token 918: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017329225316643715
    2. 'digits' → logprob: -4.517329216003418
    3. 'd' → logprob: -6.142329216003418
    4. '```' → logprob: -6.267329216003418
    5. 'digit' → logprob: -6.392329216003418
    6. '   ' → logprob: -9.017329216003418
    7. ' digits' → logprob: -9.392329216003418
    8. '        
' → logprob: -9.767329216003418
    9. '``' → logprob: -10.517329216003418
    10. 'result' → logprob: -10.642329216003418

Token 919: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07935931533575058
    2. 'digits' → logprob: -2.704359292984009
    3. 'num' → logprob: -5.579359531402588
    4. 'start' → logprob: -5.704359531402588
    5. '```' → logprob: -7.454359531402588
    6. 'number' → logprob: -7.704359531402588
    7. 'result' → logprob: -7.954359531402588
    8. 'digit' → logprob: -8.07935905456543
    9. '
' → logprob: -8.20435905456543
    10. ' digits' → logprob: -9.07935905456543

Token 920: '       ' (ID: 309)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.37430357933044434
    2. '       ' → logprob: -1.6243035793304443
    3. 'digits' → logprob: -2.3743035793304443
    4. 'num' → logprob: -4.124303817749023
    5. 'number' → logprob: -6.374303817749023
    6. 'result' → logprob: -6.374303817749023
    7. '```' → logprob: -6.749303817749023
    8. ' start' → logprob: -7.124303817749023
    9. 'digit' → logprob: -8.374303817749023
    10. ' digits' → logprob: -8.624303817749023

Token 921: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -5.514650183613412e-05
    2. ' start' → logprob: -10.500055313110352
    3. 'digits' → logprob: -11.000055313110352
    4. 'num' → logprob: -11.750055313110352
    5. 'if' → logprob: -13.250055313110352
    6. 'digit' → logprob: -13.750055313110352
    7. 'number' → logprob: -17.12505531311035
    8. 'result' → logprob: -17.37505531311035
    9. '```' → logprob: -17.50005531311035
    10. 'Start' → logprob: -18.25005531311035

Token 922: '_pos' (ID: 14692)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05211218446493149
    2. '_pos' → logprob: -3.427112102508545
    3. ' =' → logprob: -4.177112102508545
    4. 'pos' → logprob: -6.552112102508545
    5. '_idx' → logprob: -7.052112102508545
    6. '_index' → logprob: -7.802112102508545
    7. '_=' → logprob: -9.802112579345703
    8. '_' → logprob: -9.927112579345703
    9. '=
' → logprob: -10.302112579345703
    10. '=self' → logprob: -10.427112579345703

Token 923: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036541218869388103
    2. ' =' → logprob: -5.6286540031433105
    3. '=
' → logprob: -10.128654479980469
    4. '=int' → logprob: -12.128654479980469
    5. '=self' → logprob: -12.378654479980469
    6. 'while' → logprob: -13.003654479980469
    7. '       ' → logprob: -14.628654479980469
    8. '_=' → logprob: -14.878654479980469
    9. '=index' → logprob: -14.878654479980469
    10. '=_' → logprob: -15.378654479980469

Token 924: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011765359668061137
    2. ' self' → logprob: -6.751176357269287
    3. '       ' → logprob: -12.001176834106445
    4. '
' → logprob: -16.126176834106445
    5. '=self' → logprob: -18.001176834106445
    6. '_self' → logprob: -18.001176834106445
    7. '	self' → logprob: -18.126176834106445
    8. '(self' → logprob: -18.501176834106445
    9. '   ' → logprob: -19.126176834106445
    10. '           ' → logprob: -19.251176834106445

Token 925: '._' (ID: 2697)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00048620346933603287
    2. '_self' → logprob: -8.500486373901367
    3. '._' → logprob: -8.625486373901367
    4. 'self' → logprob: -9.750486373901367
    5. '
' → logprob: -11.375486373901367
    6. 'pos' → logprob: -11.750486373901367
    7. '   ' → logprob: -11.750486373901367
    8. '       ' → logprob: -12.000486373901367
    9. '_s' → logprob: -13.125486373901367
    10. '_next' → logprob: -13.625486373901367

Token 926: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.650518920039758e-06
    2. '_pos' → logprob: -13.500003814697266
    3. 'consume' → logprob: -13.750003814697266
    4. 'parse' → logprob: -14.125003814697266
    5. ' pos' → logprob: -15.875003814697266
    6. '
' → logprob: -16.625003814697266
    7. '	pos' → logprob: -16.875003814697266
    8. 'peek' → logprob: -17.000003814697266
    9. 'data' → logprob: -17.500003814697266
    10. '   ' → logprob: -18.250003814697266

Token 927: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.008016716688871384
    2. '       ' → logprob: -5.008016586303711
    3. ' while' → logprob: -6.758016586303711
    4. '
' → logprob: -9.133016586303711
    5. '	while' → logprob: -11.008016586303711
    6. 'While' → logprob: -12.633016586303711
    7. '```' → logprob: -12.633016586303711
    8. '        
' → logprob: -13.508016586303711
    9. 'digit' → logprob: -13.758016586303711
    10. 'digits' → logprob: -13.883016586303711

Token 928: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10112063586711884
    2. '       ' → logprob: -2.351120710372925
    3. ' while' → logprob: -7.226120471954346
    4. '```' → logprob: -9.601120948791504
    5. '
' → logprob: -9.851120948791504
    6. '	while' → logprob: -10.976120948791504
    7. 'digits' → logprob: -11.101120948791504
    8. 'number' → logprob: -11.601120948791504
    9. '   ' → logprob: -11.601120948791504
    10. 'if' → logprob: -12.226120948791504

Token 929: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00021748353901784867
    2. ' while' → logprob: -8.87521743774414
    3. '       ' → logprob: -9.75021743774414
    4. 'digits' → logprob: -11.25021743774414
    5. 'num' → logprob: -13.50021743774414
    6. 'result' → logprob: -13.87521743774414
    7. '        
' → logprob: -14.12521743774414
    8. 'While' → logprob: -14.25021743774414
    9. 'number' → logprob: -14.25021743774414
    10. 'if' → logprob: -14.37521743774414

Token 930: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014239903539419174
    2. ' self' → logprob: -4.26423978805542
    3. '(self' → logprob: -10.139240264892578
    4. '0' → logprob: -11.139240264892578
    5. ' ' → logprob: -11.764240264892578
    6. ' (' → logprob: -12.264240264892578
    7. '(' → logprob: -12.264240264892578
    8. '(
' → logprob: -13.514240264892578
    9. '	self' → logprob: -13.514240264892578
    10. '   ' → logprob: -14.139240264892578

Token 931: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.006544724106788635
    2. '_pos' → logprob: -5.381544589996338
    3. '<_' → logprob: -7.256544589996338
    4. ' <' → logprob: -8.006545066833496
    5. '<' → logprob: -8.131545066833496
    6. '.pos' → logprob: -8.881545066833496
    7. 'pos' → logprob: -9.256545066833496
    8. '[pos' → logprob: -9.756545066833496
    9. 'self' → logprob: -9.881545066833496
    10. ' _' → logprob: -10.006545066833496

Token 932: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.009618082083761692
    2. 'peek' → logprob: -5.134618282318115
    3. 'data' → logprob: -6.009618282318115
    4. '_pos' → logprob: -7.134618282318115
    5. '_data' → logprob: -8.009617805480957
    6. 'parse' → logprob: -10.509617805480957
    7. 'consume' → logprob: -11.134617805480957
    8. '.pos' → logprob: -11.759617805480957
    9. ' pos' → logprob: -12.009617805480957
    10. '<' → logprob: -12.009617805480957

Token 933: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16312311589717865
    2. '<' → logprob: -1.9131231307983398
    3. '<len' → logprob: -5.91312313079834
    4. '<n' → logprob: -8.91312313079834
    5. '<size' → logprob: -11.41312313079834
    6. '<m' → logprob: -11.66312313079834
    7. '<_' → logprob: -12.16312313079834
    8. '<char' → logprob: -12.53812313079834
    9. '<w' → logprob: -12.78812313079834
    10. '<this' → logprob: -12.78812313079834

Token 934: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012439649435691535
    2. ' self' → logprob: -9.000123977661133
    3. 'len' → logprob: -13.875123977661133
    4. '
' → logprob: -17.000123977661133
    5. '(self' → logprob: -18.375123977661133
    6. '	self' → logprob: -18.875123977661133
    7. '[self' → logprob: -20.375123977661133
    8. '=self' → logprob: -20.500123977661133
    9. '```' → logprob: -20.625123977661133
    10. '_self' → logprob: -20.875123977661133

Token 935: '._' (ID: 2697)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5425892472267151
    2. 'self' → logprob: -2.0425891876220703
    3. ' and' → logprob: -2.1675891876220703
    4. 'and' → logprob: -2.6675891876220703
    5. '._' → logprob: -2.7925891876220703
    6. 'length' → logprob: -4.16758918762207
    7. '_len' → logprob: -5.16758918762207
    8. '_' → logprob: -5.16758918762207
    9. 'len' → logprob: -5.29258918762207
    10. ' _' → logprob: -6.16758918762207

Token 936: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.004109746310859919
    2. '_length' → logprob: -5.504109859466553
    3. 'len' → logprob: -10.629109382629395
    4. 'data' → logprob: -13.754109382629395
    5. ' length' → logprob: -13.879109382629395
    6. '.length' → logprob: -14.129109382629395
    7. 'leng' → logprob: -14.254109382629395
    8. '_' → logprob: -14.754109382629395
    9. '-length' → logprob: -15.004109382629395
    10. 'ength' → logprob: -15.004109382629395

Token 937: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519323229789734
    2. 'and' → logprob: -1.5019323825836182
    3. 'self' → logprob: -13.001932144165039
    4. '           ' → logprob: -15.126932144165039
    5. '	and' → logprob: -15.876932144165039
    6. ',' → logprob: -16.00193214416504
    7. '   ' → logprob: -16.00193214416504
    8. '()' → logprob: -16.75193214416504
    9. '_and' → logprob: -17.00193214416504
    10. ' ' → logprob: -17.00193214416504

Token 938: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009117019944824278
    2. ' self' → logprob: -7.000911712646484
    3. '
' → logprob: -16.125911712646484
    4. '(self' → logprob: -16.500911712646484
    5. '	self' → logprob: -18.875911712646484
    6. '0' → logprob: -18.875911712646484
    7. '   ' → logprob: -19.125911712646484
    8. ' ' → logprob: -19.750911712646484
    9. ''' → logprob: -20.000911712646484
    10. '1' → logprob: -20.375911712646484

Token 939: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.017927029868588e-05
    2. '_data' → logprob: -10.375080108642578
    3. '.data' → logprob: -11.500080108642578
    4. '
' → logprob: -11.875080108642578
    5. 'self' → logprob: -11.875080108642578
    6. '[data' → logprob: -12.000080108642578
    7. '   ' → logprob: -12.625080108642578
    8. '```' → logprob: -12.625080108642578
    9. 'data' → logprob: -13.500080108642578
    10. '[' → logprob: -13.500080108642578

Token 940: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0002786167024169117
    2. '_data' → logprob: -8.25027847290039
    3. 'peek' → logprob: -11.75027847290039
    4. ' data' → logprob: -13.00027847290039
    5. 'consume' → logprob: -13.37527847290039
    6. '
' → logprob: -13.75027847290039
    7. '.data' → logprob: -14.00027847290039
    8. 'parse' → logprob: -14.12527847290039
    9. 'pos' → logprob: -14.87527847290039
    10. '_pe' → logprob: -15.00027847290039

Token 941: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -4.0484450437361374e-05
    2. 'self' → logprob: -10.125040054321289
    3. ' self' → logprob: -15.625040054321289
    4. '[
' → logprob: -16.25004005432129
    5. '[' → logprob: -17.25004005432129
    6. '
' → logprob: -18.25004005432129
    7. '	self' → logprob: -18.75004005432129
    8. ' [' → logprob: -19.50004005432129
    9. '```' → logprob: -19.62504005432129
    10. '(self' → logprob: -20.00004005432129

Token 942: '._' (ID: 2697)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.018103353679180145
    2. '._' → logprob: -4.768103122711182
    3. '[_' → logprob: -4.893103122711182
    4. 'self' → logprob: -6.268103122711182
    5. '[' → logprob: -11.64310359954834
    6. '][_' → logprob: -11.64310359954834
    7. ' self' → logprob: -11.89310359954834
    8. '[
' → logprob: -12.14310359954834
    9. ']._' → logprob: -12.64310359954834
    10. '
' → logprob: -13.01810359954834

Token 943: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0003818140830844641
    2. '_pos' → logprob: -7.875381946563721
    3. 'data' → logprob: -14.750381469726562
    4. '.pos' → logprob: -15.000381469726562
    5. '_data' → logprob: -15.000381469726562
    6. '[pos' → logprob: -15.125381469726562
    7. 'self' → logprob: -16.000381469726562
    8. 'isdigit' → logprob: -16.000381469726562
    9. '```' → logprob: -16.000381469726562
    10. ' pos' → logprob: -16.500381469726562

Token 944: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.22092650830745697
    2. '.' → logprob: -1.7209265232086182
    3. 'isdigit' → logprob: -4.095926284790039
    4. ').' → logprob: -7.345926284790039
    5. ' .' → logprob: -7.595926284790039
    6. '].' → logprob: -7.970926284790039
    7. '[' → logprob: -7.970926284790039
    8. ' in' → logprob: -8.345926284790039
    9. '>=' → logprob: -8.345926284790039
    10. '   ' → logprob: -8.970926284790039

Token 945: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -9.088346359931165e-07
    2. 'is' → logprob: -14.000000953674316
    3. 'iss' → logprob: -16.875
    4. 'isal' → logprob: -17.75
    5. ' is' → logprob: -18.875
    6. 'isas' → logprob: -19.375
    7. 'isd' → logprob: -19.75
    8. '
' → logprob: -20.875
    9. 'isin' → logprob: -21.5
    10. '```' → logprob: -21.625

Token 946: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.030242381617426872
    2. '():
' → logprob: -3.530242443084717
    3. '()' → logprob: -7.655242443084717
    4. ' ():' → logprob: -11.155241966247559
    5. ':' → logprob: -13.405241966247559
    6. '()==' → logprob: -14.405241966247559
    7. '():
' → logprob: -14.405241966247559
    8. '(' → logprob: -14.655241966247559
    9. '():

' → logprob: -15.030241966247559
    10. '()):
' → logprob: -15.530241966247559

Token 947: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033831533510237932
    2. '       ' → logprob: -6.128383159637451
    3. '   ' → logprob: -7.878383159637451
    4. ':' → logprob: -9.003382682800293
    5. '	       ' → logprob: -9.128382682800293
    6. '               ' → logprob: -9.378382682800293
    7. 'self' → logprob: -9.503382682800293
    8. '<|end|>' → logprob: -9.628382682800293
    9. '```' → logprob: -9.753382682800293
    10. '{
' → logprob: -10.253382682800293

Token 948: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015761636896058917
    2. ' self' → logprob: -7.126575946807861
    3. '           ' → logprob: -7.251575946807861
    4. '   ' → logprob: -9.75157642364502
    5. '	self' → logprob: -13.12657642364502
    6. '       ' → logprob: -13.87657642364502
    7. '               ' → logprob: -14.75157642364502
    8. ' ' → logprob: -14.75157642364502
    9. '
' → logprob: -16.251575469970703
    10. '_self' → logprob: -16.251575469970703

Token 949: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5769412517547607
    2. '_pos' → logprob: -0.8269412517547607
    3. '+=' → logprob: -7.82694149017334
    4. '_' → logprob: -8.57694149017334
    5. '.pos' → logprob: -8.57694149017334
    6. ' +=' → logprob: -9.70194149017334
    7. '   ' → logprob: -9.82694149017334
    8. 'pos' → logprob: -10.70194149017334
    9. 'self' → logprob: -10.82694149017334
    10. '
' → logprob: -11.20194149017334

Token 950: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00011474833445390686
    2. '_pos' → logprob: -9.500114440917969
    3. 'data' → logprob: -10.250114440917969
    4. 'consume' → logprob: -12.625114440917969
    5. '_data' → logprob: -13.875114440917969
    6. ' pos' → logprob: -16.75011444091797
    7. '_cons' → logprob: -16.87511444091797
    8. '.pos' → logprob: -17.25011444091797
    9. 'parse' → logprob: -17.50011444091797
    10. 'advance' → logprob: -18.00011444091797

Token 951: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001503313542343676
    2. ' +=' → logprob: -6.5015034675598145
    3. ']+=' → logprob: -14.376502990722656
    4. '   ' → logprob: -15.626502990722656
    5. '           ' → logprob: -15.876502990722656
    6. '       ' → logprob: -17.376502990722656
    7. '+' → logprob: -17.751502990722656
    8. '+='' → logprob: -18.001502990722656
    9. '=' → logprob: -18.126502990722656
    10. '```' → logprob: -18.126502990722656

Token 952: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '```' → logprob: -20.000001907348633
    6. '۱' → logprob: -21.250001907348633
    7. '           ' → logprob: -21.750001907348633
    8. '       ' → logprob: -22.187501907348633
    9. '+' → logprob: -22.375001907348633
    10. '１' → logprob: -22.437501907348633

Token 953: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '
' → logprob: -19.25
    4. '```' → logprob: -20.625
    5. '   ' → logprob: -21.0
    6. '۱' → logprob: -22.25
    7. '１' → logprob: -23.5
    8. '

' → logprob: -23.8125
    9. '१' → logprob: -24.1875
    10. '  ' → logprob: -24.1875

Token 954: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03528331592679024
    2. '
' → logprob: -3.410283327102661
    3. ' if' → logprob: -7.160283088684082
    4. 'if' → logprob: -7.785283088684082
    5. 'token' → logprob: -9.035283088684082
    6. '        
' → logprob: -9.660283088684082
    7. '[' → logprob: -10.785283088684082
    8. '0' → logprob: -10.910283088684082
    9. 'digits' → logprob: -10.910283088684082
    10. ',' → logprob: -11.035283088684082

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018734747543931007
    2. 'if' → logprob: -4.518734931945801
    3. ' if' → logprob: -5.643734931945801
    4. 'number' → logprob: -6.018734931945801
    5. 'num' → logprob: -7.768734931945801
    6. '```' → logprob: -7.768734931945801
    7. 'digits' → logprob: -7.893734931945801
    8. ' number' → logprob: -8.8937349319458
    9. '
' → logprob: -8.8937349319458
    10. 'digit' → logprob: -9.6437349319458

Token 956: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0015393845969811082
    2. ' if' → logprob: -6.50153923034668
    3. '       ' → logprob: -10.75153923034668
    4. 'number' → logprob: -12.00153923034668
    5. 'digits' → logprob: -12.50153923034668
    6. 'digit' → logprob: -12.62653923034668
    7. 'num' → logprob: -13.12653923034668
    8. '```' → logprob: -14.87653923034668
    9. 'token' → logprob: -16.50153923034668
    10. '
' → logprob: -17.75153923034668

Token 957: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4838465750217438
    2. 'start' → logprob: -0.9838465452194214
    3. ' self' → logprob: -4.858846664428711
    4. ' start' → logprob: -6.233846664428711
    5. '_start' → logprob: -14.608846664428711
    6. '	self' → logprob: -16.85884666442871
    7. '	start' → logprob: -16.85884666442871
    8. 'star' → logprob: -17.23384666442871
    9. ' ' → logprob: -17.98384666442871
    10. '0' → logprob: -18.23384666442871

Token 958: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.143808109802194e-05
    2. 'pos' → logprob: -11.000041007995605
    3. '==' → logprob: -11.125041007995605
    4. 'Pos' → logprob: -13.000041007995605
    5. '```' → logprob: -13.000041007995605
    6. '<' → logprob: -13.625041007995605
    7. '>=' → logprob: -13.875041007995605
    8. '<=' → logprob: -14.250041007995605
    9. ' ==' → logprob: -14.875041007995605
    10. '<_' → logprob: -15.250041007995605

Token 959: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.000930163892917335
    2. ' ==' → logprob: -7.000930309295654
    3. '==
' → logprob: -11.625929832458496
    4. '=' → logprob: -11.625929832458496
    5. '>=' → logprob: -14.500929832458496
    6. '===' → logprob: -16.375930786132812
    7. '#' → logprob: -16.875930786132812
    8. ')==' → logprob: -17.500930786132812
    9. ']==' → logprob: -17.625930786132812
    10. '[' → logprob: -18.000930786132812

Token 960: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.698698704596609e-05
    2. ' self' → logprob: -9.250097274780273
    3. '=self' → logprob: -14.375097274780273
    4. '
' → logprob: -16.000097274780273
    5. '	self' → logprob: -17.125097274780273
    6. '<|end|>' → logprob: -17.375097274780273
    7. '_self' → logprob: -17.500097274780273
    8. '=' → logprob: -18.500097274780273
    9. '(self' → logprob: -18.500097274780273
    10. '0' → logprob: -18.625097274780273

Token 961: '._' (ID: 2697)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.08874750137329102
    2. 'pos' → logprob: -2.963747501373291
    3. '._' → logprob: -3.713747501373291
    4. '.pos' → logprob: -5.088747501373291
    5. '[pos' → logprob: -7.838747501373291
    6. '<|end|>' → logprob: -8.588747024536133
    7. '==' → logprob: -8.713747024536133
    8. '_' → logprob: -8.713747024536133
    9. 'self' → logprob: -8.838747024536133
    10. ':' → logprob: -8.838747024536133

Token 962: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0015079588629305363
    2. '_pos' → logprob: -6.501507759094238
    3. 'start' → logprob: -12.501507759094238
    4. ' pos' → logprob: -14.751507759094238
    5. 'position' → logprob: -14.876507759094238
    6. '_start' → logprob: -15.251507759094238
    7. '.pos' → logprob: -15.376507759094238
    8. '	pos' → logprob: -15.751507759094238
    9. 'data' → logprob: -15.876507759094238
    10. '_data' → logprob: -16.251508712768555

Token 963: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0897008404135704
    2. ':
' → logprob: -2.589700937271118
    3. ':' → logprob: -4.714700698852539
    4. 'raise' → logprob: -6.714700698852539
    5. '	raise' → logprob: -8.964700698852539
    6. ',' → logprob: -9.089700698852539
    7. ' raise' → logprob: -9.589700698852539
    8. '       ' → logprob: -9.714700698852539
    9. '):
' → logprob: -10.214700698852539
    10. ' or' → logprob: -10.714700698852539

Token 964: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006284729111939669
    2. 'raise' → logprob: -5.131284713745117
    3. ' raise' → logprob: -8.381284713745117
    4. '	raise' → logprob: -9.131284713745117
    5. '```' → logprob: -11.756284713745117
    6. 'Raise' → logprob: -13.256284713745117
    7. '		' → logprob: -13.381284713745117
    8. '_raise' → logprob: -13.631284713745117
    9. '               ' → logprob: -13.756284713745117
    10. '   ' → logprob: -13.756284713745117

Token 965: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.004267388954758644
    2. '           ' → logprob: -5.50426721572876
    3. ' raise' → logprob: -8.754267692565918
    4. '	raise' → logprob: -10.504267692565918
    5. '
' → logprob: -13.004267692565918
    6. 'Raise' → logprob: -14.879267692565918
    7. 'raises' → logprob: -15.254267692565918
    8. '               ' → logprob: -15.379267692565918
    9. '   ' → logprob: -15.504267692565918
    10. '            
' → logprob: -16.0042667388916

Token 966: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.003178071230649948
    2. ' Value' → logprob: -5.753178119659424
    3. '_value' → logprob: -15.503177642822266
    4. '	Value' → logprob: -16.628177642822266
    5. '_Value' → logprob: -18.253177642822266
    6. 'value' → logprob: -18.253177642822266
    7. ' ' → logprob: -18.503177642822266
    8. '.Value' → logprob: -19.128177642822266
    9. ' value' → logprob: -19.253177642822266
    10. '<Value' → logprob: -19.378177642822266

Token 967: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00408053956925869
    2. 'rror' → logprob: -5.504080772399902
    3. 'ror' → logprob: -14.504080772399902
    4. 'error' → logprob: -14.629080772399902
    5. 'r' → logprob: -15.254080772399902
    6. 'Value' → logprob: -15.254080772399902
    7. 'of' → logprob: -15.629080772399902
    8. 'or' → logprob: -17.004079818725586
    9. 'Of' → logprob: -17.004079818725586
    10. 'alue' → logprob: -17.129079818725586

Token 968: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.87500286102295
    3. '(f' → logprob: -15.12500286102295
    4. '('' → logprob: -15.50000286102295
    5. '(
' → logprob: -15.87500286102295
    6. '("'' → logprob: -18.750003814697266
    7. '("_' → logprob: -20.375003814697266
    8. '"' → logprob: -21.375003814697266
    9. '()' → logprob: -22.250003814697266
    10. 'f' → logprob: -22.500003814697266

Token 969: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0049005853943526745
    2. '"No' → logprob: -5.3799004554748535
    3. 'Expected' → logprob: -8.629900932312012
    4. 'f' → logprob: -10.004900932312012
    5. ' "' → logprob: -10.254900932312012
    6. 'No' → logprob: -11.754900932312012
    7. ''' → logprob: -12.004900932312012
    8. 'Unexpected' → logprob: -12.754900932312012
    9. ' f' → logprob: -13.504900932312012
    10. '   ' → logprob: -14.004900932312012

Token 970: 'Expected' (ID: 28041)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5811046361923218
    2. 'Expected' → logprob: -0.8311046361923218
    3. '"No' → logprob: -6.081104755401611
    4. 'Unexpected' → logprob: -7.081104755401611
    5. 'Invalid' → logprob: -7.331104755401611
    6. 'No' → logprob: -7.331104755401611
    7. 'Expect' → logprob: -8.081104278564453
    8. 'f' → logprob: -8.831104278564453
    9. 'Value' → logprob: -9.081104278564453
    10. ' Expected' → logprob: -9.956104278564453

Token 971: ' digits' (ID: 37806)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.022337980568408966
    2. 'digits' → logprob: -4.522337913513184
    3. ' digit' → logprob: -4.647337913513184
    4. ' digits' → logprob: -6.772337913513184
    5. ' a' → logprob: -8.147337913513184
    6. 'd' → logprob: -9.272337913513184
    7. 'a' → logprob: -10.147337913513184
    8. '_digit' → logprob: -11.272337913513184
    9. 'isdigit' → logprob: -11.397337913513184
    10. 'self' → logprob: -11.522337913513184

Token 972: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.09113878011703491
    2. '")' → logprob: -2.4661388397216797
    3. ' but' → logprob: -7.09113883972168
    4. ' while' → logprob: -7.84113883972168
    5. ' to' → logprob: -8.46613883972168
    6. 'at' → logprob: -8.59113883972168
    7. 'while' → logprob: -8.84113883972168
    8. ',' → logprob: -9.21613883972168
    9. ' for' → logprob: -9.34113883972168
    10. '"' → logprob: -10.34113883972168

Token 973: ' position' (ID: 4010)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005385895259678364
    2. ' self' → logprob: -5.255385875701904
    3. 'position' → logprob: -9.005386352539062
    4. 'pos' → logprob: -10.630386352539062
    5. ' position' → logprob: -12.755386352539062
    6. '
' → logprob: -13.880386352539062
    7. '(self' → logprob: -14.630386352539062
    8. 'index' → logprob: -15.130386352539062
    9. '{' → logprob: -16.130386352539062
    10. '_pos' → logprob: -16.505386352539062

Token 974: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.11917491257190704
    2. 'self' → logprob: -2.6191749572753906
    3. ' {' → logprob: -3.6191749572753906
    4. ' self' → logprob: -4.369174957275391
    5. 'start' → logprob: -11.24417495727539
    6. '{
' → logprob: -12.99417495727539
    7. ' start' → logprob: -13.74417495727539
    8. '
' → logprob: -14.11917495727539
    9. '{return' → logprob: -15.36917495727539
    10. '{s' → logprob: -16.24417495727539

Token 975: 'start' (ID: 5236)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011319868644932285
    2. ' self' → logprob: -9.125113487243652
    3. 'start' → logprob: -12.625113487243652
    4. '
' → logprob: -14.375113487243652
    5. '(self' → logprob: -16.375112533569336
    6. '       ' → logprob: -16.875112533569336
    7. '{' → logprob: -16.875112533569336
    8. '   ' → logprob: -17.250112533569336
    9. '           ' → logprob: -17.750112533569336
    10. '_start' → logprob: -18.375112533569336

Token 976: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0008548821206204593
    2. 'pos' → logprob: -7.250854969024658
    3. 'Pos' → logprob: -9.1258544921875
    4. 'self' → logprob: -10.6258544921875
    5. '_start' → logprob: -12.3758544921875
    6. '._' → logprob: -13.6258544921875
    7. '       ' → logprob: -13.7508544921875
    8. '.pos' → logprob: -13.7508544921875
    9. '0' → logprob: -13.8758544921875
    10. '           ' → logprob: -14.6258544921875

Token 977: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12607966363430023
    2. '")
' → logprob: -2.376079559326172
    3. ' but' → logprob: -4.626079559326172
    4. '}")' → logprob: -4.751079559326172
    5. '}")
' → logprob: -5.626079559326172
    6. ')")
' → logprob: -6.876079559326172
    7. ',' → logprob: -7.251079559326172
    8. ')")' → logprob: -8.001079559326172
    9. ' ")' → logprob: -8.126079559326172
    10. ')' → logprob: -8.376079559326172

Token 978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015020881779491901
    2. 'return' → logprob: -4.515020847320557
    3. '
' → logprob: -5.640020847320557
    4. '```' → logprob: -9.140021324157715
    5. 'number' → logprob: -9.640021324157715
    6. ' return' → logprob: -9.640021324157715
    7. '        
' → logprob: -9.890021324157715
    8. 'token' → logprob: -10.890021324157715
    9. 'digits' → logprob: -11.015021324157715
    10. 'num' → logprob: -11.765021324157715

Token 979: ' num' (ID: 2269)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5879335403442383
    2. 'return' → logprob: -0.8379335403442383
    3. 'digits' → logprob: -5.337933540344238
    4. 'num' (adapté à ' num') → logprob: -5.837933540344238
    5. 'number' → logprob: -5.837933540344238
    6. ' return' → logprob: -7.087933540344238
    7. 'value' → logprob: -7.962933540344238
    8. 'digit' → logprob: -9.837933540344238
    9. 'result' → logprob: -11.837933540344238
    10. ' number' → logprob: -11.837933540344238

Token 980: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6404079794883728
    2. '=' → logprob: -1.3904080390930176
    3. 'ber' → logprob: -1.5154080390930176
    4. '=int' → logprob: -5.515408039093018
    5. '_str' → logprob: -9.64040756225586
    6. '=
' → logprob: -10.89040756225586
    7. '```' → logprob: -11.14040756225586
    8. '=self' → logprob: -11.64040756225586
    9. 's' → logprob: -11.76540756225586
    10. ':' → logprob: -11.76540756225586

Token 981: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002613358374219388
    2. ' int' → logprob: -8.250261306762695
    3. '   ' → logprob: -21.375261306762695
    4. '       ' → logprob: -21.625261306762695
    5. '(int' → logprob: -21.625261306762695
    6. '=int' → logprob: -22.000261306762695
    7. '	int' → logprob: -22.375261306762695
    8. '```' → logprob: -22.500261306762695
    9. 'self' → logprob: -23.000261306762695
    10. '[int' → logprob: -23.000261306762695

Token 982: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.811348480870947e-05
    2. '(' → logprob: -10.37504768371582
    3. 'self' → logprob: -11.00004768371582
    4. '(
' → logprob: -15.62504768371582
    5. ' self' → logprob: -18.62504768371582
    6. '[self' → logprob: -18.75004768371582
    7. ' (' → logprob: -19.37504768371582
    8. '=self' → logprob: -19.50004768371582
    9. '```' → logprob: -20.00004768371582
    10. ':self' → logprob: -20.12504768371582

Token 983: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.001067227916792035
    2. '_data' → logprob: -7.251067161560059
    3. 'self' → logprob: -8.251067161560059
    4. '(self' → logprob: -10.251067161560059
    5. '.data' → logprob: -10.501067161560059
    6. '[self' → logprob: -11.626067161560059
    7. '(_' → logprob: -12.876067161560059
    8. '_' → logprob: -12.876067161560059
    9. '_self' → logprob: -13.001067161560059
    10. '
' → logprob: -13.126067161560059

Token 984: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.008628997951745987
    2. '_data' → logprob: -4.758628845214844
    3. ' data' → logprob: -12.883628845214844
    4. 'consume' → logprob: -13.133628845214844
    5. '
' → logprob: -13.508628845214844
    6. '.data' → logprob: -14.008628845214844
    7. 'pos' → logprob: -14.008628845214844
    8. 'parse' → logprob: -14.008628845214844
    9. '```' → logprob: -14.258628845214844
    10. 'self' → logprob: -14.383628845214844

Token 985: '[start' (ID: 62179)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.03830380737781525
    2. '[start' → logprob: -3.288303852081299
    3. '[' → logprob: -8.66330337524414
    4. 'self' → logprob: -9.53830337524414
    5. '[
' → logprob: -11.53830337524414
    6. '   ' → logprob: -12.41330337524414
    7. ')' → logprob: -13.03830337524414
    8. '
' → logprob: -14.78830337524414
    9. '```' → logprob: -15.16330337524414
    10. ')[' → logprob: -16.03830337524414

Token 986: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.17459431290626526
    2. '[start' → logprob: -2.2995944023132324
    3. 'start' → logprob: -3.0495944023132324
    4. 'self' → logprob: -4.549594402313232
    5. 'pos' → logprob: -7.174594402313232
    6. '[self' → logprob: -7.799594402313232
    7. 's' → logprob: -8.799593925476074
    8. 'Pos' → logprob: -8.799593925476074
    9. ':start' → logprob: -8.799593925476074
    10. '_start' → logprob: -8.799593925476074

Token 987: ':self' (ID: 28173)
  Prédit: ':self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':self' → logprob: -0.02458762563765049
    2. 'self' → logprob: -3.774587631225586
    3. ' self' → logprob: -6.899587631225586
    4. ' :' → logprob: -8.899587631225586
    5. '
' → logprob: -9.399587631225586
    6. '[self' → logprob: -9.649587631225586
    7. ':' → logprob: -10.399587631225586
    8. '	self' → logprob: -11.774587631225586
    9. '(self' → logprob: -13.149587631225586
    10. '   ' → logprob: -13.399587631225586

Token 988: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00016384923947043717
    2. '_pos' → logprob: -8.750164031982422
    3. ':_' → logprob: -13.250164031982422
    4. '.pos' → logprob: -13.375164031982422
    5. '.' → logprob: -14.250164031982422
    6. ']._' → logprob: -14.875164031982422
    7. '
' → logprob: -15.125164031982422
    8. '_start' → logprob: -15.750164031982422
    9. '_' → logprob: -15.875164031982422
    10. '   ' → logprob: -16.500164031982422

Token 989: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011050059460103512
    2. '_pos' → logprob: -4.511050224304199
    3. '.pos' → logprob: -13.2610502243042
    4. ' pos' → logprob: -15.2610502243042
    5. '	pos' → logprob: -15.7610502243042
    6. '
' → logprob: -17.136049270629883
    7. 'length' → logprob: -18.136049270629883
    8. '_end' → logprob: -18.636049270629883
    9. 'Pos' → logprob: -18.761049270629883
    10. 'self' → logprob: -18.761049270629883

Token 990: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00040576665196567774
    2. '])
' → logprob: -8.000405311584473
    3. ' ])' → logprob: -9.625405311584473
    4. ']' → logprob: -13.375405311584473
    5. '       ' → logprob: -13.500405311584473
    6. ')' → logprob: -14.500405311584473
    7. '   ' → logprob: -16.00040626525879
    8. '])

' → logprob: -16.00040626525879
    9. '])
' → logprob: -16.12540626525879
    10. ' ])
' → logprob: -16.62540626525879

Token 991: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005427849246188998
    2. 'return' → logprob: -7.750542640686035
    3. ' return' → logprob: -9.250542640686035
    4. '	' → logprob: -11.625542640686035
    5. '   ' → logprob: -13.625542640686035
    6. '	return' → logprob: -13.875542640686035
    7. '<|end|>' → logprob: -13.875542640686035
    8. '           ' → logprob: -14.000542640686035
    9. ',' → logprob: -14.250542640686035
    10. '	   ' → logprob: -14.875542640686035

Token 992: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048839423805475235
    2. 'return' (adapté à ' return') → logprob: -3.0488393306732178
    3. ' return' → logprob: -8.298839569091797
    4. '
' → logprob: -13.673839569091797
    5. '   ' → logprob: -14.173839569091797
    6. '           ' → logprob: -14.423839569091797
    7. '	return' → logprob: -15.048839569091797
    8. '	' → logprob: -15.298839569091797
    9. ':return' → logprob: -17.048839569091797
    10. '        
' → logprob: -17.173839569091797

Token 993: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -2.935296834039036e-06
    2. ' num' → logprob: -12.75000286102295
    3. '
' → logprob: -18.000003814697266
    4. '	num' → logprob: -21.125003814697266
    5. '(num' → logprob: -22.375003814697266
    6. '[num' → logprob: -23.500003814697266
    7. '_num' → logprob: -23.500003814697266
    8. '$num' → logprob: -23.625003814697266
    9. '   ' → logprob: -24.375003814697266
    10. '=num' → logprob: -24.625003814697266

Token 994: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10767820477485657
    2. '   ' → logprob: -2.357678174972534
    3. '    
' → logprob: -5.857678413391113
    4. '<|end|>' → logprob: -6.482678413391113
    5. '```' → logprob: -6.732678413391113
    6. '

' → logprob: -6.732678413391113
    7. 'def' → logprob: -8.107678413391113
    8. '  
' → logprob: -9.232678413391113
    9. ' 
' → logprob: -9.232678413391113
    10. '<|end|>' → logprob: -9.732678413391113

Token 995: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3813568353652954
    2. 'def' → logprob: -1.2563568353652954
    3. '```' → logprob: -3.756356716156006
    4. '
' → logprob: -4.881356716156006
    5. ' def' → logprob: -7.256356716156006
    6. '    
' → logprob: -8.256357192993164
    7. '<|end|>' → logprob: -8.756357192993164
    8. '

' → logprob: -9.381357192993164
    9. '	def' → logprob: -10.131357192993164
    10. 'The' → logprob: -10.756357192993164

Token 996: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014179732650518417
    2. '   ' → logprob: -4.764179706573486
    3. '
' → logprob: -5.264179706573486
    4. ' def' → logprob: -8.014180183410645
    5. '    
' → logprob: -10.764180183410645
    6. '```' → logprob: -11.139180183410645
    7. '

' → logprob: -12.139180183410645
    8. '	def' → logprob: -13.389180183410645
    9. '_def' → logprob: -13.764180183410645
    10. '        
' → logprob: -14.514180183410645

Token 997: ' _' (ID: 1175)
  Prédit: '_parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -0.0009346862207166851
    2. ' _' → logprob: -7.000934600830078
    3. 'def' → logprob: -12.000934600830078
    4. '_' → logprob: -12.250934600830078
    5. '_def' → logprob: -13.000934600830078
    6. '_get' → logprob: -13.125934600830078
    7. '_try' → logprob: -13.375934600830078
    8. '   ' → logprob: -13.750934600830078
    9. '_parser' → logprob: -13.875934600830078
    10. '_Parse' → logprob: -14.125934600830078

Token 998: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0005278917378745973
    2. '_parse' → logprob: -7.625527858734131
    3. 'peek' → logprob: -10.750528335571289
    4. 'consume' → logprob: -11.000528335571289
    5. ' parse' → logprob: -14.250528335571289
    6. 'def' → logprob: -14.625528335571289
    7. 'try' → logprob: -15.250528335571289
    8. '(parse' → logprob: -16.25052833557129
    9. '	parse' → logprob: -16.50052833557129
    10. '
' → logprob: -17.12552833557129

Token 999: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.500644326210022
    2. '_literal' → logprob: -1.500644326210022
    3. '_sequence' → logprob: -2.0006442070007324
    4. '_component' → logprob: -3.3756442070007324
    5. 'element' → logprob: -8.12564468383789
    6. '_letter' → logprob: -8.37564468383789
    7. '_factor' → logprob: -8.62564468383789
    8. '_atom' → logprob: -9.12564468383789
    9. '_char' → logprob: -9.25064468383789
    10. 'sequence' → logprob: -9.37564468383789

Token 1000: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.375004768371582
    3. 'self' → logprob: -15.875004768371582
    4. '   ' → logprob: -17.000003814697266
    5. '(
' → logprob: -17.625003814697266
    6. ' (' → logprob: -17.875003814697266
    7. '(s' → logprob: -18.875003814697266
    8. '       ' → logprob: -19.125003814697266
    9. '(sel' → logprob: -19.875003814697266
    10. '
' → logprob: -20.000003814697266

Token 1001: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2574369013309479
    2. ')' → logprob: -1.6324368715286255
    3. 'self' → logprob: -3.507436990737915
    4. '):' → logprob: -7.507436752319336
    5. '):
' → logprob: -7.757436752319336
    6. '   ' → logprob: -7.882436752319336
    7. '       ' → logprob: -10.132436752319336
    8. '
' → logprob: -10.632436752319336
    9. 'def' → logprob: -10.757436752319336
    10. ')->' → logprob: -11.007436752319336

Token 1002: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004564938135445118
    2. '(' → logprob: -5.5045647621154785
    3. 'self' → logprob: -7.7545647621154785
    4. '(
' → logprob: -11.129565238952637
    5. '->' → logprob: -11.504565238952637
    6. '   ' → logprob: -11.629565238952637
    7. 'def' → logprob: -11.754565238952637
    8. ')' → logprob: -12.379565238952637
    9. '       ' → logprob: -12.879565238952637
    10. ' ->' → logprob: -13.004565238952637

Token 1003: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.0026791063137352467
    2. 'Union' → logprob: -6.002678871154785
    3. 'Genome' → logprob: -8.627678871154785
    4. ' Optional' → logprob: -10.752678871154785
    5. '(Optional' → logprob: -13.502678871154785
    6. 'optional' → logprob: -14.127678871154785
    7. '	Optional' → logprob: -15.127678871154785
    8. 'Gen' → logprob: -15.877678871154785
    9. ' Union' → logprob: -16.2526798248291
    10. '_optional' → logprob: -16.5026798248291

Token 1004: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1041145626222715e-05
    2. '[
' → logprob: -11.625011444091797
    3. '(' → logprob: -14.500011444091797
    4. '[self' → logprob: -14.625011444091797
    5. '[str' → logprob: -15.000011444091797
    6. '```' → logprob: -15.875011444091797
    7. 'def' → logprob: -16.500011444091797
    8. ' [' → logprob: -16.500011444091797
    9. '['' → logprob: -16.625011444091797
    10. '[List' → logprob: -16.750011444091797

Token 1005: 'Genome' (ID: 184055)
  Prédit: 'Genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -1.1279553291387856e-05
    2. ' Genome' → logprob: -11.750011444091797
    3. 'Gen' → logprob: -13.500011444091797
    4. 'Union' → logprob: -14.125011444091797
    5. 'Grammar' → logprob: -15.000011444091797
    6. '
' → logprob: -15.750011444091797
    7. 'str' → logprob: -15.875011444091797
    8. '[' → logprob: -15.875011444091797
    9. ')' → logprob: -16.125011444091797
    10. 'Tuple' → logprob: -16.375011444091797

Token 1006: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -5.512236498361744e-07
    2. '_component' → logprob: -15.625000953674316
    3. '_Component' → logprob: -16.25
    4. '@Component' → logprob: -16.375
    5. '_COMPONENT' → logprob: -16.625
    6. 'Components' → logprob: -17.125
    7. 'Com' → logprob: -17.625
    8. '<Component' → logprob: -18.0
    9. 'Token' → logprob: -18.25
    10. '\Component' → logprob: -18.375

Token 1007: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015407454338856041
    2. '   ' → logprob: -9.250154495239258
    3. 'self' → logprob: -10.500154495239258
    4. '       ' → logprob: -10.500154495239258
    5. '(' → logprob: -14.000154495239258
    6. '```' → logprob: -14.375154495239258
    7. '):
' → logprob: -15.125154495239258
    8. 'def' → logprob: -15.500154495239258
    9. ':
' → logprob: -15.875154495239258
    10. ':' → logprob: -15.875154495239258

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010690750554203987
    2. 'char' → logprob: -5.010690689086914
    3. '   ' → logprob: -7.010690689086914
    4. 'ch' → logprob: -7.135690689086914
    5. 'c' → logprob: -7.260690689086914
    6. '```' → logprob: -7.385690689086914
    7. 'token' → logprob: -8.010690689086914
    8. 'current' → logprob: -8.260690689086914
    9. 'self' → logprob: -8.760690689086914
    10. 'try' → logprob: -9.885690689086914

Token 1009: ' """
' (ID: 7037)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.21344244480133057
    2. 'char' → logprob: -1.9634424448013306
    3. 'c' → logprob: -3.213442325592041
    4. 'current' → logprob: -4.963442325592041
    5. '       ' → logprob: -5.713442325592041
    6. 'if' → logprob: -7.963442325592041
    7. 'curr' → logprob: -7.963442325592041
    8. 'try' → logprob: -8.2134428024292
    9. 'peek' → logprob: -8.5884428024292
    10. 'token' → logprob: -9.9634428024292

Token 1010: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13143545389175415
    2. 'char' → logprob: -2.8814353942871094
    3. 'ch' → logprob: -3.7564353942871094
    4. 'c' → logprob: -3.7564353942871094
    5. '   ' → logprob: -5.006435394287109
    6. 'current' → logprob: -5.256435394287109
    7. 'try' → logprob: -6.131435394287109
    8. 'if' → logprob: -6.381435394287109
    9. 'token' → logprob: -6.756435394287109
    10. 'self' → logprob: -6.756435394287109

Token 1011: ' Parses' (ID: 179117)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.3687565326690674
    2. 'ch' → logprob: -1.7437565326690674
    3. 'c' → logprob: -2.3687565326690674
    4. 'Peek' → logprob: -4.743756294250488
    5. 'self' → logprob: -4.868756294250488
    6. 'try' → logprob: -4.993756294250488
    7. 'peek' → logprob: -5.368756294250488
    8. 'current' → logprob: -5.493756294250488
    9. 'if' → logprob: -5.493756294250488
    10. '#' → logprob: -6.118756294250488

Token 1012: ' one' (ID: 1001)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03060327284038067
    2. '       ' → logprob: -3.7806031703948975
    3. 'next' → logprob: -5.780603408813477
    4. 'element' → logprob: -6.905603408813477
    5. 'None' → logprob: -7.155603408813477
    6. 'current' → logprob: -7.280603408813477
    7. '   ' → logprob: -8.155603408813477
    8. 'ch' → logprob: -8.280603408813477
    9. 'char' → logprob: -8.280603408813477
    10. ' self' → logprob: -8.530603408813477

Token 1013: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.41109851002693176
    2. 'token' → logprob: -1.4110984802246094
    3. 'component' → logprob: -2.6610984802246094
    4. 'of' → logprob: -3.9110984802246094
    5. ' element' → logprob: -7.161098480224609
    6. ' of' → logprob: -7.161098480224609
    7. 'unit' → logprob: -8.16109848022461
    8. 'character' → logprob: -8.66109848022461
    9. '
' → logprob: -8.91109848022461
    10. ' token' → logprob: -8.91109848022461

Token 1014: ' which' (ID: 1118)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.038297489285469055
    2. '       ' → logprob: -3.413297414779663
    3. 'self' → logprob: -5.788297653198242
    4. '   ' → logprob: -7.038297653198242
    5. '(' → logprob: -7.788297653198242
    6. '
' → logprob: -8.538297653198242
    7. '(
' → logprob: -10.163297653198242
    8. '()' → logprob: -11.663297653198242
    9. ':' → logprob: -11.788297653198242
    10. 'def' → logprob: -11.788297653198242

Token 1015: ' can' (ID: 665)
  Prédit: 'could'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'could' → logprob: -0.4421216547489166
    2. ' can' → logprob: -2.067121744155884
    3. ' could' → logprob: -2.067121744155884
    4. 'can' → logprob: -2.317121744155884
    5. ' may' → logprob: -6.442121505737305
    6. ' might' → logprob: -6.817121505737305
    7. 'is' → logprob: -7.192121505737305
    8. ' is' → logprob: -7.317121505737305
    9. 'might' → logprob: -7.317121505737305
    10. 'may' → logprob: -7.942121505737305

Token 1016: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.47412005066871643
    2. ' be' → logprob: -0.974120020866394
    3. 'either' → logprob: -10.349120140075684
    4. ' either' → logprob: -11.849120140075684
    5. '	be' → logprob: -13.974120140075684
    6. 'cons' → logprob: -14.224120140075684
    7. '
' → logprob: -14.349120140075684
    8. ' consist' → logprob: -14.724120140075684
    9. 'begin' → logprob: -14.974120140075684
    10. '_be' → logprob: -15.599120140075684

Token 1017: ':
' (ID: 734)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.31452012062072754
    2. 'a' → logprob: -1.3145201206207275
    3. 'Literal' → logprob: -7.189519882202148
    4. 'either' → logprob: -8.314519882202148
    5. ' None' → logprob: -9.439519882202148
    6. ' a' → logprob: -9.564519882202148
    7. 'literal' → logprob: -10.314519882202148
    8. 'digit' → logprob: -10.689519882202148
    9. '(None' → logprob: -10.939519882202148
    10. 'A' → logprob: -11.564519882202148

Token 1018: '        ' (ID: 269)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013905967585742474
    2. 'None' → logprob: -5.013906002044678
    3. 'self' → logprob: -5.763906002044678
    4. '        
' → logprob: -7.388906002044678
    5. '
' → logprob: -7.513906002044678
    6. 'Literal' → logprob: -7.513906002044678
    7. '```' → logprob: -8.01390552520752
    8. ' None' → logprob: -8.01390552520752
    9. '           ' → logprob: -8.13890552520752
    10. '"""
' → logprob: -8.76390552520752

Token 1019: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10546184331178665
    2. '-' (adapté à ' -') → logprob: -2.980461835861206
    3. 'None' → logprob: -4.480462074279785
    4. '1' → logprob: -4.605462074279785
    5. 'Literal' → logprob: -4.605462074279785
    6. 'a' → logprob: -5.230462074279785
    7. '#' → logprob: -5.730462074279785
    8. 'A' → logprob: -5.730462074279785
    9. '   ' → logprob: -7.105462074279785
    10. 'literal' → logprob: -7.105462074279785

Token 1020: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4449954628944397
    2. 'A' → logprob: -1.319995403289795
    3. 'Literal' → logprob: -2.694995403289795
    4. ' a' → logprob: -3.819995403289795
    5. ' A' → logprob: -6.819995403289795
    6. 'literal' → logprob: -7.194995403289795
    7. ' Literal' → logprob: -7.694995403289795
    8. 'Letter' → logprob: -9.819995880126953
    9. ' literal' → logprob: -9.944995880126953
    10. 'None' → logprob: -10.069995880126953

Token 1021: ' repetition' (ID: 100556)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.6214704513549805
    2. 'Literal' → logprob: -1.6214704513549805
    3. 'digit' → logprob: -1.6214704513549805
    4. 'letter' → logprob: -3.1214704513549805
    5. ' literal' → logprob: -4.2464704513549805
    6. 'sequence' → logprob: -5.9964704513549805
    7. 'number' → logprob: -6.1214704513549805
    8. ' letter' → logprob: -6.9964704513549805
    9. ' digit' → logprob: -7.1214704513549805
    10. 'Letter' → logprob: -7.1214704513549805

Token 1022: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01103910431265831
    2. '
' → logprob: -6.2610392570495605
    3. '(self' → logprob: -6.6360392570495605
    4. ' (' → logprob: -6.7610392570495605
    5. 'if' → logprob: -6.8860392570495605
    6. '(' → logprob: -7.0110392570495605
    7. 'token' → logprob: -7.0110392570495605
    8. 'self' → logprob: -7.3860392570495605
    9. '        
' → logprob: -7.5110392570495605
    10. ' or' → logprob: -7.6360392570495605

Token 1023: ' parentheses' (ID: 180602)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.23655329644680023
    2. 'a' → logprob: -1.6115533113479614
    3. 'number' → logprob: -5.111553192138672
    4. 'digit' → logprob: -6.236553192138672
    5. 'count' → logprob: -6.861553192138672
    6. ' digits' → logprob: -7.111553192138672
    7. ' a' → logprob: -7.236553192138672
    8. 'an' → logprob: -8.611553192138672
    9. 'literal' → logprob: -8.986553192138672
    10. 'self' → logprob: -10.361553192138672

Token 1024: ' e' (ID: 319)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.23150761425495148
    2. '       ' → logprob: -2.1065075397491455
    3. ',' → logprob: -3.4815075397491455
    4. 'or' → logprob: -3.6065075397491455
    5. '
' → logprob: -4.106507778167725
    6. ' (' → logprob: -5.481507778167725
    7. '        
' → logprob: -6.106507778167725
    8. ',
' → logprob: -6.606507778167725
    9. '(' → logprob: -7.481507778167725
    10. '#' → logprob: -7.606507778167725

Token 1025: '.g' (ID: 1940)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9945926070213318
    2. 'ither' → logprob: -1.1195926666259766
    3. 'lse' → logprob: -1.3695926666259766
    4. 'f' → logprob: -3.8695926666259766
    5. 'if' → logprob: -5.244592666625977
    6. 'l' → logprob: -5.369592666625977
    7. 'n' → logprob: -5.494592666625977
    8. 'xp' → logprob: -5.994592666625977
    9. 'lif' → logprob: -6.369592666625977
    10. '#' → logprob: -6.619592666625977

Token 1026: '.,' (ID: 4213)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24658305943012238
    2. '#' → logprob: -2.8715829849243164
    3. 'ither' → logprob: -2.8715829849243164
    4. 'if' → logprob: -3.9965829849243164
    5. '       ' → logprob: -4.121582984924316
    6. 'u' → logprob: -4.496582984924316
    7. ':' → logprob: -4.746582984924316
    8. 'ual' → logprob: -5.121582984924316
    9. 'return' → logprob: -5.121582984924316
    10. 'ue' → logprob: -5.246582984924316

Token 1027: ' N' (ID: 478)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9940571784973145
    2. 'digit' → logprob: -1.2440571784973145
    3. 'digits' → logprob: -1.6190571784973145
    4. 'number' → logprob: -2.4940571784973145
    5. 'self' → logprob: -3.4940571784973145
    6. '       ' → logprob: -5.2440571784973145
    7. '#' → logprob: -5.3690571784973145
    8. 'if' → logprob: -5.8690571784973145
    9. 'd' → logprob: -6.1190571784973145
    10. '```' → logprob: -6.1190571784973145

Token 1028: '(...)
' (ID: 178674)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6596705317497253
    2. '(
' → logprob: -1.1596705913543701
    3. '('' → logprob: -2.40967059135437
    4. ' (' → logprob: -3.53467059135437
    5. '[' → logprob: -4.659670352935791
    6. '   ' → logprob: -5.409670352935791
    7. 'digits' → logprob: -5.534670352935791
    8. ''' → logprob: -5.659670352935791
    9. '("("' → logprob: -5.659670352935791
    10. '(`' → logprob: -6.034670352935791

Token 1029: '        ' (ID: 269)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14384344220161438
    2. ' or' → logprob: -2.518843412399292
    3. '        ' → logprob: -3.143843412399292
    4. 'or' → logprob: -5.643843650817871
    5. ',' → logprob: -5.893843650817871
    6. ',
' → logprob: -6.143843650817871
    7. '           ' → logprob: -6.643843650817871
    8. ')' → logprob: -9.268843650817871
    9. '
' → logprob: -9.518843650817871
    10. '```' → logprob: -9.643843650817871

Token 1030: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2548812925815582
    2. '        ' → logprob: -1.5048812627792358
    3. 'or' → logprob: -6.754881381988525
    4. ' or' → logprob: -7.004881381988525
    5. '-' (adapté à ' -') → logprob: -7.504881381988525
    6. ',' → logprob: -9.504880905151367
    7. '
' → logprob: -9.629880905151367
    8. '      ' → logprob: -10.129880905151367
    9. '           ' → logprob: -10.379880905151367
    10. '   ' → logprob: -10.504880905151367

Token 1031: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010672005824744701
    2. ' a' → logprob: -4.760672092437744
    3. 'an' → logprob: -6.385672092437744
    4. 'A' → logprob: -8.635671615600586
    5. ' an' → logprob: -9.135671615600586
    6. 'literal' → logprob: -10.010671615600586
    7. ' literal' → logprob: -11.635671615600586
    8. '       ' → logprob: -11.885671615600586
    9. '
' → logprob: -12.135671615600586
    10. 'Literal' → logprob: -12.385671615600586

Token 1032: ' repetition' (ID: 100556)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.06274564564228058
    2. 'Literal' → logprob: -3.3127455711364746
    3. 'sequence' → logprob: -4.437745571136475
    4. 'letter' → logprob: -4.812745571136475
    5. ' literal' → logprob: -6.062745571136475
    6. '_literal' → logprob: -6.812745571136475
    7. 'single' → logprob: -7.312745571136475
    8. 'group' → logprob: -9.562746047973633
    9. 'parent' → logprob: -10.062746047973633
    10. 'character' → logprob: -10.312746047973633

Token 1033: ' of' (ID: 328)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.28593042492866516
    2. ' with' → logprob: -1.5359303951263428
    3. ' or' → logprob: -4.785930633544922
    4. ' of' → logprob: -4.910930633544922
    5. 'or' → logprob: -5.160930633544922
    6. '       ' → logprob: -5.660930633544922
    7. 'without' → logprob: -5.910930633544922
    8. 'of' → logprob: -5.910930633544922
    9. ' without' → logprob: -6.910930633544922
    10. ' ' → logprob: -7.910930633544922

Token 1034: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2793671786785126
    2. 'Literal' → logprob: -1.529367208480835
    3. ' a' → logprob: -4.529366970062256
    4. 'an' → logprob: -5.529366970062256
    5. 'self' → logprob: -5.654366970062256
    6. 'literal' → logprob: -5.779366970062256
    7. 'Genome' → logprob: -6.029366970062256
    8. '_literal' → logprob: -7.279366970062256
    9. 'A' → logprob: -7.779366970062256
    10. 'single' → logprob: -7.904366970062256

Token 1035: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.6107369065284729
    2. 'Literal' → logprob: -1.1107368469238281
    3. 'literal' → logprob: -2.235736846923828
    4. ' literal' → logprob: -5.110736846923828
    5. 'letter' → logprob: -5.235736846923828
    6. '_literal' → logprob: -5.860736846923828
    7. ' single' → logprob: -5.985736846923828
    8. 'character' → logprob: -6.610736846923828
    9. ' Literal' → logprob: -7.110736846923828
    10. 'sequence' → logprob: -7.485736846923828

Token 1036: ' letter' (ID: 10263)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.1555006057024002
    2. 'char' → logprob: -2.655500650405884
    3. 'letter' → logprob: -3.655500650405884
    4. 'literal' → logprob: -4.155500411987305
    5. 'Literal' → logprob: -4.280500411987305
    6. ' character' → logprob: -4.780500411987305
    7. 'uppercase' → logprob: -5.030500411987305
    8. 'Letter' → logprob: -7.655500411987305
    9. ' literal' → logprob: -7.780500411987305
    10. 'Character' → logprob: -7.905500411987305

Token 1037: ' e' (ID: 319)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020615696907043457
    2. '
' → logprob: -4.270615577697754
    3. 'self' → logprob: -5.770615577697754
    4. '(self' → logprob: -6.645615577697754
    5. '        
' → logprob: -7.895615577697754
    6. '   ' → logprob: -8.020615577697754
    7. '#' → logprob: -8.145615577697754
    8. '```' → logprob: -8.520615577697754
    9. 'def' → logprob: -9.020615577697754
    10. 'if' → logprob: -9.020615577697754

Token 1038: '.g' (ID: 1940)
  Prédit: 'lse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lse' → logprob: -0.1881861537694931
    2. '       ' → logprob: -2.1881861686706543
    3. '        ' → logprob: -4.438186168670654
    4. 'x' → logprob: -4.563186168670654
    5. '           ' → logprob: -5.063186168670654
    6. '   ' → logprob: -5.438186168670654
    7. 'l' → logprob: -5.563186168670654
    8. ':' → logprob: -5.688186168670654
    9. ' (' → logprob: -5.938186168670654
    10. '=' → logprob: -6.438186168670654

Token 1039: '.,' (ID: 4213)
  Prédit: '.g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.7216367125511169
    2. 'x' → logprob: -2.5966367721557617
    3. '#' → logprob: -2.8466367721557617
    4. 'e' → logprob: -2.8466367721557617
    5. '.' → logprob: -3.2216367721557617
    6. 'g' → logprob: -3.3466367721557617
    7. '```' → logprob: -3.3466367721557617
    8. '       ' → logprob: -3.4716367721557617
    9. '           ' → logprob: -3.9716367721557617
    10. 'def' → logprob: -4.346636772155762

Token 1040: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03164191544055939
    2. 'self' → logprob: -4.156641960144043
    3. 'str' → logprob: -5.656641960144043
    4. ' N' → logprob: -6.031641960144043
    5. 'Letter' → logprob: -6.156641960144043
    6. '
' → logprob: -6.531641960144043
    7. '   ' → logprob: -6.781641960144043
    8. 'A' → logprob: -7.156641960144043
    9. '`' → logprob: -7.531641960144043
    10. '       ' → logprob: -7.656641960144043

Token 1041: ' c' (ID: 274)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.102738618850708
    2. '[A' → logprob: -1.352738618850708
    3. '[' → logprob: -2.352738618850708
    4. '(' → logprob: -2.602738618850708
    5. 'A' → logprob: -2.727738618850708
    6. '(
' → logprob: -3.477738618850708
    7. '(self' → logprob: -3.602738618850708
    8. 'self' → logprob: -3.727738618850708
    9. '(A' → logprob: -4.727738380432129
    10. '[str' → logprob: -4.727738380432129

Token 1042: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7685918211936951
    2. 'har' → logprob: -1.3935918807983398
    3. '   ' → logprob: -3.26859188079834
    4. ' or' → logprob: -3.26859188079834
    5. '
' → logprob: -3.39359188079834
    6. '           ' → logprob: -3.76859188079834
    7. ':' → logprob: -3.76859188079834
    8. ' (' → logprob: -4.14359188079834
    9. ')' → logprob: -4.26859188079834
    10. ' ' → logprob: -4.39359188079834

Token 1043: '        ' (ID: 269)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010002978378906846
    2. '
' → logprob: -8.12600040435791
    3. '        
' → logprob: -8.25100040435791
    4. ' or' → logprob: -8.87600040435791
    5. '           ' → logprob: -9.62600040435791
    6. ',' → logprob: -9.75100040435791
    7. '        ' → logprob: -10.62600040435791
    8. ' (' → logprob: -10.62600040435791
    9. '```' → logprob: -10.87600040435791
    10. '   ' → logprob: -11.00100040435791

Token 1044: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008992237038910389
    2. '
' → logprob: -5.5089921951293945
    3. '        ' → logprob: -6.1339921951293945
    4. '\n' → logprob: -7.0089921951293945
    5. ' or' → logprob: -7.0089921951293945
    6. '           ' → logprob: -8.508992195129395
    7. ')
' → logprob: -8.883992195129395
    8. ')' → logprob: -9.008992195129395
    9. '   ' → logprob: -9.383992195129395
    10. '        
' → logprob: -9.508992195129395

Token 1045: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2801518440246582
    2. 'letter' → logprob: -1.5301518440246582
    3. '#' → logprob: -1.6551518440246582
    4. 'c' → logprob: -1.9051518440246582
    5. 'char' → logprob: -2.155151844024658
    6. 'self' → logprob: -4.405151844024658
    7. 'if' → logprob: -4.655151844024658
    8. 'ch' → logprob: -5.030151844024658
    9. 'A' → logprob: -5.530151844024658
    10. 'token' → logprob: -5.905151844024658

Token 1046: ' literal' (ID: 41271)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.2003050595521927
    2. 'Literal' → logprob: -2.3253049850463867
    3. 'letter' → logprob: -2.5753049850463867
    4. 'sequence' → logprob: -5.700304985046387
    5. 'single' → logprob: -5.950304985046387
    6. '_literal' → logprob: -6.825304985046387
    7. ' literal' → logprob: -7.950304985046387
    8. 'Letter' → logprob: -9.075304985046387
    9. ' Literal' → logprob: -10.075304985046387
    10. ' letter' → logprob: -10.575304985046387

Token 1047: ' sequence' (ID: 16281)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34443408250808716
    2. 'def' → logprob: -2.2194340229034424
    3. '   ' → logprob: -2.5944340229034424
    4. '
' → logprob: -2.5944340229034424
    5. 'self' → logprob: -3.7194340229034424
    6. '(self' → logprob: -5.2194342613220215
    7. '```' → logprob: -6.8444342613220215
    8. '        
' → logprob: -7.3444342613220215
    9. 'char' → logprob: -7.7194342613220215
    10. ':' → logprob: -8.094433784484863

Token 1048: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6730876564979553
    2. '(self' → logprob: -0.9230876564979553
    3. 'self' → logprob: -2.4230875968933105
    4. '
' → logprob: -5.9230875968933105
    5. '   ' → logprob: -7.5480875968933105
    6. '(' → logprob: -8.798088073730469
    7. '        
' → logprob: -9.048088073730469
    8. '```' → logprob: -9.048088073730469
    9. 'def' → logprob: -9.423088073730469
    10. ':' → logprob: -9.423088073730469

Token 1049: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.013749712146818638
    2. 'uppercase' → logprob: -4.388749599456787
    3. ' letters' → logprob: -7.138749599456787
    4. 'con' → logprob: -9.138750076293945
    5. 'capital' → logprob: -9.263750076293945
    6. 'characters' → logprob: -9.388750076293945
    7. ' uppercase' → logprob: -10.138750076293945
    8. 'upper' → logprob: -10.388750076293945
    9. 'one' → logprob: -10.763750076293945
    10. 'Letters' → logprob: -11.513750076293945

Token 1050: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01270082127302885
    2. 'self' → logprob: -4.637701034545898
    3. '
' → logprob: -6.262701034545898
    4. '(self' → logprob: -7.137701034545898
    5. '```' → logprob: -9.637701034545898
    6. '   ' → logprob: -9.762701034545898
    7. 'def' → logprob: -10.762701034545898
    8. '        
' → logprob: -11.012701034545898
    9. ')' → logprob: -11.512701034545898
    10. 'if' → logprob: -11.887701034545898

Token 1051: 'A' (ID: 32)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4537220597267151
    2. ')
' → logprob: -1.4537220001220703
    3. '):
' → logprob: -3.2037220001220703
    4. '       ' → logprob: -3.5787220001220703
    5. 'self' → logprob: -3.7037220001220703
    6. ')+' → logprob: -4.32872200012207
    7. '):' → logprob: -4.70372200012207
    8. ')")
' → logprob: -5.95372200012207
    9. 'letters' → logprob: -6.70372200012207
    10. '           ' → logprob: -6.82872200012207

Token 1052: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.008449088782072067
    2. '-' → logprob: -5.258449077606201
    3. 'Z' → logprob: -5.883449077606201
    4. '   ' → logprob: -8.50844955444336
    5. '-Za' → logprob: -9.38344955444336
    6. ')' → logprob: -10.63344955444336
    7. ' -' → logprob: -11.13344955444336
    8. '-z' → logprob: -11.13344955444336
    9. '-
' → logprob: -11.25844955444336
    10. '       ' → logprob: -11.38344955444336

Token 1053: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7219163775444031
    2. ')
' → logprob: -1.5969164371490479
    3. '       ' → logprob: -1.5969164371490479
    4. '):
' → logprob: -2.471916437149048
    5. '):' → logprob: -3.846916437149048
    6. ' or' → logprob: -6.596916198730469
    7. ',' → logprob: -7.346916198730469
    8. '           ' → logprob: -8.096916198730469
    9. ' )' → logprob: -8.971916198730469
    10. ' )
' → logprob: -8.971916198730469

Token 1054: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010771531378850341
    2. ':' → logprob: -9.875107765197754
    3. '
' → logprob: -10.375107765197754
    4. ':
' → logprob: -11.500107765197754
    5. '        
' → logprob: -12.125107765197754
    6. '   ' → logprob: -12.875107765197754
    7. '```' → logprob: -13.125107765197754
    8. '           ' → logprob: -14.125107765197754
    9. 'self' → logprob: -14.125107765197754
    10. ')' → logprob: -14.375107765197754

Token 1055: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001319063303526491
    2. ':' → logprob: -9.875131607055664
    3. '
' → logprob: -10.000131607055664
    4. '        
' → logprob: -11.375131607055664
    5. ':
' → logprob: -11.375131607055664
    6. '   ' → logprob: -12.625131607055664
    7. '```' → logprob: -12.625131607055664
    8. '           ' → logprob: -14.000131607055664
    9. '):
' → logprob: -14.125131607055664
    10. '():' → logprob: -14.250131607055664

Token 1056: ' Genome' (ID: 168601)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.3888114094734192
    2. 'None' → logprob: -1.1388113498687744
    3. 'Union' → logprob: -6.8888115882873535
    4. ' Optional' → logprob: -8.138811111450195
    5. 'Genome' → logprob: -8.388811111450195
    6. ' None' → logprob: -8.638811111450195
    7. '       ' → logprob: -9.138811111450195
    8. '(Optional' → logprob: -10.388811111450195
    9. '           ' → logprob: -10.513811111450195
    10. '[' → logprob: -11.388811111450195

Token 1057: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -3.128163257315464e-07
    2. 'Com' → logprob: -16.25
    3. '_component' → logprob: -16.375
    4. '@Component' → logprob: -17.25
    5. 'component' → logprob: -17.5
    6. '
' → logprob: -18.5
    7. 'Comp' → logprob: -18.5
    8. '_Component' → logprob: -18.625
    9. '<Component' → logprob: -18.75
    10. '_COMPONENT' → logprob: -18.875

Token 1058: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056326087564229965
    2. ':' → logprob: -4.181325912475586
    3. ' or' → logprob: -4.181325912475586
    4. ':
' → logprob: -4.681325912475586
    5. '[' → logprob: -4.931325912475586
    6. '   ' → logprob: -5.681325912475586
    7. 'or' → logprob: -6.931325912475586
    8. '           ' → logprob: -7.431325912475586
    9. '        
' → logprob: -7.806325912475586
    10. '
' → logprob: -8.056325912475586

Token 1059: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.896309739408025e-07
    2. ' None' → logprob: -14.500000953674316
    3. 'Optional' → logprob: -15.500000953674316
    4. '   ' → logprob: -18.25
    5. '
' → logprob: -20.125
    6. '       ' → logprob: -20.5
    7. '(None' → logprob: -21.5
    8. '_None' → logprob: -22.875
    9. '=None' → logprob: -23.125
    10. '           ' → logprob: -23.5

Token 1060: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04434377700090408
    2. ':' → logprob: -4.044343948364258
    3. '(self' → logprob: -4.169343948364258
    4. ':
' → logprob: -5.169343948364258
    5. '   ' → logprob: -6.044343948364258
    6. 'self' → logprob: -6.544343948364258
    7. '):
' → logprob: -8.794343948364258
    8. '```' → logprob: -8.794343948364258
    9. '[' → logprob: -8.919343948364258
    10. ',' → logprob: -9.419343948364258

Token 1061: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00019829542725346982
    2. ' self' → logprob: -8.750198364257812
    3. 'None' → logprob: -10.500198364257812
    4. '       ' → logprob: -11.375198364257812
    5. 'False' → logprob: -15.125198364257812
    6. '   ' → logprob: -15.750198364257812
    7. '           ' → logprob: -16.125198364257812
    8. 'True' → logprob: -16.375198364257812
    9. '     ' → logprob: -16.500198364257812
    10. '
' → logprob: -16.750198364257812

Token 1062: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.21171599626541138
    2. 'self' → logprob: -1.7117159366607666
    3. ' more' → logprob: -4.711716175079346
    4. 'data' → logprob: -7.461716175079346
    5. 'tokens' → logprob: -8.086715698242188
    6. '_more' → logprob: -9.086715698242188
    7. '
' → logprob: -9.711715698242188
    8. ' self' → logprob: -9.961715698242188
    9. 'valid' → logprob: -10.086715698242188
    10. 'token' → logprob: -10.961715698242188

Token 1063: ' elements' (ID: 8632)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.6286100745201111
    2. ' tokens' → logprob: -2.003610134124756
    3. 'token' → logprob: -2.253610134124756
    4. 'input' → logprob: -2.503610134124756
    5. 'data' → logprob: -2.628610134124756
    6. ' input' → logprob: -3.628610134124756
    7. 'content' → logprob: -4.628610134124756
    8. ' data' → logprob: -4.753610134124756
    9. 'code' → logprob: -5.628610134124756
    10. ' to' → logprob: -5.753610134124756

Token 1064: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4706888496875763
    2. ':' → logprob: -1.220688819885254
    3. ':
' → logprob: -3.220688819885254
    4. '   ' → logprob: -4.095688819885254
    5. '.' → logprob: -4.595688819885254
    6. '):
' → logprob: -5.345688819885254
    7. ')' → logprob: -6.345688819885254
    8. '(self' → logprob: -6.595688819885254
    9. '):' → logprob: -6.595688819885254
    10. '():
' → logprob: -6.595688819885254

Token 1065: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.2020991056924686e-05
    2. '```' → logprob: -11.250032424926758
    3. '        
' → logprob: -12.250032424926758
    4. '
' → logprob: -13.250032424926758
    5. 'next' → logprob: -13.375032424926758
    6. 'self' → logprob: -13.375032424926758
    7. '           ' → logprob: -13.750032424926758
    8. '   ' → logprob: -13.875032424926758
    9. 'while' → logprob: -13.875032424926758
    10. 'token' → logprob: -14.000032424926758

Token 1066: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1596343070268631
    2. 'ch' → logprob: -2.7846343517303467
    3. 'char' → logprob: -2.7846343517303467
    4. 'c' → logprob: -4.409634113311768
    5. 'if' → logprob: -5.284634113311768
    6. 'current' → logprob: -5.409634113311768
    7. 'self' → logprob: -6.909634113311768
    8. '```' → logprob: -7.659634113311768
    9. 'next' → logprob: -8.409634590148926
    10. 'token' → logprob: -8.784634590148926

Token 1067: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0757795199751854
    2. 'ch' → logprob: -2.825779438018799
    3. 'c' → logprob: -5.200779438018799
    4. 'char' → logprob: -5.325779438018799
    5. 'if' → logprob: -6.075779438018799
    6. 'current' → logprob: -7.200779438018799
    7. 'curr' → logprob: -9.075779914855957
    8. '   ' → logprob: -9.950779914855957
    9. 'next' → logprob: -9.950779914855957
    10. 'token' → logprob: -11.325779914855957

Token 1068: ' if' (ID: 538)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.3425764739513397
    2. 'if' (adapté à ' if') → logprob: -2.342576503753662
    3. 'char' → logprob: -2.342576503753662
    4. 'c' → logprob: -2.592576503753662
    5. 'current' → logprob: -3.842576503753662
    6. 'curr' → logprob: -7.092576503753662
    7. 'self' → logprob: -7.592576503753662
    8. 'while' → logprob: -9.342576026916504
    9. 'peek' → logprob: -9.717576026916504
    10. '   ' → logprob: -9.717576026916504

Token 1069: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005236041033640504
    2. ' self' → logprob: -7.625523567199707
    3. '(self' → logprob: -10.500523567199707
    4. 'not' → logprob: -11.875523567199707
    5. '   ' → logprob: -15.000523567199707
    6. ' not' → logprob: -15.125523567199707
    7. ' (' → logprob: -15.250523567199707
    8. ' ' → logprob: -16.875524520874023
    9. '	self' → logprob: -17.000524520874023
    10. '(' → logprob: -17.375524520874023

Token 1070: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.4259644558478612e-05
    2. '.' → logprob: -12.750014305114746
    3. '.__' → logprob: -13.000014305114746
    4. '_pos' → logprob: -13.375014305114746
    5. '   ' → logprob: -13.500014305114746
    6. '_' → logprob: -13.500014305114746
    7. '
' → logprob: -13.750014305114746
    8. '_at' → logprob: -14.125014305114746
    9. ' .' → logprob: -14.375014305114746
    10. ']._' → logprob: -14.750014305114746

Token 1071: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0033774571493268013
    2. '_pos' → logprob: -6.128377437591553
    3. 'peek' → logprob: -6.753377437591553
    4. 'data' → logprob: -11.878377914428711
    5. '_data' → logprob: -12.128377914428711
    6. 'parse' → logprob: -12.253377914428711
    7. '_pe' → logprob: -12.753377914428711
    8. 'length' → logprob: -13.753377914428711
    9. '_parse' → logprob: -14.503377914428711
    10. ' pos' → logprob: -14.503377914428711

Token 1072: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.10043731331825256
    2. ' >=' → logprob: -2.3504374027252197
    3. '==' → logprob: -8.47543716430664
    4. ' ==' → logprob: -11.22543716430664
    5. '   ' → logprob: -12.97543716430664
    6. ')>=' → logprob: -13.22543716430664
    7. ']>=' → logprob: -13.60043716430664
    8. '>' → logprob: -13.60043716430664
    9. '       ' → logprob: -14.47543716430664
    10. '<' → logprob: -15.10043716430664

Token 1073: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.77022064034827e-05
    2. ' self' → logprob: -9.250097274780273
    3. '       ' → logprob: -13.625097274780273
    4. '
' → logprob: -15.750097274780273
    5. 'len' → logprob: -16.250097274780273
    6. '           ' → logprob: -16.875097274780273
    7. '(self' → logprob: -17.875097274780273
    8. '   ' → logprob: -18.250097274780273
    9. '	self' → logprob: -19.125097274780273
    10. ' ' → logprob: -19.250097274780273

Token 1074: '._' (ID: 2697)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.017508577555418015
    2. '._' → logprob: -4.142508506774902
    3. '_len' → logprob: -7.392508506774902
    4. '_self' → logprob: -7.767508506774902
    5. 'self' → logprob: -8.142508506774902
    6. 'length' → logprob: -10.017508506774902
    7. ' _' → logprob: -11.017508506774902
    8. '```' → logprob: -11.267508506774902
    9. '   ' → logprob: -11.767508506774902
    10. '_l' → logprob: -11.767508506774902

Token 1075: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -8.061054359131958e-06
    2. 'len' → logprob: -12.750007629394531
    3. ' length' → logprob: -13.500007629394531
    4. '
' → logprob: -14.000007629394531
    5. '_length' → logprob: -14.250007629394531
    6. 'data' → logprob: -14.500007629394531
    7. ')' → logprob: -15.000007629394531
    8. 'leng' → logprob: -15.375007629394531
    9. '```' → logprob: -16.00000762939453
    10. '(length' → logprob: -16.12500762939453

Token 1076: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5764841437339783
    2. '           ' → logprob: -1.451484203338623
    3. ':' → logprob: -1.951484203338623
    4. ' and' → logprob: -3.451484203338623
    5. '       ' → logprob: -4.076484203338623
    6. ' or' → logprob: -4.701484203338623
    7. 'and' → logprob: -5.826484203338623
    8. ':return' → logprob: -7.951484203338623
    9. '   ' → logprob: -8.201483726501465
    10. 'return' → logprob: -9.451483726501465

Token 1077: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.083406925201416
    2. '   ' → logprob: -1.583406925201416
    3. '       ' → logprob: -1.583406925201416
    4. ' c' → logprob: -1.708406925201416
    5. 'c' → logprob: -4.458406925201416
    6. 'current' → logprob: -4.583406925201416
    7. 'ch' → logprob: -4.833406925201416
    8. 'char' → logprob: -4.958406925201416
    9. ' current' → logprob: -5.083406925201416
    10. ' char' → logprob: -5.208406925201416

Token 1078: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.292907877039397e-06
    2. ' return' → logprob: -12.75000286102295
    3. '       ' → logprob: -15.00000286102295
    4. '           ' → logprob: -16.250003814697266
    5. '
' → logprob: -17.250003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '	return' → logprob: -19.625003814697266
    8. 'None' → logprob: -20.375003814697266
    9. '{return' → logprob: -20.500003814697266
    10. '```' → logprob: -21.125003814697266

Token 1079: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.8889261304575484e-06
    2. ' None' → logprob: -12.500003814697266
    3. '
' → logprob: -16.125003814697266
    4. 'none' → logprob: -19.375003814697266
    5. '(None' → logprob: -20.250003814697266
    6. '_None' → logprob: -20.625003814697266
    7. '=None' → logprob: -20.875003814697266
    8. ',None' → logprob: -22.000003814697266
    9. '   ' → logprob: -22.500003814697266
    10. 'null' → logprob: -23.125003814697266

Token 1080: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02057260274887085
    2. '
' → logprob: -4.770572662353516
    3. 'char' → logprob: -5.770572662353516
    4. 'ch' → logprob: -5.895572662353516
    5. 'c' → logprob: -6.020572662353516
    6. ' c' → logprob: -6.895572662353516
    7. 'current' → logprob: -6.895572662353516
    8. '        
' → logprob: -6.895572662353516
    9. 'token' → logprob: -9.020572662353516
    10. ' char' → logprob: -9.145572662353516

Token 1081: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35712364315986633
    2. 'ch' → logprob: -2.107123613357544
    3. 'current' → logprob: -2.107123613357544
    4. 'char' → logprob: -3.607123613357544
    5. 'c' → logprob: -3.732123613357544
    6. 'if' → logprob: -5.357123851776123
    7. 'curr' → logprob: -7.107123851776123
    8. 'token' → logprob: -8.482123374938965
    9. '```' → logprob: -9.607123374938965
    10. '   ' → logprob: -9.732123374938965

Token 1082: ' curr' (ID: 10495)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.5218088030815125
    2. 'current' → logprob: -1.5218088626861572
    3. 'char' → logprob: -1.7718088626861572
    4. 'c' → logprob: -4.021808624267578
    5. 'curr' (adapté à ' curr') → logprob: -8.521808624267578
    6. '       ' → logprob: -9.896808624267578
    7. 'cur' → logprob: -10.396808624267578
    8. 'if' → logprob: -11.896808624267578
    9. 'token' → logprob: -13.271808624267578
    10. 'peek' → logprob: -14.521808624267578

Token 1083: ' =' (ID: 314)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0012578530004248023
    2. ' =' → logprob: -7.00125789642334
    3. 'char' → logprob: -9.25125789642334
    4. '_ch' → logprob: -9.37625789642334
    5. '_c' → logprob: -9.37625789642334
    6. '=' → logprob: -9.87625789642334
    7. '_chr' → logprob: -11.75125789642334
    8. '_' → logprob: -12.00125789642334
    9. 'har' → logprob: -12.50125789642334
    10. '_h' → logprob: -13.00125789642334

Token 1084: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.860340752406046e-05
    2. ' self' → logprob: -9.7500581741333
    3. 's' → logprob: -16.250059127807617
    4. '(self' → logprob: -16.250059127807617
    5. '
' → logprob: -18.000059127807617
    6. '=self' → logprob: -18.125059127807617
    7. 'c' → logprob: -18.250059127807617
    8. '   ' → logprob: -18.250059127807617
    9. '       ' → logprob: -18.250059127807617
    10. 'a' → logprob: -18.375059127807617

Token 1085: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00031985383247956634
    2. 'self' → logprob: -8.500319480895996
    3. '_data' → logprob: -10.125319480895996
    4. '   ' → logprob: -10.250319480895996
    5. '.' → logprob: -11.500319480895996
    6. '_self' → logprob: -11.500319480895996
    7. '
' → logprob: -12.500319480895996
    8. '.__' → logprob: -12.875319480895996
    9. '_code' → logprob: -13.250319480895996
    10. '.data' → logprob: -13.375319480895996

Token 1086: 'peek' (ID: 163275)
  Prédit: 'peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.0036948511842638254
    2. 'data' → logprob: -5.628695011138916
    3. 'parse' → logprob: -9.628694534301758
    4. 'peak' → logprob: -11.753694534301758
    5. 'consume' → logprob: -12.253694534301758
    6. '_data' → logprob: -12.378694534301758
    7. ' peek' → logprob: -12.503694534301758
    8. '.peek' → logprob: -12.753694534301758
    9. '_pe' → logprob: -13.503694534301758
    10. 'Peek' → logprob: -13.753694534301758

Token 1087: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3750495910644531
    2. '()' → logprob: -1.3750495910644531
    3. '()
' → logprob: -2.875049591064453
    4. '        
' → logprob: -6.875049591064453
    5. 'if' → logprob: -7.375049591064453
    6. ' =' → logprob: -7.875049591064453
    7. ',' → logprob: -8.125049591064453
    8. '=' → logprob: -8.625049591064453
    9. ' if' → logprob: -9.000049591064453
    10. ')' → logprob: -9.125049591064453

Token 1088: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004529566504061222
    2. '        
' → logprob: -8.000452995300293
    3. '<|end|>' → logprob: -10.250452995300293
    4. ' if' → logprob: -11.250452995300293
    5. '#' → logprob: -11.375452995300293
    6. ',' → logprob: -11.500452995300293
    7. '   ' → logprob: -11.875452995300293
    8. 'if' → logprob: -12.000452995300293
    9. '           ' → logprob: -12.375452995300293
    10. '        ' → logprob: -12.500452995300293

Token 1089: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003268618369475007
    2. '       ' → logprob: -5.753268718719482
    3. ' if' → logprob: -9.378268241882324
    4. '#' → logprob: -13.253268241882324
    5. 'If' → logprob: -13.378268241882324
    6. '        
' → logprob: -13.628268241882324
    7. '
' → logprob: -13.753268241882324
    8. 'import' → logprob: -15.253268241882324
    9. 'try' → logprob: -15.628268241882324
    10. '	if' → logprob: -16.25326919555664

Token 1090: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.00018899753922596574
    2. ' curr' → logprob: -8.625188827514648
    3. '(curr' → logprob: -11.625188827514648
    4. '	curr' → logprob: -15.875188827514648
    5. 'self' → logprob: -16.50018882751465
    6. 'cur' → logprob: -16.62518882751465
    7. '[curr' → logprob: -17.37518882751465
    8. 'Curr' → logprob: -17.50018882751465
    9. '_curr' → logprob: -17.62518882751465
    10. '.curr' → logprob: -17.75018882751465

Token 1091: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16336531937122345
    2. ' and' → logprob: -2.663365364074707
    3. 'is' → logprob: -3.413365364074707
    4. 'and' → logprob: -4.163365364074707
    5. '.' → logprob: -4.288365364074707
    6. 'isdigit' → logprob: -4.663365364074707
    7. '.is' → logprob: -4.913365364074707
    8. ' .' → logprob: -7.538365364074707
    9. '=' → logprob: -7.913365364074707
    10. '==' → logprob: -8.163365364074707

Token 1092: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04691626504063606
    2. ' None' → logprob: -3.2969162464141846
    3. 'digit' → logprob: -5.171916484832764
    4. 'not' → logprob: -6.546916484832764
    5. ' not' → logprob: -6.796916484832764
    6. 'd' → logprob: -8.796916007995605
    7. '   ' → logprob: -9.171916007995605
    8. ''' → logprob: -9.296916007995605
    9. 'isdigit' → logprob: -10.046916007995605
    10. '       ' → logprob: -10.171916007995605

Token 1093: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08735310286283493
    2. '           ' → logprob: -3.337352991104126
    3. '       ' → logprob: -3.712352991104126
    4. ' and' → logprob: -4.837353229522705
    5. ':' → logprob: -5.337353229522705
    6. 'or' → logprob: -5.337353229522705
    7. ':
' → logprob: -5.462353229522705
    8. 'and' → logprob: -7.212353229522705
    9. '.' → logprob: -7.837353229522705
    10. '   ' → logprob: -8.212352752685547

Token 1094: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058845676481723785
    2. 'if' → logprob: -3.6838457584381104
    3. ' if' → logprob: -4.683845520019531
    4. 'None' → logprob: -4.933845520019531
    5. '       ' → logprob: -5.058845520019531
    6. ' None' → logprob: -6.058845520019531
    7. '        ' → logprob: -6.808845520019531
    8. ' and' → logprob: -6.933845520019531
    9. '            ' → logprob: -7.683845520019531
    10. '            
' → logprob: -7.933845520019531

Token 1095: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06525306403636932
    2. 'None' → logprob: -2.9402530193328857
    3. '           ' → logprob: -4.815253257751465
    4. 'raise' → logprob: -6.565253257751465
    5. ' return' → logprob: -7.315253257751465
    6. ' None' → logprob: -9.440253257751465
    7. '
' → logprob: -11.315253257751465
    8. '#' → logprob: -11.815253257751465
    9. '   ' → logprob: -12.190253257751465
    10. '       ' → logprob: -12.315253257751465

Token 1096: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.512236498361744e-07
    2. ' None' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.125
    4. '
' → logprob: -22.0
    5. '_None' → logprob: -22.375
    6. '=None' → logprob: -22.75
    7. '(None' → logprob: -22.875
    8. 'none' → logprob: -23.0
    9. '           ' → logprob: -23.125
    10. '       ' → logprob: -23.25

Token 1097: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08322197198867798
    2. '
' → logprob: -2.583221912384033
    3. '        
' → logprob: -5.583221912384033
    4. '    
' → logprob: -9.458222389221191
    5. 'import' → logprob: -9.708222389221191
    6. 'if' → logprob: -9.958222389221191
    7. '   ' → logprob: -9.958222389221191
    8. '\
' → logprob: -10.083222389221191
    9. '```' → logprob: -10.333222389221191
    10. '		
' → logprob: -10.458222389221191

Token 1098: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011271459050476551
    2. '       ' → logprob: -4.5112714767456055
    3. ' if' → logprob: -9.011271476745605
    4. 'try' → logprob: -9.261271476745605
    5. '        
' → logprob: -13.136271476745605
    6. '#' → logprob: -13.136271476745605
    7. 'import' → logprob: -14.136271476745605
    8. '           ' → logprob: -14.511271476745605
    9. 'If' → logprob: -14.636271476745605
    10. '   ' → logprob: -15.511271476745605

Token 1099: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00022046364028938115
    2. '       ' → logprob: -8.50022029876709
    3. 'try' → logprob: -11.87522029876709
    4. '#' → logprob: -12.62522029876709
    5. ' if' → logprob: -13.12522029876709
    6. '
' → logprob: -13.25022029876709
    7. '        
' → logprob: -14.00022029876709
    8. 'import' → logprob: -14.00022029876709
    9. 'If' → logprob: -14.50022029876709
    10. 'component' → logprob: -15.00022029876709

Token 1100: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -5.478889215737581e-05
    2. ' curr' → logprob: -10.000054359436035
    3. 'self' → logprob: -11.625054359436035
    4. '(curr' → logprob: -15.125054359436035
    5. '   ' → logprob: -17.37505531311035
    6. '	curr' → logprob: -17.62505531311035
    7. 'cur' → logprob: -17.87505531311035
    8. '_curr' → logprob: -18.62505531311035
    9. '       ' → logprob: -19.00005531311035
    10. '.curr' → logprob: -19.50005531311035

Token 1101: '.is' (ID: 3109)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6589398384094238
    2. '.is' → logprob: -0.7839398384094238
    3. 'isdigit' → logprob: -4.158939838409424
    4. ' and' → logprob: -5.158939838409424
    5. ' is' → logprob: -5.908939838409424
    6. ' .' → logprob: -7.408939838409424
    7. '>=' → logprob: -7.658939838409424
    8. 'and' → logprob: -8.283939361572266
    9. 'is' → logprob: -8.283939361572266
    10. '==' → logprob: -9.283939361572266

Token 1102: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -8.065608562901616e-05
    2. 'alpha' → logprob: -9.500081062316895
    3. 'upper' → logprob: -12.500081062316895
    4. 'decimal' → logprob: -13.375081062316895
    5. 'd' → logprob: -15.375081062316895
    6. 'numeric' → logprob: -16.000080108642578
    7. 'dig' → logprob: -16.125080108642578
    8. 'digits' → logprob: -17.125080108642578
    9. ' digit' → logprob: -17.375080108642578
    10. '_digit' → logprob: -17.500080108642578

Token 1103: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.31425079703330994
    2. '():
' → logprob: -1.3142508268356323
    3. '()' → logprob: -6.939250946044922
    4. '():
' → logprob: -11.439250946044922
    5. '()):
' → logprob: -12.564250946044922
    6. '(' → logprob: -12.814250946044922
    7. ' ():' → logprob: -13.689250946044922
    8. '():

' → logprob: -13.814250946044922
    9. ':' → logprob: -15.189250946044922
    10. '()==' → logprob: -16.314250946044922

Token 1104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0902804508805275
    2. ':' → logprob: -2.965280532836914
    3. '       ' → logprob: -3.715280532836914
    4. ':
' → logprob: -5.590280532836914
    5. '        ' → logprob: -5.965280532836914
    6. '#' → logprob: -6.715280532836914
    7. '```' → logprob: -8.090280532836914
    8. ',' → logprob: -8.215280532836914
    9. 'num' → logprob: -8.465280532836914
    10. 'n' → logprob: -8.840280532836914

Token 1105: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00047106825513765216
    2. 'num' → logprob: -8.375471115112305
    3. '           ' → logprob: -8.750471115112305
    4. 'repeat' → logprob: -10.000471115112305
    5. 'number' → logprob: -10.875471115112305
    6. 'try' → logprob: -11.750471115112305
    7. 'n' → logprob: -12.625471115112305
    8. 'rep' → logprob: -13.125471115112305
    9. '#' (adapté à ' #') → logprob: -13.125471115112305
    10. ' count' → logprob: -13.875471115112305

Token 1106: ' Parse' (ID: 26701)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.084206375409849e-05
    2. 'repeat' → logprob: -10.875041007995605
    3. '           ' → logprob: -11.625041007995605
    4. 'num' → logprob: -12.375041007995605
    5. 'try' → logprob: -12.500041007995605
    6. '#' → logprob: -12.750041007995605
    7. 'number' → logprob: -14.000041007995605
    8. '       ' → logprob: -14.625041007995605
    9. 'rep' → logprob: -14.875041007995605
    10. 're' → logprob: -16.12504005432129

Token 1107: ' repetition' (ID: 100556)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.060365608893335e-05
    2. '           ' → logprob: -11.125041007995605
    3. ' count' → logprob: -11.375041007995605
    4. 'num' → logprob: -11.625041007995605
    5. 'number' → logprob: -12.625041007995605
    6. 'repeat' → logprob: -13.250041007995605
    7. '#' → logprob: -16.25004005432129
    8. 'rep' → logprob: -16.37504005432129
    9. 'n' → logprob: -16.75004005432129
    10. 're' → logprob: -16.75004005432129

Token 1108: ' count' (ID: 3605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23427706956863403
    2. 'count' → logprob: -1.6092770099639893
    3. '
' → logprob: -5.234277248382568
    4. 'num' → logprob: -6.484277248382568
    5. ',' → logprob: -7.359277248382568
    6. 'number' → logprob: -7.359277248382568
    7. '            
' → logprob: -8.10927677154541
    8. ' count' → logprob: -9.23427677154541
    9. '               ' → logprob: -9.60927677154541
    10. '       ' → logprob: -10.23427677154541

Token 1109: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03295722231268883
    2. '           ' → logprob: -3.5329573154449463
    3. 'num' → logprob: -6.157957077026367
    4. ' count' → logprob: -7.782957077026367
    5. 'number' → logprob: -7.907957077026367
    6. '            
' → logprob: -9.282957077026367
    7. 'n' → logprob: -10.532957077026367
    8. '
' → logprob: -10.782957077026367
    9. '       ' → logprob: -10.907957077026367
    10. '(count' → logprob: -11.157957077026367

Token 1110: '           ' (ID: 352)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6453936100006104
    2. '           ' → logprob: -0.7703936100006104
    3. 'num' → logprob: -5.395393371582031
    4. ' count' → logprob: -5.520393371582031
    5. '       ' → logprob: -6.270393371582031
    6. 'number' → logprob: -6.770393371582031
    7. '            
' → logprob: -8.395393371582031
    8. ',' → logprob: -8.895393371582031
    9. '               ' → logprob: -9.020393371582031
    10. '
' → logprob: -9.020393371582031

Token 1111: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -6.988221684878226e-06
    2. 'repeat' → logprob: -12.250006675720215
    3. 'num' → logprob: -13.875006675720215
    4. ' count' → logprob: -14.125006675720215
    5. '           ' → logprob: -15.375006675720215
    6. 'n' → logprob: -15.750006675720215
    7. 'rep' → logprob: -16.25000762939453
    8. 'number' → logprob: -17.62500762939453
    9. 're' → logprob: -17.87500762939453
    10. 'times' → logprob: -18.62500762939453

Token 1112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975129522383213
    2. '=' → logprob: -3.5297513008117676
    3. '           ' → logprob: -15.27975082397461
    4. '=count' → logprob: -16.40475082397461
    5. '            ' → logprob: -16.65475082397461
    6. '=int' → logprob: -17.02975082397461
    7. ':' → logprob: -17.27975082397461
    8. '=self' → logprob: -17.27975082397461
    9. ' =
' → logprob: -17.52975082397461
    10. '＝' → logprob: -17.52975082397461

Token 1113: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024768433067947626
    2. ' self' → logprob: -6.002476692199707
    3. '           ' → logprob: -14.127476692199707
    4. '(self' → logprob: -15.377476692199707
    5. '	self' → logprob: -15.502476692199707
    6. '[self' → logprob: -16.752477645874023
    7. '_self' → logprob: -18.627477645874023
    8. '               ' → logprob: -18.877477645874023
    9. ' ' → logprob: -19.002477645874023
    10. '```' → logprob: -19.627477645874023

Token 1114: '._' (ID: 2697)
  Prédit: '_parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -0.004086828324943781
    2. '._' → logprob: -5.504086971282959
    3. '.parse' → logprob: -11.7540864944458
    4. '_cons' → logprob: -14.6290864944458
    5. ' _' → logprob: -16.379087448120117
    6. '_PARSE' → logprob: -17.754087448120117
    7. '```' → logprob: -18.004087448120117
    8. '_decode' → logprob: -18.004087448120117
    9. '_Parse' → logprob: -18.379087448120117
    10. '->_' → logprob: -18.754087448120117

Token 1115: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.4617256056226324e-05
    2. '_parse' → logprob: -11.250014305114746
    3. 'consume' → logprob: -13.750014305114746
    4. ' parse' → logprob: -15.250014305114746
    5. '(parse' → logprob: -16.500015258789062
    6. '.parse' → logprob: -16.750015258789062
    7. '=parse' → logprob: -17.000015258789062
    8. '	parse' → logprob: -17.500015258789062
    9. 'peek' → logprob: -19.125015258789062
    10. '```' → logprob: -19.750015258789062

Token 1116: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.004676711279898882
    2. 'digits' → logprob: -5.379676818847656
    3. '```' → logprob: -11.379676818847656
    4. 'int' → logprob: -11.504676818847656
    5. 'd' → logprob: -12.254676818847656
    6. '_' → logprob: -12.379676818847656
    7. '_d' → logprob: -12.754676818847656
    8. 'Digits' → logprob: -12.879676818847656
    9. 'digit' → logprob: -12.879676818847656
    10. '_tokens' → logprob: -12.879676818847656

Token 1117: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025223782286047935
    2. '
' → logprob: -3.775223731994629
    3. '            
' → logprob: -6.775223731994629
    4. ' 
' → logprob: -8.150223731994629
    5. '       ' → logprob: -9.150223731994629
    6. ' if' → logprob: -9.525223731994629
    7. '		' → logprob: -9.900223731994629
    8. '            ' → logprob: -10.650223731994629
    9. '  
' → logprob: -10.650223731994629
    10. ',' → logprob: -10.775223731994629

Token 1118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03637826442718506
    2. '       ' → logprob: -4.411378383636475
    3. ' if' → logprob: -4.911378383636475
    4. 'curr' → logprob: -4.911378383636475
    5. 'if' → logprob: -5.161378383636475
    6. 'next' → logprob: -6.911378383636475
    7. ' curr' → logprob: -7.661378383636475
    8. '
' → logprob: -7.786378383636475
    9. '	       ' → logprob: -7.786378383636475
    10. '		' → logprob: -8.536377906799316

Token 1119: ' if' (ID: 538)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4872245490550995
    2. 'curr' → logprob: -0.9872245788574219
    3. 'if' (adapté à ' if') → logprob: -4.487224578857422
    4. '       ' → logprob: -6.487224578857422
    5. 'peek' → logprob: -9.237224578857422
    6. 'char' → logprob: -9.737224578857422
    7. ' next' → logprob: -11.112224578857422
    8. 'current' → logprob: -11.237224578857422
    9. 'ch' → logprob: -11.487224578857422
    10. 'c' → logprob: -11.612224578857422

Token 1120: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001899511698866263
    2. ' self' → logprob: -8.750189781188965
    3. '(self' → logprob: -10.500189781188965
    4. '   ' → logprob: -13.250189781188965
    5. '	self' → logprob: -13.625189781188965
    6. ' ' → logprob: -15.125189781188965
    7. '           ' → logprob: -15.625189781188965
    8. '(' → logprob: -16.50019073486328
    9. '       ' → logprob: -16.50019073486328
    10. '$self' → logprob: -16.87519073486328

Token 1121: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.113290095934644e-05
    2. '.' → logprob: -10.375081062316895
    3. '.<' → logprob: -11.500081062316895
    4. ' .' → logprob: -11.625081062316895
    5. ' ' → logprob: -12.000081062316895
    6. '.peek' → logprob: -12.250081062316895
    7. '   ' → logprob: -12.625081062316895
    8. ']._' → logprob: -12.750081062316895
    9. '_pe' → logprob: -13.250081062316895
    10. '_' → logprob: -13.625081062316895

Token 1122: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6491637825965881
    2. 'peek' → logprob: -0.7741637825965881
    3. '_pos' → logprob: -4.649163722991943
    4. '_pe' → logprob: -6.024163722991943
    5. 'consume' → logprob: -6.274163722991943
    6. 'parse' → logprob: -7.274163722991943
    7. '_data' → logprob: -7.274163722991943
    8. '_parse' → logprob: -7.774163722991943
    9. 'data' → logprob: -7.899163722991943
    10. '_cons' → logprob: -9.524164199829102

Token 1123: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5161772966384888
    2. ' <' → logprob: -1.0161772966384888
    3. '<len' → logprob: -3.266177177429199
    4. '<n' → logprob: -7.141177177429199
    5. '>=' → logprob: -7.891177177429199
    6. '<size' → logprob: -8.3911771774292
    7. '[' → logprob: -8.5161771774292
    8. ' >=' → logprob: -8.7661771774292
    9. '<char' → logprob: -9.0161771774292
    10. '<s' → logprob: -9.0161771774292

Token 1124: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010404328349977732
    2. ' self' → logprob: -6.876040458679199
    3. 'len' → logprob: -12.0010404586792
    4. '=self' → logprob: -14.5010404586792
    5. '_self' → logprob: -15.5010404586792
    6. 'length' → logprob: -15.7510404586792
    7. '	self' → logprob: -16.251039505004883
    8. '(self' → logprob: -16.376039505004883
    9. '[self' → logprob: -16.376039505004883
    10. '<|end|>' → logprob: -16.501039505004883

Token 1125: '._' (ID: 2697)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.04945512115955353
    2. ' and' → logprob: -3.924455165863037
    3. 'length' → logprob: -4.299455165863037
    4. '_' → logprob: -5.549455165863037
    5. 'and' → logprob: -5.674455165863037
    6. '_len' → logprob: -5.674455165863037
    7. ' _' → logprob: -6.174455165863037
    8. 'len' → logprob: -7.549455165863037
    9. 'self' → logprob: -8.174454689025879
    10. ' length' → logprob: -8.299454689025879

Token 1126: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0001295222609769553
    2. '_length' → logprob: -9.000129699707031
    3. ' length' → logprob: -13.125129699707031
    4. 'len' → logprob: -13.250129699707031
    5. 'data' → logprob: -14.375129699707031
    6. '```' → logprob: -15.000129699707031
    7. '
' → logprob: -15.375129699707031
    8. '	length' → logprob: -15.625129699707031
    9. '(length' → logprob: -16.00012969970703
    10. '_data' → logprob: -16.12512969970703

Token 1127: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2544502913951874
    2. 'and' → logprob: -1.5044503211975098
    3. ':
' → logprob: -6.62945032119751
    4. ':' → logprob: -6.87945032119751
    5. '           ' → logprob: -9.254449844360352
    6. '<|end|>' → logprob: -10.004449844360352
    7. ',' → logprob: -11.629449844360352
    8. '<|end|>' → logprob: -12.254449844360352
    9. '       ' → logprob: -13.504449844360352
    10. '[' → logprob: -13.629449844360352

Token 1128: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007108822464942932
    2. ' self' → logprob: -7.250710964202881
    3. '(self' → logprob: -14.000710487365723
    4. '           ' → logprob: -16.62571144104004
    5. '
' → logprob: -17.37571144104004
    6. ' ' → logprob: -17.87571144104004
    7. '   ' → logprob: -17.87571144104004
    8. '            
' → logprob: -19.25071144104004
    9. '[self' → logprob: -19.50071144104004
    10. '       ' → logprob: -19.62571144104004

Token 1129: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00015300170343834907
    2. '_data' → logprob: -10.000152587890625
    3. '_' → logprob: -10.375152587890625
    4. '.' → logprob: -10.500152587890625
    5. '_self' → logprob: -11.875152587890625
    6. 'self' → logprob: -12.000152587890625
    7. '.__' → logprob: -12.125152587890625
    8. '```' → logprob: -12.250152587890625
    9. '
' → logprob: -12.625152587890625
    10. '._
' → logprob: -13.000152587890625

Token 1130: 'peek' (ID: 163275)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.6193508505821228
    2. 'data' → logprob: -1.1193509101867676
    3. '_pe' → logprob: -2.4943509101867676
    4. 'peek' → logprob: -3.6193509101867676
    5. '_parse' → logprob: -4.619350910186768
    6. '_cons' → logprob: -5.744350910186768
    7. '._' → logprob: -6.119350910186768
    8. '_pos' → logprob: -6.494350910186768
    9. '
' → logprob: -6.994350910186768
    10. '`' → logprob: -7.369350910186768

Token 1131: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008675788529217243
    2. '()==' → logprob: -4.758675575256348
    3. '==' → logprob: -10.008675575256348
    4. ' ==' → logprob: -12.258675575256348
    5. '()=="' → logprob: -12.508675575256348
    6. ' ()' → logprob: -12.758675575256348
    7. '(' → logprob: -12.758675575256348
    8. '()='' → logprob: -13.508675575256348
    9. '()
' → logprob: -15.633675575256348
    10. '=='' → logprob: -15.883675575256348

Token 1132: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09709682315587997
    2. '=='' → logprob: -3.4720969200134277
    3. '()==' → logprob: -3.5970969200134277
    4. ' ==' → logprob: -3.5970969200134277
    5. '()' → logprob: -5.222096920013428
    6. '==
' → logprob: -7.722096920013428
    7. '=' → logprob: -7.847096920013428
    8. '=="' → logprob: -8.72209644317627
    9. ' =='' → logprob: -9.72209644317627
    10. 'is' → logprob: -9.84709644317627

Token 1133: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008852577768266201
    2. '"' → logprob: -4.758852481842041
    3. ''(' → logprob: -8.6338529586792
    4. ' '('' → logprob: -9.7588529586792
    5. '(' → logprob: -14.0088529586792
    6. '"(' → logprob: -14.7588529586792
    7. ' "("' → logprob: -15.5088529586792
    8. '('' → logprob: -16.008852005004883
    9. ''''' → logprob: -16.258852005004883
    10. '`' → logprob: -16.383852005004883

Token 1134: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054655998945236206
    2. '           ' → logprob: -4.054656028747559
    3. 'self' → logprob: -4.179656028747559
    4. ':
' → logprob: -4.304656028747559
    5. '(self' → logprob: -6.179656028747559
    6. ':' → logprob: -6.304656028747559
    7. '):
' → logprob: -6.429656028747559
    8. ')' → logprob: -7.679656028747559
    9. '):' → logprob: -8.429656028747559
    10. ' self' → logprob: -8.679656028747559

Token 1135: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6613867282867432
    2. '           ' → logprob: -1.0363867282867432
    3. 'self' → logprob: -2.161386728286743
    4. ' self' → logprob: -4.661386489868164
    5. '(self' → logprob: -6.161386489868164
    6. ':
' → logprob: -7.036386489868164
    7. '):
' → logprob: -8.036386489868164
    8. '#' → logprob: -8.411386489868164
    9. '{
' → logprob: -8.786386489868164
    10. ')' → logprob: -9.286386489868164

Token 1136: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008005765848793089
    2. '               ' → logprob: -7.750800609588623
    3. '           ' → logprob: -8.250800132751465
    4. ' self' → logprob: -9.375800132751465
    5. '#' (adapté à ' #') → logprob: -11.750800132751465
    6. '_' → logprob: -12.250800132751465
    7. '                   ' → logprob: -12.500800132751465
    8. '(self' → logprob: -13.000800132751465
    9. '	self' → logprob: -13.250800132751465
    10. '   ' → logprob: -13.750800132751465

Token 1137: ' repetition' (ID: 100556)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010092071170220152
    2. '#' → logprob: -9.625101089477539
    3. '           ' → logprob: -11.250101089477539
    4. ' self' → logprob: -11.375101089477539
    5. '               ' → logprob: -11.875101089477539
    6. '                   ' → logprob: -13.875101089477539
    7. '
' → logprob: -14.875101089477539
    8. '_' → logprob: -14.875101089477539
    9. '   ' → logprob: -14.875101089477539
    10. '(self' → logprob: -15.000101089477539

Token 1138: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8468772172927856
    2. '(
' → logprob: -1.4718772172927856
    3. ' =' → logprob: -2.346877098083496
    4. '(self' → logprob: -3.221877098083496
    5. '(' → logprob: -3.346877098083496
    6. '                   ' → logprob: -3.471877098083496
    7. ':' → logprob: -3.971877098083496
    8. ':
' → logprob: -3.971877098083496
    9. '               ' → logprob: -4.096877098083496
    10. ')' → logprob: -4.096877098083496

Token 1139: ' a' (ID: 261)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.6517075896263123
    2. 'self' → logprob: -1.401707649230957
    3. '(' → logprob: -1.776707649230957
    4. ')' → logprob: -3.776707649230957
    5. '('' → logprob: -4.276707649230957
    6. 'parent' → logprob: -4.651707649230957
    7. ''' → logprob: -4.651707649230957
    8. 'paren' → logprob: -6.776707649230957
    9. '(self' → logprob: -7.026707649230957
    10. 'the' → logprob: -7.401707649230957

Token 1140: ' parent' (ID: 5980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2404433637857437
    2. '(
' → logprob: -1.9904433488845825
    3. 'component' → logprob: -3.365443468093872
    4. ''' → logprob: -4.490443229675293
    5. '('' → logprob: -4.740443229675293
    6. 'parent' → logprob: -4.990443229675293
    7. 'compound' → logprob: -4.990443229675293
    8. ')' → logprob: -6.365443229675293
    9. 'sequence' → logprob: -6.615443229675293
    10. 'literal' → logprob: -6.740443229675293

Token 1141: 'hes' (ID: 9780)
  Prédit: 'hesis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hesis' → logprob: -0.7218647003173828
    2. 'heses' → logprob: -0.9718647003173828
    3. 'hes' → logprob: -2.471864700317383
    4. 'h' → logprob: -2.971864700317383
    5. 'hs' → logprob: -10.096864700317383
    6. 'hesia' → logprob: -10.596864700317383
    7. ')' → logprob: -10.971864700317383
    8. '(' → logprob: -10.971864700317383
    9. 'hetical' → logprob: -11.221864700317383
    10. '```' → logprob: -11.346864700317383

Token 1142: 'ized' (ID: 2110)
  Prédit: 'esis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esis' → logprob: -0.45443886518478394
    2. 'es' → logprob: -1.2044389247894287
    3. 'esized' → logprob: -2.9544389247894287
    4. ')' → logprob: -5.07943868637085
    5. 'hesis' → logprob: -6.32943868637085
    6. 'e' → logprob: -6.32943868637085
    7. 'ized' → logprob: -7.32943868637085
    8. 'eses' → logprob: -7.45443868637085
    9. '(
' → logprob: -8.204439163208008
    10. 'sis' → logprob: -8.204439163208008

Token 1143: ' sequence' (ID: 16281)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02562985010445118
    2. ' (' → logprob: -4.525629997253418
    3. '(
' → logprob: -4.650629997253418
    4. 'component' → logprob: -5.525629997253418
    5. ''' → logprob: -8.650629997253418
    6. ' component' → logprob: -8.900629997253418
    7. 'sequence' → logprob: -9.275629997253418
    8. '('' → logprob: -9.400629997253418
    9. ' (
' → logprob: -9.400629997253418
    10. 'expression' → logprob: -9.400629997253418

Token 1144: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021398155018687248
    2. '               ' → logprob: -4.646398067474365
    3. 'self' → logprob: -4.896398067474365
    4. '(self' → logprob: -6.271398067474365
    5. '                   ' → logprob: -6.771398067474365
    6. '
' → logprob: -7.396398067474365
    7. ' self' → logprob: -8.896398544311523
    8. ':
' → logprob: -9.646398544311523
    9. '(
' → logprob: -10.021398544311523
    10. '#' → logprob: -10.396398544311523

Token 1145: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2738668620586395
    2. '           ' → logprob: -2.023866891860962
    3. '                   ' → logprob: -3.023866891860962
    4. 'self' → logprob: -3.398866891860962
    5. '(self' → logprob: -4.398866653442383
    6. '(
' → logprob: -5.148866653442383
    7. ':
' → logprob: -6.023866653442383
    8. '
' → logprob: -6.148866653442383
    9. '(' → logprob: -7.898866653442383
    10. '):
' → logprob: -8.023866653442383

Token 1146: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00067966926144436
    2. '           ' → logprob: -7.6256794929504395
    3. '               ' → logprob: -9.375679969787598
    4. ' self' → logprob: -9.625679969787598
    5. '_' → logprob: -10.750679969787598
    6. '                   ' → logprob: -11.500679969787598
    7. '	self' → logprob: -13.125679969787598
    8. '   ' → logprob: -13.375679969787598
    9. '(self' → logprob: -13.375679969787598
    10. '_self' → logprob: -13.750679969787598

Token 1147: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.466968650580384e-05
    2. '.' → logprob: -10.750054359436035
    3. '_cons' → logprob: -10.875054359436035
    4. '.consume' → logprob: -11.375054359436035
    5. '._
' → logprob: -14.125054359436035
    6. '.
' → logprob: -14.625054359436035
    7. '
' → logprob: -14.750054359436035
    8. '.__' → logprob: -14.875054359436035
    9. '.\' → logprob: -15.375054359436035
    10. '_' → logprob: -15.750054359436035

Token 1148: 'consume' (ID: 166897)
  Prédit: 'consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -3.173704271830502e-06
    2. ' consume' → logprob: -14.25000286102295
    3. '.consume' → logprob: -14.25000286102295
    4. 'pos' → logprob: -14.62500286102295
    5. 'parse' → logprob: -14.75000286102295
    6. '_' → logprob: -14.75000286102295
    7. '_cons' → logprob: -15.12500286102295
    8. 'advance' → logprob: -16.625003814697266
    9. '```' → logprob: -17.000003814697266
    10. 'Consume' → logprob: -17.500003814697266

Token 1149: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.050576478242874146
    2. ''' → logprob: -3.1755764484405518
    3. '("("' → logprob: -4.925576686859131
    4. '(' → logprob: -8.550576210021973
    5. '"' → logprob: -9.550576210021973
    6. ' '('' → logprob: -11.300576210021973
    7. '(
' → logprob: -11.675576210021973
    8. ''(' → logprob: -13.425576210021973
    9. '('.')' → logprob: -14.175576210021973
    10. '('(' → logprob: -14.425576210021973

Token 1150: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.73183855926618e-05
    2. ')')
' → logprob: -9.500077247619629
    3. ')' → logprob: -13.750077247619629
    4. '(' → logprob: -13.875077247619629
    5. '')
' → logprob: -15.875077247619629
    6. '')' → logprob: -16.625078201293945
    7. '(',' → logprob: -17.000078201293945
    8. '['' → logprob: -17.625078201293945
    9. '(';' → logprob: -17.625078201293945
    10. '(\'' → logprob: -17.750078201293945

Token 1151: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6949700117111206
    2. ')
' → logprob: -0.9449700117111206
    3. '               ' → logprob: -2.94497013092041
    4. ')' → logprob: -3.19497013092041
    5. 'component' → logprob: -4.56997013092041
    6. 'components' → logprob: -5.69497013092041
    7. 'sequence' → logprob: -5.69497013092041
    8. '
' → logprob: -7.06997013092041
    9. '')
' → logprob: -8.81997013092041
    10. 'seq' → logprob: -9.31997013092041

Token 1152: '               ' (ID: 506)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.8647896647453308
    2. '           ' → logprob: -1.8647897243499756
    3. 'sub' → logprob: -1.8647897243499756
    4. 'components' → logprob: -2.2397897243499756
    5. 'sequence' → logprob: -2.3647897243499756
    6. '               ' → logprob: -3.2397897243499756
    7. 'inner' → logprob: -4.6147894859313965
    8. 'seq' → logprob: -4.8647894859313965
    9. 'content' → logprob: -5.2397894859313965
    10. 'comp' → logprob: -6.1147894859313965

Token 1153: ' #' (ID: 1069)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.44797012209892273
    2. 'sub' → logprob: -1.9479701519012451
    3. 'components' → logprob: -2.447970151901245
    4. 'inner' → logprob: -2.697970151901245
    5. 'seq' → logprob: -3.322970151901245
    6. 'sequence' → logprob: -4.197969913482666
    7. 'content' → logprob: -4.697969913482666
    8. 'comp' → logprob: -5.822969913482666
    9. 'contents' → logprob: -8.072970390319824
    10. 'elements' → logprob: -8.197970390319824

Token 1154: ' parse' (ID: 8420)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.23247039318084717
    2. 'sub' → logprob: -1.9824703931808472
    3. 'inner' → logprob: -4.107470512390137
    4. 'components' → logprob: -4.107470512390137
    5. 'sequence' → logprob: -4.232470512390137
    6. 'content' → logprob: -4.732470512390137
    7. 'seq' → logprob: -4.857470512390137
    8. 'comp' → logprob: -5.357470512390137
    9. '       ' → logprob: -8.357470512390137
    10. 'contents' → logprob: -8.732470512390137

Token 1155: ' sequence' (ID: 16281)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.1509207487106323
    2. 'sequence' → logprob: -1.5259207487106323
    3. 'component' → logprob: -1.5259207487106323
    4. 'sub' → logprob: -1.6509207487106323
    5. 'seq' → logprob: -3.900920867919922
    6. 'content' → logprob: -4.025920867919922
    7. 'inner' → logprob: -4.400920867919922
    8. 'contents' → logprob: -5.775920867919922
    9. 'elements' → logprob: -6.525920867919922
    10. 'comp' → logprob: -7.525920867919922

Token 1156: ' inside' (ID: 6772)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.4780866205692291
    2. '               ' → logprob: -1.3530865907669067
    3. 'component' → logprob: -2.7280867099761963
    4. 'sequence' → logprob: -3.8530867099761963
    5. ' =' → logprob: -4.728086471557617
    6. 'elements' → logprob: -5.103086471557617
    7. 'sub' → logprob: -5.603086471557617
    8. '=' → logprob: -5.728086471557617
    9. 'comp' → logprob: -6.228086471557617
    10. '_sequence' → logprob: -6.478086471557617

Token 1157: ' parentheses' (ID: 180602)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.5460773706436157
    2. '               ' → logprob: -1.6710773706436157
    3. 'sequence' → logprob: -1.9210773706436157
    4. 'component' → logprob: -3.296077251434326
    5. 'sub' → logprob: -3.421077251434326
    6. 'seq' → logprob: -5.421077251434326
    7. ' components' → logprob: -5.921077251434326
    8. 'inner' → logprob: -6.046077251434326
    9. 'elements' → logprob: -6.421077251434326
    10. 'contents' → logprob: -6.796077251434326

Token 1158: ' recursively' (ID: 130266)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02074531465768814
    2. 'components' → logprob: -4.395745277404785
    3. 'sequence' → logprob: -5.395745277404785
    4. 'component' → logprob: -5.895745277404785
    5. 'sub' → logprob: -8.145745277404785
    6. ' components' → logprob: -8.895745277404785
    7. 'seq' → logprob: -8.895745277404785
    8. 'contents' → logprob: -9.645745277404785
    9. 'inner' → logprob: -9.770745277404785
    10. '
' → logprob: -10.020745277404785

Token 1159: ' until' (ID: 4609)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08505377173423767
    2. 'components' → logprob: -3.2100536823272705
    3. 'component' → logprob: -3.4600536823272705
    4. 'sequence' → logprob: -4.83505392074585
    5. 'seq' → logprob: -7.71005392074585
    6. 'comp' → logprob: -8.210053443908691
    7. 'sub' → logprob: -8.460053443908691
    8. '           ' → logprob: -8.835053443908691
    9. 'compound' → logprob: -8.835053443908691
    10. '
' → logprob: -9.085053443908691

Token 1160: ' matching' (ID: 20238)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5297513008117676
    2. 'self' → logprob: -1.0297513008117676
    3. ')' → logprob: -3.7797513008117676
    4. 'curr' → logprob: -4.654751300811768
    5. 'True' → logprob: -5.279751300811768
    6. 'matching' → logprob: -5.654751300811768
    7. '#' → logprob: -5.904751300811768
    8. 'paren' → logprob: -6.404751300811768
    9. '   ' → logprob: -6.529751300811768
    10. '               ' → logprob: -7.404751300811768

Token 1161: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5762680172920227
    2. '')' → logprob: -0.8262680172920227
    3. ')
' → logprob: -8.951268196105957
    4. 'parent' → logprob: -9.826268196105957
    5. 'paren' → logprob: -10.201268196105957
    6. '   ' → logprob: -10.451268196105957
    7. '       ' → logprob: -11.076268196105957
    8. ' ')' → logprob: -11.451268196105957
    9. '_parent' → logprob: -11.576268196105957
    10. 'self' → logprob: -11.826268196105957

Token 1162: '               ' (ID: 506)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.2266993671655655
    2. '               ' → logprob: -1.9766993522644043
    3. 'component' → logprob: -3.6016993522644043
    4. 'sequence' → logprob: -3.7266993522644043
    5. 'sub' → logprob: -5.726699352264404
    6. '           ' → logprob: -5.976699352264404
    7. ' components' → logprob: -6.226699352264404
    8. 'comp' → logprob: -6.476699352264404
    9. 'result' → logprob: -6.601699352264404
    10. '
' → logprob: -7.476699352264404

Token 1163: ' inner' (ID: 12694)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.25162991881370544
    2. 'sub' → logprob: -2.6266298294067383
    3. 'sequence' → logprob: -2.7516298294067383
    4. 'seq' → logprob: -3.7516298294067383
    5. 'inner' (adapté à ' inner') → logprob: -4.001629829406738
    6. 'component' → logprob: -4.251629829406738
    7. 'content' → logprob: -4.251629829406738
    8. 'contents' → logprob: -4.626629829406738
    9. 'elements' → logprob: -6.126629829406738
    10. '               ' → logprob: -6.251629829406738

Token 1164: '_component' (ID: 53516)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.3963650166988373
    2. '_component' → logprob: -1.7713650465011597
    3. 'components' → logprob: -2.27136492729187
    4. '_sequence' → logprob: -3.77136492729187
    5. 'component' → logprob: -3.89636492729187
    6. 'comp' → logprob: -6.021365165710449
    7. '_seq' → logprob: -6.021365165710449
    8. 'sequence' → logprob: -6.146365165710449
    9. '_comp' → logprob: -6.146365165710449
    10. '_elements' → logprob: -7.146365165710449

Token 1165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868825435638428
    2. '=' → logprob: -1.1368825435638428
    3. '=self' → logprob: -12.386882781982422
    4. 's' → logprob: -12.386882781982422
    5. ':' → logprob: -13.886882781982422
    6. '           ' → logprob: -14.636882781982422
    7. 'self' → logprob: -15.011882781982422
    8. '=
' → logprob: -15.511882781982422
    9. '   ' → logprob: -15.761882781982422
    10. ',' → logprob: -15.886882781982422

Token 1166: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007712708320468664
    2. ' self' → logprob: -7.2507710456848145
    3. '
' → logprob: -9.875771522521973
    4. '           ' → logprob: -12.625771522521973
    5. 'Genome' → logprob: -13.250771522521973
    6. '[]
' → logprob: -13.625771522521973
    7. '               ' → logprob: -13.875771522521973
    8. '(self' → logprob: -14.250771522521973
    9. 'None' → logprob: -14.375771522521973
    10. '   ' → logprob: -15.000771522521973

Token 1167: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.48844796419143677
    2. '.parse' → logprob: -1.363447904586792
    3. '_parse' → logprob: -2.238447904586792
    4. 'parse' → logprob: -3.738447904586792
    5. '.__' → logprob: -9.613448143005371
    6. '   ' → logprob: -10.113448143005371
    7. '.' → logprob: -10.863448143005371
    8. '=parse' → logprob: -10.863448143005371
    9. '_.' → logprob: -11.238448143005371
    10. 'self' → logprob: -11.738448143005371

Token 1168: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00044675805838778615
    2. 'consume' → logprob: -8.000446319580078
    3. '_parse' → logprob: -9.500446319580078
    4. 'collect' → logprob: -11.250446319580078
    5. '__' → logprob: -12.625446319580078
    6. 'Genome' → logprob: -13.000446319580078
    7. ' parse' → logprob: -13.500446319580078
    8. '
' → logprob: -13.625446319580078
    9. '.parse' → logprob: -13.625446319580078
    10. '(parse' → logprob: -13.750446319580078

Token 1169: '_until' (ID: 115218)
  Prédit: '_element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.4860530197620392
    2. '_sequence' → logprob: -1.7360529899597168
    3. 'element' → logprob: -1.8610529899597168
    4. '_component' → logprob: -3.861052989959717
    5. 'sequence' → logprob: -3.861052989959717
    6. '_elements' → logprob: -5.861052989959717
    7. 'component' → logprob: -6.236052989959717
    8. 'Element' → logprob: -6.736052989959717
    9. 'elements' → logprob: -6.736052989959717
    10. '_expression' → logprob: -6.861052989959717

Token 1170: '_cl' (ID: 11209)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1030426025390625
    2. '')' → logprob: -2.4780426025390625
    3. 'paren' → logprob: -6.2280426025390625
    4. '(lambda' → logprob: -6.4780426025390625
    5. '   ' → logprob: -6.7280426025390625
    6. 'lambda' → logprob: -6.8530426025390625
    7. 'def' → logprob: -6.8530426025390625
    8. ')' → logprob: -7.2280426025390625
    9. '{' → logprob: -7.2280426025390625
    10. '['' → logprob: -7.2280426025390625

Token 1171: 'osing' (ID: 10819)
  Prédit: 'ose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ose' → logprob: -0.1288338005542755
    2. 'osing' → logprob: -2.128833770751953
    3. 'osure' → logprob: -7.003833770751953
    4. 'oser' → logprob: -8.003833770751953
    5. 'os' → logprob: -8.503833770751953
    6. ')' → logprob: -9.253833770751953
    7. 'o' → logprob: -9.378833770751953
    8. 'osest' → logprob: -9.378833770751953
    9. 'osed' → logprob: -9.753833770751953
    10. '```' → logprob: -10.253833770751953

Token 1172: '_par' (ID: 31329)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paren' → logprob: -0.14496707916259766
    2. 'parent' → logprob: -2.8949670791625977
    3. '_parent' → logprob: -3.3949670791625977
    4. '_par' → logprob: -3.3949670791625977
    5. '')' → logprob: -4.769967079162598
    6. '('' → logprob: -6.269967079162598
    7. 'par' → logprob: -6.394967079162598
    8. '
' → logprob: -8.394967079162598
    9. 'Paren' → logprob: -9.269967079162598
    10. ')' → logprob: -10.144967079162598

Token 1173: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -8.458980300929397e-05
    2. 'ent' → logprob: -9.50008487701416
    3. ')' → logprob: -13.12508487701416
    4. 'ens' → logprob: -13.37508487701416
    5. 'an' → logprob: -13.75008487701416
    6. '})' → logprob: -14.00008487701416
    7. '```' → logprob: -14.12508487701416
    8. 'enth' → logprob: -14.25008487701416
    9. 'e' → logprob: -14.75008487701416
    10. '')' → logprob: -15.62508487701416

Token 1174: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.47455859184265137
    2. '()' → logprob: -0.9745585918426514
    3. '())' → logprob: -8.72455883026123
    4. '               ' → logprob: -9.59955883026123
    5. '())
' → logprob: -9.84955883026123
    6. ')' → logprob: -9.97455883026123
    7. '           ' → logprob: -9.97455883026123
    8. '()

' → logprob: -10.22455883026123
    9. ')
' → logprob: -11.09955883026123
    10. '       ' → logprob: -11.59955883026123

Token 1175: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024923032615333796
    2. 'return' → logprob: -6.752492427825928
    3. '           ' → logprob: -7.127492427825928
    4. '       ' → logprob: -8.37749195098877
    5. '                   ' → logprob: -9.25249195098877
    6. '
' → logprob: -9.87749195098877
    7. ')' → logprob: -10.12749195098877
    8. ' return' → logprob: -10.37749195098877
    9. '                       ' → logprob: -10.75249195098877
    10. '()' → logprob: -11.62749195098877

Token 1176: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8130300641059875
    2. 'self' (adapté à ' self') → logprob: -0.8130300641059875
    3. '               ' → logprob: -2.1880300045013428
    4. '           ' → logprob: -8.063030242919922
    5. ' return' → logprob: -8.438030242919922
    6. ' self' → logprob: -8.938030242919922
    7. '
' → logprob: -9.063030242919922
    8. '                   ' → logprob: -10.813030242919922
    9. '       ' → logprob: -11.188030242919922
    10. '#' → logprob: -12.438030242919922

Token 1177: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00437042536213994
    2. '.' → logprob: -5.754370212554932
    3. '_' → logprob: -7.379370212554932
    4. '
' → logprob: -9.25437068939209
    5. '.__' → logprob: -9.75437068939209
    6. ')' → logprob: -9.75437068939209
    7. ' .' → logprob: -9.87937068939209
    8. '   ' → logprob: -10.12937068939209
    9. '       ' → logprob: -10.25437068939209
    10. '.
' → logprob: -10.25437068939209

Token 1178: 'consume' (ID: 166897)
  Prédit: 'consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.33892184495925903
    2. 'pos' → logprob: -1.3389217853546143
    3. '_pos' → logprob: -3.8389217853546143
    4. 'parse' → logprob: -6.588922023773193
    5. 'data' → logprob: -7.463922023773193
    6. 'return' → logprob: -7.463922023773193
    7. 'peek' → logprob: -8.338921546936035
    8. 'expect' → logprob: -8.338921546936035
    9. '_cons' → logprob: -8.838921546936035
    10. '_data' → logprob: -8.963921546936035

Token 1179: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00027599421446211636
    2. '')' → logprob: -8.250275611877441
    3. '(' → logprob: -11.375275611877441
    4. '("' → logprob: -13.125275611877441
    5. '(
' → logprob: -14.750275611877441
    6. '()' → logprob: -15.000275611877441
    7. ')' → logprob: -15.250275611877441
    8. '(('' → logprob: -16.750276565551758
    9. '('.')' → logprob: -16.750276565551758
    10. '")' → logprob: -17.250276565551758

Token 1180: ')')
' (ID: 80616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04442393034696579
    2. ')')
' → logprob: -3.169423818588257
    3. '')' → logprob: -7.169424057006836
    4. ')'' → logprob: -7.419424057006836
    5. ')').' → logprob: -10.669424057006836
    6. ')'
' → logprob: -11.294424057006836
    7. ')")' → logprob: -12.419424057006836
    8. ')');
' → logprob: -12.544424057006836
    9. ')'),' → logprob: -12.669424057006836
    10. '('' → logprob: -12.794424057006836

Token 1181: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29217272996902466
    2. '           ' → logprob: -1.6671726703643799
    3. 'return' → logprob: -2.79217267036438
    4. ' return' → logprob: -6.417172908782959
    5. '
' → logprob: -6.792172908782959
    6. '            
' → logprob: -9.4171724319458
    7. '<|end|>' → logprob: -9.4171724319458
    8. '       ' → logprob: -9.6671724319458
    9. ')return' → logprob: -10.0421724319458
    10. ',' → logprob: -10.1671724319458

Token 1182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0029352677520364523
    2. '               ' → logprob: -6.252935409545898
    3. '           ' → logprob: -7.002935409545898
    4. ' return' → logprob: -9.252935409545898
    5. '
' → logprob: -15.002935409545898
    6. '	return' → logprob: -15.127935409545898
    7. '                   ' → logprob: -15.627935409545898
    8. '       ' → logprob: -16.6279354095459
    9. '   ' → logprob: -16.7529354095459
    10. '```' → logprob: -17.0029354095459

Token 1183: ' Re' (ID: 907)
  Prédit: 'Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -2.7610454708337784e-05
    2. ' Re' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.50002670288086
    4. 'Repe' → logprob: -20.75002670288086
    5. '           ' → logprob: -21.50002670288086
    6. '_Re' → logprob: -22.00002670288086
    7. '               ' → logprob: -22.75002670288086
    8. 'Repeated' → logprob: -22.75002670288086
    9. ' ' → logprob: -22.87502670288086
    10. 'Rep' → logprob: -23.12502670288086

Token 1184: 'petition' (ID: 134449)
  Prédit: 'petition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'petition' → logprob: -0.0012085650814697146
    2. 'pet' → logprob: -6.751208782196045
    3. 'Pet' → logprob: -11.126208305358887
    4. 'pt' → logprob: -11.376208305358887
    5. 'p' → logprob: -12.001208305358887
    6. 'peat' → logprob: -12.751208305358887
    7. 'pletion' → logprob: -13.376208305358887
    8. 'ep' → logprob: -14.751208305358887
    9. 'ption' → logprob: -15.626208305358887
    10. 'peated' → logprob: -15.626208305358887

Token 1185: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.005132827442139387
    2. '(
' → logprob: -5.755132675170898
    3. '(' → logprob: -6.255132675170898
    4. 'count' → logprob: -10.380132675170898
    5. ' (' → logprob: -14.630132675170898
    6. '(
' → logprob: -14.630132675170898
    7. '[count' → logprob: -15.505132675170898
    8. '(c' → logprob: -16.1301326751709
    9. '(

' → logprob: -16.5051326751709
    10. '<count' → logprob: -16.7551326751709

Token 1186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.44574936106801e-05
    2. ',
' → logprob: -9.62507438659668
    3. ',self' → logprob: -12.87507438659668
    4. ' ,' → logprob: -13.37507438659668
    5. ',

' → logprob: -13.75007438659668
    6. '(inner' → logprob: -14.75007438659668
    7. ')' → logprob: -14.87507438659668
    8. 'inner' → logprob: -14.87507438659668
    9. 'self' → logprob: -15.12507438659668
    10. '(' → logprob: -15.25007438659668

Token 1187: ' inner' (ID: 12694)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -7.3458322731312364e-06
    2. ' inner' → logprob: -11.875007629394531
    3. '           ' → logprob: -16.00000762939453
    4. '               ' → logprob: -16.12500762939453
    5. '                   ' → logprob: -17.12500762939453
    6. '(inner' → logprob: -17.25000762939453
    7. '
' → logprob: -17.37500762939453
    8. 'inners' → logprob: -18.37500762939453
    9. 'inn' → logprob: -18.62500762939453
    10. '                       ' → logprob: -19.75000762939453

Token 1188: '_component' (ID: 53516)
  Prédit: '_component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_component' → logprob: -0.0011916564544662833
    2. 'component' → logprob: -6.75119161605835
    3. 'Component' → logprob: -10.876192092895508
    4. '_comp' → logprob: -14.501192092895508
    5. '_' → logprob: -15.251192092895508
    6. '           ' → logprob: -15.751192092895508
    7. '_sequence' → logprob: -15.876192092895508
    8. '_com' → logprob: -15.876192092895508
    9. '@Component' → logprob: -16.126192092895508
    10. '   ' → logprob: -16.126192092895508

Token 1189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005856798379682004
    2. ')
' → logprob: -7.625585556030273
    3. '       ' → logprob: -9.375585556030273
    4. '           ' → logprob: -12.000585556030273
    5. ')return' → logprob: -13.250585556030273
    6. '<|end|>' → logprob: -13.375585556030273
    7. ' )' → logprob: -14.000585556030273
    8. '   ' → logprob: -14.375585556030273
    9. '               ' → logprob: -15.000585556030273
    10. ')#' → logprob: -15.375585556030273

Token 1190: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20970647037029266
    2. '       ' → logprob: -1.709706425666809
    3. '           ' → logprob: -5.5847063064575195
    4. '        
' → logprob: -6.5847063064575195
    5. 'else' → logprob: -6.9597063064575195
    6. 'elif' → logprob: -7.5847063064575195
    7. '```' → logprob: -7.9597063064575195
    8. '    
' → logprob: -8.20970630645752
    9. '<|end|>' → logprob: -8.70970630645752
    10. '            
' → logprob: -9.08470630645752

Token 1191: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5301414132118225
    2. '           ' → logprob: -0.9051414132118225
    3. 'elif' → logprob: -5.905141353607178
    4. ' else' → logprob: -6.030141353607178
    5. '
' → logprob: -6.780141353607178
    6. '       ' → logprob: -7.405141353607178
    7. 'if' → logprob: -9.780141830444336
    8. '            
' → logprob: -11.030141830444336
    9. '#' → logprob: -11.155141830444336
    10. '               ' → logprob: -11.655141830444336

Token 1192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7499515414237976
    2. ':
' → logprob: -0.9999515414237976
    3. '           ' → logprob: -2.4999516010284424
    4. '               ' → logprob: -2.6249516010284424
    5. ' if' → logprob: -6.999951362609863
    6. '                       ' → logprob: -7.249951362609863
    7. ' :' → logprob: -7.874951362609863
    8. '            ' → logprob: -7.874951362609863
    9. ',' → logprob: -7.999951362609863
    10. ' :
' → logprob: -8.124951362609863

Token 1193: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01189209334552288
    2. '#' → logprob: -5.386892318725586
    3. ' #' → logprob: -5.886892318725586
    4. '               ' → logprob: -6.011892318725586
    5. '
' → logprob: -7.011892318725586
    6. 'token' → logprob: -8.261892318725586
    7. '       ' → logprob: -8.636892318725586
    8. ' if' → logprob: -9.011892318725586
    9. 'if' → logprob: -9.386892318725586
    10. '            
' → logprob: -9.511892318725586

Token 1194: ' #' (ID: 1069)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.27923583984375
    2. 'letter' → logprob: -2.02923583984375
    3. '#' (adapté à ' #') → logprob: -3.52923583984375
    4. 'component' → logprob: -3.65423583984375
    5. '           ' → logprob: -3.90423583984375
    6. 'next' → logprob: -4.15423583984375
    7. 'token' → logprob: -5.27923583984375
    8. 'literal' → logprob: -5.40423583984375
    9. 'ch' → logprob: -5.77923583984375
    10. '               ' → logprob: -6.02923583984375

Token 1195: ' repetition' (ID: 100556)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6720738410949707
    2. 'next' → logprob: -1.5470738410949707
    3. 'char' → logprob: -1.6720738410949707
    4. 'comp' → logprob: -3.5470738410949707
    5. 'letter' → logprob: -3.9220738410949707
    6. 'component' → logprob: -4.297073841094971
    7. 'literal' → logprob: -4.922073841094971
    8. 'curr' → logprob: -5.047073841094971
    9. 'c' → logprob: -5.547073841094971
    10. 'ch' → logprob: -6.172073841094971

Token 1196: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.310457468032837
    2. '_char' → logprob: -1.685457468032837
    3. ' =' → logprob: -2.185457468032837
    4. 'char' → logprob: -2.685457468032837
    5. '_token' → logprob: -2.685457468032837
    6. 'count' → logprob: -2.685457468032837
    7. 'token' → logprob: -3.185457468032837
    8. '_count' → logprob: -3.185457468032837
    9. '=' → logprob: -3.560457468032837
    10. ' of' → logprob: -4.060457229614258

Token 1197: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03450348600745201
    2. 'Literal' → logprob: -4.15950345993042
    3. 'letter' → logprob: -5.40950345993042
    4. ' self' → logprob: -5.65950345993042
    5. 'component' → logprob: -6.15950345993042
    6. 'a' → logprob: -6.40950345993042
    7. 'literal' → logprob: -6.53450345993042
    8. '_literal' → logprob: -6.78450345993042
    9. 'curr' → logprob: -7.03450345993042
    10. 'sequence' → logprob: -7.15950345993042

Token 1198: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.24022063612937927
    2. 'literal' → logprob: -2.365220546722412
    3. 'letter' → logprob: -2.490220546722412
    4. 'Literal' → logprob: -3.365220546722412
    5. 'component' → logprob: -7.740220546722412
    6. ' single' → logprob: -8.11522102355957
    7. ' literal' → logprob: -8.11522102355957
    8. 'Letter' → logprob: -8.24022102355957
    9. '_literal' → logprob: -8.49022102355957
    10. 'self' → logprob: -8.74022102355957

Token 1199: ' character' (ID: 5855)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.6556807160377502
    2. 'char' → logprob: -1.1556806564331055
    3. 'component' → logprob: -2.2806806564331055
    4. 'self' → logprob: -3.9056806564331055
    5. 'Literal' → logprob: -4.7806806564331055
    6. 'c' → logprob: -5.2806806564331055
    7. 'literal' → logprob: -5.4056806564331055
    8. 'curr' → logprob: -5.5306806564331055
    9. 'uppercase' → logprob: -5.6556806564331055
    10. 'character' → logprob: -5.7806806564331055

Token 1200: ' literal' (ID: 41271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12620902061462402
    2. '               ' → logprob: -3.251209020614624
    3. 'token' → logprob: -3.626209020614624
    4. 'char' → logprob: -3.751209020614624
    5. ' char' → logprob: -5.251209259033203
    6. ' c' → logprob: -5.251209259033203
    7. '            
' → logprob: -6.001209259033203
    8. '                   ' → logprob: -6.251209259033203
    9. ' token' → logprob: -6.501209259033203
    10. 'c' → logprob: -6.626209259033203

Token 1201: ' (' (ID: 350)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.3894845247268677
    2. 'token' → logprob: -1.8894845247268677
    3. '           ' → logprob: -2.639484405517578
    4. 'c' → logprob: -4.139484405517578
    5. ' char' → logprob: -4.264484405517578
    6. 'ch' → logprob: -4.264484405517578
    7. 'curr' → logprob: -4.514484405517578
    8. '               ' → logprob: -4.764484405517578
    9. 'letter' → logprob: -4.764484405517578
    10. ' c' → logprob: -4.889484405517578

Token 1202: 'no' (ID: 1750)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.06455527245998383
    2. 'self' → logprob: -3.6895551681518555
    3. 'char' → logprob: -3.9395551681518555
    4. 'c' → logprob: -5.1895551681518555
    5. ')' → logprob: -5.9395551681518555
    6. 'component' → logprob: -6.4395551681518555
    7. ')
' → logprob: -6.6895551681518555
    8. '
' → logprob: -6.8145551681518555
    9. '{
' → logprob: -6.9395551681518555
    10. 'letter' → logprob: -6.9395551681518555

Token 1203: ' parentheses' (ID: 180602)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.7385169267654419
    2. 'self' → logprob: -1.738516926765442
    3. ' whitespace' → logprob: -2.1135168075561523
    4. ' self' → logprob: -2.4885168075561523
    5. ' space' → logprob: -2.9885168075561523
    6. ')' → logprob: -3.6135168075561523
    7. 'wh' → logprob: -4.113516807556152
    8. 'Whitespace' → logprob: -4.488516807556152
    9. 'spaces' → logprob: -4.613516807556152
    10. 'parent' → logprob: -5.488516807556152

Token 1204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3726227879524231
    2. ')
' → logprob: -1.9976227283477783
    3. '               ' → logprob: -2.2476227283477783
    4. '           ' → logprob: -3.6226227283477783
    5. '):
' → logprob: -3.7476227283477783
    6. 'token' → logprob: -4.872622966766357
    7. 'char' → logprob: -5.497622966766357
    8. '                   ' → logprob: -5.872622966766357
    9. '
' → logprob: -7.497622966766357
    10. '                
' → logprob: -7.622622966766357

Token 1205: '               ' (ID: 506)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.43733152747154236
    2. '           ' → logprob: -2.312331438064575
    3. '{
' → logprob: -2.437331438064575
    4. 'token' → logprob: -3.062331438064575
    5. '               ' → logprob: -3.562331438064575
    6. 'c' → logprob: -3.687331438064575
    7. 'curr' → logprob: -3.687331438064575
    8. 'component' → logprob: -4.312331676483154
    9. '{' → logprob: -4.812331676483154
    10. 'letter' → logprob: -5.312331676483154

Token 1206: ' if' (ID: 538)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.02844427153468132
    2. 'letter' → logprob: -4.528444290161133
    3. 'ch' → logprob: -4.778444290161133
    4. 'literal' → logprob: -5.153444290161133
    5. 'component' → logprob: -7.278444290161133
    6. 'seq' → logprob: -7.278444290161133
    7. 'c' → logprob: -7.403444290161133
    8. 'comp' → logprob: -7.778444290161133
    9. 'next' → logprob: -8.528444290161133
    10. 'lit' → logprob: -8.778444290161133

Token 1207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013624972198158503
    2. ' self' → logprob: -6.626362323760986
    3. '           ' → logprob: -11.001362800598145
    4. 'not' → logprob: -11.251362800598145
    5. '   ' → logprob: -12.626362800598145
    6. '       ' → logprob: -13.251362800598145
    7. ' not' → logprob: -13.501362800598145
    8. '(self' → logprob: -16.001361846923828
    9. ' ' → logprob: -16.126361846923828
    10. '     ' → logprob: -16.376361846923828

Token 1208: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0005035852082073689
    2. '.' → logprob: -8.375503540039062
    3. '.<' → logprob: -9.500503540039062
    4. ' .' → logprob: -9.750503540039062
    5. '_' → logprob: -10.125503540039062
    6. '.__' → logprob: -10.750503540039062
    7. ' ' → logprob: -10.875503540039062
    8. '   ' → logprob: -11.000503540039062
    9. '       ' → logprob: -12.250503540039062
    10. '.\' → logprob: -12.375503540039062

Token 1209: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.24247801303863525
    2. 'peek' → logprob: -1.7424780130386353
    3. '_pos' → logprob: -3.2424778938293457
    4. '_pe' → logprob: -7.117477893829346
    5. '_parse' → logprob: -9.117478370666504
    6. 'parse' → logprob: -9.242478370666504
    7. 'consume' → logprob: -9.867478370666504
    8. '.peek' → logprob: -10.242478370666504
    9. '.pos' → logprob: -11.242478370666504
    10. '_data' → logprob: -11.992478370666504

Token 1210: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2541952431201935
    2. '<' → logprob: -1.504195213317871
    3. '<len' → logprob: -6.254195213317871
    4. ' >=' → logprob: -9.504195213317871
    5. '>=' → logprob: -9.754195213317871
    6. '<n' → logprob: -10.004195213317871
    7. '<size' → logprob: -10.379195213317871
    8. '<_' → logprob: -10.629195213317871
    9. '<char' → logprob: -11.004195213317871
    10. '<const' → logprob: -11.254195213317871

Token 1211: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014489953173324466
    2. ' self' → logprob: -8.875144958496094
    3. '0' → logprob: -13.125144958496094
    4. 'len' → logprob: -13.750144958496094
    5. 'the' → logprob: -14.625144958496094
    6. '1' → logprob: -14.875144958496094
    7. '(self' → logprob: -15.125144958496094
    8. '           ' → logprob: -15.375144958496094
    9. '=self' → logprob: -15.750144958496094
    10. '                   ' → logprob: -17.000144958496094

Token 1212: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.3494665324687958
    2. '_length' → logprob: -1.2244665622711182
    3. '_len' → logprob: -7.099466323852539
    4. '.length' → logprob: -10.099466323852539
    5. '.' → logprob: -10.224466323852539
    6. ' _' → logprob: -10.474466323852539
    7. '<_' → logprob: -10.849466323852539
    8. 'length' → logprob: -11.599466323852539
    9. '<' → logprob: -11.724466323852539
    10. '_lengths' → logprob: -11.849466323852539

Token 1213: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -2.1054253011243418e-05
    2. '_length' → logprob: -11.000020980834961
    3. ' length' → logprob: -12.500020980834961
    4. 'len' → logprob: -15.250020980834961
    5. '	length' → logprob: -16.37502098083496
    6. '```' → logprob: -16.87502098083496
    7. 'data' → logprob: -17.00002098083496
    8. 'leng' → logprob: -17.12502098083496
    9. '   ' → logprob: -17.37502098083496
    10. '
' → logprob: -17.37502098083496

Token 1214: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8968725800514221
    2. ':
' → logprob: -1.0218725204467773
    3. ':' → logprob: -2.1468725204467773
    4. 'or' → logprob: -2.2718725204467773
    5. ' and' → logprob: -5.771872520446777
    6. '               ' → logprob: -5.771872520446777
    7. '                   ' → logprob: -6.396872520446777
    8. '           ' → logprob: -6.396872520446777
    9. 'and' → logprob: -6.396872520446777
    10. ':return' → logprob: -7.521872520446777

Token 1215: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2194944620132446
    2. '               ' → logprob: -1.4694944620132446
    3. ' and' → logprob: -1.7194944620132446
    4. ':' → logprob: -2.094494342803955
    5. ':
' → logprob: -2.344494342803955
    6. ' c' → logprob: -3.219494342803955
    7. '                   ' → logprob: -4.219494342803955
    8. 'curr' → logprob: -4.844494342803955
    9. 'c' → logprob: -5.719494342803955
    10. 'and' → logprob: -6.344494342803955

Token 1216: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0004900033236481249
    2. ' raise' → logprob: -8.125490188598633
    3. '                   ' → logprob: -9.000490188598633
    4. 'return' → logprob: -9.750490188598633
    5. '	raise' → logprob: -12.375490188598633
    6. '#' → logprob: -12.875490188598633
    7. '                       ' → logprob: -13.125490188598633
    8. '               ' → logprob: -13.875490188598633
    9. '           ' → logprob: -14.000490188598633
    10. 'break' → logprob: -14.500490188598633

Token 1217: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.2471589798224159e-05
    2. 'EOF' → logprob: -11.875012397766113
    3. ' Value' → logprob: -12.500012397766113
    4. 'value' → logprob: -13.375012397766113
    5. 'Index' → logprob: -16.87501335144043
    6. '
' → logprob: -17.00001335144043
    7. '	Value' → logprob: -17.00001335144043
    8. '_value' → logprob: -17.12501335144043
    9. '   ' → logprob: -18.00001335144043
    10. 'Runtime' → logprob: -18.50001335144043

Token 1218: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0006067678914405406
    2. 'rror' → logprob: -7.875606536865234
    3. 'Unexpected' → logprob: -9.000606536865234
    4. 'nd' → logprob: -10.500606536865234
    5. 'EOF' → logprob: -10.625606536865234
    6. 'of' → logprob: -10.750606536865234
    7. 'Value' → logprob: -11.375606536865234
    8. 'Index' → logprob: -11.750606536865234
    9. '("' → logprob: -12.000606536865234
    10. 'OF' → logprob: -13.500606536865234

Token 1219: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00559847941622138
    2. '(' → logprob: -5.630598545074463
    3. '('' → logprob: -7.130598545074463
    4. '(
' → logprob: -7.255598545074463
    5. '(f' → logprob: -8.005598068237305
    6. '("'' → logprob: -9.755598068237305
    7. '"' → logprob: -10.130598068237305
    8. '("
' → logprob: -11.130598068237305
    9. '(self' → logprob: -11.380598068237305
    10. '()' → logprob: -12.005598068237305

Token 1220: 'Unexpected' (ID: 59338)
  Prédit: 'Unexpected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unexpected' → logprob: -0.5883833765983582
    2. ' expected' → logprob: -1.963383436203003
    3. 'Expected' → logprob: -2.588383436203003
    4. ' f' → logprob: -3.088383436203003
    5. 'expected' → logprob: -3.213383436203003
    6. 'f' → logprob: -3.713383436203003
    7. ' Unexpected' → logprob: -3.838383436203003
    8. '"' → logprob: -3.838383436203003
    9. ' unexpected' → logprob: -4.213383197784424
    10. ' raise' → logprob: -4.213383197784424

Token 1221: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.3133835196495056
    2. 'end' → logprob: -1.3133835792541504
    3. 'EOF' → logprob: -9.438383102416992
    4. 'End' → logprob: -10.563383102416992
    5. 'input' → logprob: -12.438383102416992
    6. 'e' → logprob: -12.563383102416992
    7. 'character' → logprob: -13.188383102416992
    8. '_end' → logprob: -13.813383102416992
    9. ' character' → logprob: -14.188383102416992
    10. ' input' → logprob: -14.313383102416992

Token 1222: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.10916988551616669
    2. ' of' → logprob: -2.7341699600219727
    3. '               ' → logprob: -4.359169960021973
    4. 'while' → logprob: -4.859169960021973
    5. '_of' → logprob: -5.234169960021973
    6. '           ' → logprob: -5.359169960021973
    7. ' at' → logprob: -6.359169960021973
    8. 'at' → logprob: -6.359169960021973
    9. '                   ' → logprob: -6.734169960021973
    10. ' while' → logprob: -7.484169960021973

Token 1223: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0003874166286550462
    2. ' input' → logprob: -8.250387191772461
    3. 'data' → logprob: -9.000387191772461
    4. 'self' → logprob: -13.000387191772461
    5. '
' → logprob: -15.500387191772461
    6. 'code' → logprob: -15.500387191772461
    7. '_input' → logprob: -15.875387191772461
    8. ' data' → logprob: -16.62538719177246
    9. 'file' → logprob: -18.00038719177246
    10. '           ' → logprob: -18.75038719177246

Token 1224: ' after' (ID: 1934)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.359548807144165
    2. ' at' → logprob: -1.484548807144165
    3. ' while' → logprob: -1.484548807144165
    4. '               ' → logprob: -2.109548807144165
    5. ')' → logprob: -2.484548807144165
    6. ')
' → logprob: -3.359548807144165
    7. '                   ' → logprob: -4.234548568725586
    8. ',' → logprob: -4.609548568725586
    9. 'self' → logprob: -5.359548568725586
    10. '           ' → logprob: -5.359548568725586

Token 1225: ' repetition' (ID: 100556)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.26143690943717957
    2. 'count' → logprob: -1.886436939239502
    3. 'number' → logprob: -3.261436939239502
    4. 'digit' → logprob: -3.261436939239502
    5. ' digits' → logprob: -6.761436939239502
    6. 'par' → logprob: -8.761436462402344
    7. ' number' → logprob: -9.011436462402344
    8. 'parse' → logprob: -9.636436462402344
    9. ' count' → logprob: -9.761436462402344
    10. ' digit' → logprob: -10.386436462402344

Token 1226: ' count' (ID: 3605)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.5294173955917358
    2. ' character' → logprob: -1.4044173955917358
    3. 'token' → logprob: -3.1544175148010254
    4. 'count' → logprob: -3.2794175148010254
    5. '")' → logprob: -3.4044175148010254
    6. 'char' → logprob: -4.279417514801025
    7. '")
' → logprob: -4.404417514801025
    8. ' token' → logprob: -4.904417514801025
    9. ')' → logprob: -5.154417514801025
    10. 'specifier' → logprob: -5.529417514801025

Token 1227: '")
' (ID: 1896)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.35155677795410156
    2. ')' → logprob: -1.6015567779541016
    3. '               ' → logprob: -2.6015567779541016
    4. '           ' → logprob: -4.226556777954102
    5. ' )
' → logprob: -6.226556777954102
    6. '")
' → logprob: -6.601556777954102
    7. 'self' → logprob: -7.476556777954102
    8. '       ' → logprob: -7.726556777954102
    9. ' at' → logprob: -7.976556777954102
    10. ',' → logprob: -8.226556777954102

Token 1228: '               ' (ID: 506)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.2171977311372757
    2. 'ch' → logprob: -2.8421976566314697
    3. 'curr' → logprob: -3.0921976566314697
    4. 'c' → logprob: -3.3421976566314697
    5. '           ' → logprob: -3.8421976566314697
    6. 'token' → logprob: -4.092197895050049
    7. 'next' → logprob: -4.467197895050049
    8. ' char' → logprob: -6.217197895050049
    9. '               ' → logprob: -6.467197895050049
    10. ' c' → logprob: -7.217197895050049

Token 1229: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -0.03830128163099289
    2. 'ch' → logprob: -3.4133012294769287
    3. 'c' → logprob: -6.288301467895508
    4. 'letter' → logprob: -6.788301467895508
    5. 'literal' → logprob: -7.163301467895508
    6. 'curr' → logprob: -7.413301467895508
    7. 'next' → logprob: -9.663301467895508
    8. 'single' → logprob: -9.913301467895508
    9. 'lit' → logprob: -10.038301467895508
    10. '       ' → logprob: -10.913301467895508

Token 1230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287322759628296
    2. '=' → logprob: -1.0537322759628296
    3. '=self' → logprob: -10.803731918334961
    4. 'self' → logprob: -13.428731918334961
    5. ' ' → logprob: -13.553731918334961
    6. '               ' → logprob: -13.678731918334961
    7. '_' → logprob: -14.053731918334961
    8. '                   ' → logprob: -14.303731918334961
    9. '           ' → logprob: -14.303731918334961
    10. '=
' → logprob: -14.678731918334961

Token 1231: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.036524842376821e-05
    2. ' self' → logprob: -10.125040054321289
    3. '                   ' → logprob: -15.875040054321289
    4. '               ' → logprob: -16.25004005432129
    5. '           ' → logprob: -17.25004005432129
    6. '
' → logprob: -17.62504005432129
    7. '(self' → logprob: -18.62504005432129
    8. '                       ' → logprob: -18.75004005432129
    9. '[self' → logprob: -18.75004005432129
    10. '	self' → logprob: -19.37504005432129

Token 1232: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.038381919264793396
    2. '_cons' → logprob: -3.288381814956665
    3. '_consum' → logprob: -9.163381576538086
    4. '.' → logprob: -9.663381576538086
    5. '.consume' → logprob: -10.163381576538086
    6. '_data' → logprob: -10.288381576538086
    7. '_self' → logprob: -10.538381576538086
    8. 'self' → logprob: -10.913381576538086
    9. '_parse' → logprob: -11.288381576538086
    10. ' _' → logprob: -11.663381576538086

Token 1233: 'consume' (ID: 166897)
  Prédit: 'consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.02679888904094696
    2. 'data' → logprob: -3.901798963546753
    3. '_cons' → logprob: -5.401798725128174
    4. '_data' → logprob: -6.776798725128174
    5. 'peek' → logprob: -7.651798725128174
    6. ' consume' → logprob: -10.651799201965332
    7. 'self' → logprob: -10.776799201965332
    8. '_consum' → logprob: -10.901799201965332
    9. '.consume' → logprob: -11.151799201965332
    10. '_pe' → logprob: -11.151799201965332

Token 1234: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0023958671372383833
    2. '()
' → logprob: -6.1273956298828125
    3. '(' → logprob: -8.627395629882812
    4. '('' → logprob: -11.752395629882812
    5. '<|end|>' → logprob: -11.877395629882812
    6. ')' → logprob: -12.252395629882812
    7. '())' → logprob: -12.752395629882812
    8. ' ()' → logprob: -13.752395629882812
    9. '()

' → logprob: -13.752395629882812
    10. '(char' → logprob: -14.002395629882812

Token 1235: '               ' (ID: 506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21312683820724487
    2. '               ' → logprob: -1.8381268978118896
    3. '           ' → logprob: -4.0881266593933105
    4. 'if' → logprob: -5.0881266593933105
    5. ' return' → logprob: -5.7131266593933105
    6. 'Literal' → logprob: -6.0881266593933105
    7. '       ' → logprob: -6.4631266593933105
    8. 'self' → logprob: -7.2131266593933105
    9. '
' → logprob: -7.5881266593933105
    10. 'component' → logprob: -7.9631266593933105

Token 1236: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005917556118220091
    2. 'if' (adapté à ' if') → logprob: -7.50059175491333
    3. '               ' → logprob: -10.250592231750488
    4. ' return' → logprob: -13.125592231750488
    5. '           ' → logprob: -13.875592231750488
    6. '                   ' → logprob: -15.875592231750488
    7. 'assert' → logprob: -16.125591278076172
    8. 'literal' → logprob: -16.500591278076172
    9. 'component' → logprob: -16.750591278076172
    10. '                
' → logprob: -17.750591278076172

Token 1237: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.014684263616800308
    2. 'char' → logprob: -4.264684200286865
    3. ' not' → logprob: -7.639684200286865
    4. ''' → logprob: -10.889684677124023
    5. '(not' → logprob: -11.389684677124023
    6. '(char' → logprob: -13.139684677124023
    7. '   ' → logprob: -13.389684677124023
    8. ''A' → logprob: -13.764684677124023
    9. 'Not' → logprob: -14.639684677124023
    10. '
' → logprob: -14.764684677124023

Token 1238: ' ('' (ID: 9906)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.024594027549028397
    2. '('' → logprob: -3.8995940685272217
    3. '(char' → logprob: -5.524593830108643
    4. '(' → logprob: -10.7745943069458
    5. ' char' → logprob: -11.6495943069458
    6. ''' → logprob: -11.7745943069458
    7. '("' → logprob: -12.0245943069458
    8. '(
' → logprob: -12.8995943069458
    9. '(('' → logprob: -13.0245943069458
    10. ' ('' → logprob: -13.7745943069458

Token 1239: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.023305343464016914
    2. ''A' → logprob: -3.7733054161071777
    3. ''' → logprob: -9.77330493927002
    4. '"A' → logprob: -13.64830493927002
    5. ''a' → logprob: -14.89830493927002
    6. 'char' → logprob: -15.27330493927002
    7. '
' → logprob: -15.39830493927002
    8. '’A' → logprob: -15.52330493927002
    9. ' A' → logprob: -16.023305892944336
    10. '`' → logprob: -16.148305892944336

Token 1240: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0016098396154120564
    2. '<=' → logprob: -6.876609802246094
    3. 'Z' → logprob: -7.626609802246094
    4. ''-' → logprob: -10.876609802246094
    5. ' <=' → logprob: -11.251609802246094
    6. '')' → logprob: -11.501609802246094
    7. '"' → logprob: -11.626609802246094
    8. ''''' → logprob: -11.626609802246094
    9. 'A' → logprob: -11.751609802246094
    10. '```' → logprob: -12.126609802246094

Token 1241: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.02286139503121376
    2. ''' → logprob: -3.8978614807128906
    3. ' <=' → logprob: -6.897861480712891
    4. '```' → logprob: -7.397861480712891
    5. '..' → logprob: -8.77286148071289
    6. '"' → logprob: -9.02286148071289
    7. 'Z' → logprob: -9.27286148071289
    8. 'and' → logprob: -9.89786148071289
    9. ''''' → logprob: -10.14786148071289
    10. '...' → logprob: -10.27286148071289

Token 1242: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -5.512236498361744e-07
    2. ' char' → logprob: -14.500000953674316
    3. '<char' → logprob: -20.625
    4. '
' → logprob: -21.375
    5. '(char' → logprob: -21.625
    6. '   ' → logprob: -21.625
    7. '.char' → logprob: -21.875
    8. '	char' → logprob: -22.375
    9. '_char' → logprob: -23.125
    10. '```' → logprob: -23.875

Token 1243: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.1002393513917923
    2. ' <=' → logprob: -2.3502392768859863
    3. 'and' → logprob: -10.725239753723145
    4. ' and' → logprob: -12.100239753723145
    5. ')<=' → logprob: -13.225239753723145
    6. '           ' → logprob: -14.100239753723145
    7. '```' → logprob: -14.350239753723145
    8. '               ' → logprob: -14.725239753723145
    9. '                   ' → logprob: -15.100239753723145
    10. ')' → logprob: -15.350239753723145

Token 1244: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00025907461531460285
    2. 'Z' → logprob: -8.375259399414062
    3. ' '' → logprob: -10.750259399414062
    4. ''z' → logprob: -12.500259399414062
    5. '"' → logprob: -12.875259399414062
    6. '`' → logprob: -15.250259399414062
    7. '   ' → logprob: -16.250259399414062
    8. ' Z' → logprob: -16.250259399414062
    9. '
' → logprob: -16.750259399414062
    10. '>Z' → logprob: -16.750259399414062

Token 1245: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.5760269165039062
    2. ''' → logprob: -0.8260269165039062
    3. ''z' → logprob: -9.451026916503906
    4. '"' → logprob: -12.326026916503906
    5. '`' → logprob: -13.451026916503906
    6. ' Z' → logprob: -14.201026916503906
    7. '	Z' → logprob: -14.576026916503906
    8. '>Z' → logprob: -14.826026916503906
    9. ' '' → logprob: -14.951026916503906
    10. '_Z' → logprob: -15.076026916503906

Token 1246: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.023649439215660095
    2. '):
' → logprob: -3.7736494541168213
    3. ''):' → logprob: -8.023649215698242
    4. ''' → logprob: -10.398649215698242
    5. '')' → logprob: -11.148649215698242
    6. '):' → logprob: -11.273649215698242
    7. ')' → logprob: -11.773649215698242
    8. ''):
' → logprob: -12.648649215698242
    9. '           ' → logprob: -13.273649215698242
    10. '':
' → logprob: -13.398649215698242

Token 1247: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010590855963528156
    2. '           ' → logprob: -5.01059103012085
    3. '               ' → logprob: -6.26059103012085
    4. ':
' → logprob: -6.51059103012085
    5. '                       ' → logprob: -8.635590553283691
    6. ':' → logprob: -9.385590553283691
    7. 'raise' → logprob: -9.760590553283691
    8. ' raise' → logprob: -9.885590553283691
    9. '):
' → logprob: -10.760590553283691
    10. '                    ' → logprob: -10.760590553283691

Token 1248: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.004815172869712114
    2. ' raise' → logprob: -5.629815101623535
    3. '                   ' → logprob: -6.879815101623535
    4. '	raise' → logprob: -8.754815101623535
    5. '                       ' → logprob: -11.504815101623535
    6. 'Raise' → logprob: -11.629815101623535
    7. '   ' → logprob: -12.379815101623535
    8. '
' → logprob: -13.754815101623535
    9. '```' → logprob: -14.004815101623535
    10. 'raises' → logprob: -14.129815101623535

Token 1249: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -6.511406809295295e-06
    2. ' Value' → logprob: -12.000006675720215
    3. '
' → logprob: -16.2500057220459
    4. '	Value' → logprob: -16.3750057220459
    5. '_value' → logprob: -17.1250057220459
    6. 'value' → logprob: -17.8750057220459
    7. '_Value' → logprob: -18.0000057220459
    8. '.Value' → logprob: -19.2500057220459
    9. '<Value' → logprob: -19.5000057220459
    10. '   ' → logprob: -19.8750057220459

Token 1250: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.014191711321473122
    2. 'Value' → logprob: -4.264191627502441
    3. 'alue' → logprob: -11.139191627502441
    4. 'rror' → logprob: -11.264191627502441
    5. '   ' → logprob: -15.514191627502441
    6. '(Value' → logprob: -15.514191627502441
    7. '```' → logprob: -16.889192581176758
    8. '("' → logprob: -16.889192581176758
    9. '       ' → logprob: -17.139192581176758
    10. '
' → logprob: -17.264192581176758

Token 1251: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.002531310310587287
    2. '("' → logprob: -6.0025315284729
    3. '(' → logprob: -10.127531051635742
    4. '(
' → logprob: -11.502531051635742
    5. 'f' → logprob: -12.127531051635742
    6. '           ' → logprob: -16.502531051635742
    7. '('' → logprob: -17.502531051635742
    8. '("'' → logprob: -17.752531051635742
    9. '(F' → logprob: -18.377531051635742
    10. '       ' → logprob: -18.752531051635742

Token 1252: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06233411654829979
    2. ' f' → logprob: -2.8123340606689453
    3. '"' → logprob: -8.687334060668945
    4. '           ' → logprob: -9.062334060668945
    5. '(f' → logprob: -9.937334060668945
    6. '               ' → logprob: -11.562334060668945
    7. '   ' → logprob: -11.812334060668945
    8. '       ' → logprob: -11.812334060668945
    9. '
' → logprob: -12.312334060668945
    10. 'Unexpected' → logprob: -13.562334060668945

Token 1253: 'Expected' (ID: 28041)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.38650673627853394
    2. 'Expected' → logprob: -1.3865067958831787
    3. 'Unexpected' → logprob: -3.3865067958831787
    4. 'Invalid' → logprob: -3.5115067958831787
    5. ' f' → logprob: -5.3865065574646
    6. '"' → logprob: -6.2615065574646
    7. ' Expected' → logprob: -9.011507034301758
    8. 'Found' → logprob: -9.261507034301758
    9. '           ' → logprob: -10.011507034301758
    10. 'F' → logprob: -10.511507034301758

Token 1254: ' uppercase' (ID: 79050)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.5760706067085266
    2. 'char' → logprob: -1.2010705471038818
    3. ''' → logprob: -2.951070547103882
    4. 'uppercase' → logprob: -4.076070785522461
    5. 'A' → logprob: -4.326070785522461
    6. 'a' → logprob: -4.451070785522461
    7. '"A' → logprob: -4.826070785522461
    8. 'literal' → logprob: -5.201070785522461
    9. 'letter' → logprob: -5.326070785522461
    10. 'an' → logprob: -5.576070785522461

Token 1255: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.11714793741703033
    2. ' letter' → logprob: -2.617147922515869
    3. 'char' → logprob: -3.492147922515869
    4. 'A' → logprob: -5.867147922515869
    5. 'character' → logprob: -5.867147922515869
    6. ' character' → logprob: -7.367147922515869
    7. ' char' → logprob: -7.992147922515869
    8. 'Letter' → logprob: -8.992148399353027
    9. ' A' → logprob: -9.242148399353027
    10. ')' → logprob: -10.242148399353027

Token 1256: ' after' (ID: 1934)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.033021230250597
    2. ' after' → logprob: -4.533021450042725
    3. ' for' → logprob: -4.658021450042725
    4. 'but' → logprob: -4.908021450042725
    5. ',' → logprob: -5.908021450042725
    6. 'for' → logprob: -7.533021450042725
    7. ' at' → logprob: -7.533021450042725
    8. ' found' → logprob: -8.783020973205566
    9. 'after' → logprob: -8.783020973205566
    10. ' got' → logprob: -8.783020973205566

Token 1257: ' repetition' (ID: 100556)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.009992283768951893
    2. 'digits' → logprob: -4.8849921226501465
    3. 'digit' → logprob: -6.6349921226501465
    4. ' count' → logprob: -8.134992599487305
    5. 'str' → logprob: -8.384992599487305
    6. 'number' → logprob: -8.884992599487305
    7. 'isdigit' → logprob: -10.009992599487305
    8. '")' → logprob: -10.134992599487305
    9. '
' → logprob: -10.259992599487305
    10. ')' → logprob: -10.259992599487305

Token 1258: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.19739015400409698
    2. ' count' → logprob: -1.8223901987075806
    3. 'digit' → logprob: -4.072390079498291
    4. ' digit' → logprob: -7.947390079498291
    5. 'number' → logprob: -10.57239055633545
    6. 'digits' → logprob: -10.82239055633545
    7. ' ' → logprob: -11.19739055633545
    8. ' but' → logprob: -11.32239055633545
    9. '
' → logprob: -11.69739055633545
    10. ' number' → logprob: -12.19739055633545

Token 1259: ' at' (ID: 540)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.01648801565170288
    2. ',' → logprob: -4.641488075256348
    3. 'but' → logprob: -5.016488075256348
    4. ' at' → logprob: -9.891488075256348
    5. ' after' → logprob: -12.016488075256348
    6. ' for' → logprob: -12.141488075256348
    7. '{' → logprob: -12.391488075256348
    8. ' found' → logprob: -12.641488075256348
    9. ',but' → logprob: -12.891488075256348
    10. ' got' → logprob: -13.141488075256348

Token 1260: ' position' (ID: 4010)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08253803104162216
    2. 'position' → logprob: -2.83253812789917
    3. ' self' → logprob: -4.20753812789917
    4. ' position' → logprob: -5.95753812789917
    5. 'pos' → logprob: -5.95753812789917
    6. 'index' → logprob: -9.832537651062012
    7. '
' → logprob: -9.832537651062012
    8. '{' → logprob: -9.832537651062012
    9. '{
' → logprob: -10.582537651062012
    10. 'line' → logprob: -10.707537651062012

Token 1261: ' {' (ID: 354)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06337220221757889
    2. '{' → logprob: -3.1883721351623535
    3. ' self' → logprob: -3.9383721351623535
    4. ' {' → logprob: -7.5633721351623535
    5. 'f' → logprob: -10.063372611999512
    6. '               ' → logprob: -10.313372611999512
    7. '                   ' → logprob: -10.438372611999512
    8. '(self' → logprob: -10.688372611999512
    9. '{
' → logprob: -11.188372611999512
    10. ' f' → logprob: -11.813372611999512

Token 1262: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.045823566731997e-05
    2. ' self' → logprob: -10.875020027160645
    3. '
' → logprob: -13.750020027160645
    4. '{' → logprob: -17.00002098083496
    5. '                   ' → logprob: -17.00002098083496
    6. '(self' → logprob: -17.00002098083496
    7. '$self' → logprob: -17.00002098083496
    8. '               ' → logprob: -17.25002098083496
    9. '   ' → logprob: -17.37502098083496
    10. '	self' → logprob: -17.50002098083496

Token 1263: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00019102399528492242
    2. '_pos' → logprob: -8.750190734863281
    3. '_' → logprob: -11.125190734863281
    4. '.' → logprob: -12.250190734863281
    5. '.pos' → logprob: -12.250190734863281
    6. '
' → logprob: -13.000190734863281
    7. ']._' → logprob: -13.375190734863281
    8. 'pos' → logprob: -14.125190734863281
    9. ')._' → logprob: -14.250190734863281
    10. ' .' → logprob: -14.625190734863281

Token 1264: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0008188001229427755
    2. '_pos' → logprob: -7.125818729400635
    3. ' pos' → logprob: -12.750819206237793
    4. '	pos' → logprob: -13.375819206237793
    5. '.pos' → logprob: -13.500819206237793
    6. '
' → logprob: -13.750819206237793
    7. 'position' → logprob: -14.000819206237793
    8. '```' → logprob: -14.250819206237793
    9. 'consume' → logprob: -14.500819206237793
    10. '_data' → logprob: -14.625819206237793

Token 1265: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2523036599159241
    2. ' -' → logprob: -1.7523036003112793
    3. ',' → logprob: -3.7523036003112793
    4. ' but' → logprob: -4.502303600311279
    5. ')' → logprob: -5.502303600311279
    6. '")
' → logprob: -6.252303600311279
    7. ')")
' → logprob: -6.252303600311279
    8. '}")
' → logprob: -6.877303600311279
    9. '               ' → logprob: -7.127303600311279
    10. '")' → logprob: -7.252303600311279

Token 1266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037371189682744443
    2. ' ' → logprob: -9.125373840332031
    3. '0' → logprob: -9.250373840332031
    4. 'self' → logprob: -9.625373840332031
    5. '
' → logprob: -9.875373840332031
    6. 'char' → logprob: -10.875373840332031
    7. ')' → logprob: -11.625373840332031
    8. '```' → logprob: -12.125373840332031
    9. '               ' → logprob: -13.000373840332031
    10. '-' → logprob: -13.000373840332031

Token 1267: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.4205038547515869
    2. ' but' → logprob: -1.920503854751587
    3. ',' → logprob: -2.420503854751587
    4. '")
' → logprob: -2.420503854751587
    5. ')' → logprob: -5.670503616333008
    6. '}")
' → logprob: -5.795503616333008
    7. ')")
' → logprob: -5.795503616333008
    8. '}")' → logprob: -5.795503616333008
    9. '               ' → logprob: -6.045503616333008
    10. '}' → logprob: -7.295503616333008

Token 1268: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0069776177406311035
    2. 'return' → logprob: -5.256977558135986
    3. '           ' → logprob: -6.381977558135986
    4. '                   ' → logprob: -10.506978034973145
    5. '       ' → logprob: -11.756978034973145
    6. '
' → logprob: -11.756978034973145
    7. ' return' → logprob: -12.131978034973145
    8. '                
' → logprob: -14.506978034973145
    9. '              ' → logprob: -15.006978034973145
    10. '   ' → logprob: -15.006978034973145

Token 1269: ' inner' (ID: 12694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00017314712749794126
    2. '               ' → logprob: -9.125173568725586
    3. ' return' → logprob: -9.750173568725586
    4. '
' → logprob: -12.875173568725586
    5. 'literal' → logprob: -13.250173568725586
    6. '           ' → logprob: -14.250173568725586
    7. 'component' → logprob: -15.125173568725586
    8. '                
' → logprob: -16.000173568725586
    9. 'self' → logprob: -16.000173568725586
    10. '                   ' → logprob: -16.125173568725586

Token 1270: '_component' (ID: 53516)
  Prédit: '_component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_component' → logprob: -0.03284705802798271
    2. '_literal' → logprob: -3.9078471660614014
    3. '_char' → logprob: -4.532846927642822
    4. 'component' → logprob: -7.407846927642822
    5. '_comp' → logprob: -7.907846927642822
    6. '=' → logprob: -8.65784740447998
    7. ' =' → logprob: -8.90784740447998
    8. '_character' → logprob: -9.28284740447998
    9. 'char' → logprob: -10.65784740447998
    10. 'Component' → logprob: -10.90784740447998

Token 1271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019288709154352546
    2. ' =' → logprob: -6.251928806304932
    3. '=
' → logprob: -15.25192928314209
    4. '＝' → logprob: -19.751928329467773
    5. '=

' → logprob: -20.376928329467773
    6. ' ' → logprob: -21.001928329467773
    7. ' =
' → logprob: -21.376928329467773
    8. ':' → logprob: -21.501928329467773
    9. '=None' → logprob: -21.501928329467773
    10. '=}' → logprob: -21.626928329467773

Token 1272: ' Literal' (ID: 100414)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -7.493430894101039e-05
    2. ' Literal' → logprob: -9.500075340270996
    3. 'Liter' → logprob: -17.25007438659668
    4. 'Lit' → logprob: -19.87507438659668
    5. '   ' → logprob: -20.50007438659668
    6. '_literal' → logprob: -21.00007438659668
    7. 'L' → logprob: -21.37507438659668
    8. ' literal' → logprob: -21.87507438659668
    9. 'literal' → logprob: -22.25007438659668
    10. '_LITERAL' → logprob: -22.25007438659668

Token 1273: '(char' (ID: 14823)
  Prédit: '(char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.00222210306674242
    2. 'char' → logprob: -6.377222061157227
    3. '(
' → logprob: -8.002222061157227
    4. '(' → logprob: -8.627222061157227
    5. '<char' → logprob: -13.502222061157227
    6. ' (' → logprob: -13.752222061157227
    7. ' char' → logprob: -13.877222061157227
    8. ',char' → logprob: -14.627222061157227
    9. '(chr' → logprob: -14.752222061157227
    10. '((' → logprob: -15.127222061157227

Token 1274: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02325526252388954
    2. ')
' → logprob: -3.7732553482055664
    3. '       ' → logprob: -12.148255348205566
    4. ')
' → logprob: -13.898255348205566
    5. ' )' → logprob: -13.898255348205566
    6. '           ' → logprob: -14.148255348205566
    7. '               ' → logprob: -14.648255348205566
    8. ')

' → logprob: -14.773255348205566
    9. '[' → logprob: -15.523255348205566
    10. '   ' → logprob: -15.773255348205566

Token 1275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011886686086654663
    2. '           ' → logprob: -4.7618865966796875
    3. 'return' → logprob: -5.7618865966796875
    4. ' return' → logprob: -9.636886596679688
    5. '                
' → logprob: -11.136886596679688
    6. '
' → logprob: -11.761886596679688
    7. '       ' → logprob: -12.011886596679688
    8. '                   ' → logprob: -12.011886596679688
    9. '            
' → logprob: -12.886886596679688
    10. '	           ' → logprob: -13.261886596679688

Token 1276: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014442957937717438
    2. '               ' → logprob: -4.2644429206848145
    3. ' return' → logprob: -8.264443397521973
    4. '           ' → logprob: -11.264443397521973
    5. '
' → logprob: -12.014443397521973
    6. '                   ' → logprob: -13.514443397521973
    7. '       ' → logprob: -15.014443397521973
    8. '	return' → logprob: -15.139443397521973
    9. '                
' → logprob: -15.264443397521973
    10. '              ' → logprob: -15.514443397521973

Token 1277: ' Re' (ID: 907)
  Prédit: 'Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -2.7610454708337784e-05
    2. ' Re' → logprob: -10.500027656555176
    3. 'Repe' → logprob: -19.37502670288086
    4. '_Re' → logprob: -19.62502670288086
    5. '   ' → logprob: -20.00002670288086
    6. 'Repeated' → logprob: -20.62502670288086
    7. '(Re' → logprob: -21.00002670288086
    8. 'Rep' → logprob: -21.50002670288086
    9. '
' → logprob: -21.50002670288086
    10. ' ' → logprob: -21.50002670288086

Token 1278: 'petition' (ID: 134449)
  Prédit: 'petition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'petition' → logprob: -0.0016711341449990869
    2. 'pet' → logprob: -6.876671314239502
    3. 'p' → logprob: -7.501671314239502
    4. 'Pet' → logprob: -10.126670837402344
    5. 'pt' → logprob: -10.251670837402344
    6. 'Re' → logprob: -12.751670837402344
    7. 'ption' → logprob: -12.876670837402344
    8. 'peat' → logprob: -13.501670837402344
    9. 'pletion' → logprob: -13.876670837402344
    10. 'pit' → logprob: -14.251670837402344

Token 1279: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.00033415461075492203
    2. '(' → logprob: -8.500333786010742
    3. '(
' → logprob: -9.000333786010742
    4. 'count' → logprob: -11.875333786010742
    5. '[count' → logprob: -16.250333786010742
    6. ' (' → logprob: -16.375333786010742
    7. '<count' → logprob: -17.875333786010742
    8. ',count' → logprob: -18.000333786010742
    9. '=count' → logprob: -18.250333786010742
    10. ' count' → logprob: -18.375333786010742

Token 1280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.106736039626412e-05
    2. ',
' → logprob: -10.875031471252441
    3. ' ,' → logprob: -11.500031471252441
    4. '<|end|>' → logprob: -15.375031471252441
    5. '‌,' → logprob: -15.500031471252441
    6. ')' → logprob: -15.625031471252441
    7. ',

' → logprob: -16.000030517578125
    8. '```' → logprob: -16.000030517578125
    9. ',None' → logprob: -16.125030517578125
    10. '(inner' → logprob: -16.250030517578125

Token 1281: ' inner' (ID: 12694)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.000627610192168504
    2. ' inner' → logprob: -7.375627517700195
    3. '
' → logprob: -14.375627517700195
    4. 'inners' → logprob: -15.250627517700195
    5. '           ' → logprob: -16.875627517700195
    6. '(inner' → logprob: -17.000627517700195
    7. 'inn' → logprob: -17.625627517700195
    8. '_inner' → logprob: -17.750627517700195
    9. '               ' → logprob: -18.125627517700195
    10. ' 
' → logprob: -18.250627517700195

Token 1282: '_component' (ID: 53516)
  Prédit: '_component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_component' → logprob: -0.00019650737522169948
    2. 'component' → logprob: -8.62519645690918
    3. '_character' → logprob: -11.75019645690918
    4. 'Component' → logprob: -12.37519645690918
    5. '   ' → logprob: -14.12519645690918
    6. ')' → logprob: -14.25019645690918
    7. '_comp' → logprob: -14.25019645690918
    8. 'char' → logprob: -14.62519645690918
    9. 'inner' → logprob: -14.75019645690918
    10. '_char' → logprob: -15.12519645690918

Token 1283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031896889209747314
    2. ')
' → logprob: -3.5318968296051025
    3. '       ' → logprob: -6.156897068023682
    4. '           ' → logprob: -11.656896591186523
    5. ')return' → logprob: -12.281896591186523
    6. '   ' → logprob: -12.406896591186523
    7. ')

' → logprob: -12.656896591186523
    8. ' )' → logprob: -13.031896591186523
    9. '
' → logprob: -14.281896591186523
    10. ')
' → logprob: -14.531896591186523

Token 1284: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5423163175582886
    2. '<|end|>' → logprob: -1.0423163175582886
    3. '
' → logprob: -3.167316436767578
    4. '```' → logprob: -4.417316436767578
    5. '

' → logprob: -5.917316436767578
    6. '       ' → logprob: -5.917316436767578
    7. '<|end|>' → logprob: -6.667316436767578
    8. '    
' → logprob: -6.792316436767578
    9. 'def' → logprob: -7.042316436767578
    10. ')' → logprob: -7.792316436767578

Token 1285: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04119986668229103
    2. 'else' (adapté à ' else') → logprob: -3.7911999225616455
    3. 'elif' → logprob: -4.041199684143066
    4. '
' → logprob: -9.416199684143066
    5. '        
' → logprob: -9.666199684143066
    6. 'if' → logprob: -10.541199684143066
    7. '```' → logprob: -10.916199684143066
    8. ' else' → logprob: -11.166199684143066
    9. ' elif' → logprob: -12.291199684143066
    10. '   ' → logprob: -12.291199684143066

Token 1286: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7066793441772461
    2. '           ' → logprob: -1.456679344177246
    3. ' if' → logprob: -1.706679344177246
    4. 'if' → logprob: -2.831679344177246
    5. ':' → logprob: -4.081679344177246
    6. ':
' → logprob: -4.206679344177246
    7. '   ' → logprob: -7.706679344177246
    8. 'elif' → logprob: -7.956679344177246
    9. ',' → logprob: -9.331679344177246
    10. '        ' → logprob: -9.456679344177246

Token 1287: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.582530677318573
    2. 'if' → logprob: -0.832530677318573
    3. '           ' → logprob: -5.582530498504639
    4. ' if' → logprob: -6.207530498504639
    5. '#' → logprob: -7.832530498504639
    6. 'elif' → logprob: -8.957530975341797
    7. '```' → logprob: -9.082530975341797
    8. 'return' → logprob: -9.457530975341797
    9. '   ' → logprob: -11.207530975341797
    10. '        
' → logprob: -11.457530975341797

Token 1288: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3263159990310669
    2. 'start' → logprob: -2.4513158798217773
    3. '#' (adapté à ' #') → logprob: -2.7013158798217773
    4. 'return' → logprob: -3.2013158798217773
    5. 'letters' → logprob: -3.3263158798217773
    6. 'seq' → logprob: -3.7013158798217773
    7. 'sequence' → logprob: -3.9513158798217773
    8. '           ' → logprob: -6.076315879821777
    9. 'literal' → logprob: -6.451315879821777
    10. '       ' → logprob: -8.576315879821777

Token 1289: ' Parse' (ID: 26701)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.57314532995224
    2. 'return' → logprob: -1.8231453895568848
    3. 'start' → logprob: -2.4481453895568848
    4. '#' → logprob: -2.6981453895568848
    5. 'sequence' → logprob: -2.9481453895568848
    6. 'seq' → logprob: -3.0731453895568848
    7. 'letters' → logprob: -4.073145389556885
    8. 'literal' → logprob: -5.698145389556885
    9. 'self' → logprob: -7.198145389556885
    10. 'result' → logprob: -8.323144912719727

Token 1290: ' a' (ID: 261)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.6008408665657043
    2. 'sequence' → logprob: -1.2258408069610596
    3. 'letters' → logprob: -2.1008408069610596
    4. 'start' → logprob: -4.350841045379639
    5. 'self' → logprob: -4.975841045379639
    6. 'seq' → logprob: -5.100841045379639
    7. 'letter' → logprob: -5.600841045379639
    8. ' literal' → logprob: -6.100841045379639
    9. '#' → logprob: -6.725841045379639
    10. ' letters' → logprob: -7.100841045379639

Token 1291: ' literal' (ID: 41271)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.31927815079689026
    2. 'sequence' → logprob: -1.3192781209945679
    3. '_literal' → logprob: -5.444278240203857
    4. ' literal' → logprob: -6.944278240203857
    5. 'letter' → logprob: -8.1942777633667
    6. 'Literal' → logprob: -9.4442777633667
    7. 'def' → logprob: -9.5692777633667
    8. 'run' → logprob: -9.8192777633667
    9. ' sequence' → logprob: -10.1942777633667
    10. 'letters' → logprob: -10.3192777633667

Token 1292: ' sequence' (ID: 16281)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.023586567491292953
    2. 'sequence' → logprob: -4.148586750030518
    3. 'seq' → logprob: -5.273586750030518
    4. '       ' → logprob: -6.648586750030518
    5. 'letters' → logprob: -8.52358627319336
    6. 'literal' → logprob: -8.64858627319336
    7. '           ' → logprob: -8.89858627319336
    8. 'return' → logprob: -8.89858627319336
    9. 'end' → logprob: -9.27358627319336
    10. 'result' → logprob: -9.52358627319336

Token 1293: ' until' (ID: 4609)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0933535173535347
    2. '       ' → logprob: -2.593353509902954
    3. '           ' → logprob: -4.343353748321533
    4. 'seq' → logprob: -7.468353748321533
    5. 'sequence' → logprob: -8.218353271484375
    6. ' start' → logprob: -8.843353271484375
    7. '_start' → logprob: -9.218353271484375
    8. 'literal' → logprob: -9.718353271484375
    9. '```' → logprob: -10.218353271484375
    10. 'letters' → logprob: -10.718353271484375

Token 1294: ' digit' (ID: 19181)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.010825909674167633
    2. ' not' → logprob: -5.135826110839844
    3. 'self' → logprob: -5.385826110839844
    4. '(not' → logprob: -8.760826110839844
    5. 'curr' → logprob: -9.385826110839844
    6. 'True' → logprob: -10.510826110839844
    7. ' self' → logprob: -11.135826110839844
    8. '(self' → logprob: -12.135826110839844
    9. '_not' → logprob: -12.635826110839844
    10. 'False' → logprob: -12.885826110839844

Token 1295: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08083311468362808
    2. 'or' → logprob: -2.5808331966400146
    3. '           ' → logprob: -7.4558329582214355
    4. 'if' → logprob: -7.4558329582214355
    5. ' if' → logprob: -8.705833435058594
    6. 'while' → logprob: -8.955833435058594
    7. ',' → logprob: -9.080833435058594
    8. ' and' → logprob: -9.830833435058594
    9. '_or' → logprob: -10.330833435058594
    10. '               ' → logprob: -10.580833435058594

Token 1296: ' '('' (ID: 87284)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30320265889167786
    2. ''' → logprob: -1.4282026290893555
    3. ' (' → logprob: -4.5532026290893555
    4. ' '('' → logprob: -5.3032026290893555
    5. '('' → logprob: -5.5532026290893555
    6. 'paren' → logprob: -7.1782026290893555
    7. '(
' → logprob: -7.3032026290893555
    8. 'parent' → logprob: -8.053202629089355
    9. '("("' → logprob: -9.178202629089355
    10. ''(' → logprob: -9.428202629089355

Token 1297: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.29311689734458923
    2. 'or' → logprob: -1.9181169271469116
    3. '           ' → logprob: -3.418116807937622
    4. ' and' → logprob: -3.668116807937622
    5. 'while' → logprob: -3.668116807937622
    6. 'if' → logprob: -4.918117046356201
    7. ' while' → logprob: -5.293117046356201
    8. 'and' → logprob: -5.418117046356201
    9. ' if' → logprob: -5.918117046356201
    10. ',' → logprob: -6.543117046356201

Token 1298: ' ')'' (ID: 198756)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.12696266174316406
    2. ')' → logprob: -2.126962661743164
    3. ' ')'' → logprob: -10.876962661743164
    4. ')`' → logprob: -12.501962661743164
    5. '`)' → logprob: -12.626962661743164
    6. '")' → logprob: -13.126962661743164
    7. ')'' → logprob: -14.126962661743164
    8. ''' → logprob: -14.376962661743164
    9. ')")' → logprob: -14.376962661743164
    10. ')
' → logprob: -14.501962661743164

Token 1299: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20318841934204102
    2. 'while' → logprob: -2.453188419342041
    3. ' or' → logprob: -3.078188419342041
    4. '       ' → logprob: -4.203188419342041
    5. '{
' → logprob: -4.828188419342041
    6. ',' → logprob: -5.328188419342041
    7. ' while' → logprob: -5.453188419342041
    8. 'sequence' → logprob: -5.578188419342041
    9. 'or' → logprob: -5.828188419342041
    10. '               ' → logprob: -6.328188419342041

Token 1300: ' end' (ID: 1268)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32935911417007446
    2. '')' → logprob: -1.5793590545654297
    3. 'None' → logprob: -3.2043590545654297
    4. '):' → logprob: -4.82935905456543
    5. 'space' → logprob: -5.07935905456543
    6. ''' → logprob: -5.95435905456543
    7. 'wh' → logprob: -5.95435905456543
    8. 'digit' → logprob: -6.07935905456543
    9. 'other' → logprob: -6.45435905456543
    10. 'end' → logprob: -6.70435905456543

Token 1301: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.44513270258903503
    2. '           ' → logprob: -1.1951327323913574
    3. '{
' → logprob: -4.445132732391357
    4. 'start' → logprob: -4.445132732391357
    5. '```' → logprob: -5.070132732391357
    6. 's' → logprob: -5.695132732391357
    7. '               ' → logprob: -5.820132732391357
    8. '=' → logprob: -5.945132732391357
    9. 'c' → logprob: -5.945132732391357
    10. '       ' → logprob: -6.070132732391357

Token 1302: '           ' (ID: 352)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.029586056247353554
    2. '       ' → logprob: -4.029585838317871
    3. 'seq' → logprob: -4.904585838317871
    4. 'sequence' → logprob: -5.904585838317871
    5. '           ' → logprob: -7.404585838317871
    6. 'literal' → logprob: -8.154585838317871
    7. 'result' → logprob: -9.529585838317871
    8. 'end' → logprob: -10.029585838317871
    9. '_start' → logprob: -10.529585838317871
    10. 'chars' → logprob: -10.654585838317871

Token 1303: ' literal' (ID: 41271)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.022884000092744827
    2. 'seq' → logprob: -4.022883892059326
    3. 'literal' (adapté à ' literal') → logprob: -5.772883892059326
    4. 'sequence' → logprob: -6.522883892059326
    5. 'letters' → logprob: -9.397884368896484
    6. 'lit' → logprob: -10.772884368896484
    7. 'result' → logprob: -10.772884368896484
    8. 'chars' → logprob: -11.647884368896484
    9. 'end' → logprob: -12.522884368896484
    10. ' start' → logprob: -13.147884368896484

Token 1304: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.4308597445487976
    2. '_start' → logprob: -1.4308598041534424
    3. '_seq' → logprob: -2.6808598041534424
    4. '_sequence' → logprob: -3.8058598041534424
    5. 'start' → logprob: -4.555859565734863
    6. 'chars' → logprob: -5.430859565734863
    7. 'sequence' → logprob: -6.055859565734863
    8. ' =' → logprob: -6.805859565734863
    9. '=' → logprob: -7.555859565734863
    10. 'seq' → logprob: -7.805859565734863

Token 1305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17693839967250824
    2. ' =' → logprob: -1.9269384145736694
    3. '=[]' → logprob: -4.426938533782959
    4. '=[]
' → logprob: -6.176938533782959
    5. '=""' → logprob: -6.676938533782959
    6. '           ' → logprob: -7.551938533782959
    7. '=''' → logprob: -7.551938533782959
    8. '=""
' → logprob: -9.3019380569458
    9. '       ' → logprob: -10.5519380569458
    10. '=''
' → logprob: -10.6769380569458

Token 1306: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3133391737937927
    2. '[]
' → logprob: -1.3133392333984375
    3. '""' → logprob: -10.188339233398438
    4. '"' → logprob: -11.188339233398438
    5. '[]

' → logprob: -11.438339233398438
    6. '[]"' → logprob: -11.688339233398438
    7. '''' → logprob: -12.563339233398438
    8. '''
' → logprob: -13.438339233398438
    9. ' []' → logprob: -14.313339233398438
    10. '[' → logprob: -14.313339233398438

Token 1307: '           ' (ID: 352)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.018384741619229317
    2. '       ' → logprob: -4.01838493347168
    3. ' while' → logprob: -9.01838493347168
    4. '           ' → logprob: -9.39338493347168
    5. '	while' → logprob: -10.51838493347168
    6. 'While' → logprob: -13.01838493347168
    7. '```' → logprob: -14.51838493347168
    8. '   ' → logprob: -14.64338493347168
    9. '        
' → logprob: -16.51838493347168
    10. '               ' → logprob: -16.76838493347168

Token 1308: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.3856492842023727e-06
    2. ' while' → logprob: -14.000000953674316
    3. '           ' → logprob: -14.750000953674316
    4. 'While' → logprob: -16.625001907348633
    5. '	while' → logprob: -18.625001907348633
    6. '       ' → logprob: -18.750001907348633
    7. '```' → logprob: -21.500001907348633
    8. '            
' → logprob: -21.500001907348633
    9. '
' → logprob: -21.750001907348633
    10. 'wh' → logprob: -23.250001907348633

Token 1309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0035320096649229527
    2. 'True' → logprob: -6.0035319328308105
    3. '(self' → logprob: -7.3785319328308105
    4. ' self' → logprob: -9.128532409667969
    5. '           ' → logprob: -9.753532409667969
    6. '(True' → logprob: -9.753532409667969
    7. 'curr' → logprob: -9.878532409667969
    8. '   ' → logprob: -10.003532409667969
    9. '(' → logprob: -10.253532409667969
    10. '       ' → logprob: -10.753532409667969

Token 1310: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.38692528009414673
    2. '_pos' → logprob: -1.136925220489502
    3. '.pos' → logprob: -10.51192569732666
    4. 'pos' → logprob: -11.26192569732666
    5. 'self' → logprob: -12.01192569732666
    6. ' _' → logprob: -13.63692569732666
    7. '_self' → logprob: -13.63692569732666
    8. '.' → logprob: -14.01192569732666
    9. '
' → logprob: -14.01192569732666
    10. '   ' → logprob: -14.51192569732666

Token 1311: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.002236139727756381
    2. '_pos' → logprob: -6.127236366271973
    3. 'peek' → logprob: -10.252236366271973
    4. '_data' → logprob: -11.877236366271973
    5. 'data' → logprob: -12.627236366271973
    6. '.pos' → logprob: -13.127236366271973
    7. 'length' → logprob: -13.877236366271973
    8. '
' → logprob: -14.877236366271973
    9. ' pos' → logprob: -14.877236366271973
    10. '	pos' → logprob: -15.502236366271973

Token 1312: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7023666501045227
    2. ' <' → logprob: -0.7023666501045227
    3. '<len' → logprob: -4.702366828918457
    4. '<n' → logprob: -9.952366828918457
    5. '<size' → logprob: -11.327366828918457
    6. '<data' → logprob: -11.952366828918457
    7. '<s' → logprob: -12.452366828918457
    8. '<const' → logprob: -12.452366828918457
    9. '<char' → logprob: -12.577366828918457
    10. '<this' → logprob: -12.577366828918457

Token 1313: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008110555354505777
    2. ' self' → logprob: -7.1258111000061035
    3. '           ' → logprob: -12.625810623168945
    4. '
' → logprob: -13.125810623168945
    5. 'len' → logprob: -15.000810623168945
    6. '(self' → logprob: -15.625810623168945
    7. ' ' → logprob: -15.875810623168945
    8. '_self' → logprob: -16.000810623168945
    9. '=self' → logprob: -16.125810623168945
    10. 'the' → logprob: -16.125810623168945

Token 1314: '._' (ID: 2697)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0014923651469871402
    2. '._' → logprob: -6.876492500305176
    3. 'self' → logprob: -7.876492500305176
    4. 'length' → logprob: -10.251492500305176
    5. ' _' → logprob: -11.251492500305176
    6. '_len' → logprob: -11.251492500305176
    7. '_self' → logprob: -12.126492500305176
    8. '   ' → logprob: -13.376492500305176
    9. '_code' → logprob: -13.501492500305176
    10. '
' → logprob: -13.751492500305176

Token 1315: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -3.03521392197581e-05
    2. '_length' → logprob: -10.500030517578125
    3. ' length' → logprob: -14.375030517578125
    4. 'len' → logprob: -15.125030517578125
    5. 'l' → logprob: -15.375030517578125
    6. 'data' → logprob: -15.625030517578125
    7. 'position' → logprob: -15.875030517578125
    8. 'leng' → logprob: -15.875030517578125
    9. 'pos' → logprob: -16.000030517578125
    10. 'ength' → logprob: -16.000030517578125

Token 1316: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.0890050157904625
    2. ' and' → logprob: -2.4640049934387207
    3. '           ' → logprob: -9.839005470275879
    4. ':
' → logprob: -12.464005470275879
    5. '               ' → logprob: -12.839005470275879
    6. '          ' → logprob: -13.214005470275879
    7. ',' → logprob: -14.214005470275879
    8. '       ' → logprob: -14.339005470275879
    9. '   ' → logprob: -14.589005470275879
    10. '              ' → logprob: -14.714005470275879

Token 1317: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28738826513290405
    2. '           ' → logprob: -1.7873883247375488
    3. 'and' → logprob: -2.537388324737549
    4. '               ' → logprob: -5.787388324737549
    5. ',' → logprob: -10.28738784790039
    6. ' if' → logprob: -10.28738784790039
    7. '   ' → logprob: -10.28738784790039
    8. 'if' → logprob: -10.66238784790039
    9. '```' → logprob: -10.66238784790039
    10. '{
' → logprob: -10.78738784790039

Token 1318: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.16942645609378815
    2. 'c' → logprob: -1.919426441192627
    3. 'ch' → logprob: -4.794426441192627
    4. 'char' → logprob: -8.169426918029785
    5. ' curr' → logprob: -8.544426918029785
    6. 'current' → logprob: -8.669426918029785
    7. '               ' → logprob: -9.169426918029785
    8. 'cur' → logprob: -9.919426918029785
    9. '                   ' → logprob: -10.544426918029785
    10. 'next' → logprob: -11.419426918029785

Token 1319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07025707513093948
    2. ' =' → logprob: -2.6952571868896484
    3. '=c' → logprob: -9.320257186889648
    4. 'c' → logprob: -9.570257186889648
    5. 'char' → logprob: -10.070257186889648
    6. '=
' → logprob: -10.445257186889648
    7. '_char' → logprob: -10.570257186889648
    8. 'curr' → logprob: -11.320257186889648
    9. '=self' → logprob: -11.695257186889648
    10. '_=' → logprob: -11.695257186889648

Token 1320: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003361774142831564
    2. ' self' → logprob: -8.000336647033691
    3. '           ' → logprob: -15.000336647033691
    4. '
' → logprob: -15.250336647033691
    5. '(self' → logprob: -16.000335693359375
    6. '       ' → logprob: -17.500335693359375
    7. '   ' → logprob: -17.500335693359375
    8. '         ' → logprob: -18.125335693359375
    9. ' ' → logprob: -18.500335693359375
    10. '               ' → logprob: -19.000335693359375

Token 1321: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.045823566731997e-05
    2. '.' → logprob: -11.500020027160645
    3. '_pe' → logprob: -12.375020027160645
    4. '
' → logprob: -13.500020027160645
    5. '.peek' → logprob: -13.750020027160645
    6. '_data' → logprob: -13.875020027160645
    7. '   ' → logprob: -14.250020027160645
    8. '.__' → logprob: -15.125020027160645
    9. '.
' → logprob: -15.125020027160645
    10. ' .' → logprob: -15.500020027160645

Token 1322: 'peek' (ID: 163275)
  Prédit: 'peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.24065330624580383
    2. '_pe' → logprob: -1.6156532764434814
    3. 'data' → logprob: -4.2406535148620605
    4. '_data' → logprob: -8.240653038024902
    5. '.peek' → logprob: -8.490653038024902
    6. '_parse' → logprob: -9.865653038024902
    7. '_peak' → logprob: -9.865653038024902
    8. '
' → logprob: -10.115653038024902
    9. ' peek' → logprob: -10.615653038024902
    10. 'Peek' → logprob: -10.615653038024902

Token 1323: '()
' (ID: 1234)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6762304306030273
    2. 'and' → logprob: -0.8012304306030273
    3. '               ' → logprob: -4.051230430603027
    4. ' not' → logprob: -4.176230430603027
    5. 'not' → logprob: -6.176230430603027
    6. ' is' → logprob: -6.426230430603027
    7. '()' → logprob: -7.051230430603027
    8. ',' → logprob: -7.051230430603027
    9. ' in' → logprob: -7.176230430603027
    10. '()
' → logprob: -7.301230430603027

Token 1324: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003005869686603546
    2. '           ' → logprob: -6.5030059814453125
    3. ' and' → logprob: -7.3780059814453125
    4. '<|end|>' → logprob: -7.7530059814453125
    5. 'and' → logprob: -8.378005981445312
    6. ' if' → logprob: -9.503005981445312
    7. 'if' → logprob: -10.128005981445312
    8. '              ' → logprob: -10.878005981445312
    9. ',' → logprob: -11.128005981445312
    10. '<|end|>' → logprob: -11.378005981445312

Token 1325: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018373167142271996
    2. ' if' → logprob: -4.768373012542725
    3. '               ' → logprob: -4.768373012542725
    4. 'and' → logprob: -6.768373012542725
    5. ' and' → logprob: -10.018373489379883
    6. 'not' → logprob: -11.393373489379883
    7. 'is' → logprob: -13.268373489379883
    8. '                
' → logprob: -13.393373489379883
    9. '                   ' → logprob: -13.643373489379883
    10. 'If' → logprob: -13.768373489379883

Token 1326: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.006262104492634535
    2. 'not' → logprob: -5.256262302398682
    3. ' curr' → logprob: -7.631262302398682
    4. '(curr' → logprob: -8.131261825561523
    5. ' not' → logprob: -8.381261825561523
    6. '                   ' → logprob: -12.256261825561523
    7. '(not' → logprob: -12.881261825561523
    8. 'None' → logprob: -12.881261825561523
    9. '[curr' → logprob: -13.006261825561523
    10. '               ' → logprob: -13.506261825561523

Token 1327: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09381208568811417
    2. ' not' → logprob: -2.7188119888305664
    3. ' in' → logprob: -4.468811988830566
    4. 'is' → logprob: -4.718811988830566
    5. ' and' → logprob: -6.843811988830566
    6. 'not' → logprob: -7.093811988830566
    7. 'in' → logprob: -7.468811988830566
    8. '.is' → logprob: -8.593811988830566
    9. 'isdigit' → logprob: -8.593811988830566
    10. 'and' → logprob: -8.968811988830566

Token 1328: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011212162673473358
    2. ' None' → logprob: -4.511212348937988
    3. 'not' → logprob: -9.511212348937988
    4. 'digit' → logprob: -9.511212348937988
    5. ' not' → logprob: -12.011212348937988
    6. '(None' → logprob: -12.511212348937988
    7. '   ' → logprob: -13.261212348937988
    8. '=None' → logprob: -13.636212348937988
    9. 'Not' → logprob: -13.886212348937988
    10. 'none' → logprob: -14.136212348937988

Token 1329: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.016569865867495537
    2. 'or' → logprob: -4.141570091247559
    3. '                   ' → logprob: -8.141570091247559
    4. '               ' → logprob: -8.391570091247559
    5. '	or' → logprob: -12.516570091247559
    6. '                  ' → logprob: -13.141570091247559
    7. '           ' → logprob: -13.141570091247559
    8. ' and' → logprob: -13.266570091247559
    9. '                       ' → logprob: -13.641570091247559
    10. ')' → logprob: -14.141570091247559

Token 1330: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.22752465307712555
    2. 'not' → logprob: -1.6025246381759644
    3. '(curr' → logprob: -6.602524757385254
    4. '(not' → logprob: -7.477524757385254
    5. ' not' → logprob: -9.102524757385254
    6. ' curr' → logprob: -9.727524757385254
    7. 'Curr' → logprob: -13.102524757385254
    8. '[curr' → logprob: -13.102524757385254
    9. '	curr' → logprob: -13.102524757385254
    10. '(' → logprob: -13.227524757385254

Token 1331: '.is' (ID: 3109)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20171190798282623
    2. '.' → logprob: -2.076711893081665
    3. '.is' → logprob: -3.451711893081665
    4. 'in' → logprob: -4.201712131500244
    5. 'isdigit' → logprob: -5.076712131500244
    6. 'is' → logprob: -6.326712131500244
    7. ' is' → logprob: -6.576712131500244
    8. ' not' → logprob: -7.076712131500244
    9. ' .' → logprob: -9.076711654663086
    10. 'iss' → logprob: -9.576711654663086

Token 1332: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -6.511406809295295e-06
    2. 'alpha' → logprob: -12.250006675720215
    3. '_digit' → logprob: -14.875006675720215
    4. 'd' → logprob: -15.250006675720215
    5. 'upper' → logprob: -15.375006675720215
    6. 'isdigit' → logprob: -15.625006675720215
    7. 'Digit' → logprob: -16.0000057220459
    8. 'space' → logprob: -16.2500057220459
    9. 'decimal' → logprob: -16.3750057220459
    10. 'dig' → logprob: -16.5000057220459

Token 1333: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.438573680294212e-06
    2. ' or' → logprob: -12.500005722045898
    3. 'or' → logprob: -13.750005722045898
    4. ' ()' → logprob: -15.250005722045898
    5. '()==' → logprob: -15.625005722045898
    6. '()
' → logprob: -16.0000057220459
    7. '())' → logprob: -16.6250057220459
    8. ')' → logprob: -17.5000057220459
    9. '=' → logprob: -18.7500057220459
    10. '   ' → logprob: -19.2500057220459

Token 1334: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04309339448809624
    2. 'or' → logprob: -3.16809344291687
    3. '               ' → logprob: -10.04309368133545
    4. '                   ' → logprob: -10.79309368133545
    5. ')' → logprob: -12.29309368133545
    6. '	or' → logprob: -12.41809368133545
    7. '              ' → logprob: -12.79309368133545
    8. '                  ' → logprob: -12.91809368133545
    9. '                ' → logprob: -13.04309368133545
    10. '()' → logprob: -13.04309368133545

Token 1335: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.00020449401927180588
    2. ' curr' → logprob: -8.500204086303711
    3. '(curr' → logprob: -14.125204086303711
    4. '	curr' → logprob: -16.00020408630371
    5. '[curr' → logprob: -17.12520408630371
    6. '   ' → logprob: -17.37520408630371
    7. 'not' → logprob: -17.50020408630371
    8. 'c' → logprob: -17.50020408630371
    9. ' ' → logprob: -17.87520408630371
    10. 'Curr' → logprob: -18.12520408630371

Token 1336: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3120909333229065
    2. 'in' → logprob: -1.4370908737182617
    3. '==' → logprob: -3.8120908737182617
    4. ' ==' → logprob: -4.812090873718262
    5. '=='' → logprob: -9.312090873718262
    6. '()' → logprob: -9.562090873718262
    7. ')' → logprob: -10.562090873718262
    8. ' ' → logprob: -11.562090873718262
    9. '()==' → logprob: -11.812090873718262
    10. 'is' → logprob: -12.437090873718262

Token 1337: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3348022401332855
    2. '['' → logprob: -1.709802269935608
    3. '('' → logprob: -3.0848021507263184
    4. '{'' → logprob: -3.4598021507263184
    5. '"' → logprob: -3.8348021507263184
    6. '')' → logprob: -5.834802150726318
    7. '[' → logprob: -7.709802150726318
    8. '{' → logprob: -7.959802150726318
    9. ''(' → logprob: -8.084802627563477
    10. ' '' → logprob: -8.584802627563477

Token 1338: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003813376184552908
    2. ')' → logprob: -6.37881326675415
    3. '())' → logprob: -6.62881326675415
    4. '()='' → logprob: -8.503813743591309
    5. '().'' → logprob: -8.753813743591309
    6. '('' → logprob: -9.128813743591309
    7. '()\' → logprob: -9.253813743591309
    8. ')'' → logprob: -10.253813743591309
    9. '()]' → logprob: -10.253813743591309
    10. ' ()' → logprob: -10.503813743591309

Token 1339: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.06348821520805359
    2. ')' → logprob: -2.938488245010376
    3. '):
' → logprob: -5.813488006591797
    4. ''):
' → logprob: -5.938488006591797
    5. '':' → logprob: -6.563488006591797
    6. ''' → logprob: -7.313488006591797
    7. ':
' → logprob: -8.688488006591797
    8. ' '' → logprob: -8.813488006591797
    9. '')' → logprob: -8.938488006591797
    10. '):' → logprob: -9.063488006591797

Token 1340: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014011058025062084
    2. ':
' → logprob: -4.639010906219482
    3. '               ' → logprob: -6.514010906219482
    4. ':' → logprob: -6.639010906219482
    5. '                       ' → logprob: -6.764010906219482
    6. ' and' → logprob: -9.26401138305664
    7. '   ' → logprob: -9.88901138305664
    8. '                  ' → logprob: -9.88901138305664
    9. '                    ' → logprob: -10.88901138305664
    10. '           ' → logprob: -11.01401138305664

Token 1341: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.16279424726963043
    2. '                   ' → logprob: -2.162794351577759
    3. '               ' → logprob: -3.412794351577759
    4. ' break' → logprob: -6.91279411315918
    5. '                       ' → logprob: -7.53779411315918
    6. '           ' → logprob: -7.78779411315918
    7. '	break' → logprob: -8.16279411315918
    8. '       ' → logprob: -10.53779411315918
    9. '   ' → logprob: -11.16279411315918
    10. '_break' → logprob: -12.03779411315918

Token 1342: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034850817173719406
    2. '                   ' → logprob: -5.878485202789307
    3. ':
' → logprob: -7.753485202789307
    4. '           ' → logprob: -9.628484725952148
    5. '                       ' → logprob: -10.628484725952148
    6. ':' → logprob: -10.753484725952148
    7. '   ' → logprob: -10.753484725952148
    8. '                
' → logprob: -10.878484725952148
    9. '):
' → logprob: -11.253484725952148
    10. '                ' → logprob: -11.253484725952148

Token 1343: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001387009397149086
    2. '           ' → logprob: -10.000138282775879
    3. '
' → logprob: -10.625138282775879
    4. 'literal' → logprob: -10.750138282775879
    5. '                   ' → logprob: -10.875138282775879
    6. '   ' → logprob: -11.000138282775879
    7. '                
' → logprob: -12.625138282775879
    8. '       ' → logprob: -13.250138282775879
    9. '```' → logprob: -13.500138282775879
    10. ' literal' → logprob: -13.750138282775879

Token 1344: ' if' (ID: 538)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.004213263280689716
    2. ' literal' → logprob: -6.629213333129883
    3. '               ' → logprob: -6.629213333129883
    4. 'char' → logprob: -7.254213333129883
    5. 'c' → logprob: -7.879213333129883
    6. '   ' → logprob: -8.504213333129883
    7. '           ' → logprob: -8.754213333129883
    8. '_literal' → logprob: -10.129213333129883
    9. 'lit' → logprob: -10.379213333129883
    10. 'l' → logprob: -11.629213333129883

Token 1345: ' '' (ID: 461)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6446709036827087
    2. ''A' → logprob: -0.8946709036827087
    3. ' not' → logprob: -3.5196709632873535
    4. 'curr' → logprob: -3.8946709632873535
    5. ''' → logprob: -4.2696709632873535
    6. '('' → logprob: -6.8946709632873535
    7. ''a' → logprob: -8.269670486450195
    8. ' '' → logprob: -8.519670486450195
    9. '   ' → logprob: -8.644670486450195
    10. ''u' → logprob: -9.394670486450195

Token 1346: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2658526301383972
    2. ''A' → logprob: -1.640852689743042
    3. 'curr' → logprob: -3.390852689743042
    4. ''' → logprob: -5.390852451324463
    5. '
' → logprob: -8.390852928161621
    6. 'not' → logprob: -8.515852928161621
    7. '(curr' → logprob: -9.140852928161621
    8. ' A' → logprob: -9.265852928161621
    9. ' curr' → logprob: -9.390852928161621
    10. '')' → logprob: -9.515852928161621

Token 1347: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00017064384883269668
    2. 'Z' → logprob: -9.000170707702637
    3. ''<' → logprob: -11.000170707702637
    4. 'A' → logprob: -11.500170707702637
    5. '<=' → logprob: -11.625170707702637
    6. '<' → logprob: -13.125170707702637
    7. ''z' → logprob: -13.250170707702637
    8. ''>' → logprob: -13.250170707702637
    9. ''A' → logprob: -13.875170707702637
    10. 'z' → logprob: -14.500170707702637

Token 1348: ' <=' (ID: 5017)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09001966565847397
    2. '<=' → logprob: -2.465019702911377
    3. ' <=' → logprob: -7.965019702911377
    4. 'Z' → logprob: -8.340019226074219
    5. '<' → logprob: -8.965019226074219
    6. 'A' → logprob: -9.590019226074219
    7. '```' → logprob: -9.965019226074219
    8. ''>' → logprob: -10.090019226074219
    9. ''<' → logprob: -10.340019226074219
    10. '"' → logprob: -10.465019226074219

Token 1349: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -4.60414821645827e-06
    2. ' curr' → logprob: -12.375004768371582
    3. '[curr' → logprob: -16.125003814697266
    4. '(curr' → logprob: -16.625003814697266
    5. '
' → logprob: -17.375003814697266
    6. 'c' → logprob: -18.000003814697266
    7. '	curr' → logprob: -18.125003814697266
    8. 'char' → logprob: -18.125003814697266
    9. '_curr' → logprob: -18.750003814697266
    10. '.curr' → logprob: -19.250003814697266

Token 1350: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5267444849014282
    2. ' <=' → logprob: -0.9017444849014282
    3. 'curr' → logprob: -6.776744365692139
    4. ':
' → logprob: -6.776744365692139
    5. ':' → logprob: -8.026744842529297
    6. '           ' → logprob: -8.526744842529297
    7. '               ' → logprob: -9.026744842529297
    8. '                   ' → logprob: -9.401744842529297
    9. '=' → logprob: -9.526744842529297
    10. '[' → logprob: -9.651744842529297

Token 1351: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000603668624535203
    2. 'Z' → logprob: -7.500603675842285
    3. ' '' → logprob: -10.625603675842285
    4. ''z' → logprob: -11.000603675842285
    5. 'curr' → logprob: -11.750603675842285
    6. ''C' → logprob: -14.625603675842285
    7. '"' → logprob: -14.875603675842285
    8. '`' → logprob: -15.125603675842285
    9. '>Z' → logprob: -16.00060272216797
    10. '
' → logprob: -16.37560272216797

Token 1352: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.08898526430130005
    2. ''' → logprob: -2.4639852046966553
    3. ''z' → logprob: -10.838985443115234
    4. '"' → logprob: -11.713985443115234
    5. ' Z' → logprob: -12.588985443115234
    6. ' '' → logprob: -12.963985443115234
    7. '
' → logprob: -12.963985443115234
    8. '['' → logprob: -13.463985443115234
    9. '>Z' → logprob: -13.588985443115234
    10. 'curr' → logprob: -13.588985443115234

Token 1353: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04153614118695259
    2. ':' → logprob: -3.9165360927581787
    3. '                   ' → logprob: -4.791536331176758
    4. '':
' → logprob: -5.166536331176758
    5. '               ' → logprob: -5.541536331176758
    6. '):
' → logprob: -6.666536331176758
    7. '           ' → logprob: -7.291536331176758
    8. ''):
' → logprob: -8.291536331176758
    9. ' :
' → logprob: -8.916536331176758
    10. ''' → logprob: -9.041536331176758

Token 1354: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005764422472566366
    2. '               ' → logprob: -5.255764484405518
    3. ':
' → logprob: -8.75576400756836
    4. '                       ' → logprob: -8.88076400756836
    5. 'literal' → logprob: -9.25576400756836
    6. '           ' → logprob: -10.50576400756836
    7. '   ' → logprob: -11.00576400756836
    8. ':' → logprob: -11.00576400756836
    9. '```' → logprob: -11.13076400756836
    10. ' literal' → logprob: -11.25576400756836

Token 1355: ' literal' (ID: 41271)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' (adapté à ' literal') → logprob: -0.00023965541913639754
    2. 'self' → logprob: -9.125239372253418
    3. ' literal' → logprob: -9.250239372253418
    4. '                   ' → logprob: -11.500239372253418
    5. 'char' → logprob: -11.750239372253418
    6. '_literal' → logprob: -11.750239372253418
    7. '               ' → logprob: -12.875239372253418
    8. 'lit' → logprob: -13.250239372253418
    9. 'l' → logprob: -13.500239372253418
    10. '   ' → logprob: -14.125239372253418

Token 1356: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0007556661730632186
    2. '=' → logprob: -8.500755310058594
    3. '               ' → logprob: -8.500755310058594
    4. ' =' → logprob: -9.000755310058594
    5. '           ' → logprob: -9.625755310058594
    6. '                   ' → logprob: -10.625755310058594
    7. 'Chars' → logprob: -11.000755310058594
    8. 'chars' → logprob: -11.125755310058594
    9. 'literal' → logprob: -11.500755310058594
    10. '_char' → logprob: -11.500755310058594

Token 1357: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010212593479081988
    2. '+=' → logprob: -7.376021385192871
    3. 'append' → logprob: -8.751021385192871
    4. '.' → logprob: -8.876021385192871
    5. ' +=' → logprob: -10.626021385192871
    6. '=' → logprob: -10.876021385192871
    7. '.pop' → logprob: -11.126021385192871
    8. ' .' → logprob: -11.626021385192871
    9. ' =' → logprob: -12.251021385192871
    10. '           ' → logprob: -12.376021385192871

Token 1358: '(curr' (ID: 49739)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.5232533812522888
    2. 'self' → logprob: -0.8982533812522888
    3. ' curr' → logprob: -10.148253440856934
    4. ' self' → logprob: -10.148253440856934
    5. '(curr' → logprob: -10.523253440856934
    6. '(self' → logprob: -11.523253440856934
    7. '   ' → logprob: -12.398253440856934
    8. 'cur' → logprob: -13.398253440856934
    9. '	curr' → logprob: -13.648253440856934
    10. '[curr' → logprob: -13.648253440856934

Token 1359: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5964317321777344
    2. ')
' → logprob: -0.8464317321777344
    3. ')' → logprob: -4.221431732177734
    4. 'self' → logprob: -5.846431732177734
    5. '               ' → logprob: -6.096431732177734
    6. '           ' → logprob: -8.096431732177734
    7. '                       ' → logprob: -9.346431732177734
    8. '')
' → logprob: -11.346431732177734
    9. '   ' → logprob: -11.471431732177734
    10. '       ' → logprob: -11.971431732177734

Token 1360: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007856219075620174
    2. 'self' → logprob: -5.257856369018555
    3. '               ' → logprob: -6.132856369018555
    4. '           ' → logprob: -8.007856369018555
    5. '                       ' → logprob: -10.132856369018555
    6. '   ' → logprob: -10.257856369018555
    7. ' self' → logprob: -10.882856369018555
    8. '       ' → logprob: -11.507856369018555
    9. '		           ' → logprob: -12.507856369018555
    10. '	               ' → logprob: -13.257856369018555

Token 1361: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00034952821442857385
    2. '                   ' → logprob: -8.000349998474121
    3. ' self' → logprob: -11.625349998474121
    4. '   ' → logprob: -13.250349998474121
    5. '               ' → logprob: -13.750349998474121
    6. '_self' → logprob: -13.750349998474121
    7. '           ' → logprob: -14.750349998474121
    8. '
' → logprob: -15.000349998474121
    9. '	self' → logprob: -15.625349998474121
    10. '_' → logprob: -15.875349998474121

Token 1362: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.016697073355317116
    2. '_pos' → logprob: -4.516696929931641
    3. '_cons' → logprob: -5.266696929931641
    4. '.consume' → logprob: -7.891696929931641
    5. '.' → logprob: -9.89169692993164
    6. '
' → logprob: -10.64169692993164
    7. '_consum' → logprob: -11.64169692993164
    8. 'self' → logprob: -12.26669692993164
    9. '_self' → logprob: -13.39169692993164
    10. '.
' → logprob: -13.51669692993164

Token 1363: 'pos' (ID: 1103)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.011326612904667854
    2. 'pos' → logprob: -4.636326789855957
    3. '_pos' → logprob: -6.636326789855957
    4. '_cons' → logprob: -8.386326789855957
    5. '.consume' → logprob: -11.886326789855957
    6. ' consume' → logprob: -11.886326789855957
    7. '_' → logprob: -12.136326789855957
    8. '_data' → logprob: -12.261326789855957
    9. 'data' → logprob: -12.886326789855957
    10. '_consum' → logprob: -13.386326789855957

Token 1364: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005234356038272381
    2. ' +=' → logprob: -5.255234241485596
    3. ']+=' → logprob: -15.880234718322754
    4. '   ' → logprob: -16.005233764648438
    5. '+' → logprob: -16.380233764648438
    6. '    ' → logprob: -16.505233764648438
    7. '                   ' → logprob: -16.755233764648438
    8. '=' → logprob: -17.380233764648438
    9. '           ' → logprob: -17.505233764648438
    10. '                    ' → logprob: -18.255233764648438

Token 1365: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -18.000001907348633
    4. '```' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '۱' → logprob: -20.375001907348633
    7. '{
' → logprob: -21.562501907348633
    8. '           ' → logprob: -21.750001907348633
    9. '       ' → logprob: -21.937501907348633
    10. '１' → logprob: -21.937501907348633

Token 1366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. 'len' → logprob: -18.25
    4. '
' → logprob: -18.5
    5. '   ' → logprob: -19.375
    6. '```' → logprob: -19.5
    7. '۱' → logprob: -21.875
    8. '１' → logprob: -22.125
    9. '  ' → logprob: -22.625
    10. '﻿' → logprob: -22.8125

Token 1367: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018562922487035394
    2. 'else' → logprob: -6.376856327056885
    3. '
' → logprob: -9.501855850219727
    4. ' else' → logprob: -10.376855850219727
    5. '           ' → logprob: -10.876855850219727
    6. '                   ' → logprob: -11.751855850219727
    7. '			' → logprob: -11.876855850219727
    8. '                ' → logprob: -12.876855850219727
    9. '       ' → logprob: -13.626855850219727
    10. '		       ' → logprob: -13.751855850219727

Token 1368: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0069022090174257755
    2. 'else' → logprob: -5.00690221786499
    3. ' else' → logprob: -9.506901741027832
    4. '           ' → logprob: -10.006901741027832
    5. '
' → logprob: -10.256901741027832
    6. '                   ' → logprob: -11.381901741027832
    7. 'continue' → logprob: -11.631901741027832
    8. '```' → logprob: -12.381901741027832
    9. '			' → logprob: -12.631901741027832
    10. 'return' → logprob: -13.631901741027832

Token 1369: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31835341453552246
    2. 'else' (adapté à ' else') → logprob: -1.3183534145355225
    3. ' else' → logprob: -5.318353652954102
    4. '           ' → logprob: -9.068353652954102
    5. '	else' → logprob: -10.943353652954102
    6. '		       ' → logprob: -11.443353652954102
    7. '	           ' → logprob: -11.693353652954102
    8. 'elif' → logprob: -12.068353652954102
    9. '			' → logprob: -12.193353652954102
    10. '                   ' → logprob: -12.818353652954102

Token 1370: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004941512364894152
    2. '                    ' → logprob: -6.129941463470459
    3. '               ' → logprob: -7.129941463470459
    4. '           ' → logprob: -8.004941940307617
    5. '                  ' → logprob: -8.004941940307617
    6. ' raise' → logprob: -8.129941940307617
    7. ':
' → logprob: -8.379941940307617
    8. '                       ' → logprob: -8.504941940307617
    9. 'raise' → logprob: -8.879941940307617
    10. '                    
' → logprob: -9.129941940307617

Token 1371: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.40216124057769775
    2. 'raise' → logprob: -1.4021612405776978
    3. ' raise' → logprob: -2.527161121368408
    4. '   ' → logprob: -6.527161121368408
    5. '           ' → logprob: -6.777161121368408
    6. '               ' → logprob: -6.902161121368408
    7. '                  ' → logprob: -7.652161121368408
    8. '                       ' → logprob: -8.277161598205566
    9. '	raise' → logprob: -8.277161598205566
    10. '                    ' → logprob: -8.527161598205566

Token 1372: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.024216972291469574
    2. 'break' → logprob: -3.774216890335083
    3. ' raise' → logprob: -7.274217128753662
    4. '                   ' → logprob: -8.274216651916504
    5. ' break' → logprob: -10.774216651916504
    6. '               ' → logprob: -14.524216651916504
    7. '                    ' → logprob: -14.899216651916504
    8. '                       ' → logprob: -15.024216651916504
    9. '	raise' → logprob: -15.024216651916504
    10. '#' → logprob: -15.649216651916504

Token 1373: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -2.7610454708337784e-05
    2. ' Value' → logprob: -10.500027656555176
    3. '	Value' → logprob: -18.75002670288086
    4. '_value' → logprob: -18.87502670288086
    5. 'Syntax' → logprob: -19.37502670288086
    6. 'value' → logprob: -19.62502670288086
    7. '
' → logprob: -19.87502670288086
    8. '_Value' → logprob: -20.00002670288086
    9. '   ' → logprob: -20.50002670288086
    10. '(Value' → logprob: -21.50002670288086

Token 1374: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.004115203861147165
    2. 'Value' → logprob: -5.504115104675293
    3. 'rror' → logprob: -10.379115104675293
    4. 'alue' → logprob: -12.129115104675293
    5. '
' → logprob: -16.25411605834961
    6. 'Unexpected' → logprob: -16.37911605834961
    7. 'SError' → logprob: -17.25411605834961
    8. 'Warning' → logprob: -17.62911605834961
    9. 'ror' → logprob: -18.37911605834961
    10. 'Syntax' → logprob: -18.50411605834961

Token 1375: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0006526283104903996
    2. '(' → logprob: -7.50065279006958
    3. 'f' → logprob: -9.875652313232422
    4. '("' → logprob: -10.125652313232422
    5. '(
' → logprob: -11.750652313232422
    6. '('' → logprob: -15.875652313232422
    7. ' f' → logprob: -16.500652313232422
    8. 'Unexpected' → logprob: -17.750652313232422
    9. '[f' → logprob: -17.875652313232422
    10. '	f' → logprob: -18.625652313232422

Token 1376: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14531093835830688
    2. ' f' → logprob: -2.395310878753662
    3. 'Unexpected' → logprob: -3.145310878753662
    4. 'Invalid' → logprob: -7.270310878753662
    5. '(f' → logprob: -8.14531135559082
    6. '                       ' → logprob: -11.27031135559082
    7. '                   ' → logprob: -11.52031135559082
    8. '"' → logprob: -11.64531135559082
    9. ' Unexpected' → logprob: -12.02031135559082
    10. '[f' → logprob: -12.14531135559082

Token 1377: 'Unexpected' (ID: 59338)
  Prédit: 'Unexpected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unexpected' → logprob: -0.1574946641921997
    2. 'Invalid' → logprob: -2.15749454498291
    3. 'f' → logprob: -3.53249454498291
    4. ' f' → logprob: -7.28249454498291
    5. ' Unexpected' → logprob: -9.40749454498291
    6. 'Illegal' → logprob: -11.03249454498291
    7. 'Found' → logprob: -11.03249454498291
    8. '(f' → logprob: -11.28249454498291
    9. 'Expected' → logprob: -11.40749454498291
    10. 'Value' → logprob: -11.53249454498291

Token 1378: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.05451851710677147
    2. 'char' → logprob: -3.554518461227417
    3. ' character' → logprob: -3.804518461227417
    4. 'curr' → logprob: -6.179518699645996
    5. 'token' → logprob: -9.804518699645996
    6. '
' → logprob: -10.679518699645996
    7. '_character' → logprob: -10.804518699645996
    8. ' char' → logprob: -11.929518699645996
    9. 'Character' → logprob: -12.054518699645996
    10. '_char' → logprob: -13.179518699645996

Token 1379: ' '{' (ID: 24918)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.13347949087619781
    2. ''' → logprob: -2.508479595184326
    3. ' f' → logprob: -4.383479595184326
    4. 'at' → logprob: -4.633479595184326
    5. ' {' → logprob: -4.758479595184326
    6. '{' → logprob: -5.383479595184326
    7. ' '' → logprob: -5.508479595184326
    8. ':' → logprob: -7.258479595184326
    9. 'f' → logprob: -7.633479595184326
    10. '{
' → logprob: -8.008479118347168

Token 1380: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0009419540292583406
    2. 'self' → logprob: -7.000941753387451
    3. ' curr' → logprob: -10.50094223022461
    4. 'cur' → logprob: -14.00094223022461
    5. '	curr' → logprob: -14.75094223022461
    6. '(curr' → logprob: -14.87594223022461
    7. 'current' → logprob: -14.87594223022461
    8. ' self' → logprob: -15.25094223022461
    9. '
' → logprob: -15.50094223022461
    10. '   ' → logprob: -15.75094223022461

Token 1381: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11557949334383011
    2. '}'' → logprob: -2.240579605102539
    3. ' at' → logprob: -6.865579605102539
    4. ' '' → logprob: -7.740579605102539
    5. ')'' → logprob: -7.740579605102539
    6. ''"' → logprob: -8.115579605102539
    7. ']'' → logprob: -8.615579605102539
    8. '           ' → logprob: -9.240579605102539
    9. '"'' → logprob: -9.615579605102539
    10. '                   ' → logprob: -10.240579605102539

Token 1382: ' in' (ID: 306)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.06326299160718918
    2. 'at' → logprob: -2.813262939453125
    3. '                   ' → logprob: -7.563262939453125
    4. '               ' → logprob: -8.313262939453125
    5. '                       ' → logprob: -8.563262939453125
    6. ')' → logprob: -9.313262939453125
    7. '                           ' → logprob: -10.313262939453125
    8. '                    ' → logprob: -10.563262939453125
    9. '           ' → logprob: -10.688262939453125
    10. '                               ' → logprob: -11.188262939453125

Token 1383: ' literal' (ID: 41271)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.03464581444859505
    2. '_literal' → logprob: -3.7846457958221436
    3. 'sequence' → logprob: -4.909646034240723
    4. 'parse' → logprob: -6.659646034240723
    5. '_gen' → logprob: -7.159646034240723
    6. 'gen' → logprob: -7.159646034240723
    7. 'input' → logprob: -7.284646034240723
    8. ' literal' → logprob: -8.659646034240723
    9. '_parse' → logprob: -8.784646034240723
    10. 'code' → logprob: -10.534646034240723

Token 1384: ' at' (ID: 540)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6006686687469482
    2. ' sequence' → logprob: -1.7256686687469482
    3. ' at' → logprob: -1.8506686687469482
    4. '")
' → logprob: -2.3506686687469482
    5. '")' → logprob: -4.350668907165527
    6. '_sequence' → logprob: -5.100668907165527
    7. 'at' → logprob: -7.600668907165527
    8. '"' → logprob: -8.600668907165527
    9. 'string' → logprob: -8.725668907165527
    10. ')' → logprob: -8.975668907165527

Token 1385: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.015512908808887005
    2. ' position' → logprob: -4.890512943267822
    3. 'self' → logprob: -4.890512943267822
    4. 'pos' → logprob: -8.515512466430664
    5. ' self' → logprob: -10.015512466430664
    6. '{
' → logprob: -10.140512466430664
    7. '
' → logprob: -10.390512466430664
    8. '{' → logprob: -11.015512466430664
    9. '<|end|>' → logprob: -12.140512466430664
    10. 'index' → logprob: -12.390512466430664

Token 1386: ' {' (ID: 354)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03080539032816887
    2. ' self' → logprob: -3.5308053493499756
    3. '{' → logprob: -6.905805587768555
    4. '
' → logprob: -11.530805587768555
    5. ' {' → logprob: -11.530805587768555
    6. '_self' → logprob: -11.530805587768555
    7. '(self' → logprob: -11.780805587768555
    8. '                   ' → logprob: -12.155805587768555
    9. '{
' → logprob: -12.905805587768555
    10. 's' → logprob: -14.155805587768555

Token 1387: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2948405128554441e-05
    2. ' self' → logprob: -11.50001335144043
    3. '
' → logprob: -13.12501335144043
    4. '                   ' → logprob: -14.75001335144043
    5. '               ' → logprob: -16.50001335144043
    6. '0' → logprob: -16.50001335144043
    7. '           ' → logprob: -16.62501335144043
    8. '`' → logprob: -17.00001335144043
    9. '                       ' → logprob: -18.00001335144043
    10. '_self' → logprob: -18.00001335144043

Token 1388: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0014545208541676402
    2. '_pos' → logprob: -6.6264543533325195
    3. '_' → logprob: -9.50145435333252
    4. '.pos' → logprob: -11.25145435333252
    5. '
' → logprob: -11.37645435333252
    6. 'pos' → logprob: -11.75145435333252
    7. '.' → logprob: -12.50145435333252
    8. '_.' → logprob: -12.62645435333252
    9. '```' → logprob: -12.62645435333252
    10. ']._' → logprob: -12.75145435333252

Token 1389: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.008617408573627472
    2. '_pos' → logprob: -4.758617401123047
    3. '.pos' → logprob: -13.633617401123047
    4. ' pos' → logprob: -15.133617401123047
    5. '_data' → logprob: -15.258617401123047
    6. 'os' → logprob: -15.383617401123047
    7. 'position' → logprob: -15.508617401123047
    8. '```' → logprob: -15.758617401123047
    9. '	pos' → logprob: -15.758617401123047
    10. 'self' → logprob: -16.508617401123047

Token 1390: '}")
' (ID: 23577)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9465973973274231
    2. '}")
' → logprob: -1.8215973377227783
    3. '")' → logprob: -1.8215973377227783
    4. '}' → logprob: -1.9465973377227783
    5. '}")' → logprob: -2.8215973377227783
    6. '")
' → logprob: -3.4465973377227783
    7. ')
' → logprob: -3.5715973377227783
    8. '               ' → logprob: -4.696597576141357
    9. ')")
' → logprob: -5.696597576141357
    10. '0' → logprob: -6.321597576141357

Token 1391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006795655936002731
    2. '
' → logprob: -5.256795883178711
    3. '       ' → logprob: -7.006795883178711
    4. 'return' → logprob: -7.756795883178711
    5. '            
' → logprob: -8.881795883178711
    6. '               ' → logprob: -9.881795883178711
    7. '        
' → logprob: -11.631795883178711
    8. '		' → logprob: -11.881795883178711
    9. '```' → logprob: -12.506795883178711
    10. '    
' → logprob: -12.756795883178711

Token 1392: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.28172820806503296
    2. 'return' → logprob: -1.5317282676696777
    3. '       ' → logprob: -3.5317282676696777
    4. ' if' → logprob: -10.03172779083252
    5. '           ' → logprob: -10.53172779083252
    6. '```' → logprob: -11.40672779083252
    7. 'sequence' → logprob: -11.65672779083252
    8. '   ' → logprob: -12.40672779083252
    9. ' return' → logprob: -12.90672779083252
    10. 'literal' → logprob: -12.90672779083252

Token 1393: ' literal' (ID: 41271)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.21815356612205505
    2. 'not' → logprob: -1.7181535959243774
    3. 'len' → logprob: -4.218153476715088
    4. ' not' → logprob: -6.843153476715088
    5. ' literal' → logprob: -7.218153476715088
    6. '   ' → logprob: -10.343153953552246
    7. ' len' → logprob: -11.218153953552246
    8. 'l' → logprob: -11.468153953552246
    9. '       ' → logprob: -13.093153953552246
    10. 'lit' → logprob: -13.093153953552246

Token 1394: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -4.0126840758603066e-05
    2. 's' → logprob: -10.375040054321289
    3. 'chars' → logprob: -12.375040054321289
    4. '_' → logprob: -13.500040054321289
    5. '```' → logprob: -14.125040054321289
    6. 'Chars' → logprob: -14.125040054321289
    7. '
' → logprob: -15.000040054321289
    8. '_
' → logprob: -15.375040054321289
    9. '_char' → logprob: -15.500040054321289
    10. '(chars' → logprob: -15.875040054321289

Token 1395: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013885866850614548
    2. ':
' → logprob: -4.388885974884033
    3. ':return' → logprob: -7.763885974884033
    4. '==' → logprob: -7.888885974884033
    5. '):' → logprob: -8.513885498046875
    6. '.' → logprob: -9.388885498046875
    7. 'return' → logprob: -10.138885498046875
    8. '.append' → logprob: -10.138885498046875
    9. '!=' → logprob: -10.513885498046875
    10. '=' → logprob: -10.638885498046875

Token 1396: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7744085788726807
    2. 'return' → logprob: -0.7744085788726807
    3. '           ' → logprob: -2.7744085788726807
    4. ' return' → logprob: -4.399408340454102
    5. '       ' → logprob: -5.774408340454102
    6. '   ' → logprob: -9.399408340454102
    7. '	return' → logprob: -10.024408340454102
    8. '	       ' → logprob: -10.149408340454102
    9. '{return' → logprob: -10.524408340454102
    10. '```' → logprob: -11.274408340454102

Token 1397: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -9.448370838072151e-05
    2. ' return' → logprob: -9.750094413757324
    3. '               ' → logprob: -10.250094413757324
    4. '           ' → logprob: -14.375094413757324
    5. '
' → logprob: -16.50009536743164
    6. '       ' → logprob: -16.62509536743164
    7. '   ' → logprob: -17.25009536743164
    8. '	return' → logprob: -17.87509536743164
    9. '                   ' → logprob: -18.62509536743164
    10. '```' → logprob: -19.50009536743164

Token 1398: ' Literal' (ID: 100414)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.01416350994259119
    2. ' Literal' → logprob: -4.264163494110107
    3. 'Liter' → logprob: -19.014163970947266
    4. 'Lit' → logprob: -20.389163970947266
    5. '_literal' → logprob: -20.889163970947266
    6. '_LITERAL' → logprob: -21.389163970947266
    7. ' literal' → logprob: -21.764163970947266
    8. 'L' → logprob: -22.514163970947266
    9. ' Liter' → logprob: -23.889163970947266
    10. '
' → logprob: -23.889163970947266

Token 1399: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003156817110721022
    2. '''.' → logprob: -9.00031566619873
    3. '(' → logprob: -9.12531566619873
    4. '("' → logprob: -9.75031566619873
    5. '(
' → logprob: -10.75031566619873
    6. '(('' → logprob: -13.75031566619873
    7. ' (' → logprob: -14.25031566619873
    8. ' ''.' → logprob: -14.37531566619873
    9. '"' → logprob: -14.75031566619873
    10. '('').' → logprob: -15.37531566619873

Token 1400: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -2.522638169466518e-05
    2. '''' → logprob: -11.375024795532227
    3. ' ''.' → logprob: -12.000024795532227
    4. '"' → logprob: -12.250024795532227
    5. ''.' → logprob: -13.250024795532227
    6. ''' → logprob: -13.875024795532227
    7. '''
' → logprob: -16.375024795532227
    8. '".' → logprob: -18.000024795532227
    9. ''',' → logprob: -19.625024795532227
    10. '```' → logprob: -19.750024795532227

Token 1401: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -9.710618905955926e-05
    2. '''.' → logprob: -9.250097274780273
    3. '.join' → logprob: -15.000097274780273
    4. ' join' → logprob: -15.125097274780273
    5. ''.' → logprob: -15.625097274780273
    6. 'Join' → logprob: -17.250097274780273
    7. '```' → logprob: -17.375097274780273
    8. ' ''.' → logprob: -17.625097274780273
    9. '(join' → logprob: -17.750097274780273
    10. '('').' → logprob: -18.250097274780273

Token 1402: '(l' (ID: 4179)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.07999525219202042
    2. '(l' → logprob: -2.5799951553344727
    3. 'l' → logprob: -6.829995155334473
    4. ' literal' → logprob: -11.079995155334473
    5. '[l' → logprob: -12.704995155334473
    6. '.literal' → logprob: -13.204995155334473
    7. 'liter' → logprob: -13.704995155334473
    8. 'lit' → logprob: -13.829995155334473
    9. '_literal' → logprob: -14.204995155334473
    10. ')' → logprob: -15.079995155334473

Token 1403: 'iteral' (ID: 17598)
  Prédit: 'iteral'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iteral' → logprob: -5.991464786347933e-05
    2. 'literal' → logprob: -9.750060081481934
    3. 'iter' → logprob: -13.500060081481934
    4. 'ITERAL' → logprob: -15.875060081481934
    5. 'itera' → logprob: -17.500059127807617
    6. 'iterals' → logprob: -17.750059127807617
    7. 'it' → logprob: -17.875059127807617
    8. '_literal' → logprob: -17.875059127807617
    9. '   ' → logprob: -18.375059127807617
    10. 'ite' → logprob: -18.375059127807617

Token 1404: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.4617256056226324e-05
    2. 'ars' → logprob: -11.625014305114746
    3. '_literals' → logprob: -13.125014305114746
    4. 'chars' → logprob: -13.875014305114746
    5. 's' → logprob: -14.000014305114746
    6. ')' → logprob: -14.625014305114746
    7. 'ar' → logprob: -14.625014305114746
    8. 'Chars' → logprob: -15.000014305114746
    9. 'es' → logprob: -16.000015258789062
    10. '```' → logprob: -16.375015258789062

Token 1405: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019463682547211647
    2. ')
' → logprob: -6.251946449279785
    3. '           ' → logprob: -11.251946449279785
    4. '))' → logprob: -12.501946449279785
    5. '       ' → logprob: -14.501946449279785
    6. '               ' → logprob: -15.751946449279785
    7. ')
' → logprob: -15.751946449279785
    8. ' )' → logprob: -16.62694549560547
    9. ')return' → logprob: -17.00194549560547
    10. ')

' → logprob: -17.12694549560547

Token 1406: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27366143465042114
    2. '<|end|>' → logprob: -1.5236613750457764
    3. '
' → logprob: -4.2736616134643555
    4. '           ' → logprob: -6.1486616134643555
    5. '<|end|>' → logprob: -6.2736616134643555
    6. 'return' → logprob: -6.5236616134643555
    7. '        
' → logprob: -6.6486616134643555
    8. '	' → logprob: -9.273661613464355
    9. '```' → logprob: -10.023661613464355
    10. 'newline' → logprob: -10.023661613464355

Token 1407: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3873445689678192
    2. 'return' (adapté à ' return') → logprob: -1.1373445987701416
    3. '
' → logprob: -7.7623443603515625
    4. '        
' → logprob: -11.137344360351562
    5. 'None' → logprob: -11.512344360351562
    6. ' return' → logprob: -11.512344360351562
    7. '   ' → logprob: -12.887344360351562
    8. 'raise' → logprob: -13.512344360351562
    9. '	return' → logprob: -13.512344360351562
    10. '	' → logprob: -13.637344360351562

Token 1408: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.2729995988775045e-06
    2. ' None' → logprob: -12.000006675720215
    3. '
' → logprob: -18.8750057220459
    4. '_None' → logprob: -19.5000057220459
    5. '(None' → logprob: -19.8750057220459
    6. ',None' → logprob: -21.0000057220459
    7. '=None' → logprob: -21.2500057220459
    8. 'none' → logprob: -21.8750057220459
    9. 'No' → logprob: -23.2500057220459
    10. '_none' → logprob: -23.2500057220459

Token 1409: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11577625572681427
    2. 'class' → logprob: -2.865776300430298
    3. '   ' → logprob: -3.490776300430298
    4. '

' → logprob: -3.990776300430298
    5. '```' → logprob: -6.115776062011719
    6. '<|end|>' → logprob: -8.365776062011719
    7. '10' → logprob: -8.490776062011719
    8. '<class' → logprob: -9.365776062011719
    9. '    
' → logprob: -9.490776062011719
    10. 'def' → logprob: -9.865776062011719

Token 1410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11663823574781418
    2. 'class' → logprob: -2.36663818359375
    3. 'def' → logprob: -4.86663818359375
    4. '```' → logprob: -5.36663818359375
    5. '
' → logprob: -5.74163818359375
    6. '    
' → logprob: -8.24163818359375
    7. '`' → logprob: -8.36663818359375
    8. '<|end|>' → logprob: -10.74163818359375
    9. 'classmethod' → logprob: -10.99163818359375
    10. '``' → logprob: -11.11663818359375

Token 1411: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.16060946881771088
    2. '
' → logprob: -1.910609483718872
    3. '

' → logprob: -8.910609245300293
    4. '```' → logprob: -9.035609245300293
    5. '   ' → logprob: -9.910609245300293
    6. '<class' → logprob: -10.035609245300293
    7. 'classmethod' → logprob: -11.660609245300293
    8. ' class' → logprob: -12.160609245300293
    9. '    
' → logprob: -12.535609245300293
    10. 'def' (adapté à ' def') → logprob: -12.535609245300293

Token 1412: ' _' (ID: 1175)
  Prédit: '_parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -5.12127808178775e-05
    2. 'def' → logprob: -10.625051498413086
    3. ' _' → logprob: -11.250051498413086
    4. '_' → logprob: -12.250051498413086
    5. '_def' → logprob: -12.750051498413086
    6. '_define' → logprob: -13.000051498413086
    7. '_Parse' → logprob: -13.875051498413086
    8. ' def' → logprob: -14.000051498413086
    9. '_parser' → logprob: -14.875051498413086
    10. '_continue' → logprob: -15.000051498413086

Token 1413: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0003374886582605541
    2. '_parse' → logprob: -8.000337600708008
    3. 'def' → logprob: -14.000337600708008
    4. 'consume' → logprob: -14.125337600708008
    5. ' parse' → logprob: -15.250337600708008
    6. '
' → logprob: -16.000337600708008
    7. 'peek' → logprob: -17.125337600708008
    8. '(parse' → logprob: -18.125337600708008
    9. '	parse' → logprob: -18.500337600708008
    10. '#' → logprob: -18.750337600708008

Token 1414: '_until' (ID: 115218)
  Prédit: '_until'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_until' → logprob: -0.0009117019944824278
    2. 'until' → logprob: -7.000911712646484
    3. '_sequence' → logprob: -17.500911712646484
    4. ' until' → logprob: -18.125911712646484
    5. '_for' → logprob: -18.125911712646484
    6. '_once' → logprob: -18.375911712646484
    7. '_un' → logprob: -18.375911712646484
    8. '_to' → logprob: -18.625911712646484
    9. '_without' → logprob: -18.750911712646484
    10. '_inner' → logprob: -19.625911712646484

Token 1415: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.0007044489029794931
    2. 'closing' → logprob: -7.500704288482666
    3. '(self' → logprob: -9.500704765319824
    4. '_' → logprob: -10.250704765319824
    5. 'self' → logprob: -11.500704765319824
    6. '')' → logprob: -12.000704765319824
    7. ')' → logprob: -12.125704765319824
    8. '('_' → logprob: -12.250704765319824
    9. '```' → logprob: -13.000704765319824
    10. 'Closing' → logprob: -13.125704765319824

Token 1416: 'osing' (ID: 10819)
  Prédit: 'osing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osing' → logprob: -0.000330220878822729
    2. 'os' → logprob: -9.000329971313477
    3. 'ose' → logprob: -9.250329971313477
    4. 'o' → logprob: -10.625329971313477
    5. '   ' → logprob: -11.000329971313477
    6. ' os' → logprob: -11.250329971313477
    7. 'osure' → logprob: -11.500329971313477
    8. '_' → logprob: -11.750329971313477
    9. ')' → logprob: -12.125329971313477
    10. 'osi' → logprob: -12.250329971313477

Token 1417: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -1.4498052223643754e-05
    2. '_parent' → logprob: -11.875014305114746
    3. 'paren' → logprob: -12.750014305114746
    4. '_p' → logprob: -13.125014305114746
    5. '_' → logprob: -13.375014305114746
    6. '(paren' → logprob: -14.625014305114746
    7. '__' → logprob: -16.625015258789062
    8. '_para' → logprob: -16.625015258789062
    9. 'Paren' → logprob: -16.625015258789062
    10. ')' → logprob: -16.625015258789062

Token 1418: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -9.088346359931165e-07
    2. 'e' → logprob: -14.375000953674316
    3. '
' → logprob: -16.875
    4. 'ent' → logprob: -16.875
    5. '```' → logprob: -16.875
    6. ')' → logprob: -17.0
    7. 'em' → logprob: -17.375
    8. 'ен' → logprob: -17.75
    9. 'an' → logprob: -18.125
    10. '"""
' → logprob: -18.625

Token 1419: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8193366486229934e-05
    2. '(' → logprob: -11.750018119812012
    3. 'self' → logprob: -11.750018119812012
    4. '   ' → logprob: -14.125018119812012
    5. '(s' → logprob: -14.500018119812012
    6. 'def' → logprob: -14.750018119812012
    7. ' (' → logprob: -15.125018119812012
    8. '
' → logprob: -15.750018119812012
    9. '_(' → logprob: -16.000019073486328
    10. '       ' → logprob: -16.250019073486328

Token 1420: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00358391460031271
    2. 'self' → logprob: -6.003583908081055
    3. ')' → logprob: -7.253583908081055
    4. '   ' → logprob: -8.253583908081055
    5. '       ' → logprob: -9.753583908081055
    6. '(' → logprob: -10.378583908081055
    7. 'def' → logprob: -10.753583908081055
    8. '_(' → logprob: -12.253583908081055
    9. '_' → logprob: -12.503583908081055
    10. '):
' → logprob: -12.628583908081055

Token 1421: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001063771080225706
    2. 'self' → logprob: -7.001063823699951
    3. '(' → logprob: -9.501063346862793
    4. '   ' → logprob: -10.376063346862793
    5. '       ' → logprob: -10.626063346862793
    6. 'def' → logprob: -11.001063346862793
    7. ' (' → logprob: -12.876063346862793
    8. '(
' → logprob: -14.126063346862793
    9. 's' → logprob: -14.376063346862793
    10. ' self' → logprob: -14.626063346862793

Token 1422: ' Genome' (ID: 168601)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.009890780784189701
    2. 'Optional' → logprob: -5.009890556335449
    3. 'List' → logprob: -6.259890556335449
    4. 'Compound' → logprob: -7.134890556335449
    5. ' Genome' → logprob: -8.63489055633545
    6. 'self' → logprob: -9.75989055633545
    7. 'Union' → logprob: -9.88489055633545
    8. ''' → logprob: -10.00989055633545
    9. 'Composite' → logprob: -10.13489055633545
    10. 'Gen' → logprob: -11.25989055633545

Token 1423: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -2.2007883671903983e-05
    2. 'component' → logprob: -11.000021934509277
    3. '_component' → logprob: -12.875021934509277
    4. 'Sequence' → logprob: -14.000021934509277
    5. 'Components' → logprob: -14.625021934509277
    6. 'Element' → logprob: -14.750021934509277
    7. '@Component' → logprob: -15.250021934509277
    8. '_Component' → logprob: -15.750021934509277
    9. '<Component' → logprob: -16.250022888183594
    10. 'List' → logprob: -16.375022888183594

Token 1424: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3290513753890991
    2. '(self' → logprob: -1.3290513753890991
    3. 'self' → logprob: -4.954051494598389
    4. ':
' → logprob: -5.704051494598389
    5. ':' → logprob: -5.954051494598389
    6. '(' → logprob: -6.829051494598389
    7. '->' → logprob: -7.329051494598389
    8. '   ' → logprob: -8.07905101776123
    9. '():
' → logprob: -8.07905101776123
    10. '```' → logprob: -9.82905101776123

Token 1425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18075045943260193
    2. 'components' → logprob: -1.8057504892349243
    3. ' components' → logprob: -6.930750370025635
    4. 'com' → logprob: -11.430750846862793
    5. '           ' → logprob: -12.555750846862793
    6. ' comps' → logprob: -12.930750846862793
    7. 'self' → logprob: -13.305750846862793
    8. '```' → logprob: -13.430750846862793
    9. 'result' → logprob: -13.680750846862793
    10. '_components' → logprob: -13.680750846862793

Token 1426: ' """
' (ID: 7037)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.00011152983643114567
    2. '       ' → logprob: -9.12511157989502
    3. ' components' → logprob: -13.50011157989502
    4. 'elements' → logprob: -14.50011157989502
    5. 'parts' → logprob: -15.25011157989502
    6. '
' → logprob: -16.250110626220703
    7. 'start' → logprob: -17.000110626220703
    8. '```' → logprob: -17.000110626220703
    9. 'segments' → logprob: -17.500110626220703
    10. '           ' → logprob: -17.625110626220703

Token 1427: '       ' (ID: 309)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.0007278018747456372
    2. '       ' → logprob: -7.250727653503418
    3. ' components' → logprob: -11.000727653503418
    4. 'parts' → logprob: -15.375727653503418
    5. '           ' → logprob: -15.750727653503418
    6. 'result' → logprob: -16.375728607177734
    7. 'comp' → logprob: -16.500728607177734
    8. '
' → logprob: -16.500728607177734
    9. 'com' → logprob: -16.750728607177734
    10. 'elements' → logprob: -16.750728607177734

Token 1428: ' Parses' (ID: 179117)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.2948405128554441e-05
    2. '       ' → logprob: -11.87501335144043
    3. 'result' → logprob: -13.12501335144043
    4. ' components' → logprob: -13.75001335144043
    5. '
' → logprob: -14.00001335144043
    6. 'component' → logprob: -14.50001335144043
    7. 'def' → logprob: -15.00001335144043
    8. 'com' → logprob: -15.12501335144043
    9. 'parts' → logprob: -15.25001335144043
    10. 'comp' → logprob: -15.87501335144043

Token 1429: ' until' (ID: 4609)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.015692120417952538
    2. 'self' → logprob: -4.265692234039307
    3. 'def' → logprob: -8.015691757202148
    4. ' components' → logprob: -8.140691757202148
    5. 'a' → logprob: -8.390691757202148
    6. '           ' → logprob: -8.640691757202148
    7. 'elements' → logprob: -8.640691757202148
    8. '       ' → logprob: -9.390691757202148
    9. '[]' → logprob: -10.015691757202148
    10. 'multiple' → logprob: -10.265691757202148

Token 1430: ' matching' (ID: 20238)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.042616236954927444
    2. 'True' → logprob: -3.667616128921509
    3. ')' → logprob: -4.542616367340088
    4. '       ' → logprob: -6.542616367340088
    5. '')' → logprob: -6.542616367340088
    6. 'False' → logprob: -6.667616367340088
    7. '   ' → logprob: -7.667616367340088
    8. ' self' → logprob: -7.667616367340088
    9. ' True' → logprob: -9.04261589050293
    10. '")' → logprob: -9.29261589050293

Token 1431: ' closing' (ID: 23436)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paren' → logprob: -0.8612430095672607
    2. ')' → logprob: -1.2362430095672607
    3. '_parent' → logprob: -2.3612430095672607
    4. 'parent' → logprob: -2.6112430095672607
    5. '')' → logprob: -2.6112430095672607
    6. '_par' → logprob: -3.2362430095672607
    7. 'par' → logprob: -5.73624324798584
    8. '   ' → logprob: -6.11124324798584
    9. 'closing' → logprob: -8.23624324798584
    10. '       ' → logprob: -8.61124324798584

Token 1432: ' parent' (ID: 5980)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paren' → logprob: -0.40926262736320496
    2. 'parent' → logprob: -1.4092626571655273
    3. '_parent' → logprob: -2.6592626571655273
    4. '_par' → logprob: -4.409262657165527
    5. ')' → logprob: -4.909262657165527
    6. ')
' → logprob: -7.159262657165527
    7. '')' → logprob: -7.659262657165527
    8. 'par' → logprob: -8.034262657165527
    9. ' parent' → logprob: -8.159262657165527
    10. '   ' → logprob: -9.659262657165527

Token 1433: 'hesis' (ID: 101333)
  Prédit: 'hesis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hesis' → logprob: -0.005140896420925856
    2. 'h' → logprob: -6.005140781402588
    3. 'heses' → logprob: -6.005140781402588
    4. 'hes' → logprob: -8.880141258239746
    5. 'esis' → logprob: -9.880141258239746
    6. ')' → logprob: -12.755141258239746
    7. 'es' → logprob: -13.755141258239746
    8. '```' → logprob: -14.755141258239746
    9. '   ' → logprob: -15.005141258239746
    10. 'hs' → logprob: -15.255141258239746

Token 1434: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010535412468016148
    2. '(self' → logprob: -5.26053524017334
    3. '(' → logprob: -6.63553524017334
    4. '
' → logprob: -6.88553524017334
    5. 'self' → logprob: -7.38553524017334
    6. '   ' → logprob: -7.51053524017334
    7. '(
' → logprob: -7.76053524017334
    8. ',' → logprob: -8.01053524017334
    9. '()' → logprob: -8.01053524017334
    10. '           ' → logprob: -9.01053524017334

Token 1435: '       ' (ID: 309)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.12750238180160522
    2. '       ' → logprob: -2.12750244140625
    3. 'result' → logprob: -7.75250244140625
    4. 'component' → logprob: -9.50250244140625
    5. ' components' → logprob: -10.37750244140625
    6. 'com' → logprob: -11.75250244140625
    7. 'parts' → logprob: -11.87750244140625
    8. '
' → logprob: -12.50250244140625
    9. 'comp' → logprob: -12.62750244140625
    10. 'tokens' → logprob: -12.62750244140625

Token 1436: ' Components' (ID: 64458)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.006787366233766079
    2. '       ' → logprob: -5.006787300109863
    3. ' components' → logprob: -10.006787300109863
    4. '
' → logprob: -11.381787300109863
    5. 'result' → logprob: -11.756787300109863
    6. 'com' → logprob: -13.381787300109863
    7. 'parts' → logprob: -13.506787300109863
    8. 'component' → logprob: -14.006787300109863
    9. 'elements' → logprob: -14.131787300109863
    10. 'depth' → logprob: -14.131787300109863

Token 1437: ' inside' (ID: 6772)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43028590083122253
    2. ' =' → logprob: -1.305285930633545
    3. ':' → logprob: -3.180285930633545
    4. ' are' → logprob: -4.305285930633545
    5. '=[]' → logprob: -4.930285930633545
    6. '=[]
' → logprob: -5.055285930633545
    7. 'are' → logprob: -5.805285930633545
    8. '_list' → logprob: -6.055285930633545
    9. '       ' → logprob: -6.055285930633545
    10. '   ' → logprob: -6.680285930633545

Token 1438: ' may' (ID: 1340)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8579286932945251
    2. 'the' → logprob: -1.60792875289917
    3. '       ' → logprob: -2.23292875289917
    4. ' are' → logprob: -2.35792875289917
    5. 'are' → logprob: -2.48292875289917
    6. ' the' → logprob: -3.73292875289917
    7. ' self' → logprob: -4.48292875289917
    8. 'can' → logprob: -4.73292875289917
    9. '(self' → logprob: -4.85792875289917
    10. ' can' → logprob: -5.23292875289917

Token 1439: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.2673361897468567
    2. ' be' → logprob: -2.392336130142212
    3. 'include' → logprob: -2.767336130142212
    4. ' consist' → logprob: -3.392336130142212
    5. 'cons' → logprob: -4.017336368560791
    6. 'contain' → logprob: -4.142336368560791
    7. ' include' → logprob: -5.392336368560791
    8. 'com' → logprob: -5.892336368560791
    9. '
' → logprob: -5.892336368560791
    10. 'continue' → logprob: -7.892336368560791

Token 1440: ' nested' (ID: 47576)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8534815311431885
    2. 'com' → logprob: -1.8534815311431885
    3. 'parsed' → logprob: -2.2284815311431885
    4. 'multiple' → logprob: -2.8534815311431885
    5. 'Compound' → logprob: -2.8534815311431885
    6. 'compound' → logprob: -3.1034815311431885
    7. 'a' → logprob: -3.2284815311431885
    8. 'combined' → logprob: -3.2284815311431885
    9. '[]' → logprob: -3.6034815311431885
    10. 'nested' → logprob: -4.228481292724609

Token 1441: ' repetitions' (ID: 192541)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.3615227937698364
    2. ' and' → logprob: -1.4865227937698364
    3. ',' → logprob: -1.6115227937698364
    4. 'components' → logprob: -2.111522674560547
    5. '   ' → logprob: -3.111522674560547
    6. ' components' → logprob: -3.736522674560547
    7. '.' → logprob: -3.736522674560547
    8. ' sequences' → logprob: -3.736522674560547
    9. ' or' → logprob: -4.111522674560547
    10. '       ' → logprob: -4.236522674560547

Token 1442: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024445008486509323
    2. 'components' → logprob: -4.149445056915283
    3. ',' → logprob: -6.274445056915283
    4. ' components' → logprob: -6.524445056915283
    5. '(self' → logprob: -7.274445056915283
    6. '
' → logprob: -7.524445056915283
    7. '_components' → logprob: -7.649445056915283
    8. ' and' → logprob: -7.774445056915283
    9. '(' → logprob: -7.774445056915283
    10. '   ' → logprob: -7.774445056915283

Token 1443: ' literals' (ID: 193569)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07159353792667389
    2. 'literal' → logprob: -2.8215935230255127
    3. 'Literal' → logprob: -5.446593761444092
    4. 'other' → logprob: -5.821593761444092
    5. ' literals' → logprob: -6.696593761444092
    6. 'se' → logprob: -7.196593761444092
    7. 'Compound' → logprob: -9.321593284606934
    8. 'compound' → logprob: -9.446593284606934
    9. 'L' → logprob: -9.821593284606934
    10. '#' → logprob: -10.821593284606934

Token 1444: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018849866464734077
    2. 'components' → logprob: -4.643849849700928
    3. ',' → logprob: -5.018849849700928
    4. ' components' → logprob: -7.018849849700928
    5. '.' → logprob: -7.393849849700928
    6. ' and' → logprob: -8.768850326538086
    7. '
' → logprob: -9.018850326538086
    8. '   ' → logprob: -9.143850326538086
    9. '.
' → logprob: -9.268850326538086
    10. '{
' → logprob: -9.518850326538086

Token 1445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4741547703742981
    2. 'components' → logprob: -0.9741547703742981
    3. ' components' → logprob: -9.849154472351074
    4. '
' → logprob: -11.474154472351074
    5. '```' → logprob: -12.099154472351074
    6. 'com' → logprob: -12.724154472351074
    7. 'parts' → logprob: -13.349154472351074
    8. '           ' → logprob: -13.849154472351074
    9. 'component' → logprob: -14.349154472351074
    10. '   ' → logprob: -14.724154472351074

Token 1446: ' """
' (ID: 7037)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.001515100128017366
    2. '       ' → logprob: -6.501514911651611
    3. ' components' → logprob: -11.37651538848877
    4. '```' → logprob: -15.12651538848877
    5. '
' → logprob: -15.37651538848877
    6. 'parts' → logprob: -15.50151538848877
    7. 'com' → logprob: -15.62651538848877
    8. 'elements' → logprob: -15.75151538848877
    9. 'result' → logprob: -16.501514434814453
    10. '           ' → logprob: -17.001514434814453

Token 1447: '       ' (ID: 309)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.00033665422233752906
    2. '       ' → logprob: -8.000336647033691
    3. ' components' → logprob: -14.000336647033691
    4. 'com' → logprob: -15.625336647033691
    5. 'result' → logprob: -17.375337600708008
    6. '```' → logprob: -17.375337600708008
    7. 'parts' → logprob: -17.500337600708008
    8. 'component' → logprob: -18.000337600708008
    9. 'elements' → logprob: -18.250337600708008
    10. 'comp' → logprob: -19.125337600708008

Token 1448: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' (adapté à ' components') → logprob: -5.9153885558771435e-06
    2. '       ' → logprob: -12.125005722045898
    3. ' components' → logprob: -15.625005722045898
    4. 'elements' → logprob: -16.1250057220459
    5. '
' → logprob: -16.5000057220459
    6. 'children' → logprob: -18.5000057220459
    7. 'parts' → logprob: -18.6250057220459
    8. 'start' → logprob: -18.8750057220459
    9. 'component' → logprob: -19.0000057220459
    10. '        
' → logprob: -19.5000057220459

Token 1449: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24137558043003082
    2. ' =' → logprob: -2.116375684738159
    3. ':' → logprob: -2.366375684738159
    4. '=[]' → logprob: -9.241375923156738
    5. '=[]
' → logprob: -10.116375923156738
    6. ' :' → logprob: -10.741375923156738
    7. '       ' → logprob: -13.116375923156738
    8. '   ' → logprob: -13.241375923156738
    9. '        ' → logprob: -14.241375923156738
    10. '[]' → logprob: -14.866375923156738

Token 1450: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.4789278507232666
    2. '[]' → logprob: -0.9789278507232666
    3. ' List' → logprob: -6.2289276123046875
    4. ' []' → logprob: -6.2289276123046875
    5. '[List' → logprob: -7.2289276123046875
    6. '[]
' → logprob: -9.103927612304688
    7. '[' → logprob: -10.103927612304688
    8. '=[]' → logprob: -11.228927612304688
    9. '[])' → logprob: -13.603927612304688
    10. 'list' → logprob: -13.853927612304688

Token 1451: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -15.125
    3. '[List' → logprob: -16.25
    4. '=' → logprob: -17.625
    5. ' =' → logprob: -18.25
    6. '```' → logprob: -19.125
    7. '<' → logprob: -19.625
    8. '   ' → logprob: -19.875
    9. '[Serialize' → logprob: -20.25
    10. '[self' → logprob: -20.375

Token 1452: 'Genome' (ID: 184055)
  Prédit: 'Genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -5.512236498361744e-07
    2. ' Genome' → logprob: -14.875000953674316
    3. 'Gene' → logprob: -17.625
    4. '
' → logprob: -18.125
    5. 'Gen' → logprob: -18.375
    6. '`' → logprob: -18.625
    7. 'Genre' → logprob: -18.75
    8. ')' → logprob: -18.875
    9. 'Grammar' → logprob: -19.0
    10. '```' → logprob: -19.125

Token 1453: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -0.00043925188947468996
    2. '[' → logprob: -7.750439167022705
    3. 'Genome' → logprob: -11.875439643859863
    4. '<Component' → logprob: -14.000439643859863
    5. '<' → logprob: -15.375439643859863
    6. 'Components' → logprob: -15.875439643859863
    7. 'component' → logprob: -16.125438690185547
    8. '@Component' → logprob: -16.625438690185547
    9. 'Code' → logprob: -16.750438690185547
    10. '[str' → logprob: -17.375438690185547

Token 1454: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06207266449928284
    2. ' =' → logprob: -2.81207275390625
    3. ']' → logprob: -9.56207275390625
    4. ')' → logprob: -10.81207275390625
    5. ']=' → logprob: -11.68707275390625
    6. '=[]' → logprob: -12.81207275390625
    7. '       ' → logprob: -13.43707275390625
    8. ')=' → logprob: -13.81207275390625
    9. '=[]
' → logprob: -15.06207275390625
    10. '[]' → logprob: -15.93707275390625

Token 1455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03632364794611931
    2. ' =' → logprob: -3.7863235473632812
    3. '       ' → logprob: -4.661323547363281
    4. 'while' → logprob: -5.661323547363281
    5. ' while' → logprob: -10.786323547363281
    6. '           ' → logprob: -11.411323547363281
    7. '   ' → logprob: -11.786323547363281
    8. '        ' → logprob: -12.036323547363281
    9. '=
' → logprob: -12.286323547363281
    10. '=[]
' → logprob: -12.536323547363281

Token 1456: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.25192990899086
    2. '[]' → logprob: -1.5019298791885376
    3. '[]

' → logprob: -14.126930236816406
    4. ' []
' → logprob: -16.751930236816406
    5. '[' → logprob: -17.501930236816406
    6. '[]"' → logprob: -17.626930236816406
    7. '[])' → logprob: -17.751930236816406
    8. '[])
' → logprob: -17.876930236816406
    9. '[
' → logprob: -19.126930236816406
    10. ' []' → logprob: -19.126930236816406

Token 1457: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00014084660506341606
    2. '       ' → logprob: -9.000141143798828
    3. 'start' → logprob: -11.125141143798828
    4. ' while' → logprob: -13.875141143798828
    5. '
' → logprob: -14.375141143798828
    6. '           ' → logprob: -15.000141143798828
    7. 'depth' → logprob: -15.000141143798828
    8. '```' → logprob: -15.125141143798828
    9. '        
' → logprob: -16.875141143798828
    10. 'prev' → logprob: -17.250141143798828

Token 1458: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0021150470711290836
    2. 'depth' → logprob: -6.252115249633789
    3. 'start' → logprob: -8.752115249633789
    4. 'paren' → logprob: -11.127115249633789
    5. 'nest' → logprob: -12.002115249633789
    6. 'open' → logprob: -13.002115249633789
    7. 'balance' → logprob: -13.377115249633789
    8. ' while' → logprob: -13.377115249633789
    9. 'level' → logprob: -13.627115249633789
    10. 'nested' → logprob: -14.627115249633789

Token 1459: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05583738535642624
    2. 'True' → logprob: -2.930837392807007
    3. ' self' → logprob: -7.680837154388428
    4. ' True' → logprob: -8.430837631225586
    5. '(self' → logprob: -8.555837631225586
    6. '(True' → logprob: -9.680837631225586
    7. '   ' → logprob: -11.805837631225586
    8. 'not' → logprob: -12.430837631225586
    9. '
' → logprob: -13.055837631225586
    10. '       ' → logprob: -13.305837631225586

Token 1460: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.0564331205387134e-05
    2. '_pos' → logprob: -12.37501049041748
    3. '   ' → logprob: -13.12501049041748
    4. '
' → logprob: -13.25001049041748
    5. '.' → logprob: -13.87501049041748
    6. '       ' → logprob: -14.50001049041748
    7. 'self' → logprob: -14.75001049041748
    8. '.
' → logprob: -15.62501049041748
    9. '_' → logprob: -15.87501049041748
    10. '._
' → logprob: -16.000011444091797

Token 1461: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2014876902103424
    2. '_pos' → logprob: -1.70148766040802
    3. 'peek' → logprob: -10.32648754119873
    4. 'parse' → logprob: -10.95148754119873
    5. '.pos' → logprob: -11.70148754119873
    6. '
' → logprob: -12.45148754119873
    7. '_parse' → logprob: -12.82648754119873
    8. 'self' → logprob: -13.32648754119873
    9. '   ' → logprob: -13.70148754119873
    10. '	pos' → logprob: -13.95148754119873

Token 1462: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.029752103611826897
    2. ' <' → logprob: -3.529752016067505
    3. '[' → logprob: -14.279751777648926
    4. '<len' → logprob: -14.904751777648926
    5. '<n' → logprob: -15.404751777648926
    6. '   ' → logprob: -16.404752731323242
    7. '>' → logprob: -16.904752731323242
    8. '<class' → logprob: -16.904752731323242
    9. '<size' → logprob: -17.029752731323242
    10. ' ' → logprob: -17.279752731323242

Token 1463: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004372254479676485
    2. ' self' → logprob: -8.125436782836914
    3. 'True' → logprob: -9.000436782836914
    4. '0' → logprob: -12.000436782836914
    5. '           ' → logprob: -12.500436782836914
    6. '(self' → logprob: -13.000436782836914
    7. '       ' → logprob: -13.250436782836914
    8. '
' → logprob: -13.750436782836914
    9. '1' → logprob: -14.250436782836914
    10. 'not' → logprob: -14.625436782836914

Token 1464: '._' (ID: 2697)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00271952198818326
    2. '._' → logprob: -6.377719402313232
    3. 'self' → logprob: -7.252719402313232
    4. '_len' → logprob: -8.87771987915039
    5. '_code' → logprob: -9.37771987915039
    6. '_self' → logprob: -10.12771987915039
    7. 'length' → logprob: -11.62771987915039
    8. '```' → logprob: -11.87771987915039
    9. '_data' → logprob: -12.75271987915039
    10. ' _' → logprob: -12.75271987915039

Token 1465: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0001242772996192798
    2. '_length' → logprob: -9.000123977661133
    3. ' length' → logprob: -15.000123977661133
    4. 'data' → logprob: -15.125123977661133
    5. '	length' → logprob: -15.875123977661133
    6. '```' → logprob: -17.750123977661133
    7. '   ' → logprob: -18.000123977661133
    8. '(length' → logprob: -18.250123977661133
    9. '_data' → logprob: -18.250123977661133
    10. '.length' → logprob: -18.875123977661133

Token 1466: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16722604632377625
    2. ' and' → logprob: -1.9172260761260986
    3. ':
' → logprob: -5.1672258377075195
    4. '           ' → logprob: -7.0422258377075195
    5. ':' → logprob: -7.9172258377075195
    6. '       ' → logprob: -10.66722583770752
    7. '   ' → logprob: -12.41722583770752
    8. '):
' → logprob: -12.91722583770752
    9. '```' → logprob: -13.41722583770752
    10. '	and' → logprob: -13.54222583770752

Token 1467: '           ' (ID: 352)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0500197559595108
    2. '           ' → logprob: -3.0500197410583496
    3. 'if' → logprob: -7.17501974105835
    4. 'c' → logprob: -8.050020217895508
    5. ' curr' → logprob: -8.300020217895508
    6. 'char' → logprob: -10.425020217895508
    7. ' if' → logprob: -11.425020217895508
    8. 'current' → logprob: -11.550020217895508
    9. '	curr' → logprob: -11.550020217895508
    10. 'cur' → logprob: -11.800020217895508

Token 1468: ' if' (ID: 538)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.06247556209564209
    2. 'if' (adapté à ' if') → logprob: -2.8124756813049316
    3. 'comp' → logprob: -8.187475204467773
    4. 'char' → logprob: -9.187475204467773
    5. '           ' → logprob: -10.437475204467773
    6. 'ch' → logprob: -10.562475204467773
    7. 'c' → logprob: -10.687475204467773
    8. 'cur' → logprob: -11.437475204467773
    9. 'current' → logprob: -11.562475204467773
    10. ' curr' → logprob: -11.687475204467773

Token 1469: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.796184723294573e-06
    2. ' self' → logprob: -12.500005722045898
    3. '(self' → logprob: -13.250005722045898
    4. '
' → logprob: -15.375005722045898
    5. '           ' → logprob: -18.0000057220459
    6. '       ' → logprob: -18.5000057220459
    7. '   ' → logprob: -18.7500057220459
    8. '	self' → logprob: -19.1250057220459
    9. '[self' → logprob: -19.3750057220459
    10. '               ' → logprob: -20.0000057220459

Token 1470: '._' (ID: 2697)
  Prédit: '_pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pe' → logprob: -0.6008332967758179
    2. '_data' → logprob: -1.3508332967758179
    3. '._' → logprob: -1.8508332967758179
    4. '_' → logprob: -3.8508334159851074
    5. '   ' → logprob: -6.100833415985107
    6. '
' → logprob: -6.100833415985107
    7. '_current' → logprob: -6.350833415985107
    8. '_p' → logprob: -6.600833415985107
    9. '[_' → logprob: -6.975833415985107
    10. '           ' → logprob: -7.350833415985107

Token 1471: 'peek' (ID: 163275)
  Prédit: '_pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pe' → logprob: -0.2464035302400589
    2. 'peek' → logprob: -1.7464035749435425
    3. 'data' → logprob: -3.371403455734253
    4. '_data' → logprob: -4.871403694152832
    5. '_parse' → logprob: -7.246403694152832
    6. 'Peek' → logprob: -7.871403694152832
    7. '.peek' → logprob: -8.371403694152832
    8. '_' → logprob: -9.246403694152832
    9. '_check' → logprob: -9.621403694152832
    10. '_p' → logprob: -9.746403694152832

Token 1472: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018322018906474113
    2. '()==' → logprob: -4.018321990966797
    3. '==' → logprob: -9.143321990966797
    4. ')' → logprob: -9.893321990966797
    5. ')==' → logprob: -11.518321990966797
    6. '()
' → logprob: -12.768321990966797
    7. '()=="' → logprob: -14.768321990966797
    8. '())' → logprob: -15.018321990966797
    9. ']==' → logprob: -15.143321990966797
    10. ' ==' → logprob: -15.643321990966797

Token 1473: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7330691814422607
    2. '()' → logprob: -1.3580691814422607
    3. '()==' → logprob: -1.6080691814422607
    4. ')' → logprob: -3.2330691814422607
    5. ')==' → logprob: -3.9830691814422607
    6. ' ==' → logprob: -5.60806941986084
    7. '=' → logprob: -8.60806941986084
    8. ']==' → logprob: -9.35806941986084
    9. '==
' → logprob: -9.73306941986084
    10. '```' → logprob: -10.73306941986084

Token 1474: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.014189710840582848
    2. ')' → logprob: -4.264189720153809
    3. '")' → logprob: -10.639189720153809
    4. ' ')' → logprob: -14.389189720153809
    5. '   ' → logprob: -14.639189720153809
    6. '`)' → logprob: -14.889189720153809
    7. '']' → logprob: -15.389189720153809
    8. ' ')'' → logprob: -15.389189720153809
    9. ''){' → logprob: -16.264188766479492
    10. '')"' → logprob: -16.889188766479492

Token 1475: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09174267947673798
    2. '               ' → logprob: -3.216742753982544
    3. '):
' → logprob: -3.341742753982544
    4. '           ' → logprob: -4.841742515563965
    5. ':' → logprob: -5.841742515563965
    6. ')' → logprob: -7.216742515563965
    7. ''):
' → logprob: -8.716742515563965
    8. '():
' → logprob: -9.216742515563965
    9. '):' → logprob: -9.341742515563965
    10. '                   ' → logprob: -9.341742515563965

Token 1476: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.351697033504024e-05
    2. '           ' → logprob: -10.125083923339844
    3. 'break' → logprob: -10.875083923339844
    4. '	           ' → logprob: -11.750083923339844
    5. '                   ' → logprob: -12.125083923339844
    6. '<|end|>' → logprob: -12.875083923339844
    7. ' break' → logprob: -13.500083923339844
    8. '		       ' → logprob: -13.625083923339844
    9. ':' → logprob: -14.125083923339844
    10. '       ' → logprob: -14.250083923339844

Token 1477: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.005334909074008465
    2. '           ' → logprob: -5.755334854125977
    3. '               ' → logprob: -6.630334854125977
    4. ' break' → logprob: -7.630334854125977
    5. 'return' → logprob: -8.130334854125977
    6. '	break' → logprob: -10.130334854125977
    7. '		' → logprob: -11.505334854125977
    8. '_break' → logprob: -13.755334854125977
    9. '                   ' → logprob: -14.005334854125977
    10. '			' → logprob: -14.380334854125977

Token 1478: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027575582498684525
    2. '               ' → logprob: -8.625275611877441
    3. '            
' → logprob: -10.250275611877441
    4. '<|end|>' → logprob: -10.500275611877441
    5. ',' → logprob: -12.125275611877441
    6. '		' → logprob: -12.250275611877441
    7. '
' → logprob: -12.250275611877441
    8. '<|end|>' → logprob: -12.625275611877441
    9. '       ' → logprob: -13.000275611877441
    10. 'self' → logprob: -13.125275611877441

Token 1479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004188213497400284
    2. '               ' → logprob: -5.504188060760498
    3. 'component' → logprob: -10.004188537597656
    4. 'self' → logprob: -10.379188537597656
    5. '                   ' → logprob: -11.879188537597656
    6. 'components' → logprob: -12.004188537597656
    7. '   ' → logprob: -12.754188537597656
    8. '       ' → logprob: -12.754188537597656
    9. 'comp' → logprob: -13.004188537597656
    10. '		' → logprob: -13.129188537597656

Token 1480: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.00012594614236149937
    2. 'component' → logprob: -9.000125885009766
    3. '           ' → logprob: -13.750125885009766
    4. '               ' → logprob: -14.125125885009766
    5. ' comp' → logprob: -15.000125885009766
    6. 'elem' → logprob: -15.625125885009766
    7. 'element' → logprob: -15.875125885009766
    8. 'cmp' → logprob: -18.000125885009766
    9. '	comp' → logprob: -18.250125885009766
    10. 'child' → logprob: -18.875125885009766

Token 1481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869175314903259
    2. ' =' → logprob: -1.1369175910949707
    3. '           ' → logprob: -10.011917114257812
    4. '               ' → logprob: -13.761917114257812
    5. '=None' → logprob: -15.886917114257812
    6. '       ' → logprob: -16.011917114257812
    7. '=_' → logprob: -16.261917114257812
    8. 'comp' → logprob: -17.136917114257812
    9. '=
' → logprob: -17.511917114257812
    10. '            ' → logprob: -17.636917114257812

Token 1482: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020497082732617855
    2. ' self' → logprob: -8.500205039978027
    3. '           ' → logprob: -13.500205039978027
    4. '               ' → logprob: -18.75020408630371
    5. '(self' → logprob: -19.62520408630371
    6. '	self' → logprob: -20.00020408630371
    7. ' ' → logprob: -21.75020408630371
    8. '   ' → logprob: -21.75020408630371
    9. '         ' → logprob: -21.87520408630371
    10. '       ' → logprob: -22.12520408630371

Token 1483: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5759637951850891
    2. '_parse' → logprob: -0.8259637951850891
    3. '.parse' → logprob: -10.700963973999023
    4. ' _' → logprob: -13.950963973999023
    5. '   ' → logprob: -14.825963973999023
    6. '.' → logprob: -14.950963973999023
    7. '_parser' → logprob: -16.325963973999023
    8. '_Parse' → logprob: -16.450963973999023
    9. '->_' → logprob: -17.325963973999023
    10. '_.' → logprob: -17.325963973999023

Token 1484: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.011047935113310814
    2. '_parse' → logprob: -4.511047840118408
    3. ' parse' → logprob: -16.38604736328125
    4. '.parse' → logprob: -17.38604736328125
    5. '(parse' → logprob: -17.76104736328125
    6. '	parse' → logprob: -17.88604736328125
    7. '=parse' → logprob: -18.63604736328125
    8. '
' → logprob: -19.76104736328125
    9. 'peek' → logprob: -19.88604736328125
    10. '_parser' → logprob: -20.88604736328125

Token 1485: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.061969030648469925
    2. 'element' → logprob: -2.811969041824341
    3. '_component' → logprob: -13.811968803405762
    4. 'Element' → logprob: -15.186968803405762
    5. ' element' → logprob: -16.811969757080078
    6. 'component' → logprob: -17.561969757080078
    7. 'elem' → logprob: -18.311969757080078
    8. '(element' → logprob: -18.436969757080078
    9. '_elements' → logprob: -18.561969757080078
    10. 'lement' → logprob: -18.686969757080078

Token 1486: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030585157219320536
    2. '()' → logprob: -6.628058433532715
    3. '()
' → logprob: -6.628058433532715
    4. '(' → logprob: -9.003058433532715
    5. 'if' → logprob: -9.628058433532715
    6. '       ' → logprob: -10.378058433532715
    7. '(
' → logprob: -10.628058433532715
    8. '               ' → logprob: -10.753058433532715
    9. ')' → logprob: -10.878058433532715
    10. '
' → logprob: -10.878058433532715

Token 1487: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3438327843905427e-05
    2. 'if' → logprob: -11.50002384185791
    3. '               ' → logprob: -12.87502384185791
    4. '	       ' → logprob: -12.87502384185791
    5. '       ' → logprob: -13.12502384185791
    6. '<|end|>' → logprob: -13.25002384185791
    7. ' if' → logprob: -13.50002384185791
    8. '		' → logprob: -13.75002384185791
    9. '```' → logprob: -15.12502384185791
    10. '[' → logprob: -15.37502384185791

Token 1488: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6931878328323364
    2. 'if' (adapté à ' if') → logprob: -0.6931878328323364
    3. ' if' → logprob: -10.193187713623047
    4. '       ' → logprob: -13.443187713623047
    5. '               ' → logprob: -14.193187713623047
    6. '   ' → logprob: -14.568187713623047
    7. 'If' → logprob: -15.943187713623047
    8. '	if' → logprob: -16.068187713623047
    9. '```' → logprob: -16.068187713623047
    10. '		' → logprob: -16.568187713623047

Token 1489: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.03804241120815277
    2. ' comp' → logprob: -3.2880423069000244
    3. '	comp' → logprob: -14.413042068481445
    4. '           ' → logprob: -15.913042068481445
    5. 'com' → logprob: -16.538042068481445
    6. '(comp' → logprob: -16.663042068481445
    7. '   ' → logprob: -17.038042068481445
    8. 'Comp' → logprob: -17.788042068481445
    9. ' ' → logprob: -17.788042068481445
    10. 'None' → logprob: -18.288042068481445

Token 1490: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5759629607200623
    2. 'is' → logprob: -0.8259629607200623
    3. ')' → logprob: -11.325963020324707
    4. '
' → logprob: -13.200963020324707
    5. ')is' → logprob: -13.200963020324707
    6. '           ' → logprob: -13.325963020324707
    7. '<|end|>' → logprob: -13.700963020324707
    8. '<|end|>' → logprob: -14.200963020324707
    9. '```' → logprob: -14.325963020324707
    10. '	is' → logprob: -14.325963020324707

Token 1491: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0012291580205783248
    2. 'not' → logprob: -6.751229286193848
    3. ' None' → logprob: -9.751229286193848
    4. ' not' → logprob: -14.251229286193848
    5. 'Not' → logprob: -17.37622833251953
    6. '(None' → logprob: -17.50122833251953
    7. '_None' → logprob: -18.25122833251953
    8. '   ' → logprob: -18.50122833251953
    9. 'none' → logprob: -19.37622833251953
    10. '	not' → logprob: -20.75122833251953

Token 1492: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03756442666053772
    2. ':' → logprob: -3.787564516067505
    3. ':
' → logprob: -4.412564277648926
    4. '           ' → logprob: -6.662564277648926
    5. '                   ' → logprob: -8.037564277648926
    6. '<|end|>' → logprob: -8.912564277648926
    7. '.' → logprob: -9.162564277648926
    8. '	           ' → logprob: -9.912564277648926
    9. '              ' → logprob: -10.287564277648926
    10. '                       ' → logprob: -10.412564277648926

Token 1493: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.7530574849806726e-05
    2. '           ' → logprob: -10.625057220458984
    3. 'break' → logprob: -11.375057220458984
    4. '                   ' → logprob: -11.500057220458984
    5. '	           ' → logprob: -12.375057220458984
    6. '              ' → logprob: -13.250057220458984
    7. '   ' → logprob: -13.250057220458984
    8. '                ' → logprob: -14.375057220458984
    9. 'return' → logprob: -14.500057220458984
    10. 'continue' → logprob: -14.625057220458984

Token 1494: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0652424618601799
    2. '               ' → logprob: -2.8152425289154053
    3. 'raise' → logprob: -6.315242290496826
    4. ' break' → logprob: -6.815242290496826
    5. '           ' → logprob: -8.190242767333984
    6. '	break' → logprob: -9.815242767333984
    7. '                   ' → logprob: -10.940242767333984
    8. '   ' → logprob: -12.440242767333984
    9. ' raise' → logprob: -12.690242767333984
    10. '#' → logprob: -13.065242767333984

Token 1495: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013500562636181712
    2. '		' → logprob: -9.87513542175293
    3. '               ' → logprob: -10.37513542175293
    4. '	       ' → logprob: -11.25013542175293
    5. '
' → logprob: -11.62513542175293
    6. '       ' → logprob: -12.00013542175293
    7. '<|end|>' → logprob: -12.50013542175293
    8. 'else' → logprob: -12.50013542175293
    9. '            
' → logprob: -12.75013542175293
    10. '          ' → logprob: -13.00013542175293

Token 1496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023399698548018932
    2. 'components' → logprob: -6.877339839935303
    3. '               ' → logprob: -7.002339839935303
    4. '       ' → logprob: -8.002340316772461
    5. '                   ' → logprob: -11.377340316772461
    6. ' components' → logprob: -11.502340316772461
    7. '		' → logprob: -11.502340316772461
    8. '<|end|>' → logprob: -12.127340316772461
    9. '          ' → logprob: -12.502340316772461
    10. '	       ' → logprob: -12.627340316772461

Token 1497: ' components' (ID: 10674)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09040503948926926
    2. 'components' (adapté à ' components') → logprob: -2.465404987335205
    3. '               ' → logprob: -7.215404987335205
    4. ' components' → logprob: -7.340404987335205
    5. '       ' → logprob: -10.215405464172363
    6. '   ' → logprob: -11.465405464172363
    7. '                   ' → logprob: -11.590405464172363
    8. '.components' → logprob: -12.465405464172363
    9. '	       ' → logprob: -12.715405464172363
    10. '```' → logprob: -12.965405464172363

Token 1498: '.append' (ID: 3709)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.881733775138855
    2. '.append' → logprob: -0.881733775138855
    3. '               ' → logprob: -1.881733775138855
    4. '.' → logprob: -4.2567338943481445
    5. ':' → logprob: -5.7567338943481445
    6. ':
' → logprob: -6.7567338943481445
    7. '                   ' → logprob: -9.006733894348145
    8. '<|end|>' → logprob: -9.006733894348145
    9. '.add' → logprob: -9.506733894348145
    10. ')' → logprob: -9.506733894348145

Token 1499: '(comp' (ID: 60272)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.014258346520364285
    2. '(comp' → logprob: -4.26425838470459
    3. ' comp' → logprob: -9.26425838470459
    4. '	comp' → logprob: -15.88925838470459
    5. 'component' → logprob: -18.264257431030273
    6. 'com' → logprob: -18.639257431030273
    7. '.comp' → logprob: -18.639257431030273
    8. 'compound' → logprob: -20.514257431030273
    9. '(' → logprob: -20.639257431030273
    10. 'compl' → logprob: -20.639257431030273

Token 1500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1452246457338333
    2. '       ' → logprob: -2.1452245712280273
    3. ')
' → logprob: -4.020224571228027
    4. ')return' → logprob: -9.770224571228027
    5. '           ' → logprob: -10.020224571228027
    6. '
' → logprob: -10.145224571228027
    7. '<|end|>' → logprob: -11.145224571228027
    8. 'return' → logprob: -12.770224571228027
    9. '<|end|>' → logprob: -12.770224571228027
    10. '   ' → logprob: -13.020224571228027

Token 1501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030232255812734365
    2. '
' → logprob: -6.003023147583008
    3. '<|end|>' → logprob: -8.128023147583008
    4. '        
' → logprob: -9.503023147583008
    5. 'return' → logprob: -9.753023147583008
    6. '           ' → logprob: -10.128023147583008
    7. '```' → logprob: -11.378023147583008
    8. ')' → logprob: -11.378023147583008
    9. '        ' → logprob: -11.503023147583008
    10. '	' → logprob: -11.753023147583008

Token 1502: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.012049345299601555
    2. '       ' → logprob: -4.512049198150635
    3. 'return' → logprob: -7.262049198150635
    4. ' if' → logprob: -8.262049674987793
    5. '
' → logprob: -11.012049674987793
    6. '   ' → logprob: -11.137049674987793
    7. '           ' → logprob: -12.012049674987793
    8. '```' → logprob: -13.637049674987793
    9. '        
' → logprob: -14.012049674987793
    10. '	if' → logprob: -14.512049674987793

Token 1503: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12833912670612335
    2. 'not' → logprob: -2.1283390522003174
    3. ' not' → logprob: -7.0033392906188965
    4. ' len' → logprob: -7.7533392906188965
    5. 'components' → logprob: -9.878338813781738
    6. '(len' → logprob: -11.503338813781738
    7. '   ' → logprob: -12.628338813781738
    8. 'self' → logprob: -13.503338813781738
    9. 'length' → logprob: -13.628338813781738
    10. '           ' → logprob: -13.753338813781738

Token 1504: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -2.7610454708337784e-05
    2. ' components' → logprob: -10.500027656555176
    3. 'self' → logprob: -17.37502670288086
    4. '_components' → logprob: -18.00002670288086
    5. '.components' → logprob: -18.12502670288086
    6. '
' → logprob: -18.25002670288086
    7. '/components' → logprob: -20.87502670288086
    8. 'component' → logprob: -21.12502670288086
    9. '   ' → logprob: -21.62502670288086
    10. 'Components' → logprob: -22.62502670288086

Token 1505: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.354964017868042
    2. ':' → logprob: -1.229964017868042
    3. '           ' → logprob: -6.104964256286621
    4. '==' → logprob: -6.479964256286621
    5. ':return' → logprob: -6.604964256286621
    6. '[' → logprob: -6.854964256286621
    7. 'return' → logprob: -8.729964256286621
    8. '       ' → logprob: -9.604964256286621
    9. ' ==' → logprob: -10.354964256286621
    10. '=' → logprob: -11.104964256286621

Token 1506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004788128426298499
    2. 'raise' → logprob: -8.125478744506836
    3. 'return' → logprob: -9.500478744506836
    4. '       ' → logprob: -9.500478744506836
    5. '               ' → logprob: -12.500478744506836
    6. ' raise' → logprob: -12.750478744506836
    7. '   ' → logprob: -12.750478744506836
    8. ':
' → logprob: -12.750478744506836
    9. '{return' → logprob: -12.750478744506836
    10. ':' → logprob: -12.875478744506836

Token 1507: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.3873423635959625
    2. 'return' → logprob: -1.1373423337936401
    3. '           ' → logprob: -7.76234245300293
    4. ' raise' → logprob: -10.13734245300293
    5. '#' (adapté à ' #') → logprob: -12.76234245300293
    6. ' return' → logprob: -12.88734245300293
    7. '       ' → logprob: -15.88734245300293
    8. '```' → logprob: -15.88734245300293
    9. 'raises' → logprob: -16.01234245300293
    10. 'Raise' → logprob: -16.01234245300293

Token 1508: ' Empty' (ID: 40062)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3869647979736328
    2. 'raise' → logprob: -1.1369647979736328
    3. '#' → logprob: -9.386964797973633
    4. '           ' → logprob: -12.511964797973633
    5. ' raise' → logprob: -12.511964797973633
    6. '       ' → logprob: -13.511964797973633
    7. ' return' → logprob: -13.886964797973633
    8. 'Raise' → logprob: -15.886964797973633
    9. 'raises' → logprob: -17.136964797973633
    10. '```' → logprob: -17.511964797973633

Token 1509: ' parentheses' (ID: 180602)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.04681127145886421
    2. 'return' → logprob: -3.17181134223938
    3. 'Compound' → logprob: -6.671811103820801
    4. 'Sequence' → logprob: -6.921811103820801
    5. '
' → logprob: -7.171811103820801
    6. '           ' → logprob: -7.796811103820801
    7. ' return' → logprob: -9.2968111038208
    8. ' Literal' → logprob: -9.6718111038208
    9. 'sequence' → logprob: -10.1718111038208
    10. '_literal' → logprob: -10.2968111038208

Token 1510: ' could' (ID: 2023)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43652069568634033
    2. 'return' → logprob: -1.0615206956863403
    3. 'raise' → logprob: -5.936520576477051
    4. ' return' → logprob: -6.061520576477051
    5. '               ' → logprob: -6.936520576477051
    6. ':
' → logprob: -7.311520576477051
    7. ',' → logprob: -7.436520576477051
    8. ':return' → logprob: -8.81152057647705
    9. '
' → logprob: -8.93652057647705
    10. '       ' → logprob: -9.18652057647705

Token 1511: ' theoretically' (ID: 139661)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15605954825878143
    2. 'raise' → logprob: -3.281059503555298
    3. 'be' → logprob: -3.406059503555298
    4. '           ' → logprob: -3.531059503555298
    5. ' be' → logprob: -3.781059503555298
    6. ' return' → logprob: -3.906059503555298
    7. ' raise' → logprob: -7.156059741973877
    8. '#' → logprob: -7.656059741973877
    9. '            ' → logprob: -9.531059265136719
    10. '       ' → logprob: -10.031059265136719

Token 1512: ' occur' (ID: 11416)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05243101716041565
    2. 'be' → logprob: -3.052431106567383
    3. 'raise' → logprob: -5.927431106567383
    4. ' be' → logprob: -7.802431106567383
    5. 'represent' → logprob: -8.177431106567383
    6. ' return' → logprob: -8.177431106567383
    7. '           ' → logprob: -8.927431106567383
    8. '#' → logprob: -10.552431106567383
    9. '```' → logprob: -10.677431106567383
    10. '
' → logprob: -11.927431106567383

Token 1513: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03153219074010849
    2. 'return' → logprob: -3.5315322875976562
    3. ',' → logprob: -6.906532287597656
    4. '               ' → logprob: -7.656532287597656
    5. ' return' → logprob: -9.281532287597656
    6. 'raise' → logprob: -9.281532287597656
    7. '       ' → logprob: -10.031532287597656
    8. '
' → logprob: -10.406532287597656
    9. '```' → logprob: -10.656532287597656
    10. ';' → logprob: -12.531532287597656

Token 1514: ' problem' (ID: 4792)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.09303011000156403
    2. '#' → logprob: -2.5930302143096924
    3. 'return' → logprob: -4.593029975891113
    4. '           ' → logprob: -5.593029975891113
    5. ' raise' → logprob: -8.593029975891113
    6. '               ' → logprob: -12.093029975891113
    7. '       ' → logprob: -13.718029975891113
    8. 'self' → logprob: -14.218029975891113
    9. '	raise' → logprob: -14.718029975891113
    10. ' #' → logprob: -14.843029975891113

Token 1515: ' states' (ID: 9407)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2194751352071762
    2. 'raises' → logprob: -2.594475030899048
    3. 'raise' → logprob: -3.594475030899048
    4. '```' → logprob: -4.094475269317627
    5. '               ' → logprob: -4.219475269317627
    6. '       ' → logprob: -4.344475269317627
    7. 'class' → logprob: -4.594475269317627
    8. '#' → logprob: -5.344475269317627
    9. ',' → logprob: -5.344475269317627
    10. 'does' → logprob: -5.719475269317627

Token 1516: ' seq' (ID: 26775)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.3001592755317688
    2. '           ' → logprob: -2.300159215927124
    3. 'that' → logprob: -2.300159215927124
    4. 'they' → logprob: -4.550159454345703
    5. '       ' → logprob: -4.675159454345703
    6. 'we' → logprob: -4.800159454345703
    7. 'it' → logprob: -5.800159454345703
    8. 'the' → logprob: -5.800159454345703
    9. '#' → logprob: -5.800159454345703
    10. 'not' → logprob: -5.925159454345703

Token 1517: ' length' (ID: 5517)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0593133419752121
    2. '       ' → logprob: -3.6843132972717285
    3. 'ue' → logprob: -4.1843132972717285
    4. '   ' → logprob: -5.8093132972717285
    5. '           ' → logprob: -5.9343132972717285
    6. 'e' → logprob: -6.0593132972717285
    7. 'uen' → logprob: -6.4343132972717285
    8. '```' → logprob: -6.4343132972717285
    9. '               ' → logprob: -6.5593132972717285
    10. 'uent' → logprob: -6.5593132972717285

Token 1518: ' >=' (ID: 5064)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4085429310798645
    2. '       ' → logprob: -1.1585428714752197
    3. 'raise' → logprob: -4.158543109893799
    4. '               ' → logprob: -6.158543109893799
    5. '
' → logprob: -6.533543109893799
    6. 'return' → logprob: -7.408543109893799
    7. ',' → logprob: -7.408543109893799
    8. ' raise' → logprob: -8.15854263305664
    9. '...' → logprob: -9.53354263305664
    10. '          ' → logprob: -9.53354263305664

Token 1519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.750001907348633
    3. '   ' → logprob: -15.125001907348633
    4. '       ' → logprob: -15.500001907348633
    5. '2' → logprob: -15.750001907348633
    6. '
' → logprob: -16.000001907348633
    7. '           ' → logprob: -17.250001907348633
    8. '0' → logprob: -17.625001907348633
    9. '```' → logprob: -18.500001907348633
    10. '#' → logprob: -20.500001907348633

Token 1520: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1706535816192627
    2. '       ' → logprob: -2.1706535816192627
    3. '
' → logprob: -3.5456535816192627
    4. '               ' → logprob: -5.420653343200684
    5. 'raise' → logprob: -5.670653343200684
    6. 'return' → logprob: -5.920653343200684
    7. ',' → logprob: -5.920653343200684
    8. ' raise' → logprob: -7.920653343200684
    9. '```' → logprob: -9.795653343200684
    10. ' return' → logprob: -10.295653343200684

Token 1521: ' we'll' (ID: 22782)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.4048099219799042
    2. '           ' → logprob: -1.2798099517822266
    3. 'return' → logprob: -3.1548099517822266
    4. '       ' → logprob: -4.654809951782227
    5. '               ' → logprob: -6.904809951782227
    6. 'so' → logprob: -7.529809951782227
    7. ' raise' → logprob: -7.654809951782227
    8. '#' → logprob: -7.779809951782227
    9. '
' → logprob: -10.279809951782227
    10. '          ' → logprob: -10.654809951782227

Token 1522: ' treat' (ID: 4665)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.01896321401000023
    2. 'return' → logprob: -4.01896333694458
    3. '           ' → logprob: -7.64396333694458
    4. '       ' → logprob: -9.018962860107422
    5. 'continue' → logprob: -9.643962860107422
    6. ' raise' → logprob: -9.893962860107422
    7. '```' → logprob: -10.518962860107422
    8. 'handle' → logprob: -10.893962860107422
    9. '   ' → logprob: -11.268962860107422
    10. '
' → logprob: -11.268962860107422

Token 1523: ' empty' (ID: 8213)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.24546781182289124
    2. 'them' → logprob: -2.7454679012298584
    3. 'that' → logprob: -2.9954679012298584
    4. 'as' → logprob: -3.6204679012298584
    5. 'Value' → logprob: -3.8704679012298584
    6. 'it' → logprob: -3.9954679012298584
    7. '
' → logprob: -4.245467662811279
    8. 'self' → logprob: -5.370467662811279
    9. '```' → logprob: -5.495467662811279
    10. 'components' → logprob: -5.995467662811279

Token 1524: ' as' (ID: 472)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.2772405445575714
    2. 'return' → logprob: -1.652240514755249
    3. 'as' → logprob: -3.902240514755249
    4. ' as' → logprob: -4.027240753173828
    5. ' return' → logprob: -5.402240753173828
    6. 'component' → logprob: -6.402240753173828
    7. 'raise' → logprob: -6.402240753173828
    8. ' components' → logprob: -6.527240753173828
    9. 'sequence' → logprob: -6.527240753173828
    10. '           ' → logprob: -7.402240753173828

Token 1525: ' error' (ID: 2915)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -1.981667537620524e-06
    2. ' Literal' → logprob: -13.500001907348633
    3. '_literal' → logprob: -15.375001907348633
    4. 'literal' → logprob: -15.375001907348633
    5. ' literal' → logprob: -17.750001907348633
    6. 'None' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. 'Invalid' → logprob: -18.625001907348633
    9. 'raise' → logprob: -18.625001907348633
    10. '_LITERAL' → logprob: -18.625001907348633

Token 1526: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35940030217170715
    2. '           ' → logprob: -1.2344002723693848
    3. 'raise' → logprob: -4.734400272369385
    4. '
' → logprob: -6.734400272369385
    5. '               ' → logprob: -7.859400272369385
    6. ' raise' → logprob: -8.484400749206543
    7. ',' → logprob: -8.609400749206543
    8. '```' → logprob: -10.234400749206543
    9. '   ' → logprob: -10.609400749206543
    10. '        
' → logprob: -11.359400749206543

Token 1527: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03937114030122757
    2. '       ' → logprob: -3.2893712520599365
    3. 'raise' → logprob: -6.664371013641357
    4. '               ' → logprob: -10.289371490478516
    5. '   ' → logprob: -11.789371490478516
    6. '```' → logprob: -11.789371490478516
    7. ' raise' → logprob: -12.664371490478516
    8. '         ' → logprob: -15.664371490478516
    9. '          ' → logprob: -15.789371490478516
    10. '                   ' → logprob: -16.414371490478516

Token 1528: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -8.554343366995454e-05
    2. '           ' → logprob: -10.000085830688477
    3. ' raise' → logprob: -10.250085830688477
    4. '               ' → logprob: -12.500085830688477
    5. '```' → logprob: -14.750085830688477
    6. '                   ' → logprob: -15.625085830688477
    7. '	raise' → logprob: -15.750085830688477
    8. '   ' → logprob: -15.875085830688477
    9. '
' → logprob: -17.000085830688477
    10. 'self' → logprob: -17.250085830688477

Token 1529: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: 0.0
    2. ' Value' → logprob: -17.5
    3. 'value' → logprob: -19.25
    4. '
' → logprob: -21.125
    5. '	Value' → logprob: -21.125
    6. '_value' → logprob: -21.5
    7. '   ' → logprob: -22.375
    8. '_Value' → logprob: -23.125
    9. 'Syntax' → logprob: -23.25
    10. '(Value' → logprob: -23.375

Token 1530: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0009120595059357584
    2. 'Value' → logprob: -7.000912189483643
    3. 'rror' → logprob: -14.750911712646484
    4. '```' → logprob: -17.375911712646484
    5. 'SError' → logprob: -18.000911712646484
    6. 'Val' → logprob: -19.500911712646484
    7. 'Unexpected' → logprob: -19.625911712646484
    8. '...' → logprob: -20.000911712646484
    9. 'LError' → logprob: -20.000911712646484
    10. '
' → logprob: -20.125911712646484

Token 1531: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0003210422000847757
    2. '(f' → logprob: -8.375321388244629
    3. '(' → logprob: -9.375321388244629
    4. '('' → logprob: -12.500321388244629
    5. '(
' → logprob: -13.875321388244629
    6. '("'' → logprob: -14.625321388244629
    7. '("("' → logprob: -15.500321388244629
    8. '           ' → logprob: -15.875321388244629
    9. 'f' → logprob: -16.500320434570312
    10. '("")' → logprob: -17.000320434570312

Token 1532: 'Empty' (ID: 5692)
  Prédit: 'Empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Empty' → logprob: -0.5768601298332214
    2. '"' → logprob: -0.8268601298332214
    3. 'Unexpected' → logprob: -7.826859951019287
    4. 'f' → logprob: -8.451860427856445
    5. 'Expected' → logprob: -8.576860427856445
    6. ''' → logprob: -10.701860427856445
    7. 'Expression' → logprob: -11.076860427856445
    8. 'Invalid' → logprob: -11.451860427856445
    9. 'empty' → logprob: -11.576860427856445
    10. 'Input' → logprob: -11.576860427856445

Token 1533: ' parentheses' (ID: 180602)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.553104817867279
    2. ' parentheses' → logprob: -1.0531048774719238
    3. 'sequence' → logprob: -2.928104877471924
    4. ' parent' → logprob: -5.053104877471924
    5. ' sequence' → logprob: -5.178104877471924
    6. 'content' → logprob: -6.178104877471924
    7. '(' → logprob: -6.303104877471924
    8. 'paren' → logprob: -6.553104877471924
    9. '_parent' → logprob: -6.803104877471924
    10. 'component' → logprob: -7.178104877471924

Token 1534: ' are' (ID: 553)
  Prédit: ')")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')")
' → logprob: -0.5716304779052734
    2. '")
' → logprob: -2.0716304779052734
    3. ' at' → logprob: -2.1966304779052734
    4. ')' → logprob: -2.3216304779052734
    5. '       ' → logprob: -2.8216304779052734
    6. '")' → logprob: -4.321630477905273
    7. ' found' → logprob: -5.821630477905273
    8. '')")
' → logprob: -6.071630477905273
    9. 'found' → logprob: -6.196630477905273
    10. ' or' → logprob: -6.321630477905273

Token 1535: ' invalid' (ID: 15796)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.001671730075031519
    2. 'invalid' → logprob: -6.50167179107666
    3. ' not' → logprob: -8.75167179107666
    4. 'unexpected' → logprob: -12.25167179107666
    5. 'dis' → logprob: -13.00167179107666
    6. 'for' → logprob: -13.00167179107666
    7. 'illegal' → logprob: -14.00167179107666
    8. 'unsupported' → logprob: -14.75167179107666
    9. '   ' → logprob: -15.62667179107666
    10. 'empty' → logprob: -15.62667179107666

Token 1536: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.3349623382091522
    2. ')")
' → logprob: -1.7099623680114746
    3. '       ' → logprob: -2.3349623680114746
    4. '")' → logprob: -5.209962368011475
    5. ')' → logprob: -6.834962368011475
    6. '')")
' → logprob: -9.584961891174316
    7. ''")
' → logprob: -9.709961891174316
    8. '")
' → logprob: -9.709961891174316
    9. '}")
' → logprob: -10.334961891174316
    10. ')")' → logprob: -10.459961891174316

Token 1537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023662515450268984
    2. '
' → logprob: -7.127366065979004
    3. '```' → logprob: -7.502366065979004
    4. 'return' → logprob: -7.752366065979004
    5. '   ' → logprob: -8.377366065979004
    6. ')' → logprob: -9.127366065979004
    7. '           ' → logprob: -9.252366065979004
    8. 'if' → logprob: -10.752366065979004
    9. '<|end|>' → logprob: -10.752366065979004
    10. 'class' → logprob: -10.877366065979004

Token 1538: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20383821427822113
    2. '       ' → logprob: -1.7038382291793823
    3. 'if' (adapté à ' if') → logprob: -6.328838348388672
    4. ' return' → logprob: -8.328838348388672
    5. 'from' → logprob: -9.328838348388672
    6. '
' → logprob: -9.453838348388672
    7. '           ' → logprob: -9.703838348388672
    8. 'class' → logprob: -9.703838348388672
    9. '   ' → logprob: -9.828838348388672
    10. '```' → logprob: -10.453838348388672

Token 1539: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012356207298580557
    2. ' len' → logprob: -9.000123977661133
    3. '(len' → logprob: -17.250123977661133
    4. '   ' → logprob: -18.000123977661133
    5. '           ' → logprob: -20.125123977661133
    6. '	len' → logprob: -20.625123977661133
    7. ' ' → logprob: -20.750123977661133
    8. '       ' → logprob: -20.875123977661133
    9. '  ' → logprob: -21.375123977661133
    10. 'length' → logprob: -21.625123977661133

Token 1540: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001596771035110578
    2. 'components' → logprob: -8.75015926361084
    3. '(com' → logprob: -14.00015926361084
    4. '(component' → logprob: -16.125160217285156
    5. ' (' → logprob: -16.500160217285156
    6. ' components' → logprob: -16.625160217285156
    7. '(comp' → logprob: -16.750160217285156
    8. '(
' → logprob: -17.000160217285156
    9. '(parts' → logprob: -17.375160217285156
    10. '```' → logprob: -17.625160217285156

Token 1541: 'components' (ID: 8395)
  Prédit: 'components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.3663626305060461e-05
    2. '(' → logprob: -11.25001335144043
    3. ' components' → logprob: -14.37501335144043
    4. '.components' → logprob: -17.75001335144043
    5. '[' → logprob: -19.87501335144043
    6. 'Components' → logprob: -21.62501335144043
    7. '/components' → logprob: -21.75001335144043
    8. '```' → logprob: -21.75001335144043
    9. 'combined' → logprob: -22.00001335144043
    10. ')' → logprob: -22.00001335144043

Token 1542: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6236530542373657
    2. ' ==' → logprob: -0.8736530542373657
    3. ')' → logprob: -3.123652935028076
    4. ')==' → logprob: -6.123652935028076
    5. '[' → logprob: -9.123653411865234
    6. '()==' → logprob: -9.623653411865234
    7. '>' → logprob: -9.748653411865234
    8. ' !=' → logprob: -9.998653411865234
    9. '()' → logprob: -10.373653411865234
    10. '   ' → logprob: -10.873653411865234

Token 1543: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25200125575065613
    2. ' ==' → logprob: -1.5020012855529785
    3. '>' → logprob: -11.00200080871582
    4. '[' → logprob: -11.12700080871582
    5. '()==' → logprob: -11.62700080871582
    6. '==
' → logprob: -11.75200080871582
    7. '=' → logprob: -12.00200080871582
    8. ')==' → logprob: -12.00200080871582
    9. ']==' → logprob: -13.12700080871582
    10. ')' → logprob: -13.37700080871582

Token 1544: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '
' → logprob: -16.375009536743164
    4. '2' → logprob: -17.375009536743164
    5. '   ' → logprob: -18.750009536743164
    6. '>' → logprob: -19.125009536743164
    7. '```' → logprob: -19.125009536743164
    8. '0' → logprob: -19.750009536743164
    9. ')' → logprob: -20.125009536743164
    10. '۱' → logprob: -20.375009536743164

Token 1545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -15.875000953674316
    4. '2' → logprob: -16.812501907348633
    5. '۱' → logprob: -16.875001907348633
    6. '<|end|>' → logprob: -16.875001907348633
    7. '```' → logprob: -16.937501907348633
    8. '=' → logprob: -17.250001907348633
    9. '[' → logprob: -18.187501907348633
    10. '<|end|>' → logprob: -18.312501907348633

Token 1546: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7970187664031982
    2. ':
' → logprob: -1.1720187664031982
    3. ':' → logprob: -1.7970187664031982
    4. ':return' → logprob: -2.7970187664031982
    5. 'return' → logprob: -4.547019004821777
    6. '               ' → logprob: -6.922019004821777
    7. ' return' → logprob: -7.672019004821777
    8. '       ' → logprob: -8.047019004821777
    9. '[' → logprob: -8.797019004821777
    10. '          ' → logprob: -9.797019004821777

Token 1547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012217644602060318
    2. '       ' → logprob: -4.5122175216674805
    3. 'return' → logprob: -7.1372175216674805
    4. ' return' → logprob: -9.26221752166748
    5. ':' → logprob: -9.38721752166748
    6. '               ' → logprob: -9.51221752166748
    7. ':return' → logprob: -10.26221752166748
    8. ':
' → logprob: -10.38721752166748
    9. '	       ' → logprob: -10.51221752166748
    10. '   ' → logprob: -12.38721752166748

Token 1548: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024159250780940056
    2. '           ' → logprob: -3.7741591930389404
    3. ' return' → logprob: -7.0241594314575195
    4. '   ' → logprob: -11.52415943145752
    5. '               ' → logprob: -12.27415943145752
    6. '       ' → logprob: -12.27415943145752
    7. '	return' → logprob: -13.14915943145752
    8. ':return' → logprob: -14.27415943145752
    9. '{return' → logprob: -14.39915943145752
    10. '```' → logprob: -15.39915943145752

Token 1549: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -6.704273118884885e-07
    2. ' components' → logprob: -14.250000953674316
    3. 'component' → logprob: -21.25
    4. '.components' → logprob: -22.0
    5. '   ' → logprob: -22.125
    6. '
' → logprob: -23.0
    7. '           ' → logprob: -23.125
    8. '       ' → logprob: -24.625
    9. 'comp' → logprob: -24.875
    10. 'Components' → logprob: -26.0

Token 1550: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -13.12500286102295
    3. '[
' → logprob: -15.00000286102295
    4. '
' → logprob: -15.87500286102295
    5. '```' → logprob: -18.625001907348633
    6. 's' → logprob: -19.625001907348633
    7. 'import' → logprob: -19.625001907348633
    8. '   ' → logprob: -19.875001907348633
    9. '][' → logprob: -20.375001907348633
    10. '       ' → logprob: -20.625001907348633

Token 1551: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -11.750008583068848
    3. ' ' → logprob: -15.375008583068848
    4. '
' → logprob: -15.750008583068848
    5. '-' → logprob: -16.12500762939453
    6. '   ' → logprob: -17.62500762939453
    7. '(' → logprob: -19.00000762939453
    8. ')' → logprob: -19.25000762939453
    9. '#' → logprob: -19.62500762939453
    10. '1' → logprob: -20.12500762939453

Token 1552: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6811690926551819
    2. '       ' → logprob: -1.181169033050537
    3. ')
' → logprob: -1.681169033050537
    4. '           ' → logprob: -7.306169033050537
    5. ']' → logprob: -9.306169509887695
    6. ']
' → logprob: -10.181169509887695
    7. '
' → logprob: -10.681169509887695
    8. '               ' → logprob: -10.931169509887695
    9. ')return' → logprob: -11.056169509887695
    10. '   ' → logprob: -11.931169509887695

Token 1553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002447946462780237
    2. '
' → logprob: -6.252448081970215
    3. 'else' → logprob: -7.877448081970215
    4. '           ' → logprob: -9.752448081970215
    5. '   ' → logprob: -9.877448081970215
    6. 'return' → logprob: -11.252448081970215
    7. ' else' → logprob: -12.252448081970215
    8. '```' → logprob: -12.252448081970215
    9. '        
' → logprob: -13.127448081970215
    10. '	' → logprob: -14.127448081970215

Token 1554: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017491355538368225
    2. 'else' (adapté à ' else') → logprob: -4.142491340637207
    3. ' else' → logprob: -7.267491340637207
    4. '
' → logprob: -8.142491340637207
    5. '   ' → logprob: -8.517491340637207
    6. '           ' → logprob: -8.642491340637207
    7. 'return' → logprob: -9.642491340637207
    8. '               ' → logprob: -11.017491340637207
    9. '```' → logprob: -13.267491340637207
    10. 'class' → logprob: -13.392491340637207

Token 1555: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8317722082138062
    2. '           ' → logprob: -1.5817722082138062
    3. '               ' → logprob: -1.7067722082138062
    4. 'return' → logprob: -2.3317723274230957
    5. ':' → logprob: -2.8317723274230957
    6. ':return' → logprob: -4.456772327423096
    7. ' return' → logprob: -5.206772327423096
    8. '       ' → logprob: -5.706772327423096
    9. ',' → logprob: -7.581772327423096
    10. '{return' → logprob: -9.331771850585938

Token 1556: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5605604648590088
    2. '           ' → logprob: -1.5605604648590088
    3. '       ' → logprob: -2.060560464859009
    4. '               ' → logprob: -2.435560464859009
    5. ' return' → logprob: -5.56056022644043
    6. '{return' → logprob: -9.06056022644043
    7. '```' → logprob: -9.43556022644043
    8. '	       ' → logprob: -10.18556022644043
    9. ':return' → logprob: -10.93556022644043
    10. '   ' → logprob: -11.06056022644043

Token 1557: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000763287884183228
    2. '       ' → logprob: -7.500763416290283
    3. ' return' → logprob: -8.500762939453125
    4. '           ' → logprob: -12.250762939453125
    5. '               ' → logprob: -14.000762939453125
    6. '
' → logprob: -14.125762939453125
    7. '{return' → logprob: -15.250762939453125
    8. '   ' → logprob: -15.875762939453125
    9. '```' → logprob: -16.000762939453125
    10. '	return' → logprob: -16.125762939453125

Token 1558: ' Compound' (ID: 98467)
  Prédit: 'Compound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Compound' → logprob: -2.816093228830141e-06
    2. ' Compound' → logprob: -13.25000286102295
    3. 'Composite' → logprob: -13.87500286102295
    4. '           ' → logprob: -18.750001907348633
    5. 'self' → logprob: -18.875001907348633
    6. 'Combined' → logprob: -18.875001907348633
    7. 'compound' → logprob: -19.125001907348633
    8. 'Component' → logprob: -20.625001907348633
    9. '               ' → logprob: -21.750001907348633
    10. '
' → logprob: -22.375001907348633

Token 1559: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -7.896309739408025e-07
    2. 'Components' → logprob: -14.750000953674316
    3. 'Sequences' → logprob: -16.25
    4. 'Component' → logprob: -16.5
    5. 'Sequ' → logprob: -16.625
    6. ' Sequence' → logprob: -17.375
    7. '_sequence' → logprob: -17.375
    8. '(' → logprob: -17.875
    9. 'S' → logprob: -19.375
    10. '_SEQUENCE' → logprob: -19.75

Token 1560: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003932576219085604
    2. 'components' → logprob: -8.00039291381836
    3. '(comp' → logprob: -10.87539291381836
    4. '(
' → logprob: -11.00039291381836
    5. '(com' → logprob: -11.12539291381836
    6. ' (' → logprob: -12.75039291381836
    7. '(component' → logprob: -14.00039291381836
    8. ')(' → logprob: -14.50039291381836
    9. ' components' → logprob: -14.75039291381836
    10. '.components' → logprob: -14.75039291381836

Token 1561: 'components' (ID: 8395)
  Prédit: 'components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.375001907348633
    3. ' components' → logprob: -15.500001907348633
    4. '.components' → logprob: -15.625001907348633
    5. '[
' → logprob: -15.875001907348633
    6. ')' → logprob: -17.250001907348633
    7. '
' → logprob: -17.500001907348633
    8. 'combined' → logprob: -17.875001907348633
    9. '           ' → logprob: -18.750001907348633
    10. 'component' → logprob: -20.000001907348633

Token 1562: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.56364209135063e-05
    2. '<|end|>' → logprob: -10.875065803527832
    3. '       ' → logprob: -11.000065803527832
    4. ')
' → logprob: -11.250065803527832
    5. ']' → logprob: -12.000065803527832
    6. '[' → logprob: -13.000065803527832
    7. '   ' → logprob: -13.250065803527832
    8. '(' → logprob: -13.625065803527832
    9. '<|end|>' → logprob: -13.750065803527832
    10. '           ' → logprob: -13.875065803527832

Token 1563: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3064883351325989
    2. '
' → logprob: -1.806488275527954
    3. '

' → logprob: -2.306488275527954
    4. '```' → logprob: -9.806488037109375
    5. '<class' → logprob: -10.556488037109375
    6. '(class' → logprob: -11.806488037109375
    7. '(' → logprob: -11.806488037109375
    8. '


' → logprob: -11.806488037109375
    9. '
' → logprob: -12.056488037109375
    10. ' class' → logprob: -12.181488037109375

Token 1564: ' Compound' (ID: 98467)
  Prédit: 'Compound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Compound' → logprob: -0.0015023599844425917
    2. ' Compound' → logprob: -6.501502513885498
    3. 'compound' → logprob: -18.376502990722656
    4. 'Composite' → logprob: -19.126502990722656
    5. ' compound' → logprob: -19.376502990722656
    6. 'Component' → logprob: -19.501502990722656
    7. 'Comp' → logprob: -19.876502990722656
    8. 'Sequence' → logprob: -20.876502990722656
    9. 'Genome' → logprob: -21.001502990722656
    10. '```' → logprob: -21.376502990722656

Token 1565: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: 0.0
    2. 'Sequ' → logprob: -19.125
    3. 'Component' → logprob: -19.25
    4. ' Sequence' → logprob: -19.375
    5. '(' → logprob: -20.0
    6. '_sequence' → logprob: -20.125
    7. '_SEQUENCE' → logprob: -20.375
    8. 'sequence' → logprob: -22.0
    9. '.Sequence' → logprob: -22.125
    10. 'Seq' → logprob: -22.25

Token 1566: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009151478880085051
    2. ':' → logprob: -7.125915050506592
    3. '(
' → logprob: -9.37591552734375
    4. '(object' → logprob: -11.87591552734375
    5. ':
' → logprob: -12.37591552734375
    6. '(List' → logprob: -12.75091552734375
    7. '(gen' → logprob: -12.87591552734375
    8. '(`' → logprob: -13.37591552734375
    9. '((' → logprob: -14.00091552734375
    10. '```' → logprob: -14.12591552734375

Token 1567: 'Genome' (ID: 184055)
  Prédit: 'Genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -4.842555426876061e-06
    2. ' Genome' → logprob: -12.250004768371582
    3. 'Gen' → logprob: -18.1250057220459
    4. '(' → logprob: -18.6250057220459
    5. 'Literal' → logprob: -19.0000057220459
    6. ')' → logprob: -19.0000057220459
    7. 'Genre' → logprob: -19.3750057220459
    8. ' genome' → logprob: -19.6250057220459
    9. 'Sequence' → logprob: -20.1250057220459
    10. '```' → logprob: -20.1250057220459

Token 1568: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -0.00014060820103622973
    2. 'Sequence' → logprob: -9.250140190124512
    3. 'Components' → logprob: -10.125140190124512
    4. '[' → logprob: -13.500140190124512
    5. '(Component' → logprob: -13.875140190124512
    6. '(' → logprob: -14.500140190124512
    7. '<Component' → logprob: -14.625140190124512
    8. 'component' → logprob: -15.750140190124512
    9. '@Component' → logprob: -15.875140190124512
    10. '```' → logprob: -15.875140190124512

Token 1569: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1007206067442894
    2. '):
' → logprob: -2.3507206439971924
    3. '   ' → logprob: -8.475720405578613
    4. ')' → logprob: -8.600720405578613
    5. ':' → logprob: -10.725720405578613
    6. ',' → logprob: -10.850720405578613
    7. '(' → logprob: -10.850720405578613
    8. '):

' → logprob: -10.975720405578613
    9. '):
' → logprob: -11.350720405578613
    10. '(List' → logprob: -11.850720405578613

Token 1570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002662458224222064
    2. 'def' → logprob: -7.127662658691406
    3. '):
' → logprob: -7.377662658691406
    4. ':' → logprob: -7.752662658691406
    5. '):' → logprob: -8.127662658691406
    6. ')' → logprob: -8.377662658691406
    7. '(' → logprob: -9.252662658691406
    8. ':
' → logprob: -9.627662658691406
    9. 'class' → logprob: -9.752662658691406
    10. '```' → logprob: -10.252662658691406

Token 1571: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062421366572380066
    2. 'def' → logprob: -2.8124213218688965
    3. 'class' → logprob: -7.8124213218688965
    4. '
' → logprob: -10.937421798706055
    5. ' def' → logprob: -10.937421798706055
    6. '"""
' (adapté à ' """
') → logprob: -12.562421798706055
    7. '    
' → logprob: -12.937421798706055
    8. '```' → logprob: -13.062421798706055
    9. '[
' → logprob: -13.312421798706055
    10. '"""' → logprob: -14.437421798706055

Token 1572: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08015810698270798
    2. '"""
' → logprob: -2.580157995223999
    3. '"' → logprob: -7.955158233642578
    4. '"""' → logprob: -7.955158233642578
    5. 'class' → logprob: -8.580158233642578
    6. '"
' → logprob: -8.955158233642578
    7. ' """
' → logprob: -9.205158233642578
    8. '
' → logprob: -10.330158233642578
    9. '```' → logprob: -10.580158233642578
    10. '[
' → logprob: -10.705158233642578

Token 1573: ' A' (ID: 355)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.017340118065476418
    2. '   ' → logprob: -4.892340183258057
    3. 'def' → logprob: -5.017340183258057
    4. '"""
' → logprob: -5.892340183258057
    5. '"""' → logprob: -9.142339706420898
    6. 'Rep' → logprob: -9.517339706420898
    7. 'A' (adapté à ' A') → logprob: -10.767339706420898
    8. '
' → logprob: -10.892339706420898
    9. 'Composite' → logprob: -11.017339706420898
    10. 'rep' → logprob: -11.267339706420898

Token 1574: ' complex' (ID: 8012)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25374916195869446
    2. 'sequence' → logprob: -2.503749132156372
    3. 'com' → logprob: -2.753749132156372
    4. '
' → logprob: -3.378749132156372
    5. 'compound' → logprob: -3.878749132156372
    6. 'component' → logprob: -4.128749370574951
    7. 'Composite' → logprob: -5.878749370574951
    8. 'Sequence' → logprob: -7.003749370574951
    9. 'Compound' → logprob: -7.503749370574951
    10. ' composite' → logprob: -7.628749370574951

Token 1575: ' sequence' (ID: 16281)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.007750486955046654
    2. 'Sequence' → logprob: -6.132750511169434
    3. '   ' → logprob: -6.257750511169434
    4. ' class' → logprob: -6.632750511169434
    5. 'sequence' → logprob: -6.757750511169434
    6. '
' → logprob: -7.757750511169434
    7. '(
' → logprob: -8.257750511169434
    8. '(' → logprob: -9.257750511169434
    9. 'component' → logprob: -10.132750511169434
    10. '```' → logprob: -10.132750511169434

Token 1576: ' composed' (ID: 34752)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.691290020942688
    2. ':
' → logprob: -1.566290020942688
    3. '(' → logprob: -1.691290020942688
    4. ':' → logprob: -3.1912899017333984
    5. '):
' → logprob: -4.441289901733398
    6. ' composed' → logprob: -4.441289901733398
    7. ' that' → logprob: -4.691289901733398
    8. '(
' → logprob: -4.941289901733398
    9. 'class' → logprob: -5.316289901733398
    10. 'of' → logprob: -5.691289901733398

Token 1577: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.023896580561995506
    2. ' of' → logprob: -3.8988966941833496
    3. '   ' → logprob: -5.77389669418335
    4. '
' → logprob: -8.898896217346191
    5. 'class' → logprob: -9.648896217346191
    6. '	of' → logprob: -11.273896217346191
    7. 'from' → logprob: -11.898896217346191
    8. '_of' → logprob: -12.523896217346191
    9. '```' → logprob: -12.773896217346191
    10. ' ' → logprob: -13.148896217346191

Token 1578: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.005685480311512947
    2. ' multiple' → logprob: -5.255685329437256
    3. 'se' → logprob: -8.505685806274414
    4. 'components' → logprob: -8.755685806274414
    5. 'a' → logprob: -9.630685806274414
    6. 'sub' → logprob: -11.505685806274414
    7. '多个' → logprob: -12.630685806274414
    8. 'List' → logprob: -12.755685806274414
    9. '
' → logprob: -13.005685806274414
    10. 'other' → logprob: -13.630685806274414

Token 1579: ' genome' (ID: 64778)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.05604209005832672
    2. ' Genome' → logprob: -3.056042194366455
    3. 'components' → logprob: -5.181042194366455
    4. ' components' → logprob: -6.431042194366455
    5. '   ' → logprob: -8.806041717529297
    6. '
' → logprob: -10.931041717529297
    7. ' genome' → logprob: -11.806041717529297
    8. 'Gene' → logprob: -12.931041717529297
    9. 'Gen' → logprob: -13.056041717529297
    10. ' ' → logprob: -13.181041717529297

Token 1580: ' components' (ID: 10674)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9797635674476624
    2. 'components' → logprob: -1.1047635078430176
    3. 'Component' → logprob: -1.4797635078430176
    4. ' components' → logprob: -3.3547635078430176
    5. '_components' → logprob: -4.604763507843018
    6. '_component' → logprob: -4.604763507843018
    7. '_' → logprob: -5.229763507843018
    8. 'Components' → logprob: -5.729763507843018
    9. '_Component' → logprob: -7.229763507843018
    10. '
' → logprob: -7.854763507843018

Token 1581: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9665667414665222
    2. ':
' → logprob: -0.9665667414665222
    3. '):
' → logprob: -1.716566801071167
    4. ':' → logprob: -3.466566801071167
    5. '):' → logprob: -4.716566562652588
    6. ' that' → logprob: -5.716566562652588
    7. '(' → logprob: -5.841566562652588
    8. '
' → logprob: -5.841566562652588
    9. ',' → logprob: -5.841566562652588
    10. 'that' → logprob: -6.716566562652588

Token 1582: ' order' (ID: 2569)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.13647453486919403
    2. 'order' → logprob: -2.386474609375
    3. 'a' → logprob: -3.386474609375
    4. '_sequence' → logprob: -6.886474609375
    5. ' sequence' → logprob: -7.761474609375
    6. '_order' → logprob: -8.761474609375
    7. ' order' → logprob: -9.761474609375
    8. 'ordered' → logprob: -9.886474609375
    9. ' a' → logprob: -10.386474609375
    10. '
' → logprob: -10.761474609375

Token 1583: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49659401178359985
    2. ':' → logprob: -1.871593952178955
    3. '):
' → logprob: -2.246593952178955
    4. ':
' → logprob: -2.496593952178955
    5. '):' → logprob: -3.121593952178955
    6. '.' → logprob: -6.121593952178955
    7. ',' → logprob: -6.871593952178955
    8. '```' → logprob: -7.371593952178955
    9. ')' → logprob: -8.246594429016113
    10. 'class' → logprob: -8.621594429016113

Token 1584: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05081048607826233
    2. '   ' → logprob: -3.0508105754852295
    3. '```' → logprob: -6.30081033706665
    4. 'class' → logprob: -8.800810813903809
    5. 'def' → logprob: -9.550810813903809
    6. '

' → logprob: -9.925810813903809
    7. '    
' → logprob: -10.050810813903809
    8. ')' → logprob: -10.550810813903809
    9. '<|end|>' → logprob: -11.425810813903809
    10. '
' → logprob: -12.050810813903809

Token 1585: ' Abstract' (ID: 17413)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00967971608042717
    2. '   ' → logprob: -5.134679794311523
    3. 'def' → logprob: -5.634679794311523
    4. '```' → logprob: -9.759679794311523
    5. '    
' → logprob: -10.009679794311523
    6. '

' → logprob: -10.009679794311523
    7. '
' → logprob: -11.384679794311523
    8. 'class' → logprob: -12.509679794311523
    9. ')' → logprob: -12.759679794311523
    10. ' def' → logprob: -13.009679794311523

Token 1586: 'ing' (ID: 289)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.14550316333770752
    2. '   ' → logprob: -2.020503044128418
    3. '
' → logprob: -6.395503044128418
    4. ' class' → logprob: -8.145503044128418
    5. ':' → logprob: -8.145503044128418
    6. '    
' → logprob: -8.645503044128418
    7. ':
' → logprob: -9.145503044128418
    8. '```' → logprob: -9.645503044128418
    9. 'def' → logprob: -10.020503044128418
    10. '<class' → logprob: -10.520503044128418

Token 1587: ' concaten' (ID: 121942)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7749117016792297
    2. ' the' → logprob: -1.649911642074585
    3. 'from' → logprob: -2.399911642074585
    4. '   ' → logprob: -2.524911642074585
    5. 'class' → logprob: -2.649911642074585
    6. 'multiple' → logprob: -3.399911642074585
    7. 'their' → logprob: -4.274911880493164
    8. ' multiple' → logprob: -4.524911880493164
    9. 'them' → logprob: -4.899911880493164
    10. ' their' → logprob: -5.024911880493164

Token 1588: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.1613989770412445
    2. 'ate' → logprob: -1.911399006843567
    3. 'ated' → logprob: -7.036398887634277
    4. '   ' → logprob: -8.536398887634277
    5. 'e' → logprob: -10.786398887634277
    6. 'at' → logprob: -11.286398887634277
    7. '```' → logprob: -11.536398887634277
    8. '
' → logprob: -11.661398887634277
    9. 'class' → logprob: -11.786398887634277
    10. 'ates' → logprob: -11.786398887634277

Token 1589: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47350573539733887
    2. 'of' → logprob: -1.8485057353973389
    3. ':' → logprob: -2.723505735397339
    4. ' of' → logprob: -2.848505735397339
    5. ':
' → logprob: -2.973505735397339
    6. 'class' → logprob: -3.348505735397339
    7. '.' → logprob: -5.598505973815918
    8. '
' → logprob: -6.223505973815918
    9. '(
' → logprob: -6.723505973815918
    10. '.
' → logprob: -7.848505973815918

Token 1590: ' handle' (ID: 5318)
  Prédit: 'allow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allow' → logprob: -0.1479300707578659
    2. 'handle' → logprob: -2.647930145263672
    3. 'support' → logprob: -3.397930145263672
    4. 'represent' → logprob: -4.522930145263672
    5. 'provide' → logprob: -5.272930145263672
    6. 'fac' → logprob: -5.772930145263672
    7. 'enable' → logprob: -5.772930145263672
    8. 'Genome' → logprob: -5.772930145263672
    9. 'manage' → logprob: -6.647930145263672
    10. 'multiple' → logprob: -6.647930145263672

Token 1591: ' pieces' (ID: 12762)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.4148496389389038
    2. 'their' → logprob: -2.4148497581481934
    3. 'components' → logprob: -2.7898497581481934
    4. 'the' → logprob: -3.1648497581481934
    5. '
' → logprob: -3.5398497581481934
    6. '   ' → logprob: -3.7898497581481934
    7. 'self' → logprob: -3.9148497581481934
    8. ' multiple' → logprob: -4.414849758148193
    9. 'def' → logprob: -4.539849758148193
    10. 'length' → logprob: -4.789849758148193

Token 1592: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002133490750566125
    2. 'of' → logprob: -7.002133369445801
    3. ' of' → logprob: -7.752133369445801
    4. ':' → logprob: -8.1271333694458
    5. '
' → logprob: -8.1271333694458
    6. ':
' → logprob: -9.7521333694458
    7. '.' → logprob: -9.7521333694458
    8. 'and' → logprob: -10.6271333694458
    9. '.
' → logprob: -11.3771333694458
    10. '    
' → logprob: -11.7521333694458

Token 1593: ' parsed' (ID: 31111)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7649357914924622
    2. 'code' → logprob: -1.3899357318878174
    3. 'sequence' → logprob: -1.7649357318878174
    4. 'components' → logprob: -2.3899357318878174
    5. 'gen' → logprob: -5.2649359703063965
    6. 'component' → logprob: -5.6399359703063965
    7. 'multiple' → logprob: -5.8899359703063965
    8. 'se' → logprob: -6.0149359703063965
    9. 'Genome' → logprob: -6.2649359703063965
    10. ' the' → logprob: -6.6399359703063965

Token 1594: ' sequences' (ID: 45665)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.13261878490448
    2. 'code' → logprob: -1.25761878490448
    3. 'sequence' → logprob: -1.38261878490448
    4. 'gen' → logprob: -2.7576189041137695
    5. 'components' → logprob: -2.7576189041137695
    6. ' sequences' → logprob: -5.6326189041137695
    7. ' genome' → logprob: -5.6326189041137695
    8. ' code' → logprob: -5.6326189041137695
    9. ' sequence' → logprob: -7.1326189041137695
    10. 'component' → logprob: -7.1326189041137695

Token 1595: ' uniformly' (ID: 161240)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7874489426612854
    2. ':' → logprob: -1.1624488830566406
    3. '):
' → logprob: -2.2874488830566406
    4. ':
' → logprob: -2.5374488830566406
    5. '):' → logprob: -3.1624488830566406
    6. ')' → logprob: -5.412448883056641
    7. '```' → logprob: -6.162448883056641
    8. '(' → logprob: -6.787448883056641
    9. ',' → logprob: -7.287448883056641
    10. '
' → logprob: -7.912448883056641

Token 1596: '.
' (ID: 558)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9470842480659485
    2. ':' → logprob: -1.0720841884613037
    3. '   ' → logprob: -1.5720841884613037
    4. '):
' → logprob: -3.0720841884613037
    5. '
' → logprob: -4.947084426879883
    6. '):' → logprob: -5.197084426879883
    7. ')' → logprob: -6.322084426879883
    8. ',' → logprob: -7.447084426879883
    9. ':

' → logprob: -8.072084426879883
    10. '```' → logprob: -8.947084426879883

Token 1597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6464753746986389
    2. '
' → logprob: -0.7714753746986389
    3. '```' → logprob: -4.521475315093994
    4. '    
' → logprob: -7.146475315093994
    5. ':' → logprob: -7.396475315093994
    6. 'def' → logprob: -7.771475315093994
    7. ')' → logprob: -8.021475791931152
    8. '):
' → logprob: -8.896475791931152
    9. '``' → logprob: -9.271475791931152
    10. '

' → logprob: -9.271475791931152

Token 1598: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10411893576383591
    2. '   ' → logprob: -2.354118824005127
    3. 'def' → logprob: -6.229118824005127
    4. '```' → logprob: -6.979118824005127
    5. ')' → logprob: -7.854118824005127
    6. '):
' → logprob: -8.354119300842285
    7. '

' → logprob: -8.854119300842285
    8. '
' → logprob: -9.479119300842285
    9. '    
' → logprob: -9.604119300842285
    10. 'class' → logprob: -10.979119300842285

Token 1599: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12810654938220978
    2. '   ' → logprob: -2.1281065940856934
    3. '
' → logprob: -6.878106594085693
    4. '```' → logprob: -9.503106117248535
    5. '    
' → logprob: -10.378106117248535
    6. ' def' → logprob: -10.878106117248535
    7. 'class' → logprob: -11.128106117248535
    8. '	def' → logprob: -12.253106117248535
    9. '_def' → logprob: -14.003106117248535
    10. '__' → logprob: -14.253106117248535

Token 1600: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.988221684878226e-06
    2. ' def' → logprob: -12.250006675720215
    3. '   ' → logprob: -14.000006675720215
    4. '_def' → logprob: -14.250006675720215
    5. 'class' → logprob: -14.875006675720215
    6. '```' → logprob: -15.375006675720215
    7. '__' → logprob: -17.25000762939453
    8. '
' → logprob: -17.62500762939453
    9. '	def' → logprob: -19.12500762939453
    10. '``' → logprob: -20.00000762939453

Token 1601: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005726903327740729
    2. 'def' → logprob: -7.750572681427002
    3. '```' → logprob: -10.00057315826416
    4. '_init' → logprob: -10.25057315826416
    5. 'init' → logprob: -10.62557315826416
    6. ' __' → logprob: -10.62557315826416
    7. '___' → logprob: -12.37557315826416
    8. '_len' → logprob: -13.25057315826416
    9. '
' → logprob: -13.62557315826416
    10. '.__' → logprob: -13.87557315826416

Token 1602: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.129266067640856e-05
    2. 'class' → logprob: -11.250020980834961
    3. '_init' → logprob: -12.500020980834961
    4. 'def' → logprob: -13.000020980834961
    5. '__' → logprob: -14.375020980834961
    6. '```' → logprob: -14.500020980834961
    7. '(init' → logprob: -15.000020980834961
    8. ' init' → logprob: -15.500020980834961
    9. 'extend' → logprob: -15.500020980834961
    10. '`' → logprob: -15.750020980834961

Token 1603: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06202370300889015
    2. '(self' → logprob: -2.812023639678955
    3. '__(
' → logprob: -10.687024116516113
    4. 'self' → logprob: -10.937024116516113
    5. '(' → logprob: -11.812024116516113
    6. ' (' → logprob: -12.937024116516113
    7. '__' → logprob: -13.187024116516113
    8. '_(' → logprob: -13.437024116516113
    9. '   ' → logprob: -13.812024116516113
    10. '```' → logprob: -14.437024116516113

Token 1604: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9361264946837764e-07
    2. ' self' → logprob: -15.625
    3. '       ' → logprob: -17.375
    4. '
' → logprob: -17.625
    5. '(self' → logprob: -19.25
    6. '```' → logprob: -19.25
    7. '   ' → logprob: -20.125
    8. '[self' → logprob: -20.625
    9. '[' → logprob: -20.75
    10. '	self' → logprob: -22.0

Token 1605: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5202171206474304
    2. '(self' → logprob: -1.0202171802520752
    3. ',' → logprob: -3.145217180252075
    4. '__(' → logprob: -7.020216941833496
    5. ' (' → logprob: -7.895216941833496
    6. '
' → logprob: -8.020216941833496
    7. '   ' → logprob: -8.895216941833496
    8. ',self' → logprob: -9.020216941833496
    9. '       ' → logprob: -9.270216941833496
    10. '```' → logprob: -10.645216941833496

Token 1606: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -5.264322317088954e-05
    2. 'self' → logprob: -10.000052452087402
    3. ' components' → logprob: -11.875052452087402
    4. 'parts' → logprob: -16.37505340576172
    5. 'children' → logprob: -16.75005340576172
    6. 'elements' → logprob: -16.87505340576172
    7. '.components' → logprob: -18.00005340576172
    8. 'sub' → logprob: -18.00005340576172
    9. '   ' → logprob: -18.62505340576172
    10. 'pieces' → logprob: -18.87505340576172

Token 1607: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002062711166217923
    2. '):' → logprob: -6.627062797546387
    3. '):
' → logprob: -7.377062797546387
    4. '   ' → logprob: -10.377062797546387
    5. ' :' → logprob: -10.877062797546387
    6. ':list' → logprob: -10.877062797546387
    7. '       ' → logprob: -11.752062797546387
    8. ')' → logprob: -11.877062797546387
    9. '```' → logprob: -12.127062797546387
    10. '__:' → logprob: -12.627062797546387

Token 1608: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.018274961039423943
    2. 'components' → logprob: -4.018274784088135
    3. ' List' → logprob: -9.393275260925293
    4. ' components' → logprob: -10.893275260925293
    5. '[List' → logprob: -10.893275260925293
    6. 'list' → logprob: -13.518275260925293
    7. '   ' → logprob: -14.018275260925293
    8. '
' → logprob: -14.393275260925293
    9. 'component' → logprob: -14.393275260925293
    10. '(List' → logprob: -14.893275260925293

Token 1609: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[
' → logprob: -16.0
    3. 'Genome' → logprob: -17.875
    4. '```' → logprob: -18.375
    5. '<' → logprob: -18.75
    6. '):
' → logprob: -19.375
    7. ')' → logprob: -19.5
    8. '):' → logprob: -19.5
    9. '[int' → logprob: -19.875
    10. '
' → logprob: -20.375

Token 1610: 'Genome' (ID: 184055)
  Prédit: 'Genome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -7.896309739408025e-07
    2. ' Genome' → logprob: -14.125000953674316
    3. '[' → logprob: -17.625
    4. 'Gen' → logprob: -18.5
    5. 'Union' → logprob: -19.375
    6. '   ' → logprob: -20.125
    7. 'Genre' → logprob: -20.5
    8. 'Gene' → logprob: -21.125
    9. ')' → logprob: -21.25
    10. 'Optional' → logprob: -21.625

Token 1611: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -0.03106624446809292
    2. '[' → logprob: -3.5310661792755127
    3. 'Genome' → logprob: -6.781066417694092
    4. '<Component' → logprob: -9.156065940856934
    5. '<' → logprob: -9.906065940856934
    6. 'Sequence' → logprob: -11.906065940856934
    7. '```' → logprob: -12.406065940856934
    8. '[
' → logprob: -12.531065940856934
    9. '   ' → logprob: -12.906065940856934
    10. 'Components' → logprob: -12.906065940856934

Token 1612: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01555680576711893
    2. ']):
' → logprob: -4.640556812286377
    3. '):' → logprob: -5.390556812286377
    4. ')' → logprob: -7.390556812286377
    5. '   ' → logprob: -8.265556335449219
    6. '       ' → logprob: -8.640556335449219
    7. ']):' → logprob: -9.015556335449219
    8. ']' → logprob: -11.515556335449219
    9. '])' → logprob: -11.890556335449219
    10. '']):
' → logprob: -12.265556335449219

Token 1613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005362413823604584
    2. 'self' → logprob: -5.255362510681152
    3. '   ' → logprob: -9.380362510681152
    4. ' self' → logprob: -10.255362510681152
    5. '	' → logprob: -12.255362510681152
    6. '	self' → logprob: -13.380362510681152
    7. 'super' → logprob: -14.380362510681152
    8. ' ' → logprob: -14.755362510681152
    9. '```' → logprob: -14.880362510681152
    10. '	   ' → logprob: -15.130362510681152

Token 1614: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0037896272260695696
    2. '       ' → logprob: -5.75378942489624
    3. 'super' → logprob: -7.50378942489624
    4. ' self' → logprob: -9.753789901733398
    5. '   ' → logprob: -13.128789901733398
    6. ' super' → logprob: -15.003789901733398
    7. '	self' → logprob: -15.378789901733398
    8. '
' → logprob: -16.8787899017334
    9. '(self' → logprob: -17.1287899017334
    10. ' ' → logprob: -17.7537899017334

Token 1615: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00029399030609056354
    2. '   ' → logprob: -8.500293731689453
    3. '.' → logprob: -10.500293731689453
    4. '.components' → logprob: -10.875293731689453
    5. '.__' → logprob: -11.500293731689453
    6. '       ' → logprob: -11.625293731689453
    7. ' .' → logprob: -11.875293731689453
    8. '	' → logprob: -12.125293731689453
    9. '_components' → logprob: -12.500293731689453
    10. '_' → logprob: -13.750293731689453

Token 1616: 'components' (ID: 8395)
  Prédit: 'components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.00014060820103622973
    2. '_components' → logprob: -8.875140190124512
    3. ' components' → logprob: -14.625140190124512
    4. 'component' → logprob: -15.750140190124512
    5. '.components' → logprob: -16.750141143798828
    6. '_component' → logprob: -17.125141143798828
    7. '_len' → logprob: -17.375141143798828
    8. '_' → logprob: -18.000141143798828
    9. 'len' → logprob: -18.125141143798828
    10. '
' → logprob: -18.500141143798828

Token 1617: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10023093223571777
    2. ' =' → logprob: -2.3502309322357178
    3. '[' → logprob: -11.725231170654297
    4. ':' → logprob: -12.100231170654297
    5. '=
' → logprob: -13.600231170654297
    6. '=[
' → logprob: -13.600231170654297
    7. ')' → logprob: -13.850231170654297
    8. '=[]' → logprob: -13.975231170654297
    9. '=[' → logprob: -14.100231170654297
    10. '.append' → logprob: -14.100231170654297

Token 1618: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -8.506661833962426e-05
    2. ' components' → logprob: -9.37508487701416
    3. '[' → logprob: -16.000085830688477
    4. '[]
' → logprob: -17.375085830688477
    5. '[]' → logprob: -18.125085830688477
    6. '.components' → logprob: -18.250085830688477
    7. 'component' → logprob: -18.500085830688477
    8. '[
' → logprob: -18.875085830688477
    9. '   ' → logprob: -19.250085830688477
    10. '       ' → logprob: -20.875085830688477

Token 1619: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9624618887901306
    2. '       ' → logprob: -0.9624618887901306
    3. '   ' → logprob: -1.8374619483947754
    4. 'self' → logprob: -3.5874619483947754
    5. '<|end|>' → logprob: -3.5874619483947754
    6. 'def' → logprob: -4.087461948394775
    7. ' self' → logprob: -6.337461948394775
    8. ' ' → logprob: -6.837461948394775
    9. '```' → logprob: -7.337461948394775
    10. '	self' → logprob: -8.212461471557617

Token 1620: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48259085416793823
    2. '       ' → logprob: -1.857590913772583
    3. 'def' → logprob: -1.982590913772583
    4. 'self' → logprob: -2.482590913772583
    5. '
' → logprob: -5.357590675354004
    6. ' self' → logprob: -8.107590675354004
    7. ' def' → logprob: -8.482590675354004
    8. '```' → logprob: -8.482590675354004
    9. ' ' → logprob: -10.357590675354004
    10. '	self' → logprob: -11.232590675354004

Token 1621: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000782826216891408
    2. 'def' → logprob: -7.6257829666137695
    3. '       ' → logprob: -8.62578296661377
    4. '   ' → logprob: -9.75078296661377
    5. 'super' → logprob: -10.37578296661377
    6. 'length' → logprob: -11.50078296661377
    7. 'total' → logprob: -12.00078296661377
    8. '
' → logprob: -12.87578296661377
    9. ' self' → logprob: -13.12578296661377
    10. 'from' → logprob: -13.87578296661377

Token 1622: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.047413889318704605
    2. '.' → logprob: -4.0474138259887695
    3. '   ' → logprob: -4.1724138259887695
    4. '.length' → logprob: -5.4224138259887695
    5. '_len' → logprob: -5.7974138259887695
    6. '       ' → logprob: -6.1724138259887695
    7. '_length' → logprob: -6.9224138259887695
    8. 'def' → logprob: -7.2974138259887695
    9. '.__' → logprob: -7.6724138259887695
    10. ' .' → logprob: -8.29741382598877

Token 1623: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.002139197662472725
    2. 'len' → logprob: -6.627139091491699
    3. '_lengths' → logprob: -7.752139091491699
    4. '_length' → logprob: -8.5021390914917
    5. '_len' → logprob: -9.7521390914917
    6. 'total' → logprob: -10.0021390914917
    7. 'lens' → logprob: -11.0021390914917
    8. 'cached' → logprob: -11.2521390914917
    9. 'leng' → logprob: -12.0021390914917
    10. 'cum' → logprob: -12.0021390914917

Token 1624: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11310063302516937
    2. ' =' → logprob: -2.238100528717041
    3. '   ' → logprob: -8.7381010055542
    4. '=sum' → logprob: -10.1131010055542
    5. '_' → logprob: -10.9881010055542
    6. 's' → logprob: -11.1131010055542
    7. 'sum' → logprob: -11.4881010055542
    8. '       ' → logprob: -11.9881010055542
    9. ' ' → logprob: -12.1131010055542
    10. '=len' → logprob: -12.2381010055542

Token 1625: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -7.517272024415433e-05
    2. ' sum' → logprob: -9.750075340270996
    3. '0' → logprob: -11.000075340270996
    4. '
' → logprob: -16.00007438659668
    5. '=sum' → logprob: -17.37507438659668
    6. '   ' → logprob: -17.50007438659668
    7. '	sum' → logprob: -18.00007438659668
    8. '(sum' → logprob: -18.25007438659668
    9. 'None' → logprob: -19.00007438659668
    10. '_sum' → logprob: -19.75007438659668

Token 1626: '(c' (ID: 2410)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.45559123158454895
    2. '(comp' → logprob: -1.4555912017822266
    3. 'component' → logprob: -2.7055912017822266
    4. 'c' → logprob: -3.4555912017822266
    5. '(c' → logprob: -3.9555912017822266
    6. '(component' → logprob: -4.205591201782227
    7. '([' → logprob: -8.955591201782227
    8. '[c' → logprob: -9.955591201782227
    9. '[' → logprob: -11.205591201782227
    10. '(' → logprob: -11.830591201782227

Token 1627: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.03810620680451393
    2. '.' → logprob: -3.2881062030792236
    3. '.c' → logprob: -10.663105964660645
    4. '.l' → logprob: -11.413105964660645
    5. '.component' → logprob: -11.538105964660645
    6. '.LENGTH' → logprob: -12.038105964660645
    7. 'length' → logprob: -12.288105964660645
    8. '(length' → logprob: -13.038105964660645
    9. '._' → logprob: -13.288105964660645
    10. '.Length' → logprob: -13.663105964660645

Token 1628: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015011483803391457
    2. 'for' → logprob: -4.390011310577393
    3. ' for' → logprob: -6.265011310577393
    4. '())' → logprob: -7.640011310577393
    5. ')' → logprob: -9.39001178741455
    6. '()+' → logprob: -11.01501178741455
    7. '()
' → logprob: -11.89001178741455
    8. '(' → logprob: -13.26501178741455
    9. ' ()' → logprob: -13.89001178741455
    10. '       ' → logprob: -13.89001178741455

Token 1629: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5232692956924438
    2. 'for' → logprob: -1.1482692956924438
    3. ')' → logprob: -2.5232691764831543
    4. '()' → logprob: -4.648269176483154
    5. '())' → logprob: -8.023269653320312
    6. '	for' → logprob: -10.148269653320312
    7. '<|end|>' → logprob: -11.023269653320312
    8. '   ' → logprob: -11.398269653320312
    9. '+' → logprob: -11.398269653320312
    10. '       ' → logprob: -11.773269653320312

Token 1630: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.531315314830863e-06
    2. ' c' → logprob: -12.625003814697266
    3. 'component' → logprob: -15.875003814697266
    4. '	c' → logprob: -17.750003814697266
    5. ')c' → logprob: -18.250003814697266
    6. '_c' → logprob: -18.500003814697266
    7. '
' → logprob: -19.125003814697266
    8. 'cation' → logprob: -20.500003814697266
    9. 'cdecl' → logprob: -21.875003814697266
    10. '$c' → logprob: -21.875003814697266

Token 1631: ' in' (ID: 306)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018980057910084724
    2. ' in' → logprob: -4.393980026245117
    3. 'in' → logprob: -5.518980026245117
    4. ' c' → logprob: -6.018980026245117
    5. '_c' → logprob: -12.893980026245117
    6. 'component' → logprob: -13.268980026245117
    7. '
' → logprob: -14.268980026245117
    8. ' ' → logprob: -14.268980026245117
    9. '	c' → logprob: -14.393980026245117
    10. '_' → logprob: -14.768980026245117

Token 1632: ' self' (ID: 1051)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.47425219416618347
    2. 'self' → logprob: -0.9742522239685059
    3. ' self' → logprob: -9.349251747131348
    4. ' components' → logprob: -9.474251747131348
    5. '
' → logprob: -12.474251747131348
    6. 'component' → logprob: -12.599251747131348
    7. '_components' → logprob: -13.349251747131348
    8. '.components' → logprob: -14.224251747131348
    9. '(self' → logprob: -14.849251747131348
    10. '   ' → logprob: -14.974251747131348

Token 1633: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.815280696377158e-05
    2. '_components' → logprob: -9.500078201293945
    3. '.components' → logprob: -13.000078201293945
    4. '.' → logprob: -15.250078201293945
    5. 'components' → logprob: -15.500078201293945
    6. '_comp' → logprob: -15.750078201293945
    7. '.__' → logprob: -16.125078201293945
    8. '   ' → logprob: -16.250078201293945
    9. '
' → logprob: -17.125078201293945
    10. '_component' → logprob: -17.250078201293945

Token 1634: 'components' (ID: 8395)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.5759401321411133
    2. 'components' → logprob: -0.8259401321411133
    3. ' components' → logprob: -14.700940132141113
    4. '.components' → logprob: -15.075940132141113
    5. '_component' → logprob: -17.700939178466797
    6. '```' → logprob: -18.325939178466797
    7. 'component' → logprob: -18.450939178466797
    8. 'Components' → logprob: -18.700939178466797
    9. '
' → logprob: -19.075939178466797
    10. '-components' → logprob: -19.325939178466797

Token 1635: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003200922510586679
    2. '       ' → logprob: -9.125320434570312
    3. '+' → logprob: -9.500320434570312
    4. ')
' → logprob: -9.750320434570312
    5. ')+' → logprob: -10.250320434570312
    6. '<|end|>' → logprob: -11.000320434570312
    7. ' )' → logprob: -12.000320434570312
    8. '   ' → logprob: -12.000320434570312
    9. ' +' → logprob: -13.000320434570312
    10. '+)' → logprob: -13.125320434570312

Token 1636: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15248458087444305
    2. '   ' → logprob: -2.027484655380249
    3. ' def' → logprob: -5.15248441696167
    4. '```' → logprob: -5.90248441696167
    5. '
' → logprob: -6.77748441696167
    6. ' ' → logprob: -10.527484893798828
    7. '    
' → logprob: -10.652484893798828
    8. '<|end|>' → logprob: -11.402484893798828
    9. '	def' → logprob: -11.777484893798828
    10. '``' → logprob: -12.652484893798828

Token 1637: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.456358823925257e-05
    2. ' def' → logprob: -10.250064849853516
    3. '
' → logprob: -10.875064849853516
    4. '   ' → logprob: -11.625064849853516
    5. '    
' → logprob: -14.375064849853516
    6. '```' → logprob: -15.125064849853516
    7. '@property' → logprob: -16.125064849853516
    8. '	def' → logprob: -16.625064849853516
    9. '

' → logprob: -17.250064849853516
    10. '        
' → logprob: -17.375064849853516

Token 1638: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -3.130576806142926e-05
    2. ' length' → logprob: -10.375031471252441
    3. 'len' → logprob: -18.500030517578125
    4. '_length' → logprob: -19.125030517578125
    5. '	length' → logprob: -19.125030517578125
    6. 'def' → logprob: -19.500030517578125
    7. '(length' → logprob: -19.750030517578125
    8. '__' → logprob: -19.875030517578125
    9. 'leng' → logprob: -20.625030517578125
    10. '.length' → logprob: -21.250030517578125

Token 1639: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011963017750531435
    2. '(' → logprob: -6.751196384429932
    3. '()' → logprob: -10.876195907592773
    4. '(
' → logprob: -12.126195907592773
    5. 'self' → logprob: -14.126195907592773
    6. '   ' → logprob: -15.126195907592773
    7. ' (' → logprob: -16.001195907592773
    8. 'def' → logprob: -16.001195907592773
    9. '(s' → logprob: -16.126195907592773
    10. '```' → logprob: -16.251195907592773

Token 1640: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.037835706025362015
    2. ')' → logprob: -3.7878355979919434
    3. '()' → logprob: -4.537835597991943
    4. '(' → logprob: -5.662835597991943
    5. '   ' → logprob: -8.662836074829102
    6. 'self' → logprob: -9.412836074829102
    7. '(
' → logprob: -10.412836074829102
    8. '       ' → logprob: -11.662836074829102
    9. '())' → logprob: -12.162836074829102
    10. ' ' → logprob: -12.787836074829102

Token 1641: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012578285299241543
    2. '->' → logprob: -4.88757848739624
    3. '(' → logprob: -5.38757848739624
    4. ' ->' → logprob: -8.512578010559082
    5. 'self' → logprob: -8.887578010559082
    6. '(
' → logprob: -11.262578010559082
    7. ')' → logprob: -11.262578010559082
    8. '   ' → logprob: -11.387578010559082
    9. 'def' → logprob: -12.762578010559082
    10. '       ' → logprob: -12.887578010559082

Token 1642: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002036595979006961
    2. ' int' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.50020408630371
    4. ')' → logprob: -20.00020408630371
    5. '(int' → logprob: -20.25020408630371
    6. ':int' → logprob: -20.37520408630371
    7. '  ' → logprob: -20.62520408630371
    8. ' ' → logprob: -20.75020408630371
    9. '[int' → logprob: -21.00020408630371
    10. '       ' → logprob: -21.37520408630371

Token 1643: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008287250995635986
    2. 'self' → logprob: -5.00828742980957
    3. '       ' → logprob: -7.25828742980957
    4. '   ' → logprob: -8.25828742980957
    5. '->' → logprob: -8.75828742980957
    6. '(
' → logprob: -8.88328742980957
    7. ':
' → logprob: -9.00828742980957
    8. '(' → logprob: -9.00828742980957
    9. ':' → logprob: -10.50828742980957
    10. ' self' → logprob: -11.13328742980957

Token 1644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030327325221151114
    2. 'return' → logprob: -5.878032684326172
    3. '```' → logprob: -9.128032684326172
    4. '
' → logprob: -9.753032684326172
    5. ' return' → logprob: -9.878032684326172
    6. '   ' → logprob: -12.878032684326172
    7. '           ' → logprob: -14.003032684326172
    8. '[' → logprob: -14.253032684326172
    9. '``' → logprob: -14.253032684326172
    10. ':' → logprob: -14.253032684326172

Token 1645: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00034380643046461046
    2. '       ' → logprob: -8.000344276428223
    3. ' return' → logprob: -11.750344276428223
    4. '
' → logprob: -15.500344276428223
    5. '```' → logprob: -16.375343322753906
    6. '   ' → logprob: -16.625343322753906
    7. '	return' → logprob: -17.000343322753906
    8. '        
' → logprob: -19.125343322753906
    9. '{return' → logprob: -19.375343322753906
    10. '           ' → logprob: -20.500343322753906

Token 1646: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.836499985889532e-05
    2. ' self' → logprob: -9.7500581741333
    3. '       ' → logprob: -18.500059127807617
    4. '	self' → logprob: -18.875059127807617
    5. '
' → logprob: -19.125059127807617
    6. '(self' → logprob: -19.500059127807617
    7. '   ' → logprob: -21.000059127807617
    8. '[self' → logprob: -22.000059127807617
    9. '$self' → logprob: -22.500059127807617
    10. '0' → logprob: -22.875059127807617

Token 1647: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.05500471219420433
    2. '_length' → logprob: -2.930004596710205
    3. '   ' → logprob: -9.555005073547363
    4. '_lengths' → logprob: -11.305005073547363
    5. '.' → logprob: -11.555005073547363
    6. '.length' → logprob: -11.680005073547363
    7. ' _' → logprob: -12.180005073547363
    8. '_len' → logprob: -12.430005073547363
    9. '       ' → logprob: -12.680005073547363
    10. '->_' → logprob: -13.430005073547363

Token 1648: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -2.2200749754119897e-06
    2. '_length' → logprob: -13.250001907348633
    3. ' length' → logprob: -15.750001907348633
    4. 'len' → logprob: -16.125001907348633
    5. 'ength' → logprob: -17.875001907348633
    6. '	length' → logprob: -18.250001907348633
    7. 'leng' → logprob: -18.750001907348633
    8. 'Length' → logprob: -18.875001907348633
    9. '-length' → logprob: -19.000001907348633
    10. '(length' → logprob: -19.250001907348633

Token 1649: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015596829354763031
    2. '   ' → logprob: -4.390596866607666
    3. 'def' → logprob: -6.390596866607666
    4. '    
' → logprob: -7.140596866607666
    5. '

' → logprob: -8.140596389770508
    6. '```' → logprob: -9.015596389770508
    7. '  
' → logprob: -9.265596389770508
    8. ' def' → logprob: -9.890596389770508
    9. ' 
' → logprob: -10.640596389770508
    10. '<|end|>' → logprob: -11.390596389770508

Token 1650: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6738923788070679
    2. '
' → logprob: -1.0488923788070679
    3. '```' → logprob: -2.2988924980163574
    4. '   ' → logprob: -3.4238924980163574
    5. ' def' → logprob: -5.423892498016357
    6. '``' → logprob: -6.673892498016357
    7. '    
' → logprob: -7.048892498016357
    8. '	def' → logprob: -9.1738920211792
    9. '

' → logprob: -9.4238920211792
    10. '`' → logprob: -9.6738920211792

Token 1651: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.8624639324116288e-06
    2. '   ' → logprob: -13.625001907348633
    3. ' def' → logprob: -14.375001907348633
    4. '	def' → logprob: -19.125001907348633
    5. 'from' → logprob: -19.375001907348633
    6. '
' → logprob: -19.750001907348633
    7. '```' → logprob: -21.000001907348633
    8. '    
' → logprob: -21.750001907348633
    9. 'Def' → logprob: -22.250001907348633
    10. '       ' → logprob: -23.375001907348633

Token 1652: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -4.320199877838604e-07
    2. '_get' → logprob: -14.75
    3. ' get' → logprob: -17.25
    4. '
' → logprob: -19.25
    5. 'def' → logprob: -20.875
    6. '.get' → logprob: -21.375
    7. '	get' → logprob: -22.125
    8. '

' → logprob: -24.0
    9. '   ' → logprob: -24.25
    10. '@get' → logprob: -25.125

Token 1653: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: 0.0
    2. '_chars' → logprob: -18.75
    3. '```' → logprob: -18.875
    4. '_comp' → logprob: -19.125
    5. '
' → logprob: -19.625
    6. '_CHAR' → logprob: -20.25
    7. '_character' → logprob: -20.375
    8. '_component' → logprob: -20.5
    9. '_c' → logprob: -20.625
    10. '_' → logprob: -20.625

Token 1654: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: 0.0
    2. '_a' → logprob: -18.5
    3. '```' → logprob: -18.75
    4. ' _' → logprob: -19.125
    5. '   ' → logprob: -19.25
    6. '_' → logprob: -19.75
    7. ')_' → logprob: -20.375
    8. '	at' → logprob: -20.5
    9. '_AT' → logprob: -20.625
    10. 's' → logprob: -20.875

Token 1655: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00019245444855187088
    2. '(' → logprob: -8.750192642211914
    3. 'self' → logprob: -10.375192642211914
    4. '(
' → logprob: -13.375192642211914
    5. ' (' → logprob: -14.875192642211914
    6. '   ' → logprob: -14.875192642211914
    7. 'def' → logprob: -15.625192642211914
    8. '
' → logprob: -16.375192642211914
    9. ' ' → logprob: -16.500192642211914
    10. '       ' → logprob: -16.750192642211914

Token 1656: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0038758390583097935
    2. '(' → logprob: -5.753875732421875
    3. 'self' → logprob: -7.628875732421875
    4. '   ' → logprob: -10.003875732421875
    5. '(
' → logprob: -10.003875732421875
    6. ' (' → logprob: -10.378875732421875
    7. ')' → logprob: -11.003875732421875
    8. ' ' → logprob: -11.253875732421875
    9. '       ' → logprob: -11.378875732421875
    10. 'index' → logprob: -11.503875732421875

Token 1657: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.03824494406580925
    2. 'self' → logprob: -3.2882449626922607
    3. ' index' → logprob: -8.53824520111084
    4. ' self' → logprob: -11.91324520111084
    5. '   ' → logprob: -14.16324520111084
    6. '       ' → logprob: -15.28824520111084
    7. ' ' → logprob: -17.788244247436523
    8. '(self' → logprob: -17.913244247436523
    9. '     ' → logprob: -18.538244247436523
    10. '```' → logprob: -18.538244247436523

Token 1658: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16305819153785706
    2. 'self' → logprob: -2.663058280944824
    3. ')' → logprob: -3.163058280944824
    4. '   ' → logprob: -3.913058280944824
    5. '       ' → logprob: -4.413058280944824
    6. '(' → logprob: -5.538058280944824
    7. ' self' → logprob: -7.038058280944824
    8. ' ' → logprob: -8.163058280944824
    9. 'def' → logprob: -8.663058280944824
    10. '[' → logprob: -8.663058280944824

Token 1659: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2015739381313324
    2. 'self' → logprob: -1.7015739679336548
    3. ' int' → logprob: -9.451574325561523
    4. 'index' → logprob: -10.076574325561523
    5. ' self' → logprob: -10.451574325561523
    6. 'def' → logprob: -11.951574325561523
    7. '(self' → logprob: -13.326574325561523
    8. '   ' → logprob: -13.576574325561523
    9. '       ' → logprob: -14.451574325561523
    10. ')' → logprob: -14.451574325561523

Token 1660: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010560661554336548
    2. '):' → logprob: -5.135560512542725
    3. '):
' → logprob: -5.510560512542725
    4. ':' → logprob: -8.010560989379883
    5. '   ' → logprob: -8.760560989379883
    6. '       ' → logprob: -9.760560989379883
    7. ')->' → logprob: -10.760560989379883
    8. ' )' → logprob: -12.635560989379883
    9. '):
' → logprob: -12.885560989379883
    10. '):

' → logprob: -13.760560989379883

Token 1661: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19293054938316345
    2. '->' → logprob: -1.8179305791854858
    3. ':
' → logprob: -5.192930698394775
    4. ' ->' → logprob: -5.317930698394775
    5. ')' → logprob: -6.317930698394775
    6. '       ' → logprob: -7.567930698394775
    7. '   ' → logprob: -8.567930221557617
    8. ')->' → logprob: -9.567930221557617
    9. ':return' → logprob: -10.692930221557617
    10. 'def' → logprob: -11.567930221557617

Token 1662: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -8.77627644513268e-06
    2. ' Optional' → logprob: -11.750008583068848
    3. 'int' → logprob: -14.500008583068848
    4. '(Optional' → logprob: -15.375008583068848
    5. 'Union' → logprob: -18.125009536743164
    6. 'str' → logprob: -18.125009536743164
    7. 'self' → logprob: -18.500009536743164
    8. '   ' → logprob: -18.750009536743164
    9. '	Optional' → logprob: -18.875009536743164
    10. '       ' → logprob: -19.500009536743164

Token 1663: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0227251835167408
    2. '[int' → logprob: -4.2727251052856445
    3. '[' → logprob: -4.8977251052856445
    4. '[
' → logprob: -7.0227251052856445
    5. '[self' → logprob: -9.522725105285645
    6. '['' → logprob: -9.647725105285645
    7. '(str' → logprob: -11.647725105285645
    8. 'def' → logprob: -12.022725105285645
    9. '[List' → logprob: -12.022725105285645
    10. 'str' → logprob: -12.772725105285645

Token 1664: ']:
' (ID: 22152)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7978981137275696
    2. '):
' → logprob: -0.7978981137275696
    3. ':
' → logprob: -2.672898054122925
    4. ':' → logprob: -4.422898292541504
    5. '   ' → logprob: -4.922898292541504
    6. '):' → logprob: -4.922898292541504
    7. ']:
' → logprob: -6.047898292541504
    8. '():
' → logprob: -8.422898292541504
    9. '(self' → logprob: -8.672898292541504
    10. 'self' → logprob: -8.672898292541504

Token 1665: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009512408869341016
    2. 'if' → logprob: -7.500951290130615
    3. ' if' → logprob: -8.000950813293457
    4. '```' → logprob: -10.500950813293457
    5. '
' → logprob: -10.875950813293457
    6. '           ' → logprob: -12.625950813293457
    7. '   ' → logprob: -13.000950813293457
    8. ' for' → logprob: -13.250950813293457
    9. 'for' → logprob: -13.500950813293457
    10. '`' → logprob: -13.750950813293457

Token 1666: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20193102955818176
    2. '       ' → logprob: -2.4519309997558594
    3. 'if' (adapté à ' if') → logprob: -2.4519309997558594
    4. 'current' → logprob: -4.701930999755859
    5. ' for' → logprob: -6.701930999755859
    6. ' if' → logprob: -9.57693099975586
    7. 'i' → logprob: -9.82693099975586
    8. 'curr' → logprob: -9.95193099975586
    9. 'remaining' → logprob: -10.20193099975586
    10. 'pos' → logprob: -10.57693099975586

Token 1667: ' not' (ID: 625)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.16956883668899536
    2. '0' → logprob: -1.9195687770843506
    3. ' index' → logprob: -4.79456901550293
    4. ' not' → logprob: -7.66956901550293
    5. 'not' → logprob: -8.04456901550293
    6. ' ' → logprob: -8.41956901550293
    7. '(index' → logprob: -11.79456901550293
    8. '   ' → logprob: -12.66956901550293
    9. '	index' → logprob: -13.16956901550293
    10. '1' → logprob: -13.29456901550293

Token 1668: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030739692971110344
    2. '0' → logprob: -3.7807397842407227
    3. ' (' → logprob: -4.905739784240723
    4. ' ' → logprob: -9.780739784240723
    5. 'self' → logprob: -12.905739784240723
    6. '1' → logprob: -13.405739784240723
    7. '
' → logprob: -13.905739784240723
    8. '(self' → logprob: -14.780739784240723
    9. '   ' → logprob: -16.155738830566406
    10. '[' → logprob: -16.405738830566406

Token 1669: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.75002670288086
    4. '۰' → logprob: -19.12502670288086
    5. '(' → logprob: -19.25002670288086
    6. '
' → logprob: -19.25002670288086
    7. ')' → logprob: -19.75002670288086
    8. '  ' → logprob: -20.56252670288086
    9. ' ' → logprob: -20.75002670288086
    10. '-' → logprob: -20.93752670288086

Token 1670: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07889077812433243
    2. ' <=' → logprob: -2.578890800476074
    3. '<' → logprob: -13.953890800476074
    4. '0' → logprob: -16.453889846801758
    5. '>=' → logprob: -17.203889846801758
    6. '   ' → logprob: -18.203889846801758
    7. ' <' → logprob: -18.203889846801758
    8. ')<=' → logprob: -18.203889846801758
    9. '```' → logprob: -18.578889846801758
    10. '≤' → logprob: -19.203889846801758

Token 1671: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.00033546582562848926
    2. ' index' → logprob: -8.000335693359375
    3. '	index' → logprob: -21.625335693359375
    4. '   ' → logprob: -21.875335693359375
    5. '=index' → logprob: -22.250335693359375
    6. '[index' → logprob: -22.375335693359375
    7. '(index' → logprob: -22.875335693359375
    8. ' ' → logprob: -23.250335693359375
    9. '_index' → logprob: -23.500335693359375
    10. '
' → logprob: -24.000335693359375

Token 1672: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.018157200887799263
    2. ' <' → logprob: -4.018157005310059
    3. '<len' → logprob: -13.268157005310059
    4. 'and' → logprob: -13.393157005310059
    5. ')<' → logprob: -14.143157005310059
    6. '<size' → logprob: -14.393157005310059
    7. '<int' → logprob: -14.393157005310059
    8. ' and' → logprob: -14.518157005310059
    9. '<
' → logprob: -14.643157005310059
    10. '<n' → logprob: -14.893157005310059

Token 1673: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012356207298580557
    2. ' self' → logprob: -9.000123977661133
    3. '       ' → logprob: -16.375123977661133
    4. '           ' → logprob: -17.250123977661133
    5. '(self' → logprob: -17.625123977661133
    6. '0' → logprob: -18.750123977661133
    7. '
' → logprob: -19.000123977661133
    8. '               ' → logprob: -19.125123977661133
    9. '   ' → logprob: -19.250123977661133
    10. '	self' → logprob: -19.875123977661133

Token 1674: '._' (ID: 2697)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.46182432770729065
    2. 'self' → logprob: -1.2118242979049683
    3. '._' → logprob: -3.211824417114258
    4. '_self' → logprob: -4.461824417114258
    5. ' _' → logprob: -4.961824417114258
    6. '_len' → logprob: -5.336824417114258
    7. '       ' → logprob: -5.836824417114258
    8. '   ' → logprob: -6.211824417114258
    9. ' self' → logprob: -6.336824417114258
    10. '_' → logprob: -6.961824417114258

Token 1675: 'length' (ID: 7914)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.6104311347007751
    2. 'self' → logprob: -1.36043119430542
    3. 'length' → logprob: -1.61043119430542
    4. '_len' → logprob: -8.110430717468262
    5. 'len' → logprob: -9.235430717468262
    6. '
' → logprob: -10.735430717468262
    7. '_' → logprob: -11.110430717468262
    8. '_self' → logprob: -11.360430717468262
    9. '_l' → logprob: -11.610430717468262
    10. ' self' → logprob: -11.610430717468262

Token 1676: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011265450157225132
    2. '):' → logprob: -5.136265277862549
    3. ':
' → logprob: -5.886265277862549
    4. '       ' → logprob: -6.511265277862549
    5. ':' → logprob: -7.011265277862549
    6. ' ):
' → logprob: -9.261265754699707
    7. '           ' → logprob: -10.261265754699707
    8. '):
' → logprob: -11.511265754699707
    9. '   ' → logprob: -12.136265754699707
    10. ')' → logprob: -12.386265754699707

Token 1677: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028916557785123587
    2. '   ' → logprob: -7.002891540527344
    3. ' for' → logprob: -7.252891540527344
    4. 'current' → logprob: -7.752891540527344
    5. 'for' → logprob: -8.127891540527344
    6. '       ' → logprob: -8.127891540527344
    7. '
' → logprob: -9.252891540527344
    8. ' current' → logprob: -9.627891540527344
    9. '```' → logprob: -10.877891540527344
    10. '	       ' → logprob: -11.002891540527344

Token 1678: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001848254178185016
    2. ' return' → logprob: -9.250185012817383
    3. '           ' → logprob: -9.375185012817383
    4. '   ' → logprob: -13.375185012817383
    5. 'index' → logprob: -13.875185012817383
    6. '       ' → logprob: -14.125185012817383
    7. 'current' → logprob: -15.125185012817383
    8. 'for' → logprob: -15.875185012817383
    9. '	return' → logprob: -16.125185012817383
    10. 'i' → logprob: -17.125185012817383

Token 1679: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.7610454708337784e-05
    2. ' None' → logprob: -10.500027656555176
    3. '
' → logprob: -20.50002670288086
    4. '   ' → logprob: -20.75002670288086
    5. '_None' → logprob: -21.37502670288086
    6. '(None' → logprob: -21.62502670288086
    7. 'No' → logprob: -21.87502670288086
    8. '       ' → logprob: -22.75002670288086
    9. '=None' → logprob: -22.75002670288086
    10. 'none' → logprob: -23.25002670288086

Token 1680: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12803544104099274
    2. '       ' → logprob: -2.128035545349121
    3. '        
' → logprob: -7.253035545349121
    4. '
' → logprob: -8.503035545349121
    5. '    
' → logprob: -9.378035545349121
    6. '  
' → logprob: -9.503035545349121
    7. ' 
' → logprob: -11.878035545349121
    8. '\n' → logprob: -12.003035545349121
    9. '   
' → logprob: -12.753035545349121
    10. '   ' → logprob: -13.003035545349121

Token 1681: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005758961196988821
    2. 'for' → logprob: -6.380758762359619
    3. 'current' → logprob: -6.380758762359619
    4. '
' → logprob: -6.630758762359619
    5. '```' → logprob: -7.755758762359619
    6. ' for' → logprob: -8.130759239196777
    7. '   ' → logprob: -9.005759239196777
    8. '           ' → logprob: -9.755759239196777
    9. ' current' → logprob: -10.755759239196777
    10. 'total' → logprob: -10.880759239196777

Token 1682: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18084865808486938
    2. 'current' (adapté à ' current') → logprob: -2.4308485984802246
    3. 'acc' → logprob: -3.1808485984802246
    4. 'offset' → logprob: -3.6808485984802246
    5. 'pos' → logprob: -5.430848598480225
    6. 'curr' → logprob: -6.180848598480225
    7. '       ' → logprob: -6.430848598480225
    8. 'cur' → logprob: -6.930848598480225
    9. 'remaining' → logprob: -7.555848598480225
    10. 'c' → logprob: -7.680848598480225

Token 1683: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.13233141601085663
    2. '_pos' → logprob: -2.382331371307373
    3. '_idx' → logprob: -4.007331371307373
    4. '_component' → logprob: -4.757331371307373
    5. '_comp' → logprob: -6.632331371307373
    6. '_offset' → logprob: -6.757331371307373
    7. '_' → logprob: -6.882331371307373
    8. '=' → logprob: -6.882331371307373
    9. ' =' → logprob: -9.507331848144531
    10. 'pos' → logprob: -10.132331848144531

Token 1684: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408607602119446
    2. '=' → logprob: -0.9740860462188721
    3. '_offset' → logprob: -13.099085807800293
    4. '_' → logprob: -13.224085807800293
    5. ' ' → logprob: -13.349085807800293
    6. '   ' → logprob: -13.599085807800293
    7. ':' → logprob: -14.724085807800293
    8. '	' → logprob: -15.224085807800293
    9. 's' → logprob: -15.349085807800293
    10. '_remaining' → logprob: -15.474085807800293

Token 1685: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.621933451038785e-05
    2. 'index' → logprob: -10.375056266784668
    3. ' ' → logprob: -10.625056266784668
    4. '   ' → logprob: -15.250056266784668
    5. ' index' → logprob: -16.25005531311035
    6. '```' → logprob: -16.50005531311035
    7. '
' → logprob: -17.25005531311035
    8. '       ' → logprob: -17.62505531311035
    9. '[index' → logprob: -17.62505531311035
    10. '۰' → logprob: -17.75005531311035

Token 1686: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003517894074320793
    2. 'index' → logprob: -8.000351905822754
    3. ' ' → logprob: -11.125351905822754
    4. ' index' → logprob: -14.625351905822754
    5. '   ' → logprob: -15.125351905822754
    6. '```' → logprob: -15.750351905822754
    7. '
' → logprob: -15.875351905822754
    8. '[index' → logprob: -16.125350952148438
    9. '=index' → logprob: -16.437850952148438
    10. '(index' → logprob: -16.437850952148438

Token 1687: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4831124544143677
    2. '       ' → logprob: -0.9831124544143677
    3. ' for' → logprob: -4.733112335205078
    4. '
' → logprob: -8.733112335205078
    5. '   ' → logprob: -11.358112335205078
    6. '	for' → logprob: -11.733112335205078
    7. '           ' → logprob: -12.858112335205078
    8. ',' → logprob: -12.858112335205078
    9. '	' → logprob: -13.108112335205078
    10. 'For' → logprob: -13.858112335205078

Token 1688: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10100060701370239
    2. '       ' → logprob: -2.3510005474090576
    3. ' for' → logprob: -7.226000785827637
    4. '
' → logprob: -9.976000785827637
    5. '   ' → logprob: -11.226000785827637
    6. '           ' → logprob: -12.726000785827637
    7. '```' → logprob: -13.351000785827637
    8. '	for' → logprob: -14.476000785827637
    9. '               ' → logprob: -14.851000785827637
    10. 'For' → logprob: -15.601000785827637

Token 1689: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.6550729419104755e-05
    2. '       ' → logprob: -10.250036239624023
    3. ' for' → logprob: -13.750036239624023
    4. '
' → logprob: -17.625036239624023
    5. '   ' → logprob: -17.750036239624023
    6. '	for' → logprob: -18.750036239624023
    7. '           ' → logprob: -19.375036239624023
    8. 'For' → logprob: -19.500036239624023
    9. '```' → logprob: -20.000036239624023
    10. '﻿' → logprob: -21.500036239624023

Token 1690: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.004114138428121805
    2. 'comp' → logprob: -5.504114151000977
    3. 'c' → logprob: -10.254114151000977
    4. ' component' → logprob: -14.754114151000977
    5. 'com' → logprob: -17.504114151000977
    6. 'compound' → logprob: -17.754114151000977
    7. ' comp' → logprob: -17.879114151000977
    8. 'cmp' → logprob: -18.879114151000977
    9. '	component' → logprob: -19.254114151000977
    10. '(component' → logprob: -19.379114151000977

Token 1691: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5765644907951355
    2. 'in' → logprob: -0.8265644907951355
    3. ',' → logprob: -7.826564311981201
    4. '   ' → logprob: -9.45156478881836
    5. '_in' → logprob: -9.82656478881836
    6. '.' → logprob: -10.45156478881836
    7. '	in' → logprob: -11.57656478881836
    8. ' ' → logprob: -12.07656478881836
    9. '_' → logprob: -12.07656478881836
    10. 'import' → logprob: -12.45156478881836

Token 1692: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002978048287332058
    2. ' self' → logprob: -8.125297546386719
    3. '
' → logprob: -13.875297546386719
    4. 'component' → logprob: -14.625297546386719
    5. '       ' → logprob: -15.750297546386719
    6. '   ' → logprob: -16.00029754638672
    7. '(self' → logprob: -16.25029754638672
    8. ' ' → logprob: -17.50029754638672
    9. '[self' → logprob: -17.87529754638672
    10. '	self' → logprob: -18.12529754638672

Token 1693: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0006696671480312943
    2. '.' → logprob: -8.125669479370117
    3. 'in' → logprob: -8.625669479370117
    4. ' in' → logprob: -9.250669479370117
    5. '   ' → logprob: -10.500669479370117
    6. '_in' → logprob: -10.875669479370117
    7. ' .' → logprob: -11.625669479370117
    8. '.
' → logprob: -11.875669479370117
    9. '.__' → logprob: -11.875669479370117
    10. ':' → logprob: -12.125669479370117

Token 1694: 'components' (ID: 8395)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.0007236333331093192
    2. 'components' → logprob: -7.250723838806152
    3. '_component' → logprob: -11.375723838806152
    4. '_' → logprob: -14.125723838806152
    5. '.components' → logprob: -14.250723838806152
    6. '_comp' → logprob: -14.875723838806152
    7. '._' → logprob: -15.750723838806152
    8. 'component' → logprob: -16.500722885131836
    9. ' _' → logprob: -16.750722885131836
    10. ' components' → logprob: -17.250722885131836

Token 1695: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22099590301513672
    2. '           ' → logprob: -1.8459959030151367
    3. ':' → logprob: -3.2209959030151367
    4. ',' → logprob: -8.970995903015137
    5. '       ' → logprob: -9.220995903015137
    6. '[' → logprob: -9.720995903015137
    7. '):
' → logprob: -9.845995903015137
    8. ' :
' → logprob: -10.345995903015137
    9. '<|end|>' → logprob: -10.720995903015137
    10. '          ' → logprob: -11.595995903015137

Token 1696: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04406549036502838
    2. 'if' → logprob: -3.669065475463867
    3. ' if' → logprob: -4.044065475463867
    4. '       ' → logprob: -10.919065475463867
    5. '	       ' → logprob: -11.169065475463867
    6. '   ' → logprob: -11.294065475463867
    7. '
' → logprob: -11.794065475463867
    8. '```' → logprob: -12.044065475463867
    9. '          ' → logprob: -12.169065475463867
    10. ',' → logprob: -13.044065475463867

Token 1697: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.008258646354079247
    2. 'if' → logprob: -5.133258819580078
    3. 'component' → logprob: -6.758258819580078
    4. 'cl' → logprob: -7.383258819580078
    5. '       ' → logprob: -8.633258819580078
    6. 'c' → logprob: -8.633258819580078
    7. 'length' → logprob: -8.883258819580078
    8. '           ' → logprob: -10.883258819580078
    9. 'cmp' → logprob: -11.008258819580078
    10. 'end' → logprob: -12.383258819580078

Token 1698: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.12694469094276428
    2. '_length' → logprob: -2.1269447803497314
    3. '_l' → logprob: -11.126944541931152
    4. '_size' → logprob: -13.751944541931152
    5. 'len' → logprob: -15.001944541931152
    6. 'Len' → logprob: -15.501944541931152
    7. 'length' → logprob: -16.12694549560547
    8. 'Length' → logprob: -16.50194549560547
    9. '_lengths' → logprob: -16.87694549560547
    10. '._' → logprob: -17.12694549560547

Token 1699: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.045043706893921
    2. ' =' → logprob: -1.795043706893921
    3. '=' → logprob: -1.920043706893921
    4. ' <=' → logprob: -2.170043706893921
    5. '+=' → logprob: -2.670043706893921
    6. '           ' → logprob: -2.795043706893921
    7. '<=' → logprob: -2.795043706893921
    8. '+' → logprob: -5.0450439453125
    9. ' +' → logprob: -5.1700439453125
    10. '<|end|>' → logprob: -5.2950439453125

Token 1700: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -2.15310683415737e-05
    2. ' component' → logprob: -10.750021934509277
    3. '(component' → logprob: -17.62502098083496
    4. '	component' → logprob: -18.00002098083496
    5. '           ' → logprob: -18.87502098083496
    6. '.component' → logprob: -21.50002098083496
    7. '```' → logprob: -21.50002098083496
    8. '   ' → logprob: -21.87502098083496
    9. ' ' → logprob: -22.75002098083496
    10. '`' → logprob: -23.50002098083496

Token 1701: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -3.047134305234067e-05
    2. '.' → logprob: -10.625030517578125
    3. 'length' → logprob: -13.000030517578125
    4. '._' → logprob: -13.375030517578125
    5. '.
' → logprob: -14.750030517578125
    6. ' .' → logprob: -14.875030517578125
    7. '.l' → logprob: -15.125030517578125
    8. '   ' → logprob: -15.375030517578125
    9. '
' → logprob: -15.500030517578125
    10. '_length' → logprob: -15.750030517578125

Token 1702: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020129792392253876
    2. '
' → logprob: -6.502013206481934
    3. '               ' → logprob: -8.377013206481934
    4. ',' → logprob: -9.752013206481934
    5. '	       ' → logprob: -10.252013206481934
    6. '<|end|>' → logprob: -10.377013206481934
    7. '		' → logprob: -10.752013206481934
    8. '=' → logprob: -10.752013206481934
    9. '            
' → logprob: -10.877013206481934
    10. '          ' → logprob: -11.127013206481934

Token 1703: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015628274995833635
    2. 'if' → logprob: -6.626562595367432
    3. ' if' → logprob: -8.50156307220459
    4. '	       ' → logprob: -11.25156307220459
    5. '               ' → logprob: -11.62656307220459
    6. '```' → logprob: -12.50156307220459
    7. '		' → logprob: -12.87656307220459
    8. ';if' → logprob: -13.87656307220459
    9. 'If' → logprob: -14.25156307220459
    10. '          ' → logprob: -14.37656307220459

Token 1704: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004785630386322737
    2. '           ' → logprob: -5.504785537719727
    3. ' if' → logprob: -7.254785537719727
    4. 'If' → logprob: -16.004785537719727
    5. ';if' → logprob: -16.879785537719727
    6. '	if' → logprob: -17.504785537719727
    7. '   ' → logprob: -18.504785537719727
    8. '```' → logprob: -18.629785537719727
    9. '               ' → logprob: -18.754785537719727
    10. '       ' → logprob: -19.004785537719727

Token 1705: ' current' (ID: 2208)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.1800824999809265
    2. 'current' → logprob: -1.8050825595855713
    3. ' index' → logprob: -8.555082321166992
    4. ' current' → logprob: -8.930082321166992
    5. '   ' → logprob: -12.055082321166992
    6. ' ' → logprob: -12.805082321166992
    7. '	index' → logprob: -13.305082321166992
    8. '	current' → logprob: -13.930082321166992
    9. '0' → logprob: -15.305082321166992
    10. '(index' → logprob: -15.805082321166992

Token 1706: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00045081099960952997
    2. 'index' → logprob: -8.00045108795166
    3. '_' → logprob: -10.12545108795166
    4. '   ' → logprob: -11.00045108795166
    5. '<' → logprob: -11.25045108795166
    6. '>=' → logprob: -12.50045108795166
    7. 'Index' → logprob: -12.50045108795166
    8. '
' → logprob: -12.62545108795166
    9. '<=' → logprob: -12.75045108795166
    10. '       ' → logprob: -12.87545108795166

Token 1707: ' +' (ID: 659)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.03609807789325714
    2. '+' → logprob: -3.411098003387451
    3. ' <=' → logprob: -6.036098003387451
    4. ' +' → logprob: -9.91109848022461
    5. '```' → logprob: -12.66109848022461
    6. '   ' → logprob: -13.41109848022461
    7. '+=' → logprob: -13.53609848022461
    8. '
' → logprob: -13.66109848022461
    9. '>' → logprob: -15.16109848022461
    10. '<' → logprob: -15.53609848022461

Token 1708: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -6.704273118884885e-07
    2. ' comp' → logprob: -14.250000953674316
    3. 'com' → logprob: -20.375
    4. 'cmp' → logprob: -21.0
    5. 'component' → logprob: -21.875
    6. '	comp' → logprob: -21.875
    7. '(comp' → logprob: -22.5
    8. '   ' → logprob: -24.0
    9. '           ' → logprob: -24.375
    10. ' ' → logprob: -24.5

Token 1709: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.128163257315464e-07
    2. 'en' → logprob: -15.375
    3. '_LEN' → logprob: -16.875
    4. 'len' → logprob: -17.75
    5. '
' → logprob: -18.875
    6. 'Len' → logprob: -19.0
    7. '<len' → logprob: -19.125
    8. '```' → logprob: -19.125
    9. '       ' → logprob: -19.625
    10. 'ent' → logprob: -19.75

Token 1710: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03364754095673561
    2. ' >' → logprob: -3.4086475372314453
    3. '">' → logprob: -14.658647537231445
    4. '>
' → logprob: -14.908647537231445
    5. ' ' → logprob: -15.033647537231445
    6. '   ' → logprob: -15.908647537231445
    7. '           ' → logprob: -16.158647537231445
    8. '```' → logprob: -16.283647537231445
    9. '
' → logprob: -16.408647537231445
    10. '>`' → logprob: -16.533647537231445

Token 1711: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.00012356207298580557
    2. ' index' → logprob: -9.000123977661133
    3. '=index' → logprob: -17.625123977661133
    4. '
' → logprob: -17.625123977661133
    5. '	index' → logprob: -18.875123977661133
    6. '           ' → logprob: -19.500123977661133
    7. '[index' → logprob: -19.875123977661133
    8. '(index' → logprob: -20.000123977661133
    9. '#index' → logprob: -20.875123977661133
    10. '   ' → logprob: -21.000123977661133

Token 1712: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5570176243782043
    2. '               ' → logprob: -1.6820175647735596
    3. ':' → logprob: -2.0570175647735596
    4. ' and' → logprob: -2.9320175647735596
    5. '           ' → logprob: -2.9320175647735596
    6. 'and' → logprob: -5.182017803192139
    7. '            ' → logprob: -8.80701732635498
    8. ',' → logprob: -8.93201732635498
    9. '[' → logprob: -9.18201732635498
    10. '                       ' → logprob: -9.18201732635498

Token 1713: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2719448506832123
    2. ' return' → logprob: -2.021944761276245
    3. '           ' → logprob: -2.771944761276245
    4. 'return' → logprob: -3.146944761276245
    5. ' ' → logprob: -10.521944999694824
    6. '            ' → logprob: -10.896944999694824
    7. '                   ' → logprob: -11.021944999694824
    8. '[' → logprob: -11.146944999694824
    9. '                       ' → logprob: -11.146944999694824
    10. '                ' → logprob: -11.271944999694824

Token 1714: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0010291194776073098
    2. ' return' → logprob: -7.751029014587402
    3. '               ' → logprob: -8.001029014587402
    4. '                   ' → logprob: -8.251029014587402
    5. '                       ' → logprob: -13.751029014587402
    6. '	return' → logprob: -15.001029014587402
    7. '           ' → logprob: -15.126029014587402
    8. '                ' → logprob: -15.626029014587402
    9. '   ' → logprob: -16.25102996826172
    10. '                    ' → logprob: -16.87602996826172

Token 1715: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.0002613358374219388
    2. ' component' → logprob: -8.250261306762695
    3. '	component' → logprob: -17.250261306762695
    4. '(component' → logprob: -17.625261306762695
    5. '```' → logprob: -19.625261306762695
    6. '
' → logprob: -20.875261306762695
    7. 'components' → logprob: -21.250261306762695
    8. '.component' → logprob: -21.375261306762695
    9. '           ' → logprob: -21.625261306762695
    10. '`' → logprob: -22.000261306762695

Token 1716: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0036710910499095917
    2. '.' → logprob: -5.628671169281006
    3. ' .' → logprob: -10.378670692443848
    4. '._' → logprob: -10.503670692443848
    5. '.
' → logprob: -12.753670692443848
    6. '   ' → logprob: -12.878670692443848
    7. 'get' → logprob: -13.378670692443848
    8. '
' → logprob: -13.503670692443848
    9. '       ' → logprob: -14.253670692443848
    10. '           ' → logprob: -14.753670692443848

Token 1717: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -6.704273118884885e-07
    2. 'char' → logprob: -15.000000953674316
    3. '```' → logprob: -16.375
    4. ''_' → logprob: -16.625
    5. '_' → logprob: -17.375
    6. 'Char' → logprob: -17.75
    7. '_chars' → logprob: -17.875
    8. '_CHAR' → logprob: -18.625
    9. '_chr' → logprob: -18.625
    10. '
' → logprob: -18.875

Token 1718: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -6.704273118884885e-07
    2. '_char' → logprob: -15.750000953674316
    3. 'At' → logprob: -15.875000953674316
    4. 'at' → logprob: -16.0
    5. '```' → logprob: -16.25
    6. '_here' → logprob: -16.5
    7. '   ' → logprob: -17.625
    8. 's' → logprob: -18.125
    9. '_a' → logprob: -18.5
    10. '       ' → logprob: -18.625

Token 1719: '(index' (ID: 13517)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.03533751890063286
    2. '(index' → logprob: -3.410337448120117
    3. ' index' → logprob: -6.410337448120117
    4. '`' → logprob: -11.160337448120117
    5. ' (' → logprob: -11.285337448120117
    6. '(' → logprob: -11.785337448120117
    7. '[index' → logprob: -12.410337448120117
    8. '```' → logprob: -12.785337448120117
    9. '   ' → logprob: -13.535337448120117
    10. '
' → logprob: -14.285337448120117

Token 1720: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22956213355064392
    2. ' -' → logprob: -1.6045621633529663
    3. 'current' → logprob: -5.979562282562256
    4. '-current' → logprob: -6.729562282562256
    5. ' current' → logprob: -8.729561805725098
    6. '-
' → logprob: -9.354561805725098
    7. '[current' → logprob: -9.979561805725098
    8. ')' → logprob: -10.354561805725098
    9. ' ' → logprob: -10.354561805725098
    10. '(current' → logprob: -10.979561805725098

Token 1721: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -4.5491004129871726e-05
    2. ' current' → logprob: -10.000045776367188
    3. '           ' → logprob: -18.750045776367188
    4. '_current' → logprob: -20.250045776367188
    5. '                   ' → logprob: -20.375045776367188
    6. '   ' → logprob: -20.375045776367188
    7. '               ' → logprob: -20.625045776367188
    8. '
' → logprob: -21.000045776367188
    9. '[current' → logprob: -21.125045776367188
    10. '=current' → logprob: -21.125045776367188

Token 1722: '_index' (ID: 7748)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16067169606685638
    2. '_index' → logprob: -1.9106717109680176
    3. 'index' → logprob: -8.03567123413086
    4. ' current' → logprob: -9.91067123413086
    5. '_current' → logprob: -10.28567123413086
    6. '__' → logprob: -11.78567123413086
    7. 'Index' → logprob: -12.03567123413086
    8. '
' → logprob: -12.28567123413086
    9. '_' → logprob: -12.41067123413086
    10. '[current' → logprob: -12.78567123413086

Token 1723: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06932788342237473
    2. ')' → logprob: -2.8193278312683105
    3. '           ' → logprob: -4.9443278312683105
    4. '               ' → logprob: -8.944328308105469
    5. ' )
' → logprob: -9.819328308105469
    6. ')
' → logprob: -11.194328308105469
    7. '       ' → logprob: -11.944328308105469
    8. ' )' → logprob: -13.694328308105469
    9. '                   ' → logprob: -14.069328308105469
    10. ')

' → logprob: -14.319328308105469

Token 1724: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022725824965164065
    2. '
' → logprob: -9.000226974487305
    3. '               ' → logprob: -9.500226974487305
    4. '       ' → logprob: -11.750226974487305
    5. '		' → logprob: -12.000226974487305
    6. '[' → logprob: -12.750226974487305
    7. 'current' → logprob: -12.750226974487305
    8. '\n' → logprob: -13.125226974487305
    9. '            
' → logprob: -13.500226974487305
    10. 'return' → logprob: -13.500226974487305

Token 1725: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.1297033429145813
    2. '           ' → logprob: -2.1297032833099365
    3. ' current' → logprob: -6.004703521728516
    4. '       ' → logprob: -8.379703521728516
    5. '               ' → logprob: -10.629703521728516
    6. 'else' → logprob: -11.129703521728516
    7. '
' → logprob: -11.504703521728516
    8. '(current' → logprob: -11.754703521728516
    9. '[current' → logprob: -12.379703521728516
    10. ',current' → logprob: -12.754703521728516

Token 1726: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -13.125006675720215
    3. '   ' → logprob: -13.625006675720215
    4. '+' → logprob: -13.625006675720215
    5. '+=' → logprob: -14.375006675720215
    6. ' +=' → logprob: -15.125006675720215
    7. 'index' → logprob: -15.125006675720215
    8. '++' → logprob: -15.500006675720215
    9. '_current' → logprob: -15.750006675720215
    10. 's' → logprob: -16.00000762939453

Token 1727: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04860395938158035
    2. ' +=' → logprob: -3.0486040115356445
    3. '+' → logprob: -11.673604011535645
    4. '=' → logprob: -11.923604011535645
    5. ']+=' → logprob: -14.548604011535645
    6. '   ' → logprob: -15.298604011535645
    7. '       ' → logprob: -15.923604011535645
    8. '    ' → logprob: -16.173603057861328
    9. '        ' → logprob: -16.173603057861328
    10. '[' → logprob: -16.298603057861328

Token 1728: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.9361264946837764e-07
    2. ' comp' → logprob: -15.75
    3. '	comp' → logprob: -21.75
    4. 'com' → logprob: -23.125
    5. '(comp' → logprob: -23.75
    6. 'cmp' → logprob: -23.75
    7. 'component' → logprob: -24.0
    8. 'cap' → logprob: -25.5
    9. '_comp' → logprob: -25.75
    10. '   ' → logprob: -26.0

Token 1729: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.248469718324486e-05
    2. 'onent' → logprob: -10.750022888183594
    3. 'ent' → logprob: -14.375022888183594
    4. 'ponent' → logprob: -15.750022888183594
    5. 'o' → logprob: -16.250022888183594
    6. '_l' → logprob: -17.000022888183594
    7. 'on' → logprob: -17.500022888183594
    8. 'len' → logprob: -17.500022888183594
    9. 'ont' → logprob: -17.625022888183594
    10. '_length' → logprob: -18.000022888183594

Token 1730: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1015041247010231
    2. '<|end|>' → logprob: -2.85150408744812
    3. '
' → logprob: -3.47650408744812
    4. 'return' → logprob: -5.226504325866699
    5. '        
' → logprob: -6.726504325866699
    6. ' return' → logprob: -8.4765043258667
    7. '\n' → logprob: -8.6015043258667
    8. 'newline' → logprob: -8.8515043258667
    9. '```' → logprob: -9.1015043258667
    10. '[' → logprob: -9.6015043258667

Token 1731: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007977449335157871
    2. '<|end|>' → logprob: -5.007977485656738
    3. '
' → logprob: -7.382977485656738
    4. 'return' → logprob: -7.882977485656738
    5. '	' → logprob: -9.757977485656738
    6. '        
' → logprob: -10.132977485656738
    7. '```' → logprob: -10.132977485656738
    8. ' return' → logprob: -10.882977485656738
    9. '   ' → logprob: -11.132977485656738
    10. 'newline' → logprob: -11.257977485656738

Token 1732: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3526545464992523
    2. '       ' → logprob: -1.6026545763015747
    3. 'None' → logprob: -2.352654457092285
    4. ' return' → logprob: -8.102654457092285
    5. '
' → logprob: -8.352654457092285
    6. '```' → logprob: -10.102654457092285
    7. '   ' → logprob: -10.352654457092285
    8. ' None' → logprob: -10.852654457092285
    9. '#' → logprob: -11.227654457092285
    10. '        
' → logprob: -11.477654457092285

Token 1733: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.9361264946837764e-07
    2. ' None' → logprob: -16.625
    3. '(None' → logprob: -20.875
    4. '_None' → logprob: -22.25
    5. 'none' → logprob: -22.375
    6. '=None' → logprob: -23.125
    7. ',None' → logprob: -23.5
    8. '   ' → logprob: -23.5
    9. '#' → logprob: -23.75
    10. 'No' → logprob: -24.125

Token 1734: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1735: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1736: ' Genome' (ID: 168601)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.010056261904537678
    2. 'Compressed' → logprob: -6.135056495666504
    3. 'Test' → logprob: -6.760056495666504
    4. 'Gen' → logprob: -6.760056495666504
    5. 'Gene' → logprob: -6.885056495666504
    6. 'Sequence' → logprob: -7.135056495666504
    7. 'Literal' → logprob: -7.385056495666504
    8. 'Expanded' → logprob: -7.760056495666504
    9. 'Compound' → logprob: -7.885056495666504
    10. ' Genome' → logprob: -7.885056495666504

Token 1737: 'Query' (ID: 3962)
  Prédit: 'Query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -0.6853047013282776
    2. 'Reader' → logprob: -1.6853046417236328
    3. 'Sequence' → logprob: -2.185304641723633
    4. 'Indexer' → logprob: -3.060304641723633
    5. 'Iterator' → logprob: -3.185304641723633
    6. 'Index' → logprob: -4.310304641723633
    7. 'Navigator' → logprob: -4.435304641723633
    8. 'Explorer' → logprob: -4.435304641723633
    9. 'Analyzer' → logprob: -4.560304641723633
    10. 'Extractor' → logprob: -4.810304641723633

Token 1738: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024865003302693367
    2. '(' → logprob: -4.02486515045166
    3. ':
' → logprob: -5.02486515045166
    4. ':

' → logprob: -10.89986515045166
    5. '<|end|>' → logprob: -11.02486515045166
    6. '):' → logprob: -11.39986515045166
    7. '```' → logprob: -11.39986515045166
    8. 'Gen' → logprob: -11.39986515045166
    9. '(
' → logprob: -11.52486515045166
    10. '{' → logprob: -11.64986515045166

Token 1739: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033977674320340157
    2. 'class' → logprob: -6.6283979415893555
    3. ':' → logprob: -7.0033979415893555
    4. '
' → logprob: -7.3783979415893555
    5. '```' → logprob: -8.628397941589355
    6. '    
' → logprob: -9.378397941589355
    7. ':
' → logprob: -9.628397941589355
    8. '(
' → logprob: -10.003397941589355
    9. '(' → logprob: -10.128397941589355
    10. '<|end|>' → logprob: -10.503397941589355

Token 1740: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035422169603407383
    2. 'class' → logprob: -6.503542423248291
    3. '```' → logprob: -6.503542423248291
    4. ':
' → logprob: -9.128541946411133
    5. ':' → logprob: -9.128541946411133
    6. 'def' → logprob: -9.378541946411133
    7. '(' → logprob: -9.503541946411133
    8. '(
' → logprob: -9.878541946411133
    9. '``' → logprob: -10.503541946411133
    10. '
' → logprob: -10.878541946411133

Token 1741: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018077945336699486
    2. 'class' → logprob: -4.143077850341797
    3. '```' → logprob: -6.268077850341797
    4. '``' → logprob: -10.393077850341797
    5. '
' → logprob: -10.643077850341797
    6. '  ' → logprob: -10.893077850341797
    7. '"""' → logprob: -11.018077850341797
    8. 'def' → logprob: -11.393077850341797
    9. '    ' → logprob: -11.768077850341797
    10. 'Genome' → logprob: -12.018077850341797

Token 1742: ' External' (ID: 50095)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18817734718322754
    2. 'class' → logprob: -1.8131773471832275
    3. 'def' → logprob: -5.063177108764648
    4. '```' → logprob: -6.813177108764648
    5. '"""
' → logprob: -7.563177108764648
    6. '
' → logprob: -8.313177108764648
    7. ' def' → logprob: -9.938177108764648
    8. '"""' → logprob: -10.188177108764648
    9. '``' → logprob: -10.438177108764648
    10. '    
' → logprob: -11.188177108764648

Token 1743: ' interface' (ID: 6225)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03975179046392441
    2. '   ' → logprob: -3.5397517681121826
    3. 'def' → logprob: -6.039752006530762
    4. '
' → logprob: -6.164752006530762
    5. '(
' → logprob: -6.414752006530762
    6. '```' → logprob: -6.914752006530762
    7. ':' → logprob: -7.289752006530762
    8. ':
' → logprob: -7.664752006530762
    9. ' class' → logprob: -7.664752006530762
    10. 'Query' → logprob: -7.789752006530762

Token 1744: ' representing' (ID: 25389)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21630309522151947
    2. ':' → logprob: -2.8413031101226807
    3. 'class' → logprob: -2.9663031101226807
    4. ':
' → logprob: -3.4663031101226807
    5. '(' → logprob: -3.7163031101226807
    6. '(
' → logprob: -3.8413031101226807
    7. '<|end|>' → logprob: -5.591302871704102
    8. '```' → logprob: -6.591302871704102
    9. '  ' → logprob: -7.466302871704102
    10. 'for' → logprob: -8.091302871704102

Token 1745: ' a' (ID: 261)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.10233747959136963
    2. '
' → logprob: -3.35233736038208
    3. 'object' → logprob: -3.97733736038208
    4. 'the' → logprob: -4.47733736038208
    5. '```' → logprob: -4.60233736038208
    6. '"""
' → logprob: -4.72733736038208
    7. 'a' → logprob: -5.97733736038208
    8. '   ' → logprob: -6.22733736038208
    9. ' the' → logprob: -6.35233736038208
    10. 'Genome' → logprob: -6.47733736038208

Token 1746: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.4039327800273895
    2. 'compressed' → logprob: -1.653932809829712
    3. 'gen' → logprob: -2.528932809829712
    4. 'class' → logprob: -3.778932809829712
    5. 'client' → logprob: -4.528932571411133
    6. 'parsed' → logprob: -5.403932571411133
    7. 'parser' → logprob: -5.528932571411133
    8. 'Genome' → logprob: -5.653932571411133
    9. 'component' → logprob: -5.903932571411133
    10. 'user' → logprob: -6.028932571411133

Token 1747: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33768007159233093
    2. 'class' → logprob: -1.8376801013946533
    3. ':
' → logprob: -2.5876801013946533
    4. ':' → logprob: -4.087679862976074
    5. ' for' → logprob: -4.837679862976074
    6. '(
' → logprob: -4.962679862976074
    7. 'for' → logprob: -4.962679862976074
    8. '(' → logprob: -5.462679862976074
    9. '```' → logprob: -6.337679862976074
    10. '[
' → logprob: -6.462679862976074

Token 1748: ' fetch' (ID: 12011)
  Prédit: 'retrieve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'retrieve' → logprob: -0.7700992226600647
    2. 'the' → logprob: -1.27009916305542
    3. 'access' → logprob: -2.27009916305542
    4. 'get' → logprob: -3.27009916305542
    5. 'perform' → logprob: -3.64509916305542
    6. 'fetch' → logprob: -4.02009916305542
    7. 'expand' → logprob: -4.39509916305542
    8. 'extract' → logprob: -4.39509916305542
    9. 'query' → logprob: -4.52009916305542
    10. ' the' → logprob: -5.14509916305542

Token 1749: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17487028241157532
    2. 'the' → logprob: -2.299870252609253
    3. 'characters' → logprob: -3.674870252609253
    4. 'specific' → logprob: -4.924870491027832
    5. 'class' → logprob: -5.049870491027832
    6. 'character' → logprob: -5.674870491027832
    7. 'sequence' → logprob: -5.674870491027832
    8. 'gen' → logprob: -5.674870491027832
    9. ' a' → logprob: -6.174870491027832
    10. 'positions' → logprob: -6.299870491027832

Token 1750: ' i' (ID: 575)
  Prédit: 'gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gen' → logprob: -1.0375295877456665
    2. 'character' → logprob: -1.0375295877456665
    3. 'expanded' → logprob: -1.5375295877456665
    4. 'length' → logprob: -3.662529468536377
    5. 'sequence' → logprob: -4.162529468536377
    6. 'Genome' → logprob: -4.412529468536377
    7. 'char' → logprob: -5.162529468536377
    8. 'full' → logprob: -5.787529468536377
    9. 'compressed' → logprob: -6.037529468536377
    10. 'component' → logprob: -6.662529468536377

Token 1751: '-th' (ID: 14928)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4618287682533264
    2. 't' → logprob: -1.3368287086486816
    3. '-th' → logprob: -3.3368287086486816
    4. 'th' → logprob: -3.4618287086486816
    5. ''t' → logprob: -3.9618287086486816
    6. 'nd' → logprob: -4.086828708648682
    7. 'nt' → logprob: -6.336828708648682
    8. 'nth' → logprob: -7.336828708648682
    9. ''' → logprob: -7.461828708648682
    10. 's' → logprob: -7.711828708648682

Token 1752: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.023594720289111137
    2. ' character' → logprob: -3.773594617843628
    3. 'char' → logprob: -8.773594856262207
    4. 'base' → logprob: -9.898594856262207
    5. 'expanded' → logprob: -9.898594856262207
    6. 'compressed' → logprob: -10.148594856262207
    7. '
' → logprob: -11.023594856262207
    8. 'element' → logprob: -11.648594856262207
    9. 'sequence' → logprob: -12.148594856262207
    10. '(character' → logprob: -12.523594856262207

Token 1753: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20105469226837158
    2. '(' → logprob: -3.076054573059082
    3. ' in' → logprob: -3.201054573059082
    4. 'in' → logprob: -3.826054573059082
    5. 'from' → logprob: -4.076054573059082
    6. '_at' → logprob: -4.076054573059082
    7. 'at' → logprob: -4.326054573059082
    8. ' ' → logprob: -5.076054573059082
    9. ' of' → logprob: -5.451054573059082
    10. ' at' → logprob: -5.451054573059082

Token 1754: ' genome' (ID: 64778)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.05064118653535843
    2. ' the' → logprob: -3.6756412982940674
    3. 'a' → logprob: -3.8006412982940674
    4. ' a' → logprob: -7.175641059875488
    5. 'expanded' → logprob: -7.550641059875488
    6. 'compressed' → logprob: -8.175641059875488
    7. 'an' → logprob: -9.925641059875488
    8. ' an' → logprob: -11.425641059875488
    9. '   ' → logprob: -11.550641059875488
    10. '#' → logprob: -11.675641059875488

Token 1755: '.
' (ID: 558)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.21015651524066925
    2. '   ' → logprob: -2.2101564407348633
    3. 'component' → logprob: -3.4601564407348633
    4. ' sequence' → logprob: -3.7101564407348633
    5. 'string' → logprob: -4.460156440734863
    6. '
' → logprob: -5.460156440734863
    7. 'compressed' → logprob: -5.710156440734863
    8. '_sequence' → logprob: -5.960156440734863
    9. '_component' → logprob: -7.460156440734863
    10. ' component' → logprob: -8.085156440734863

Token 1756: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.001601983094587922
    2. '   ' → logprob: -6.5016021728515625
    3. '

' → logprob: -9.876602172851562
    4. '    
' → logprob: -11.501602172851562
    5. 'class' → logprob: -11.501602172851562
    6. 'def' → logprob: -11.751602172851562
    7. '```' → logprob: -12.376602172851562
    8. '(' → logprob: -12.501602172851562
    9. '
' → logprob: -13.001602172851562
    10. '"""
' → logprob: -13.251602172851562

Token 1757: ' This' (ID: 1328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002133490750566125
    2. '   ' → logprob: -6.627133369445801
    3. '

' → logprob: -7.252133369445801
    4. 'class' → logprob: -10.0021333694458
    5. '    
' → logprob: -10.8771333694458
    6. '"""
' → logprob: -11.7521333694458
    7. 'def' → logprob: -12.0021333694458
    8. '
' → logprob: -12.2521333694458
    9. '```' → logprob: -12.8771333694458
    10. '"""' → logprob: -13.0021333694458

Token 1758: ' abstraction' (ID: 129564)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.036838073283433914
    2. ' class' → logprob: -3.6618380546569824
    3. '
' → logprob: -4.661838054656982
    4. ' is' → logprob: -8.16183853149414
    5. '   ' → logprob: -8.66183853149414
    6. 'is' → logprob: -8.78683853149414
    7. 'def' → logprob: -9.28683853149414
    8. ' can' → logprob: -9.53683853149414
    9. '```' → logprob: -9.78683853149414
    10. 'can' → logprob: -10.16183853149414

Token 1759: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07438096404075623
    2. 'provid' → logprob: -3.449380874633789
    3. 'class' → logprob: -4.449380874633789
    4. 'allows' → logprob: -4.449380874633789
    5. 'def' → logprob: -5.574380874633789
    6. 'continu' → logprob: -6.449380874633789
    7. 'rep' → logprob: -6.449380874633789
    8. 'contin' → logprob: -6.699380874633789
    9. '
' → logprob: -6.824380874633789
    10. 'can' → logprob: -6.949380874633789

Token 1760: ' made' (ID: 2452)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4468230605125427
    2. 'implemented' → logprob: -1.4468231201171875
    3. 'des' → logprob: -2.4468231201171875
    4. ' designed' → logprob: -3.9468231201171875
    5. 'completed' → logprob: -5.0718231201171875
    6. 'complete' → logprob: -5.4468231201171875
    7. 'built' → logprob: -6.1968231201171875
    8. 'provided' → logprob: -6.5718231201171875
    9. 'final' → logprob: -6.9468231201171875
    10. 'used' → logprob: -7.1968231201171875

Token 1761: ' anticipating' (ID: 136423)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10690571367740631
    2. ' for' → logprob: -2.981905698776245
    3. '   ' → logprob: -3.356905698776245
    4. 'to' → logprob: -4.481905937194824
    5. 'for' → logprob: -5.856905937194824
    6. ' ' → logprob: -7.106905937194824
    7. ' complete' → logprob: -8.856905937194824
    8. 'explicit' → logprob: -8.981905937194824
    9. 'complete' → logprob: -8.981905937194824
    10. ' available' → logprob: -9.106905937194824

Token 1762: ' support' (ID: 2498)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.8512063026428223
    2. 'expanded' → logprob: -2.1012063026428223
    3. ' possible' → logprob: -2.3512063026428223
    4. 'future' → logprob: -2.4762063026428223
    5. 'more' → logprob: -2.6012063026428223
    6. ' future' → logprob: -2.6012063026428223
    7. 'the' → logprob: -2.8512063026428223
    8. ' the' → logprob: -3.2262063026428223
    9. 'potential' → logprob: -3.6012063026428223
    10. ' more' → logprob: -3.7262063026428223

Token 1763: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1390832662582397
    2. ' for' → logprob: -1.1390832662582397
    3. 'for' → logprob: -1.5140832662582397
    4. ' of' → logprob: -2.1390833854675293
    5. 'of' → logprob: -3.8890833854675293
    6. 'ed' → logprob: -7.514083385467529
    7. ' ' → logprob: -7.639083385467529
    8. 'ing' → logprob: -8.514082908630371
    9. '  ' → logprob: -8.889082908630371
    10. '    ' → logprob: -10.639082908630371

Token 1764: ' bulk' (ID: 29247)
  Prédit: 'very'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'very' → logprob: -0.9290806651115417
    2. 'compressed' → logprob: -1.5540807247161865
    3. 'more' → logprob: -2.3040807247161865
    4. 'large' → logprob: -2.3040807247161865
    5. 'ext' → logprob: -3.4290807247161865
    6. 'expanded' → logprob: -3.6790807247161865
    7. 'future' → logprob: -3.8040807247161865
    8. 'larg' → logprob: -3.9290807247161865
    9. 'complex' → logprob: -4.179080486297607
    10. 'multiple' → logprob: -4.304080486297607

Token 1765: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.8062863349914551
    2. ' queries' → logprob: -1.056286334991455
    3. '_queries' → logprob: -1.806286334991455
    4. '_query' → logprob: -3.556286334991455
    5. 'query' → logprob: -5.431286334991455
    6. '   ' → logprob: -6.306286334991455
    7. '_fetch' → logprob: -6.931286334991455
    8. ' _' → logprob: -7.431286334991455
    9. 'requests' → logprob: -7.556286334991455
    10. ' query' → logprob: -7.556286334991455

Token 1766: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03074004128575325
    2. '
' → logprob: -3.5307400226593018
    3. ':' → logprob: -7.905740261077881
    4. '<|end|>' → logprob: -8.905739784240723
    5. 'def' → logprob: -9.030739784240723
    6. '(' → logprob: -9.030739784240723
    7. 'class' → logprob: -9.655739784240723
    8. '<|end|>' → logprob: -10.405739784240723
    9. '    
' → logprob: -10.530739784240723
    10. '

' → logprob: -10.780739784240723

Token 1767: ' caching' (ID: 104247)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.7220748066902161
    2. 'random' → logprob: -1.4720747470855713
    3. 'stream' → logprob: -1.7220747470855713
    4. 'increment' → logprob: -3.4720747470855713
    5. ' streaming' → logprob: -3.9720747470855713
    6. 'batch' → logprob: -4.09707498550415
    7. 'range' → logprob: -4.47207498550415
    8. 'interactive' → logprob: -5.47207498550415
    9. 'individual' → logprob: -5.47207498550415
    10. 'more' → logprob: -5.84707498550415

Token 1768: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.740811824798584
    2. '   ' → logprob: -1.240811824798584
    3. '.
' → logprob: -2.490811824798584
    4. 'mechan' → logprob: -3.865811824798584
    5. ' strategies' → logprob: -4.115811824798584
    6. 'and' → logprob: -4.240811824798584
    7. ' for' → logprob: -4.240811824798584
    8. ' mechanisms' → logprob: -4.365811824798584
    9. ',' → logprob: -4.490811824798584
    10. 'strateg' → logprob: -4.615811824798584

Token 1769: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010485752485692501
    2. 'class' → logprob: -4.885485649108887
    3. '   ' → logprob: -6.010485649108887
    4. '

' → logprob: -8.010485649108887
    5. '```' → logprob: -10.010485649108887
    6. 'def' → logprob: -11.135485649108887
    7. '    
' → logprob: -11.135485649108887
    8. '
' → logprob: -12.260485649108887
    9. '"""
' → logprob: -13.135485649108887
    10. '"""' → logprob: -13.510485649108887

Token 1770: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009367619641125202
    2. 'class' → logprob: -5.1343674659729
    3. '

' → logprob: -5.8843674659729
    4. '   ' → logprob: -7.3843674659729
    5. '
' → logprob: -11.634367942810059
    6. 'def' → logprob: -11.884367942810059
    7. '    
' → logprob: -12.259367942810059
    8. ')' → logprob: -12.759367942810059
    9. '```' → logprob: -13.384367942810059
    10. '<|end|>' → logprob: -13.509367942810059

Token 1771: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18515199422836304
    2. '   ' → logprob: -1.9351520538330078
    3. 'class' → logprob: -4.435152053833008
    4. '
' → logprob: -4.435152053833008
    5. ' def' → logprob: -8.185152053833008
    6. '    
' → logprob: -8.185152053833008
    7. '```' → logprob: -8.435152053833008
    8. '	def' → logprob: -9.810152053833008
    9. '__' → logprob: -9.810152053833008
    10. 'de' → logprob: -12.310152053833008

Token 1772: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003010233340319246
    2. 'class' → logprob: -8.375301361083984
    3. '__' → logprob: -10.375301361083984
    4. '
' → logprob: -10.500301361083984
    5. ' def' → logprob: -11.625301361083984
    6. '   ' → logprob: -13.000301361083984
    7. '```' → logprob: -15.125301361083984
    8. '	def' → logprob: -15.875301361083984
    9. 'de' → logprob: -16.375301361083984
    10. 'from' → logprob: -16.500301361083984

Token 1773: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0016150808660313487
    2. '_init' → logprob: -7.376615047454834
    3. 'init' → logprob: -7.501615047454834
    4. 'def' → logprob: -7.876615047454834
    5. '_' → logprob: -10.376615524291992
    6. ' __' → logprob: -11.751615524291992
    7. '___' → logprob: -12.251615524291992
    8. '__
' → logprob: -12.751615524291992
    9. 'classmethod' → logprob: -13.251615524291992
    10. '__(' → logprob: -13.376615524291992

Token 1774: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.722539834911004e-05
    2. 'class' → logprob: -9.250097274780273
    3. 'code' → logprob: -14.750097274780273
    4. ' init' → logprob: -15.375097274780273
    5. '`' → logprob: -16.500097274780273
    6. '_init' → logprob: -16.500097274780273
    7. 'initi' → logprob: -16.750097274780273
    8. '(init' → logprob: -16.875097274780273
    9. 'inite' → logprob: -17.500097274780273
    10. '```' → logprob: -17.500097274780273

Token 1775: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.038422536104917526
    2. '(self' → logprob: -3.2884225845336914
    3. 'self' → logprob: -8.538422584533691
    4. '__(
' → logprob: -9.288422584533691
    5. '(' → logprob: -9.663422584533691
    6. '   ' → logprob: -11.663422584533691
    7. '__' → logprob: -11.663422584533691
    8. '_(' → logprob: -12.663422584533691
    9. '
' → logprob: -12.663422584533691
    10. ' (' → logprob: -12.913422584533691

Token 1776: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.759734732331708e-05
    2. ' self' → logprob: -11.875017166137695
    3. 'data' → logprob: -12.250017166137695
    4. ')' → logprob: -12.875017166137695
    5. '
' → logprob: -13.875017166137695
    6. '   ' → logprob: -14.000017166137695
    7. '(self' → logprob: -14.250017166137695
    8. '       ' → logprob: -15.750017166137695
    9. 'gen' → logprob: -16.375017166137695
    10. ' ' → logprob: -16.750017166137695

Token 1777: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01309435348957777
    2. 'self' → logprob: -4.388094425201416
    3. '(self' → logprob: -8.138093948364258
    4. ',self' → logprob: -9.138093948364258
    5. ',data' → logprob: -9.638093948364258
    6. 'data' → logprob: -9.888093948364258
    7. '   ' → logprob: -10.888093948364258
    8. ',
' → logprob: -11.263093948364258
    9. '_,' → logprob: -11.513093948364258
    10. '
' → logprob: -11.888093948364258

Token 1778: ' genome' (ID: 64778)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.1631007194519043
    2. 'gen' → logprob: -1.9131007194519043
    3. 'root' → logprob: -7.038100719451904
    4. ' genome' → logprob: -7.038100719451904
    5. 'sequence' → logprob: -7.538100719451904
    6. 'compressed' → logprob: -8.038101196289062
    7. 'parsed' → logprob: -9.288101196289062
    8. '   ' → logprob: -10.038101196289062
    9. ' component' → logprob: -10.413101196289062
    10. '
' → logprob: -11.038101196289062

Token 1779: '_str' (ID: 6182)
  Prédit: '_component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_component' → logprob: -0.23572757840156555
    2. ':' → logprob: -2.485727548599243
    3. '):
' → logprob: -2.860727548599243
    4. '):' → logprob: -3.110727548599243
    5. 'Component' → logprob: -3.860727548599243
    6. '_components' → logprob: -6.235727787017822
    7. 'component' → logprob: -7.610727787017822
    8. ')' → logprob: -8.110727310180664
    9. '_comp' → logprob: -8.235727310180664
    10. '_sequence' → logprob: -8.485727310180664

Token 1780: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006982356775552034
    2. '):
' → logprob: -5.006982326507568
    3. '):' → logprob: -8.631982803344727
    4. ':str' → logprob: -9.631982803344727
    5. '   ' → logprob: -11.631982803344727
    6. '       ' → logprob: -11.756982803344727
    7. ' :' → logprob: -13.131982803344727
    8. ':
' → logprob: -13.256982803344727
    9. '):
' → logprob: -14.131982803344727
    10. '```' → logprob: -14.631982803344727

Token 1781: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00017398154886905104
    2. ' str' → logprob: -9.000173568725586
    3. '       ' → logprob: -10.500173568725586
    4. '   ' → logprob: -11.500173568725586
    5. ')' → logprob: -12.125173568725586
    6. '[str' → logprob: -13.125173568725586
    7. 'gen' → logprob: -13.500173568725586
    8. '):
' → logprob: -14.125173568725586
    9. 'Optional' → logprob: -14.375173568725586
    10. '
' → logprob: -14.625173568725586

Token 1782: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00398021237924695
    2. '       ' → logprob: -5.8789801597595215
    3. '):' → logprob: -7.1289801597595215
    4. '   ' → logprob: -8.00398063659668
    5. '):
' → logprob: -10.37898063659668
    6. ' ):
' → logprob: -13.12898063659668
    7. ''):
' → logprob: -13.37898063659668
    8. '"):
' → logprob: -13.87898063659668
    9. ')' → logprob: -14.25398063659668
    10. ':' → logprob: -14.50398063659668

Token 1783: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012571377446874976
    2. 'self' → logprob: -6.751256942749023
    3. ' self' → logprob: -9.626256942749023
    4. 'parser' → logprob: -11.876256942749023
    5. '   ' → logprob: -12.001256942749023
    6. ' parser' → logprob: -13.001256942749023
    7. '
' → logprob: -13.001256942749023
    8. 'Parser' → logprob: -13.876256942749023
    9. 'gen' → logprob: -14.626256942749023
    10. '```' → logprob: -15.126256942749023

Token 1784: ' parser' (ID: 14216)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08072535693645477
    2. '       ' → logprob: -2.5807254314422607
    3. 'parser' (adapté à ' parser') → logprob: -6.330725193023682
    4. ' self' → logprob: -9.95572566986084
    5. 'parsed' → logprob: -12.70572566986084
    6. '   ' → logprob: -14.20572566986084
    7. ' parser' → logprob: -14.83072566986084
    8. 'parse' → logprob: -15.08072566986084
    9. 'component' → logprob: -15.08072566986084
    10. '```' → logprob: -15.33072566986084

Token 1785: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044240109622478485
    2. ' =' → logprob: -3.1692399978637695
    3. '       ' → logprob: -7.4192399978637695
    4. '=self' → logprob: -8.04423999786377
    5. '=
' → logprob: -8.66923999786377
    6. '_parser' → logprob: -10.16923999786377
    7. 'self' → logprob: -10.29423999786377
    8. '   ' → logprob: -10.41923999786377
    9. '(self' → logprob: -10.91923999786377
    10. '(' → logprob: -12.41923999786377

Token 1786: ' Genome' (ID: 168601)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -1.306760805164231e-05
    2. ' Genome' → logprob: -11.25001335144043
    3. 'Gen' → logprob: -16.87501335144043
    4. ' genome' → logprob: -19.62501335144043
    5. 'self' → logprob: -20.62501335144043
    6. 'Gene' → logprob: -21.00001335144043
    7. '
' → logprob: -21.12501335144043
    8. 'Genre' → logprob: -21.37501335144043
    9. 'Genesis' → logprob: -22.75001335144043
    10. '       ' → logprob: -22.87501335144043

Token 1787: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -4.320199877838604e-07
    2. 'parser' → logprob: -15.0
    3. 'Parse' → logprob: -18.25
    4. 'Parsed' → logprob: -19.25
    5. '_parser' → logprob: -19.25
    6. 'Component' → logprob: -19.5
    7. 'Parsing' → logprob: -19.5
    8. 'Genome' → logprob: -20.625
    9. 'Processor' → logprob: -21.125
    10. ' Parser' → logprob: -21.125

Token 1788: '(gen' (ID: 80178)
  Prédit: '(gen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gen' → logprob: -6.945094355614856e-05
    2. '(self' → logprob: -10.000069618225098
    3. '(' → logprob: -11.125069618225098
    4. '(grammar' → logprob: -12.500069618225098
    5. '       ' → logprob: -13.625069618225098
    6. '(
' → logprob: -13.750069618225098
    7. '(parser' → logprob: -14.375069618225098
    8. 'gen' → logprob: -14.750069618225098
    9. '(generator' → logprob: -14.750069618225098
    10. ')' → logprob: -14.875069618225098

Token 1789: 'ome' (ID: 747)
  Prédit: 'ome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ome' → logprob: -0.005161770153790712
    2. 'er' → logprob: -5.380161762237549
    3. 'us' → logprob: -9.255162239074707
    4. '   ' → logprob: -9.505162239074707
    5. 'e' → logprob: -9.755162239074707
    6. '       ' → logprob: -9.755162239074707
    7. ')' → logprob: -10.255162239074707
    8. 'code' → logprob: -10.755162239074707
    9. 'es' → logprob: -11.130162239074707
    10. ' genome' → logprob: -11.130162239074707

Token 1790: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0004119616060052067
    2. 'Parser' → logprob: -8.625411987304688
    3. ')
' → logprob: -9.875411987304688
    4. 'Query' → logprob: -10.000411987304688
    5. '_parser' → logprob: -10.125411987304688
    6. ')' → logprob: -10.375411987304688
    7. 'str' → logprob: -10.500411987304688
    8. '       ' → logprob: -11.625411987304688
    9. '
' → logprob: -11.750411987304688
    10. '   ' → logprob: -12.250411987304688

Token 1791: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1642267256975174
    2. ')
' → logprob: -1.914226770401001
    3. '       ' → logprob: -5.539226531982422
    4. '   ' → logprob: -10.664226531982422
    5. ')
' → logprob: -10.914226531982422
    6. ').' → logprob: -11.539226531982422
    7. ' )
' → logprob: -13.039226531982422
    8. ' ' → logprob: -13.164226531982422
    9. ')

' → logprob: -13.164226531982422
    10. ' )' → logprob: -13.164226531982422

Token 1792: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4741041660308838
    2. '       ' → logprob: -0.9741041660308838
    3. ' self' → logprob: -10.599103927612305
    4. 'gen' → logprob: -14.474103927612305
    5. 'component' → logprob: -14.849103927612305
    6. '	self' → logprob: -14.849103927612305
    7. '	' → logprob: -14.849103927612305
    8. '   ' → logprob: -14.974103927612305
    9. 'parsed' → logprob: -15.724103927612305
    10. '
' → logprob: -16.724103927612305

Token 1793: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00248909555375576
    2. '       ' → logprob: -6.00248908996582
    3. ' self' → logprob: -11.25248908996582
    4. '	self' → logprob: -15.87748908996582
    5. '   ' → logprob: -16.12748908996582
    6. '
' → logprob: -16.62748908996582
    7. '(self' → logprob: -17.25248908996582
    8. '        
' → logprob: -18.00248908996582
    9. 'component' → logprob: -18.37748908996582
    10. '	' → logprob: -18.50248908996582

Token 1794: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.29322192072868347
    2. '_gen' → logprob: -1.5432219505310059
    3. '_par' → logprob: -3.293221950531006
    4. '.gen' → logprob: -6.543221950531006
    5. '_component' → logprob: -6.918221950531006
    6. '_root' → logprob: -7.418221950531006
    7. '_comp' → logprob: -9.418221473693848
    8. '.par' → logprob: -9.543221473693848
    9. '_components' → logprob: -10.918221473693848
    10. '_parser' → logprob: -11.168221473693848

Token 1795: 'gen' (ID: 2468)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.4416874349117279
    2. 'gen' → logprob: -1.1916874647140503
    3. 'component' → logprob: -2.9416873455047607
    4. 'parsed' → logprob: -7.56668758392334
    5. 'sequence' → logprob: -10.81668758392334
    6. 'gene' → logprob: -12.19168758392334
    7. 'compiled' → logprob: -12.31668758392334
    8. 'comp' → logprob: -12.69168758392334
    9. ' genome' → logprob: -12.94168758392334
    10. 'tree' → logprob: -13.19168758392334

Token 1796: 'ome' (ID: 747)
  Prédit: 'ome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ome' → logprob: -7.791440293658525e-05
    2. '_' → logprob: -11.375078201293945
    3. 'omes' → logprob: -11.750078201293945
    4. 'e' → logprob: -11.750078201293945
    5. '_component' → logprob: -12.125078201293945
    6. '_components' → logprob: -12.125078201293945
    7. 'om' → logprob: -12.375078201293945
    8. 'er' → logprob: -12.500078201293945
    9. 'o' → logprob: -13.125078201293945
    10. '
' → logprob: -13.125078201293945

Token 1797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034384045749902725
    2. ' =' → logprob: -3.78438401222229
    3. '_component' → logprob: -4.534384250640869
    4. '_comp' → logprob: -9.409383773803711
    5. '=_' → logprob: -9.659383773803711
    6. '_components' → logprob: -10.159383773803711
    7. 'Component' → logprob: -10.159383773803711
    8. '_parser' → logprob: -10.159383773803711
    9. 'component' → logprob: -10.409383773803711
    10. '_' → logprob: -11.034383773803711

Token 1798: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -2.15310683415737e-05
    2. ' parser' → logprob: -10.750021934509277
    3. '(parser' → logprob: -17.62502098083496
    4. '	parser' → logprob: -18.50002098083496
    5. '.parser' → logprob: -20.25002098083496
    6. '
' → logprob: -21.37502098083496
    7. 'parse' → logprob: -21.37502098083496
    8. '   ' → logprob: -21.87502098083496
    9. 'parsed' → logprob: -21.87502098083496
    10. '/parser' → logprob: -22.00002098083496

Token 1799: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.003732141572982073
    2. 'parse' → logprob: -5.628732204437256
    3. '.' → logprob: -9.253731727600098
    4. '_parse' → logprob: -10.503731727600098
    5. '._' → logprob: -12.253731727600098
    6. '   ' → logprob: -13.878731727600098
    7. '```' → logprob: -14.128731727600098
    8. '
' → logprob: -14.628731727600098
    9. '_.' → logprob: -15.003731727600098
    10. ' .' → logprob: -15.253731727600098

Token 1800: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5054091215133667
    2. '   ' → logprob: -1.3804091215133667
    3. '<|end|>' → logprob: -2.1304092407226562
    4. '

' → logprob: -4.880409240722656
    5. ' ' → logprob: -5.255409240722656
    6. '.' → logprob: -6.255409240722656
    7. '    
' → logprob: -6.380409240722656
    8. ')' → logprob: -6.630409240722656
    9. 'def' → logprob: -6.630409240722656
    10. ',' → logprob: -7.130409240722656

Token 1801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037833312526345253
    2. 'def' → logprob: -6.128783226013184
    3. '
' → logprob: -6.628783226013184
    4. ' def' → logprob: -9.253783226013184
    5. '       ' → logprob: -9.753783226013184
    6. '    
' → logprob: -10.003783226013184
    7. '

' → logprob: -10.503783226013184
    8. '<|end|>' → logprob: -10.753783226013184
    9. '```' → logprob: -11.878783226013184
    10. ' ' → logprob: -12.128783226013184

Token 1802: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0010103036183863878
    2. ' def' → logprob: -7.001010417938232
    3. '   ' → logprob: -9.251009941101074
    4. '```' → logprob: -13.376009941101074
    5. '
' → logprob: -14.501009941101074
    6. ' ' → logprob: -14.751009941101074
    7. 'de' → logprob: -15.876009941101074
    8. '	def' → logprob: -16.00101089477539
    9. ')' → logprob: -17.87601089477539
    10. '_def' → logprob: -17.87601089477539

Token 1803: ' query' (ID: 5703)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.034588348120450974
    2. 'char' → logprob: -3.53458833694458
    3. 'query' → logprob: -5.65958833694458
    4. 'fetch' → logprob: -6.65958833694458
    5. 'character' → logprob: -10.784588813781738
    6. 'length' → logprob: -11.034588813781738
    7. ' get' → logprob: -11.034588813781738
    8. 'at' → logprob: -13.034588813781738
    9. 'find' → logprob: -13.784588813781738
    10. '__' → logprob: -14.034588813781738

Token 1804: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03168245404958725
    2. '_at' → logprob: -3.5316824913024902
    3. '(' → logprob: -6.40668249130249
    4. '_char' → logprob: -8.906682014465332
    5. 'at' → logprob: -9.531682014465332
    6. '(
' → logprob: -10.406682014465332
    7. 'self' → logprob: -10.906682014465332
    8. '   ' → logprob: -11.906682014465332
    9. ' (' → logprob: -12.406682014465332
    10. ' at' → logprob: -13.531682014465332

Token 1805: ',' (ID: 11)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.018658220767974854
    2. '(self' → logprob: -5.01865816116333
    3. 'at' → logprob: -5.14365816116333
    4. ')' → logprob: -5.89365816116333
    5. '(' → logprob: -6.76865816116333
    6. '_' → logprob: -7.01865816116333
    7. ' at' → logprob: -8.018658638000488
    8. ')_' → logprob: -8.518658638000488
    9. '   ' → logprob: -8.643658638000488
    10. 'self' → logprob: -9.393658638000488

Token 1806: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -4.8351892473874614e-05
    2. ' index' → logprob: -10.000048637390137
    3. 'idx' → logprob: -13.250048637390137
    4. 'i' → logprob: -14.250048637390137
    5. 'pos' → logprob: -15.875048637390137
    6. '   ' → logprob: -16.25004768371582
    7. 'position' → logprob: -16.50004768371582
    8. 'self' → logprob: -16.62504768371582
    9. '0' → logprob: -18.25004768371582
    10. '       ' → logprob: -18.62504768371582

Token 1807: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002837207168340683
    2. '):' → logprob: -6.627837181091309
    3. '   ' → logprob: -7.377837181091309
    4. ')' → logprob: -7.752837181091309
    5. ':int' → logprob: -7.877837181091309
    6. '):
' → logprob: -10.377837181091309
    7. ' :' → logprob: -11.002837181091309
    8. '       ' → logprob: -11.252837181091309
    9. '```' → logprob: -13.377837181091309
    10. '  ' → logprob: -13.502837181091309

Token 1808: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01621149480342865
    2. ' int' → logprob: -4.14121150970459
    3. ')' → logprob: -8.89121150970459
    4. '[int' → logprob: -11.01621150970459
    5. '<|end|>' → logprob: -11.64121150970459
    6. ':int' → logprob: -12.26621150970459
    7. '0' → logprob: -12.89121150970459
    8. 'index' → logprob: -13.39121150970459
    9. '   ' → logprob: -13.76621150970459
    10. ' ' → logprob: -13.89121150970459

Token 1809: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002727793762460351
    2. '):' → logprob: -9.375272750854492
    3. ':' → logprob: -9.500272750854492
    4. '):
' → logprob: -9.750272750854492
    5. '   ' → logprob: -10.250272750854492
    6. ')->' → logprob: -11.125272750854492
    7. '       ' → logprob: -13.125272750854492
    8. ' )' → logprob: -13.250272750854492
    9. ' ' → logprob: -15.500272750854492
    10. '->' → logprob: -15.875272750854492

Token 1810: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03612842783331871
    2. ':
' → logprob: -4.036128520965576
    3. '       ' → logprob: -4.286128520965576
    4. '->' → logprob: -5.911128520965576
    5. ':return' → logprob: -7.786128520965576
    6. ' ->' → logprob: -8.286128044128418
    7. ')->' → logprob: -8.661128044128418
    8. '   ' → logprob: -9.036128044128418
    9. '->____' → logprob: -9.411128044128418
    10. '):
' → logprob: -9.411128044128418

Token 1811: ' str' (ID: 989)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.003855297574773431
    2. 'self' → logprob: -5.628855228424072
    3. ' Optional' → logprob: -8.87885570526123
    4. 'str' → logprob: -9.12885570526123
    5. '(Optional' → logprob: -12.12885570526123
    6. ' self' → logprob: -13.87885570526123
    7. 'optional' → logprob: -14.87885570526123
    8. '(self' → logprob: -15.50385570526123
    9. '	Optional' → logprob: -15.75385570526123
    10. '_optional' → logprob: -16.128854751586914

Token 1812: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3667806088924408
    2. '       ' → logprob: -1.3667806386947632
    3. ':
' → logprob: -2.9917805194854736
    4. '):
' → logprob: -6.991780757904053
    5. '():
' → logprob: -7.866780757904053
    6. '   ' → logprob: -9.366780281066895
    7. ')' → logprob: -9.491780281066895
    8. '(self' → logprob: -9.741780281066895
    9. ':return' → logprob: -9.866780281066895
    10. '):' → logprob: -9.991780281066895

Token 1813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.160971628967673e-05
    2. ' return' → logprob: -11.000082015991211
    3. ' if' → logprob: -11.250082015991211
    4. '   ' → logprob: -11.625082015991211
    5. ':' → logprob: -12.000082015991211
    6. '        
' → logprob: -12.250082015991211
    7. '      ' → logprob: -12.250082015991211
    8. '           ' → logprob: -12.500082015991211
    9. ':
' → logprob: -13.000082015991211
    10. 'return' → logprob: -13.125082015991211

Token 1814: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9043474197387695
    2. '       ' → logprob: -1.4043474197387695
    3. 'char' → logprob: -1.4043474197387695
    4. 'ch' → logprob: -2.6543474197387695
    5. ' result' → logprob: -4.6543474197387695
    6. 'return' → logprob: -4.9043474197387695
    7. 'c' → logprob: -5.4043474197387695
    8. ' char' → logprob: -5.4043474197387695
    9. 'res' → logprob: -5.6543474197387695
    10. ' ch' → logprob: -6.0293474197387695

Token 1815: ' index' (ID: 3472)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8112940788269043
    2. 'index' → logprob: -0.8112940788269043
    3. ' index' → logprob: -2.3112940788269043
    4. ' not' → logprob: -4.686294078826904
    5. ' ' → logprob: -6.061294078826904
    6. 'not' → logprob: -7.311294078826904
    7. '   ' → logprob: -9.936294555664062
    8. '1' → logprob: -11.561294555664062
    9. '(index' → logprob: -11.811294555664062
    10. '	index' → logprob: -12.561294555664062

Token 1816: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0808885246515274
    2. '<' → logprob: -2.580888509750366
    3. ' >=' → logprob: -6.455888748168945
    4. ' ' → logprob: -8.830888748168945
    5. '>=' → logprob: -9.580888748168945
    6. '<|end|>' → logprob: -9.580888748168945
    7. '[' → logprob: -9.830888748168945
    8. '   ' → logprob: -10.580888748168945
    9. '<int' → logprob: -11.455888748168945
    10. ' ==' → logprob: -11.455888748168945

Token 1817: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020544573664665222
    2. ' ' → logprob: -3.8955445289611816
    3. '1' → logprob: -12.89554500579834
    4. '=' → logprob: -15.64554500579834
    5. '۰' → logprob: -18.208044052124023
    6. '   ' → logprob: -18.333044052124023
    7. '```' → logprob: -19.083044052124023
    8. 'or' → logprob: -19.208044052124023
    9. 'self' → logprob: -19.270544052124023
    10. '100' → logprob: -19.583044052124023

Token 1818: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.750011444091797
    3. '1' → logprob: -12.625011444091797
    4. 'self' → logprob: -15.625011444091797
    5. '   ' → logprob: -16.000011444091797
    6. '       ' → logprob: -17.125011444091797
    7. '۰' → logprob: -18.250011444091797
    8. 'or' → logprob: -18.500011444091797
    9. '```' → logprob: -18.750011444091797
    10. '100' → logprob: -18.750011444091797

Token 1819: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0011297365417703986
    2. 'or' → logprob: -6.876129627227783
    3. '       ' → logprob: -9.626130104064941
    4. ':
' → logprob: -11.501130104064941
    5. '           ' → logprob: -11.626130104064941
    6. ':' → logprob: -11.876130104064941
    7. ' ' → logprob: -13.626130104064941
    8. '	or' → logprob: -13.751130104064941
    9. '   ' → logprob: -14.251130104064941
    10. '        ' → logprob: -14.376130104064941

Token 1820: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.00011534435179783031
    2. ' index' → logprob: -9.125115394592285
    3. 'self' → logprob: -12.750115394592285
    4. '       ' → logprob: -12.875115394592285
    5. '           ' → logprob: -14.250115394592285
    6. '   ' → logprob: -16.62511444091797
    7. '(index' → logprob: -16.75011444091797
    8. '#index' → logprob: -16.75011444091797
    9. '	index' → logprob: -17.25011444091797
    10. '=index' → logprob: -17.50011444091797

Token 1821: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0097806416451931
    2. ' >=' → logprob: -4.634780406951904
    3. ')>=' → logprob: -11.884780883789062
    4. ']>=' → logprob: -12.009780883789062
    5. '>' → logprob: -12.134780883789062
    6. '≥' → logprob: -12.509780883789062
    7. '   ' → logprob: -14.009780883789062
    8. '       ' → logprob: -14.384780883789062
    9. '==' → logprob: -15.259780883789062
    10. '```' → logprob: -16.134780883789062

Token 1822: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015872348740231246
    2. ' self' → logprob: -8.750158309936523
    3. '       ' → logprob: -15.500158309936523
    4. '(self' → logprob: -18.000158309936523
    5. '           ' → logprob: -18.375158309936523
    6. 'len' → logprob: -20.750158309936523
    7. '	self' → logprob: -20.875158309936523
    8. '   ' → logprob: -21.000158309936523
    9. '               ' → logprob: -21.000158309936523
    10. '0' → logprob: -21.000158309936523

Token 1823: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.02642105519771576
    2. '.length' → logprob: -3.651421070098877
    3. '.' → logprob: -10.276420593261719
    4. 'length' → logprob: -10.401420593261719
    5. '_length' → logprob: -10.526420593261719
    6. '   ' → logprob: -11.776420593261719
    7. '_.' → logprob: -12.276420593261719
    8. 'self' → logprob: -12.401420593261719
    9. '.len' → logprob: -13.276420593261719
    10. '.__' → logprob: -13.526420593261719

Token 1824: 'gen' (ID: 2468)
  Prédit: 'gen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gen' → logprob: -0.00023214559769257903
    2. '_gen' → logprob: -8.875231742858887
    3. '.gen' → logprob: -9.500231742858887
    4. 'len' → logprob: -12.375231742858887
    5. '
' → logprob: -12.500231742858887
    6. '(gen' → logprob: -12.500231742858887
    7. 'self' → logprob: -14.000231742858887
    8. '	gen' → logprob: -14.375231742858887
    9. '._' → logprob: -14.500231742858887
    10. 'max' → logprob: -14.875231742858887

Token 1825: 'ome' (ID: 747)
  Prédit: 'ome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ome' → logprob: -1.664371848164592e-05
    2. 'e' → logprob: -12.000016212463379
    3. '_' → logprob: -12.375016212463379
    4. 'one' → logprob: -13.125016212463379
    5. 'OME' → logprob: -13.500016212463379
    6. '__' → logprob: -13.750016212463379
    7. 'o' → logprob: -15.500016212463379
    8. '{' → logprob: -15.625016212463379
    9. '
' → logprob: -15.625016212463379
    10. 'ime' → logprob: -16.250017166137695

Token 1826: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.00013202552509028465
    2. 'length' → logprob: -9.000131607055664
    3. '.' → logprob: -12.125131607055664
    4. ').' → logprob: -14.000131607055664
    5. ')' → logprob: -14.750131607055664
    6. '   ' → logprob: -14.875131607055664
    7. ' length' → logprob: -15.000131607055664
    8. '.size' → logprob: -15.125131607055664
    9. ' .' → logprob: -15.250131607055664
    10. '	length' → logprob: -15.500131607055664

Token 1827: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.030104855075478554
    2. ':
' → logprob: -3.780104875564575
    3. '():' → logprob: -5.405104637145996
    4. '       ' → logprob: -6.905104637145996
    5. ':' → logprob: -7.280104637145996
    6. '):
' → logprob: -8.155104637145996
    7. '()' → logprob: -8.530104637145996
    8. ' or' → logprob: -8.905104637145996
    9. '   ' → logprob: -11.280104637145996
    10. '()):
' → logprob: -12.030104637145996

Token 1828: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016086475225165486
    2. ':' → logprob: -7.501608848571777
    3. ':
' → logprob: -7.501608848571777
    4. '       ' → logprob: -7.751608848571777
    5. 'raise' → logprob: -10.251608848571777
    6. ':return' → logprob: -11.751608848571777
    7. ' raise' → logprob: -12.376608848571777
    8. '          ' → logprob: -12.376608848571777
    9. '```' → logprob: -12.626608848571777
    10. '               ' → logprob: -12.876608848571777

Token 1829: ' return' (ID: 622)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.023437637835741043
    2. '           ' → logprob: -3.773437738418579
    3. ' raise' → logprob: -9.0234375
    4. '       ' → logprob: -10.7734375
    5. '
' → logprob: -10.8984375
    6. '               ' → logprob: -11.6484375
    7. '	raise' → logprob: -11.8984375
    8. 'return' (adapté à ' return') → logprob: -12.0234375
    9. '   ' → logprob: -12.8984375
    10. 'raises' → logprob: -13.1484375

Token 1830: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.2566767930984497
    2. '""' → logprob: -1.5066767930984497
    3. '"' → logprob: -6.00667667388916
    4. ''\' → logprob: -6.75667667388916
    5. ''' → logprob: -7.63167667388916
    6. '''
' → logprob: -8.38167667388916
    7. ''-' → logprob: -8.88167667388916
    8. '?' → logprob: -9.75667667388916
    9. ' ''' → logprob: -9.88167667388916
    10. 'None' → logprob: -10.00667667388916

Token 1831: '0' (ID: 15)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.4882546067237854
    2. ''' → logprob: -1.3632545471191406
    3. ''
' → logprob: -2.3632545471191406
    4. '?'' → logprob: -3.6132545471191406
    5. ' '
' → logprob: -5.863254547119141
    6. 'N' → logprob: -6.363254547119141
    7. '-' → logprob: -6.488254547119141
    8. ' '' → logprob: -7.363254547119141
    9. '#' → logprob: -7.488254547119141
    10. '\n' → logprob: -7.613254547119141

Token 1832: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005951198749244213
    2. ''
' → logprob: -5.130951404571533
    3. '"' → logprob: -11.880950927734375
    4. '0' → logprob: -12.005950927734375
    5. '')' → logprob: -12.505950927734375
    6. ')' → logprob: -13.755950927734375
    7. ''
' → logprob: -14.130950927734375
    8. '#' → logprob: -14.255950927734375
    9. ''

' → logprob: -14.380950927734375
    10. ' '' → logprob: -15.255950927734375

Token 1833: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00386053160764277
    2. '
' → logprob: -5.7538604736328125
    3. 'return' → logprob: -7.8788604736328125
    4. '   ' → logprob: -9.253860473632812
    5. ' return' → logprob: -9.378860473632812
    6. '        
' → logprob: -10.503860473632812
    7. '```' → logprob: -10.878860473632812
    8. '<|end|>' → logprob: -11.753860473632812
    9. '	' → logprob: -12.003860473632812
    10. '           ' → logprob: -12.128860473632812

Token 1834: ' result' (ID: 1534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0013958304189145565
    2. '       ' → logprob: -6.7513957023620605
    3. 'result' (adapté à ' result') → logprob: -9.251396179199219
    4. ' return' → logprob: -9.751396179199219
    5. 'c' → logprob: -10.251396179199219
    6. 'char' → logprob: -10.876396179199219
    7. '
' → logprob: -11.376396179199219
    8. 'ch' → logprob: -13.376396179199219
    9. 'res' → logprob: -13.501396179199219
    10. '   ' → logprob: -14.251396179199219

Token 1835: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759955644607544
    2. '=' → logprob: -0.8259955644607544
    3. '=self' → logprob: -10.575995445251465
    4. 'return' → logprob: -11.825995445251465
    5. '_' → logprob: -11.825995445251465
    6. 'self' → logprob: -12.575995445251465
    7. ' ' → logprob: -13.075995445251465
    8. '.' → logprob: -13.200995445251465
    9. '=
' → logprob: -13.450995445251465
    10. ' =
' → logprob: -13.450995445251465

Token 1836: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.676292231422849e-05
    2. ' self' → logprob: -11.000017166137695
    3. '       ' → logprob: -19.000017166137695
    4. '(self' → logprob: -19.000017166137695
    5. '
' → logprob: -20.750017166137695
    6. '[self' → logprob: -21.250017166137695
    7. '	self' → logprob: -21.625017166137695
    8. '=self' → logprob: -22.125017166137695
    9. '```' → logprob: -22.500017166137695
    10. '           ' → logprob: -22.625017166137695

Token 1837: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.002441766206175089
    2. '.get' → logprob: -6.252441883087158
    3. '_get' → logprob: -8.50244140625
    4. '.' → logprob: -8.62744140625
    5. '_' → logprob: -10.37744140625
    6. '_query' → logprob: -10.50244140625
    7. 'get' → logprob: -11.25244140625
    8. '   ' → logprob: -11.25244140625
    9. ' _' → logprob: -11.50244140625
    10. '_gen' → logprob: -11.75244140625

Token 1838: 'gen' (ID: 2468)
  Prédit: 'gen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gen' → logprob: -2.522638169466518e-05
    2. '_gen' → logprob: -10.625024795532227
    3. ' genome' → logprob: -15.500024795532227
    4. 'get' → logprob: -15.500024795532227
    5. '.gen' → logprob: -15.500024795532227
    6. '(gen' → logprob: -15.750024795532227
    7. '
' → logprob: -16.250024795532227
    8. '	gen' → logprob: -17.250024795532227
    9. 'gene' → logprob: -17.375024795532227
    10. '_get' → logprob: -18.500024795532227

Token 1839: 'ome' (ID: 747)
  Prédit: 'ome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ome' → logprob: -2.3319124011322856e-05
    2. 'e' → logprob: -11.875022888183594
    3. 'one' → logprob: -12.125022888183594
    4. '_' → logprob: -13.250022888183594
    5. 'code' → logprob: -13.250022888183594
    6. '_code' → logprob: -13.750022888183594
    7. 'omes' → logprob: -14.125022888183594
    8. 'me' → logprob: -14.250022888183594
    9. '__' → logprob: -14.375022888183594
    10. '
' → logprob: -14.500022888183594

Token 1840: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -8.876193169271573e-05
    2. '.' → logprob: -9.375088691711426
    3. 'get' → logprob: -12.750088691711426
    4. '   ' → logprob: -14.750088691711426
    5. ' .' → logprob: -15.250088691711426
    6. '
' → logprob: -16.000089645385742
    7. '_get' → logprob: -16.000089645385742
    8. '       ' → logprob: -16.625089645385742
    9. '.
' → logprob: -18.250089645385742
    10. '@get' → logprob: -18.625089645385742

Token 1841: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.9361264946837764e-07
    2. 'char' → logprob: -17.5
    3. '_' → logprob: -18.375
    4. '_chr' → logprob: -18.375
    5. '_CHAR' → logprob: -19.0
    6. '
' → logprob: -19.125
    7. '```' → logprob: -19.125
    8. ' _' → logprob: -19.25
    9. 'Char' → logprob: -19.5
    10. '_chars' → logprob: -19.75

Token 1842: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.981667537620524e-06
    2. '__' → logprob: -14.750001907348633
    3. ' _' → logprob: -15.250001907348633
    4. '_' → logprob: -15.250001907348633
    5. '```' → logprob: -15.250001907348633
    6. '_a' → logprob: -15.375001907348633
    7. ''_' → logprob: -16.125001907348633
    8. ')_' → logprob: -16.500001907348633
    9. '_AT' → logprob: -16.500001907348633
    10. '   ' → logprob: -16.500001907348633

Token 1843: '(index' (ID: 13517)
  Prédit: '(index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.002240535570308566
    2. '(' → logprob: -6.1272406578063965
    3. ' (' → logprob: -10.627240180969238
    4. '(
' → logprob: -10.752240180969238
    5. 'index' → logprob: -12.002240180969238
    6. '(ind' → logprob: -13.752240180969238
    7. '(i' → logprob: -14.502240180969238
    8. '[index' → logprob: -14.752240180969238
    9. '(at' → logprob: -15.377240180969238
    10. ' ' → logprob: -15.502240180969238

Token 1844: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011386694386601448
    2. ')
' → logprob: -6.876138687133789
    3. '       ' → logprob: -9.501138687133789
    4. ' )' → logprob: -10.876138687133789
    5. '   ' → logprob: -11.876138687133789
    6. ' or' → logprob: -13.751138687133789
    7. '           ' → logprob: -14.251138687133789
    8. ')return' → logprob: -14.251138687133789
    9. '[' → logprob: -14.876138687133789
    10. ')`' → logprob: -15.001138687133789

Token 1845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24384064972400665
    2. ' if' → logprob: -1.8688406944274902
    3. 'if' → logprob: -3.3688406944274902
    4. ' or' → logprob: -3.6188406944274902
    5. '   ' → logprob: -7.86884069442749
    6. 'or' → logprob: -8.618840217590332
    7. '
' → logprob: -8.743840217590332
    8. 'return' → logprob: -10.118840217590332
    9. '        
' → logprob: -10.618840217590332
    10. '           ' → logprob: -10.868840217590332

Token 1846: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5764176249504089
    2. 'if' (adapté à ' if') → logprob: -1.0764176845550537
    3. 'return' → logprob: -2.5764176845550537
    4. '       ' → logprob: -4.326417446136475
    5. ' return' → logprob: -4.826417446136475
    6. ' or' → logprob: -14.201417922973633
    7. '   ' → logprob: -14.701417922973633
    8. '
' → logprob: -15.076417922973633
    9. 'eturn' → logprob: -15.326417922973633
    10. '	if' → logprob: -15.701417922973633

Token 1847: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -9.615255839889869e-05
    2. ' result' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.75009536743164
    4. '	result' → logprob: -20.75009536743164
    5. '
' → logprob: -20.87509536743164
    6. '(result' → logprob: -21.75009536743164
    7. ' ' → logprob: -22.37509536743164
    8. '  ' → logprob: -23.12509536743164
    9. 'Result' → logprob: -23.25009536743164
    10. '_result' → logprob: -23.62509536743164

Token 1848: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.004646334331482649
    2. 'is' → logprob: -5.379646301269531
    3. '	is' → logprob: -11.879646301269531
    4. ' if' → logprob: -12.004646301269531
    5. 'if' → logprob: -12.379646301269531
    6. '==' → logprob: -12.629646301269531
    7. ' or' → logprob: -13.254646301269531
    8. ' ==' → logprob: -13.629646301269531
    9. '<|end|>' → logprob: -14.004646301269531
    10. 'or' → logprob: -14.629646301269531

Token 1849: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0181704293936491
    2. ' None' → logprob: -4.018170356750488
    3. 'not' → logprob: -11.268170356750488
    4. ' not' → logprob: -11.768170356750488
    5. '   ' → logprob: -17.143171310424805
    6. 'none' → logprob: -18.768171310424805
    7. '_None' → logprob: -18.768171310424805
    8. 'Not' → logprob: -19.018171310424805
    9. '(None' → logprob: -19.393171310424805
    10. '0' → logprob: -19.893171310424805

Token 1850: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4659291207790375
    2. '           ' → logprob: -1.0909291505813599
    3. ':
' → logprob: -4.21592903137207
    4. ':' → logprob: -5.21592903137207
    5. '       ' → logprob: -5.34092903137207
    6. 'or' → logprob: -5.46592903137207
    7. ':return' → logprob: -6.09092903137207
    8. 'return' → logprob: -6.34092903137207
    9. ' else' → logprob: -6.84092903137207
    10. '          ' → logprob: -7.21592903137207

Token 1851: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39601996541023254
    2. 'return' → logprob: -1.1460199356079102
    3. ' return' → logprob: -4.89601993560791
    4. '       ' → logprob: -7.14601993560791
    5. ''' → logprob: -7.27101993560791
    6. '               ' → logprob: -10.27101993560791
    7. '   ' → logprob: -10.64601993560791
    8. ':return' → logprob: -10.64601993560791
    9. '{return' → logprob: -11.52101993560791
    10. ':
' → logprob: -11.52101993560791

Token 1852: ' return' (ID: 622)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03401967138051987
    2. 'return' (adapté à ' return') → logprob: -3.534019708633423
    3. '           ' → logprob: -5.659019470214844
    4. 'result' → logprob: -8.159019470214844
    5. ' '' → logprob: -8.409019470214844
    6. ' return' → logprob: -8.534019470214844
    7. '       ' → logprob: -10.409019470214844
    8. ''s' → logprob: -11.534019470214844
    9. ''re' → logprob: -11.659019470214844
    10. '"' → logprob: -12.534019470214844

Token 1853: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.464347173576243e-05
    2. ' '' → logprob: -10.75003433227539
    3. '"' → logprob: -11.87503433227539
    4. '0' → logprob: -12.12503433227539
    5. '`' → logprob: -15.12503433227539
    6. '''' → logprob: -15.37503433227539
    7. '   ' → logprob: -16.25003433227539
    8. ' ' → logprob: -17.50003433227539
    9. '‘' → logprob: -18.50003433227539
    10. ''\' → logprob: -18.62503433227539

Token 1854: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010429323883727193
    2. ''' → logprob: -6.87604284286499
    3. ' ' → logprob: -12.001043319702148
    4. ''
' → logprob: -13.251043319702148
    5. ' '' → logprob: -14.126043319702148
    6. '"' → logprob: -14.251043319702148
    7. '?' → logprob: -14.876043319702148
    8. '?'' → logprob: -15.626043319702148
    9. '''' → logprob: -16.87604331970215
    10. '`' → logprob: -16.87604331970215

Token 1855: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.043653398752212524
    2. ''
' → logprob: -3.1686534881591797
    3. '       ' → logprob: -7.41865348815918
    4. '')' → logprob: -11.04365348815918
    5. '"' → logprob: -11.16865348815918
    6. ')' → logprob: -11.54365348815918
    7. '   ' → logprob: -12.54365348815918
    8. ')'
' → logprob: -12.66865348815918
    9. ''
' → logprob: -13.04365348815918
    10. ')'' → logprob: -13.41865348815918

Token 1856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017350474081467837
    2. 'return' → logprob: -9.125173568725586
    3. '   ' → logprob: -10.125173568725586
    4. 'else' → logprob: -11.875173568725586
    5. '	' → logprob: -12.375173568725586
    6. ' else' → logprob: -12.500173568725586
    7. ' return' → logprob: -12.875173568725586
    8. '
' → logprob: -13.250173568725586
    9. '           ' → logprob: -13.250173568725586
    10. '        
' → logprob: -14.000173568725586

Token 1857: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.019332190975546837
    2. '       ' → logprob: -4.269332408905029
    3. ' return' → logprob: -5.269332408905029
    4. '   ' → logprob: -12.644331932067871
    5. '{return' → logprob: -13.144331932067871
    6. '	return' → logprob: -14.144331932067871
    7. '```' → logprob: -14.144331932067871
    8. 'result' → logprob: -14.644331932067871
    9. 'eturn' → logprob: -14.769331932067871
    10. ':return' → logprob: -15.394331932067871

Token 1858: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.306760805164231e-05
    2. ' result' → logprob: -11.25001335144043
    3. 'res' → logprob: -20.87501335144043
    4. 'str' → logprob: -21.37501335144043
    5. '	result' → logprob: -21.50001335144043
    6. 'results' → logprob: -22.00001335144043
    7. '   ' → logprob: -22.25001335144043
    8. '`' → logprob: -22.75001335144043
    9. 're' → logprob: -22.87501335144043
    10. '(result' → logprob: -23.25001335144043

Token 1859: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1860: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1861: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.022941559553146362
    2. 'solve' → logprob: -4.897941589355469
    3. 'process' → logprob: -5.147941589355469
    4. 'run' → logprob: -5.272941589355469
    5. 'expand' → logprob: -6.022941589355469
    6. ' main' → logprob: -7.647941589355469
    7. 'decode' → logprob: -7.772941589355469
    8. 'test' → logprob: -8.147941589355469
    9. 'example' → logprob: -8.397941589355469
    10. 'parse' → logprob: -8.522941589355469

Token 1862: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00018411019118502736
    2. '():
' → logprob: -8.625184059143066
    3. '()' → logprob: -12.625184059143066
    4. ' ():' → logprob: -14.000184059143066
    5. '(' → logprob: -15.750184059143066
    6. '():
' → logprob: -16.250185012817383
    7. '_' → logprob: -17.000185012817383
    8. '()>' → logprob: -17.625185012817383
    9. '():

' → logprob: -17.750185012817383
    10. '().' → logprob: -18.375185012817383

Token 1863: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3351006507873535
    2. ' import' → logprob: -1.5851006507873535
    3. '   ' → logprob: -2.5851006507873535
    4. '```' → logprob: -5.5851006507873535
    5. '	import' → logprob: -7.9601006507873535
    6. 'input' → logprob: -9.335100173950195
    7. 'data' → logprob: -10.085100173950195
    8. ' input' → logprob: -10.710100173950195
    9. 'gen' → logprob: -10.835100173950195
    10. ' genome' → logprob: -10.960100173950195

Token 1864: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.06307832896709442
    2. ' import' → logprob: -2.8130784034729004
    3. '   ' → logprob: -6.8130784034729
    4. '	import' → logprob: -11.813077926635742
    5. '```' → logprob: -13.313077926635742
    6. 'input' → logprob: -14.563077926635742
    7. ' genome' → logprob: -14.563077926635742
    8. 'data' → logprob: -15.188077926635742
    9. 'n' → logprob: -15.938077926635742
    10. 'gen' → logprob: -16.688077926635742

Token 1865: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.9361264946837764e-07
    2. ' sys' → logprob: -15.75
    3. 'io' → logprob: -20.75
    4. '=sys' → logprob: -21.0
    5. '(sys' → logprob: -22.5
    6. '	sys' → logprob: -22.5
    7. 'stdin' → logprob: -24.375
    8. '```' → logprob: -24.5
    9. 'os' → logprob: -25.0
    10. '.sys' → logprob: -25.125

Token 1866: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03926534578204155
    2. '
' → logprob: -3.6642653942108154
    3. 'input' → logprob: -4.789265155792236
    4. '    
' → logprob: -5.914265155792236
    5. 'for' → logprob: -7.164265155792236
    6. 'data' → logprob: -7.289265155792236
    7. ' input' → logprob: -8.539265632629395
    8. ' lines' → logprob: -9.914265632629395
    9. ' for' → logprob: -10.539265632629395
    10. 'line' → logprob: -10.789265632629395

Token 1867: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10167793184518814
    2. 'input' → logprob: -2.726677894592285
    3. 'data' → logprob: -4.226677894592285
    4. '
' → logprob: -4.726677894592285
    5. 'for' → logprob: -5.351677894592285
    6. '    
' → logprob: -6.476677894592285
    7. ' input' → logprob: -7.226677894592285
    8. 'line' → logprob: -8.726677894592285
    9. ' for' → logprob: -8.851677894592285
    10. ' lines' → logprob: -9.101677894592285

Token 1868: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.717158854007721
    2. 'input' → logprob: -0.717158854007721
    3. 'for' → logprob: -4.467158794403076
    4. ' input' → logprob: -5.092158794403076
    5. 'data' → logprob: -5.967158794403076
    6. 'n' → logprob: -6.842158794403076
    7. '
' → logprob: -7.092158794403076
    8. 'lines' (adapté à ' lines') → logprob: -7.467158794403076
    9. 'query' → logprob: -8.092159271240234
    10. ' for' → logprob: -8.467159271240234

Token 1869: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48348718881607056
    2. '=' → logprob: -0.9834871888160706
    3. '   ' → logprob: -4.733487129211426
    4. '=
' → logprob: -8.733487129211426
    5. '()' → logprob: -9.108487129211426
    6. '=[]
' → logprob: -9.483487129211426
    7. '()
' → logprob: -9.733487129211426
    8. '=line' → logprob: -10.108487129211426
    9. ' =
' → logprob: -10.233487129211426
    10. '=[]' → logprob: -11.733487129211426

Token 1870: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0005607772618532181
    2. ' sys' → logprob: -7.500560760498047
    3. '[' → logprob: -12.000560760498047
    4. 'list' → logprob: -13.500560760498047
    5. '(sys' → logprob: -15.750560760498047
    6. ' [' → logprob: -16.000560760498047
    7. '[]
' → logprob: -17.125560760498047
    8. '=sys' → logprob: -17.500560760498047
    9. '	sys' → logprob: -18.500560760498047
    10. '[]' → logprob: -19.125560760498047

Token 1871: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0005736440070904791
    2. 'sys' → logprob: -7.500573635101318
    3. 'l' → logprob: -11.125574111938477
    4. ' line' → logprob: -12.250574111938477
    5. '
' → logprob: -14.250574111938477
    6. 'lin' → logprob: -15.750574111938477
    7. 'for' → logprob: -15.875574111938477
    8. '(line' → logprob: -16.375574111938477
    9. '   ' → logprob: -17.375574111938477
    10. '[line' → logprob: -17.375574111938477

Token 1872: '.rstrip' (ID: 161629)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.6986765265464783
    2. '.rstrip' → logprob: -0.6986765265464783
    3. 'strip' → logprob: -6.198676586151123
    4. 'for' → logprob: -6.698676586151123
    5. 'rstrip' → logprob: -7.073676586151123
    6. ' for' → logprob: -7.198676586151123
    7. '.' → logprob: -7.448676586151123
    8. '   ' → logprob: -10.323676109313965
    9. '.readline' → logprob: -10.823676109313965
    10. '_strip' → logprob: -12.073676109313965

Token 1873: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.641936719417572
    2. '('\' → logprob: -0.891936719417572
    3. 'for' → logprob: -2.766936779022217
    4. ''\' → logprob: -7.891936779022217
    5. ' for' → logprob: -8.391936302185059
    6. '()
' → logprob: -8.516936302185059
    7. '()\' → logprob: -9.516936302185059
    8. '\n' → logprob: -9.766936302185059
    9. '
' → logprob: -10.516936302185059
    10. '("\' → logprob: -10.891936302185059

Token 1874: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.674858301877975e-05
    2. '\n' → logprob: -9.250096321105957
    3. 'newline' → logprob: -14.500096321105957
    4. '
' → logprob: -15.625096321105957
    5. 'r' → logprob: -17.500097274780273
    6. '_n' → logprob: -18.875097274780273
    7. 'ndef' → logprob: -19.000097274780273
    8. 'nl' → logprob: -19.125097274780273
    9. '```' → logprob: -19.625097274780273
    10. ')' → logprob: -19.875097274780273

Token 1875: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005394195672124624
    2. ')' → logprob: -5.380393981933594
    3. '()' → logprob: -7.630393981933594
    4. '())' → logprob: -9.380393981933594
    5. '\n' → logprob: -9.505393981933594
    6. ''' → logprob: -10.005393981933594
    7. '('\' → logprob: -10.255393981933594
    8. '   ' → logprob: -11.380393981933594
    9. ''\' → logprob: -11.505393981933594
    10. '")' → logprob: -12.255393981933594

Token 1876: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04697972536087036
    2. ' for' → logprob: -3.1719796657562256
    3. '()' → logprob: -5.546979904174805
    4. '   ' → logprob: -9.921979904174805
    5. ')' → logprob: -11.171979904174805
    6. '       ' → logprob: -12.421979904174805
    7. '	for' → logprob: -13.171979904174805
    8. '    ' → logprob: -13.546979904174805
    9. '
' → logprob: -13.921979904174805
    10. ' ' → logprob: -14.921979904174805

Token 1877: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0001612267515156418
    2. ' line' → logprob: -9.125161170959473
    3. 'sys' → logprob: -9.875161170959473
    4. '	line' → logprob: -14.875161170959473
    5. '_line' → logprob: -15.875161170959473
    6. ' sys' → logprob: -16.25016212463379
    7. '
' → logprob: -16.75016212463379
    8. 'l' → logprob: -16.75016212463379
    9. 'lines' → logprob: -17.25016212463379
    10. 'lin' → logprob: -17.25016212463379

Token 1878: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14300501346588135
    2. 'in' → logprob: -2.143004894256592
    3. 'line' → logprob: -4.393004894256592
    4. ' line' → logprob: -5.643004894256592
    5. '	line' → logprob: -10.89300537109375
    6. '=line' → logprob: -11.39300537109375
    7. ' ' → logprob: -12.51800537109375
    8. '	in' → logprob: -12.64300537109375
    9. '_line' → logprob: -13.26800537109375
    10. ',line' → logprob: -13.89300537109375

Token 1879: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.572941179503687e-05
    2. ' sys' → logprob: -10.000045776367188
    3. 'line' → logprob: -15.500045776367188
    4. '=sys' → logprob: -17.125045776367188
    5. 'stdin' → logprob: -17.125045776367188
    6. '	sys' → logprob: -17.375045776367188
    7. '
' → logprob: -18.250045776367188
    8. '(sys' → logprob: -19.125045776367188
    9. '   ' → logprob: -19.750045776367188
    10. 'import' → logprob: -20.000045776367188

Token 1880: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.001550929038785398
    2. 'stdin' → logprob: -6.501551151275635
    3. '.' → logprob: -10.376550674438477
    4. '.stdout' → logprob: -12.001550674438477
    5. '.argv' → logprob: -12.001550674438477
    6. '.std' → logprob: -12.751550674438477
    7. '(stdin' → logprob: -13.626550674438477
    8. ' stdin' → logprob: -14.251550674438477
    9. 'import' → logprob: -16.376550674438477
    10. '.stderr' → logprob: -16.626550674438477

Token 1881: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2501138746738434
    2. ')' → logprob: -1.750113844871521
    3. '   ' → logprob: -3.6251139640808105
    4. 'in' → logprob: -4.7501139640808105
    5. ' in' → logprob: -4.8751139640808105
    6. 'if' → logprob: -5.5001139640808105
    7. ' if' → logprob: -8.375113487243652
    8. 'import' → logprob: -9.625113487243652
    9. '
' → logprob: -10.125113487243652
    10. '())
' → logprob: -10.500113487243652

Token 1882: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014346949756145477
    2. 'for' → logprob: -4.514347076416016
    3. ' for' → logprob: -5.764347076416016
    4. ' genome' → logprob: -9.514347076416016
    5. 'gen' → logprob: -10.389347076416016
    6. 'while' → logprob: -11.389347076416016
    7. '```' → logprob: -11.514347076416016
    8. 'code' → logprob: -11.889347076416016
    9. 'def' → logprob: -12.389347076416016
    10. 'n' → logprob: -12.514347076416016

Token 1883: ' for' (ID: 395)
  Prédit: 'gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gen' → logprob: -0.6463974118232727
    2. 'for' (adapté à ' for') → logprob: -1.396397352218628
    3. '   ' → logprob: -1.646397352218628
    4. 'n' → logprob: -4.771397590637207
    5. 'query' → logprob: -4.771397590637207
    6. 'first' → logprob: -5.646397590637207
    7. 't' → logprob: -5.771397590637207
    8. 'try' → logprob: -6.021397590637207
    9. 'T' → logprob: -6.146397590637207
    10. 'queries' → logprob: -6.271397590637207

Token 1884: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0007105246186256409
    2. ' line' → logprob: -7.250710487365723
    3. '	line' → logprob: -14.625710487365723
    4. '(line' → logprob: -16.87571144104004
    5. '
' → logprob: -19.00071144104004
    6. '_line' → logprob: -19.00071144104004
    7. '   ' → logprob: -19.00071144104004
    8. '=line' → logprob: -19.00071144104004
    9. 'lin' → logprob: -19.75071144104004
    10. '#line' → logprob: -20.12571144104004

Token 1885: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017056517535820603
    2. 'in' → logprob: -6.751705646514893
    3. '   ' → logprob: -8.00170612335205
    4. '       ' → logprob: -8.75170612335205
    5. ':
' → logprob: -10.87670612335205
    6. '	in' → logprob: -12.00170612335205
    7. ':' → logprob: -12.25170612335205
    8. '    ' → logprob: -12.50170612335205
    9. ' ' → logprob: -13.37670612335205
    10. ' =' → logprob: -13.87670612335205

Token 1886: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.306760805164231e-05
    2. ' lines' → logprob: -11.25001335144043
    3. '	lines' → logprob: -17.75001335144043
    4. 'line' → logprob: -18.50001335144043
    5. '(lines' → logprob: -19.12501335144043
    6. '
' → logprob: -21.62501335144043
    7. '_lines' → logprob: -22.25001335144043
    8. '.lines' → logprob: -22.62501335144043
    9. '-lines' → logprob: -23.00001335144043
    10. '   ' → logprob: -23.00001335144043

Token 1887: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11011416465044022
    2. ':' → logprob: -2.360114097595215
    3. ':
' → logprob: -4.735114097595215
    4. '   ' → logprob: -7.985114097595215
    5. ',' → logprob: -8.235114097595215
    6. '<|end|>' → logprob: -8.985114097595215
    7. ' if' → logprob: -9.235114097595215
    8. '):
' → logprob: -9.735114097595215
    9. '):' → logprob: -10.485114097595215
    10. '        
' → logprob: -10.735114097595215

Token 1888: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4740929901599884
    2. '   ' → logprob: -0.974092960357666
    3. ' if' → logprob: -11.474093437194824
    4. '```' → logprob: -12.474093437194824
    5. 'if' → logprob: -14.849093437194824
    6. '<|end|>' → logprob: -15.099093437194824
    7. '   ' → logprob: -15.224093437194824
    8. '    
' → logprob: -15.724093437194824
    9. '
' → logprob: -16.224092483520508
    10. ',' → logprob: -16.224092483520508

Token 1889: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10827167332172394
    2. 'line' → logprob: -2.358271598815918
    3. '       ' → logprob: -4.983271598815918
    4. ' if' → logprob: -7.108271598815918
    5. '   ' → logprob: -8.483271598815918
    6. 'gen' → logprob: -9.358271598815918
    7. ' line' → logprob: -9.983271598815918
    8. '	line' → logprob: -11.858271598815918
    9. '
' → logprob: -12.483271598815918
    10. '	if' → logprob: -12.858271598815918

Token 1890: ' line' (ID: 2543)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00917887780815363
    2. ' not' → logprob: -5.00917911529541
    3. 'line' → logprob: -6.00917911529541
    4. ' line' → logprob: -12.38417911529541
    5. '
' → logprob: -16.884178161621094
    6. '   ' → logprob: -17.009178161621094
    7. '#line' → logprob: -17.259178161621094
    8. '	not' → logprob: -17.884178161621094
    9. ' ' → logprob: -18.384178161621094
    10. 'no' → logprob: -19.134178161621094

Token 1891: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19181840121746063
    2. ' ==' → logprob: -1.816818356513977
    3. '.strip' → logprob: -4.4418182373046875
    4. '=' → logprob: -9.316818237304688
    5. '==
' → logprob: -9.816818237304688
    6. '===' → logprob: -11.066818237304688
    7. '()==' → logprob: -11.191818237304688
    8. '.' → logprob: -11.316818237304688
    9. '.startswith' → logprob: -11.691818237304688
    10. ' is' → logprob: -12.441818237304688

Token 1892: ' "' (ID: 392)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.2520861327648163
    2. '"' → logprob: -2.5020861625671387
    3. ''' → logprob: -2.7520861625671387
    4. '""' → logprob: -2.8770861625671387
    5. '"":' → logprob: -3.8770861625671387
    6. ''#' → logprob: -10.62708568572998
    7. '"#' → logprob: -11.00208568572998
    8. '":' → logprob: -11.25208568572998
    9. '''
' → logprob: -11.62708568572998
    10. ''ex' → logprob: -11.62708568572998

Token 1893: '0' (ID: 15)
  Prédit: '":
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.07965537905693054
    2. '":' → logprob: -2.579655408859253
    3. '"' → logprob: -7.329655170440674
    4. '""' → logprob: -9.704655647277832
    5. '":
' → logprob: -11.204655647277832
    6. '"":' → logprob: -11.704655647277832
    7. '0' → logprob: -12.204655647277832
    8. '```' → logprob: -12.204655647277832
    9. '":

' → logprob: -12.204655647277832
    10. '__":
' → logprob: -12.454655647277832

Token 1894: ' ' (ID: 220)
  Prédit: '":
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.011716562323272228
    2. '":' → logprob: -4.511716365814209
    3. '"' → logprob: -8.011716842651367
    4. '":
' → logprob: -8.136716842651367
    5. '"):
' → logprob: -10.386716842651367
    6. ':
' → logprob: -12.261716842651367
    7. '):
' → logprob: -12.636716842651367
    8. '__":
' → logprob: -13.261716842651367
    9. '0' → logprob: -13.761716842651367
    10. '\n' → logprob: -13.886716842651367

Token 1895: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6249082684516907
    2. '":
' → logprob: -1.249908208847046
    3. '":' → logprob: -1.999908208847046
    4. '"' → logprob: -3.749908208847046
    5. '"):
' → logprob: -4.624908447265625
    6. '":
' → logprob: -4.874908447265625
    7. ' ' → logprob: -7.124908447265625
    8. '"):' → logprob: -8.124908447265625
    9. '\n' → logprob: -8.874908447265625
    10. ' "' → logprob: -9.374908447265625

Token 1896: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.05605088546872139
    2. '":' → logprob: -3.0560507774353027
    3. '"' → logprob: -5.931050777435303
    4. '\n' → logprob: -6.056050777435303
    5. '":
' → logprob: -6.931050777435303
    6. ' "' → logprob: -7.181050777435303
    7. '0' → logprob: -7.556050777435303
    8. '"):
' → logprob: -9.931051254272461
    9. ' ' → logprob: -10.681051254272461
    10. ':
' → logprob: -11.056051254272461

Token 1897: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004330422263592482
    2. ':' → logprob: -5.879330635070801
    3. ':
' → logprob: -6.754330635070801
    4. '       ' → logprob: -8.2543306350708
    5. '		' → logprob: -9.7543306350708
    6. '          ' → logprob: -11.2543306350708
    7. ',' → logprob: -11.7543306350708
    8. '	       ' → logprob: -12.3793306350708
    9. '<|end|>' → logprob: -13.3793306350708
    10. '               ' → logprob: -13.6293306350708

Token 1898: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25458985567092896
    2. '       ' → logprob: -1.5045897960662842
    3. 'break' (adapté à ' break') → logprob: -6.629590034484863
    4. '               ' → logprob: -7.254590034484863
    5. '
' → logprob: -7.754590034484863
    6. ' break' → logprob: -9.379590034484863
    7. '		' → logprob: -9.629590034484863
    8. '	break' → logprob: -11.629590034484863
    9. 'return' → logprob: -11.754590034484863
    10. '   ' → logprob: -12.004590034484863

Token 1899: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003190193965565413
    2. '        
' → logprob: -8.625319480895996
    3. '
' → logprob: -9.375319480895996
    4. '<|end|>' → logprob: -10.125319480895996
    5. '   ' → logprob: -12.500319480895996
    6. ',' → logprob: -12.750319480895996
    7. '           ' → logprob: -13.500319480895996
    8. '<|end|>' → logprob: -13.625319480895996
    9. '      ' → logprob: -13.750319480895996
    10. '        ' → logprob: -14.250319480895996

Token 1900: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015038289711810648
    2. '        
' → logprob: -9.000150680541992
    3. '
' → logprob: -11.625150680541992
    4. '<|end|>' → logprob: -11.875150680541992
    5. '   ' → logprob: -12.250150680541992
    6. '           ' → logprob: -13.500150680541992
    7. '      ' → logprob: -13.875150680541992
    8. '            
' → logprob: -14.500150680541992
    9. '```' → logprob: -14.500150680541992
    10. '        ' → logprob: -14.500150680541992

Token 1901: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46557125449180603
    2. 'k' → logprob: -1.5905712842941284
    3. '       ' → logprob: -2.340571165084839
    4. 'parts' → logprob: -3.215571165084839
    5. 'K' → logprob: -4.590571403503418
    6. 'length' → logprob: -5.840571403503418
    7. 'count' → logprob: -5.965571403503418
    8. 'N' → logprob: -5.965571403503418
    9. ' n' → logprob: -6.090571403503418
    10. 'query' → logprob: -6.215571403503418

Token 1902: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.775109052658081
    2. 'line' → logprob: -1.025109052658081
    3. ' line' → logprob: -2.025109052658081
    4. 'not' → logprob: -3.025109052658081
    5. 'len' → logprob: -10.77510929107666
    6. ' ' → logprob: -10.90010929107666
    7. '   ' → logprob: -11.40010929107666
    8. ' len' → logprob: -13.02510929107666
    9. '	line' → logprob: -13.40010929107666
    10. ''' → logprob: -13.65010929107666

Token 1903: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0001234428636962548
    2. ' line' → logprob: -9.000123023986816
    3. '
' → logprob: -17.625123977661133
    4. '	line' → logprob: -20.625123977661133
    5. '   ' → logprob: -20.875123977661133
    6. '(line' → logprob: -21.250123977661133
    7. 'lin' → logprob: -22.125123977661133
    8. 'len' → logprob: -22.375123977661133
    9. '#line' → logprob: -22.500123977661133
    10. 'lines' → logprob: -23.000123977661133

Token 1904: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.038088079541921616
    2. '.' → logprob: -3.288088083267212
    3. '.startswith' → logprob: -10.538087844848633
    4. '.split' → logprob: -12.038087844848633
    5. ':' → logprob: -12.538087844848633
    6. ':
' → logprob: -12.913087844848633
    7. '.trim' → logprob: -13.163087844848633
    8. 'strip' → logprob: -13.163087844848633
    9. '.rstrip' → logprob: -13.538087844848633
    10. ' .' → logprob: -14.038087844848633

Token 1905: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027121594175696373
    2. '       ' → logprob: -3.6521215438842773
    3. ' continue' → logprob: -7.902121543884277
    4. ':' → logprob: -8.777121543884277
    5. 'continue' → logprob: -9.277121543884277
    6. ':
' → logprob: -9.652121543884277
    7. '	       ' → logprob: -10.277121543884277
    8. ',' → logprob: -10.652121543884277
    9. ' continues' → logprob: -11.527121543884277
    10. '               ' → logprob: -11.652121543884277

Token 1906: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.74227374792099
    2. 'continue' (adapté à ' continue') → logprob: -0.74227374792099
    3. ' continue' → logprob: -3.1172738075256348
    4. '       ' → logprob: -6.117273807525635
    5. '               ' → logprob: -6.742273807525635
    6. '   ' → logprob: -8.742273330688477
    7. '	continue' → logprob: -9.367273330688477
    8. '_continue' → logprob: -11.367273330688477
    9. ' ' → logprob: -11.742273330688477
    10. '		' → logprob: -12.617273330688477

Token 1907: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.40998875699006e-05
    2. '
' → logprob: -10.25007438659668
    3. '        
' → logprob: -11.00007438659668
    4. 'tokens' → logprob: -12.00007438659668
    5. '   ' → logprob: -12.25007438659668
    6. '	' → logprob: -13.00007438659668
    7. ',' → logprob: -13.25007438659668
    8. '```' → logprob: -13.25007438659668
    9. '	   ' → logprob: -14.00007438659668
    10. 's' → logprob: -14.12507438659668

Token 1908: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.093505099765025e-05
    2. '```' → logprob: -12.250020980834961
    3. '   ' → logprob: -12.375020980834961
    4. '        
' → logprob: -12.750020980834961
    5. '<|end|>' → logprob: -13.125020980834961
    6. 'tokens' → logprob: -13.125020980834961
    7. '           ' → logprob: -14.000020980834961
    8. ' parts' → logprob: -14.500020980834961
    9. '	   ' → logprob: -14.500020980834961
    10. '	' → logprob: -14.625020980834961

Token 1909: ' genome' (ID: 64778)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2989039123058319
    2. 'parts' → logprob: -1.9239039421081543
    3. '       ' → logprob: -3.1739039421081543
    4. 'k' → logprob: -3.6739039421081543
    5. ' parts' → logprob: -4.423903942108154
    6. ' n' → logprob: -4.423903942108154
    7. 'tokens' → logprob: -5.798903942108154
    8. 'length' → logprob: -5.798903942108154
    9. 'N' → logprob: -5.923903942108154
    10. 'count' → logprob: -6.173903942108154

Token 1910: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.11797712743282318
    2. '_query' → logprob: -2.6179771423339844
    3. ',' → logprob: -4.117977142333984
    4. ' =' → logprob: -4.992977142333984
    5. '_components' → logprob: -5.992977142333984
    6. '_data' → logprob: -5.992977142333984
    7. '_sequence' → logprob: -6.492977142333984
    8. '_comp' → logprob: -6.742977142333984
    9. '<|end|>' → logprob: -6.742977142333984
    10. '_string' → logprob: -6.742977142333984

Token 1911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014847563579678535
    2. ',index' → logprob: -9.12514877319336
    3. ' ,' → logprob: -11.37514877319336
    4. ' =' → logprob: -12.00014877319336
    5. '       ' → logprob: -12.50014877319336
    6. '=' → logprob: -13.12514877319336
    7. ',length' → logprob: -13.12514877319336
    8. '<|end|>' → logprob: -13.25014877319336
    9. '_,' → logprob: -13.50014877319336
    10. '<|end|>' → logprob: -13.75014877319336

Token 1912: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.4133833646774292
    2. 'query' → logprob: -1.5383833646774292
    3. ' pos' → logprob: -2.2883834838867188
    4. 'q' → logprob: -2.4133834838867188
    5. ' query' → logprob: -2.7883834838867188
    6. 'k' → logprob: -2.9133834838867188
    7. ' q' → logprob: -3.0383834838867188
    8. ' idx' → logprob: -3.0383834838867188
    9. 'idx' → logprob: -3.2883834838867188
    10. ' rest' → logprob: -3.7883834838867188

Token 1913: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.1046498641371727
    2. ' =' → logprob: -2.479649782180786
    3. '_s' → logprob: -4.479650020599365
    4. '=' → logprob: -6.229650020599365
    5. 's' → logprob: -6.479650020599365
    6. 'str' → logprob: -7.854650020599365
    7. '_' → logprob: -8.604649543762207
    8. '_part' → logprob: -10.104649543762207
    9. '_space' → logprob: -10.479649543762207
    10. '_sep' → logprob: -11.104649543762207

Token 1914: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16370269656181335
    2. ' =' → logprob: -1.9137027263641357
    3. ',' → logprob: -5.663702487945557
    4. '=line' → logprob: -14.413702964782715
    5. '   ' → logprob: -14.538702964782715
    6. ' ' → logprob: -14.788702964782715
    7. '    ' → logprob: -15.538702964782715
    8. ' ,' → logprob: -15.663702964782715
    9. '	' → logprob: -15.788702964782715
    10. '       ' → logprob: -15.913702964782715

Token 1915: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2014257162809372
    2. ' line' → logprob: -1.7014256715774536
    3. '=line' → logprob: -12.201425552368164
    4. '	line' → logprob: -12.326425552368164
    5. ',line' → logprob: -13.951425552368164
    6. '(line' → logprob: -13.951425552368164
    7. '[line' → logprob: -14.076425552368164
    8. '#line' → logprob: -14.826425552368164
    9. '_line' → logprob: -16.951425552368164
    10. '   ' → logprob: -18.701425552368164

Token 1916: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28446292877197266
    2. ' =' → logprob: -1.4094629287719727
    3. ',' → logprob: -5.784462928771973
    4. '       ' → logprob: -8.784462928771973
    5. '   ' → logprob: -10.659462928771973
    6. '	' → logprob: -11.284462928771973
    7. '        ' → logprob: -11.284462928771973
    8. '	       ' → logprob: -11.784462928771973
    9. '	   ' → logprob: -13.034462928771973
    10. '		' → logprob: -13.159462928771973

Token 1917: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.47915440797805786
    2. '()' → logprob: -0.9791544079780579
    3. ''' → logprob: -5.604154586791992
    4. '(' → logprob: -7.479154586791992
    5. '("' → logprob: -7.979154586791992
    6. '(max' → logprob: -8.229154586791992
    7. '()
' → logprob: -9.604154586791992
    8. 'max' → logprob: -10.604154586791992
    9. '();' → logprob: -11.104154586791992
    10. '"' → logprob: -11.104154586791992

Token 1918: ' ',' (ID: 14089)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6437454223632812
    2. '()' → logprob: -1.3937454223632812
    3. ''' → logprob: -2.0187454223632812
    4. '('' → logprob: -2.5187454223632812
    5. ')' → logprob: -5.393745422363281
    6. '(None' → logprob: -6.518745422363281
    7. '(max' → logprob: -6.643745422363281
    8. '')' → logprob: -6.643745422363281
    9. ')
' → logprob: -7.393745422363281
    10. 'None' → logprob: -7.393745422363281

Token 1919: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'max' → logprob: -15.75
    3. ')' → logprob: -16.125
    4. ' ' → logprob: -18.375
    5. '')' → logprob: -19.0
    6. '```' → logprob: -20.25
    7. '
' → logprob: -21.0
    8. '   ' → logprob: -22.25
    9. ')
' → logprob: -22.625
    10. '")' → logprob: -23.5

Token 1920: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. 'max' → logprob: -14.000000953674316
    3. ')' → logprob: -18.875
    4. ' ' → logprob: -19.0
    5. '
' → logprob: -21.125
    6. '')' → logprob: -21.625
    7. '```' → logprob: -22.375
    8. '   ' → logprob: -23.75
    9. '2' → logprob: -24.125
    10. '")' → logprob: -24.5

Token 1921: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20376217365264893
    2. ')
' → logprob: -2.3287620544433594
    3. ')' → logprob: -2.4537620544433594
    4. ',' → logprob: -7.578762054443359
    5. '
' → logprob: -8.57876205444336
    6. '):
' → logprob: -9.95376205444336
    7. '   ' → logprob: -10.07876205444336
    8. '        
' → logprob: -10.07876205444336
    9. '           ' → logprob: -10.95376205444336
    10. '      ' → logprob: -11.32876205444336

Token 1922: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.981667537620524e-06
    2. '           ' → logprob: -14.625001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '```' → logprob: -15.250001907348633
    5. '	' → logprob: -15.625001907348633
    6. '      ' → logprob: -15.750001907348633
    7. '<|end|>' → logprob: -15.875001907348633
    8. 'index' → logprob: -15.875001907348633
    9. '	   ' → logprob: -16.250001907348633
    10. ',' → logprob: -16.500001907348633

Token 1923: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.06606242805719376
    2. 'idx' (adapté à ' idx') → logprob: -2.8160624504089355
    3. 'query' → logprob: -5.8160624504089355
    4. 'try' → logprob: -7.0660624504089355
    5. '       ' → logprob: -8.316061973571777
    6. ' index' → logprob: -12.691061973571777
    7. ' idx' → logprob: -13.066061973571777
    8. 'i' → logprob: -13.316061973571777
    9. 'q' → logprob: -13.566061973571777
    10. 'pos' → logprob: -14.816061973571777

Token 1924: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6329737305641174
    2. '=' → logprob: -0.7579737305641174
    3. '=int' → logprob: -8.382973670959473
    4. 'ex' → logprob: -10.382973670959473
    5. '_' → logprob: -10.757973670959473
    6. ',' → logprob: -10.757973670959473
    7. '       ' → logprob: -11.632973670959473
    8. '   ' → logprob: -11.757973670959473
    9. ')' → logprob: -11.757973670959473
    10. 'x' → logprob: -11.882973670959473

Token 1925: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -17.5
    3. '[int' → logprob: -22.625
    4. '
' → logprob: -23.125
    5. '(int' → logprob: -23.625
    6. '=int' → logprob: -24.75
    7. '   ' → logprob: -25.25
    8. '<int' → logprob: -25.5
    9. '	int' → logprob: -25.875
    10. '       ' → logprob: -26.5

Token 1926: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -2.8325677703833207e-05
    2. 'idx' → logprob: -10.500028610229492
    3. '(' → logprob: -14.500028610229492
    4. '[idx' → logprob: -16.250028610229492
    5. '(
' → logprob: -17.125028610229492
    6. ' (' → logprob: -18.625028610229492
    7. ' idx' → logprob: -18.750028610229492
    8. '(index' → logprob: -18.875028610229492
    9. '	idx' → logprob: -19.250028610229492
    10. '   ' → logprob: -19.375028610229492

Token 1927: '_str' (ID: 6182)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.00029267906211316586
    2. 'idx' → logprob: -8.500292778015137
    3. '[idx' → logprob: -10.250292778015137
    4. ')' → logprob: -10.625292778015137
    5. ' (' → logprob: -11.500292778015137
    6. '(' → logprob: -11.875292778015137
    7. '(
' → logprob: -12.000292778015137
    8. ' idx' → logprob: -13.375292778015137
    9. '   ' → logprob: -13.625292778015137
    10. '	idx' → logprob: -14.375292778015137

Token 1928: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029449475929141045
    2. '-' → logprob: -4.779449462890625
    3. '       ' → logprob: -5.029449462890625
    4. ' -' → logprob: -5.404449462890625
    5. ' )' → logprob: -5.529449462890625
    6. ')
' → logprob: -5.779449462890625
    7. '[' → logprob: -6.654449462890625
    8. '+' → logprob: -7.654449462890625
    9. ' +' → logprob: -8.904449462890625
    10. ')-' → logprob: -9.154449462890625

Token 1929: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001830942346714437
    2. '   ' → logprob: -6.5018310546875
    3. 'gen' → logprob: -8.8768310546875
    4. '
' → logprob: -9.6268310546875
    5. 'query' → logprob: -9.6268310546875
    6. 'result' → logprob: -10.5018310546875
    7. '	gen' → logprob: -12.1268310546875
    8. '        
' → logprob: -12.3768310546875
    9. '```' → logprob: -12.5018310546875
    10. '           ' → logprob: -12.7518310546875

Token 1930: ' gql' (ID: 105880)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.04448893293738365
    2. '       ' → logprob: -3.5444889068603516
    3. 'g' → logprob: -5.169488906860352
    4. 'gen' → logprob: -5.419488906860352
    5. 'q' → logprob: -5.419488906860352
    6. 'qry' → logprob: -10.419488906860352
    7. ' query' → logprob: -11.294488906860352
    8. '   ' → logprob: -11.419488906860352
    9. ' genome' → logprob: -11.669488906860352
    10. '
' → logprob: -12.044488906860352

Token 1931: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.09937432408332825
    2. ' =' → logprob: -2.724374294281006
    3. 'ery' → logprob: -4.224374294281006
    4. 'uer' → logprob: -5.224374294281006
    5. '   ' → logprob: -5.349374294281006
    6. '=' → logprob: -6.849374294281006
    7. 'query' → logprob: -7.099374294281006
    8. 'ue' → logprob: -7.224374294281006
    9. '       ' → logprob: -8.349374771118164
    10. 'y' → logprob: -8.724374771118164

Token 1932: ' Genome' (ID: 168601)
  Prédit: 'Genome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Genome' → logprob: -0.001170225441455841
    2. ' Genome' → logprob: -6.7511701583862305
    3. 'Gen' → logprob: -17.376171112060547
    4. 'Gene' → logprob: -18.751171112060547
    5. 'Genre' → logprob: -18.751171112060547
    6. 'Galaxy' → logprob: -19.251171112060547
    7. ' genome' → logprob: -19.751171112060547
    8. 'Geometry' → logprob: -20.001171112060547
    9. 'Genesis' → logprob: -21.251171112060547
    10. '
' → logprob: -21.501171112060547

Token 1933: 'Query' (ID: 3962)
  Prédit: 'Query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -2.463036435074173e-05
    2. 'Q' → logprob: -11.000024795532227
    3. 'query' → logprob: -12.875024795532227
    4. 'q' → logprob: -13.875024795532227
    5. '.Query' → logprob: -14.375024795532227
    6. '
' → logprob: -15.000024795532227
    7. '	Query' → logprob: -15.125024795532227
    8. '(Query' → logprob: -15.250024795532227
    9. 'Quer' → logprob: -15.375024795532227
    10. '_query' → logprob: -15.375024795532227

Token 1934: '(gen' (ID: 80178)
  Prédit: '(gen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gen' → logprob: -6.988221684878226e-06
    2. 'gen' → logprob: -12.750006675720215
    3. '(' → logprob: -13.125006675720215
    4. ' genome' → logprob: -14.500006675720215
    5. '(g' → logprob: -14.750006675720215
    6. '(
' → logprob: -15.250006675720215
    7. '       ' → logprob: -15.750006675720215
    8. '   ' → logprob: -15.875006675720215
    9. '	gen' → logprob: -16.00000762939453
    10. '(game' → logprob: -16.12500762939453

Token 1935: 'ome' (ID: 747)
  Prédit: 'ome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ome' → logprob: -0.016189560294151306
    2. '_str' → logprob: -4.5161895751953125
    3. 'e' → logprob: -5.7661895751953125
    4. 'es' → logprob: -7.6411895751953125
    5. 'str' → logprob: -7.8911895751953125
    6. '       ' → logprob: -8.766189575195312
    7. '   ' → logprob: -8.766189575195312
    8. ')' → logprob: -9.016189575195312
    9. '```' → logprob: -9.641189575195312
    10. 'u' → logprob: -9.766189575195312

Token 1936: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.002818312495946884
    2. ')' → logprob: -6.5028181076049805
    3. 'str' → logprob: -7.2528181076049805
    4. 'Str' → logprob: -7.7528181076049805
    5. '_gen' → logprob: -10.50281810760498
    6. '   ' → logprob: -10.75281810760498
    7. 'gen' → logprob: -11.00281810760498
    8. '_string' → logprob: -11.37781810760498
    9. 'g' → logprob: -11.37781810760498
    10. '_s' → logprob: -11.50281810760498

Token 1937: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.40881821513175964
    2. ')' → logprob: -1.408818244934082
    3. '       ' → logprob: -2.408818244934082
    4. '<|end|>' → logprob: -7.658818244934082
    5. '<|end|>' → logprob: -8.533818244934082
    6. ')
' → logprob: -8.783818244934082
    7. '   ' → logprob: -9.658818244934082
    8. '.query' → logprob: -9.783818244934082
    9. ' )
' → logprob: -9.908818244934082
    10. ',' → logprob: -10.658818244934082

Token 1938: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06308449059724808
    2. 'print' → logprob: -2.813084602355957
    3. 'result' → logprob: -7.063084602355957
    4. '   ' → logprob: -8.563084602355957
    5. ' print' → logprob: -10.688084602355957
    6. '```' → logprob: -11.063084602355957
    7. 'output' → logprob: -11.688084602355957
    8. 'response' → logprob: -11.813084602355957
    9. 'answer' → logprob: -12.563084602355957
    10. '
' → logprob: -12.688084602355957

Token 1939: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007622223347425461
    2. 'result' → logprob: -8.000761985778809
    3. 'char' → logprob: -8.875761985778809
    4. 'c' → logprob: -9.375761985778809
    5. '       ' → logprob: -9.625761985778809
    6. 'res' → logprob: -9.625761985778809
    7. 'ch' → logprob: -10.250761985778809
    8. 'output' → logprob: -11.125761985778809
    9. ' print' → logprob: -11.750761985778809
    10. 'answer' → logprob: -12.125761985778809

Token 1940: '(g' (ID: 7791)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.16057038307189941
    2. '(g' → logprob: -1.9105703830718994
    3. ' gql' → logprob: -8.16057014465332
    4. '(' → logprob: -10.66057014465332
    5. 'q' → logprob: -10.78557014465332
    6. '(q' → logprob: -12.41057014465332
    7. ' g' → logprob: -12.78557014465332
    8. '=g' → logprob: -13.16057014465332
    9. '[g' → logprob: -13.28557014465332
    10. '	g' → logprob: -13.53557014465332

Token 1941: 'ql' (ID: 2535)
  Prédit: 'ql'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ql' → logprob: -0.00201595202088356
    2. 'q' → logprob: -6.252016067504883
    3. 'en' → logprob: -10.877016067504883
    4. 'l' → logprob: -11.127016067504883
    5. 'ene' → logprob: -11.252016067504883
    6. '_q' → logprob: -11.877016067504883
    7. 'query' → logprob: -12.002016067504883
    8. 'QL' → logprob: -12.127016067504883
    9. 'Ql' → logprob: -12.377016067504883
    10. '_query' → logprob: -12.502016067504883

Token 1942: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.00022713904036208987
    2. '.' → logprob: -9.375226974487305
    3. ' .' → logprob: -9.750226974487305
    4. 'query' → logprob: -9.750226974487305
    5. ').' → logprob: -10.750226974487305
    6. ' query' → logprob: -13.500226974487305
    7. ')' → logprob: -14.000226974487305
    8. '   ' → logprob: -14.125226974487305
    9. '	query' → logprob: -14.875226974487305
    10. '       ' → logprob: -15.500226974487305

Token 1943: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0016643505077809095
    2. '(' → logprob: -6.626664161682129
    3. '(
' → logprob: -8.126664161682129
    4. '(index' → logprob: -10.751664161682129
    5. 'idx' → logprob: -11.376664161682129
    6. ' (' → logprob: -12.501664161682129
    7. '[idx' → logprob: -13.376664161682129
    8. '(i' → logprob: -13.876664161682129
    9. '   ' → logprob: -14.001664161682129
    10. ')' → logprob: -14.001664161682129

Token 1944: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007505440153181553
    2. '))
' → logprob: -7.500750541687012
    3. ')' → logprob: -8.750750541687012
    4. '+' → logprob: -11.500750541687012
    5. ' ))' → logprob: -11.500750541687012
    6. '   ' → logprob: -12.250750541687012
    7. '       ' → logprob: -12.625750541687012
    8. ')))' → logprob: -12.875750541687012
    9. '-' → logprob: -13.125750541687012
    10. '0' → logprob: -13.500750541687012

Token 1945: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.3822154111694545e-05
    2. '```' → logprob: -10.750043869018555
    3. '#' → logprob: -11.625043869018555
    4. ' if' → logprob: -11.875043869018555
    5. '<|end|>' → logprob: -12.250043869018555
    6. '__' → logprob: -14.375043869018555
    7. '#if' → logprob: -14.875043869018555
    8. '
' → logprob: -15.125043869018555
    9. '@if' → logprob: -16.125043869018555
    10. '	if' → logprob: -17.000043869018555

Token 1946: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009633887093514204
    2. ' __' → logprob: -7.00096321105957
    3. 'name' → logprob: -9.87596321105957
    4. 'True' → logprob: -15.62596321105957
    5. '___' → logprob: -16.62596321105957
    6. ''' → logprob: -16.87596321105957
    7. '_name' → logprob: -17.00096321105957
    8. '.__' → logprob: -17.12596321105957
    9. '"' → logprob: -17.50096321105957
    10. '____' → logprob: -17.75096321105957

Token 1947: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03416679427027702
    2. '==' → logprob: -3.5341668128967285
    3. 'name' → logprob: -6.2841668128967285
    4. ' ==' → logprob: -6.4091668128967285
    5. '=="' → logprob: -7.5341668128967285
    6. '```' → logprob: -9.03416633605957
    7. '__.__' → logprob: -9.40916633605957
    8. '=='' → logprob: -9.65916633605957
    9. 'if' → logprob: -10.90916633605957
    10. '==
' → logprob: -10.90916633605957

Token 1948: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.176947600673884e-05
    2. '==' → logprob: -11.000021934509277
    3. '__.__' → logprob: -12.750021934509277
    4. ' ==' → logprob: -14.250021934509277
    5. '=="' → logprob: -14.750021934509277
    6. '__
' → logprob: -15.000021934509277
    7. 'name' → logprob: -15.125021934509277
    8. '___' → logprob: -15.625021934509277
    9. '____' → logprob: -15.750021934509277
    10. '__["' → logprob: -16.62502098083496

Token 1949: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.071090467274189
    2. '__' → logprob: -3.1960904598236084
    3. ' ==' → logprob: -4.3210906982421875
    4. '=="' → logprob: -4.4460906982421875
    5. '=='' → logprob: -5.9460906982421875
    6. '==
' → logprob: -9.821090698242188
    7. '```' → logprob: -11.946090698242188
    8. '===' → logprob: -12.446090698242188
    9. '=' → logprob: -12.696090698242188
    10. '[' → logprob: -13.446090698242188

Token 1950: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04859157279133797
    2. ''' → logprob: -3.0485916137695312
    3. '__' → logprob: -12.798591613769531
    4. ' "__' → logprob: -13.798591613769531
    5. ''"' → logprob: -16.04859161376953
    6. '"name' → logprob: -16.17359161376953
    7. '   ' → logprob: -16.67359161376953
    8. '"user' → logprob: -17.17359161376953
    9. ' '__' → logprob: -17.54859161376953
    10. '"'' → logprob: -17.67359161376953

Token 1951: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13246946036815643
    2. 'main' → logprob: -2.382469415664673
    3. ''' → logprob: -3.882469415664673
    4. '"' → logprob: -4.507469654083252
    5. 'name' → logprob: -9.757469177246094
    6. '__":
' → logprob: -11.132469177246094
    7. '_main' → logprob: -11.382469177246094
    8. '___' → logprob: -11.882469177246094
    9. '   ' → logprob: -11.882469177246094
    10. ''name' → logprob: -12.507469177246094

Token 1952: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16141338646411896
    2. '__' → logprob: -1.9114134311676025
    3. '__':
' → logprob: -6.786413192749023
    4. '__
' → logprob: -10.786413192749023
    5. '__["' → logprob: -11.036413192749023
    6. '__.__' → logprob: -12.161413192749023
    7. '__
' → logprob: -12.411413192749023
    8. '__.' → logprob: -12.786413192749023
    9. '=="' → logprob: -13.161413192749023
    10. '==' → logprob: -13.536413192749023

Token 1953: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04801750183105469
    2. '   ' → logprob: -3.1730175018310547
    3. '	main' → logprob: -5.423017501831055
    4. ' main' → logprob: -7.923017501831055
    5. '_main' → logprob: -8.673017501831055
    6. '__' → logprob: -10.173017501831055
    7. 'import' → logprob: -12.173017501831055
    8. '(main' → logprob: -12.423017501831055
    9. '    
' → logprob: -12.798017501831055
    10. '```' → logprob: -13.048017501831055

Token 1954: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.875
    3. '	main' → logprob: -16.0
    4. 'import' → logprob: -16.875
    5. '   ' → logprob: -17.875
    6. '_main' → logprob: -19.875
    7. '(main' → logprob: -20.625
    8. '
' → logprob: -22.5
    9. '.main' → logprob: -22.75
    10. 'm' → logprob: -23.25

Token 1955: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1953
Tokens correctement prédits (1ère position, stricte): 711
Tokens correctement prédits (1ère position, avec adaptation): 820
Tokens correctement prédits (top 10): 1609
Précision stricte (1ère position): 36.41%
Précision adaptée (1ère position): 41.99%
Précision (top 10): 82.39%
================================================================================
