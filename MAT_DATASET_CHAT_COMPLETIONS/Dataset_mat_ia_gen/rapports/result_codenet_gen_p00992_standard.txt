================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
h=[int(input()) for _ in range(n)]
t=sum(h)
r=int((t/2)**0.5)
while (r+1)*(r+1)+r*r<=t:
    r+=1
while r*r+(r-1)*(r-1)>t:
    r-=1
print(r*r+(r+1)*(r+1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17343895137310028
    2. '(' → logprob: -1.9234389066696167
    3. '())' → logprob: -5.298439025878906
    4. '```' → logprob: -5.923439025878906
    5. '()' → logprob: -6.048439025878906
    6. '<|end|>' → logprob: -7.173439025878906
    7. '`)' → logprob: -8.048439025878906
    8. '")' → logprob: -8.048439025878906
    9. '(
' → logprob: -8.298439025878906
    10. '')' → logprob: -8.298439025878906

Token 4: 'h' (ID: 71)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3065171241760254
    2. 'if' → logprob: -1.9315171241760254
    3. 'i' → logprob: -2.1815171241760254
    4. '+' → logprob: -2.1815171241760254
    5. ' ' → logprob: -2.6815171241760254
    6. 'for' → logprob: -2.8065171241760254
    7. '*' → logprob: -3.0565171241760254
    8. '#' → logprob: -3.1815171241760254
    9. 's' → logprob: -3.3065171241760254
    10. ''' → logprob: -3.6815171241760254

Token 5: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06941330432891846
    2. '[i' → logprob: -3.819413185119629
    3. 'a' → logprob: -4.444413185119629
    4. '=' → logprob: -4.819413185119629
    5. ')' → logprob: -4.944413185119629
    6. 'e' → logprob: -5.569413185119629
    7. 'u' → logprob: -5.694413185119629
    8. 'i' → logprob: -5.819413185119629
    9. ' =' → logprob: -6.194413185119629
    10. 't' → logprob: -6.694413185119629

Token 6: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38840898871421814
    2. '0' → logprob: -1.1384090185165405
    3. 'i' → logprob: -6.76340913772583
    4. 'list' → logprob: -9.388408660888672
    5. 'float' → logprob: -9.638408660888672
    6. '(int' → logprob: -9.763408660888672
    7. ' int' → logprob: -9.763408660888672
    8. ']int' → logprob: -10.763408660888672
    9. ']' → logprob: -10.888408660888672
    10. 'n' → logprob: -11.013408660888672

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07218903303146362
    2. '(x' → logprob: -3.3221890926361084
    3. '(input' → logprob: -3.5721890926361084
    4. '(i' → logprob: -5.322188854217529
    5. ']' → logprob: -8.072189331054688
    6. '(a' → logprob: -8.947189331054688
    7. '(
' → logprob: -10.072189331054688
    8. '(

' → logprob: -11.072189331054688
    9. '()]' → logprob: -11.072189331054688
    10. '(n' → logprob: -11.197189331054688

Token 8: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005947356694377959
    2. '()' → logprob: -7.875594615936279
    3. '()))' → logprob: -9.125595092773438
    4. '()]' → logprob: -9.500595092773438
    5. ' ())' → logprob: -11.250595092773438
    6. ')' → logprob: -11.625595092773438
    7. '())
' → logprob: -13.125595092773438
    8. '(' → logprob: -13.250595092773438
    9. '());' → logprob: -13.750595092773438
    10. '().' → logprob: -14.125595092773438

Token 9: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36909687519073486
    2. ')]' → logprob: -1.2440968751907349
    3. ']' → logprob: -3.9940967559814453
    4. '])' → logprob: -6.869096755981445
    5. 'for' → logprob: -8.619096755981445
    6. ')])' → logprob: -8.619096755981445
    7. '[i' → logprob: -8.619096755981445
    8. '[' → logprob: -9.244096755981445
    9. '])]' → logprob: -9.494096755981445
    10. ' for' → logprob: -9.869096755981445

Token 10: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00019126241386402398
    2. ' i' → logprob: -9.500191688537598
    3. ' ' → logprob: -9.875191688537598
    4. ' _' → logprob: -10.250191688537598
    5. '_' → logprob: -11.500191688537598
    6. '_range' → logprob: -11.875191688537598
    7. '(range' → logprob: -12.125191688537598
    8. 'range' → logprob: -12.500191688537598
    9. ' in' → logprob: -13.375191688537598
    10. '	range' → logprob: -14.125191688537598

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0038792924024164677
    2. 'in' → logprob: -6.378879070281982
    3. 'range' → logprob: -6.628879070281982
    4. ' range' → logprob: -7.128879070281982
    5. ' ' → logprob: -10.12887954711914
    6. '(range' → logprob: -13.12887954711914
    7. ' i' → logprob: -13.25387954711914
    8. '```' → logprob: -13.62887954711914
    9. ' for' → logprob: -13.87887954711914
    10. '  ' → logprob: -14.00387954711914

Token 12: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009126556105911732
    2. ' range' → logprob: -7.000912666320801
    3. 'r' → logprob: -15.2509126663208
    4. '[' → logprob: -15.6259126663208
    5. 'ran' → logprob: -15.6259126663208
    6. '(range' → logprob: -16.000911712646484
    7. ' ' → logprob: -16.125911712646484
    8. '	range' → logprob: -16.125911712646484
    9. 'rang' → logprob: -16.875911712646484
    10. '   ' → logprob: -17.000911712646484

Token 13: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007110013975761831
    2. '(' → logprob: -7.250710964202881
    3. 'n' → logprob: -14.125711441040039
    4. ' (' → logprob: -15.875711441040039
    5. '(len' → logprob: -16.25071144104004
    6. '(
' → logprob: -17.37571144104004
    7. ')n' → logprob: -18.00071144104004
    8. ' n' → logprob: -18.12571144104004
    9. '((' → logprob: -19.12571144104004
    10. ')' → logprob: -19.50071144104004

Token 14: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001769616355886683
    2. ')' → logprob: -8.875177383422852
    3. ')])' → logprob: -11.250177383422852
    4. ']' → logprob: -11.625177383422852
    5. '])]' → logprob: -11.875177383422852
    6. '')]' → logprob: -12.625177383422852
    7. '])' → logprob: -13.625177383422852
    8. ')]
' → logprob: -14.375177383422852
    9. ' )' → logprob: -14.375177383422852
    10. '))' → logprob: -14.500177383422852

Token 15: 't' (ID: 83)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8827974200248718
    2. 'dp' → logprob: -2.0077974796295166
    3. 'max' → logprob: -2.2577974796295166
    4. 'm' → logprob: -2.3827974796295166
    5. 's' → logprob: -2.8827974796295166
    6. 'h' → logprob: -3.0077974796295166
    7. 'd' → logprob: -3.2577974796295166
    8. 'a' → logprob: -3.5077974796295166
    9. 'count' → logprob: -4.1327972412109375
    10. 'cnt' → logprob: -4.3827972412109375

Token 16: '=sum' (ID: 174693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2217146158218384
    2. 'o' → logprob: -1.3467146158218384
    3. 'r' → logprob: -1.7217146158218384
    4. '[' → logprob: -2.471714496612549
    5. ' =' → logprob: -3.221714496612549
    6. '=[' → logprob: -3.971714496612549
    7. '=[]' → logprob: -3.971714496612549
    8. '[i' → logprob: -4.596714496612549
    9. '=o' → logprob: -4.596714496612549
    10. '[o' → logprob: -4.721714496612549

Token 17: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.043320585042238235
    2. '(' → logprob: -3.168320655822754
    3. '(t' → logprob: -9.168320655822754
    4. 'h' → logprob: -9.793320655822754
    5. '(
' → logprob: -10.043320655822754
    6. '((' → logprob: -10.043320655822754
    7. '(ht' → logprob: -11.293320655822754
    8. '(a' → logprob: -11.793320655822754
    9. '([' → logprob: -12.043320655822754
    10. '(s' → logprob: -12.043320655822754

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000597116129938513
    2. '[' → logprob: -8.12559700012207
    3. ' )' → logprob: -8.87559700012207
    4. '[h' → logprob: -10.75059700012207
    5. '-)' → logprob: -11.00059700012207
    6. '))' → logprob: -11.00059700012207
    7. '`)' → logprob: -11.12559700012207
    8. ')-' → logprob: -11.50059700012207
    9. '-' → logprob: -11.62559700012207
    10. '')' → logprob: -11.87559700012207

Token 19: 'r' (ID: 81)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6460790634155273
    2. 'if' → logprob: -2.2710790634155273
    3. '//' → logprob: -2.3960790634155273
    4. '%' → logprob: -3.0210790634155273
    5. 'i' → logprob: -3.3960790634155273
    6. '>' → logprob: -3.6460790634155273
    7. '+' → logprob: -3.7710790634155273
    8. ' if' → logprob: -3.8960790634155273
    9. '=' → logprob: -4.021079063415527
    10. '-' → logprob: -4.021079063415527

Token 20: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18960098922252655
    2. ' =' → logprob: -1.814600944519043
    3. '=[]' → logprob: -5.564600944519043
    4. '=t' → logprob: -5.689600944519043
    5. '=int' → logprob: -7.189600944519043
    6. '=s' → logprob: -8.064600944519043
    7. '=r' → logprob: -8.189600944519043
    8. '={}' → logprob: -8.189600944519043
    9. '=len' → logprob: -9.189600944519043
    10. 'es' → logprob: -9.439600944519043

Token 21: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2403685748577118
    2. '(t' → logprob: -1.6153686046600342
    3. '((' → logprob: -4.990368366241455
    4. '('' → logprob: -5.490368366241455
    5. '()' → logprob: -6.990368366241455
    6. '(input' → logprob: -6.990368366241455
    7. '(s' → logprob: -7.365368366241455
    8. ' (' → logprob: -8.240368843078613
    9. '(math' → logprob: -8.615368843078613
    10. '("' → logprob: -8.740368843078613

Token 22: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.020187029615044594
    2. '(t' → logprob: -4.395186901092529
    3. ' t' → logprob: -5.270186901092529
    4. '(' → logprob: -6.270186901092529
    5. ' (' → logprob: -8.520187377929688
    6. '((' → logprob: -9.020187377929688
    7. '2' → logprob: -9.520187377929688
    8. ' ' → logprob: -9.895187377929688
    9. '3' → logprob: -10.270187377929688
    10. ')t' → logprob: -10.520187377929688

Token 23: '/' (ID: 14)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7988520860671997
    2. '/n' → logprob: -1.5488520860671997
    3. '/' → logprob: -1.6738520860671997
    4. '/t' → logprob: -2.92385196685791
    5. ')**' → logprob: -3.04885196685791
    6. ' /' → logprob: -3.79885196685791
    7. ' **' → logprob: -5.67385196685791
    8. '/s' → logprob: -5.92385196685791
    9. 'len' → logprob: -5.92385196685791
    10. ')' → logprob: -5.92385196685791

Token 24: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06982104480266571
    2. '2' → logprob: -2.8198211193084717
    3. ' n' → logprob: -6.069820880889893
    4. '10' → logprob: -6.819820880889893
    5. '3' → logprob: -7.194820880889893
    6. ' ' → logprob: -7.569820880889893
    7. '(' → logprob: -7.569820880889893
    8. '(n' → logprob: -7.569820880889893
    9. '4' → logprob: -7.694820880889893
    10. '5' → logprob: -7.944820880889893

Token 25: ')**' (ID: 80066)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.21715828776359558
    2. ')' → logprob: -1.842158317565918
    3. '))' → logprob: -3.342158317565918
    4. '+' → logprob: -7.092158317565918
    5. '))+' → logprob: -8.092158317565918
    6. ')+(' → logprob: -8.967158317565918
    7. ')-' → logprob: -10.342158317565918
    8. '+)' → logprob: -11.342158317565918
    9. ' )' → logprob: -11.592158317565918
    10. ')))' → logprob: -11.842158317565918

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007577870506793261
    2. '.' → logprob: -5.007577896118164
    3. ' ' → logprob: -7.132577896118164
    4. '(' → logprob: -10.007577896118164
    5. ' .' → logprob: -12.132577896118164
    6. '   ' → logprob: -12.132577896118164
    7. '  ' → logprob: -12.507577896118164
    8. '    ' → logprob: -14.382577896118164
    9. ' ' → logprob: -14.382577896118164
    10. '1' → logprob: -14.507577896118164

Token 27: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.281485836254433e-05
    2. '0' → logprob: -9.375092506408691
    3. '5' → logprob: -12.625092506408691
    4. ' .' → logprob: -12.875092506408691
    5. ' ' → logprob: -14.625092506408691
    6. '1' → logprob: -14.875092506408691
    7. '3' → logprob: -15.000092506408691
    8. '(' → logprob: -15.375092506408691
    9. '6' → logprob: -15.750092506408691
    10. '4' → logprob: -15.875092506408691

Token 28: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -15.125000953674316
    3. '```' → logprob: -15.375000953674316
    4. '``' → logprob: -16.125001907348633
    5. '**' → logprob: -16.375001907348633
    6. '3' → logprob: -16.375001907348633
    7. '4' → logprob: -16.375001907348633
    8. '`' → logprob: -17.125001907348633
    9. '63' → logprob: -17.500001907348633
    10. 'a' → logprob: -17.625001907348633

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000966487976256758
    2. '+' → logprob: -7.750966548919678
    3. ')+' → logprob: -8.50096607208252
    4. ' )' → logprob: -9.37596607208252
    5. '*' → logprob: -9.62596607208252
    6. ')
' → logprob: -9.75096607208252
    7. '))' → logprob: -9.87596607208252
    8. ')*' → logprob: -10.75096607208252
    9. '+)' → logprob: -12.12596607208252
    10. '')' → logprob: -12.37596607208252

Token 30: 'while' (ID: 7032)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4774819314479828
    2. '+' → logprob: -1.1024819612503052
    3. '*' → logprob: -4.477481842041016
    4. '+
' → logprob: -4.977481842041016
    5. ':
' → logprob: -5.102481842041016
    6. ')' → logprob: -5.477481842041016
    7. '
' → logprob: -5.727481842041016
    8. ' ' → logprob: -5.727481842041016
    9. 'r' → logprob: -5.977481842041016
    10. '-' → logprob: -5.977481842041016

Token 31: ' (' (ID: 350)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.7441786527633667
    2. ' h' → logprob: -1.6191786527633667
    3. 'r' → logprob: -1.7441786527633667
    4. ' t' → logprob: -2.7441787719726562
    5. 'h' → logprob: -2.8691787719726562
    6. 't' → logprob: -4.494178771972656
    7. ' (' → logprob: -5.369178771972656
    8. '(r' → logprob: -5.494178771972656
    9. '(h' → logprob: -5.744178771972656
    10. ' True' → logprob: -5.869178771972656

Token 32: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.24587880074977875
    2. ' r' → logprob: -1.62087881565094
    3. '(r' → logprob: -4.24587869644165
    4. ' (' → logprob: -5.62087869644165
    5. ')' → logprob: -6.74587869644165
    6. ' ' → logprob: -8.245879173278809
    7. '1' → logprob: -8.620879173278809
    8. 't' → logprob: -8.620879173278809
    9. ' t' → logprob: -8.870879173278809
    10. '(' → logprob: -9.495879173278809

Token 33: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15545111894607544
    2. '*r' → logprob: -2.2804510593414307
    3. '*' → logprob: -4.03045129776001
    4. '**' → logprob: -4.28045129776001
    5. '+r' → logprob: -6.03045129776001
    6. '*(' → logprob: -6.03045129776001
    7. ' +' → logprob: -6.28045129776001
    8. ')**' → logprob: -6.40545129776001
    9. '(r' → logprob: -7.65545129776001
    10. ')' → logprob: -7.78045129776001

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009833892108872533
    2. ' ' → logprob: -7.000983238220215
    3. ')' → logprob: -10.250983238220215
    4. 'r' → logprob: -11.375983238220215
    5. '2' → logprob: -12.500983238220215
    6. '   ' → logprob: -12.813483238220215
    7. '+' → logprob: -12.813483238220215
    8. '  ' → logprob: -12.875983238220215
    9. ')^' → logprob: -13.313483238220215
    10. ')**' → logprob: -13.438483238220215

Token 35: ')*(' (ID: 44406)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.015612322837114334
    2. ')*(' → logprob: -4.2656121253967285
    3. ')' → logprob: -7.1406121253967285
    4. ')*' → logprob: -7.5156121253967285
    5. ' )' → logprob: -9.265612602233887
    6. '*(' → logprob: -12.140612602233887
    7. '**' → logprob: -12.265612602233887
    8. ')<=' → logprob: -13.640612602233887
    9. ' ' → logprob: -13.765612602233887
    10. '*r' → logprob: -13.890612602233887

Token 36: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003290288441348821
    2. ' r' → logprob: -8.25032901763916
    3. '(r' → logprob: -9.75032901763916
    4. '	r' → logprob: -12.62532901763916
    5. '2' → logprob: -13.25032901763916
    6. ' ' → logprob: -14.00032901763916
    7. ')' → logprob: -14.12532901763916
    8. ' (' → logprob: -14.62532901763916
    9. '<|end|>' → logprob: -14.87532901763916
    10. '<|end|>' → logprob: -14.87532901763916

Token 37: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000491672137286514
    2. ')' → logprob: -8.375492095947266
    3. ' +' → logprob: -8.750492095947266
    4. ')+' → logprob: -9.625492095947266
    5. '+)' → logprob: -11.625492095947266
    6. ')<=' → logprob: -11.875492095947266
    7. '-' → logprob: -12.500492095947266
    8. '+r' → logprob: -12.625492095947266
    9. '<|end|>' → logprob: -13.000492095947266
    10. '```' → logprob: -13.125492095947266

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005516022793017328
    2. '2' → logprob: -7.750551700592041
    3. ')' → logprob: -10.000551223754883
    4. ' ' → logprob: -10.250551223754883
    5. '```' → logprob: -11.375551223754883
    6. '0' → logprob: -11.625551223754883
    7. '`' → logprob: -12.375551223754883
    8. '   ' → logprob: -12.375551223754883
    9. '  ' → logprob: -12.750551223754883
    10. '-' → logprob: -13.250551223754883

Token 39: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4567596912384033
    2. ')<=' → logprob: -1.0817596912384033
    3. '<=' → logprob: -3.8317596912384033
    4. ' <=' → logprob: -5.956759452819824
    5. ' )' → logprob: -6.456759452819824
    6. ')>' → logprob: -6.831759452819824
    7. ')<' → logprob: -7.706759452819824
    8. '>' → logprob: -8.956759452819824
    9. ']<=' → logprob: -9.831759452819824
    10. ')t' → logprob: -10.706759452819824

Token 40: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09177280217409134
    2. ' r' → logprob: -2.4667727947235107
    3. '(r' → logprob: -6.46677303314209
    4. ' (' → logprob: -7.34177303314209
    5. '<|end|>' → logprob: -7.71677303314209
    6. ' ' → logprob: -9.59177303314209
    7. '1' → logprob: -10.71677303314209
    8. '<|end|>' → logprob: -10.84177303314209
    9. '	r' → logprob: -10.96677303314209
    10. '0' → logprob: -11.21677303314209

Token 41: '*r' (ID: 92096)
  Prédit: '*r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -0.00474482262507081
    2. '*' → logprob: -5.379745006561279
    3. '*(' → logprob: -9.504744529724121
    4. '```' → logprob: -10.504744529724121
    5. ' *' → logprob: -11.754744529724121
    6. 'r' → logprob: -12.254744529724121
    7. '**' → logprob: -13.379744529724121
    8. '>' → logprob: -13.504744529724121
    9. ' ' → logprob: -13.504744529724121
    10. '()*' → logprob: -14.129744529724121

Token 42: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.1165130138397217
    2. ' <' → logprob: -1.2415130138397217
    3. ' <=' → logprob: -1.2415130138397217
    4. '<=' → logprob: -2.3665130138397217
    5. ' >' → logprob: -7.991513252258301
    6. '>' → logprob: -8.7415132522583
    7. ' ' → logprob: -9.1165132522583
    8. '<n' → logprob: -9.1165132522583
    9. '<t' → logprob: -9.6165132522583
    10. '<len' → logprob: -10.9915132522583

Token 43: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07889209687709808
    2. ' t' → logprob: -2.5788919925689697
    3. '	t' → logprob: -13.70389175415039
    4. ' ' → logprob: -14.57889175415039
    5. '(t' → logprob: -14.82889175415039
    6. '`t' → logprob: -15.45389175415039
    7. '<t' → logprob: -16.95389175415039
    8. 'n' → logprob: -17.32889175415039
    9. '  ' → logprob: -17.32889175415039
    10. '   ' → logprob: -17.82889175415039

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006511324550956488
    2. ' :' → logprob: -5.381511211395264
    3. ':
' → logprob: -6.381511211395264
    4. ':r' → logprob: -9.006511688232422
    5. ' :
' → logprob: -10.631511688232422
    6. ' r' → logprob: -11.381511688232422
    7. ' and' → logprob: -11.881511688232422
    8. '+:' → logprob: -12.131511688232422
    9. '+' → logprob: -12.256511688232422
    10. 'r' → logprob: -12.506511688232422

Token 45: '   ' (ID: 271)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.08001319319009781
    2. '	r' → logprob: -2.7050132751464844
    3. ' ' → logprob: -5.330013275146484
    4. 'r' → logprob: -5.955013275146484
    5. '<|end|>' → logprob: -6.455013275146484
    6. '   ' → logprob: -7.705013275146484
    7. ' 
' → logprob: -7.830013275146484
    8. '<|end|>' → logprob: -9.455013275146484
    9. ',r' → logprob: -11.330013275146484
    10. '	s' → logprob: -11.580013275146484

Token 46: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.04878947511315346
    2. ' r' → logprob: -3.0487895011901855
    3. '   ' → logprob: -8.548789024353027
    4. '	r' → logprob: -11.798789024353027
    5. ' ' → logprob: -15.048789024353027
    6. '<|end|>' → logprob: -15.673789024353027
    7. '  ' → logprob: -16.048789978027344
    8. '_r' → logprob: -16.548789978027344
    9. '```' → logprob: -17.173789978027344
    10. ',r' → logprob: -17.923789978027344

Token 47: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027199678122997284
    2. ' +=' → logprob: -3.6521997451782227
    3. '=' → logprob: -7.402199745178223
    4. '+' → logprob: -8.277199745178223
    5. '+='' → logprob: -11.402199745178223
    6. ']+=' → logprob: -11.527199745178223
    7. ' =' → logprob: -12.402199745178223
    8. '<|end|>' → logprob: -12.652199745178223
    9. '+=(' → logprob: -13.402199745178223
    10. '+="' → logprob: -13.652199745178223

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.250003814697266
    4. '```' → logprob: -18.875003814697266
    5. '１' → logprob: -19.500003814697266
    6. '  ' → logprob: -19.750003814697266
    7. '+' → logprob: -20.500003814697266
    8. '۱' → logprob: -20.750003814697266
    9. 'r' → logprob: -21.250003814697266
    10. '१' → logprob: -21.562503814697266

Token 49: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7257826328277588
    2. 'r' → logprob: -0.9757826328277588
    3. ' while' → logprob: -2.600782632827759
    4. '
' → logprob: -3.600782632827759
    5. ' 
' → logprob: -3.850782632827759
    6. 'print' → logprob: -4.85078239440918
    7. 'n' → logprob: -6.35078239440918
    8. ' r' → logprob: -6.85078239440918
    9. '<|end|>' → logprob: -6.97578239440918
    10. ' ' → logprob: -6.97578239440918

Token 50: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.40580201148986816
    2. 'print' → logprob: -1.5308020114898682
    3. 'r' → logprob: -2.280802011489868
    4. ' while' → logprob: -4.905801773071289
    5. '```' → logprob: -6.530801773071289
    6. '<|end|>' → logprob: -6.780801773071289
    7. 's' → logprob: -6.905801773071289
    8. 'n' → logprob: -7.030801773071289
    9. ')' → logprob: -7.655801773071289
    10. '
' → logprob: -7.780801773071289

Token 51: ' r' (ID: 428)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11270376294851303
    2. '(r' → logprob: -2.362703800201416
    3. '(t' → logprob: -4.612703800201416
    4. ' r' → logprob: -6.487703800201416
    5. 'r' → logprob: -7.862703800201416
    6. ' t' → logprob: -8.362703323364258
    7. '(h' → logprob: -9.112703323364258
    8. 't' → logprob: -9.987703323364258
    9. '(n' → logprob: -10.112703323364258
    10. ' not' → logprob: -10.237703323364258

Token 52: '*r' (ID: 92096)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8865931034088135
    2. '*(' → logprob: -1.2615931034088135
    3. '>' → logprob: -2.0115931034088135
    4. '*' → logprob: -2.6365931034088135
    5. '-' → logprob: -2.7615931034088135
    6. '*r' → logprob: -4.136592864990234
    7. '>(' → logprob: -4.386592864990234
    8. '<(' → logprob: -6.636592864990234
    9. '<' → logprob: -6.886592864990234
    10. '>((' → logprob: -7.011592864990234

Token 53: '+(' (ID: 31717)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7420366406440735
    2. '+' → logprob: -0.9920366406440735
    3. '<=' → logprob: -1.9920365810394287
    4. '<' → logprob: -4.867036819458008
    5. ' >' → logprob: -5.742036819458008
    6. ' <=' → logprob: -6.617036819458008
    7. '<|end|>' → logprob: -6.617036819458008
    8. '+r' → logprob: -6.992036819458008
    9. ' +' → logprob: -7.117036819458008
    10. '>=' → logprob: -7.867036819458008

Token 54: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00997516792267561
    2. '(r' → logprob: -4.634974956512451
    3. ' r' → logprob: -8.50997543334961
    4. '<|end|>' → logprob: -12.00997543334961
    5. '+r' → logprob: -12.88497543334961
    6. '	r' → logprob: -13.50997543334961
    7. '(' → logprob: -13.75997543334961
    8. '[r' → logprob: -13.88497543334961
    9. '+' → logprob: -14.00997543334961
    10. '1' → logprob: -14.00997543334961

Token 55: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000307575857732445
    2. '-' → logprob: -8.3753080368042
    3. '+)' → logprob: -9.8753080368042
    4. ')' → logprob: -11.0003080368042
    5. '+r' → logprob: -12.2503080368042
    6. '<|end|>' → logprob: -14.0003080368042
    7. 'r' → logprob: -14.3753080368042
    8. ' +' → logprob: -14.5003080368042
    9. '+</' → logprob: -14.6253080368042
    10. '+
' → logprob: -14.8753080368042

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ')' → logprob: -12.875006675720215
    3. ' ' → logprob: -13.750006675720215
    4. '+' → logprob: -14.000006675720215
    5. '<|end|>' → logprob: -14.500006675720215
    6. '-' → logprob: -15.125006675720215
    7. '```' → logprob: -15.375006675720215
    8. '   ' → logprob: -15.375006675720215
    9. '>' → logprob: -15.750006675720215
    10. '<|end|>' → logprob: -16.4375057220459

Token 57: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.02374630607664585
    2. ')*' → logprob: -4.148746490478516
    3. ')' → logprob: -5.398746490478516
    4. ')**' → logprob: -5.898746490478516
    5. '*' → logprob: -8.648746490478516
    6. '*)' → logprob: -8.773746490478516
    7. '*r' → logprob: -9.523746490478516
    8. ')(' → logprob: -11.648746490478516
    9. '*)(' → logprob: -13.023746490478516
    10. '*(' → logprob: -14.023746490478516

Token 58: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00043639098294079304
    2. '<|end|>' → logprob: -8.000436782836914
    3. ')' → logprob: -9.625436782836914
    4. '<|end|>' → logprob: -11.000436782836914
    5. ' r' → logprob: -11.875436782836914
    6. '*r' → logprob: -13.000436782836914
    7. '-' → logprob: -13.250436782836914
    8. ' ' → logprob: -13.875436782836914
    9. '```' → logprob: -13.875436782836914
    10. '1' → logprob: -14.750436782836914

Token 59: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38845232129096985
    2. '-' → logprob: -1.1384522914886475
    3. ')>=' → logprob: -7.638452529907227
    4. '1' → logprob: -8.138452529907227
    5. '-)' → logprob: -8.638452529907227
    6. '<|end|>' → logprob: -8.638452529907227
    7. ')>' → logprob: -8.888452529907227
    8. ')<=' → logprob: -9.763452529907227
    9. ')=' → logprob: -10.388452529907227
    10. 'r' → logprob: -10.513452529907227

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. '<|end|>' → logprob: -12.375007629394531
    3. ')' → logprob: -13.625007629394531
    4. '<|end|>' → logprob: -14.000007629394531
    5. ' ' → logprob: -14.125007629394531
    6. '```' → logprob: -14.750007629394531
    7. 'r' → logprob: -16.25000762939453
    8. '   ' → logprob: -16.50000762939453
    9. '>' → logprob: -16.87500762939453
    10. '2' → logprob: -16.87500762939453

Token 61: ')>' (ID: 37292)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004568254109472036
    2. ' >' → logprob: -5.879568099975586
    3. ')>' → logprob: -6.379568099975586
    4. ')' → logprob: -10.379568099975586
    5. '>end' → logprob: -11.504568099975586
    6. ']>' → logprob: -11.754568099975586
    7. '>=' → logprob: -13.004568099975586
    8. ')>=' → logprob: -13.254568099975586
    9. '>x' → logprob: -13.504568099975586
    10. '>tag' → logprob: -13.504568099975586

Token 62: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0619741789996624
    2. ' t' → logprob: -2.811974287033081
    3. '	t' → logprob: -12.56197452545166
    4. ' ' → logprob: -13.56197452545166
    5. '<|end|>' → logprob: -13.93697452545166
    6. '  ' → logprob: -15.18697452545166
    7. '   ' → logprob: -15.31197452545166
    8. '`t' → logprob: -15.43697452545166
    9. '(t' → logprob: -16.436973571777344
    10. ')t' → logprob: -17.561973571777344

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003690335899591446
    2. ':
' → logprob: -5.628690242767334
    3. 'r' → logprob: -10.753690719604492
    4. ':r' → logprob: -11.128690719604492
    5. ' and' → logprob: -11.378690719604492
    6. ':

' → logprob: -11.503690719604492
    7. ' :' → logprob: -12.003690719604492
    8. ',' → logprob: -12.128690719604492
    9. '   ' → logprob: -12.503690719604492
    10. ',r' → logprob: -12.628690719604492

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07094466686248779
    2. 'r' → logprob: -3.3209447860717773
    3. ' r' → logprob: -3.6959447860717773
    4. '<|end|>' → logprob: -4.945944786071777
    5. '	r' → logprob: -8.570944786071777
    6. ' ' → logprob: -9.570944786071777
    7. '_r' → logprob: -9.945944786071777
    8. '  ' → logprob: -10.320944786071777
    9. '<|end|>' → logprob: -10.570944786071777
    10. ',r' → logprob: -11.445944786071777

Token 65: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.17986801266670227
    2. ' r' → logprob: -1.8048679828643799
    3. '<|end|>' → logprob: -9.8048677444458
    4. '   ' → logprob: -10.4298677444458
    5. '	r' → logprob: -10.5548677444458
    6. ' ' → logprob: -12.1798677444458
    7. '_r' → logprob: -12.5548677444458
    8. 's' → logprob: -13.5548677444458
    9. '  ' → logprob: -13.9298677444458
    10. '(r' → logprob: -14.5548677444458

Token 66: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.000320565392030403
    2. '-' → logprob: -8.625320434570312
    3. ' -=' → logprob: -8.875320434570312
    4. '=' → logprob: -13.750320434570312
    5. '+=' → logprob: -15.875320434570312
    6. '>-' → logprob: -18.250320434570312
    7. '```' → logprob: -18.250320434570312
    8. '=-' → logprob: -18.625320434570312
    9. ' -' → logprob: -18.875320434570312
    10. '--' → logprob: -19.125320434570312

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -17.625001907348633
    4. '```' → logprob: -18.250001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '１' → logprob: -19.562501907348633
    7. '0' → logprob: -19.625001907348633
    8. '۱' → logprob: -19.875001907348633
    9. '১' → logprob: -20.250001907348633
    10. '१' → logprob: -20.500001907348633

Token 68: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: 'print' (ID: 1598)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9840148091316223
    2. 'n' → logprob: -1.1090147495269775
    3. 'd' → logprob: -2.6090147495269775
    4. 'c' → logprob: -3.4840147495269775
    5. 'p' → logprob: -3.4840147495269775
    6. ' ' → logprob: -3.6090147495269775
    7. 'a' → logprob: -3.7340147495269775
    8. 'i' → logprob: -4.234014987945557
    9. 'b' → logprob: -4.359014987945557
    10. '#' → logprob: -4.734014987945557

Token 70: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.031135113909840584
    2. '(' → logprob: -3.531135082244873
    3. '((' → logprob: -7.031135082244873
    4. '(t' → logprob: -8.656135559082031
    5. '(max' → logprob: -9.031135559082031
    6. '('' → logprob: -9.906135559082031
    7. '()' → logprob: -10.031135559082031
    8. 'r' → logprob: -10.281135559082031
    9. '("' → logprob: -10.781135559082031
    10. '(min' → logprob: -11.156135559082031

Token 71: '*r' (ID: 92096)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.250000953674316
    3. ' )' → logprob: -16.75
    4. ')`' → logprob: -16.75
    5. '`)' → logprob: -17.875
    6. '')' → logprob: -18.25
    7. '+' → logprob: -18.625
    8. '*' → logprob: -18.625
    9. '*)' → logprob: -18.875
    10. '）' → logprob: -19.25

Token 72: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5052909255027771
    2. ')' → logprob: -1.0052909851074219
    3. '+r' → logprob: -3.505290985107422
    4. '+)' → logprob: -7.505290985107422
    5. ' +' → logprob: -9.380290985107422
    6. ')+' → logprob: -10.880290985107422
    7. '*' → logprob: -10.880290985107422
    8. '))' → logprob: -12.505290985107422
    9. '+
' → logprob: -12.755290985107422
    10. ')
' → logprob: -12.755290985107422

Token 73: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006716079078614712
    2. '(r' → logprob: -5.006716251373291
    3. ' r' → logprob: -14.756715774536133
    4. '(' → logprob: -16.256715774536133
    5. '	r' → logprob: -16.256715774536133
    6. '_r' → logprob: -17.131715774536133
    7. ' (' → logprob: -18.006715774536133
    8. ')' → logprob: -18.006715774536133
    9. '[r' → logprob: -18.381715774536133
    10. '<|end|>' → logprob: -18.381715774536133

Token 74: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -2.339278580620885e-06
    2. ' -' → logprob: -13.375001907348633
    3. ')' → logprob: -14.250001907348633
    4. '-)' → logprob: -17.375001907348633
    5. ')*(' → logprob: -17.625001907348633
    6. '1' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.375001907348633
    8. ' ' → logprob: -18.875001907348633
    9. ')-' → logprob: -19.000001907348633
    10. '(' → logprob: -19.250001907348633

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2269609421491623
    2. '-' → logprob: -1.6019608974456787
    3. 'r' → logprob: -6.976961135864258
    4. '(r' → logprob: -8.101961135864258
    5. '(' → logprob: -8.851961135864258
    6. ')' → logprob: -9.101961135864258
    7. ' ' → logprob: -11.476961135864258
    8. '```' → logprob: -11.476961135864258
    9. '-r' → logprob: -11.976961135864258
    10. '[' → logprob: -11.976961135864258

Token 76: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.04231781139969826
    2. '*' → logprob: -4.042317867279053
    3. ')*' → logprob: -4.292317867279053
    4. ')' → logprob: -4.917317867279053
    5. '*r' → logprob: -6.292317867279053
    6. ')(' → logprob: -7.917317867279053
    7. ')**' → logprob: -7.917317867279053
    8. '*)' → logprob: -8.542317390441895
    9. '*(' → logprob: -9.667317390441895
    10. '*)(' → logprob: -10.292317390441895

Token 77: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.2200749754119897e-06
    2. ' r' → logprob: -13.125001907348633
    3. ')' → logprob: -15.625001907348633
    4. '1' → logprob: -18.125001907348633
    5. '	r' → logprob: -18.875001907348633
    6. '_r' → logprob: -20.125001907348633
    7. '2' → logprob: -20.500001907348633
    8. '*r' → logprob: -20.625001907348633
    9. '(r' → logprob: -21.000001907348633
    10. '​' → logprob: -22.125001907348633

Token 78: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000158842682139948
    2. '1' → logprob: -9.00015926361084
    3. '-' → logprob: -11.12515926361084
    4. ')**' → logprob: -11.62515926361084
    5. '```' → logprob: -12.62515926361084
    6. '<|end|>' → logprob: -13.37515926361084
    7. '[' → logprob: -13.50015926361084
    8. '))' → logprob: -14.25015926361084
    9. ')return' → logprob: -14.37515926361084
    10. '`)' → logprob: -14.37515926361084

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ')' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.00000286102295
    4. '```' → logprob: -15.50000286102295
    5. '-' → logprob: -16.375003814697266
    6. '<|end|>' → logprob: -16.750003814697266
    7. '2' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.250003814697266
    9. '<|end|>' → logprob: -18.375003814697266
    10. '**' → logprob: -18.500003814697266

Token 80: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.214019307051785e-05
    2. '))' → logprob: -10.375032424926758
    3. ' )' → logprob: -14.750032424926758
    4. ')`' → logprob: -15.875032424926758
    5. ')")' → logprob: -16.125032424926758
    6. '`)' → logprob: -16.500032424926758
    7. ')))' → logprob: -17.125032424926758
    8. '*)' → logprob: -17.500032424926758
    9. '})' → logprob: -17.750032424926758
    10. ')
' → logprob: -18.125032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 78
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 46.15%
Précision adaptée (1ère position): 48.72%
Précision (top 10): 78.21%
================================================================================
