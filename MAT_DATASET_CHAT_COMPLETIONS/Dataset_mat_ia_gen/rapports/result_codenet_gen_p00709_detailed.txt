================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def can_place_carpet(floor, x, y, size, W, H):
    """
    Vérifie si un carré de dimension 'size' peut être posé,
    avec le coin supérieur gauche en (x,y).
    Conditions :
    - Tous les panneaux dans ce carré doivent être rayés (1).
    - Le carré doit être entièrement contenu dans le plancher.
    """
    if x + size > W or y + size > H:
        return False
    for dy in range(size):
        for dx in range(size):
            if floor[y+dy][x+dx] == 0:  # panneau intact, ne peut pas couvrir
                return False
    return True

def place_carpet(floor, x, y, size, val):
    """
    Pose ou enlève un tapis de dimension 'size' en (x,y).
    Met la valeur 'val' sur tous les panneaux du tapis.
    val = 0 pour enlever le tapis (restaurer rayé),
    val = -1 pour marquer comme couvert (ou tout autre valeur négative).
    """
    for dy in range(size):
        for dx in range(size):
            floor[y+dy][x+dx] = val

def find_first_scratched(floor, W, H):
    """
    Trouve le premier panneau rayé (avec la valeur 1).
    Retourne les coordonnées (x,y), ou None si aucun panneau rayé n'est trouvé.
    """
    for y in range(H):
        for x in range(W):
            if floor[y][x] == 1:
                return x, y
    return None

def dfs(floor, W, H, carpets_used, best):
    """
    Recherche en profondeur avec backtracking pour trouver le nombre minimal de tapis.
    - floor : matrice modifiée en place, -1 = recouvert
    - carpets_used : nombre de tapis posés
    - best : la meilleure solution trouvée (int)
    Retourne la meilleure solution trouvée à partir de l'état actuel.
    """
    # Si on a déjà dépassé le meilleur score connu, on stoppe cette branche
    if carpets_used >= best[0]:
        return

    # Cherche premier panneau rayé à recouvrir
    pos = find_first_scratched(floor, W, H)
    if pos is None:
        # Tous recouverts
        best[0] = carpets_used
        return

    x, y = pos

    # On essaye toutes tailles possibles de tapis à ce point (descendant)
    max_size = min(W - x, H - y)
    for size in range(max_size, 0, -1):
        if can_place_carpet(floor, x, y, size, W, H):
            # Pose le tapis
            place_carpet(floor, x, y, size, -1)
            dfs(floor, W, H, carpets_used+1, best)
            # Retire le tapis (backtrack)
            place_carpet(floor, x, y, size, 1)

def main():
    while True:
        line = ''
        # Lire une ligne non vide
        while line.strip() == '':
            line = sys.stdin.readline()
            if line == '':
                return  # Fin fichier
        W, H = map(int, line.strip().split())
        if W == 0 and H == 0:
            break
        floor = []
        for _ in range(H):
            row = list(map(int, sys.stdin.readline().strip().split()))
            floor.append(row)

        # Recherche solution par backtracking DFS
        best = [W*H]  # meilleure solution (min tapis)
        dfs(floor, W, H, 0, best)
        print(best[0])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2118348330259323
    2. '.' → logprob: -2.3368349075317383
    3. '<|end|>' → logprob: -2.8368349075317383
    4. '\' → logprob: -4.711834907531738
    5. 'newline' → logprob: -5.086834907531738
    6. 'import' → logprob: -5.086834907531738
    7. '
' → logprob: -5.711834907531738
    8. '' → logprob: -5.836834907531738
    9. '<|end|>' → logprob: -5.836834907531738
    10. '\r' → logprob: -6.336834907531738

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.8828707804204896e-05
    2. '[' → logprob: -10.750048637390137
    3. '.import' → logprob: -12.500048637390137
    4. '.readline' → logprob: -12.875048637390137
    5. '."""' → logprob: -13.375048637390137
    6. '.user' → logprob: -13.625048637390137
    7. '.next' → logprob: -13.750048637390137
    8. '.stdout' → logprob: -13.750048637390137
    9. '```' → logprob: -13.750048637390137
    10. '.[' → logprob: -14.000048637390137

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037415295373648405
    2. 'ursive' → logprob: -6.37874174118042
    3. 'limit' → logprob: -7.00374174118042
    4. 'ur' → logprob: -7.50374174118042
    5. 'urse' → logprob: -9.253741264343262
    6. '_limit' → logprob: -9.628741264343262
    7. 'urs' → logprob: -9.628741264343262
    8. 'ut' → logprob: -9.753741264343262
    9. 'u' → logprob: -10.003741264343262
    10. 't' → logprob: -10.128741264343262

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.5320794582366943
    2. 'limit' → logprob: -1.1570794582366943
    3. '_depth' → logprob: -2.4070794582366943
    4. '_' → logprob: -5.907079696655273
    5. 'depth' → logprob: -5.907079696655273
    6. 'error' → logprob: -6.907079696655273
    7. '_error' → logprob: -7.532079696655273
    8. '('_' → logprob: -8.782079696655273
    9. '_limits' → logprob: -8.782079696655273
    10. '_stack' → logprob: -9.157079696655273

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6965333223342896
    2. '100' → logprob: -0.6965333223342896
    3. ' ' → logprob: -5.821533203125
    4. '300' → logprob: -8.696533203125
    5. '500' → logprob: -8.696533203125
    6. '1' → logprob: -10.571533203125
    7. '250' → logprob: -10.696533203125
    8. '999' → logprob: -11.196533203125
    9. '  ' → logprob: -12.196533203125
    10. '200' → logprob: -12.321533203125

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06865184754133224
    2. '000' → logprob: -2.9436519145965576
    3. '00' → logprob: -4.3186516761779785
    4. '4' → logprob: -8.318652153015137
    5. '6' → logprob: -9.943652153015137
    6. '**' → logprob: -10.193652153015137
    7. '5' → logprob: -11.943652153015137
    8. '```' → logprob: -12.193652153015137
    9. ')' → logprob: -12.318652153015137
    10. '2' → logprob: -12.443652153015137

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046512849628925323
    2. '
' → logprob: -3.5465128421783447
    3. '

' → logprob: -4.921513080596924
    4. '```' → logprob: -5.296513080596924
    5. '\' → logprob: -6.421513080596924
    6. '
' → logprob: -7.046513080596924
    7. 'class' → logprob: -7.546513080596924
    8. '\n' → logprob: -7.671513080596924
    9. 'import' → logprob: -8.046512603759766
    10. ')' → logprob: -8.921512603759766

Token 14: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8245536684989929
    2. ' factorial' → logprob: -0.8245536684989929
    3. ' dfs' → logprob: -2.5745537281036377
    4. ' f' → logprob: -4.324553489685059
    5. ' factor' → logprob: -5.074553489685059
    6. ' my' → logprob: -5.324553489685059
    7. ' fibonacci' → logprob: -5.574553489685059
    8. ' space' → logprob: -5.574553489685059
    9. ' main' → logprob: -5.949553489685059
    10. ' recursive' → logprob: -6.074553489685059

Token 15: '_place' (ID: 81501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0694635659456253
    2. ' _' → logprob: -4.069463729858398
    3. '_continue' → logprob: -4.569463729858398
    4. '_accept' → logprob: -5.194463729858398
    5. '_jump' → logprob: -5.444463729858398
    6. '_return' → logprob: -5.444463729858398
    7. '_access' → logprob: -6.194463729858398
    8. ' ' → logprob: -6.194463729858398
    9. '_construct' → logprob: -6.194463729858398
    10. '_run' → logprob: -6.319463729858398

Token 16: '_car' (ID: 62991)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1105826124548912
    2. '_tile' → logprob: -3.2355825901031494
    3. '(' → logprob: -4.7355828285217285
    4. '_token' → logprob: -4.9855828285217285
    5. '_piece' → logprob: -4.9855828285217285
    6. '_space' → logprob: -5.7355828285217285
    7. ' _' → logprob: -5.7355828285217285
    8. '_block' → logprob: -5.7355828285217285
    9. ' ' → logprob: -5.8605828285217285
    10. '_tiles' → logprob: -6.1105828285217285

Token 17: 'pet' (ID: 9456)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5815514922142029
    2. '_' → logprob: -1.0815515518188477
    3. '_at' → logprob: -2.5815515518188477
    4. '_(' → logprob: -5.331551551818848
    5. '_s' → logprob: -5.581551551818848
    6. '_on' → logprob: -6.456551551818848
    7. '_in' → logprob: -6.456551551818848
    8. ')' → logprob: -6.456551551818848
    9. 's' → logprob: -6.706551551818848
    10. ' (' → logprob: -6.706551551818848

Token 18: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01181988324970007
    2. '(s' → logprob: -6.261819839477539
    3. '(space' → logprob: -6.386819839477539
    4. '_' → logprob: -6.886819839477539
    5. '(tile' → logprob: -7.136819839477539
    6. ' (' → logprob: -7.136819839477539
    7. '(car' → logprob: -7.261819839477539
    8. '(x' → logprob: -7.636819839477539
    9. '(parent' → logprob: -8.011819839477539
    10. '(user' → logprob: -8.136819839477539

Token 19: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.024403711780905724
    2. 'l' → logprob: -4.5244035720825195
    3. 'lo' → logprob: -5.3994035720825195
    4. 'e' → logprob: -6.3994035720825195
    5. 'i' → logprob: -6.6494035720825195
    6. 'ield' → logprob: -7.0244035720825195
    7. 'urniture' → logprob: -7.3994035720825195
    8. 'r' → logprob: -7.6494035720825195
    9. 'unction' → logprob: -7.7744035720825195
    10. ',' → logprob: -7.8994035720825195

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05257907509803772
    2. '):' → logprob: -4.177578926086426
    3. '_length' → logprob: -4.677578926086426
    4. '_height' → logprob: -4.927578926086426
    5. '[row' → logprob: -5.302578926086426
    6. '_size' → logprob: -5.552578926086426
    7. ',row' → logprob: -6.427578926086426
    8. '[y' → logprob: -6.677578926086426
    9. ',y' → logprob: -6.802578926086426
    10. ':' → logprob: -7.052578926086426

Token 21: ' x' (ID: 1215)
  Prédit: ' carpet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carpet' → logprob: -1.33844792842865
    2. ' x' → logprob: -1.58844792842865
    3. ' start' → logprob: -1.58844792842865
    4. ' length' → logprob: -3.0884480476379395
    5. ' row' → logprob: -3.0884480476379395
    6. ' i' → logprob: -3.0884480476379395
    7. 'x' → logprob: -3.4634480476379395
    8. ' n' → logprob: -4.2134480476379395
    9. ' rows' → logprob: -4.2134480476379395
    10. ' index' → logprob: -4.4634480476379395

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014561474381480366
    2. '+' → logprob: -9.37514591217041
    3. ' ,' → logprob: -10.50014591217041
    4. ',y' → logprob: -10.87514591217041
    5. '):' → logprob: -12.00014591217041
    6. ')' → logprob: -13.12514591217041
    7. ' +' → logprob: -13.25014591217041
    8. '+,' → logprob: -13.75014591217041
    9. '-' → logprob: -14.25014591217041
    10. 'y' → logprob: -14.37514591217041

Token 23: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.054940395057201385
    2. 'y' → logprob: -2.9299404621124268
    3. ' ' → logprob: -10.054940223693848
    4. '	y' → logprob: -11.554940223693848
    5. '    ' → logprob: -13.554940223693848
    6. ' ' → logprob: -14.054940223693848
    7. ')' → logprob: -14.429940223693848
    8. '  ' → logprob: -14.429940223693848
    9. '   ' → logprob: -14.554940223693848
    10. '<|end|>' → logprob: -14.929940223693848

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010694891680032015
    2. '):' → logprob: -7.00106954574585
    3. ')' → logprob: -9.376069068908691
    4. ' ,' → logprob: -9.626069068908691
    5. '),' → logprob: -14.001069068908691
    6. ',n' → logprob: -14.001069068908691
    7. ',int' → logprob: -14.376069068908691
    8. ',size' → logprob: -14.501069068908691
    9. ' ):' → logprob: -14.626069068908691
    10. ',width' → logprob: -15.001069068908691

Token 25: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.6730232238769531
    2. ' k' → logprob: -1.9230232238769531
    3. ' carpet' → logprob: -2.048023223876953
    4. ' length' → logprob: -3.048023223876953
    5. ' w' → logprob: -3.298023223876953
    6. 'k' → logprob: -3.548023223876953
    7. ' h' → logprob: -4.048023223876953
    8. ' width' → logprob: -4.423023223876953
    9. 'size' → logprob: -4.798023223876953
    10. ' l' → logprob: -5.048023223876953

Token 26: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017722686752676964
    2. ',' → logprob: -4.3927226066589355
    3. ')' → logprob: -5.2677226066589355
    4. '):
' → logprob: -10.767723083496094
    5. ' ):' → logprob: -11.392723083496094
    6. ':' → logprob: -12.517723083496094
    7. '),' → logprob: -13.892723083496094
    8. ')):' → logprob: -14.017723083496094
    9. '   ' → logprob: -14.267723083496094
    10. ' ' → logprob: -14.267723083496094

Token 27: ' W' (ID: 486)
  Prédit: ' carpet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' carpet' → logprob: -0.9574036002159119
    2. ' color' → logprob: -1.2074036598205566
    3. ' tile' → logprob: -1.8324036598205566
    4. 'color' → logprob: -4.332403659820557
    5. 'car' → logprob: -4.457403659820557
    6. ' car' → logprob: -4.457403659820557
    7. ' orientation' → logprob: -4.457403659820557
    8. ' char' → logprob: -4.582403659820557
    9. ' ' → logprob: -4.582403659820557
    10. ' k' → logprob: -4.957403659820557

Token 28: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08952386677265167
    2. ',' → logprob: -2.4645237922668457
    3. ')' → logprob: -7.964523792266846
    4. ' ):' → logprob: -8.589524269104004
    5. '):
' → logprob: -11.089524269104004
    6. ' ,' → logprob: -11.214524269104004
    7. '=' → logprob: -12.214524269104004
    8. '-' → logprob: -12.589524269104004
    9. ' ' → logprob: -12.964524269104004
    10. '   ' → logprob: -13.714524269104004

Token 29: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.283164381980896
    2. ' H' → logprob: -1.408164381980896
    3. ')' → logprob: -6.5331645011901855
    4. ' ' → logprob: -8.283164024353027
    5. ' )' → logprob: -9.658164024353027
    6. '   ' → logprob: -10.845664024353027
    7. ' floor' → logprob: -11.033164024353027
    8. 'L' → logprob: -11.283164024353027
    9. 'def' → logprob: -11.283164024353027
    10. 'floor' → logprob: -11.470664024353027

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001321669202297926
    2. ')' → logprob: -7.126321792602539
    3. ',' → logprob: -7.626321792602539
    4. '):
' → logprob: -11.251321792602539
    5. ' ):' → logprob: -11.376321792602539
    6. ':' → logprob: -12.501321792602539
    7. '):
' → logprob: -15.126321792602539
    8. ' ' → logprob: -15.501321792602539
    9. '),' → logprob: -16.00132179260254
    10. ')):' → logprob: -16.00132179260254

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013198232278227806
    2. '):' → logprob: -4.388198375701904
    3. ' :' → logprob: -8.513197898864746
    4. ',' → logprob: -8.638197898864746
    5. ':
' → logprob: -9.138197898864746
    6. '   ' → logprob: -9.138197898864746
    7. ')' → logprob: -10.138197898864746
    8. ':return' → logprob: -11.138197898864746
    9. '):
' → logprob: -11.888197898864746
    10. ' ' → logprob: -12.138197898864746

Token 32: ' """
' (ID: 7037)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6057308912277222
    2. ' ' → logprob: -1.4807308912277222
    3. '    ' → logprob: -2.3557310104370117
    4. '   ' → logprob: -2.8557310104370117
    5. ' for' → logprob: -3.6057310104370117
    6. ' :' → logprob: -3.9807310104370117
    7. ')' → logprob: -5.105731010437012
    8. '     
' → logprob: -5.230731010437012
    9. ' 
' → logprob: -5.980731010437012
    10. ',' → logprob: -6.355731010437012

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7159247994422913
    2. ' """' → logprob: -1.4659247398376465
    3. ' """
' → logprob: -2.5909247398376465
    4. '#' → logprob: -2.7159247398376465
    5. ' ' → logprob: -3.3409247398376465
    6. '"""' → logprob: -3.3409247398376465
    7. '    ' → logprob: -3.9659247398376465
    8. ')' → logprob: -3.9659247398376465
    9. ' #' → logprob: -5.3409247398376465
    10. ' 
' → logprob: -5.8409247398376465

Token 34: ' Vér' (ID: 159169)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6991736888885498
    2. 'for' → logprob: -1.4491736888885498
    3. ' if' → logprob: -1.8241736888885498
    4. '   ' → logprob: -3.19917368888855
    5. 'if' → logprob: -3.32417368888855
    6. '#' → logprob: -4.074173927307129
    7. ' """' → logprob: -5.074173927307129
    8. ' #' → logprob: -5.949173927307129
    9. '"""' → logprob: -7.199173927307129
    10. ' ' → logprob: -7.199173927307129

Token 35: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.015526875853538513
    2. 'ifier' → logprob: -4.39052677154541
    3. 'if' → logprob: -6.39052677154541
    4. 'ifi' → logprob: -6.89052677154541
    5. 'ifié' → logprob: -8.89052677154541
    6. 'i' → logprob: -9.26552677154541
    7. 'ifiez' → logprob: -9.64052677154541
    8. '   ' → logprob: -12.01552677154541
    9. 'ify' → logprob: -12.64052677154541
    10. 'ification' → logprob: -12.76552677154541

Token 36: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23028621077537537
    2. ' ' → logprob: -1.7302862405776978
    3. ' si' → logprob: -4.105286121368408
    4. '  ' → logprob: -5.105286121368408
    5. '   ' → logprob: -6.355286121368408
    6. 's' → logprob: -6.605286121368408
    7. ' whether' → logprob: -7.230286121368408
    8. ' que' → logprob: -7.480286121368408
    9. 'if' → logprob: -8.230286598205566
    10. ' that' → logprob: -8.480286598205566

Token 37: ' un' (ID: 537)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3468001186847687
    2. 'x' → logprob: -1.5968000888824463
    3. ' all' → logprob: -3.5968000888824463
    4. ' ' → logprob: -3.5968000888824463
    5. ' floor' → logprob: -4.346800327301025
    6. ' size' → logprob: -5.221800327301025
    7. ' y' → logprob: -5.346800327301025
    8. ' the' → logprob: -6.471800327301025
    9. 'all' → logprob: -6.596800327301025
    10. 'y' → logprob: -6.596800327301025

Token 38: ' carré' (ID: 191546)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1281881332397461
    2. ' carpet' → logprob: -2.378188133239746
    3. ' carre' → logprob: -4.878188133239746
    4. ' car' → logprob: -5.003188133239746
    5. ' tapis' → logprob: -5.253188133239746
    6. ' ' → logprob: -6.628188133239746
    7. ' carré' → logprob: -6.628188133239746
    8. ' morceau' → logprob: -6.753188133239746
    9. '   ' → logprob: -7.878188133239746
    10. 't' → logprob: -8.003188133239746

Token 39: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2473190873861313
    2. ' ' → logprob: -2.122318983078003
    3. '   ' → logprob: -3.622318983078003
    4. '_' → logprob: -4.247319221496582
    5. ' of' → logprob: -4.497319221496582
    6. 'de' → logprob: -4.747319221496582
    7. ' is' → logprob: -4.997319221496582
    8. ' est' → logprob: -5.247319221496582
    9. 'car' → logprob: -5.247319221496582
    10. ' can' → logprob: -5.622319221496582

Token 40: ' dimension' (ID: 21959)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.4910987317562103
    2. 'size' → logprob: -1.1160987615585327
    3. ' size' → logprob: -3.866098642349243
    4. ' taille' → logprob: -3.991098642349243
    5. 'c' → logprob: -4.366098880767822
    6. 'car' → logprob: -5.741098880767822
    7. 'la' → logprob: -6.616098880767822
    8. '```' → logprob: -6.991098880767822
    9. 'tails' → logprob: -7.116098880767822
    10. ' la' → logprob: -7.866098880767822

Token 41: ' '' (ID: 461)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.3234643340110779
    2. ' size' → logprob: -1.3234643936157227
    3. '(size' → logprob: -4.948464393615723
    4. '[size' → logprob: -6.323464393615723
    5. ' `' → logprob: -7.573464393615723
    6. 'car' → logprob: -9.073464393615723
    7. '```' → logprob: -9.198464393615723
    8. ' taille' → logprob: -9.323464393615723
    9. '<size' → logprob: -9.448464393615723
    10. ' (' → logprob: -9.448464393615723

Token 42: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.005956529639661312
    2. ' size' → logprob: -5.130956649780273
    3. 'tail' → logprob: -12.130956649780273
    4. ' taille' → logprob: -12.505956649780273
    5. '=size' → logprob: -12.505956649780273
    6. '<size' → logprob: -12.630956649780273
    7. '(size' → logprob: -12.880956649780273
    8. '[size' → logprob: -12.880956649780273
    9. 's' → logprob: -13.130956649780273
    10. '`' → logprob: -13.630956649780273

Token 43: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.017658978700637817
    2. ' '' → logprob: -4.2676591873168945
    3. 'x' → logprob: -6.0176591873168945
    4. ' x' → logprob: -8.267659187316895
    5. ')' → logprob: -8.892659187316895
    6. '*' → logprob: -9.017659187316895
    7. ' à' → logprob: -9.142659187316895
    8. ' peut' → logprob: -9.392659187316895
    9. ' est' → logprob: -9.767659187316895
    10. ''x' → logprob: -9.892659187316895

Token 44: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.1184082105755806
    2. ')' → logprob: -2.993408203125
    3. ' ' → logprob: -3.618408203125
    4. 'pe' → logprob: -3.993408203125
    5. ' can' → logprob: -5.368408203125
    6. ' à' → logprob: -6.118408203125
    7. 'can' → logprob: -6.243408203125
    8. ' peux' → logprob: -6.743408203125
    9. ' pe' → logprob: -6.868408203125
    10. ' est' → logprob: -7.493408203125

Token 45: ' être' (ID: 9104)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.32070982456207275
    2. ' être' → logprob: -2.320709705352783
    3. ' ' → logprob: -2.695709705352783
    4. 'être' → logprob: -3.320709705352783
    5. '<|end|>' → logprob: -3.320709705352783
    6. ' ' → logprob: -4.195709705352783
    7. 's' → logprob: -5.195709705352783
    8. ' s' → logprob: -5.445709705352783
    9. ' etre' → logprob: -5.695709705352783
    10. 'êt' → logprob: -6.445709705352783

Token 46: ' posé' (ID: 165138)
  Prédit: ' placé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placé' → logprob: -0.021301066502928734
    2. ' posé' → logprob: -4.27130126953125
    3. 'posé' → logprob: -5.64630126953125
    4. ' placed' → logprob: -6.02130126953125
    5. 'plac' → logprob: -7.64630126953125
    6. ' plac' → logprob: -8.02130126953125
    7. 'placed' → logprob: -9.14630126953125
    8. 'placement' → logprob: -9.89630126953125
    9. 'position' → logprob: -10.14630126953125
    10. 'pos' → logprob: -10.77130126953125

Token 47: ',
' (ID: 412)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.35004720091819763
    2. ' ' → logprob: -1.60004723072052
    3. 'sur' → logprob: -2.8500471115112305
    4. ' à' → logprob: -3.6000471115112305
    5. ' au' → logprob: -5.7250471115112305
    6. ')' → logprob: -6.7250471115112305
    7. '```' → logprob: -6.8500471115112305
    8. ',' → logprob: -7.6000471115112305
    9. '_sur' → logprob: -7.7250471115112305
    10. 'au' → logprob: -7.9750471115112305

Token 48: '   ' (ID: 271)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.0008138418197632
    2. ' sur' → logprob: -1.0008138418197632
    3. ' ' → logprob: -2.1258139610290527
    4. 'sur' → logprob: -2.6258139610290527
    5. ' dans' → logprob: -3.8758139610290527
    6. ' sans' → logprob: -4.500813961029053
    7. ' ' → logprob: -5.625813961029053
    8. ' en' → logprob: -5.750813961029053
    9. 'dans' → logprob: -5.750813961029053
    10. ' au' → logprob: -6.000813961029053

Token 49: ' avec' (ID: 3937)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.2507374286651611
    2. ' ' → logprob: -1.7507374286651611
    3. ' sur' → logprob: -2.000737428665161
    4. ' en' → logprob: -2.125737428665161
    5. ' dans' → logprob: -3.000737428665161
    6. ' without' → logprob: -3.375737428665161
    7. ' i' → logprob: -3.750737428665161
    8. ' sans' → logprob: -3.750737428665161
    9. 'x' → logprob: -3.875737428665161
    10. ' x' → logprob: -4.125737190246582

Token 50: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.19769324362277985
    2. ' la' → logprob: -3.197693347930908
    3. ' son' → logprob: -3.322693347930908
    4. ' l' → logprob: -3.572693347930908
    5. 'top' → logprob: -4.072693347930908
    6. ' sa' → logprob: -4.322693347930908
    7. 'le' → logprob: -4.322693347930908
    8. ' top' → logprob: -5.447693347930908
    9. ' les' → logprob: -5.447693347930908
    10. 'l' → logprob: -5.697693347930908

Token 51: ' coin' (ID: 22179)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.3490180969238281
    2. ' coin' → logprob: -1.2240180969238281
    3. 'point' → logprob: -8.224018096923828
    4. ' sommet' → logprob: -9.849018096923828
    5. 'corner' → logprob: -10.099018096923828
    6. 'c' → logprob: -10.099018096923828
    7. 'bord' → logprob: -10.224018096923828
    8. ' point' → logprob: -10.599018096923828
    9. 'som' → logprob: -11.474018096923828
    10. 'd' → logprob: -11.599018096923828

Token 52: ' supérieur' (ID: 98491)
  Prédit: ' supérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.042822983115911484
    2. ' en' → logprob: -4.29282283782959
    3. 'sup' → logprob: -4.79282283782959
    4. ' inférieur' → logprob: -5.29282283782959
    5. '<|end|>' → logprob: -5.79282283782959
    6. ' ' → logprob: -6.41782283782959
    7. ' sup' → logprob: -6.41782283782959
    8. ' à' → logprob: -6.66782283782959
    9. ' supérieure' → logprob: -6.79282283782959
    10. ' au' → logprob: -7.41782283782959

Token 53: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2952072322368622
    2. ' gauche' → logprob: -1.4202072620391846
    3. 'd' → logprob: -4.2952070236206055
    4. '```' → logprob: -9.295207023620605
    5. 'dro' → logprob: -10.045207023620605
    6. '_g' → logprob: -10.170207023620605
    7. ' droit' → logprob: -10.420207023620605
    8. 'left' → logprob: -10.670207023620605
    9. '   ' → logprob: -10.920207023620605
    10. '-g' → logprob: -11.295207023620605

Token 54: ' en' (ID: 469)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2531973719596863
    2. ' au' → logprob: -2.128197431564331
    3. ' at' → logprob: -3.378197431564331
    4. ')' → logprob: -3.878197431564331
    5. ' du' → logprob: -4.378197193145752
    6. 'au' → logprob: -4.753197193145752
    7. ' ' → logprob: -5.378197193145752
    8. ' sur' → logprob: -5.628197193145752
    9. '<|end|>' → logprob: -5.753197193145752
    10. ' situé' → logprob: -6.003197193145752

Token 55: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12639456987380981
    2. '(x' → logprob: -2.251394510269165
    3. ' ' → logprob: -5.001394748687744
    4. ' x' → logprob: -5.251394748687744
    5. 'x' → logprob: -7.001394748687744
    6. '(' → logprob: -8.501394271850586
    7. ' position' → logprob: -9.001394271850586
    8. ' la' → logprob: -9.501394271850586
    9. ' le' → logprob: -10.126394271850586
    10. 'l' → logprob: -10.251394271850586

Token 56: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05494186654686928
    2. ' x' → logprob: -2.9299418926239014
    3. ')x' → logprob: -10.92994213104248
    4. ' ' → logprob: -11.05494213104248
    5. ' )' → logprob: -11.42994213104248
    6. ')' → logprob: -11.42994213104248
    7. '(x' → logprob: -13.80494213104248
    8. 'y' → logprob: -14.30494213104248
    9. ',x' → logprob: -14.42994213104248
    10. ',' → logprob: -14.80494213104248

Token 57: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012362991692498326
    2. ' ,' → logprob: -7.001236438751221
    3. ',y' → logprob: -8.251235961914062
    4. ')' → logprob: -10.001235961914062
    5. ' ' → logprob: -12.376235961914062
    6. '+' → logprob: -12.751235961914062
    7. '),' → logprob: -13.001235961914062
    8. '<|end|>' → logprob: -13.126235961914062
    9. '-' → logprob: -13.751235961914062
    10. '‌,' → logprob: -13.876235961914062

Token 58: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004241516347974539
    2. '),' → logprob: -5.879241466522217
    3. '):' → logprob: -6.754241466522217
    4. ' )' → logprob: -8.629241943359375
    5. ').' → logprob: -9.879241943359375
    6. ',' → logprob: -11.004241943359375
    7. '):
' → logprob: -12.254241943359375
    8. '   ' → logprob: -12.629241943359375
    9. ')`' → logprob: -12.879241943359375
    10. ' ),' → logprob: -13.129241943359375

Token 59: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7275437116622925
    2. '   ' → logprob: -0.9775437116622925
    3. ' ' → logprob: -2.977543830871582
    4. '"""' → logprob: -2.977543830871582
    5. '):' → logprob: -4.977543830871582
    6. '\n' → logprob: -5.102543830871582
    7. '```' → logprob: -5.102543830871582
    8. ' """' → logprob: -5.477543830871582
    9. ' )' → logprob: -5.477543830871582
    10. '  
' → logprob: -6.602543830871582

Token 60: ' Conditions' (ID: 39333)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5951879024505615
    2. ')' → logprob: -1.0951879024505615
    3. ' ' → logprob: -2.7201879024505615
    4. '"""' → logprob: -3.8451879024505615
    5. ' """' → logprob: -4.970188140869141
    6. ' )' → logprob: -5.220188140869141
    7. ' ' → logprob: -5.595188140869141
    8. '```' → logprob: -6.095188140869141
    9. '):' → logprob: -6.220188140869141
    10. ' for' → logprob: -6.470188140869141

Token 61: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5949886441230774
    2. ' :' → logprob: -1.2199885845184326
    3. '   ' → logprob: -2.3449885845184326
    4. ' ' → logprob: -3.8449885845184326
    5. ')' → logprob: -4.094988822937012
    6. '):' → logprob: -4.844988822937012
    7. '    ' → logprob: -5.469988822937012
    8. ' )' → logprob: -6.469988822937012
    9. ' ):' → logprob: -6.469988822937012
    10. '  ' → logprob: -7.469988822937012

Token 62: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42365050315856934
    2. ' )' → logprob: -1.2986505031585693
    3. ' ' → logprob: -2.7986505031585693
    4. '    ' → logprob: -5.298650741577148
    5. '   ' → logprob: -5.548650741577148
    6. '```' → logprob: -8.048650741577148
    7. '#' → logprob: -8.298650741577148
    8. ' """' → logprob: -8.298650741577148
    9. ' ```' → logprob: -8.673650741577148
    10. '     
' → logprob: -9.048650741577148

Token 63: ' -' (ID: 533)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8446218967437744
    2. ' ' → logprob: -2.3446218967437744
    3. ' ```' → logprob: -2.3446218967437744
    4. ')' → logprob: -2.5946218967437744
    5. '```' → logprob: -2.5946218967437744
    6. ' )' → logprob: -2.8446218967437744
    7. ' '' → logprob: -3.2196218967437744
    8. ' for' → logprob: -3.5946218967437744
    9. ' return' → logprob: -3.7196218967437744
    10. '   ' → logprob: -3.7196218967437744

Token 64: ' Tous' (ID: 64900)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.165115088224411
    2. 'x' → logprob: -2.1651151180267334
    3. ' y' → logprob: -3.5401151180267334
    4. ' all' → logprob: -5.790114879608154
    5. '   ' → logprob: -6.665114879608154
    6. ' size' → logprob: -7.040114879608154
    7. 'y' → logprob: -7.165114879608154
    8. ' for' → logprob: -7.415114879608154
    9. ' ' → logprob: -7.665114879608154
    10. ' if' → logprob: -8.540115356445312

Token 65: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7073885798454285
    2. '(f' → logprob: -1.0823886394500732
    3. ' les' → logprob: -2.4573886394500732
    4. 'les' → logprob: -3.5823886394500732
    5. ' le' → logprob: -4.082388401031494
    6. '(x' → logprob: -4.457388401031494
    7. '(
' → logprob: -4.957388401031494
    8. ' ' → logprob: -5.582388401031494
    9. 'le' → logprob: -5.707388401031494
    10. ' (' → logprob: -5.832388401031494

Token 66: ' panneaux' (ID: 155485)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3607480823993683
    2. 'cells' → logprob: -2.485748052597046
    3. 'floor' → logprob: -3.235748052597046
    4. 'flo' → logprob: -3.485748052597046
    5. 'tiles' → logprob: -3.735748052597046
    6. 'i' → logprob: -3.860748052597046
    7. 'pixels' → logprob: -4.235748291015625
    8. 'cases' → logprob: -4.360748291015625
    9. ' cells' → logprob: -4.485748291015625
    10. '(x' → logprob: -4.860748291015625

Token 67: ' dans' (ID: 2671)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -1.7185128927230835
    2. ' du' → logprob: -2.093513011932373
    3. 'dans' → logprob: -2.093513011932373
    4. ' de' → logprob: -2.218513011932373
    5. 'sur' → logprob: -2.718513011932373
    6. 's' → logprob: -2.718513011932373
    7. 'd' → logprob: -2.843513011932373
    8. 'import' → logprob: -3.343513011932373
    9. ' dans' → logprob: -3.718513011932373
    10. '[' → logprob: -3.843513011932373

Token 68: ' ce' (ID: 2357)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.64471036195755
    2. 'range' → logprob: -1.0197103023529053
    3. ' la' → logprob: -2.6447103023529053
    4. ' le' → logprob: -3.8947103023529053
    5. 'floor' → logprob: -4.894710540771484
    6. ' floor' → logprob: -5.394710540771484
    7. '   ' → logprob: -6.019710540771484
    8. 'le' → logprob: -6.269710540771484
    9. ' ' → logprob: -6.269710540771484
    10. ' the' → logprob: -7.019710540771484

Token 69: ' carré' (ID: 191546)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.1373871564865112
    2. ' carré' → logprob: -1.6373871564865112
    3. ' range' → logprob: -1.7623871564865112
    4. 'range' → logprob: -1.8873871564865112
    5. '   ' → logprob: -2.512387275695801
    6. ' coin' → logprob: -4.387387275695801
    7. 'floor' → logprob: -4.512387275695801
    8. 'coin' → logprob: -5.262387275695801
    9. 'square' → logprob: -5.262387275695801
    10. 'size' → logprob: -5.512387275695801

Token 70: ' doivent' (ID: 44722)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.07515119016170502
    2. 's' → logprob: -3.575151205062866
    3. ' are' → logprob: -3.700151205062866
    4. ' doivent' → logprob: -4.325150966644287
    5. ' ont' → logprob: -6.825150966644287
    6. 'import' → logprob: -6.950150966644287
    7. '<|end|>' → logprob: -7.075150966644287
    8. ' have' → logprob: -7.325150966644287
    9. 'are' → logprob: -8.200151443481445
    10. '   ' → logprob: -8.325151443481445

Token 71: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.17044812440872192
    2. ' be' → logprob: -2.295448064804077
    3. 'être' → logprob: -3.670448064804077
    4. ' etre' → logprob: -4.420448303222656
    5. ' ' → logprob: -4.920448303222656
    6. '=' → logprob: -6.670448303222656
    7. ' have' → logprob: -6.795448303222656
    8. ''être' → logprob: -6.795448303222656
    9. 's' → logprob: -7.170448303222656
    10. ' avoir' → logprob: -7.295448303222656

Token 72: ' ray' (ID: 22420)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3001075983047485
    2. ' True' → logprob: -1.5501075983047485
    3. ' ' → logprob: -1.8001075983047485
    4. ''' → logprob: -2.550107479095459
    5. '0' → logprob: -2.800107479095459
    6. ' '' → logprob: -3.050107479095459
    7. 'True' → logprob: -3.050107479095459
    8. ''.' → logprob: -4.175107479095459
    9. ' False' → logprob: -4.425107479095459
    10. '"' → logprob: -4.925107479095459

Token 73: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.38815051317214966
    2. 'onn' → logprob: -1.2631504535675049
    3. 'é' → logprob: -3.513150453567505
    4. 'on' → logprob: -6.013150691986084
    5. 'ons' → logprob: -6.263150691986084
    6. 'onnée' → logprob: -6.763150691986084
    7. 'onnement' → logprob: -7.013150691986084
    8. 'onnées' → logprob: -7.263150691986084
    9. 'ée' → logprob: -7.763150691986084
    10. 'ées' → logprob: -7.888150691986084

Token 74: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5244462490081787
    2. '   ' → logprob: -1.6494462490081787
    3. ' )' → logprob: -3.0244462490081787
    4. '.' → logprob: -3.1494462490081787
    5. ',' → logprob: -3.6494462490081787
    6. 's' → logprob: -4.024446487426758
    7. ' ' → logprob: -4.024446487426758
    8. ' (' → logprob: -4.399446487426758
    9. ' and' → logprob: -4.774446487426758
    10. ' or' → logprob: -5.274446487426758

Token 75: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8023449182510376
    2. '1' → logprob: -2.052344799041748
    3. ')' → logprob: -2.677344799041748
    4. ' '' → logprob: -2.802344799041748
    5. ''#' → logprob: -2.927344799041748
    6. ' ' → logprob: -3.052344799041748
    7. ' True' → logprob: -3.177344799041748
    8. ''*' → logprob: -3.927344799041748
    9. '"' → logprob: -4.177344799041748
    10. '#' → logprob: -4.177344799041748

Token 76: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001207615016028285
    2. ').' → logprob: -7.6262078285217285
    3. ' )' → logprob: -7.7512078285217285
    4. '),' → logprob: -9.37620735168457
    5. ')
' → logprob: -9.62620735168457
    6. ' or' → logprob: -9.75120735168457
    7. ')**' → logprob: -11.25120735168457
    8. ' ' → logprob: -11.37620735168457
    9. ',' → logprob: -11.75120735168457
    10. ')

' → logprob: -12.37620735168457

Token 77: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15494218468666077
    2. '   ' → logprob: -2.529942274093628
    3. ' )' → logprob: -2.779942274093628
    4. ' ' → logprob: -7.529942035675049
    5. '"""' → logprob: -7.779942035675049
    6. ' )
' → logprob: -8.029942512512207
    7. ')
' → logprob: -8.904942512512207
    8. ' """' → logprob: -9.029942512512207
    9. '    ' → logprob: -9.904942512512207
    10. '  ' → logprob: -10.404942512512207

Token 78: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3002701699733734
    2. '   ' → logprob: -1.5502701997756958
    3. ' )' → logprob: -3.3002700805664062
    4. ' ' → logprob: -5.800270080566406
    5. '):' → logprob: -5.800270080566406
    6. '"""' → logprob: -6.550270080566406
    7. '```' → logprob: -7.050270080566406
    8. ' """' → logprob: -8.050270080566406
    9. ':' → logprob: -8.050270080566406
    10. ' ):' → logprob: -8.425270080566406

Token 79: ' Le' (ID: 2018)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.2530537843704224
    2. 'x' → logprob: -1.5030537843704224
    3. ' for' → logprob: -2.003053665161133
    4. ' x' → logprob: -2.378053665161133
    5. ' if' → logprob: -2.503053665161133
    6. ')' → logprob: -2.753053665161133
    7. 'for' → logprob: -3.503053665161133
    8. '   ' → logprob: -3.503053665161133
    9. 'y' → logprob: -3.878053665161133
    10. 'if' → logprob: -4.253053665161133

Token 80: ' carré' (ID: 191546)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4330245852470398
    2. ' x' → logprob: -1.9330246448516846
    3. ' y' → logprob: -2.6830246448516846
    4. 'y' → logprob: -3.1830246448516846
    5. 'car' → logprob: -3.3080246448516846
    6. ' size' → logprob: -3.9330246448516846
    7. 'size' → logprob: -4.9330244064331055
    8. ' carré' → logprob: -5.6830244064331055
    9. ' carpet' → logprob: -5.9330244064331055
    10. ' square' → logprob: -5.9330244064331055

Token 81: ' doit' (ID: 21822)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.41838568449020386
    2. ' doit' → logprob: -1.2933857440948486
    3. ' must' → logprob: -3.5433857440948486
    4. ' n' → logprob: -5.0433855056762695
    5. 'size' → logprob: -5.0433855056762695
    6. 'do' → logprob: -5.4183855056762695
    7. 'ne' → logprob: -5.9183855056762695
    8. ' size' → logprob: -6.2933855056762695
    9. ' est' → logprob: -6.4183855056762695
    10. 'must' → logprob: -6.4183855056762695

Token 82: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.9115784168243408
    2. ' rester' → logprob: -1.5365784168243408
    3. ' be' → logprob: -1.7865784168243408
    4. '<|end|>' → logprob: -3.161578416824341
    5. ' not' → logprob: -3.911578416824341
    6. ' rest' → logprob: -3.911578416824341
    7. ' se' → logprob: -4.286578178405762
    8. 's' → logprob: -4.286578178405762
    9. ' continuer' → logprob: -4.411578178405762
    10. ')' → logprob: -4.536578178405762

Token 83: ' entièrement' (ID: 79300)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.9357087016105652
    2. ' entièrement' → logprob: -0.9357087016105652
    3. ' contenu' → logprob: -2.93570876121521
    4. 'conten' → logprob: -2.93570876121521
    5. 'com' → logprob: -3.43570876121521
    6. 'dans' → logprob: -3.81070876121521
    7. 'int' → logprob: -4.810708522796631
    8. ' complètement' → logprob: -4.810708522796631
    9. ' à' → logprob: -5.185708522796631
    10. ' totalement' → logprob: -5.435708522796631

Token 84: ' contenu' (ID: 57581)
  Prédit: ' contenu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contenu' → logprob: -0.9510356783866882
    2. 'conten' → logprob: -1.701035737991333
    3. ' à' → logprob: -1.951035737991333
    4. ' compris' → logprob: -2.201035737991333
    5. 'dans' → logprob: -2.326035737991333
    6. ' dans' → logprob: -3.701035737991333
    7. 'à' → logprob: -4.576035499572754
    8. 'contained' → logprob: -4.576035499572754
    9. ' within' → logprob: -5.201035499572754
    10. ' inclus' → logprob: -5.701035499572754

Token 85: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.38305169343948364
    2. 'dans' → logprob: -1.3830516338348389
    3. ')' → logprob: -2.883051633834839
    4. ' )' → logprob: -4.883051872253418
    5. ' ' → logprob: -6.758051872253418
    6. ' ' → logprob: -7.508051872253418
    7. 'e' → logprob: -7.633051872253418
    8. ' in' → logprob: -8.258051872253418
    9. 's' → logprob: -8.258051872253418
    10. ' within' → logprob: -8.633051872253418

Token 86: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7676102519035339
    2. ' le' → logprob: -0.8926102519035339
    3. ' ' → logprob: -2.7676103115081787
    4. ' l' → logprob: -3.5176103115081787
    5. 'le' → logprob: -3.8926103115081787
    6. ' les' → logprob: -5.7676100730896
    7. ')' → logprob: -5.7676100730896
    8. ' )' → logprob: -6.2676100730896
    9. 'l' → logprob: -6.3926100730896
    10. ' the' → logprob: -6.8926100730896

Token 87: ' plan' (ID: 3496)
  Prédit: ' floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.13648992776870728
    2. 'floor' → logprob: -2.1364898681640625
    3. ' W' → logprob: -6.1364898681640625
    4. 's' → logprob: -6.7614898681640625
    5. ' ' → logprob: -7.0114898681640625
    6. ' H' → logprob: -7.2614898681640625
    7. 'e' → logprob: -7.3864898681640625
    8. ''' → logprob: -7.6989898681640625
    9. ' ' → logprob: -8.198989868164062
    10. ' plafond' → logprob: -8.386489868164062

Token 88: 'cher' (ID: 6665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02570595033466816
    2. ',' → logprob: -4.275705814361572
    3. ' )' → logprob: -4.775705814361572
    4. ')
' → logprob: -6.525705814361572
    5. '.' → logprob: -7.650705814361572
    6. ' ,' → logprob: -8.52570629119873
    7. '   ' → logprob: -8.52570629119873
    8. ',
' → logprob: -8.90070629119873
    9. ').' → logprob: -9.02570629119873
    10. 'e' → logprob: -9.15070629119873

Token 89: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0096517289057374
    2. '   ' → logprob: -4.7596516609191895
    3. ',' → logprob: -7.5096516609191895
    4. ' )' → logprob: -8.759652137756348
    5. '):' → logprob: -9.384652137756348
    6. ').' → logprob: -10.009652137756348
    7. ')
' → logprob: -10.009652137756348
    8. '.' → logprob: -10.634652137756348
    9. '):
' → logprob: -10.634652137756348
    10. ')\' → logprob: -10.884652137756348

Token 90: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08966454863548279
    2. '   ' → logprob: -2.7146644592285156
    3. '):' → logprob: -4.089664459228516
    4. ' )' → logprob: -6.339664459228516
    5. ' ' → logprob: -7.839664459228516
    6. '"""' → logprob: -7.964664459228516
    7. ' ):' → logprob: -9.464664459228516
    8. '```' → logprob: -9.964664459228516
    9. '):
' → logprob: -10.214664459228516
    10. 'n' → logprob: -11.089664459228516

Token 91: ' """
' (ID: 7037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1484377533197403
    2. '   ' → logprob: -2.523437738418579
    3. '):' → logprob: -2.898437738418579
    4. '):
' → logprob: -6.898437976837158
    5. ':' → logprob: -7.148437976837158
    6. '```' → logprob: -8.5234375
    7. ' ' → logprob: -8.6484375
    8. '"""' → logprob: -9.1484375
    9. ')
' → logprob: -9.7734375
    10. '"""
' (adapté à ' """
') → logprob: -9.8984375

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014642092399299145
    2. '\n' → logprob: -5.014642238616943
    3. ' ' → logprob: -5.639642238616943
    4. ' 
' → logprob: -6.514642238616943
    5. '    
' → logprob: -6.639642238616943
    6. ':' → logprob: -8.264641761779785
    7. '   
' → logprob: -8.389641761779785
    8. '    ' → logprob: -8.889641761779785
    9. '\' → logprob: -8.889641761779785
    10. ')' → logprob: -9.139641761779785

Token 93: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.022778034210205
    2. '   ' → logprob: -1.147778034210205
    3. ' if' → logprob: -1.147778034210205
    4. ' ' → logprob: -6.522778034210205
    5. '    ' → logprob: -6.647778034210205
    6. ' 
' → logprob: -6.897778034210205
    7. '```' → logprob: -8.147777557373047
    8. '    
' → logprob: -8.272777557373047
    9. '\n' → logprob: -8.397777557373047
    10. '#' → logprob: -8.772777557373047

Token 94: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04314454644918442
    2. 'x' → logprob: -3.168144464492798
    3. ' ' → logprob: -9.168144226074219
    4. ' not' → logprob: -11.043144226074219
    5. ' y' → logprob: -11.293144226074219
    6. ' ' → logprob: -12.043144226074219
    7. ' (' → logprob: -13.168144226074219
    8. '   ' → logprob: -13.668144226074219
    9. '	x' → logprob: -13.918144226074219
    10. '(x' → logprob: -14.043144226074219

Token 95: ' +' (ID: 659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9256699085235596
    2. ' +' → logprob: -1.0506699085235596
    3. '+' → logprob: -1.8006699085235596
    4. '<' → logprob: -2.4256699085235596
    5. ' or' → logprob: -8.30066967010498
    6. ' ' → logprob: -9.55066967010498
    7. ' >' → logprob: -10.42566967010498
    8. '[' → logprob: -11.30066967010498
    9. '<|end|>' → logprob: -11.42566967010498
    10. '0' → logprob: -11.92566967010498

Token 96: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.01815052703022957
    2. ' size' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.393150329589844
    4. '[size' → logprob: -15.518150329589844
    5. '	size' → logprob: -16.518150329589844
    6. '(size' → logprob: -16.893150329589844
    7. '<|end|>' → logprob: -16.893150329589844
    8. '   ' → logprob: -17.143150329589844
    9. '<size' → logprob: -17.268150329589844
    10. '```' → logprob: -18.268150329589844

Token 97: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3132741451263428
    2. '>' → logprob: -1.3132741451263428
    3. ' ' → logprob: -13.063274383544922
    4. '">' → logprob: -13.063274383544922
    5. '```' → logprob: -13.188274383544922
    6. ' <=' → logprob: -13.938274383544922
    7. ')' → logprob: -13.938274383544922
    8. '<=' → logprob: -14.063274383544922
    9. '-' → logprob: -14.313274383544922
    10. '1' → logprob: -14.563274383544922

Token 98: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.2616959810256958
    2. 'H' → logprob: -1.5116959810256958
    3. ' W' → logprob: -4.761695861816406
    4. ' H' → logprob: -6.761695861816406
    5. '   ' → logprob: -11.886695861816406
    6. ' ' → logprob: -13.136695861816406
    7. '	W' → logprob: -14.011695861816406
    8. 'w' → logprob: -15.136695861816406
    9. '```' → logprob: -15.636695861816406
    10. '	H' → logprob: -16.199195861816406

Token 99: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0009518369333818555
    2. 'or' → logprob: -7.000951766967773
    3. ' ' → logprob: -10.250951766967773
    4. ')' → logprob: -12.875951766967773
    5. ':' → logprob: -13.750951766967773
    6. '	or' → logprob: -14.500951766967773
    7. '<|end|>' → logprob: -15.500951766967773
    8. ' ' → logprob: -15.875951766967773
    9. '   ' → logprob: -16.125951766967773
    10. ' или' → logprob: -16.500951766967773

Token 100: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2015516310930252
    2. 'y' → logprob: -1.7015516757965088
    3. '   ' → logprob: -8.95155143737793
    4. '    ' → logprob: -12.45155143737793
    5. '	y' → logprob: -12.82655143737793
    6. '  ' → logprob: -13.70155143737793
    7. ' ' → logprob: -14.32655143737793
    8. '<|end|>' → logprob: -16.32655143737793
    9. '       ' → logprob: -16.70155143737793
    10. '‘y' → logprob: -16.70155143737793

Token 101: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0067156096920371056
    2. '+' → logprob: -5.006715774536133
    3. '<|end|>' → logprob: -15.506715774536133
    4. ' ' → logprob: -18.131715774536133
    5. ' +
' → logprob: -19.006715774536133
    6. '<|end|>' → logprob: -19.256715774536133
    7. '＋' → logprob: -19.631715774536133
    8. ' plus' → logprob: -19.756715774536133
    9. ' ' → logprob: -20.131715774536133
    10. '>' → logprob: -20.506715774536133

Token 102: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.1602313369512558
    2. ' size' → logprob: -1.910231351852417
    3. ' ' → logprob: -12.660231590270996
    4. '(size' → logprob: -13.535231590270996
    5. '<|end|>' → logprob: -14.035231590270996
    6. '[size' → logprob: -14.410231590270996
    7. '	size' → logprob: -14.660231590270996
    8. '<size' → logprob: -15.660231590270996
    9. '_size' → logprob: -15.910231590270996
    10. 'sizei' → logprob: -16.16023063659668

Token 103: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2519325911998749
    2. '>' → logprob: -1.5019326210021973
    3. '<|end|>' → logprob: -13.501932144165039
    4. ')' → logprob: -15.001932144165039
    5. '">' → logprob: -15.126932144165039
    6. '()>' → logprob: -15.126932144165039
    7. ' ' → logprob: -15.126932144165039
    8. '```' → logprob: -16.12693214416504
    9. ')>' → logprob: -16.12693214416504
    10. ' ' → logprob: -16.12693214416504

Token 104: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01815052703022957
    2. ' H' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.018150329589844
    4. ' ' → logprob: -15.643150329589844
    5. '<|end|>' → logprob: -15.768150329589844
    6. '	H' → logprob: -17.393150329589844
    7. '  ' → logprob: -19.018150329589844
    8. ',' → logprob: -19.518150329589844
    9. '```' → logprob: -19.518150329589844
    10. 'HBox' → logprob: -19.518150329589844

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004140379838645458
    2. ':
' → logprob: -6.254140377044678
    3. '   ' → logprob: -6.629140377044678
    4. ':return' → logprob: -7.129140377044678
    5. '       ' → logprob: -10.004140853881836
    6. ' :' → logprob: -10.629140853881836
    7. ' or' → logprob: -11.629140853881836
    8. '):' → logprob: -13.379140853881836
    9. '<|end|>' → logprob: -13.379140853881836
    10. ')' → logprob: -13.754140853881836

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0308502409607172
    2. '   ' → logprob: -3.5308501720428467
    3. ' return' → logprob: -7.405850410461426
    4. '
' → logprob: -7.780850410461426
    5. '\n' → logprob: -10.655850410461426
    6. 'return' → logprob: -11.030850410461426
    7. '    ' → logprob: -12.030850410461426
    8. ':return' → logprob: -12.280850410461426
    9. '    
' → logprob: -12.405850410461426
    10. ' 
' → logprob: -12.655850410461426

Token 107: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5172432065010071
    2. '   ' → logprob: -1.6422431468963623
    3. '       ' → logprob: -1.8922431468963623
    4. '
' → logprob: -3.3922431468963623
    5. 'return' (adapté à ' return') → logprob: -3.8922431468963623
    6. ' 
' → logprob: -5.517243385314941
    7. '    ' → logprob: -7.267243385314941
    8. '	return' → logprob: -7.642243385314941
    9. ' ' → logprob: -9.017243385314941
    10. '  
' → logprob: -10.142243385314941

Token 108: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2519293427467346
    2. ' False' → logprob: -1.5019292831420898
    3. 'True' → logprob: -16.251930236816406
    4. '(False' → logprob: -16.376930236816406
    5. ' True' → logprob: -16.876930236816406
    6. '   ' → logprob: -18.376930236816406
    7. 'None' → logprob: -18.751930236816406
    8. '=False' → logprob: -19.376930236816406
    9. ' None' → logprob: -19.626930236816406
    10. 'F' → logprob: -20.251930236816406

Token 109: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5043322443962097
    2. '
' → logprob: -1.7543323040008545
    3. '<|end|>' → logprob: -2.0043323040008545
    4. '\n' → logprob: -2.6293323040008545
    5. '    
' → logprob: -4.879332065582275
    6. '  
' → logprob: -6.004332065582275
    7. 'n' → logprob: -6.379332065582275
    8. ')' → logprob: -6.629332065582275
    9. '<|end|>' → logprob: -7.129332065582275
    10. ' 
' → logprob: -8.004332542419434

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.553332507610321
    2. '
' → logprob: -1.1783325672149658
    3. '<|end|>' → logprob: -2.428332567214966
    4. '    
' → logprob: -4.053332328796387
    5. '  
' → logprob: -5.053332328796387
    6. '\n' → logprob: -6.303332328796387
    7. '<|end|>' → logprob: -6.803332328796387
    8. '```' → logprob: -7.178332328796387
    9. '   
' → logprob: -7.553332328796387
    10. ' 
' → logprob: -7.678332328796387

Token 111: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43086180090904236
    2. ' for' → logprob: -1.6808618307113647
    3. '
' → logprob: -1.9308618307113647
    4. 'for' (adapté à ' for') → logprob: -4.430861949920654
    5. '    
' → logprob: -6.055861949920654
    6. '\n' → logprob: -6.555861949920654
    7. '<|end|>' → logprob: -6.680861949920654
    8. '  
' → logprob: -6.805861949920654
    9. '   
' → logprob: -8.305861473083496
    10. ' 
' → logprob: -8.805861473083496

Token 112: ' dy' (ID: 11996)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6508996486663818
    2. 'i' → logprob: -0.7758996486663818
    3. ' dy' → logprob: -4.775899887084961
    4. 'dy' → logprob: -5.650899887084961
    5. ' j' → logprob: -5.775899887084961
    6. 'j' → logprob: -6.025899887084961
    7. 'dx' → logprob: -8.275899887084961
    8. ' dx' → logprob: -8.650899887084961
    9. '   ' → logprob: -9.775899887084961
    10. ' iy' → logprob: -10.025899887084961

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014185951091349125
    2. 'in' → logprob: -4.264185905456543
    3. ' ' → logprob: -11.889185905456543
    4. '   ' → logprob: -12.639185905456543
    5. 'range' → logprob: -12.889185905456543
    6. 'import' → logprob: -13.514185905456543
    7. '```' → logprob: -13.764185905456543
    8. '<|end|>' → logprob: -14.139185905456543
    9. 'd' → logprob: -14.264185905456543
    10. 'n' → logprob: -14.389185905456543

Token 114: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020699352025986
    2. 'range' → logprob: -2.3502070903778076
    3. '	range' → logprob: -15.350207328796387
    4. '(range' → logprob: -16.72520637512207
    5. ' xrange' → logprob: -17.85020637512207
    6. '.range' → logprob: -19.22520637512207
    7. '_range' → logprob: -19.22520637512207
    8. ' rang' → logprob: -19.35020637512207
    9. 'rang' → logprob: -19.47520637512207
    10. ' rango' → logprob: -20.10020637512207

Token 115: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. 'size' → logprob: -16.625001907348633
    4. '(y' → logprob: -16.875001907348633
    5. '<size' → logprob: -17.000001907348633
    6. ' (' → logprob: -17.250001907348633
    7. '[size' → logprob: -17.500001907348633
    8. '=size' → logprob: -18.000001907348633
    9. ' size' → logprob: -18.875001907348633
    10. '(s' → logprob: -19.000001907348633

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036191970575600863
    2. '):
' → logprob: -5.628619194030762
    3. ':' → logprob: -12.128619194030762
    4. '   ' → logprob: -12.128619194030762
    5. ' ):' → logprob: -12.378619194030762
    6. ')' → logprob: -13.128619194030762
    7. '):
' → logprob: -14.503619194030762
    8. '<|end|>' → logprob: -14.878619194030762
    9. '):

' → logprob: -15.003619194030762
    10. '**' → logprob: -15.503619194030762

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20448680222034454
    2. '<|end|>' → logprob: -1.7044868469238281
    3. '<|end|>' → logprob: -6.579486846923828
    4. '   ' → logprob: -7.329486846923828
    5. ' for' → logprob: -7.579486846923828
    6. '
' → logprob: -8.954486846923828
    7. '        
' → logprob: -9.454486846923828
    8. ':' → logprob: -9.954486846923828
    9. ',' → logprob: -10.079486846923828
    10. '    ' → logprob: -10.204486846923828

Token 118: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0872475877404213
    2. 'for' (adapté à ' for') → logprob: -2.587247610092163
    3. '       ' → logprob: -5.087247371673584
    4. ' if' → logprob: -6.712247371673584
    5. '   ' → logprob: -7.337247371673584
    6. 'if' → logprob: -8.837247848510742
    7. '    ' → logprob: -9.587247848510742
    8. ' ' → logprob: -10.337247848510742
    9. '        ' → logprob: -11.587247848510742
    10. ' x' → logprob: -11.837247848510742

Token 119: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.3868732452392578
    2. ' dx' → logprob: -1.1368732452392578
    3. '_dx' → logprob: -13.761873245239258
    4. '(dx' → logprob: -14.511873245239258
    5. '   ' → logprob: -15.386873245239258
    6. 'DX' → logprob: -16.136873245239258
    7. '```' → logprob: -16.261873245239258
    8. 'x' → logprob: -16.761873245239258
    9. 'd' → logprob: -16.761873245239258
    10. '.dx' → logprob: -16.886873245239258

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019799028523266315
    2. 'in' → logprob: -6.251979827880859
    3. ' ' → logprob: -10.75197982788086
    4. '   ' → logprob: -11.12697982788086
    5. '    ' → logprob: -11.75197982788086
    6. '        ' → logprob: -13.25197982788086
    7. '<|end|>' → logprob: -13.62697982788086
    8. '       ' → logprob: -14.37697982788086
    9. 'import' → logprob: -14.50197982788086
    10. '  ' → logprob: -14.50197982788086

Token 121: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12720106542110443
    2. ' range' → logprob: -2.1272010803222656
    3. 'size' → logprob: -8.377201080322266
    4. ' size' → logprob: -10.127201080322266
    5. '(range' → logprob: -12.877201080322266
    6. '	range' → logprob: -15.752201080322266
    7. ' ' → logprob: -16.752201080322266
    8. '(size' → logprob: -18.252201080322266
    9. ' xrange' → logprob: -18.502201080322266
    10. '[size' → logprob: -18.752201080322266

Token 122: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.0009832700015977025
    2. 'size' → logprob: -7.250983238220215
    3. 'range' → logprob: -8.875983238220215
    4. '(' → logprob: -9.375983238220215
    5. '(range' → logprob: -10.000983238220215
    6. 'in' → logprob: -13.250983238220215
    7. ' (' → logprob: -14.750983238220215
    8. ' size' → logprob: -14.875983238220215
    9. '[size' → logprob: -15.000983238220215
    10. '=size' → logprob: -16.12598419189453

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18000046908855438
    2. '):
' → logprob: -1.8050004243850708
    3. '       ' → logprob: -9.055000305175781
    4. '   ' → logprob: -9.555000305175781
    5. ':' → logprob: -10.930000305175781
    6. '):
' → logprob: -11.680000305175781
    7. '):

' → logprob: -11.680000305175781
    8. '<|end|>' → logprob: -11.680000305175781
    9. ' ):' → logprob: -12.305000305175781
    10. ')' → logprob: -12.555000305175781

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007107836194336414
    2. '       ' → logprob: -5.507107734680176
    3. ' if' → logprob: -6.132107734680176
    4. '<|end|>' → logprob: -8.132107734680176
    5. '            
' → logprob: -9.007107734680176
    6. '
' → logprob: -9.132107734680176
    7. '               ' → logprob: -9.632107734680176
    8. 'if' → logprob: -9.757107734680176
    9. '        
' → logprob: -10.382107734680176
    10. ',' → logprob: -10.757107734680176

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06294569373130798
    2. 'if' (adapté à ' if') → logprob: -3.687945604324341
    3. '           ' → logprob: -3.812945604324341
    4. '               ' → logprob: -4.31294584274292
    5. '       ' → logprob: -8.562945365905762
    6. '<|end|>' → logprob: -9.062945365905762
    7. '            
' → logprob: -10.312945365905762
    8. '
' → logprob: -10.312945365905762
    9. '```' → logprob: -10.562945365905762
    10. '   ' → logprob: -10.937945365905762

Token 126: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.28669869899749756
    2. ' floor' → logprob: -1.4116986989974976
    3. ' not' → logprob: -5.786698818206787
    4. 'not' → logprob: -6.036698818206787
    5. '   ' → logprob: -10.036698341369629
    6. 'flo' → logprob: -11.411698341369629
    7. '_floor' → logprob: -12.411698341369629
    8. '    ' → logprob: -13.224198341369629
    9. ' ' → logprob: -13.286698341369629
    10. ' flo' → logprob: -13.474198341369629

Token 127: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.8670179997570813e-05
    2. 'y' → logprob: -11.875019073486328
    3. '[x' → logprob: -11.875019073486328
    4. '[' → logprob: -12.750019073486328
    5. '```' → logprob: -14.250019073486328
    6. '[Y' → logprob: -15.500019073486328
    7. ' [' → logprob: -15.750019073486328
    8. '][' → logprob: -15.750019073486328
    9. '   ' → logprob: -16.000019073486328
    10. '[f' → logprob: -16.750019073486328

Token 128: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07271269708871841
    2. ' +' → logprob: -3.0727126598358154
    3. '][' → logprob: -3.8227126598358154
    4. '+x' → logprob: -6.4477128982543945
    5. '+y' → logprob: -8.447712898254395
    6. '[' → logprob: -9.447712898254395
    7. '[x' → logprob: -9.697712898254395
    8. ']' → logprob: -12.197712898254395
    9. '[y' → logprob: -12.322712898254395
    10. '+d' → logprob: -12.447712898254395

Token 129: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.28213760256767273
    2. 'x' → logprob: -1.4071376323699951
    3. 'dx' → logprob: -7.657137393951416
    4. ' dy' → logprob: -7.657137393951416
    5. '   ' → logprob: -11.282137870788574
    6. ' x' → logprob: -11.907137870788574
    7. '```' → logprob: -12.157137870788574
    8. 'y' → logprob: -13.157137870788574
    9. '.dy' → logprob: -13.157137870788574
    10. ']' → logprob: -13.282137870788574

Token 130: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007237526006065309
    2. '[x' → logprob: -7.750723838806152
    3. '[y' → logprob: -8.625723838806152
    4. ' ][' → logprob: -9.250723838806152
    5. '[' → logprob: -11.625723838806152
    6. ']' → logprob: -12.000723838806152
    7. '   ' → logprob: -14.125723838806152
    8. '```' → logprob: -14.625723838806152
    9. ''][' → logprob: -15.000723838806152
    10. ' [' → logprob: -15.125723838806152

Token 131: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.896309739408025e-07
    2. ' x' → logprob: -14.125000953674316
    3. '(x' → logprob: -17.25
    4. '
' → logprob: -18.125
    5. '   ' → logprob: -18.75
    6. '	x' → logprob: -19.25
    7. '```' → logprob: -19.625
    8. '"x' → logprob: -20.0
    9. ''x' → logprob: -20.375
    10. '(' → logprob: -20.625

Token 132: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012685667024925351
    2. '+x' → logprob: -6.75126838684082
    3. ' +' → logprob: -9.25126838684082
    4. '+xml' → logprob: -14.25126838684082
    5. ']' → logprob: -14.87626838684082
    6. '+]' → logprob: -15.25126838684082
    7. '+
' → logprob: -15.25126838684082
    8. ']+' → logprob: -15.25126838684082
    9. '][' → logprob: -15.62626838684082
    10. 'dx' → logprob: -16.75126838684082

Token 133: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0030689798295497894
    2. 'x' → logprob: -5.878068923950195
    3. ' dx' → logprob: -8.253068923950195
    4. '(dx' → logprob: -14.128068923950195
    5. '_dx' → logprob: -14.253068923950195
    6. ' ' → logprob: -14.628068923950195
    7. 'xd' → logprob: -15.003068923950195
    8. '+' → logprob: -15.503068923950195
    9. '   ' → logprob: -15.878068923950195
    10. '0' → logprob: -16.003068923950195

Token 134: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036519800778478384
    2. ' ]' → logprob: -5.878652095794678
    3. ']!=' → logprob: -7.878652095794678
    4. ']==' → logprob: -7.878652095794678
    5. ' !=' → logprob: -10.12865161895752
    6. '']' → logprob: -10.50365161895752
    7. '==' → logprob: -11.87865161895752
    8. '!=' → logprob: -11.87865161895752
    9. '"]' → logprob: -12.62865161895752
    10. ' ==' → logprob: -13.25365161895752

Token 135: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.0379223823547363
    2. '!=' → logprob: -1.0379223823547363
    3. '==' → logprob: -1.4129223823547363
    4. ' ==' → logprob: -3.0379223823547363
    5. ']==' → logprob: -9.162921905517578
    6. ']' → logprob: -10.287921905517578
    7. ')' → logprob: -10.412921905517578
    8. ']!=' → logprob: -10.412921905517578
    9. '```' → logprob: -10.787921905517578
    10. ')!=' → logprob: -11.662921905517578

Token 136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02975187823176384
    2. ' ' → logprob: -3.529751777648926
    3. ''' → logprob: -14.279751777648926
    4. '   ' → logprob: -15.467251777648926
    5. ' ' → logprob: -15.967251777648926
    6. '    ' → logprob: -16.654752731323242
    7. '  ' → logprob: -17.029752731323242
    8. '۰' → logprob: -17.217252731323242
    9. 'False' → logprob: -17.467252731323242
    10. '.' → logprob: -17.654752731323242

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002075933152809739
    2. ' ' → logprob: -8.500207901000977
    3. ''' → logprob: -13.375207901000977
    4. '.' → logprob: -13.625207901000977
    5. '   ' → logprob: -14.812707901000977
    6. '    ' → logprob: -15.625207901000977
    7. 'False' → logprob: -16.312707901000977
    8. ''.' → logprob: -16.500207901000977
    9. '  ' → logprob: -16.750207901000977
    10. '_' → logprob: -17.312707901000977

Token 138: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012898309156298637
    2. ':
' → logprob: -4.6378984451293945
    3. ':return' → logprob: -5.8878984451293945
    4. '               ' → logprob: -8.512898445129395
    5. '           ' → logprob: -9.637898445129395
    6. '):' → logprob: -10.262898445129395
    7. '<|end|>' → logprob: -11.262898445129395
    8. '):
' → logprob: -11.262898445129395
    9. ' :' → logprob: -11.512898445129395
    10. ')' → logprob: -11.512898445129395

Token 139: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019418458687141538
    2. ' return' → logprob: -7.001941680908203
    3. 'return' → logprob: -7.251941680908203
    4. '                   ' → logprob: -8.376941680908203
    5. '           ' → logprob: -10.126941680908203
    6. '                               ' → logprob: -11.251941680908203
    7. '                       ' → logprob: -11.501941680908203
    8. '
' → logprob: -11.751941680908203
    9. '                           ' → logprob: -12.001941680908203
    10. '                
' → logprob: -12.751941680908203

Token 140: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08963239938020706
    2. 'return' → logprob: -2.589632511138916
    3. ' return' → logprob: -4.589632511138916
    4. '                   ' → logprob: -8.214632034301758
    5. '           ' → logprob: -8.964632034301758
    6. '
' → logprob: -9.464632034301758
    7. '                       ' → logprob: -10.964632034301758
    8. '	return' → logprob: -11.214632034301758
    9. '   ' → logprob: -11.964632034301758
    10. ':return' → logprob: -12.214632034301758

Token 141: ' panneau' (ID: 186597)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.045226141810417175
    2. 'return' → logprob: -3.1702260971069336
    3. '               ' → logprob: -6.295226097106934
    4. '           ' → logprob: -8.545226097106934
    5. ':return' → logprob: -9.920226097106934
    6. ' 
' → logprob: -10.795226097106934
    7. '                ' → logprob: -11.295226097106934
    8. ' ' → logprob: -11.295226097106934
    9. '
' → logprob: -11.295226097106934
    10. '                   ' → logprob: -11.545226097106934

Token 142: ' intact' (ID: 53845)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0345650911331177
    2. '<|end|>' → logprob: -1.2845650911331177
    3. ' non' → logprob: -2.159564971923828
    4. '           ' → logprob: -2.534564971923828
    5. ' is' → logprob: -3.159564971923828
    6. ' n' → logprob: -3.284564971923828
    7. '               ' → logprob: -3.284564971923828
    8. ' ==' → logprob: -5.159564971923828
    9. 'n' → logprob: -5.159564971923828
    10. 'not' → logprob: -5.284564971923828

Token 143: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19722671806812286
    2. ':return' → logprob: -2.8222267627716064
    3. ':' → logprob: -2.9472267627716064
    4. '           ' → logprob: -3.3222267627716064
    5. ':
' → logprob: -3.6972267627716064
    6. ' return' → logprob: -6.697226524353027
    7. '                       ' → logprob: -6.822226524353027
    8. '<|end|>' → logprob: -7.197226524353027
    9. 'return' → logprob: -7.447226524353027
    10. '                   ' → logprob: -7.447226524353027

Token 144: ' ne' (ID: 453)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31509414315223694
    2. ' return' → logprob: -1.5650941133499146
    3. 'return' → logprob: -2.815094232559204
    4. '                       ' → logprob: -7.315093994140625
    5. '                   ' → logprob: -7.565093994140625
    6. '           ' → logprob: -9.690093994140625
    7. '                           ' → logprob: -10.815093994140625
    8. ':return' → logprob: -11.315093994140625
    9. '                               ' → logprob: -11.440093994140625
    10. '```' → logprob: -12.065093994140625

Token 145: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.23404474556446075
    2. 'pe' → logprob: -2.2340447902679443
    3. 'pas' → logprob: -3.1090447902679443
    4. ' permet' → logprob: -3.4840447902679443
    5. ' pas' → logprob: -4.484044551849365
    6. ' peux' → logprob: -4.984044551849365
    7. ' pass' → logprob: -6.109044551849365
    8. 'pass' → logprob: -6.484044551849365
    9. ' convient' → logprob: -6.859044551849365
    10. 'p' → logprob: -7.609044551849365

Token 146: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.3521447777748108
    2. 'pas' → logprob: -1.227144718170166
    3. ' être' → logprob: -6.352144718170166
    4. 'être' → logprob: -6.602144718170166
    5. ' be' → logprob: -8.102145195007324
    6. '_pas' → logprob: -9.227145195007324
    7. ' ' → logprob: -10.602145195007324
    8. 'pass' → logprob: -10.727145195007324
    9. 'not' → logprob: -10.852145195007324
    10. 'Pas' → logprob: -11.227145195007324

Token 147: ' couvrir' (ID: 197187)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.9784569144248962
    2. ' être' → logprob: -1.353456974029541
    3. ' be' → logprob: -1.603456974029541
    4. 'placer' → logprob: -2.478456974029541
    5. 'poser' → logprob: -3.978456974029541
    6. 'be' → logprob: -3.978456974029541
    7. 'pas' → logprob: -4.228456974029541
    8. ' poser' → logprob: -5.853456974029541
    9. '<|end|>' → logprob: -5.978456974029541
    10. 'placement' → logprob: -5.978456974029541

Token 148: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10499176383018494
    2. '           ' → logprob: -3.3549916744232178
    3. 'return' → logprob: -3.9799916744232178
    4. ' return' → logprob: -4.354991912841797
    5. ':return' → logprob: -4.479991912841797
    6. '                   ' → logprob: -5.354991912841797
    7. ':' → logprob: -5.479991912841797
    8. ':
' → logprob: -5.479991912841797
    9. ')' → logprob: -5.729991912841797
    10. '                       ' → logprob: -5.854991912841797

Token 149: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013988104183226824
    2. '           ' → logprob: -8.001399040222168
    3. '                   ' → logprob: -8.126399040222168
    4. 'return' → logprob: -8.251399040222168
    5. ' return' → logprob: -8.376399040222168
    6. '                       ' → logprob: -8.751399040222168
    7. ':return' → logprob: -10.376399040222168
    8. ':
' → logprob: -10.501399040222168
    9. '                
' → logprob: -11.001399040222168
    10. '                           ' → logprob: -11.751399040222168

Token 150: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48279863595962524
    2. 'return' (adapté à ' return') → logprob: -0.9827986359596252
    3. '                   ' → logprob: -4.8577985763549805
    4. '               ' → logprob: -7.3577985763549805
    5. '                ' → logprob: -9.35779857635498
    6. ' 
' → logprob: -9.48279857635498
    7. '
' → logprob: -9.85779857635498
    8. '                       ' → logprob: -10.60779857635498
    9. '                    
' → logprob: -11.60779857635498
    10. '                    ' → logprob: -12.48279857635498

Token 151: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. 'True' → logprob: -20.875009536743164
    4. '(False' → logprob: -22.250009536743164
    5. '_false' → logprob: -22.625009536743164
    6. '=False' → logprob: -23.000009536743164
    7. 'false' → logprob: -23.000009536743164
    8. '.False' → logprob: -25.125009536743164
    9. 'FALSE' → logprob: -25.250009536743164
    10. 'Falsy' → logprob: -25.375009536743164

Token 152: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6217362284660339
    2. '<|end|>' → logprob: -1.6217362880706787
    3. ' return' → logprob: -2.3717362880706787
    4. 'return' → logprob: -2.6217362880706787
    5. '
' → logprob: -3.1217362880706787
    6. '<|end|>' → logprob: -4.2467360496521
    7. '	return' → logprob: -4.6217360496521
    8. '    
' → logprob: -4.7467360496521
    9. '  
' → logprob: -5.1217360496521
    10. ')' → logprob: -5.2467360496521

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05110207945108414
    2. ' return' → logprob: -3.4261021614074707
    3. 'return' → logprob: -4.551102161407471
    4. '
' → logprob: -6.176102161407471
    5. '	return' → logprob: -6.301102161407471
    6. '    
' → logprob: -7.051102161407471
    7. '<|end|>' → logprob: -7.676102161407471
    8. '       ' → logprob: -7.926102161407471
    9. '  
' → logprob: -8.051101684570312
    10. ')' → logprob: -8.051101684570312

Token 154: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1534169763326645
    2. '   ' → logprob: -2.153416872024536
    3. ' return' → logprob: -3.653416872024536
    4. '	return' → logprob: -8.903416633605957
    5. 'Return' → logprob: -10.778416633605957
    6. 'eturn' → logprob: -10.903416633605957
    7. ':return' → logprob: -10.903416633605957
    8. '       ' → logprob: -11.653416633605957
    9. ' ' → logprob: -11.778416633605957
    10. '```' → logprob: -11.903416633605957

Token 155: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. '(True' → logprob: -18.133615493774414
    4. '   ' → logprob: -19.883615493774414
    5. 'true' → logprob: -20.633615493774414
    6. 'False' → logprob: -21.258615493774414
    7. 'Tr' → logprob: -21.883615493774414
    8. '=True' → logprob: -22.008615493774414
    9. '1' → logprob: -23.508615493774414
    10. 'TRUE' → logprob: -23.883615493774414

Token 156: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.292907877039397e-06
    2. '\' → logprob: -13.75000286102295
    3. ' def' → logprob: -14.37500286102295
    4. '
' → logprob: -14.75000286102295
    5. '```' → logprob: -14.75000286102295
    6. '#' → logprob: -15.37500286102295
    7. 'de' → logprob: -15.37500286102295
    8. 'ndef' → logprob: -16.375003814697266
    9. '\n' → logprob: -16.375003814697266
    10. ' 
' → logprob: -17.125003814697266

Token 158: ' place' (ID: 2475)
  Prédit: ' place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.7234810590744019
    2. ' cover' → logprob: -1.3484810590744019
    3. ' solve' → logprob: -2.5984811782836914
    4. ' can' → logprob: -2.8484811782836914
    5. ' find' → logprob: -3.3484811782836914
    6. ' max' → logprob: -3.4734811782836914
    7. ' back' → logprob: -3.7234811782836914
    8. ' count' → logprob: -5.098481178283691
    9. ' try' → logprob: -5.598481178283691
    10. ' dfs' → logprob: -6.098481178283691

Token 159: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0006403613369911909
    2. '_' → logprob: -7.500640392303467
    3. '_floor' → logprob: -9.625639915466309
    4. '_c' → logprob: -11.500639915466309
    5. 'car' → logprob: -12.750639915466309
    6. 'Car' → logprob: -13.375639915466309
    7. ' _' → logprob: -13.625639915466309
    8. '_f' → logprob: -13.750639915466309
    9. '(car' → logprob: -13.750639915466309
    10. '_square' → logprob: -14.250639915466309

Token 160: 'pet' (ID: 9456)
  Prédit: 'pet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.00039968726923689246
    2. '_pet' → logprob: -8.625399589538574
    3. 'p' → logprob: -9.500399589538574
    4. 'et' → logprob: -10.375399589538574
    5. '_p' → logprob: -11.250399589538574
    6. '_' → logprob: -11.250399589538574
    7. '```' → logprob: -11.375399589538574
    8. 'pets' → logprob: -11.500399589538574
    9. 'pe' → logprob: -11.750399589538574
    10. 'pt' → logprob: -11.875399589538574

Token 161: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.16046194732189178
    2. '(' → logprob: -1.9104619026184082
    3. ' (' → logprob: -8.660462379455566
    4. '_floor' → logprob: -10.410462379455566
    5. '_' → logprob: -11.285462379455566
    6. '(x' → logprob: -11.785462379455566
    7. '(car' → logprob: -12.535462379455566
    8. '_(' → logprob: -13.410462379455566
    9. '(F' → logprob: -13.410462379455566
    10. '(size' → logprob: -13.410462379455566

Token 162: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.016850164160132408
    2. 'loo' → logprob: -4.391849994659424
    3. 'lo' → logprob: -6.516849994659424
    4. 'l' → logprob: -6.766849994659424
    5. '(' → logprob: -7.016849994659424
    6. 'oor' → logprob: -7.391849994659424
    7. '_' → logprob: -9.266850471496582
    8. 'loop' → logprob: -11.016850471496582
    9. 'loot' → logprob: -11.141850471496582
    10. '[' → logprob: -11.641850471496582

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007020648336037993
    2. ',f' → logprob: -7.500701904296875
    3. ' ,' → logprob: -8.875701904296875
    4. ')' → logprob: -13.125701904296875
    5. ',y' → logprob: -13.250701904296875
    6. '(f' → logprob: -13.500701904296875
    7. '   ' → logprob: -13.750701904296875
    8. 'floor' → logprob: -14.000701904296875
    9. ',x' → logprob: -14.750701904296875
    10. ',
' → logprob: -15.375701904296875

Token 164: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5232099890708923
    2. ' x' → logprob: -0.8982099890708923
    3. 'W' → logprob: -11.273209571838379
    4. ')' → logprob: -11.398209571838379
    5. ' W' → logprob: -11.398209571838379
    6. ' ' → logprob: -12.273209571838379
    7. 'def' → logprob: -12.523209571838379
    8. 'visited' → logprob: -12.898209571838379
    9. 'car' → logprob: -12.960709571838379
    10. 'f' → logprob: -13.023209571838379

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033034008811227977
    2. ' ,' → logprob: -8.375329971313477
    3. '+' → logprob: -9.375329971313477
    4. ',y' → logprob: -11.750329971313477
    5. ' +' → logprob: -12.875329971313477
    6. '+,' → logprob: -12.875329971313477
    7. ')' → logprob: -14.625329971313477
    8. 'def' → logprob: -15.000329971313477
    9. '   ' → logprob: -15.125329971313477
    10. '+y' → logprob: -15.750329971313477

Token 166: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00975833274424076
    2. ' y' → logprob: -4.634758472442627
    3. '<|end|>' → logprob: -13.259757995605469
    4. '	y' → logprob: -15.884757995605469
    5. ' ' → logprob: -16.00975799560547
    6. ',' → logprob: -16.25975799560547
    7. 'x' → logprob: -16.38475799560547
    8. ',y' → logprob: -16.63475799560547
    9. '   ' → logprob: -18.00975799560547
    10. '
' → logprob: -18.00975799560547

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7994282795116305e-05
    2. ' ,' → logprob: -10.25004768371582
    3. ',size' → logprob: -11.37504768371582
    4. ')' → logprob: -15.12504768371582
    5. 'size' → logprob: -15.37504768371582
    6. '),' → logprob: -15.75004768371582
    7. '   ' → logprob: -16.37504768371582
    8. '‌,' → logprob: -16.62504768371582
    9. '[size' → logprob: -16.75004768371582
    10. 'def' → logprob: -17.00004768371582

Token 168: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.20143146812915802
    2. ' size' → logprob: -1.7014315128326416
    3. '   ' → logprob: -12.451431274414062
    4. 's' → logprob: -12.576431274414062
    5. ' ' → logprob: -12.826431274414062
    6. 'max' → logprob: -13.701431274414062
    7. ')' → logprob: -14.076431274414062
    8. '[size' → logprob: -14.076431274414062
    9. '	size' → logprob: -14.326431274414062
    10. '
' → logprob: -14.951431274414062

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6340615153312683
    2. '):' → logprob: -0.7590615153312683
    3. '):
' → logprob: -6.884061336517334
    4. ')' → logprob: -8.259061813354492
    5. ' ,' → logprob: -9.509061813354492
    6. ' ):' → logprob: -9.759061813354492
    7. '   ' → logprob: -10.884061813354492
    8. '):
' → logprob: -11.884061813354492
    9. ':' → logprob: -12.509061813354492
    10. '):

' → logprob: -12.634061813354492

Token 170: ' val' (ID: 1459)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.055031344294548035
    2. ' W' → logprob: -2.9300312995910645
    3. '   ' → logprob: -9.680031776428223
    4. ')' → logprob: -10.430031776428223
    5. ' ' → logprob: -10.680031776428223
    6. 'H' → logprob: -11.680031776428223
    7. '  ' → logprob: -11.930031776428223
    8. '    ' → logprob: -12.055031776428223
    9. 'True' → logprob: -12.930031776428223
    10. '1' → logprob: -13.805031776428223

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04991360753774643
    2. '):
' → logprob: -3.1749136447906494
    3. ')' → logprob: -5.29991340637207
    4. 'ue' → logprob: -6.79991340637207
    5. '=' → logprob: -7.29991340637207
    6. 'u' → logprob: -9.92491340637207
    7. '):

' → logprob: -10.79991340637207
    8. ',' → logprob: -11.29991340637207
    9. '=None' → logprob: -12.29991340637207
    10. 'ues' → logprob: -12.54991340637207

Token 172: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22982411086559296
    2. '   ' → logprob: -1.6048240661621094
    3. ':
' → logprob: -5.854824066162109
    4. '):' → logprob: -7.354824066162109
    5. '<|end|>' → logprob: -7.604824066162109
    6. ' :' → logprob: -9.22982406616211
    7. ')' → logprob: -9.35482406616211
    8. '```' → logprob: -10.35482406616211
    9. '):
' → logprob: -10.35482406616211
    10. '    
' → logprob: -10.85482406616211

Token 173: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004113900475203991
    2. ' for' → logprob: -5.629113674163818
    3. ':' → logprob: -8.254114151000977
    4. 'for' → logprob: -8.879114151000977
    5. '
' → logprob: -10.004114151000977
    6. '    
' → logprob: -10.379114151000977
    7. ':
' → logprob: -11.504114151000977
    8. '	for' → logprob: -11.754114151000977
    9. '```' → logprob: -11.879114151000977
    10. '   ' → logprob: -13.254114151000977

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2849140763282776
    2. ' for' → logprob: -1.6599140167236328
    3. 'for' → logprob: -2.909914016723633
    4. '    ' → logprob: -6.034914016723633
    5. ' ' → logprob: -8.409914016723633
    6. ' #' → logprob: -9.284914016723633
    7. ' """' → logprob: -9.409914016723633
    8. ' """
' → logprob: -9.409914016723633
    9. '"""' → logprob: -9.784914016723633
    10. '#' → logprob: -10.034914016723633

Token 175: ' Pose' (ID: 70929)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03816072270274162
    2. ' for' → logprob: -3.288160800933838
    3. '   ' → logprob: -9.03816032409668
    4. '	for' → logprob: -15.53816032409668
    5. ' ' → logprob: -16.41316032409668
    6. '"""' → logprob: -17.03816032409668
    7. 'def' → logprob: -17.16316032409668
    8. '```' → logprob: -17.41316032409668
    9. 'For' → logprob: -17.53816032409668
    10. '"""
' → logprob: -18.66316032409668

Token 176: ' ou' (ID: 2031)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8818687796592712
    2. ' le' → logprob: -1.506868839263916
    3. ' or' → logprob: -2.006868839263916
    4. '_car' → logprob: -2.756868839263916
    5. ' ou' → logprob: -3.131868839263916
    6. 'car' → logprob: -3.256868839263916
    7. 'le' → logprob: -3.756868839263916
    8. '_' → logprob: -3.756868839263916
    9. ' carpet' → logprob: -4.006868839263916
    10. '_un' → logprob: -5.506868839263916

Token 177: ' enl' (ID: 116494)
  Prédit: ' enl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enl' → logprob: -0.8273463845252991
    2. 'ret' → logprob: -1.2023463249206543
    3. ' retire' → logprob: -1.7023463249206543
    4. 'en' → logprob: -2.5773463249206543
    5. 'sup' → logprob: -6.077346324920654
    6. '   ' → logprob: -8.202346801757812
    7. 'r' → logprob: -8.452346801757812
    8. ' en' → logprob: -8.577346801757812
    9. 'remove' → logprob: -8.827346801757812
    10. ' sup' → logprob: -8.952346801757812

Token 178: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.04008202627301216
    2. 'eve' → logprob: -3.5400819778442383
    3. 'e' → logprob: -4.665081977844238
    4. 'è' → logprob: -7.540081977844238
    5. 'ev' → logprob: -8.415081977844238
    6. 'ever' → logprob: -10.540081977844238
    7. 'èv' → logprob: -10.790081977844238
    8. '`' → logprob: -11.415081977844238
    9. '\' → logprob: -11.415081977844238
    10. 'èves' → logprob: -11.790081977844238

Token 179: ' un' (ID: 537)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.33794519305229187
    2. ' un' → logprob: -1.7129452228546143
    3. 'car' → logprob: -3.8379452228546143
    4. '<|end|>' → logprob: -3.9629452228546143
    5. ' carpet' → logprob: -4.462944984436035
    6. ' the' → logprob: -4.587944984436035
    7. '_' → logprob: -4.712944984436035
    8. ' ' → logprob: -4.962944984436035
    9. 'le' → logprob: -4.962944984436035
    10. '_car' → logprob: -5.462944984436035

Token 180: ' tapis' (ID: 131304)
  Prédit: ' tapis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tapis' → logprob: -0.7496015429496765
    2. 't' → logprob: -1.1246016025543213
    3. 'car' → logprob: -1.7496016025543213
    4. ' carpet' → logprob: -4.374601364135742
    5. '```' → logprob: -4.874601364135742
    6. 'c' → logprob: -6.124601364135742
    7. ' carre' → logprob: -6.749601364135742
    8. 'tap' → logprob: -7.124601364135742
    9. 'mo' → logprob: -7.187101364135742
    10. ' mo' → logprob: -8.062101364135742

Token 181: ' de' (ID: 334)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.20717927813529968
    2. '   ' → logprob: -2.707179307937622
    3. ' (' → logprob: -2.957179307937622
    4. ',' → logprob: -3.832179307937622
    5. ' sur' → logprob: -4.207179069519043
    6. ' en' → logprob: -4.957179069519043
    7. 'sur' → logprob: -5.082179069519043
    8. '.' → logprob: -5.582179069519043
    9. '(
' → logprob: -5.957179069519043
    10. '(' → logprob: -5.957179069519043

Token 182: ' dimension' (ID: 21959)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.7415702939033508
    2. ' floor' → logprob: -1.491570234298706
    3. 'size' → logprob: -2.366570234298706
    4. 'car' → logprob: -2.491570234298706
    5. 'val' → logprob: -3.116570234298706
    6. ' size' → logprob: -3.866570234298706
    7. ' taille' → logprob: -3.866570234298706
    8. 'flo' → logprob: -5.241570472717285
    9. '```' → logprob: -5.241570472717285
    10. ' carre' → logprob: -5.491570472717285

Token 183: ' '' (ID: 461)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.20312555134296417
    2. 'size' → logprob: -1.9531255960464478
    3. ' '' → logprob: -3.828125476837158
    4. '(size' → logprob: -4.828125476837158
    5. ''' → logprob: -5.578125476837158
    6. '[size' → logprob: -6.078125476837158
    7. ' (' → logprob: -6.078125476837158
    8. ' taille' → logprob: -7.203125476837158
    9. '=size' → logprob: -7.828125476837158
    10. ''s' → logprob: -7.953125476837158

Token 184: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.00017970333283301443
    2. ' size' → logprob: -8.625179290771484
    3. 's' → logprob: -16.750179290771484
    4. '[size' → logprob: -17.250179290771484
    5. '(size' → logprob: -17.375179290771484
    6. '
' → logprob: -17.750179290771484
    7. '```' → logprob: -17.750179290771484
    8. ' ' → logprob: -17.875179290771484
    9. '	size' → logprob: -18.125179290771484
    10. 'siz' → logprob: -18.750179290771484

Token 185: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03185035660862923
    2. '',' → logprob: -3.5318503379821777
    3. ' '' → logprob: -6.781850337982178
    4. ' sur' → logprob: -8.531850814819336
    5. 'sur' → logprob: -8.781850814819336
    6. '   ' → logprob: -8.781850814819336
    7. ',' → logprob: -8.906850814819336
    8. ')'' → logprob: -9.406850814819336
    9. ')' → logprob: -9.906850814819336
    10. ''
' → logprob: -10.031850814819336

Token 186: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3776828050613403
    2. ' sur' → logprob: -1.3776828050613403
    3. ',' → logprob: -1.5026828050613403
    4. '(f' → logprob: -2.377682685852051
    5. 'sur' → logprob: -2.502682685852051
    6. ' au' → logprob: -3.627682685852051
    7. ' (' → logprob: -4.002682685852051
    8. ' à' → logprob: -4.627682685852051
    9. ' dans' → logprob: -5.002682685852051
    10. '(s' → logprob: -5.252682685852051

Token 187: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6300480365753174
    2. 'for' → logprob: -1.7550480365753174
    3. ' rempl' → logprob: -2.0050480365753174
    4. ' y' → logprob: -2.2550480365753174
    5. '   ' → logprob: -2.6300480365753174
    6. ' faisant' → logprob: -3.6300480365753174
    7. ' utilisant' → logprob: -3.7550480365753174
    8. 'def' → logprob: -3.7550480365753174
    9. ' couvr' → logprob: -4.130047798156738
    10. '```' → logprob: -4.130047798156738

Token 188: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029783934354782104
    2. ' x' → logprob: -3.5297839641571045
    3. 'floor' → logprob: -10.529784202575684
    4. ' floor' → logprob: -12.404784202575684
    5. ')x' → logprob: -14.279784202575684
    6. ')' → logprob: -14.279784202575684
    7. 'y' → logprob: -15.029784202575684
    8. ',' → logprob: -15.529784202575684
    9. ',x' → logprob: -15.779784202575684
    10. '(x' → logprob: -15.779784202575684

Token 189: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005955583415925503
    2. ',y' → logprob: -5.380955696105957
    3. ' ,' → logprob: -6.630955696105957
    4. ' ' → logprob: -12.130955696105957
    5. '+' → logprob: -12.380955696105957
    6. ',x' → logprob: -13.380955696105957
    7. '+,' → logprob: -13.880955696105957
    8. 'y' → logprob: -14.130955696105957
    9. ')' → logprob: -14.630955696105957
    10. '[' → logprob: -14.880955696105957

Token 190: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14213287830352783
    2. '):' → logprob: -2.2671327590942383
    3. '):
' → logprob: -3.7671327590942383
    4. '   ' → logprob: -5.517132759094238
    5. '),' → logprob: -7.267132759094238
    6. ').' → logprob: -7.517132759094238
    7. ')
' → logprob: -8.642132759094238
    8. ',' → logprob: -9.017132759094238
    9. ' )' → logprob: -9.392132759094238
    10. '):

' → logprob: -10.017132759094238

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0043565332889556885
    2. ' for' → logprob: -6.004356384277344
    3. '
' → logprob: -7.254356384277344
    4. 'for' → logprob: -8.004356384277344
    5. '\n' → logprob: -8.379356384277344
    6. '<|end|>' → logprob: -8.504356384277344
    7. '    
' → logprob: -8.879356384277344
    8. ' ' → logprob: -9.629356384277344
    9. '	for' → logprob: -10.254356384277344
    10. ' 
' → logprob: -10.379356384277344

Token 192: ' Met' (ID: 7227)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008151278831064701
    2. '
' → logprob: -5.258151054382324
    3. ' for' → logprob: -6.258151054382324
    4. '\n' → logprob: -8.258151054382324
    5. '    
' → logprob: -8.758151054382324
    6. '<|end|>' → logprob: -8.883151054382324
    7. '```' → logprob: -8.883151054382324
    8. 'for' → logprob: -9.383151054382324
    9. '	for' → logprob: -9.758151054382324
    10. ' 
' → logprob: -10.383151054382324

Token 193: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1381810903549194
    2. ' à' → logprob: -1.6381810903549194
    3. ' floor' → logprob: -1.7631810903549194
    4. 'floor' → logprob: -1.8881810903549194
    5. ' le' → logprob: -2.888181209564209
    6. '   ' → logprob: -3.138181209564209
    7. 'tre' → logprob: -3.263181209564209
    8. ' ' → logprob: -5.138181209564209
    9. '  ' → logprob: -5.513181209564209
    10. 'tle' → logprob: -5.888181209564209

Token 194: ' valeur' (ID: 41664)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.7093022465705872
    2. ' floor' → logprob: -0.9593022465705872
    3. 'val' → logprob: -2.4593021869659424
    4. ' valeur' → logprob: -4.2093024253845215
    5. ' val' → logprob: -4.8343024253845215
    6. 'value' → logprob: -5.4593024253845215
    7. ' value' → logprob: -5.5843024253845215
    8. ' à' → logprob: -5.5843024253845215
    9. ' ' → logprob: -6.7093024253845215
    10. 'def' → logprob: -7.8343024253845215

Token 195: ' '' (ID: 461)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6187483072280884
    2. ' val' → logprob: -1.1187483072280884
    3. ' floor' → logprob: -2.493748188018799
    4. 'floor' → logprob: -2.993748188018799
    5. '(val' → logprob: -7.868748188018799
    6. 'dans' → logprob: -8.118748664855957
    7. '[val' → logprob: -8.368748664855957
    8. ' des' → logprob: -8.868748664855957
    9. ' dans' → logprob: -9.118748664855957
    10. ' '' → logprob: -9.118748664855957

Token 196: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0004574863996822387
    2. ' val' → logprob: -7.875457286834717
    3. 'floor' → logprob: -9.500457763671875
    4. ' floor' → logprob: -14.125457763671875
    5. 'value' → logprob: -14.625457763671875
    6. '	val' → logprob: -15.500457763671875
    7. 'vall' → logprob: -15.500457763671875
    8. '[val' → logprob: -15.500457763671875
    9. ')' → logprob: -15.875457763671875
    10. '   ' → logprob: -16.000457763671875

Token 197: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04575338587164879
    2. ')' → logprob: -4.045753479003906
    3. ' '' → logprob: -4.170753479003906
    4. ' dans' → logprob: -5.545753479003906
    5. ')'' → logprob: -5.545753479003906
    6. '')' → logprob: -6.920753479003906
    7. 'dans' → logprob: -7.295753479003906
    8. '[' → logprob: -8.420753479003906
    9. ' à' → logprob: -8.545753479003906
    10. ' au' → logprob: -8.545753479003906

Token 198: ' sur' (ID: 1512)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.2141692042350769
    2. 'dans' → logprob: -2.3391692638397217
    3. ' aux' → logprob: -2.5891692638397217
    4. ' à' → logprob: -4.589169025421143
    5. ' ' → logprob: -5.339169025421143
    6. ' au' → logprob: -6.714169025421143
    7. ' sur' → logprob: -7.089169025421143
    8. '```' → logprob: -7.214169025421143
    9. 'sur' → logprob: -7.339169025421143
    10. ' in' → logprob: -7.589169025421143

Token 199: ' tous' (ID: 10688)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.8932240009307861
    2. ' floor' → logprob: -1.0182240009307861
    3. ' les' → logprob: -2.393224000930786
    4. ' le' → logprob: -3.643224000930786
    5. ' range' → logprob: -3.768224000930786
    6. ' la' → logprob: -3.768224000930786
    7. '   ' → logprob: -4.018223762512207
    8. 'range' → logprob: -4.143223762512207
    9. '
' → logprob: -5.268223762512207
    10. 'for' → logprob: -5.643223762512207

Token 200: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1717611402273178
    2. ' floor' → logprob: -2.7967610359191895
    3. ' le' → logprob: -3.4217610359191895
    4. 'floor' → logprob: -3.6717610359191895
    5. 'les' → logprob: -4.2967610359191895
    6. '[y' → logprob: -4.5467610359191895
    7. '   ' → logprob: -4.9217610359191895
    8. ' y' → logprob: -6.1717610359191895
    9. ' la' → logprob: -6.2967610359191895
    10. '[' → logprob: -7.4217610359191895

Token 201: ' panneaux' (ID: 155485)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -1.0393245220184326
    2. ' floor' → logprob: -1.5393245220184326
    3. ' panels' → logprob: -1.5393245220184326
    4. ' panneaux' → logprob: -1.9143245220184326
    5. 'pan' → logprob: -4.039324760437012
    6. ' y' → logprob: -4.414324760437012
    7. 'p' → logprob: -4.539324760437012
    8. 'y' → logprob: -5.289324760437012
    9. 'cases' → logprob: -5.539324760437012
    10. ' cells' → logprob: -5.789324760437012

Token 202: ' du' (ID: 1462)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.07363926619291306
    2. ' y' → logprob: -3.823639154434204
    3. ' [' → logprob: -4.573639392852783
    4. ' de' → logprob: -4.573639392852783
    5. ' dans' → logprob: -4.823639392852783
    6. '   ' → logprob: -5.198639392852783
    7. '[' → logprob: -5.698639392852783
    8. ',' → logprob: -6.323639392852783
    9. 'dans' → logprob: -6.823639392852783
    10. '<|end|>' → logprob: -6.948639392852783

Token 203: ' tapis' (ID: 131304)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.7596398591995239
    2. ' floor' → logprob: -1.384639859199524
    3. ' y' → logprob: -1.884639859199524
    4. 'y' → logprob: -2.2596397399902344
    5. 'car' → logprob: -5.134639739990234
    6. 'x' → logprob: -5.509639739990234
    7. '[y' → logprob: -6.009639739990234
    8. ' carré' → logprob: -6.384639739990234
    9. ' ' → logprob: -6.634639739990234
    10. '   ' → logprob: -6.634639739990234

Token 204: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13438472151756287
    2. '.' → logprob: -2.5093846321105957
    3. ',' → logprob: -4.009384632110596
    4. '[y' → logprob: -4.759384632110596
    5. '<|end|>' → logprob: -5.259384632110596
    6. '[' → logprob: -5.259384632110596
    7. '[
' → logprob: -6.759384632110596
    8. ')' → logprob: -6.884384632110596
    9. 'def' → logprob: -7.134384632110596
    10. ':' → logprob: -7.384384632110596

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022222327068448067
    2. '
' → logprob: -4.272222518920898
    3. '<|end|>' → logprob: -5.272222518920898
    4. '\n' → logprob: -6.772222518920898
    5. ')' → logprob: -7.522222518920898
    6. '    
' → logprob: -8.022222518920898
    7. ' for' → logprob: -8.147222518920898
    8. '```' → logprob: -8.522222518920898
    9. '  
' → logprob: -9.147222518920898
    10. ' ' → logprob: -9.897222518920898

Token 206: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031806828919798136
    2. '
' → logprob: -6.503180503845215
    3. ' for' → logprob: -6.503180503845215
    4. '```' → logprob: -9.753180503845215
    5. '    
' → logprob: -10.128180503845215
    6. 'for' → logprob: -10.753180503845215
    7. '<|end|>' → logprob: -11.003180503845215
    8. ' 
' → logprob: -11.753180503845215
    9. ' ' → logprob: -12.003180503845215
    10. ')' → logprob: -12.128180503845215

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22631461918354034
    2. ' =' → logprob: -1.601314663887024
    3. ')' → logprob: -7.476314544677734
    4. '<|end|>' → logprob: -8.101314544677734
    5. ' ' → logprob: -11.351314544677734
    6. ')=' → logprob: -12.851314544677734
    7. '<|end|>' → logprob: -12.976314544677734
    8. ' )' → logprob: -13.226314544677734
    9. ' ==' → logprob: -13.476314544677734
    10. '==' → logprob: -13.601314544677734

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14417634904384613
    2. ' ' → logprob: -2.0191762447357178
    3. 'val' → logprob: -7.144176483154297
    4. '1' → logprob: -8.019176483154297
    5. ' val' → logprob: -8.019176483154297
    6. 'size' → logprob: -11.394176483154297
    7. 'value' → logprob: -11.769176483154297
    8. ' size' → logprob: -11.894176483154297
    9. '`' → logprob: -12.956676483154297
    10. ' value' → logprob: -13.019176483154297

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013550751842558384
    2. ' ' → logprob: -4.888550758361816
    3. '1' → logprob: -5.138550758361816
    4. 'val' → logprob: -10.138550758361816
    5. 'size' → logprob: -11.388550758361816
    6. 'value' → logprob: -13.263550758361816
    7. '```' → logprob: -13.701050758361816
    8. '-' → logprob: -13.763550758361816
    9. 'int' → logprob: -14.138550758361816
    10. ' val' → logprob: -14.263550758361816

Token 210: ' pour' (ID: 1930)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.18528243899345398
    2. '<|end|>' → logprob: -1.8102824687957764
    3. ' ' → logprob: -6.685282230377197
    4. ')' → logprob: -6.810282230377197
    5. '<|end|>' → logprob: -6.935282230377197
    6. 'or' → logprob: -6.935282230377197
    7. ',' → logprob: -8.185282707214355
    8. '
' → logprob: -8.560282707214355
    9. '   ' → logprob: -8.560282707214355
    10. ' for' → logprob: -9.060282707214355

Token 211: ' enlever' (ID: 196982)
  Prédit: ' enlever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enlever' → logprob: -0.08354035019874573
    2. 'en' → logprob: -3.208540439605713
    3. ' retirer' → logprob: -3.708540439605713
    4. ' ' → logprob: -5.708540439605713
    5. '0' → logprob: -5.833540439605713
    6. ' enl' → logprob: -6.333540439605713
    7. ' en' → logprob: -6.458540439605713
    8. ' False' → logprob: -7.083540439605713
    9. 'False' → logprob: -7.208540439605713
    10. 'int' → logprob: -7.833540439605713

Token 212: ' le' (ID: 505)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09213163703680038
    2. '   ' → logprob: -3.7171316146850586
    3. 'def' → logprob: -3.7171316146850586
    4. ' ,' → logprob: -4.592131614685059
    5. '<|end|>' → logprob: -4.717131614685059
    6. ',
' → logprob: -4.842131614685059
    7. '
' → logprob: -5.217131614685059
    8. '.' → logprob: -6.092131614685059
    9. ')' → logprob: -6.467131614685059
    10. ' (' → logprob: -7.467131614685059

Token 213: ' tapis' (ID: 131304)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.8612498044967651
    2. ' tapis' → logprob: -0.9862498044967651
    3. 't' → logprob: -1.6112498044967651
    4. 's' → logprob: -6.611249923706055
    5. ' carpet' → logprob: -6.986249923706055
    6. ' car' → logprob: -7.361249923706055
    7. '<|end|>' → logprob: -8.361249923706055
    8. ' t' → logprob: -8.486249923706055
    9. '_t' → logprob: -8.986249923706055
    10. ' carre' → logprob: -9.486249923706055

Token 214: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1867969036102295
    2. ',' → logprob: -2.6867969036102295
    3. ')' → logprob: -3.5617969036102295
    4. '
' → logprob: -3.6867969036102295
    5. 'def' → logprob: -4.186797142028809
    6. '.' → logprob: -4.811797142028809
    7. '<|end|>' → logprob: -4.811797142028809
    8. ':' → logprob: -4.936797142028809
    9. ',
' → logprob: -6.061797142028809
    10. '```' → logprob: -6.561797142028809

Token 215: 'rest' (ID: 7134)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3365035057067871
    2. '),' → logprob: -1.586503505706787
    3. ')
' → logprob: -2.586503505706787
    4. ' )' → logprob: -6.586503505706787
    5. ' ),' → logprob: -6.836503505706787
    6. ' )
' → logprob: -6.961503505706787
    7. ',' → logprob: -7.336503505706787
    8. 'car' → logprob: -7.461503505706787
    9. '),
' → logprob: -9.211503982543945
    10. ').' → logprob: -9.211503982543945

Token 216: 'aur' (ID: 4178)
  Prédit: 'aur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aur' → logprob: -0.8630614280700684
    2. 'orer' → logprob: -1.6130614280700684
    3. 'er' → logprob: -2.1130614280700684
    4. 'ore' → logprob: -2.6130614280700684
    5. 'it' → logprob: -2.8630614280700684
    6. 'ant' → logprob: -2.9880614280700684
    7. 're' → logprob: -3.4880614280700684
    8. 'ores' → logprob: -4.613061428070068
    9. 'e' → logprob: -4.988061428070068
    10. 'eur' → logprob: -5.113061428070068

Token 217: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.017588460817933083
    2. 'e' → logprob: -4.1425886154174805
    3. 'ent' → logprob: -7.2675886154174805
    4. 'ant' → logprob: -7.3925886154174805
    5. 'r' → logprob: -9.64258861541748
    6. 'ate' → logprob: -10.39258861541748
    7. 'é' → logprob: -10.76758861541748
    8. 'ir' → logprob: -10.89258861541748
    9. '   ' → logprob: -11.26758861541748
    10. '```' → logprob: -11.76758861541748

Token 218: ' ray' (ID: 22420)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.68775475025177
    2. ' les' → logprob: -1.93775475025177
    3. ' le' → logprob: -2.3127546310424805
    4. 'les' → logprob: -2.4377546310424805
    5. 'l' → logprob: -2.5627546310424805
    6. ' la' → logprob: -3.0627546310424805
    7. 'le' → logprob: -3.6877546310424805
    8. '1' → logprob: -5.5627546310424805
    9. ')' → logprob: -5.8127546310424805
    10. ' ' → logprob: -6.0627546310424805

Token 219: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.04856965318322182
    2. 'és' → logprob: -3.173569679260254
    3. 'ure' → logprob: -5.798569679260254
    4. 'ures' → logprob: -6.173569679260254
    5. 'ured' → logprob: -9.548569679260254
    6. 'uré' → logprob: -9.798569679260254
    7. 'ed' → logprob: -9.923569679260254
    8. 'ur' → logprob: -10.173569679260254
    9. 'ées' → logprob: -10.423569679260254
    10. '{' → logprob: -10.798569679260254

Token 220: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6052128076553345
    2. ')' → logprob: -0.8552128076553345
    3. ' ),' → logprob: -5.355212688446045
    4. 's' → logprob: -5.480212688446045
    5. ' ou' → logprob: -5.605212688446045
    6. '=' → logprob: -5.855212688446045
    7. '),
' → logprob: -6.105212688446045
    8. ' or' → logprob: -6.230212688446045
    9. ')
' → logprob: -6.480212688446045
    10. ',' → logprob: -6.605212688446045

Token 221: '   ' (ID: 271)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.33120474219322205
    2. ' val' → logprob: -1.3312047719955444
    3. '   ' → logprob: -4.081204891204834
    4. ' not' → logprob: -8.456204414367676
    5. '    ' → logprob: -8.831204414367676
    6. '1' → logprob: -8.956204414367676
    7. ' ' → logprob: -9.331204414367676
    8. '#' → logprob: -9.456204414367676
    9. '
' → logprob: -10.456204414367676
    10. '0' → logprob: -10.581204414367676

Token 222: ' val' (ID: 1459)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4642307758331299
    2. ' val' → logprob: -1.3392307758331299
    3. 'val' (adapté à ' val') → logprob: -2.71423077583313
    4. ' ' → logprob: -3.21423077583313
    5. '   ' → logprob: -6.339230537414551
    6. '#' → logprob: -7.214230537414551
    7. ' #' → logprob: -8.83923053741455
    8. '    ' → logprob: -9.58923053741455
    9. '=' → logprob: -10.83923053741455
    10. '  ' → logprob: -10.96423053741455

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519318461418152
    2. ' =' → logprob: -1.50193190574646
    3. ' ' → logprob: -14.251932144165039
    4. ')' → logprob: -14.376932144165039
    5. '=
' → logprob: -14.751932144165039
    6. '<|end|>' → logprob: -15.001932144165039
    7. ' =
' → logprob: -16.00193214416504
    8. ' ' → logprob: -16.12693214416504
    9. 's' → logprob: -16.25193214416504
    10. ',' → logprob: -16.62693214416504

Token 224: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08001153916120529
    2. ' ' → logprob: -2.5800116062164307
    3. '0' → logprob: -6.830011367797852
    4. '   ' → logprob: -10.705011367797852
    5. '
' → logprob: -12.830011367797852
    6. '  ' → logprob: -13.267511367797852
    7. '-' → logprob: -13.330011367797852
    8. ' ' → logprob: -13.642511367797852
    9. '2' → logprob: -13.705011367797852
    10. ' -' → logprob: -14.017511367797852

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005938040092587471
    2. ' ' → logprob: -5.1309380531311035
    3. '   ' → logprob: -13.005937576293945
    4. '<|end|>' → logprob: -13.505937576293945
    5. '```' → logprob: -13.568437576293945
    6. '...' → logprob: -14.443437576293945
    7. '[' → logprob: -15.005937576293945
    8. ')' → logprob: -15.005937576293945
    9. '  ' → logprob: -15.068437576293945
    10. '0' → logprob: -15.255937576293945

Token 226: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.10451845079660416
    2. ' for' → logprob: -2.604518413543701
    3. '<|end|>' → logprob: -4.604518413543701
    4. 'pour' → logprob: -4.854518413543701
    5. ' ' → logprob: -5.229518413543701
    6. ')' → logprob: -6.854518413543701
    7. 'for' → logprob: -8.10451889038086
    8. ' )' → logprob: -8.35451889038086
    9. ' to' → logprob: -8.35451889038086
    10. ' ' → logprob: -9.10451889038086

Token 227: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.7649579644203186
    2. ' enlever' → logprob: -1.6399579048156738
    3. ' poser' → logprob: -1.7649579048156738
    4. ' couvrir' → logprob: -2.139957904815674
    5. ' rec' → logprob: -3.389957904815674
    6. ' retirer' → logprob: -5.389957904815674
    7. ' masquer' → logprob: -5.764957904815674
    8. ' ind' → logprob: -5.889957904815674
    9. 'poser' → logprob: -5.889957904815674
    10. ' supprimer' → logprob: -6.764957904815674

Token 228: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.000194361709873192
    2. 'ker' → logprob: -9.125194549560547
    3. 'que' → logprob: -10.375194549560547
    4. 'qu' → logprob: -10.625194549560547
    5. '   ' → logprob: -12.000194549560547
    6. '#' → logprob: -12.500194549560547
    7. '```' → logprob: -12.875194549560547
    8. '[' → logprob: -13.125194549560547
    9. '	' → logprob: -13.500194549560547
    10. '

' → logprob: -13.625194549560547

Token 229: ' comme' (ID: 7971)
  Prédit: ' comme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -1.0799320936203003
    2. ' les' → logprob: -1.2049320936203003
    3. '<|end|>' → logprob: -1.9549320936203003
    4. ' le' → logprob: -2.20493221282959
    5. ' que' → logprob: -3.20493221282959
    6. 'comme' → logprob: -4.45493221282959
    7. 'les' → logprob: -4.45493221282959
    8. ' un' → logprob: -4.70493221282959
    9. 'le' → logprob: -4.95493221282959
    10. ' as' → logprob: -5.20493221282959

Token 230: ' couvert' (ID: 140806)
  Prédit: ' couvert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvert' → logprob: -0.34680864214897156
    2. ' rec' → logprob: -1.721808671951294
    3. ' posé' → logprob: -3.471808671951294
    4. 'c' → logprob: -3.971808671951294
    5. 'rec' → logprob: -4.096808433532715
    6. 'occup' → logprob: -4.596808433532715
    7. 'posé' → logprob: -4.846808433532715
    8. 'pos' → logprob: -4.971808433532715
    9. 'covered' → logprob: -5.471808433532715
    10. '```' → logprob: -5.721808433532715

Token 231: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: 'ou' (ID: 283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07790497690439224
    2. ' )' → logprob: -2.8279049396514893
    3. '<|end|>' → logprob: -4.827905178070068
    4. ' ' → logprob: -6.452905178070068
    5. ').' → logprob: -6.577905178070068
    6. ' ' → logprob: -7.077905178070068
    7. ' covered' → logprob: -7.577905178070068
    8. '),' → logprob: -7.952905178070068
    9. '   ' → logprob: -8.07790470123291
    10. '...' → logprob: -8.32790470123291

Token 233: ' tout' (ID: 5501)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2254163026809692
    2. ' ' → logprob: -1.3504163026809692
    3. ' -' → logprob: -1.8504163026809692
    4. ')' → logprob: -2.2254161834716797
    5. '-' → logprob: -2.4754161834716797
    6. ' )' → logprob: -3.8504161834716797
    7. ' val' → logprob: -4.97541618347168
    8. ' couvrir' → logprob: -5.22541618347168
    9. '<|end|>' → logprob: -5.35041618347168
    10. '   ' → logprob: -5.47541618347168

Token 234: ' autre' (ID: 20278)
  Prédit: ' autre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autre' → logprob: -0.3585624396800995
    2. ')' → logprob: -1.4835624694824219
    3. ' )' → logprob: -3.608562469482422
    4. '   ' → logprob: -4.733562469482422
    5. 'val' → logprob: -5.108562469482422
    6. ' ' → logprob: -5.233562469482422
    7. '```' → logprob: -5.233562469482422
    8. '=' → logprob: -5.608562469482422
    9. '    ' → logprob: -6.233562469482422
    10. ' val' → logprob: -6.483562469482422

Token 235: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.41864877939224243
    2. ' val' → logprob: -1.5436487197875977
    3. ')' → logprob: -2.9186487197875977
    4. ' )' → logprob: -3.5436487197875977
    5. ' valeur' → logprob: -4.043648719787598
    6. '<|end|>' → logprob: -4.543648719787598
    7. 'value' → logprob: -4.668648719787598
    8. ' value' → logprob: -5.793648719787598
    9. '_val' → logprob: -6.043648719787598
    10. ' code' → logprob: -7.168648719787598

Token 236: ' nég' (ID: 55805)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3535737991333008
    2. ' )' → logprob: -1.2285737991333008
    3. '<|end|>' → logprob: -6.353573799133301
    4. ' ' → logprob: -6.853573799133301
    5. '   ' → logprob: -7.603573799133301
    6. ' pour' → logprob: -8.2285737991333
    7. ').' → logprob: -8.3535737991333
    8. ' positive' → logprob: -8.6035737991333
    9. ' distinct' → logprob: -8.8535737991333
    10. ' negative' → logprob: -8.8535737991333

Token 237: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.06520774215459824
    2. '1' → logprob: -3.0652077198028564
    3. 'ée' → logprob: -4.6902079582214355
    4. 'ive' → logprob: -5.9402079582214355
    5. ')' → logprob: -7.0652079582214355
    6. 'def' → logprob: -7.5652079582214355
    7. 'e' → logprob: -8.065207481384277
    8. '   ' → logprob: -8.440207481384277
    9. 'ivée' → logprob: -8.440207481384277
    10. '#' → logprob: -8.565207481384277

Token 238: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01847030036151409
    2. ').' → logprob: -4.018470287322998
    3. ' )' → logprob: -9.143470764160156
    4. '):' → logprob: -9.143470764160156
    5. '),' → logprob: -10.393470764160156
    6. ')...' → logprob: -11.018470764160156
    7. '   ' → logprob: -11.518470764160156
    8. '<|end|>' → logprob: -11.518470764160156
    9. ')
' → logprob: -11.643470764160156
    10. ' pour' → logprob: -12.518470764160156

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.079363614320755
    2. ')' → logprob: -3.4543635845184326
    3. '):' → logprob: -3.7043635845184326
    4. '):
' → logprob: -4.079363822937012
    5. '
' → logprob: -6.704363822937012
    6. ')
' → logprob: -8.079363822937012
    7. ':' → logprob: -8.204363822937012
    8. '```' → logprob: -8.204363822937012
    9. 'def' → logprob: -8.329363822937012
    10. '    
' → logprob: -8.454363822937012

Token 240: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21344974637031555
    2. '
' → logprob: -1.8384497165679932
    3. '):
' → logprob: -4.213449954986572
    4. '):' → logprob: -4.838449954986572
    5. ')' → logprob: -5.088449954986572
    6. '    
' → logprob: -6.963449954986572
    7. 'def' → logprob: -7.338449954986572
    8. ':' → logprob: -7.338449954986572
    9. ')
' → logprob: -7.713449954986572
    10. '  
' → logprob: -7.713449954986572

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0040227146819233894
    2. ' for' → logprob: -5.754022598266602
    3. '
' → logprob: -7.379022598266602
    4. 'for' → logprob: -9.004022598266602
    5. '```' → logprob: -9.879022598266602
    6. '    
' → logprob: -10.754022598266602
    7. '	for' → logprob: -11.129022598266602
    8. ' 
' → logprob: -13.254022598266602
    9. 'def' → logprob: -13.379022598266602
    10. '   ' → logprob: -13.754022598266602

Token 242: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00256067281588912
    2. ' for' → logprob: -6.002560615539551
    3. '   ' → logprob: -9.37756061553955
    4. '	for' → logprob: -15.00256061553955
    5. ' ' → logprob: -17.252561569213867
    6. '```' → logprob: -18.127561569213867
    7. 'def' → logprob: -18.627561569213867
    8. '
' → logprob: -19.127561569213867
    9. '  ' → logprob: -20.252561569213867
    10. '    
' → logprob: -20.502561569213867

Token 243: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.029817024245858192
    2. 'dy' → logprob: -3.5298171043395996
    3. ' y' → logprob: -9.779816627502441
    4. 'y' → logprob: -12.279816627502441
    5. ' ' → logprob: -13.404816627502441
    6. '   ' → logprob: -14.154816627502441
    7. ' dx' → logprob: -14.529816627502441
    8. ' i' → logprob: -14.904816627502441
    9. 'Dy' → logprob: -15.279816627502441
    10. '```' → logprob: -15.279816627502441

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036013787612318993
    2. 'in' → logprob: -5.628601551055908
    3. ' ' → logprob: -14.12860107421875
    4. 'range' → logprob: -15.87860107421875
    5. 'import' → logprob: -16.62860107421875
    6. '	in' → logprob: -16.62860107421875
    7. '```' → logprob: -16.87860107421875
    8. '   ' → logprob: -17.12860107421875
    9. 'In' → logprob: -17.12860107421875
    10. '<|end|>' → logprob: -17.37860107421875

Token 245: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975071594119072
    2. ' range' → logprob: -3.5297508239746094
    3. '(range' → logprob: -16.52975082397461
    4. '	range' → logprob: -17.02975082397461
    5. 'size' → logprob: -17.27975082397461
    6. '
' → logprob: -17.65475082397461
    7. 'in' → logprob: -18.27975082397461
    8. 'rang' → logprob: -18.40475082397461
    9. ' in' → logprob: -18.65475082397461
    10. '```' → logprob: -19.40475082397461

Token 246: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.0005550591740757227
    2. 'size' → logprob: -7.500555038452148
    3. ' size' → logprob: -13.500555038452148
    4. '(' → logprob: -14.250555038452148
    5. '<size' → logprob: -17.25055503845215
    6. ' (' → logprob: -17.37555503845215
    7. '=size' → logprob: -17.50055503845215
    8. '[size' → logprob: -17.75055503845215
    9. ',size' → logprob: -18.50055503845215
    10. '	size' → logprob: -18.87555503845215

Token 247: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029887478798627853
    2. '):' → logprob: -3.5298874378204346
    3. '   ' → logprob: -9.029887199401855
    4. '):
' → logprob: -11.404887199401855
    5. ':
' → logprob: -13.154887199401855
    6. ':' → logprob: -13.154887199401855
    7. ')' → logprob: -14.154887199401855
    8. '):

' → logprob: -14.904887199401855
    9. ' ):
' → logprob: -14.904887199401855
    10. '       ' → logprob: -15.279887199401855

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8942111730575562
    2. ' for' → logprob: -1.1442111730575562
    3. '   ' → logprob: -1.3942111730575562
    4. 'for' → logprob: -4.394211292266846
    5. '<|end|>' → logprob: -4.894211292266846
    6. '	for' → logprob: -6.144211292266846
    7. ' ' → logprob: -7.019211292266846
    8. '	' → logprob: -7.894211292266846
    9. '    ' → logprob: -8.144210815429688
    10. '    
' → logprob: -8.394210815429688

Token 249: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07933046668767929
    2. ' for' → logprob: -2.5793304443359375
    3. '   ' → logprob: -7.8293304443359375
    4. '       ' → logprob: -10.204330444335938
    5. '	for' → logprob: -12.079330444335938
    6. ' ' → logprob: -17.954330444335938
    7. '```' → logprob: -17.954330444335938
    8. '    ' → logprob: -19.079330444335938
    9. '
' → logprob: -19.079330444335938
    10. '    
' → logprob: -19.704330444335938

Token 250: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.5759425163269043
    2. 'dx' → logprob: -0.8259425163269043
    3. '   ' → logprob: -13.450942993164062
    4. '_dx' → logprob: -14.450942993164062
    5. ' ' → logprob: -14.700942993164062
    6. '(dx' → logprob: -15.325942993164062
    7. '.dx' → logprob: -15.950942993164062
    8. 'x' → logprob: -16.575942993164062
    9. '
' → logprob: -16.700942993164062
    10. 'Dx' → logprob: -17.075942993164062

Token 251: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008693399839103222
    2. 'in' → logprob: -4.758693218231201
    3. '   ' → logprob: -10.50869369506836
    4. '    ' → logprob: -11.38369369506836
    5. '<|end|>' → logprob: -11.50869369506836
    6. ' ' → logprob: -11.63369369506836
    7. '        ' → logprob: -12.50869369506836
    8. ')' → logprob: -12.63369369506836
    9. ' (' → logprob: -13.13369369506836
    10. 'In' → logprob: -13.38369369506836

Token 252: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20662367343902588
    2. ' range' → logprob: -1.9566236734390259
    3. 'size' → logprob: -3.2066235542297363
    4. ' size' → logprob: -5.331623554229736
    5. '(range' → logprob: -12.581624031066895
    6. '(size' → logprob: -12.706624031066895
    7. '[size' → logprob: -13.706624031066895
    8. ' ' → logprob: -14.581624031066895
    9. '   ' → logprob: -14.581624031066895
    10. 'in' → logprob: -15.081624031066895

Token 253: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.0001170132018160075
    2. 'size' → logprob: -9.625117301940918
    3. '(range' → logprob: -10.750117301940918
    4. 'range' → logprob: -10.875117301940918
    5. ' (' → logprob: -11.750117301940918
    6. ' size' → logprob: -13.750117301940918
    7. '(' → logprob: -14.000117301940918
    8. '[size' → logprob: -15.250117301940918
    9. ' range' → logprob: -15.375117301940918
    10. '=size' → logprob: -16.3751163482666

Token 254: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1811182200908661
    2. '):' → logprob: -1.8061182498931885
    3. '   ' → logprob: -7.306118011474609
    4. ':' → logprob: -8.43111801147461
    5. '):
' → logprob: -8.43111801147461
    6. '       ' → logprob: -9.30611801147461
    7. ':
' → logprob: -9.80611801147461
    8. ')' → logprob: -10.05611801147461
    9. '):

' → logprob: -10.30611801147461
    10. '           ' → logprob: -11.43111801147461

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4318215847015381
    2. ' floor' → logprob: -1.306821584701538
    3. 'floor' → logprob: -2.556821584701538
    4. '               ' → logprob: -6.306821823120117
    5. '       ' → logprob: -7.556821823120117
    6. '_floor' → logprob: -10.306821823120117
    7. '.floor' → logprob: -11.431821823120117
    8. '```' → logprob: -11.431821823120117
    9. ' ' → logprob: -11.806821823120117
    10. '            
' → logprob: -11.931821823120117

Token 256: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' (adapté à ' floor') → logprob: -0.10021001845598221
    2. ' floor' → logprob: -2.350209951400757
    3. '_floor' → logprob: -13.600210189819336
    4. '           ' → logprob: -13.850210189819336
    5. '               ' → logprob: -14.225210189819336
    6. '   ' → logprob: -15.225210189819336
    7. '.floor' → logprob: -16.475210189819336
    8. '       ' → logprob: -16.725210189819336
    9. 'Floor' → logprob: -17.225210189819336
    10. 'flo' → logprob: -17.225210189819336

Token 257: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.2664456789934775e-06
    2. 'y' → logprob: -13.750000953674316
    3. ' [' → logprob: -16.125001907348633
    4. '[' → logprob: -17.125001907348633
    5. '][' → logprob: -18.000001907348633
    6. ' y' → logprob: -18.000001907348633
    7. '```' → logprob: -18.625001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '[Y' → logprob: -19.375001907348633
    10. '[
' → logprob: -19.750001907348633

Token 258: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.289473822107539e-05
    2. ' +' → logprob: -9.750062942504883
    3. '][' → logprob: -13.375062942504883
    4. '+y' → logprob: -13.375062942504883
    5. '[' → logprob: -14.875062942504883
    6. '+
' → logprob: -15.000062942504883
    7. '+[' → logprob: -15.000062942504883
    8. '+x' → logprob: -15.875062942504883
    9. '+xml' → logprob: -16.750062942504883
    10. '+t' → logprob: -17.250062942504883

Token 259: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.007708130870014429
    2. 'dx' → logprob: -4.8827080726623535
    3. ' dy' → logprob: -9.257708549499512
    4. 'x' → logprob: -12.507708549499512
    5. 'd' → logprob: -13.382708549499512
    6. '+' → logprob: -14.507708549499512
    7. ' dx' → logprob: -14.757708549499512
    8. 'ddy' → logprob: -16.507707595825195
    9. 'Dy' → logprob: -16.632707595825195
    10. '.dy' → logprob: -16.882707595825195

Token 260: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.6060808522743173e-05
    2. '[x' → logprob: -11.000025749206543
    3. ' ][' → logprob: -12.000025749206543
    4. ']' → logprob: -12.750025749206543
    5. ']][' → logprob: -16.25002670288086
    6. '   ' → logprob: -16.75002670288086
    7. '[' → logprob: -16.75002670288086
    8. '[y' → logprob: -17.25002670288086
    9. ')][' → logprob: -18.25002670288086
    10. '"][' → logprob: -18.37502670288086

Token 261: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.054500666621607e-06
    2. ' x' → logprob: -13.12500286102295
    3. '[x' → logprob: -15.12500286102295
    4. '][' → logprob: -15.25000286102295
    5. '(x' → logprob: -15.62500286102295
    6. '   ' → logprob: -16.000003814697266
    7. '[' → logprob: -16.500003814697266
    8. ']' → logprob: -17.375003814697266
    9. ')x' → logprob: -17.750003814697266
    10. ' ' → logprob: -18.000003814697266

Token 262: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13853208720684052
    2. '+x' → logprob: -2.1385321617126465
    3. '][' → logprob: -4.5135321617126465
    4. ' +' → logprob: -7.5135321617126465
    5. '[' → logprob: -11.388531684875488
    6. '+[' → logprob: -12.263531684875488
    7. '+t' → logprob: -13.138531684875488
    8. '[x' → logprob: -13.138531684875488
    9. ' ][' → logprob: -13.263531684875488
    10. ']' → logprob: -13.388531684875488

Token 263: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.4974866644479334e-05
    2. ' dx' → logprob: -11.250015258789062
    3. 'x' → logprob: -13.375015258789062
    4. '(dx' → logprob: -15.250015258789062
    5. '_dx' → logprob: -15.875015258789062
    6. 'px' → logprob: -18.500015258789062
    7. '+' → logprob: -18.500015258789062
    8. 'size' → logprob: -18.625015258789062
    9. 'xd' → logprob: -18.750015258789062
    10. 'cx' → logprob: -18.750015258789062

Token 264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02368284948170185
    2. ']=' → logprob: -3.7736828327178955
    3. ' ]' → logprob: -8.273682594299316
    4. '=' → logprob: -8.648682594299316
    5. ']+=' → logprob: -12.148682594299316
    6. ' =' → logprob: -14.523682594299316
    7. ')' → logprob: -14.773682594299316
    8. ']=-' → logprob: -15.773682594299316
    9. ')=' → logprob: -16.023683547973633
    10. ']
' → logprob: -16.398683547973633

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031791406217962503
    2. ' =' → logprob: -5.75317907333374
    3. '=
' → logprob: -13.878179550170898
    4. ']=' → logprob: -16.1281795501709
    5. '=

' → logprob: -16.1281795501709
    6. ')=' → logprob: -16.6281795501709
    7. '=int' → logprob: -17.2531795501709
    8. '<|end|>' → logprob: -17.3781795501709
    9. '=os' → logprob: -17.6281795501709
    10. ' =
' → logprob: -18.0031795501709

Token 266: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0001234428636962548
    2. ' val' → logprob: -9.000123023986816
    3. '	val' → logprob: -20.250123977661133
    4. '[val' → logprob: -20.625123977661133
    5. '(val' → logprob: -21.500123977661133
    6. 'value' → logprob: -21.750123977661133
    7. '_val' → logprob: -21.750123977661133
    8. 'v' → logprob: -22.125123977661133
    9. '-val' → logprob: -22.250123977661133
    10. 'valu' → logprob: -22.875123977661133

Token 267: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014370749704539776
    2. '
' → logprob: -9.875144004821777
    3. '```' → logprob: -10.125144004821777
    4. '<|end|>' → logprob: -10.500144004821777
    5. ')' → logprob: -11.625144004821777
    6. ' def' → logprob: -12.375144004821777
    7. ':def' → logprob: -13.375144004821777
    8. '\' → logprob: -13.500144004821777
    9. 'ndef' → logprob: -13.625144004821777
    10. '#' → logprob: -13.875144004821777

Token 269: ' find' (ID: 1646)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -1.4724266529083252
    2. 'cover' → logprob: -1.7224266529083252
    3. ' solve' → logprob: -2.097426652908325
    4. ' find' → logprob: -2.222426652908325
    5. 'count' → logprob: -2.597426652908325
    6. ' count' → logprob: -2.847426652908325
    7. 'find' → logprob: -2.972426652908325
    8. ' cover' → logprob: -3.097426652908325
    9. 'dfs' → logprob: -3.722426652908325
    10. 'search' → logprob: -3.972426652908325

Token 270: '_first' (ID: 29347)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.597989559173584
    2. '_next' → logprob: -1.972989559173584
    3. '_best' → logprob: -2.222989559173584
    4. '_sp' → logprob: -2.847989559173584
    5. '_' → logprob: -3.097989559173584
    6. '_max' → logprob: -3.347989559173584
    7. '_first' → logprob: -4.472989559173584
    8. '_un' → logprob: -4.847989559173584
    9. '_cover' → logprob: -5.097989559173584
    10. '_square' → logprob: -5.097989559173584

Token 271: '_scr' (ID: 148844)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.0674546957015991
    2. '_un' → logprob: -1.0674546957015991
    3. '_r' → logprob: -1.9424546957015991
    4. '_' → logprob: -2.9424548149108887
    5. '_dirty' → logprob: -3.6924548149108887
    6. '_strip' → logprob: -3.8174548149108887
    7. '_sp' → logprob: -3.9424548149108887
    8. '_uns' → logprob: -4.817454814910889
    9. '_white' → logprob: -5.067454814910889
    10. '_tile' → logprob: -5.692454814910889

Token 272: 'atched' (ID: 44560)
  Prédit: 'atched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atched' → logprob: -0.050475265830755234
    2. 'at' → logprob: -3.6754753589630127
    3. 'atch' → logprob: -4.425475120544434
    4. 'ated' → logprob: -5.300475120544434
    5. 'aped' → logprob: -6.175475120544434
    6. 'a' → logprob: -6.675475120544434
    7. 'atche' → logprob: -7.050475120544434
    8. 'ached' → logprob: -7.175475120544434
    9. '```' → logprob: -7.800475120544434
    10. 'ate' → logprob: -8.675475120544434

Token 273: '(f' (ID: 1526)
  Prédit: '_panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -0.2307557463645935
    2. '(f' → logprob: -1.8557558059692383
    3. '_floor' → logprob: -3.4807558059692383
    4. '_tile' → logprob: -4.480755805969238
    5. '(' → logprob: -6.355755805969238
    6. '_' → logprob: -6.480755805969238
    7. '_cell' → logprob: -6.605755805969238
    8. '_sp' → logprob: -6.730755805969238
    9. '_pan' → logprob: -7.605755805969238
    10. '_p' → logprob: -7.980755805969238

Token 274: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.001953018014319241
    2. 'l' → logprob: -6.876953125
    3. 'loo' → logprob: -7.376953125
    4. 'lo' → logprob: -8.751953125
    5. '(' → logprob: -10.001953125
    6. 'oor' → logprob: -10.376953125
    7. 'loat' → logprob: -11.626953125
    8. 'floor' → logprob: -11.626953125
    9. 'loop' → logprob: -11.751953125
    10. 'o' → logprob: -11.876953125

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038205066230148077
    2. '):' → logprob: -5.878820419311523
    3. ',f' → logprob: -7.003820419311523
    4. '):
' → logprob: -9.753820419311523
    5. ' ,' → logprob: -10.253820419311523
    6. ')' → logprob: -12.003820419311523
    7. ',
' → logprob: -13.753820419311523
    8. '(f' → logprob: -13.753820419311523
    9. '),' → logprob: -14.503820419311523
    10. ' ):' → logprob: -14.628820419311523

Token 276: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.019405607134103775
    2. ' W' → logprob: -4.144405841827393
    3. 'H' → logprob: -5.769405841827393
    4. ' H' → logprob: -9.644405364990234
    5. ')' → logprob: -9.894405364990234
    6. 'floor' → logprob: -10.519405364990234
    7. ' ' → logprob: -11.019405364990234
    8. '   ' → logprob: -11.019405364990234
    9. 'start' → logprob: -11.644405364990234
    10. 'size' → logprob: -11.769405364990234

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004156568902544677
    2. ' ,' → logprob: -8.500415802001953
    3. ',H' → logprob: -8.500415802001953
    4. 'H' → logprob: -12.125415802001953
    5. ',
' → logprob: -13.000415802001953
    6. ',y' → logprob: -14.375415802001953
    7. ',

' → logprob: -16.125415802001953
    8. '),' → logprob: -16.625415802001953
    9. ' H' → logprob: -16.625415802001953
    10. '_,' → logprob: -16.875415802001953

Token 278: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0010332842357456684
    2. ' H' → logprob: -6.876033306121826
    3. ' ' → logprob: -15.501032829284668
    4. '   ' → logprob: -16.001033782958984
    5. ')' → logprob: -17.376033782958984
    6. '  ' → logprob: -17.876033782958984
    7. '       ' → logprob: -18.001033782958984
    8. ',' → logprob: -18.126033782958984
    9. ',H' → logprob: -18.126033782958984
    10. '```' → logprob: -18.501033782958984

Token 279: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05524614080786705
    2. '):
' → logprob: -2.930246114730835
    3. ',' → logprob: -8.180246353149414
    4. '):
' → logprob: -9.555246353149414
    5. ')' → logprob: -11.805246353149414
    6. '):

' → logprob: -12.680246353149414
    7. ' ):' → logprob: -13.555246353149414
    8. '   ' → logprob: -14.430246353149414
    9. ':' → logprob: -15.805246353149414
    10. 'def' → logprob: -16.055246353149414

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07784928381443024
    2. ' for' → logprob: -2.7028493881225586
    3. '
' → logprob: -5.202849388122559
    4. 'for' → logprob: -6.202849388122559
    5. '<|end|>' → logprob: -9.202849388122559
    6. '    
' → logprob: -9.327849388122559
    7. ':' → logprob: -10.327849388122559
    8. '  
' → logprob: -10.452849388122559
    9. ':
' → logprob: -10.577849388122559
    10. '	for' → logprob: -10.827849388122559

Token 281: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4008948504924774
    2. ' for' → logprob: -1.1508948802947998
    3. 'for' → logprob: -4.275894641876221
    4. '	for' → logprob: -11.650895118713379
    5. '
' → logprob: -12.150895118713379
    6. '    ' → logprob: -12.275895118713379
    7. '    
' → logprob: -12.525895118713379
    8. '```' → logprob: -13.775895118713379
    9. ' 
' → logprob: -13.900895118713379
    10. '   ' → logprob: -14.900895118713379

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02385362982749939
    2. 'for' → logprob: -4.273853778839111
    3. ' for' → logprob: -4.648853778839111
    4. '    ' → logprob: -10.023853302001953
    5. '"""
' → logprob: -11.523853302001953
    6. '
' → logprob: -11.648853302001953
    7. '  ' → logprob: -13.023853302001953
    8. ' ' → logprob: -13.398853302001953
    9. '       ' → logprob: -13.898853302001953
    10. ' """
' → logprob: -14.273853302001953

Token 283: ' Trou' (ID: 58947)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8124022483825684
    2. 'for' → logprob: -1.0624022483825684
    3. '   ' → logprob: -1.5624022483825684
    4. '
' → logprob: -7.062402248382568
    5. 'def' → logprob: -10.687402725219727
    6. ' 
' → logprob: -10.812402725219727
    7. '    
' → logprob: -10.812402725219727
    8. '    ' → logprob: -11.187402725219727
    9. ' ' → logprob: -12.687402725219727
    10. '  ' → logprob: -12.937402725219727

Token 284: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -1.0206720617134124e-05
    2. 'v' → logprob: -12.00001049041748
    3. 'vet' → logprob: -13.25001049041748
    4. 'vez' → logprob: -13.87501049041748
    5. 'ves' → logprob: -14.37501049041748
    6. 'che' → logprob: -15.25001049041748
    7. 'ver' → logprob: -16.000009536743164
    8. '   ' → logprob: -17.000009536743164
    9. 'vé' → logprob: -17.000009536743164
    10. 't' → logprob: -17.250009536743164

Token 285: ' le' (ID: 505)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2539040744304657
    2. ' la' → logprob: -1.878904104232788
    3. 'the' → logprob: -3.753904104232788
    4. ' le' → logprob: -3.878904104232788
    5. ' next' → logprob: -4.253903865814209
    6. ' for' → logprob: -4.878903865814209
    7. '_next' → logprob: -6.753903865814209
    8. ' les' → logprob: -7.128903865814209
    9. 'for' → logprob: -7.253903865814209
    10. 'next' → logprob: -7.628903865814209

Token 286: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.29069554805755615
    2. ' premier' → logprob: -1.6656955480575562
    3. ' first' → logprob: -4.040695667266846
    4. 'next' → logprob: -4.415695667266846
    5. 'first' → logprob: -4.540695667266846
    6. 'y' → logprob: -4.915695667266846
    7. ' next' → logprob: -4.915695667266846
    8. ' y' → logprob: -5.540695667266846
    9. 'pro' → logprob: -6.540695667266846
    10. ' prochain' → logprob: -6.790695667266846

Token 287: ' panneau' (ID: 186597)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3562067151069641
    2. 'y' → logprob: -1.3562066555023193
    3. 'x' → logprob: -3.8562066555023193
    4. 'scr' → logprob: -4.731206893920898
    5. ' x' → logprob: -6.106206893920898
    6. ' scr' → logprob: -6.356206893920898
    7. '_scr' → logprob: -6.731206893920898
    8. ' ' → logprob: -6.731206893920898
    9. '_y' → logprob: -7.106206893920898
    10. ' (' → logprob: -7.481206893920898

Token 288: ' ray' (ID: 22420)
  Prédit: ' ray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ray' → logprob: -0.03811343386769295
    2. 'ray' → logprob: -4.913113594055176
    3. ' à' → logprob: -5.788113594055176
    4. ' qui' → logprob: -5.788113594055176
    5. ' marqué' → logprob: -5.788113594055176
    6. ',' → logprob: -6.163113594055176
    7. ' r' → logprob: -6.163113594055176
    8. ' râ' → logprob: -6.413113594055176
    9. '   ' → logprob: -6.538113594055176
    10. ' avec' → logprob: -6.663113594055176

Token 289: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -2.2200749754119897e-06
    2. 'è' → logprob: -14.500001907348633
    3. 'Ã' → logprob: -14.750001907348633
    4. 'ée' → logprob: -14.875001907348633
    5. 'ed' → logprob: -15.500001907348633
    6. '   ' → logprob: -15.875001907348633
    7. '&eacute' → logprob: -16.625001907348633
    8. 'és' → logprob: -17.000001907348633
    9. 'éd' → logprob: -17.125001907348633
    10. '[' → logprob: -17.500001907348633

Token 290: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03463199362158775
    2. ',' → logprob: -3.9096319675445557
    3. '(' → logprob: -4.659632205963135
    4. '(True' → logprob: -6.784632205963135
    5. ' en' → logprob: -6.909632205963135
    6. ' dans' → logprob: -7.409632205963135
    7. '(
' → logprob: -8.659631729125977
    8. '(row' → logprob: -8.659631729125977
    9. 'dans' → logprob: -9.159631729125977
    10. ' qui' → logprob: -9.284631729125977

Token 291: 'avec' (ID: 64065)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15797339379787445
    2. ' )' → logprob: -2.407973289489746
    3. 'y' → logprob: -4.032973289489746
    4. ' y' → logprob: -4.532973289489746
    5. ' ' → logprob: -4.657973289489746
    6. '1' → logprob: -5.657973289489746
    7. ',' → logprob: -6.282973289489746
    8. '  ' → logprob: -6.282973289489746
    9. '   ' → logprob: -6.657973289489746
    10. ')y' → logprob: -6.657973289489746

Token 292: ' la' (ID: 557)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5425311326980591
    2. 'value' → logprob: -1.167531132698059
    3. ' value' → logprob: -2.6675310134887695
    4. '1' → logprob: -3.6675310134887695
    5. ' val' → logprob: -4.9175310134887695
    6. ' valeur' → logprob: -6.0425310134887695
    7. ' ' → logprob: -6.9175310134887695
    8. ')' → logprob: -7.4175310134887695
    9. 'floor' → logprob: -7.9175310134887695
    10. 'scr' → logprob: -8.16753101348877

Token 293: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.32593366503715515
    2. 'value' → logprob: -1.9509336948394775
    3. ' valeur' → logprob: -2.2009336948394775
    4. ' value' → logprob: -4.450933456420898
    5. '1' → logprob: -4.450933456420898
    6. ' val' → logprob: -6.950933456420898
    7. 'def' → logprob: -7.825933456420898
    8. ' ' → logprob: -8.325933456420898
    9. ' vale' → logprob: -10.075933456420898
    10. 'valu' → logprob: -10.200933456420898

Token 294: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42110732197761536
    2. ' ' → logprob: -1.421107292175293
    3. '=' → logprob: -3.171107292175293
    4. ' ==' → logprob: -3.796107292175293
    5. ' =' → logprob: -3.921107292175293
    6. '==' → logprob: -5.296107292175293
    7. ' de' → logprob: -5.546107292175293
    8. ' of' → logprob: -5.671107292175293
    9. ')' → logprob: -6.296107292175293
    10. '`' → logprob: -7.296107292175293

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014489953173324466
    2. ' ' → logprob: -9.125144958496094
    3. '=' → logprob: -10.750144958496094
    4. '`' → logprob: -11.875144958496094
    5. '>' → logprob: -13.000144958496094
    6. '==' → logprob: -13.000144958496094
    7. ')' → logprob: -14.125144958496094
    8. '```' → logprob: -14.125144958496094
    9. '>=' → logprob: -15.000144958496094
    10. ' =' → logprob: -15.375144958496094

Token 296: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013750186190009117
    2. ',' → logprob: -5.138750076293945
    3. ' )' → logprob: -5.138750076293945
    4. '),' → logprob: -6.638750076293945
    5. ')
' → logprob: -7.763750076293945
    6. '):
' → logprob: -9.638750076293945
    7. ' ,' → logprob: -10.888750076293945
    8. ' ),' → logprob: -11.138750076293945
    9. ' dans' → logprob: -11.388750076293945
    10. ' )
' → logprob: -11.513750076293945

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002778962254524231
    2. '
' → logprob: -6.752779006958008
    3. ' for' → logprob: -7.377779006958008
    4. '    
' → logprob: -7.877779006958008
    5. '\n' → logprob: -8.627779006958008
    6. '  
' → logprob: -8.752779006958008
    7. ')' → logprob: -9.502779006958008
    8. '<|end|>' → logprob: -10.002779006958008
    9. '   
' → logprob: -10.252779006958008
    10. ' 
' → logprob: -10.502779006958008

Token 298: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01323952991515398
    2. ' for' → logprob: -4.38823938369751
    3. 'for' → logprob: -7.26323938369751
    4. '
' → logprob: -10.888239860534668
    5. '    
' → logprob: -12.138239860534668
    6. '	for' → logprob: -13.638239860534668
    7. 'def' → logprob: -13.888239860534668
    8. ' ' → logprob: -14.263239860534668
    9. '<|end|>' → logprob: -14.763239860534668
    10. ')' → logprob: -14.888239860534668

Token 299: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.5862096548080444
    2. 'n' → logprob: -1.0862096548080444
    3. ' None' → logprob: -2.336209774017334
    4. 'ns' → logprob: -5.461209774017334
    5. 'e' → logprob: -6.211209774017334
    6. 's' → logprob: -7.461209774017334
    7. 'None' → logprob: -7.711209774017334
    8. 'nne' → logprob: -7.711209774017334
    9. 'ner' → logprob: -7.836209774017334
    10. '   ' → logprob: -7.836209774017334

Token 300: ' les' (ID: 1341)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.12512795627117157
    2. 'None' → logprob: -2.5001280307769775
    3. ' (' → logprob: -3.5001280307769775
    4. '(None' → logprob: -5.500127792358398
    5. '(-' → logprob: -7.625127792358398
    6. ' (-' → logprob: -7.875127792358398
    7. '(' → logprob: -8.500127792358398
    8. ' ' → logprob: -9.000127792358398
    9. ' -' → logprob: -10.250127792358398
    10. '(x' → logprob: -11.875127792358398

Token 301: ' coordonnées' (ID: 181895)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.1412228345870972
    2. 'x' → logprob: -1.2662228345870972
    3. ' x' → logprob: -1.6412228345870972
    4. 'None' → logprob: -1.8912228345870972
    5. ' (' → logprob: -3.5162229537963867
    6. '(' → logprob: -4.891222953796387
    7. '-' → logprob: -5.641222953796387
    8. '0' → logprob: -5.891222953796387
    9. ' -' → logprob: -6.016222953796387
    10. ' coordinates' → logprob: -6.391222953796387

Token 302: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.28347137570381165
    2. '(x' → logprob: -2.2834713459014893
    3. ',' → logprob: -2.9084713459014893
    4. ' ou' → logprob: -3.0334713459014893
    5. ' x' → logprob: -3.7834713459014893
    6. ' or' → logprob: -4.783471584320068
    7. 'x' → logprob: -5.908471584320068
    8. ' ,' → logprob: -6.158471584320068
    9. '   ' → logprob: -6.533471584320068
    10. '(' → logprob: -6.658471584320068

Token 303: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24136677384376526
    2. '0' → logprob: -1.6163667440414429
    3. ')' → logprob: -4.991366863250732
    4. 'None' → logprob: -5.491366863250732
    5. ' x' → logprob: -5.741366863250732
    6. ' None' → logprob: -7.991366863250732
    7. ')x' → logprob: -7.991366863250732
    8. ' ' → logprob: -8.366366386413574
    9. ' (' → logprob: -8.866366386413574
    10. '
' → logprob: -9.241366386413574

Token 304: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013104787794873118
    2. ',y' → logprob: -6.751310348510742
    3. ' ,' → logprob: -8.876310348510742
    4. 'y' → logprob: -15.751310348510742
    5. ',
' → logprob: -15.876310348510742
    6. ')' → logprob: -16.626310348510742
    7. ',Y' → logprob: -16.876310348510742
    8. '),' → logprob: -17.126310348510742
    9. '<|end|>' → logprob: -17.501310348510742
    10. '‌,' → logprob: -17.751310348510742

Token 305: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18284443020820618
    2. ',' → logprob: -1.8078444004058838
    3. '),' → logprob: -5.807844638824463
    4. '   ' → logprob: -10.182844161987305
    5. ',)' → logprob: -11.182844161987305
    6. ')
' → logprob: -11.557844161987305
    7. '):
' → logprob: -12.057844161987305
    8. ' )' → logprob: -12.182844161987305
    9. '):' → logprob: -12.307844161987305
    10. ' ,' → logprob: -12.432844161987305

Token 306: ' ou' (ID: 2031)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6440073847770691
    2. ' None' → logprob: -0.7690073847770691
    3. ' ou' → logprob: -5.269007205963135
    4. ' or' → logprob: -5.394007205963135
    5. 'ou' → logprob: -7.144007205963135
    6. 'or' → logprob: -7.769007205963135
    7. '   ' → logprob: -8.519007682800293
    8. '(None' → logprob: -9.394007682800293
    9. 'return' → logprob: -10.394007682800293
    10. 'y' → logprob: -10.894007682800293

Token 307: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3913624882698059
    2. 'None' → logprob: -1.1413624286651611
    3. '(None' → logprob: -5.76636266708374
    4. '(-' → logprob: -7.01636266708374
    5. ' (-' → logprob: -7.89136266708374
    6. ' (' → logprob: -9.641362190246582
    7. '(' → logprob: -11.516362190246582
    8. '_None' → logprob: -13.391362190246582
    9. '=None' → logprob: -13.891362190246582
    10. '-' → logprob: -15.141362190246582

Token 308: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5318652391433716
    2. ' None' → logprob: -1.9068652391433716
    3. '   ' → logprob: -2.406865119934082
    4. 'if' → logprob: -2.406865119934082
    5. 'None' → logprob: -2.781865119934082
    6. '(None' → logprob: -4.906865119934082
    7. ' ' → logprob: -5.531865119934082
    8. '=None' → logprob: -5.781865119934082
    9. '```' → logprob: -5.906865119934082
    10. ',None' → logprob: -6.781865119934082

Token 309: ' aucun' (ID: 41678)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12224403023719788
    2. ' None' → logprob: -2.372244119644165
    3. ' not' → logprob: -3.997244119644165
    4. 'not' → logprob: -5.997243881225586
    5. 'auc' → logprob: -7.622243881225586
    6. ' aucun' → logprob: -8.372243881225586
    7. ' none' → logprob: -9.497243881225586
    8. 'none' → logprob: -10.122243881225586
    9. ' all' → logprob: -10.747243881225586
    10. ' aucune' → logprob: -10.747243881225586

Token 310: ' panneau' (ID: 186597)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5686085224151611
    2. 'None' → logprob: -1.1936085224151611
    3. ' found' → logprob: -2.943608522415161
    4. '<|end|>' → logprob: -4.193608283996582
    5. ' is' → logprob: -4.818608283996582
    6. 'found' → logprob: -5.193608283996582
    7. ' not' → logprob: -5.443608283996582
    8. '=None' → logprob: -5.443608283996582
    9. ' car' → logprob: -5.568608283996582
    10. 'n' → logprob: -5.568608283996582

Token 311: ' ray' (ID: 22420)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3232531249523163
    2. ' ray' → logprob: -1.4482531547546387
    3. 'ray' → logprob: -3.6982531547546387
    4. 'n' → logprob: -4.323253154754639
    5. '   ' → logprob: -6.948253154754639
    6. 'scr' → logprob: -7.698253154754639
    7. ' à' → logprob: -8.44825267791748
    8. ' scr' → logprob: -8.57325267791748
    9. '_ray' → logprob: -8.57325267791748
    10. ' est' → logprob: -9.07325267791748

Token 312: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.038955941796302795
    2. 'ed' → logprob: -4.288956165313721
    3. 'éd' → logprob: -4.413956165313721
    4. 'd' → logprob: -4.913956165313721
    5. 'n' → logprob: -6.288956165313721
    6. 'né' → logprob: -7.288956165313721
    7. '_' → logprob: -7.413956165313721
    8. ' ' → logprob: -7.788956165313721
    9. 'ée' → logprob: -7.788956165313721
    10. '   ' → logprob: -8.538955688476562

Token 313: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3365950286388397
    2. ' n' → logprob: -1.711595058441162
    3. '.' → logprob: -3.461595058441162
    4. 'found' → logprob: -3.836595058441162
    5. ' is' → logprob: -4.086595058441162
    6. ' found' → logprob: -4.461595058441162
    7. '```' → logprob: -4.961595058441162
    8. ' trouvé' → logprob: -5.211595058441162
    9. 'None' → logprob: -5.836595058441162
    10. '   ' → logprob: -6.461595058441162

Token 314: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.18111373484134674
    2. ''ex' → logprob: -2.4311137199401855
    3. 'est' → logprob: -2.8061137199401855
    4. 'ex' → logprob: -4.4311137199401855
    5. ''a' → logprob: -5.6811137199401855
    6. ''' → logprob: -8.056114196777344
    7. 'n' → logprob: -8.306114196777344
    8. '’est' → logprob: -8.306114196777344
    9. 'pas' → logprob: -8.556114196777344
    10. ' est' → logprob: -8.681114196777344

Token 315: ' trouvé' (ID: 60081)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.4671087265014648
    2. 'tr' → logprob: -1.5921087265014648
    3. 'present' → logprob: -1.5921087265014648
    4. 'prés' → logprob: -1.9671087265014648
    5. ' trouvé' → logprob: -2.092108726501465
    6. ' present' → logprob: -3.342108726501465
    7. ' found' → logprob: -3.592108726501465
    8. 'None' → logprob: -4.092108726501465
    9. ' None' → logprob: -4.717108726501465
    10. ' présent' → logprob: -5.092108726501465

Token 316: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051059603691101074
    2. '.' → logprob: -3.1760597229003906
    3. ',' → logprob: -5.676059722900391
    4. 'def' → logprob: -6.301059722900391
    5. ':' → logprob: -7.301059722900391
    6. ')' → logprob: -7.551059722900391
    7. '.
' → logprob: -8.05105972290039
    8. '<|end|>' → logprob: -8.30105972290039
    9. '):
' → logprob: -8.42605972290039
    10. ':
' → logprob: -8.92605972290039

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015118924900889397
    2. '```' → logprob: -5.6401190757751465
    3. '
' → logprob: -5.7651190757751465
    4. ')' → logprob: -5.8901190757751465
    5. '):
' → logprob: -6.0151190757751465
    6. ')
' → logprob: -6.7651190757751465
    7. '    
' → logprob: -7.3901190757751465
    8. '  
' → logprob: -7.8901190757751465
    9. '):' → logprob: -8.140118598937988
    10. '\n' → logprob: -8.890118598937988

Token 318: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005468539893627167
    2. '
' → logprob: -5.755468368530273
    3. 'def' → logprob: -7.255468368530273
    4. '```' → logprob: -7.255468368530273
    5. ')' → logprob: -7.380468368530273
    6. '"""' → logprob: -9.630468368530273
    7. '):
' → logprob: -10.005468368530273
    8. '    
' → logprob: -10.130468368530273
    9. '"""
' (adapté à ' """
') → logprob: -10.880468368530273
    10. ')
' → logprob: -11.005468368530273

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00282984203658998
    2. ' for' → logprob: -6.0028300285339355
    3. 'for' → logprob: -8.002829551696777
    4. '```' → logprob: -11.627829551696777
    5. '
' → logprob: -11.752829551696777
    6. '    
' → logprob: -13.002829551696777
    7. '	for' → logprob: -15.377829551696777
    8. '    ' → logprob: -15.752829551696777
    9. '   ' → logprob: -16.377830505371094
    10. '       ' → logprob: -16.752830505371094

Token 320: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02329276315867901
    2. ' for' → logprob: -4.023292541503906
    3. '   ' → logprob: -5.273292541503906
    4. '```' → logprob: -12.898292541503906
    5. '
' → logprob: -16.023292541503906
    6. '	for' → logprob: -16.523292541503906
    7. ' ' → logprob: -17.148292541503906
    8. '``' → logprob: -17.273292541503906
    9. '  ' → logprob: -17.898292541503906
    10. 'def' → logprob: -18.148292541503906

Token 321: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020741820335388
    2. ' y' → logprob: -2.3502073287963867
    3. '	y' → logprob: -14.975207328796387
    4. '   ' → logprob: -15.225207328796387
    5. ' ' → logprob: -15.850207328796387
    6. 'x' → logprob: -16.350208282470703
    7. ''y' → logprob: -18.475208282470703
    8. ')y' → logprob: -18.850208282470703
    9. '  ' → logprob: -19.100208282470703
    10. '[y' → logprob: -19.350208282470703

Token 322: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028083212673664093
    2. 'in' → logprob: -5.877808094024658
    3. '   ' → logprob: -14.002808570861816
    4. ' ' → logprob: -14.002808570861816
    5. 'range' → logprob: -14.752808570861816
    6. 'In' → logprob: -15.377808570861816
    7. 'import' → logprob: -15.502808570861816
    8. '<|end|>' → logprob: -15.627808570861816
    9. ',' → logprob: -15.877808570861816
    10. ')' → logprob: -16.0028076171875

Token 323: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858884960412979
    2. ' range' → logprob: -3.048588752746582
    3. ' in' → logprob: -14.798588752746582
    4. 'in' → logprob: -15.298588752746582
    5. ' ' → logprob: -15.548588752746582
    6. '(range' → logprob: -15.548588752746582
    7. '   ' → logprob: -15.673588752746582
    8. '0' → logprob: -15.923588752746582
    9. '
' → logprob: -16.6735897064209
    10. '	range' → logprob: -17.6735897064209

Token 324: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00010473522706888616
    2. 'H' → logprob: -9.375104904174805
    3. '(' → logprob: -10.875104904174805
    4. '(
' → logprob: -14.250104904174805
    5. ' H' → logprob: -15.875104904174805
    6. ' (' → logprob: -16.500104904174805
    7. '   ' → logprob: -16.625104904174805
    8. '	H' → logprob: -16.750104904174805
    9. ',H' → logprob: -18.375104904174805
    10. ')' → logprob: -19.000104904174805

Token 325: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47415271401405334
    2. '):' → logprob: -0.974152684211731
    3. ')' → logprob: -10.724152565002441
    4. ':' → logprob: -10.849152565002441
    5. '):
' → logprob: -11.099152565002441
    6. '   ' → logprob: -11.849152565002441
    7. ':
' → logprob: -12.474152565002441
    8. '):

' → logprob: -12.599152565002441
    9. '<|end|>' → logprob: -13.724152565002441
    10. ' ):
' → logprob: -13.974152565002441

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13245724141597748
    2. ' for' → logprob: -2.1324572563171387
    3. '   ' → logprob: -5.257457256317139
    4. 'for' → logprob: -8.13245677947998
    5. '```' → logprob: -12.63245677947998
    6. '	for' → logprob: -12.75745677947998
    7. '    ' → logprob: -13.25745677947998
    8. '	   ' → logprob: -13.63245677947998
    9. '    ' → logprob: -14.00745677947998
    10. '   ' → logprob: -14.13245677947998

Token 327: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5789567232131958
    2. ' for' → logprob: -0.8289567232131958
    3. '   ' → logprob: -5.828956604003906
    4. '       ' → logprob: -9.578956604003906
    5. '	for' → logprob: -13.203956604003906
    6. ' ' → logprob: -14.578956604003906
    7. '           ' → logprob: -16.953956604003906
    8. '    ' → logprob: -17.328956604003906
    9. '  ' → logprob: -17.953956604003906
    10. '     ' → logprob: -18.328956604003906

Token 328: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006715370807796717
    2. ' x' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.631715774536133
    4. '0' → logprob: -19.006715774536133
    5. '   ' → logprob: -19.131715774536133
    6. '	x' → logprob: -19.506715774536133
    7. ' in' → logprob: -20.381715774536133
    8. '(x' → logprob: -20.631715774536133
    9. ')x' → logprob: -21.131715774536133
    10. ',x' → logprob: -21.381715774536133

Token 329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022008095402270555
    2. 'in' → logprob: -6.127200603485107
    3. ' ' → logprob: -11.877201080322266
    4. '    ' → logprob: -13.002201080322266
    5. '<|end|>' → logprob: -13.502201080322266
    6. 'In' → logprob: -13.627201080322266
    7. '   ' → logprob: -13.877201080322266
    8. '        ' → logprob: -14.127201080322266
    9. 'import' → logprob: -14.627201080322266
    10. '       ' → logprob: -14.877201080322266

Token 330: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05003029480576515
    2. ' range' → logprob: -3.05003023147583
    3. 'W' → logprob: -6.55003023147583
    4. '(W' → logprob: -12.050030708312988
    5. '(range' → logprob: -12.425030708312988
    6. ' W' → logprob: -13.175030708312988
    7. 'Range' → logprob: -17.550029754638672
    8. '   ' → logprob: -18.050029754638672
    9. ' ' → logprob: -18.425029754638672
    10. ' in' → logprob: -18.425029754638672

Token 331: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.029758011922240257
    2. 'W' → logprob: -3.5297579765319824
    3. ' W' → logprob: -12.90475845336914
    4. '(' → logprob: -13.15475845336914
    5. ' (' → logprob: -13.40475845336914
    6. ' ' → logprob: -15.02975845336914
    7. ')' → logprob: -15.15475845336914
    8. '   ' → logprob: -15.15475845336914
    9. '1' → logprob: -15.65475845336914
    10. '	W' → logprob: -16.15475845336914

Token 332: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31334152817726135
    2. '):
' → logprob: -1.313341498374939
    3. ':' → logprob: -10.56334114074707
    4. ')' → logprob: -10.68834114074707
    5. '):
' → logprob: -11.06334114074707
    6. '):

' → logprob: -11.68834114074707
    7. '           ' → logprob: -13.68834114074707
    8. ':
' → logprob: -13.81334114074707
    9. '       ' → logprob: -13.93834114074707
    10. '   ' → logprob: -13.93834114074707

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011173540260642767
    2. 'if' → logprob: -7.37611722946167
    3. ' if' → logprob: -7.62611722946167
    4. '	       ' → logprob: -14.126117706298828
    5. '               ' → logprob: -14.376117706298828
    6. '
' → logprob: -14.501117706298828
    7. '       ' → logprob: -14.751117706298828
    8. '            
' → logprob: -14.876117706298828
    9. '```' → logprob: -15.626117706298828
    10. '          ' → logprob: -16.626117706298828

Token 334: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3996269404888153
    2. ' if' → logprob: -1.1496269702911377
    3. '           ' → logprob: -4.399626731872559
    4. '               ' → logprob: -7.899626731872559
    5. '       ' → logprob: -10.899626731872559
    6. '   ' → logprob: -13.399626731872559
    7. 'If' → logprob: -14.399626731872559
    8. '	if' → logprob: -14.524626731872559
    9. '	       ' → logprob: -15.274626731872559
    10. ' ' → logprob: -15.399626731872559

Token 335: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.25192973017692566
    2. 'floor' → logprob: -1.501929759979248
    3. '_floor' → logprob: -15.25192928314209
    4. ' ' → logprob: -16.001930236816406
    5. 'flo' → logprob: -16.751930236816406
    6. 'f' → logprob: -16.751930236816406
    7. '.floor' → logprob: -16.876930236816406
    8. 'Floor' → logprob: -17.001930236816406
    9. '   ' → logprob: -17.126930236816406
    10. ' ' → logprob: -17.251930236816406

Token 336: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.9361264946837764e-07
    2. '[x' → logprob: -16.625
    3. 'y' → logprob: -17.875
    4. '[' → logprob: -18.875
    5. ' [' → logprob: -19.0
    6. '][' → logprob: -19.125
    7. '[Y' → logprob: -19.75
    8. ')[' → logprob: -20.75
    9. '(y' → logprob: -20.875
    10. '[u' → logprob: -20.875

Token 337: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008662078529596329
    2. '[x' → logprob: -4.883662223815918
    3. '[y' → logprob: -6.883662223815918
    4. ']' → logprob: -11.258662223815918
    5. ' ][' → logprob: -12.133662223815918
    6. '[' → logprob: -12.383662223815918
    7. '   ' → logprob: -13.508662223815918
    8. '}[' → logprob: -14.133662223815918
    9. '[i' → logprob: -14.258662223815918
    10. ' [' → logprob: -14.508662223815918

Token 338: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0280383548888494e-06
    2. ' x' → logprob: -13.875000953674316
    3. '[x' → logprob: -19.250001907348633
    4. '][' → logprob: -20.375001907348633
    5. ' ' → logprob: -20.750001907348633
    6. '(x' → logprob: -21.125001907348633
    7. '```' → logprob: -21.250001907348633
    8. ')x' → logprob: -21.625001907348633
    9. '	x' → logprob: -21.625001907348633
    10. ']' → logprob: -21.875001907348633

Token 339: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30286306142807007
    2. ' ==' → logprob: -1.6778631210327148
    3. ']==' → logprob: -3.177863121032715
    4. '==' → logprob: -3.427863121032715
    5. ' ]' → logprob: -8.052863121032715
    6. ')' → logprob: -9.802863121032715
    7. ')==' → logprob: -11.427863121032715
    8. ' ' → logprob: -13.052863121032715
    9. '=' → logprob: -13.427863121032715
    10. '[' → logprob: -13.802863121032715

Token 340: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04859168455004692
    2. '==' → logprob: -3.0485916137695312
    3. ']==' → logprob: -12.673591613769531
    4. ')==' → logprob: -14.798591613769531
    5. ' ' → logprob: -15.173591613769531
    6. '1' → logprob: -15.923591613769531
    7. '==
' → logprob: -16.17359161376953
    8. ' ==
' → logprob: -16.42359161376953
    9. '()==' → logprob: -16.79859161376953
    10. '[' → logprob: -16.79859161376953

Token 341: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815006136894226
    2. ' ' → logprob: -4.0181498527526855
    3. '   ' → logprob: -16.893150329589844
    4. ' ' → logprob: -18.518150329589844
    5. '  ' → logprob: -18.643150329589844
    6. '```' → logprob: -18.643150329589844
    7. '0' → logprob: -19.143150329589844
    8. '۱' → logprob: -20.393150329589844
    9. '１' → logprob: -20.455650329589844
    10. '' → logprob: -20.455650329589844

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -20.500001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '0' → logprob: -21.750001907348633
    6. '۱' → logprob: -21.875001907348633
    7. '１' → logprob: -21.875001907348633
    8. '`' → logprob: -22.500001907348633
    9. '  ' → logprob: -22.500001907348633
    10. '<|end|>' → logprob: -22.687501907348633

Token 343: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38828495144844055
    2. ':' → logprob: -1.1382849216461182
    3. '               ' → logprob: -7.388285160064697
    4. ':return' → logprob: -7.638285160064697
    5. '):
' → logprob: -8.513284683227539
    6. '           ' → logprob: -9.513284683227539
    7. ' :
' → logprob: -12.138284683227539
    8. '):' → logprob: -12.138284683227539
    9. '       ' → logprob: -12.263284683227539
    10. ':

' → logprob: -12.388284683227539

Token 344: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033040239941328764
    2. ' return' → logprob: -6.0033040046691895
    3. 'return' → logprob: -7.1283040046691895
    4. '           ' → logprob: -12.128304481506348
    5. '	return' → logprob: -12.878304481506348
    6. ':return' → logprob: -12.878304481506348
    7. '<|end|>' → logprob: -13.003304481506348
    8. '	           ' → logprob: -13.128304481506348
    9. '
' → logprob: -13.128304481506348
    10. '		       ' → logprob: -13.378304481506348

Token 345: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1664552390575409
    2. ' return' → logprob: -1.9164552688598633
    3. '               ' → logprob: -5.166455268859863
    4. '                   ' → logprob: -7.666455268859863
    5. '	return' → logprob: -10.541455268859863
    6. '
' → logprob: -12.291455268859863
    7. '{return' → logprob: -13.166455268859863
    8. '                       ' → logprob: -13.291455268859863
    9. ':return' → logprob: -13.416455268859863
    10. '   ' → logprob: -14.041455268859863

Token 346: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4038301408290863
    2. '(x' → logprob: -1.1538301706314087
    3. ' (' → logprob: -4.778830051422119
    4. ' x' → logprob: -4.778830051422119
    5. '(' → logprob: -12.653830528259277
    6. '	x' → logprob: -15.028830528259277
    7. '   ' → logprob: -15.278830528259277
    8. '(
' → logprob: -15.653830528259277
    9. '{x' → logprob: -15.903830528259277
    10. ' ' → logprob: -16.15382957458496

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020293963607400656
    2. ',y' → logprob: -6.2520294189453125
    3. ' ,' → logprob: -9.252029418945312
    4. ',
' → logprob: -12.627029418945312
    5. '<|end|>' → logprob: -14.127029418945312
    6. ',user' → logprob: -15.252029418945312
    7. ',n' → logprob: -15.502029418945312
    8. 'y' → logprob: -16.877029418945312
    9. ',\
' → logprob: -17.127029418945312
    10. ',b' → logprob: -17.127029418945312

Token 348: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001584850688232109
    2. ' y' → logprob: -8.750158309936523
    3. '<|end|>' → logprob: -19.250158309936523
    4. '	y' → logprob: -21.000158309936523
    5. '
' → logprob: -21.125158309936523
    6. ' ' → logprob: -22.375158309936523
    7. ')y' → logprob: -22.375158309936523
    8. 'x' → logprob: -23.000158309936523
    9. '```' → logprob: -23.125158309936523
    10. ',y' → logprob: -23.500158309936523

Token 349: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5369853973388672
    2. '
' → logprob: -0.9119853973388672
    3. '    
' → logprob: -5.286985397338867
    4. 'None' → logprob: -5.411985397338867
    5. 'return' → logprob: -6.161985397338867
    6. ' return' → logprob: -7.411985397338867
    7. '	return' → logprob: -8.036985397338867
    8. ' None' → logprob: -8.036985397338867
    9. '<|end|>' → logprob: -8.161985397338867
    10. '  
' → logprob: -8.661985397338867

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071184877306222916
    2. '
' → logprob: -6.0071187019348145
    3. 'return' → logprob: -6.1321187019348145
    4. 'None' → logprob: -6.1321187019348145
    5. '    
' → logprob: -8.882118225097656
    6. ' return' → logprob: -9.132118225097656
    7. '       ' → logprob: -11.257118225097656
    8. ' None' → logprob: -11.382118225097656
    9. '```' → logprob: -12.382118225097656
    10. '           ' → logprob: -13.007118225097656

Token 351: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21599453687667847
    2. '   ' → logprob: -2.2159945964813232
    3. 'None' → logprob: -2.4659945964813232
    4. ' return' → logprob: -9.090994834899902
    5. '
' → logprob: -9.215994834899902
    6. '	return' → logprob: -9.840994834899902
    7. '    
' → logprob: -11.340994834899902
    8. ' None' → logprob: -11.965994834899902
    9. '```' → logprob: -13.090994834899902
    10. '  ' → logprob: -13.715994834899902

Token 352: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005530327325686812
    2. ' None' → logprob: -7.500553131103516
    3. '_None' → logprob: -18.500553131103516
    4. '(None' → logprob: -19.750553131103516
    5. '=None' → logprob: -20.750553131103516
    6. ',None' → logprob: -21.000553131103516
    7. 'none' → logprob: -21.625553131103516
    8. '_none' → logprob: -23.375553131103516
    9. '.None' → logprob: -23.500553131103516
    10. '
' → logprob: -24.500553131103516

Token 353: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32156410813331604
    2. '<|end|>' → logprob: -1.3215640783309937
    3. '
' → logprob: -5.446564197540283
    4. '<|end|>' → logprob: -5.946564197540283
    5. '

' → logprob: -7.571564197540283
    6. '```' → logprob: -7.696564197540283
    7. ' def' → logprob: -9.946563720703125
    8. ')' → logprob: -10.071563720703125
    9. '\' → logprob: -10.196563720703125
    10. ',' → logprob: -10.446563720703125

Token 354: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.153795766294934e-06
    2. '
' → logprob: -12.250005722045898
    3. '```' → logprob: -13.875005722045898
    4. '  
' → logprob: -16.0000057220459
    5. ' def' → logprob: -16.5000057220459
    6. '

' → logprob: -16.7500057220459
    7. '    
' → logprob: -17.0000057220459
    8. 'ndef' → logprob: -17.1250057220459
    9. 'import' → logprob: -17.1250057220459
    10. '\' → logprob: -17.2500057220459

Token 355: ' dfs' (ID: 51252)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4863337576389313
    2. ' cover' → logprob: -1.2363337278366089
    3. ' can' → logprob: -3.1113338470458984
    4. ' back' → logprob: -4.486333847045898
    5. 'cover' → logprob: -4.611333847045898
    6. 'solve' → logprob: -4.986333847045898
    7. ' def' → logprob: -5.236333847045898
    8. ' dfs' → logprob: -5.361333847045898
    9. ' search' → logprob: -6.236333847045898
    10. ' try' → logprob: -6.486333847045898

Token 356: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.02763589844107628
    2. '(' → logprob: -3.6526358127593994
    3. ' (' → logprob: -7.0276360511779785
    4. '_floor' → logprob: -7.7776360511779785
    5. 'floor' → logprob: -11.65263557434082
    6. '(
' → logprob: -12.02763557434082
    7. '_(' → logprob: -12.65263557434082
    8. '(car' → logprob: -13.15263557434082
    9. ' floor' → logprob: -13.27763557434082
    10. '(_' → logprob: -13.65263557434082

Token 357: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.0022324516903609037
    2. 'loo' → logprob: -6.752232551574707
    3. 'lo' → logprob: -7.627232551574707
    4. 'ind' → logprob: -8.752232551574707
    5. 'l' → logprob: -9.002232551574707
    6. 'oor' → logprob: -9.127232551574707
    7. '_' → logprob: -10.252232551574707
    8. 'or' → logprob: -10.877232551574707
    9. 'lr' → logprob: -10.877232551574707
    10. '(' → logprob: -11.127232551574707

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.522638169466518e-05
    2. ' ,' → logprob: -10.625024795532227
    3. ',f' → logprob: -14.750024795532227
    4. ',
' → logprob: -15.375024795532227
    5. ',W' → logprob: -16.125024795532227
    6. '   ' → logprob: -16.875024795532227
    7. '‌,' → logprob: -17.375024795532227
    8. '),' → logprob: -17.375024795532227
    9. ')' → logprob: -18.125024795532227
    10. 'W' → logprob: -18.250024795532227

Token 359: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.31348755955696106
    2. ' W' → logprob: -1.3134875297546387
    3. ' ' → logprob: -9.438488006591797
    4. '   ' → logprob: -10.188488006591797
    5. 'floor' → logprob: -10.938488006591797
    6. 'covered' → logprob: -11.563488006591797
    7. 'x' → logprob: -11.813488006591797
    8. ' floor' → logprob: -11.938488006591797
    9. 'f' → logprob: -12.188488006591797
    10. 'scr' → logprob: -12.438488006591797

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7159857786027715e-05
    2. ',H' → logprob: -10.625046730041504
    3. ' ,' → logprob: -10.750046730041504
    4. ',
' → logprob: -13.625046730041504
    5. 'H' → logprob: -17.37504768371582
    6. ',

' → logprob: -17.75004768371582
    7. '‌,' → logprob: -19.00004768371582
    8. '_,' → logprob: -19.12504768371582
    9. ',
' → logprob: -19.12504768371582
    10. ' H' → logprob: -19.50004768371582

Token 361: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.018158255144953728
    2. ' H' → logprob: -4.018158435821533
    3. '   ' → logprob: -12.643157958984375
    4. ' ' → logprob: -12.643157958984375
    5. 'def' → logprob: -14.518157958984375
    6. '  ' → logprob: -14.893157958984375
    7. ',' → logprob: -15.143157958984375
    8. '    ' → logprob: -15.268157958984375
    9. '
' → logprob: -15.705657958984375
    10. '     ' → logprob: -16.268157958984375

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041145626222715e-05
    2. '):' → logprob: -11.625011444091797
    3. ' ,' → logprob: -13.250011444091797
    4. '   ' → logprob: -16.625011444091797
    5. ')' → logprob: -16.625011444091797
    6. ',
' → logprob: -16.875011444091797
    7. '‌,' → logprob: -17.750011444091797
    8. '):
' → logprob: -18.250011444091797
    9. ',x' → logprob: -18.375011444091797
    10. '),' → logprob: -18.625011444091797

Token 363: ' carpets' (ID: 93343)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.305867999792099
    2. 'max' → logprob: -2.930867910385132
    3. 'count' → logprob: -3.180867910385132
    4. 'remaining' → logprob: -3.680867910385132
    5. ' carpets' → logprob: -3.930867910385132
    6. 'scr' → logprob: -4.180868148803711
    7. 'used' → logprob: -4.180868148803711
    8. 'k' → logprob: -4.430868148803711
    9. ' max' → logprob: -5.180868148803711
    10. 'available' → logprob: -5.305868148803711

Token 364: '_used' (ID: 67016)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.100059156073257e-05
    2. '):' → logprob: -10.375070571899414
    3. ' ,' → logprob: -11.000070571899414
    4. 's' → logprob: -11.250070571899414
    5. ',
' → logprob: -13.250070571899414
    6. '_sizes' → logprob: -13.250070571899414
    7. '_used' → logprob: -13.625070571899414
    8. '_available' → logprob: -13.750070571899414
    9. '):
' → logprob: -13.750070571899414
    10. '_counts' → logprob: -15.000070571899414

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037597675691358745
    2. '):' → logprob: -8.125375747680664
    3. ' ,' → logprob: -9.625375747680664
    4. '):
' → logprob: -11.500375747680664
    5. ',
' → logprob: -13.750375747680664
    6. ')' → logprob: -14.000375747680664
    7. '   ' → logprob: -14.000375747680664
    8. ' ):' → logprob: -14.500375747680664
    9. ' ' → logprob: -16.500375747680664
    10. '_,' → logprob: -16.937875747680664

Token 366: ' best' (ID: 1636)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5518255233764648
    2. 'car' → logprob: -1.5518255233764648
    3. ' max' → logprob: -1.9268255233764648
    4. ' carpets' → logprob: -3.426825523376465
    5. 'limit' → logprob: -4.676825523376465
    6. 'available' → logprob: -5.051825523376465
    7. 'remaining' → logprob: -5.176825523376465
    8. ' limit' → logprob: -5.926825523376465
    9. ' remaining' → logprob: -6.426825523376465
    10. ' available' → logprob: -6.926825523376465

Token 367: '):
' (ID: 1883)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.24444933235645294
    2. '_so' → logprob: -2.7444493770599365
    3. ',' → logprob: -3.1194493770599365
    4. '_solution' → logprob: -3.4944493770599365
    5. '_score' → logprob: -4.244449138641357
    6. '):' → logprob: -4.369449138641357
    7. '_cost' → logprob: -4.369449138641357
    8. '_car' → logprob: -4.619449138641357
    9. ')' → logprob: -5.369449138641357
    10. '_used' → logprob: -5.744449138641357

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2339184433221817
    2. ':' → logprob: -2.1089184284210205
    3. ',' → logprob: -2.8589184284210205
    4. '(' → logprob: -4.1089186668396
    5. '):' → logprob: -5.2339186668396
    6. '(x' → logprob: -5.9839186668396
    7. '():' → logprob: -6.9839186668396
    8. ' (' → logprob: -7.3589186668396
    9. ' :' → logprob: -7.6089186668396
    10. '{' → logprob: -7.7339186668396

Token 369: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5584893226623535
    2. 'pos' → logprob: -1.1834893226623535
    3. ' pos' → logprob: -2.4334893226623535
    4. 'first' → logprob: -4.6834893226623535
    5. ' first' → logprob: -4.6834893226623535
    6. 'next' → logprob: -5.4334893226623535
    7. ' next' → logprob: -6.1834893226623535
    8. '    
' → logprob: -6.4334893226623535
    9. 'state' → logprob: -6.9334893226623535
    10. 'scr' → logprob: -7.0584893226623535

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014400775544345379
    2. 'x' → logprob: -5.264400959014893
    3. '    ' → logprob: -5.639400959014893
    4. ')' → logprob: -6.764400959014893
    5. ' x' → logprob: -7.264400959014893
    6. ' ' → logprob: -7.639400959014893
    7. ' ' → logprob: -8.014400482177734
    8. ' next' → logprob: -8.014400482177734
    9. ' 
' → logprob: -8.264400482177734
    10. 'token' → logprob: -8.389400482177734

Token 371: ' Recherche' (ID: 114815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3086085915565491
    2. ' if' → logprob: -2.0586085319519043
    3. 'if' → logprob: -3.1836085319519043
    4. ' x' → logprob: -3.1836085319519043
    5. 'x' → logprob: -3.4336085319519043
    6. 'pos' → logprob: -5.308608531951904
    7. ' first' → logprob: -5.808608531951904
    8. 'next' → logprob: -6.058608531951904
    9. ' next' → logprob: -6.183608531951904
    10. 'first' → logprob: -6.683608531951904

Token 372: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5201833844184875
    2. ')' → logprob: -2.3951833248138428
    3. '<|end|>' → logprob: -2.6451833248138428
    4. '_' → logprob: -3.1451833248138428
    5. '(' → logprob: -3.3951833248138428
    6. '(f' → logprob: -3.5201833248138428
    7. 'def' → logprob: -3.8951833248138428
    8. '(
' → logprob: -4.020183563232422
    9. 'max' → logprob: -4.520183563232422
    10. ' (' → logprob: -4.645183563232422

Token 373: ' profondeur' (ID: 128210)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0047384146600961685
    2. 'prof' → logprob: -5.3797383308410645
    3. ' profondeur' → logprob: -10.504738807678223
    4. '   ' → logprob: -11.004738807678223
    5. 'depth' → logprob: -11.129738807678223
    6. '
' → logprob: -11.254738807678223
    7. ' ' → logprob: -11.379738807678223
    8. 'pr' → logprob: -11.629738807678223
    9. 'dfs' → logprob: -11.629738807678223
    10. '```' → logprob: -12.129738807678223

Token 374: ' avec' (ID: 3937)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5062114000320435
    2. '   ' → logprob: -2.006211280822754
    3. ')' → logprob: -2.756211280822754
    4. ' (' → logprob: -3.006211280822754
    5. '_' → logprob: -3.131211280822754
    6. ',' → logprob: -3.881211280822754
    7. '_floor' → logprob: -3.881211280822754
    8. '_depth' → logprob: -4.631211280822754
    9. '(' → logprob: -5.006211280822754
    10. '(
' → logprob: -5.256211280822754

Token 375: ' back' (ID: 1602)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.7588368654251099
    2. ' pruning' → logprob: -2.0088367462158203
    3. 'back' → logprob: -2.1338367462158203
    4. ' back' → logprob: -2.3838367462158203
    5. 'memo' → logprob: -2.6338367462158203
    6. 'l' → logprob: -3.8838367462158203
    7. 'floor' → logprob: -4.25883674621582
    8. ' la' → logprob: -4.25883674621582
    9. ' memo' → logprob: -4.50883674621582
    10. 'la' → logprob: -5.25883674621582

Token 376: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.06599904596805573
    2. 'track' → logprob: -2.8159990310668945
    3. 'trace' → logprob: -6.1909990310668945
    4. 'tr' → logprob: -6.6909990310668945
    5. '_tracking' → logprob: -8.440999031066895
    6. 'tracker' → logprob: -8.565999031066895
    7. 't' → logprob: -9.440999031066895
    8. '_track' → logprob: -9.440999031066895
    9. 'tracked' → logprob: -10.065999031066895
    10. '_' → logprob: -10.440999031066895

Token 377: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24330280721187592
    2. '(' → logprob: -2.118302822113037
    3. ',' → logprob: -3.243302822113037
    4. '(f' → logprob: -3.618302822113037
    5. '(
' → logprob: -4.618302822113037
    6. '):' → logprob: -5.493302822113037
    7. ')' → logprob: -5.618302822113037
    8. '  ' → logprob: -6.368302822113037
    9. ':' → logprob: -6.368302822113037
    10. ' (' → logprob: -6.618302822113037

Token 378: ' trouver' (ID: 23195)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2801712155342102
    2. ' minim' → logprob: -1.6551711559295654
    3. ' trouver' → logprob: -3.7801711559295654
    4. ' couvrir' → logprob: -4.2801713943481445
    5. ' min' → logprob: -6.0301713943481445
    6. ' minimize' → logprob: -6.1551713943481445
    7. 'placer' → logprob: -6.1551713943481445
    8. ' optimiser' → logprob: -6.2801713943481445
    9. 'optim' → logprob: -6.9051713943481445
    10. ' résoudre' → logprob: -7.2801713943481445

Token 379: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20531867444515228
    2. ' the' → logprob: -2.4553186893463135
    3. ' le' → logprob: -2.7053186893463135
    4. 'the' → logprob: -4.830318450927734
    5. ' une' → logprob: -5.080318450927734
    6. '<|end|>' → logprob: -5.080318450927734
    7. ' l' → logprob: -5.455318450927734
    8. ' un' → logprob: -5.705318450927734
    9. 'le' → logprob: -7.080318450927734
    10. ' ' → logprob: -7.205318450927734

Token 380: ' nombre' (ID: 9733)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.7080966830253601
    2. 'nombre' → logprob: -1.4580967426300049
    3. ' minimum' → logprob: -1.9580967426300049
    4. ' nombre' → logprob: -2.208096742630005
    5. ' minimal' → logprob: -4.458096504211426
    6. 'minimal' → logprob: -4.958096504211426
    7. 'min' → logprob: -6.083096504211426
    8. ' plus' → logprob: -7.208096504211426
    9. 'plus' → logprob: -7.333096504211426
    10. ' meilleur' → logprob: -7.458096504211426

Token 381: ' minimal' (ID: 19957)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.28443655371665955
    2. '<|end|>' → logprob: -1.659436583518982
    3. '_tokens' → logprob: -4.9094367027282715
    4. '_' → logprob: -4.9094367027282715
    5. ' minimal' → logprob: -5.0344367027282715
    6. ' d' → logprob: -5.1594367027282715
    7. '<|end|>' → logprob: -5.2844367027282715
    8. '_token' → logprob: -5.4094367027282715
    9. 'de' → logprob: -5.9094367027282715
    10. ' ' → logprob: -6.0344367027282715

Token 383: ' tapis' (ID: 131304)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2529160976409912
    2. 'car' → logprob: -1.7529160976409912
    3. ' tapis' → logprob: -3.127916097640991
    4. '```' → logprob: -7.00291633605957
    5. 'tap' → logprob: -7.12791633605957
    6. 'c' → logprob: -7.37791633605957
    7. ' ' → logprob: -7.37791633605957
    8. ' t' → logprob: -7.62791633605957
    9. ' carpets' → logprob: -7.87791633605957
    10. ' tapp' → logprob: -8.12791633605957

Token 384: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3478713631629944
    2. ':' → logprob: -1.8478713035583496
    3. '):' → logprob: -2.5978713035583496
    4. ')' → logprob: -3.4728713035583496
    5. '<|end|>' → logprob: -4.84787130355835
    6. '
' → logprob: -5.47287130355835
    7. ' :' → logprob: -5.84787130355835
    8. '):
' → logprob: -5.97287130355835
    9. '():' → logprob: -6.09787130355835
    10. ',' → logprob: -6.34787130355835

Token 386: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03856775164604187
    2. '    
' → logprob: -4.038567543029785
    3. '
' → logprob: -4.163567543029785
    4. '  
' → logprob: -6.788567543029785
    5. ')' → logprob: -7.163567543029785
    6. ' 
' → logprob: -7.413567543029785
    7. ',' → logprob: -7.413567543029785
    8. '<|end|>' → logprob: -7.538567543029785
    9. '   
' → logprob: -7.663567543029785
    10. ':' → logprob: -9.413567543029785

Token 387: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.753599226474762
    2. ' floor' → logprob: -1.0035991668701172
    3. ' if' → logprob: -2.878599166870117
    4. '   ' → logprob: -3.253599166870117
    5. 'if' → logprob: -3.753599166870117
    6. 'def' → logprob: -4.128599166870117
    7. ' def' → logprob: -5.378599166870117
    8. ' x' → logprob: -5.753599166870117
    9. '
' → logprob: -5.878599166870117
    10. 'x' → logprob: -6.566099166870117

Token 388: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007269986905157566
    2. ' ,' → logprob: -5.632269859313965
    3. ')' → logprob: -6.757269859313965
    4. '):' → logprob: -7.132269859313965
    5. ' is' → logprob: -8.007269859313965
    6. '),' → logprob: -8.132269859313965
    7. ':' → logprob: -8.382269859313965
    8. ' =' → logprob: -8.632269859313965
    9. ',
' → logprob: -8.632269859313965
    10. '   ' → logprob: -9.007269859313965

Token 389: ' matr' (ID: 25095)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.024538278579712
    2. ' list' → logprob: -1.399538278579712
    3. 'List' → logprob: -2.024538278579712
    4. '   ' → logprob: -2.649538278579712
    5. ' List' → logprob: -3.024538278579712
    6. ')' → logprob: -3.024538278579712
    7. '[]' → logprob: -4.149538040161133
    8. 'floor' → logprob: -4.149538040161133
    9. ' la' → logprob: -4.399538040161133
    10. ' ' → logprob: -4.774538040161133

Token 390: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.553626537322998
    2. 'ix' → logprob: -0.928626537322998
    3. 'rice' → logprob: -4.053626537322998
    4. '   ' → logprob: -5.928626537322998
    5. '```' → logprob: -6.428626537322998
    6. '[' → logprob: -6.428626537322998
    7. 'ic' → logprob: -6.678626537322998
    8. 'rix' → logprob: -6.678626537322998
    9. 'is' → logprob: -7.428626537322998
    10. 'î' → logprob: -7.678626537322998

Token 391: ' mod' (ID: 1812)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27172258496284485
    2. '   ' → logprob: -2.2717225551605225
    3. ' ,' → logprob: -2.7717225551605225
    4. ' des' → logprob: -4.396722793579102
    5. ' de' → logprob: -4.521722793579102
    6. ' of' → logprob: -4.896722793579102
    7. ' (' → logprob: -4.896722793579102
    8. '[' → logprob: -5.021722793579102
    9. ' :' → logprob: -5.396722793579102
    10. ',
' → logprob: -5.521722793579102

Token 392: 'ifiée' (ID: 88506)
  Prédit: 'èle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èle' → logprob: -0.550116777420044
    2. 'ifiée' → logprob: -1.050116777420044
    3. 'él' → logprob: -3.175116777420044
    4. 'ifié' → logprob: -4.175116539001465
    5. 'if' → logprob: -4.550116539001465
    6. 'el' → logprob: -6.300116539001465
    7. 'èl' → logprob: -6.800116539001465
    8. '```' → logprob: -8.050116539001465
    9. 'élé' → logprob: -8.175116539001465
    10. 'ifie' → logprob: -8.175116539001465

Token 393: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4268319010734558
    2. ',
' → logprob: -1.4268319606781006
    3. '   ' → logprob: -2.5518319606781006
    4. ' ,' → logprob: -4.6768317222595215
    5. ' avec' → logprob: -5.1768317222595215
    6. ')' → logprob: -5.9268317222595215
    7. ' à' → logprob: -6.3018317222595215
    8. ' de' → logprob: -7.0518317222595215
    9. ' ' → logprob: -7.1768317222595215
    10. '
' → logprob: -7.1768317222595215

Token 394: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.016772212460637093
    2. ' place' → logprob: -4.266772270202637
    3. '-place' → logprob: -6.266772270202637
    4. 'plac' → logprob: -8.516772270202637
    5. 'prof' → logprob: -9.141772270202637
    6. 'pro' → logprob: -10.266772270202637
    7. ' profondeur' → logprob: -10.266772270202637
    8. 'python' → logprob: -10.266772270202637
    9. '#' → logprob: -10.391772270202637
    10. 'cha' → logprob: -10.516772270202637

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29026293754577637
    2. '   ' → logprob: -1.9152629375457764
    3. ',
' → logprob: -2.6652629375457764
    4. ')' → logprob: -4.0402631759643555
    5. '<|end|>' → logprob: -5.5402631759643555
    6. ' ,' → logprob: -5.9152631759643555
    7. ' (' → logprob: -5.9152631759643555
    8. '
' → logprob: -6.0402631759643555
    9. '.' → logprob: -6.4152631759643555
    10. ')
' → logprob: -7.4152631759643555

Token 396: ' -' (ID: 533)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.42207491397857666
    2. '   ' → logprob: -1.4220749139785767
    3. ' ' → logprob: -4.297074794769287
    4. '    ' → logprob: -4.797074794769287
    5. ' 
' → logprob: -4.797074794769287
    6. ' best' → logprob: -5.047074794769287
    7. ',' → logprob: -5.047074794769287
    8. ' carpets' → logprob: -5.047074794769287
    9. '
' → logprob: -5.172074794769287
    10. 'W' → logprob: -5.172074794769287

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00970450695604086
    2. ' ' → logprob: -6.13470458984375
    3. 'valu' → logprob: -6.13470458984375
    4. ')' → logprob: -6.63470458984375
    5. 'def' → logprob: -7.25970458984375
    6. '   ' → logprob: -7.75970458984375
    7. 'values' → logprob: -8.13470458984375
    8. 'value' → logprob: -8.13470458984375
    9. 'val' → logprob: -8.25970458984375
    10. ' def' → logprob: -8.25970458984375

Token 398: ' =' (ID: 314)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.2382289618253708
    2. ' ou' → logprob: -2.6132290363311768
    3. ' indique' → logprob: -2.9882290363311768
    4. ' partout' → logprob: -3.8632290363311768
    5. ' signifie' → logprob: -3.9882290363311768
    6. ' représente' → logprob: -4.488228797912598
    7. 'pour' → logprob: -4.738228797912598
    8. ')' → logprob: -5.363228797912598
    9. ' for' → logprob: -5.488228797912598
    10. ' =' → logprob: -5.738228797912598

Token 399: ' rec' (ID: 1369)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9149301648139954
    2. ' panneau' → logprob: -1.0399301052093506
    3. 'car' → logprob: -2.0399301052093506
    4. ' couvert' → logprob: -4.16493034362793
    5. ' panneaux' → logprob: -4.28993034362793
    6. 'cou' → logprob: -4.41493034362793
    7. 't' → logprob: -4.53993034362793
    8. 'panel' → logprob: -4.91493034362793
    9. ' rec' → logprob: -4.91493034362793
    10. ' tapis' → logprob: -5.16493034362793

Token 400: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.021535253152251244
    2. 'ouverte' → logprob: -4.146535396575928
    3. 'ouver' → logprob: -5.396535396575928
    4. 'ouvr' → logprob: -7.396535396575928
    5. 'ouv' → logprob: -8.77153491973877
    6. 'ouvrez' → logprob: -9.52153491973877
    7. 'ouvrir' → logprob: -9.64653491973877
    8. 'over' → logprob: -11.02153491973877
    9. 'ouvre' → logprob: -11.64653491973877
    10. 'ouvé' → logprob: -12.27153491973877

Token 401: 'vert' (ID: 2339)
  Prédit: 'vert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vert' → logprob: -0.22781583666801453
    2. 'verte' → logprob: -2.352815866470337
    3. 'verted' → logprob: -3.852815866470337
    4. 'verture' → logprob: -4.102815628051758
    5. 'ert' → logprob: -4.102815628051758
    6. 'ouverte' → logprob: -4.352815628051758
    7. 'u' → logprob: -5.102815628051758
    8. 'v' → logprob: -5.227815628051758
    9. 'ver' → logprob: -6.227815628051758
    10. 'ou' → logprob: -6.352815628051758

Token 402: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012497873976826668
    2. '   ' → logprob: -5.012497901916504
    3. ')' → logprob: -5.637497901916504
    4. ' ,' → logprob: -6.512497901916504
    5. '),' → logprob: -8.512497901916504
    6. '  ' → logprob: -9.137497901916504
    7. '.' → logprob: -9.262497901916504
    8. ' ' → logprob: -9.762497901916504
    9. ',
' → logprob: -10.387497901916504
    10. ' or' → logprob: -10.887497901916504

Token 403: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3298088610172272
    2. '   ' → logprob: -1.5798088312149048
    3. ',
' → logprob: -2.9548089504241943
    4. ')' → logprob: -4.204808712005615
    5. ')
' → logprob: -5.579808712005615
    6. '
' → logprob: -6.454808712005615
    7. '),' → logprob: -6.829808712005615
    8. ' ,' → logprob: -7.579808712005615
    9. '):
' → logprob: -7.829808712005615
    10. '):' → logprob: -8.829809188842773

Token 404: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18230397999286652
    2. '   ' → logprob: -2.0573039054870605
    3. ',
' → logprob: -3.6823039054870605
    4. ')' → logprob: -4.9323039054870605
    5. ' ,' → logprob: -5.4323039054870605
    6. ')
' → logprob: -6.9323039054870605
    7. '),' → logprob: -7.9323039054870605
    8. '):
' → logprob: -8.057304382324219
    9. '
' → logprob: -9.182304382324219
    10. '):' → logprob: -9.432304382324219

Token 405: ' carpets' (ID: 93343)
  Prédit: ' carpets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carpets' → logprob: -1.0367321968078613
    2. 'car' → logprob: -1.5367321968078613
    3. ' best' → logprob: -1.7867321968078613
    4. ' W' → logprob: -2.2867321968078613
    5. 'best' → logprob: -3.4117321968078613
    6. 'W' → logprob: -3.5367321968078613
    7. '   ' → logprob: -3.6617321968078613
    8. ' x' → logprob: -4.536732196807861
    9. 'scr' → logprob: -4.786732196807861
    10. ')' → logprob: -4.911732196807861

Token 406: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0009405235759913921
    2. '_util' → logprob: -7.250940322875977
    3. 'used' → logprob: -9.000940322875977
    4. ',' → logprob: -10.500940322875977
    5. '_' → logprob: -10.625940322875977
    6. '_usage' → logprob: -12.125940322875977
    7. 'Used' → logprob: -12.250940322875977
    8. '_use' → logprob: -12.375940322875977
    9. '   ' → logprob: -12.500940322875977
    10. '_USED' → logprob: -12.625940322875977

Token 407: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004687633831053972
    2. ' ,' → logprob: -5.754687786102295
    3. ' +=' → logprob: -7.879687786102295
    4. '<|end|>' → logprob: -8.004687309265137
    5. ')' → logprob: -8.254687309265137
    6. '   ' → logprob: -9.254687309265137
    7. ' ' → logprob: -9.504687309265137
    8. ' =' → logprob: -9.504687309265137
    9. ':' → logprob: -10.504687309265137
    10. ' +' → logprob: -10.629687309265137

Token 408: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11838819831609726
    2. ' int' → logprob: -2.2433881759643555
    3. 'nombre' → logprob: -6.4933881759643555
    4. ' current' → logprob: -6.6183881759643555
    5. 'current' → logprob: -6.7433881759643555
    6. ' nombre' → logprob: -7.2433881759643555
    7. ' le' → logprob: -8.493388175964355
    8. 'le' → logprob: -8.493388175964355
    9. 'integer' → logprob: -9.743388175964355
    10. ' entier' → logprob: -9.743388175964355

Token 409: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: ' tapis' (ID: 131304)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0860741138458252
    2. 'car' → logprob: -2.711074113845825
    3. ' tapis' → logprob: -4.211073875427246
    4. ' ' → logprob: -7.711073875427246
    5. 'c' → logprob: -8.836073875427246
    6. ' t' → logprob: -8.961073875427246
    7. 'tap' → logprob: -9.461073875427246
    8. ' carpets' → logprob: -9.836073875427246
    9. ' car' → logprob: -9.961073875427246
    10. '```' → logprob: -10.273573875427246

Token 411: ' pos' (ID: 1253)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05926245450973511
    2. ' ,' → logprob: -3.93426251411438
    3. '<|end|>' → logprob: -4.059262275695801
    4. ')' → logprob: -4.934262275695801
    5. '   ' → logprob: -6.059262275695801
    6. ' posé' → logprob: -6.434262275695801
    7. ' used' → logprob: -6.684262275695801
    8. ' utilisé' → logprob: -6.809262275695801
    9. ' utilisés' → logprob: -7.184262275695801
    10. '_used' → logprob: -7.184262275695801

Token 412: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.007853261195123196
    2. 'é' → logprob: -5.007853031158447
    3. 'es' → logprob: -7.007853031158447
    4. 'ed' → logprob: -9.007853507995605
    5. 's' → logprob: -10.132853507995605
    6. '   ' → logprob: -10.257853507995605
    7. 'e' → logprob: -11.382853507995605
    8. 'ées' → logprob: -11.507853507995605
    9. 'éd' → logprob: -13.007853507995605
    10. ',' → logprob: -13.507853507995605

Token 413: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08904121816158295
    2. '   ' → logprob: -2.589041233062744
    3. ',
' → logprob: -4.964041233062744
    4. ')' → logprob: -6.464041233062744
    5. ' ,' → logprob: -7.464041233062744
    6. '):
' → logprob: -7.964041233062744
    7. '<|end|>' → logprob: -8.339040756225586
    8. '):' → logprob: -9.089040756225586
    9. '```' → logprob: -9.714040756225586
    10. '  ' → logprob: -10.089040756225586

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6632276177406311
    2. ',' → logprob: -0.7882276177406311
    3. ')' → logprob: -3.7882275581359863
    4. ',
' → logprob: -5.913227558135986
    5. ' ,' → logprob: -6.288227558135986
    6. '):' → logprob: -6.538227558135986
    7. '
' → logprob: -7.913227558135986
    8. '):
' → logprob: -7.913227558135986
    9. '<|end|>' → logprob: -8.538228034973145
    10. '),' → logprob: -8.788228034973145

Token 415: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3544011414051056
    2. ',' → logprob: -1.4794011116027832
    3. 'best' → logprob: -3.854401111602783
    4. '
' → logprob: -4.479401111602783
    5. ',
' → logprob: -4.479401111602783
    6. ' best' → logprob: -4.854401111602783
    7. ')' → logprob: -4.979401111602783
    8. '-' (adapté à ' -') → logprob: -5.854401111602783
    9. ')
' → logprob: -6.104401111602783
    10. ' if' → logprob: -6.604401111602783

Token 416: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.180716410279274
    2. ' best' → logprob: -1.8057163953781128
    3. 'floor' → logprob: -7.680716514587402
    4. '
' → logprob: -8.555716514587402
    5. '   ' → logprob: -8.805716514587402
    6. ' floor' → logprob: -9.305716514587402
    7. 'car' → logprob: -10.930716514587402
    8. 'x' → logprob: -11.930716514587402
    9. ' ' → logprob: -12.305716514587402
    10. '	best' → logprob: -12.430716514587402

Token 417: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16902676224708557
    2. '):
' → logprob: -2.5440268516540527
    3. ',' → logprob: -3.2940268516540527
    4. ':' → logprob: -4.294026851654053
    5. ')' → logprob: -4.544026851654053
    6. '[' → logprob: -4.919026851654053
    7. '<|end|>' → logprob: -6.044026851654053
    8. ' =' → logprob: -6.544026851654053
    9. ' ):' → logprob: -7.419026851654053
    10. '   ' → logprob: -7.669026851654053

Token 418: ' la' (ID: 557)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.4346325099468231
    2. 'best' → logprob: -1.8096325397491455
    3. '[' → logprob: -2.5596325397491455
    4. ' [' → logprob: -2.8096325397491455
    5. ' int' → logprob: -3.8096325397491455
    6. '[int' → logprob: -4.434632301330566
    7. 'int' → logprob: -4.684632301330566
    8. ' float' → logprob: -5.934632301330566
    9. 'float' → logprob: -6.934632301330566
    10. '   ' → logprob: -7.184632301330566

Token 419: ' meilleure' (ID: 52387)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6098579168319702
    2. 'min' → logprob: -1.7348579168319702
    3. 'minimum' → logprob: -2.7348580360412598
    4. 'best' → logprob: -2.8598580360412598
    5. ' minimum' → logprob: -3.2348580360412598
    6. 'int' → logprob: -3.6098580360412598
    7. ' minimal' → logprob: -3.6098580360412598
    8. ' best' → logprob: -4.48485803604126
    9. ' meilleur' → logprob: -4.48485803604126
    10. 'minimal' → logprob: -4.85985803604126

Token 420: ' solution' (ID: 7578)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.0463101863861084
    2. '<|end|>' → logprob: -2.0463101863861084
    3. 'solution' → logprob: -2.1713101863861084
    4. '   ' → logprob: -2.1713101863861084
    5. ' solution' → logprob: -2.4213101863861084
    6. '_solution' → logprob: -2.7963101863861084
    7. 'possible' → logprob: -2.9213101863861084
    8. '
' → logprob: -3.4213101863861084
    9. '_possible' → logprob: -3.5463101863861084
    10. ' ' → logprob: -3.6713101863861084

Token 421: ' trouv' (ID: 40254)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24490191042423248
    2. '):' → logprob: -3.1199018955230713
    3. '):
' → logprob: -3.2449018955230713
    4. '   ' → logprob: -3.3699018955230713
    5. ')' → logprob: -3.7449018955230713
    6. '```' → logprob: -3.9949018955230713
    7. ' ,' → logprob: -4.24490213394165
    8. ' possible' → logprob: -4.61990213394165
    9. ',
' → logprob: -5.36990213394165
    10. ' =' → logprob: -5.61990213394165

Token 422: 'ée' (ID: 2894)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.5095363855361938
    2. 'e' → logprob: -1.5095363855361938
    3. ' jusque' → logprob: -2.3845362663269043
    4. '_so' → logprob: -3.7595362663269043
    5. ' so' → logprob: -4.134536266326904
    6. 'so' → logprob: -4.134536266326904
    7. '   ' → logprob: -4.509536266326904
    8. 'jus' → logprob: -5.884536266326904
    9. ' =' → logprob: -6.009536266326904
    10. 'until' → logprob: -6.134536266326904

Token 423: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47844618558883667
    2. '   ' → logprob: -1.3534462451934814
    3. '):
' → logprob: -3.1034462451934814
    4. ' so' → logprob: -3.4784462451934814
    5. ',
' → logprob: -4.603446006774902
    6. ' jusqu' → logprob: -5.103446006774902
    7. ' ,' → logprob: -5.353446006774902
    8. ' (' → logprob: -5.353446006774902
    9. ' possible' → logprob: -5.603446006774902
    10. '```' → logprob: -5.978446006774902

Token 424: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33078521490097046
    2. 'int' → logprob: -1.7057852745056152
    3. 'float' → logprob: -2.8307852745056152
    4. ' float' → logprob: -4.580785274505615
    5. '   ' → logprob: -4.830785274505615
    6. ' int' → logprob: -5.205785274505615
    7. '[' → logprob: -5.330785274505615
    8. ' )' → logprob: -6.080785274505615
    9. '[int' → logprob: -6.080785274505615
    10. 'None' → logprob: -6.205785274505615

Token 425: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008944142609834671
    2. 'érieur' → logprob: -5.758944034576416
    3. 'é' → logprob: -6.633944034576416
    4. ' )' → logprob: -6.758944034576416
    5. 'égr' → logprob: -7.008944034576416
    6. 'e' → logprob: -7.758944034576416
    7. ')
' → logprob: -7.883944034576416
    8. ',' → logprob: -7.883944034576416
    9. 'éré' → logprob: -8.008944511413574
    10. ' or' → logprob: -9.008944511413574

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3219757080078125
    2. '):' → logprob: -1.5719757080078125
    3. ':
' → logprob: -1.5719757080078125
    4. ':' → logprob: -1.6969757080078125
    5. '):
' → logprob: -2.0719757080078125
    6. '
' → logprob: -5.8219757080078125
    7. ',' → logprob: -6.3219757080078125
    8. ')' → logprob: -6.6969757080078125
    9. '    
' → logprob: -6.8219757080078125
    10. '```' → logprob: -7.8219757080078125

Token 427: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11793400347232819
    2. '):
' → logprob: -3.117933988571167
    3. '):' → logprob: -3.367933988571167
    4. ':
' → logprob: -4.242934226989746
    5. ':' → logprob: -4.867934226989746
    6. ')' → logprob: -5.117934226989746
    7. '
' → logprob: -6.492934226989746
    8. ',' → logprob: -6.617934226989746
    9. 'if' → logprob: -7.742934226989746
    10. '```' → logprob: -7.867934226989746

Token 428: 'ne' (ID: 611)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.4103171229362488
    2. 'n' → logprob: -2.1603171825408936
    3. ' s' → logprob: -3.2853171825408936
    4. 's' → logprob: -3.5353171825408936
    5. '   ' → logprob: -3.5353171825408936
    6. ' ' → logprob: -3.6603171825408936
    7. 'urn' → logprob: -4.0353169441223145
    8. '    ' → logprob: -4.1603169441223145
    9. ' True' → logprob: -4.4103169441223145
    10. 'ne' → logprob: -4.9103169441223145

Token 429: ' la' (ID: 557)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.029840273782610893
    2. 'best' → logprob: -3.5298402309417725
    3. ' True' → logprob: -10.029840469360352
    4. '	best' → logprob: -10.904840469360352
    5. ' False' → logprob: -11.529840469360352
    6. ' None' → logprob: -12.279840469360352
    7. ' min' → logprob: -12.404840469360352
    8. 'True' → logprob: -13.279840469360352
    9. '(best' → logprob: -13.529840469360352
    10. 'False' → logprob: -13.529840469360352

Token 430: ' meilleure' (ID: 52387)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.008616108447313309
    2. ' best' → logprob: -4.883615970611572
    3. 'min' → logprob: -7.883615970611572
    4. 'minimum' → logprob: -8.38361644744873
    5. 'me' → logprob: -8.63361644744873
    6. ' meilleur' → logprob: -9.25861644744873
    7. 'int' → logprob: -10.25861644744873
    8. '   ' → logprob: -10.38361644744873
    9. 'bool' → logprob: -10.75861644744873
    10. ' minimum' → logprob: -11.00861644744873

Token 431: ' solution' (ID: 7578)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.3765981197357178
    2. ' best' → logprob: -1.3765981197357178
    3. '_best' → logprob: -4.001598358154297
    4. ' min' → logprob: -4.251598358154297
    5. 'min' → logprob: -5.126598358154297
    6. '(best' → logprob: -5.876598358154297
    7. '   ' → logprob: -6.001598358154297
    8. '_car' → logprob: -6.126598358154297
    9. ' if' → logprob: -6.251598358154297
    10. '
' → logprob: -6.251598358154297

Token 432: ' trouv' (ID: 40254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.367801696062088
    2. ',' → logprob: -1.3678016662597656
    3. ' if' → logprob: -3.1178016662597656
    4. ' (' → logprob: -5.867801666259766
    5. ' ,' → logprob: -6.617801666259766
    6. '(f' → logprob: -7.367801666259766
    7. '
' → logprob: -7.367801666259766
    8. ':' → logprob: -7.617801666259766
    9. '(' → logprob: -7.992801666259766
    10. ',
' → logprob: -8.492801666259766

Token 433: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0027102497406303883
    2. 'ee' → logprob: -6.002710342407227
    3. 'é' → logprob: -8.377710342407227
    4. 'ed' → logprob: -12.752710342407227
    5. 'e' → logprob: -13.377710342407227
    6. 'è' → logprob: -16.502710342407227
    7. '�' → logprob: -18.002710342407227
    8. '   ' → logprob: -18.377710342407227
    9. 'ées' → logprob: -18.377710342407227
    10. '```' → logprob: -18.502710342407227

Token 434: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7932767271995544
    2. ',' → logprob: -1.0432767868041992
    3. ':' → logprob: -1.6682767868041992
    4. ':
' → logprob: -6.043276786804199
    5. '(f' → logprob: -6.418276786804199
    6. ' :' → logprob: -6.918276786804199
    7. '(' → logprob: -7.418276786804199
    8. '):' → logprob: -8.2932767868042
    9. '.' → logprob: -8.5432767868042
    10. ' (' → logprob: -8.7932767868042

Token 435: ' partir' (ID: 12100)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23951677978038788
    2. ' ce' → logprob: -2.3645167350769043
    3. 'ce' → logprob: -3.4895167350769043
    4. 'return' → logprob: -3.7395167350769043
    5. 'part' → logprob: -3.9895167350769043
    6. 'ret' → logprob: -4.364516735076904
    7. 'termin' → logprob: -4.739516735076904
    8. 'fin' → logprob: -5.864516735076904
    9. 'prés' → logprob: -5.864516735076904
    10. ' partir' → logprob: -5.989516735076904

Token 436: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.7807809710502625
    2. ' de' → logprob: -1.5307810306549072
    3. '   ' → logprob: -2.4057810306549072
    4. ' des' → logprob: -2.5307810306549072
    5. 'de' → logprob: -2.6557810306549072
    6. 'du' → logprob: -2.7807810306549072
    7. '(f' → logprob: -5.155780792236328
    8. 'def' → logprob: -5.280780792236328
    9. '(' → logprob: -6.030780792236328
    10. ' (' → logprob: -6.780780792236328

Token 437: ' l' (ID: 305)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8242747783660889
    2. 'l' → logprob: -1.8242747783660889
    3. 'floor' → logprob: -1.8242747783660889
    4. 'this' → logprob: -2.574274778366089
    5. 'ce' → logprob: -3.199274778366089
    6. ' ce' → logprob: -3.449274778366089
    7. ' current' → logprob: -3.824274778366089
    8. 'la' → logprob: -4.574275016784668
    9. 'c' → logprob: -4.699275016784668
    10. ' this' → logprob: -5.324275016784668

Token 438: ''état' (ID: 116357)
  Prédit: ''état'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''état' → logprob: -0.47103217244148254
    2. 'a' → logprob: -1.5960321426391602
    3. 'current' → logprob: -3.22103214263916
    4. ' current' → logprob: -3.34603214263916
    5. ''instant' → logprob: -3.97103214263916
    6. 'e' → logprob: -3.97103214263916
    7. ''appel' → logprob: -4.34603214263916
    8. ''' → logprob: -4.84603214263916
    9. ''end' → logprob: -4.84603214263916
    10. ''entrée' → logprob: -4.97103214263916

Token 439: ' actuel' (ID: 113646)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.166336327791214
    2. 'def' → logprob: -2.9163362979888916
    3. ',' → logprob: -3.0413362979888916
    4. ':' → logprob: -4.541336536407471
    5. '
' → logprob: -4.916336536407471
    6. ' :
' → logprob: -5.291336536407471
    7. ' :' → logprob: -5.416336536407471
    8. ' ,' → logprob: -5.416336536407471
    9. '    
' → logprob: -5.541336536407471
    10. ' def' → logprob: -5.791336536407471

Token 440: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03295306861400604
    2. ':
' → logprob: -4.032953262329102
    3. '   ' → logprob: -4.282953262329102
    4. '):' → logprob: -7.657953262329102
    5. ' :' → logprob: -8.657953262329102
    6. ',' → logprob: -8.907953262329102
    7. '):
' → logprob: -9.782953262329102
    8. ' :
' → logprob: -10.657953262329102
    9. ')' → logprob: -12.157953262329102
    10. ':def' → logprob: -12.407953262329102

Token 441: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006678790668956935
    2. '    
' → logprob: -7.750668048858643
    3. '
' → logprob: -9.000667572021484
    4. ':' → logprob: -10.000667572021484
    5. '```' → logprob: -10.500667572021484
    6. ':
' → logprob: -11.375667572021484
    7. '):
' → logprob: -11.750667572021484
    8. '   ' → logprob: -12.875667572021484
    9. '  
' → logprob: -13.000667572021484
    10. ')' → logprob: -13.375667572021484

Token 442: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0053176009096205235
    2. ':
' → logprob: -6.380317687988281
    3. '    
' → logprob: -7.130317687988281
    4. '):
' → logprob: -7.380317687988281
    5. ':' → logprob: -7.505317687988281
    6. '
' → logprob: -7.880317687988281
    7. 'first' → logprob: -8.380317687988281
    8. 'scr' → logprob: -8.630317687988281
    9. '```' → logprob: -8.755317687988281
    10. 'if' → logprob: -8.880317687988281

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032190944999456406
    2. 'pos' → logprob: -3.532191038131714
    3. 'scr' → logprob: -7.032190799713135
    4. 'next' → logprob: -7.532190799713135
    5. 'first' → logprob: -7.532190799713135
    6. ' pos' → logprob: -9.282191276550293
    7. '    
' → logprob: -9.782191276550293
    8. 'state' → logprob: -9.907191276550293
    9. '```' → logprob: -10.032191276550293
    10. 'res' → logprob: -10.032191276550293

Token 444: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.008835320360958576
    2. 'first' → logprob: -4.883835315704346
    3. '   ' → logprob: -7.258835315704346
    4. 'state' → logprob: -8.633835792541504
    5. 'if' → logprob: -8.883835792541504
    6. 'next' → logprob: -9.633835792541504
    7. 'res' → logprob: -9.633835792541504
    8. 'found' → logprob: -11.008835792541504
    9. 'position' → logprob: -11.508835792541504
    10. '#' (adapté à ' #') → logprob: -11.758835792541504

Token 445: ' Si' (ID: 7832)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.05442752689123154
    2. 'state' → logprob: -3.3044276237487793
    3. 'first' → logprob: -4.429427623748779
    4. '   ' → logprob: -7.179427623748779
    5. ' pos' → logprob: -7.179427623748779
    6. 'res' → logprob: -7.679427623748779
    7. 'next' → logprob: -7.929427623748779
    8. 'x' → logprob: -8.179427146911621
    9. 'if' → logprob: -8.304427146911621
    10. 'coords' → logprob: -8.554427146911621

Token 446: ' on' (ID: 402)
  Prédit: ' carpets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' carpets' → logprob: -0.5013096928596497
    2. 'best' → logprob: -1.3763096332550049
    3. ' best' → logprob: -2.126309633255005
    4. 'car' → logprob: -4.876309871673584
    5. ' find' → logprob: -5.626309871673584
    6. ' not' → logprob: -5.751309871673584
    7. 'can' → logprob: -6.376309871673584
    8. 'find' → logprob: -6.501309871673584
    9. 'all' → logprob: -6.876309871673584
    10. ' can' → logprob: -7.001309871673584

Token 447: ' a' (ID: 261)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.228242039680481
    2. ' trouve' → logprob: -1.353242039680481
    3. 'est' → logprob: -2.3532419204711914
    4. ' find' → logprob: -2.4782419204711914
    5. 'n' → logprob: -2.8532419204711914
    6. '_find' → logprob: -3.3532419204711914
    7. '_best' → logprob: -3.4782419204711914
    8. ' n' → logprob: -4.228241920471191
    9. 'pas' → logprob: -4.353241920471191
    10. 'found' → logprob: -4.478241920471191

Token 448: ' déjà' (ID: 21229)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.13153034448623657
    2. ' best' → logprob: -2.131530284881592
    3. '_best' → logprob: -6.256530284881592
    4. 'car' → logprob: -6.756530284881592
    5. ' found' → logprob: -7.506530284881592
    6. 'found' → logprob: -8.75653076171875
    7. 'me' → logprob: -9.25653076171875
    8. 'b' → logprob: -9.38153076171875
    9. ' ' → logprob: -9.50653076171875
    10. ' meilleurs' → logprob: -9.63153076171875

Token 449: ' dépass' (ID: 99759)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.00011093381908722222
    2. ' carpets' → logprob: -9.375110626220703
    3. '   ' → logprob: -10.750110626220703
    4. 'cars' → logprob: -12.875110626220703
    5. ' carp' → logprob: -13.875110626220703
    6. 'best' → logprob: -15.125110626220703
    7. ' carpet' → logprob: -15.375110626220703
    8. 'used' → logprob: -15.375110626220703
    9. '```' → logprob: -16.125110626220703
    10. ' ' → logprob: -16.250110626220703

Token 450: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00022165567497722805
    2. 'e' → logprob: -9.500221252441406
    3. '   ' → logprob: -9.750221252441406
    4. 'u' → logprob: -10.375221252441406
    5. 'ed' → logprob: -10.500221252441406
    6. ' ' → logprob: -12.375221252441406
    7. 'ép' → logprob: -12.500221252441406
    8. '
' → logprob: -12.750221252441406
    9. ' le' → logprob: -12.875221252441406
    10. ' la' → logprob: -12.875221252441406

Token 451: ' le' (ID: 505)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.03805262967944145
    2. ' best' → logprob: -3.288052558898926
    3. '   ' → logprob: -11.788052558898926
    4. '	best' → logprob: -13.163052558898926
    5. 'b' → logprob: -14.538052558898926
    6. '(best' → logprob: -14.663052558898926
    7. 'the' → logprob: -15.413052558898926
    8. '_best' → logprob: -15.913052558898926
    9. ' ' → logprob: -16.038053512573242
    10. '.best' → logprob: -16.288053512573242

Token 452: ' meilleur' (ID: 37552)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00023178798437584192
    2. ' best' → logprob: -8.375231742858887
    3. 'better' → logprob: -14.875231742858887
    4. 'b' → logprob: -15.125231742858887
    5. '   ' → logprob: -15.375231742858887
    6. '
' → logprob: -16.125232696533203
    7. '	best' → logprob: -16.250232696533203
    8. '```' → logprob: -16.750232696533203
    9. 'me' → logprob: -17.125232696533203
    10. '(best' → logprob: -17.125232696533203

Token 453: ' score' (ID: 8429)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21544554829597473
    2. ':return' → logprob: -2.3404455184936523
    3. '   ' → logprob: -2.5904455184936523
    4. ' or' → logprob: -4.590445518493652
    5. ':
' → logprob: -5.090445518493652
    6. '  ' → logprob: -6.465445518493652
    7. 'return' → logprob: -6.715445518493652
    8. '    ' → logprob: -6.965445518493652
    9. ' ' → logprob: -7.090445518493652
    10. 'ou' → logprob: -8.090445518493652

Token 454: ' connu' (ID: 64644)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2777533233165741
    2. '   ' → logprob: -1.6527533531188965
    3. ':' → logprob: -3.0277533531188965
    4. 'or' → logprob: -6.9027533531188965
    5. ' >=' → logprob: -7.5277533531188965
    6. ' and' → logprob: -7.9027533531188965
    7. ':return' → logprob: -8.527752876281738
    8. ' :' → logprob: -9.277752876281738
    9. '    ' → logprob: -9.527752876281738
    10. '>=' → logprob: -9.652752876281738

Token 455: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9254387617111206
    2. '   ' → logprob: -1.0504387617111206
    3. ':' → logprob: -1.5504387617111206
    4. ' and' → logprob: -3.30043888092041
    5. 'and' → logprob: -6.05043888092041
    6. ':
' → logprob: -7.17543888092041
    7. ':return' → logprob: -7.17543888092041
    8. 'or' → logprob: -8.05043888092041
    9. ' :' → logprob: -8.67543888092041
    10. '       ' → logprob: -8.92543888092041

Token 456: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033749546855688095
    2. ' if' → logprob: -3.533749580383301
    3. ' return' → logprob: -6.158749580383301
    4. 'if' → logprob: -6.533749580383301
    5. 'return' → logprob: -7.783749580383301
    6. '       ' → logprob: -12.4087495803833
    7. '   ' → logprob: -13.6587495803833
    8. '	if' → logprob: -14.9087495803833
    9. '	return' → logprob: -14.9087495803833
    10. '  ' → logprob: -16.158748626708984

Token 457: ' stop' (ID: 5666)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09525510668754578
    2. 'return' → logprob: -3.095255136489868
    3. '       ' → logprob: -3.470255136489868
    4. ' return' → logprob: -4.345254898071289
    5. 'if' → logprob: -7.220254898071289
    6. ' if' → logprob: -7.970254898071289
    7. 'eturn' → logprob: -8.970254898071289
    8. '>' → logprob: -9.345254898071289
    9. '    ' → logprob: -10.220254898071289
    10. '           ' → logprob: -10.470254898071289

Token 458: 'pe' (ID: 424)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062016312032938004
    2. '       ' → logprob: -3.437016248703003
    3. ':' → logprob: -4.062016487121582
    4. '    ' → logprob: -4.687016487121582
    5. 'd' → logprob: -7.687016487121582
    6. '  ' → logprob: -8.562016487121582
    7. ':
' → logprob: -8.562016487121582
    8. '     ' → logprob: -8.937016487121582
    9. ' if' → logprob: -9.187016487121582
    10. '      ' → logprob: -9.187016487121582

Token 459: ' cette' (ID: 7696)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05425749719142914
    2. ' if' → logprob: -3.054257392883301
    3. 'if' → logprob: -5.179257392883301
    4. '  ' → logprob: -11.6792573928833
    5. '	if' → logprob: -12.5542573928833
    6. ' ' → logprob: -12.6792573928833
    7. '    ' → logprob: -12.8042573928833
    8. '       ' → logprob: -13.0542573928833
    9. 'return' → logprob: -14.0542573928833
    10. ' return' → logprob: -14.3042573928833

Token 460: ' branche' (ID: 101958)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9450966715812683
    2. ' carpet' → logprob: -1.695096731185913
    3. '   ' → logprob: -2.195096731185913
    4. ' dfs' → logprob: -2.195096731185913
    5. ' return' → logprob: -2.570096731185913
    6. ' recursion' → logprob: -3.820096731185913
    7. '  ' → logprob: -3.945096731185913
    8. 'if' → logprob: -4.070096492767334
    9. ' ' → logprob: -4.320096492767334
    10. 'dfs' → logprob: -4.445096492767334

Token 461: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019102399528492242
    2. ' if' → logprob: -8.750190734863281
    3. 'if' → logprob: -10.500190734863281
    4. ':' → logprob: -12.750190734863281
    5. '    
' → logprob: -14.625190734863281
    6. '	if' → logprob: -14.750190734863281
    7. '
' → logprob: -15.125190734863281
    8. ',' → logprob: -15.250190734863281
    9. '  ' → logprob: -15.750190734863281
    10. '       ' → logprob: -15.750190734863281

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016659092216286808
    2. '
' → logprob: -9.875166893005371
    3. ' if' → logprob: -9.875166893005371
    4. '    
' → logprob: -9.875166893005371
    5. 'if' → logprob: -11.500166893005371
    6. '   
' → logprob: -14.625166893005371
    7. '	if' → logprob: -15.250166893005371
    8. ' 
' → logprob: -15.500166893005371
    9. '```' → logprob: -15.625166893005371
    10. ',' → logprob: -15.625166893005371

Token 463: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6802760362625122
    2. 'if' (adapté à ' if') → logprob: -1.1802760362625122
    3. ' if' → logprob: -1.6802760362625122
    4. '	if' → logprob: -12.305275917053223
    5. ' ' → logprob: -14.055275917053223
    6. '  ' → logprob: -14.305275917053223
    7. '```' → logprob: -15.680275917053223
    8. '
' → logprob: -16.18027687072754
    9. '    ' → logprob: -16.55527687072754
    10. '    
' → logprob: -16.80527687072754

Token 464: ' carpets' (ID: 93343)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0789792388677597
    2. ' carpets' → logprob: -2.578979253768921
    3. 'cars' → logprob: -9.7039794921875
    4. ' carp' → logprob: -10.7039794921875
    5. ' carpet' → logprob: -12.4539794921875
    6. ' ' → logprob: -14.4539794921875
    7. 'c' → logprob: -14.8289794921875
    8. ' Carp' → logprob: -15.0789794921875
    9. '
' → logprob: -15.8289794921875
    10. '   ' → logprob: -16.2039794921875

Token 465: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -2.935296834039036e-06
    2. 'used' → logprob: -14.25000286102295
    3. '   ' → logprob: -14.75000286102295
    4. '_use' → logprob: -14.87500286102295
    5. '_USED' → logprob: -15.00000286102295
    6. 's' → logprob: -15.25000286102295
    7. 'Used' → logprob: -15.37500286102295
    8. '_util' → logprob: -15.62500286102295
    9. '_usage' → logprob: -16.000003814697266
    10. '_using' → logprob: -16.375003814697266

Token 466: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3135777413845062
    2. ' >=' → logprob: -1.3135777711868286
    3. '>' → logprob: -8.188577651977539
    4. ' >' → logprob: -10.313577651977539
    5. ' ' → logprob: -12.813577651977539
    6. '   ' → logprob: -13.688577651977539
    7. ' ' → logprob: -14.313577651977539
    8. '≥' → logprob: -15.438577651977539
    9. ']>=' → logprob: -15.813577651977539
    10. ')>=' → logprob: -16.18857765197754

Token 467: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0004307884373702109
    2. ' best' → logprob: -7.750430583953857
    3. '	best' → logprob: -18.375431060791016
    4. '(best' → logprob: -18.625431060791016
    5. '.best' → logprob: -20.375431060791016
    6. '
' → logprob: -21.000431060791016
    7. '   ' → logprob: -21.000431060791016
    8. 'Best' → logprob: -21.375431060791016
    9. '_best' → logprob: -21.625431060791016
    10. 'b' → logprob: -22.125431060791016

Token 468: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02047041244804859
    2. ':
' → logprob: -4.02047061920166
    3. ':return' → logprob: -6.14547061920166
    4. '   ' → logprob: -8.77047061920166
    5. '):' → logprob: -11.39547061920166
    6. '       ' → logprob: -13.02047061920166
    7. ':
' → logprob: -13.02047061920166
    8. '):
' → logprob: -13.64547061920166
    9. ' :' → logprob: -14.39547061920166
    10. ')' → logprob: -14.52047061920166

Token 469: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.625
    3. ' ' → logprob: -15.75
    4. ']' → logprob: -18.0
    5. '```' → logprob: -18.0
    6. '   ' → logprob: -18.125
    7. '1' → logprob: -19.6875
    8. '

' → logprob: -19.875
    9. '[' → logprob: -19.9375
    10. '-' → logprob: -20.3125

Token 470: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6472024321556091
    2. ']:' → logprob: -0.7722024321556091
    3. '):
' → logprob: -4.772202491760254
    4. ':' → logprob: -6.022202491760254
    5. ']:
' → logprob: -6.147202491760254
    6. ']' → logprob: -7.147202491760254
    7. ')' → logprob: -8.272202491760254
    8. '   ' → logprob: -8.522202491760254
    9. ']):' → logprob: -9.897202491760254
    10. ':return' → logprob: -9.897202491760254

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08024711161851883
    2. '   ' → logprob: -2.580247163772583
    3. ':return' → logprob: -7.330246925354004
    4. ':' → logprob: -7.830246925354004
    5. ':
' → logprob: -8.955246925354004
    6. 'return' → logprob: -9.205246925354004
    7. ' return' → logprob: -9.955246925354004
    8. '	return' → logprob: -12.205246925354004
    9. '           ' → logprob: -12.330246925354004
    10. '	' → logprob: -12.580246925354004

Token 472: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033712731674313545
    2. '       ' → logprob: -6.003371238708496
    3. '   ' → logprob: -7.503371238708496
    4. ' return' → logprob: -8.003371238708496
    5. '	return' → logprob: -11.628371238708496
    6. '
' → logprob: -14.378371238708496
    7. ':return' → logprob: -16.503372192382812
    8. '{return' → logprob: -17.003372192382812
    9. '	' → logprob: -17.253372192382812
    10. '```' → logprob: -18.253372192382812

Token 473: '

' (ID: 279)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00036561701563186944
    2. 'car' → logprob: -8.500365257263184
    3. 'float' → logprob: -9.250365257263184
    4. 'sys' → logprob: -10.625365257263184
    5. 'None' → logprob: -10.875365257263184
    6. ' best' → logprob: -11.625365257263184
    7. '999' → logprob: -12.875365257263184
    8. '	best' → logprob: -12.875365257263184
    9. 'flo' → logprob: -12.875365257263184
    10. '
' → logprob: -13.875365257263184

Token 474: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.13459573686122894
    2. '   ' → logprob: -2.1345956325531006
    3. 'first' → logprob: -5.50959587097168
    4. ' pos' → logprob: -6.13459587097168
    5. 'next' → logprob: -7.63459587097168
    6. 'state' → logprob: -8.13459587097168
    7. '    
' → logprob: -8.88459587097168
    8. 'res' → logprob: -8.88459587097168
    9. 'found' → logprob: -9.75959587097168
    10. 'position' → logprob: -10.00959587097168

Token 475: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.022591158747673035
    2. 'first' → logprob: -4.0225911140441895
    3. 'res' → logprob: -6.2725911140441895
    4. 'found' → logprob: -6.7725911140441895
    5. 'state' → logprob: -7.3975911140441895
    6. 'next' → logprob: -7.7725911140441895
    7. 'coord' → logprob: -8.772591590881348
    8. '   ' → logprob: -8.897591590881348
    9. 'position' → logprob: -10.897591590881348
    10. 'coords' → logprob: -11.022591590881348

Token 476: ' Cher' (ID: 48756)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.052908048033714294
    2. 'first' → logprob: -3.052907943725586
    3. 'res' → logprob: -6.427907943725586
    4. 'found' → logprob: -7.302907943725586
    5. 'next' → logprob: -7.427907943725586
    6. 'coord' → logprob: -7.427907943725586
    7. 'state' → logprob: -7.677907943725586
    8. 'coords' → logprob: -8.927907943725586
    9. 'position' → logprob: -9.677907943725586
    10. 'start' → logprob: -10.177907943725586

Token 477: 'che' (ID: 926)
  Prédit: 'cher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.05443994700908661
    2. 'che' → logprob: -3.0544400215148926
    3. 'er' → logprob: -6.054440021514893
    4. 'e' → logprob: -6.679440021514893
    5. '   ' → logprob: -6.929440021514893
    6. 'r' → logprob: -7.054440021514893
    7. '#' → logprob: -8.679439544677734
    8. 'chez' → logprob: -9.554439544677734
    9. 'ch' → logprob: -10.679439544677734
    10. '       ' → logprob: -11.054439544677734

Token 478: ' premier' (ID: 15506)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -1.1472444534301758
    2. 'coords' → logprob: -1.1472444534301758
    3. 'pos' → logprob: -1.2722444534301758
    4. ' first' → logprob: -3.897244453430176
    5. '   ' → logprob: -4.272244453430176
    6. 'coord' → logprob: -4.522244453430176
    7. ' coords' → logprob: -4.897244453430176
    8. ' la' → logprob: -5.147244453430176
    9. 'next' → logprob: -5.272244453430176
    10. ' pos' → logprob: -5.522244453430176

Token 479: ' panneau' (ID: 186597)
  Prédit: 'scr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scr' → logprob: -0.9814244508743286
    2. 'p' → logprob: -1.3564244508743286
    3. 'pos' → logprob: -2.356424331665039
    4. 'spot' → logprob: -2.481424331665039
    5. 'panel' → logprob: -3.606424331665039
    6. 'sp' → logprob: -3.981424331665039
    7. ' scratched' → logprob: -4.106424331665039
    8. 'scratch' → logprob: -4.356424331665039
    9. 'coords' → logprob: -4.481424331665039
    10. '_scr' → logprob: -4.606424331665039

Token 480: ' ray' (ID: 22420)
  Prédit: ' ray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ray' → logprob: -0.11530397832393646
    2. 'ray' → logprob: -2.7403039932250977
    3. '   ' → logprob: -4.115303993225098
    4. 'scr' → logprob: -5.240303993225098
    5. '_' → logprob: -5.615303993225098
    6. ' à' → logprob: -6.115303993225098
    7. '_s' → logprob: -6.552803993225098
    8. ' râ' → logprob: -6.615303993225098
    9. '_ray' → logprob: -6.677803993225098
    10. 'r' → logprob: -6.740303993225098

Token 481: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.4736459888808895e-05
    2. 'ed' → logprob: -12.125014305114746
    3. 'e' → logprob: -12.250014305114746
    4. 'ée' → logprob: -14.000014305114746
    5. 'éd' → logprob: -14.250014305114746
    6. 'Ã' → logprob: -14.250014305114746
    7. 'è' → logprob: -14.625014305114746
    8. '�' → logprob: -14.625014305114746
    9. '&eacute' → logprob: -15.500014305114746
    10. 'és' → logprob: -15.625014305114746

Token 482: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11261185258626938
    2. 'pos' → logprob: -3.362611770629883
    3. 'coords' → logprob: -3.862611770629883
    4. 'found' → logprob: -4.362611770629883
    5. ' pos' → logprob: -4.987611770629883
    6. ' coords' → logprob: -5.112611770629883
    7. ' coord' → logprob: -5.362611770629883
    8. 'coord' → logprob: -5.612611770629883
    9. ' found' → logprob: -5.737611770629883
    10. 'scr' → logprob: -6.612611770629883

Token 483: ' rec' (ID: 1369)
  Prédit: ' couvrir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvrir' → logprob: -0.6625884771347046
    2. 'c' → logprob: -1.5375884771347046
    3. 'rec' → logprob: -1.9125884771347046
    4. 'cou' → logprob: -2.537588596343994
    5. 'tr' → logprob: -3.537588596343994
    6. 'find' → logprob: -5.662588596343994
    7. ' trouver' → logprob: -6.287588596343994
    8. 'cover' → logprob: -6.537588596343994
    9. 'placer' → logprob: -7.037588596343994
    10. ' rec' → logprob: -7.037588596343994

Token 484: 'ouvrir' (ID: 32923)
  Prédit: 'ouvrir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouvrir' → logprob: -0.00020449401927180588
    2. 'c' → logprob: -9.625204086303711
    3. 'ouvr' → logprob: -9.875204086303711
    4. ' couvrir' → logprob: -10.125204086303711
    5. 'ouvoir' → logprob: -11.000204086303711
    6. 'ouvrez' → logprob: -11.500204086303711
    7. 'ouver' → logprob: -11.875204086303711
    8. 'ouv' → logprob: -12.250204086303711
    9. '

' → logprob: -14.125204086303711
    10. '```' → logprob: -14.125204086303711

Token 485: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02568713389337063
    2. 'pos' → logprob: -4.150687217712402
    3. ' pos' → logprob: -5.900687217712402
    4. 'position' → logprob: -6.275687217712402
    5. '    
' → logprob: -6.900687217712402
    6. 'coords' → logprob: -7.275687217712402
    7. ' position' → logprob: -7.525687217712402
    8. '
' → logprob: -7.650687217712402
    9. 'coord' → logprob: -8.150687217712402
    10. ',' → logprob: -8.150687217712402

Token 486: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.19559212028980255
    2. '   ' → logprob: -1.8205921649932861
    3. ' pos' → logprob: -4.320591926574707
    4. 'first' → logprob: -7.070591926574707
    5. 'coords' → logprob: -7.945591926574707
    6. 'found' → logprob: -8.320591926574707
    7. 'coord' → logprob: -8.570591926574707
    8. 'position' → logprob: -8.945591926574707
    9. 'next' → logprob: -9.195591926574707
    10. 'scr' → logprob: -9.445591926574707

Token 487: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.015778012573719025
    2. 'first' → logprob: -4.640778064727783
    3. 'found' → logprob: -6.015778064727783
    4. 'res' → logprob: -6.390778064727783
    5. 'next' → logprob: -7.015778064727783
    6. 'coord' → logprob: -8.265777587890625
    7. 'scr' → logprob: -8.765777587890625
    8. 'coords' → logprob: -8.765777587890625
    9. 'start' → logprob: -8.890777587890625
    10. '   ' → logprob: -9.640777587890625

Token 488: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06996667385101318
    2. '=' → logprob: -2.6949667930603027
    3. 'ition' → logprob: -11.569966316223145
    4. '_' → logprob: -12.069966316223145
    5. '_first' → logprob: -12.694966316223145
    6. 's' → logprob: -12.944966316223145
    7. '=_' → logprob: -12.944966316223145
    8. 'sible' → logprob: -13.194966316223145
    9. '_found' → logprob: -13.569966316223145
    10. '   ' → logprob: -13.944966316223145

Token 489: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -5.836499985889532e-05
    2. ' find' → logprob: -9.7500581741333
    3. '(find' → logprob: -19.625059127807617
    4. '=find' → logprob: -20.125059127807617
    5. '	find' → logprob: -20.250059127807617
    6. '.find' → logprob: -22.000059127807617
    7. '
' → logprob: -23.375059127807617
    8. '_find' → logprob: -23.500059127807617
    9. '   ' → logprob: -23.750059127807617
    10. 'f' → logprob: -23.875059127807617

Token 490: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -1.3663626305060461e-05
    2. 'first' → logprob: -11.25001335144043
    3. '```' → logprob: -15.50001335144043
    4. 'First' → logprob: -16.25001335144043
    5. ''_' → logprob: -16.50001335144043
    6. '_last' → logprob: -16.87501335144043
    7. '_FIRST' → logprob: -17.37501335144043
    8. '
' → logprob: -17.62501335144043
    9. '_f' → logprob: -17.87501335144043
    10. '_next' → logprob: -18.12501335144043

Token 491: '_scr' (ID: 148844)
  Prédit: '_scr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scr' → logprob: -2.2723104848410003e-05
    2. 'scr' → logprob: -11.125022888183594
    3. '_s' → logprob: -12.375022888183594
    4. '(scr' → logprob: -12.875022888183594
    5. '(f' → logprob: -14.875022888183594
    6. '_sc' → logprob: -15.250022888183594
    7. '_sn' → logprob: -15.375022888183594
    8. '_' → logprob: -16.375022888183594
    9. '_floor' → logprob: -16.375022888183594
    10. '_f' → logprob: -17.125022888183594

Token 492: 'atched' (ID: 44560)
  Prédit: 'atched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atched' → logprob: -0.00036204091156832874
    2. 'atch' → logprob: -8.500362396240234
    3. 'at' → logprob: -10.125362396240234
    4. 'athed' → logprob: -10.375362396240234
    5. 'rat' → logprob: -10.750362396240234
    6. 'atche' → logprob: -11.500362396240234
    7. 'atches' → logprob: -11.750362396240234
    8. 'ached' → logprob: -11.750362396240234
    9. 'r' → logprob: -12.000362396240234
    10. 'arched' → logprob: -12.125362396240234

Token 493: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -3.333223139634356e-05
    2. '(' → logprob: -10.375033378601074
    3. ' (' → logprob: -14.125033378601074
    4. '(
' → logprob: -14.375033378601074
    5. 'floor' → logprob: -14.625033378601074
    6. ' floor' → logprob: -15.625033378601074
    7. '_floor' → logprob: -16.750032424926758
    8. '(F' → logprob: -17.125032424926758
    9. '.floor' → logprob: -18.125032424926758
    10. 'Floor' → logprob: -18.125032424926758

Token 494: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.0019470835104584694
    2. 'oor' → logprob: -6.501946926116943
    3. 'floor' → logprob: -7.751946926116943
    4. 'or' → logprob: -12.251947402954102
    5. 'lo' → logprob: -12.626947402954102
    6. '_floor' → logprob: -13.001947402954102
    7. 'lor' → logprob: -14.126947402954102
    8. '(' → logprob: -14.501947402954102
    9. 'l' → logprob: -14.626947402954102
    10. 'loo' → logprob: -14.626947402954102

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009476647828705609
    2. ',f' → logprob: -7.12594747543335
    3. ' ,' → logprob: -9.750947952270508
    4. ')' → logprob: -9.750947952270508
    5. '(f' → logprob: -10.875947952270508
    6. ',
' → logprob: -12.750947952270508
    7. 'floor' → logprob: -13.500947952270508
    8. '   ' → logprob: -14.125947952270508
    9. ')
' → logprob: -15.000947952270508
    10. 'f' → logprob: -15.375947952270508

Token 496: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0004884536610916257
    2. ' W' → logprob: -7.62548828125
    3. '   ' → logprob: -14.87548828125
    4. '	W' → logprob: -17.00048828125
    5. ' ' → logprob: -17.87548828125
    6. '```' → logprob: -18.37548828125
    7. '=W' → logprob: -18.75048828125
    8. ',W' → logprob: -19.12548828125
    9. '  ' → logprob: -19.87548828125
    10. ')' → logprob: -19.87548828125

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2246291337069124e-05
    2. ',H' → logprob: -11.375021934509277
    3. ' ,' → logprob: -11.500021934509277
    4. ',W' → logprob: -15.250021934509277
    5. ',
' → logprob: -15.625021934509277
    6. '   ' → logprob: -15.625021934509277
    7. '‌,' → logprob: -17.625022888183594
    8. ')' → logprob: -17.875022888183594
    9. ',Y' → logprob: -18.625022888183594
    10. '<|end|>' → logprob: -18.625022888183594

Token 498: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00861468818038702
    2. ' H' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.258615493774414
    4. '   ' → logprob: -16.508615493774414
    5. '  ' → logprob: -18.883615493774414
    6. '    ' → logprob: -19.758615493774414
    7. ',H' → logprob: -19.758615493774414
    8. '       ' → logprob: -19.883615493774414
    9. '	H' → logprob: -20.133615493774414
    10. '```' → logprob: -20.383615493774414

Token 499: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25193333625793457
    2. ')
' → logprob: -1.5019333362579346
    3. ')
' → logprob: -12.751933097839355
    4. ')

' → logprob: -14.126933097839355
    5. '   ' → logprob: -15.001933097839355
    6. ' )' → logprob: -15.751933097839355
    7. ' )
' → logprob: -16.001934051513672
    8. ')`
' → logprob: -17.251934051513672
    9. '),' → logprob: -18.126934051513672
    10. ').' → logprob: -18.626934051513672

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003389190824236721
    2. ' if' → logprob: -8.500338554382324
    3. '    
' → logprob: -9.625338554382324
    4. ':' → logprob: -11.375338554382324
    5. '
' → logprob: -11.375338554382324
    6. '  
' → logprob: -11.500338554382324
    7. 'if' → logprob: -11.500338554382324
    8. ')' → logprob: -11.875338554382324
    9. '<|end|>' → logprob: -12.375338554382324
    10. '```' → logprob: -12.875338554382324

Token 501: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1564372330904007
    2. '   ' → logprob: -2.4064371585845947
    3. ' if' → logprob: -2.9064371585845947
    4. '	if' → logprob: -12.406436920166016
    5. '
' → logprob: -13.906436920166016
    6. 'If' → logprob: -13.906436920166016
    7. ' ' → logprob: -13.906436920166016
    8. '    
' → logprob: -14.156436920166016
    9. '```' → logprob: -14.406436920166016
    10. '  
' → logprob: -15.031436920166016

Token 502: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0788901224732399
    2. ' pos' → logprob: -2.578890085220337
    3. ' not' → logprob: -15.703889846801758
    4. 'not' → logprob: -15.828889846801758
    5. '	pos' → logprob: -16.703889846801758
    6. '   ' → logprob: -17.828889846801758
    7. ' ' → logprob: -18.828889846801758
    8. '[pos' → logprob: -20.078889846801758
    9. '(pos' → logprob: -20.453889846801758
    10. '.pos' → logprob: -20.703889846801758

Token 503: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0031818747520446777
    2. 'is' → logprob: -5.7531819343566895
    3. '==' → logprob: -12.878181457519531
    4. ')' → logprob: -14.128181457519531
    5. ' ==' → logprob: -14.503181457519531
    6. ' =' → logprob: -16.37818145751953
    7. '=' → logprob: -16.50318145751953
    8. ' ' → logprob: -16.62818145751953
    9. ' )' → logprob: -16.87818145751953
    10. ')is' → logprob: -16.87818145751953

Token 504: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011048528365790844
    2. ' None' → logprob: -4.511048316955566
    3. '=None' → logprob: -14.761048316955566
    4. '_None' → logprob: -15.011048316955566
    5. 'none' → logprob: -17.886049270629883
    6. '(None' → logprob: -18.261049270629883
    7. '_none' → logprob: -18.761049270629883
    8. '   ' → logprob: -18.886049270629883
    9. ' ' → logprob: -18.886049270629883
    10. 'N' → logprob: -19.136049270629883

Token 505: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6495252847671509
    2. ':
' → logprob: -0.7745252847671509
    3. '       ' → logprob: -4.524525165557861
    4. '   ' → logprob: -5.274525165557861
    5. ':return' → logprob: -7.149525165557861
    6. '):
' → logprob: -10.89952564239502
    7. ':
' → logprob: -11.77452564239502
    8. ' :
' → logprob: -13.27452564239502
    9. '():
' → logprob: -13.77452564239502
    10. ':

' → logprob: -13.77452564239502

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1128622367978096
    2. 'best' → logprob: -2.8628623485565186
    3. '   ' → logprob: -3.3628623485565186
    4. 'if' → logprob: -4.7378621101379395
    5. ' if' → logprob: -5.6128621101379395
    6. ' best' → logprob: -5.9878621101379395
    7. 'return' → logprob: -10.362862586975098
    8. '	best' → logprob: -11.112862586975098
    9. '#' → logprob: -11.737862586975098
    10. '           ' → logprob: -12.737862586975098

Token 507: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.07088804244995117
    2. '       ' → logprob: -3.320888042449951
    3. ' best' → logprob: -3.570888042449951
    4. 'if' → logprob: -6.070888042449951
    5. '   ' → logprob: -6.570888042449951
    6. ' if' → logprob: -7.695888042449951
    7. '	best' → logprob: -11.19588851928711
    8. 'b' → logprob: -13.07088851928711
    9. '           ' → logprob: -14.57088851928711
    10. '_best' → logprob: -14.82088851928711

Token 508: ' Tous' (ID: 64900)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.009185262955725193
    2. ' best' → logprob: -5.009185314178467
    3. 'if' → logprob: -6.759185314178467
    4. '   ' → logprob: -6.884185314178467
    5. '       ' → logprob: -8.509184837341309
    6. ' if' → logprob: -9.759184837341309
    7. '#' → logprob: -10.884184837341309
    8. '	best' → logprob: -12.884184837341309
    9. 'b' → logprob: -13.634184837341309
    10. '           ' → logprob: -15.509184837341309

Token 509: ' rec' (ID: 1369)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.017165541648864746
    2. 'les' → logprob: -4.642165660858154
    3. ' panneaux' → logprob: -5.517165660858154
    4. ' panels' → logprob: -6.142165660858154
    5. 'scr' → logprob: -7.767165660858154
    6. 'pan' → logprob: -8.767165184020996
    7. ' pans' → logprob: -8.767165184020996
    8. ' scr' → logprob: -9.517165184020996
    9. ' le' → logprob: -9.642165184020996
    10. ' tapis' → logprob: -9.767165184020996

Token 510: 'ouver' (ID: 10298)
  Prédit: 'ouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouver' → logprob: -0.0010609137825667858
    2. 'ou' → logprob: -8.001060485839844
    3. 'ouvr' → logprob: -8.001060485839844
    4. 'ouverte' → logprob: -8.251060485839844
    5. 'ouvrir' → logprob: -9.876060485839844
    6. 'ouvrez' → logprob: -10.626060485839844
    7. 'ouv' → logprob: -11.001060485839844
    8. ' ouverts' → logprob: -11.376060485839844
    9. 'over' → logprob: -11.501060485839844
    10. 'ouvre' → logprob: -12.876060485839844

Token 511: 'ts' (ID: 1561)
  Prédit: 'erts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erts' → logprob: -0.019652865827083588
    2. 'ts' → logprob: -4.144652843475342
    3. 'ert' → logprob: -5.644652843475342
    4. 'verts' → logprob: -10.7696533203125
    5. '```' → logprob: -11.0196533203125
    6. '``' → logprob: -11.5196533203125
    7. '#' → logprob: -12.3946533203125
    8. 't' → logprob: -12.3946533203125
    9. '[' → logprob: -12.6446533203125
    10. '   ' → logprob: -13.3946533203125

Token 512: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006635555997490883
    2. '   ' → logprob: -5.256635665893555
    3. '
' → logprob: -6.756635665893555
    4. ',' → logprob: -8.881635665893555
    5. '           ' → logprob: -9.881635665893555
    6. 'best' → logprob: -11.006635665893555
    7. 'return' → logprob: -12.006635665893555
    8. ' best' → logprob: -12.506635665893555
    9. ':
' → logprob: -12.631635665893555
    10. '[' → logprob: -12.881635665893555

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011549857445061207
    2. ',' → logprob: -7.626154899597168
    3. '   ' → logprob: -7.626154899597168
    4. '
' → logprob: -8.876154899597168
    5. '[' → logprob: -11.501154899597168
    6. '           ' → logprob: -12.001154899597168
    7. ':' → logprob: -12.126154899597168
    8. ':
' → logprob: -12.251154899597168
    9. ',
' → logprob: -12.751154899597168
    10. 'return' → logprob: -13.501154899597168

Token 514: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.008341992273926735
    2. 'if' → logprob: -5.0083417892456055
    3. '       ' → logprob: -7.0083417892456055
    4. '   ' → logprob: -7.5083417892456055
    5. ' best' → logprob: -8.758341789245605
    6. ' if' → logprob: -11.258341789245605
    7. 'b' → logprob: -14.133341789245605
    8. '	best' → logprob: -14.258341789245605
    9. '           ' → logprob: -14.383341789245605
    10. '
' → logprob: -15.008341789245605

Token 515: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.652451464906335e-05
    2. ' =' → logprob: -12.125016212463379
    3. '=' → logprob: -12.500016212463379
    4. '   ' → logprob: -13.625016212463379
    5. ' [' → logprob: -14.125016212463379
    6. ')[' → logprob: -14.125016212463379
    7. 'return' → logprob: -14.125016212463379
    8. '
' → logprob: -14.375016212463379
    9. '=[' → logprob: -14.500016212463379
    10. '```' → logprob: -14.625016212463379

Token 516: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011856284982059151
    2. '[' → logprob: -9.250118255615234
    3. ' ' → logprob: -11.625118255615234
    4. '
' → logprob: -12.375118255615234
    5. '=' → logprob: -13.375118255615234
    6. '```' → logprob: -13.750118255615234
    7. ' ' → logprob: -14.125118255615234
    8. '   ' → logprob: -14.250118255615234
    9. ' =' → logprob: -14.375118255615234
    10. ')' → logprob: -14.375118255615234

Token 517: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.062387652695178986
    2. ' =' → logprob: -3.187387704849243
    3. '=' → logprob: -4.437387466430664
    4. ')' → logprob: -5.312387466430664
    5. ']=' → logprob: -6.187387466430664
    6. ' ]' → logprob: -8.562387466430664
    7. ']+=' → logprob: -9.312387466430664
    8. ',' → logprob: -10.812387466430664
    9. '   ' → logprob: -11.062387466430664
    10. '[' → logprob: -11.687387466430664

Token 518: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015023599844425917
    2. ' =' → logprob: -6.501502513885498
    3. '=min' → logprob: -18.001502990722656
    4. '＝' → logprob: -19.376502990722656
    5. '=}' → logprob: -19.876502990722656
    6. '=

' → logprob: -20.251502990722656
    7. '=
' → logprob: -20.251502990722656
    8. '   ' → logprob: -20.501502990722656
    9. '=int' → logprob: -21.126502990722656
    10. '.=' → logprob: -21.626502990722656

Token 519: ' carpets' (ID: 93343)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3967912793159485
    2. 'min' → logprob: -1.1467912197113037
    3. ' min' → logprob: -5.021791458129883
    4. ' carpets' → logprob: -5.771791458129883
    5. 'cars' → logprob: -9.771791458129883
    6. ' carp' → logprob: -10.021791458129883
    7. 'max' → logprob: -10.521791458129883
    8. ' carpet' → logprob: -10.896791458129883
    9. 'minimum' → logprob: -12.521791458129883
    10. 'Car' → logprob: -13.146791458129883

Token 520: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0031563304364681244
    2. 's' → logprob: -6.1281561851501465
    3. 'used' → logprob: -7.0031561851501465
    4. '[' → logprob: -10.753156661987305
    5. 'ed' → logprob: -11.253156661987305
    6. 'Used' → logprob: -11.503156661987305
    7. '   ' → logprob: -12.003156661987305
    8. '_USED' → logprob: -12.378156661987305
    9. '```' → logprob: -13.503156661987305
    10. 'es' → logprob: -13.628156661987305

Token 521: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.248469718324486e-05
    2. '   ' → logprob: -10.875022888183594
    3. 'return' → logprob: -12.875022888183594
    4. '
' → logprob: -14.375022888183594
    5. ' return' → logprob: -15.750022888183594
    6. '           ' → logprob: -15.750022888183594
    7. '<|end|>' → logprob: -17.750022888183594
    8. '	return' → logprob: -17.875022888183594
    9. '      ' → logprob: -18.375022888183594
    10. '     ' → logprob: -18.625022888183594

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.176947600673884e-05
    2. '   ' → logprob: -10.875021934509277
    3. 'return' → logprob: -13.000021934509277
    4. '
' → logprob: -15.500021934509277
    5. ' return' → logprob: -15.875021934509277
    6. '           ' → logprob: -16.50002098083496
    7. '      ' → logprob: -18.00002098083496
    8. '     ' → logprob: -18.75002098083496
    9. '	return' → logprob: -19.37502098083496
    10. 'import' → logprob: -19.75002098083496

Token 523: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012685667024925351
    2. '       ' → logprob: -7.00126838684082
    3. ' return' → logprob: -8.25126838684082
    4. '   ' → logprob: -9.25126838684082
    5. '	return' → logprob: -16.87626838684082
    6. '
' → logprob: -18.50126838684082
    7. ' ' → logprob: -18.75126838684082
    8. ':return' → logprob: -20.25126838684082
    9. '  ' → logprob: -20.62626838684082
    10. '           ' → logprob: -20.75126838684082

Token 524: '

' (ID: 279)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005764064844697714
    2. '   ' → logprob: -5.255764007568359
    3. ' x' → logprob: -7.630764007568359
    4. '    
' → logprob: -10.25576400756836
    5. '
' → logprob: -12.38076400756836
    6. '(x' → logprob: -12.88076400756836
    7. '```' → logprob: -14.13076400756836
    8. '  
' → logprob: -14.63076400756836
    9. '	x' → logprob: -14.63076400756836
    10. '  ' → logprob: -15.50576400756836

Token 525: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00017004783148877323
    2. '   ' → logprob: -8.75016975402832
    3. ' x' → logprob: -11.50016975402832
    4. '```' → logprob: -13.75016975402832
    5. '(x' → logprob: -15.25016975402832
    6. '    
' → logprob: -16.12516975402832
    7. '	x' → logprob: -17.75016975402832
    8. ' ' → logprob: -18.75016975402832
    9. ',x' → logprob: -19.00016975402832
    10. '
' → logprob: -19.00016975402832

Token 526: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.125
    3. '   ' → logprob: -19.125
    4. '(x' → logprob: -19.5
    5. '```' → logprob: -21.125
    6. '    
' → logprob: -22.0
    7. '	x' → logprob: -22.625
    8. '_x' → logprob: -23.25
    9. 'px' → logprob: -23.625
    10. ')x' → logprob: -24.375

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000871082826051861
    2. ',y' → logprob: -7.125871181488037
    3. ' ,' → logprob: -9.625870704650879
    4. ',
' → logprob: -16.125871658325195
    5. ',Y' → logprob: -16.500871658325195
    6. 'y' → logprob: -16.500871658325195
    7. '<|end|>' → logprob: -16.875871658325195
    8. ',x' → logprob: -17.125871658325195
    9. '   ' → logprob: -17.250871658325195
    10. '‌,' → logprob: -17.375871658325195

Token 528: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005530327325686812
    2. ' y' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -20.000553131103516
    4. '	y' → logprob: -21.750553131103516
    5. '   ' → logprob: -22.250553131103516
    6. ' ' → logprob: -22.750553131103516
    7. ''y' → logprob: -23.000553131103516
    8. '
' → logprob: -23.125553131103516
    9. 'user' → logprob: -23.250553131103516
    10. '_y' → logprob: -23.625553131103516

Token 529: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0678220987319946
    2. '=' → logprob: -1.5678220987319946
    3. '   ' → logprob: -1.5678220987319946
    4. '<|end|>' → logprob: -1.8178220987319946
    5. ',' → logprob: -3.192821979522705
    6. '<|end|>' → logprob: -4.192821979522705
    7. ' ' → logprob: -5.692821979522705
    8. ' for' → logprob: -5.692821979522705
    9. '    
' → logprob: -6.317821979522705
    10. '  ' → logprob: -6.442821979522705

Token 530: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.01416350994259119
    2. ' pos' → logprob: -4.264163494110107
    3. '	pos' → logprob: -19.139163970947266
    4. 'position' → logprob: -19.639163970947266
    5. '_pos' → logprob: -20.389163970947266
    6. '[pos' → logprob: -21.014163970947266
    7. 'x' → logprob: -21.264163970947266
    8. '(pos' → logprob: -21.264163970947266
    9. '   ' → logprob: -21.264163970947266
    10. 'find' → logprob: -21.389163970947266

Token 531: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028090819716453552
    2. 'for' → logprob: -3.903090715408325
    3. ' for' → logprob: -5.403090953826904
    4. '    
' → logprob: -6.278090953826904
    5. '
' → logprob: -6.903090953826904
    6. ',' → logprob: -9.278090476989746
    7. '#' → logprob: -11.403090476989746
    8. 'size' → logprob: -11.653090476989746
    9. '   
' → logprob: -12.403090476989746
    10. 'sizes' → logprob: -12.403090476989746

Token 532: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03497704863548279
    2. '   ' → logprob: -3.5349769592285156
    3. 'size' → logprob: -6.159976959228516
    4. 'max' → logprob: -6.409976959228516
    5. ' for' → logprob: -6.909976959228516
    6. 'sizes' → logprob: -7.784976959228516
    7. '```' → logprob: -10.784976959228516
    8. '    
' → logprob: -11.784976959228516
    9. '#' → logprob: -12.034976959228516
    10. '  ' → logprob: -13.534976959228516

Token 533: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003370118502061814
    2. 'max' → logprob: -8.125336647033691
    3. 'size' → logprob: -10.750336647033691
    4. 'sizes' → logprob: -11.000336647033691
    5. ' for' → logprob: -13.375336647033691
    6. '   ' → logprob: -14.250336647033691
    7. '#' (adapté à ' #') → logprob: -14.500336647033691
    8. 'possible' → logprob: -17.000337600708008
    9. 'min' → logprob: -17.875337600708008
    10. '    
' → logprob: -19.125337600708008

Token 534: ' On' (ID: 2160)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5762062668800354
    2. 'for' → logprob: -0.8262062668800354
    3. '#' → logprob: -8.95120620727539
    4. 'size' → logprob: -9.32620620727539
    5. ' for' → logprob: -10.57620620727539
    6. ' max' → logprob: -12.07620620727539
    7. 'possible' → logprob: -12.07620620727539
    8. '   ' → logprob: -12.45120620727539
    9. 'maximum' → logprob: -12.95120620727539
    10. 'sizes' → logprob: -13.20120620727539

Token 535: ' essay' (ID: 9635)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5271728038787842
    2. ' for' → logprob: -0.9021728038787842
    3. 'max' → logprob: -6.277173042297363
    4. '   ' → logprob: -6.527173042297363
    5. ' max' → logprob: -8.277173042297363
    6. 'size' → logprob: -8.527173042297363
    7. '#' → logprob: -9.527173042297363
    8. ' size' → logprob: -9.652173042297363
    9. 'def' → logprob: -10.902173042297363
    10. 'range' → logprob: -11.277173042297363

Token 536: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24949108064174652
    2. 'te' → logprob: -2.249490976333618
    3. 'ne' → logprob: -3.124490976333618
    4. 'le' → logprob: -3.499490976333618
    5. 'me' → logprob: -3.874490976333618
    6. 've' → logprob: -4.749491214752197
    7. 'de' → logprob: -5.249491214752197
    8. 't' → logprob: -5.999491214752197
    9. 'se' → logprob: -6.499491214752197
    10. 're' → logprob: -6.749491214752197

Token 537: ' toutes' (ID: 17502)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9272748827934265
    2. 'sizes' → logprob: -1.0522749423980713
    3. 'les' → logprob: -2.1772749423980713
    4. 'size' → logprob: -3.4272749423980713
    5. ' tailles' → logprob: -3.5522749423980713
    6. ' sizes' → logprob: -3.9272749423980713
    7. ' toutes' → logprob: -4.052274703979492
    8. 'des' → logprob: -4.927274703979492
    9. ' des' → logprob: -4.927274703979492
    10. 'd' → logprob: -5.052274703979492

Token 538: ' tailles' (ID: 169460)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.34447506070137024
    2. 'tail' → logprob: -1.4694750308990479
    3. ' les' → logprob: -3.969475030899048
    4. 'ta' → logprob: -3.969475030899048
    5. ' tailles' → logprob: -4.344475269317627
    6. 'sizes' → logprob: -4.719475269317627
    7. '   ' → logprob: -7.094475269317627
    8. 'tails' → logprob: -7.969475269317627
    9. 'dimensions' → logprob: -8.844474792480469
    10. 'size' → logprob: -9.594474792480469

Token 539: ' possibles' (ID: 97753)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.39322352409362793
    2. ' from' → logprob: -2.518223524093628
    3. 'de' → logprob: -3.143223524093628
    4. '   ' → logprob: -3.143223524093628
    5. ' de' → logprob: -3.643223524093628
    6. '(' → logprob: -3.643223524093628
    7. 'for' → logprob: -3.893223524093628
    8. 'range' → logprob: -4.143223762512207
    9. 'possible' → logprob: -4.518223762512207
    10. ' for' → logprob: -5.143223762512207

Token 540: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.033578634262085
    2. ' for' → logprob: -1.158578634262085
    3. 'from' → logprob: -2.033578634262085
    4. 'for' → logprob: -2.283578634262085
    5. ' from' → logprob: -2.658578634262085
    6. ',' → logprob: -4.033578872680664
    7. '(size' → logprob: -6.408578872680664
    8. 'size' → logprob: -6.408578872680664
    9. ' (' → logprob: -7.283578872680664
    10. '(' → logprob: -7.283578872680664

Token 541: ' tapis' (ID: 131304)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.024027405306696892
    2. 't' → logprob: -4.649027347564697
    3. ' tapis' → logprob: -5.399027347564697
    4. 'c' → logprob: -5.649027347564697
    5. ' carre' → logprob: -5.899027347564697
    6. ' carpet' → logprob: -6.774027347564697
    7. ' ' → logprob: -8.024027824401855
    8. '5' → logprob: -8.274027824401855
    9. '6' → logprob: -8.524027824401855
    10. '1' → logprob: -8.524027824401855

Token 542: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7704323530197144
    2. ' for' → logprob: -0.8954323530197144
    3. 'from' → logprob: -3.270432472229004
    4. 'for' → logprob: -3.270432472229004
    5. ' from' → logprob: -3.520432472229004
    6. ',' → logprob: -4.020432472229004
    7. ' (' → logprob: -6.645432472229004
    8. '(size' → logprob: -6.895432472229004
    9. '
' → logprob: -7.895432472229004
    10. ':' → logprob: -8.145432472229004

Token 543: ' ce' (ID: 2357)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4444490373134613
    2. 'pos' → logprob: -2.319448947906494
    3. 'x' → logprob: -2.569448947906494
    4. 'max' → logprob: -3.194448947906494
    5. 'placer' → logprob: -3.194448947906494
    6. 'place' → logprob: -3.569448947906494
    7. ' partir' → logprob: -4.444448947906494
    8. 'part' → logprob: -4.819448947906494
    9. 'poser' → logprob: -4.944448947906494
    10. '5' → logprob: -5.069448947906494

Token 544: ' point' (ID: 2438)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04283668473362923
    2. 'point' → logprob: -4.417836666107178
    3. '(x' → logprob: -4.792836666107178
    4. 'part' → logprob: -5.417836666107178
    5. 'em' → logprob: -5.792836666107178
    6. 'position' → logprob: -6.292836666107178
    7. 'place' → logprob: -6.542836666107178
    8. 'token' → logprob: -6.667836666107178
    9. ' emplacement' → logprob: -6.667836666107178
    10. 'size' → logprob: -6.792836666107178

Token 545: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5479055047035217
    2. ' for' → logprob: -1.047905445098877
    3. 'for' → logprob: -3.047905445098877
    4. ',' → logprob: -4.172905445098877
    5. ':' → logprob: -6.047905445098877
    6. '(size' → logprob: -6.422905445098877
    7. '  ' → logprob: -7.672905445098877
    8. 'size' → logprob: -7.672905445098877
    9. '    
' → logprob: -7.797905445098877
    10. ' (' → logprob: -7.797905445098877

Token 546: 'desc' (ID: 17186)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.15603762865066528
    2. '1' → logprob: -3.0310375690460205
    3. '5' → logprob: -3.4060375690460205
    4. 'for' → logprob: -3.7810375690460205
    5. ' size' → logprob: -4.1560378074646
    6. 'from' → logprob: -5.5310378074646
    7. ' for' → logprob: -5.7810378074646
    8. ')' → logprob: -6.0310378074646
    9. ' ' → logprob: -6.4060378074646
    10. 'max' → logprob: -6.5310378074646

Token 547: 'endant' (ID: 11380)
  Prédit: 'endant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endant' → logprob: -1.1360070705413818
    2. 'end' → logprob: -1.2610070705413818
    3. 'endre' → logprob: -1.7610070705413818
    4. 'ent' → logprob: -2.386007070541382
    5. 'endent' → logprob: -3.261007070541382
    6. 'ending' → logprob: -3.761007070541382
    7. 'ente' → logprob: -4.011007308959961
    8. 'r' → logprob: -4.136007308959961
    9. 'ro' → logprob: -5.136007308959961
    10. 'rent' → logprob: -5.511007308959961

Token 548: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0690184831619263
    2. ')' → logprob: -1.4440184831619263
    3. 'from' → logprob: -1.8190184831619263
    4. ' de' → logprob: -2.3190183639526367
    5. 'de' → logprob: -2.6940183639526367
    6. 'size' → logprob: -3.1940183639526367
    7. ' from' → logprob: -4.069018363952637
    8. ' size' → logprob: -4.819018363952637
    9. ',' → logprob: -5.444018363952637
    10. ' )' → logprob: -5.444018363952637

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27890676259994507
    2. ' for' → logprob: -1.5289068222045898
    3. 'for' → logprob: -4.15390682220459
    4. ',' → logprob: -4.90390682220459
    5. 'size' → logprob: -7.40390682220459
    6. '(size' → logprob: -7.40390682220459
    7. ':' → logprob: -8.15390682220459
    8. ' size' → logprob: -8.27890682220459
    9. '<|end|>' → logprob: -8.40390682220459
    10. ' ,' → logprob: -8.52890682220459

Token 550: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4363464117050171
    2. ' for' → logprob: -1.061346411705017
    3. 'size' → logprob: -5.186346530914307
    4. '   ' → logprob: -6.436346530914307
    5. ' size' → logprob: -8.311346054077148
    6. 'sizes' → logprob: -9.561346054077148
    7. '
' → logprob: -10.686346054077148
    8. ',' → logprob: -11.061346054077148
    9. 'range' → logprob: -11.186346054077148
    10. 'max' (adapté à ' max') → logprob: -11.561346054077148

Token 551: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -7.100059156073257e-05
    2. '_' → logprob: -10.125070571899414
    3. 'size' → logprob: -10.625070571899414
    4. '_car' → logprob: -12.500070571899414
    5. '_s' → logprob: -14.875070571899414
    6. '=' → logprob: -14.875070571899414
    7. 'Size' → logprob: -14.875070571899414
    8. '_sizes' → logprob: -15.000070571899414
    9. '_tile' → logprob: -15.500070571899414
    10. '_possible' → logprob: -15.625070571899414

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194522738456726
    2. '=' → logprob: -1.5019452571868896
    3. '   ' → logprob: -12.626945495605469
    4. '=max' → logprob: -12.626945495605469
    5. '=int' → logprob: -13.126945495605469
    6. ',' → logprob: -13.251945495605469
    7. '=size' → logprob: -13.876945495605469
    8. '=len' → logprob: -14.126945495605469
    9. 'for' → logprob: -14.376945495605469
    10. 's' → logprob: -14.376945495605469

Token 553: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0006882481975480914
    2. '5' → logprob: -8.000688552856445
    3. ' min' → logprob: -8.625688552856445
    4. 'max' → logprob: -9.000688552856445
    5. '10' → logprob: -10.250688552856445
    6. '0' → logprob: -13.000688552856445
    7. '(min' → logprob: -13.125688552856445
    8. '15' → logprob: -13.250688552856445
    9. '[min' → logprob: -13.375688552856445
    10. '11' → logprob: -13.875688552856445

Token 554: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.750001907348633
    3. '(H' → logprob: -15.250001907348633
    4. 'W' → logprob: -15.250001907348633
    5. '([' → logprob: -16.625001907348633
    6. '(
' → logprob: -17.000001907348633
    7. '((' → logprob: -17.750001907348633
    8. '(w' → logprob: -19.250001907348633
    9. '()' → logprob: -20.125001907348633
    10. '(x' → logprob: -20.625001907348633

Token 555: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026635929942131042
    2. '-' → logprob: -3.6516358852386475
    3. ',' → logprob: -8.026636123657227
    4. '[y' → logprob: -12.901636123657227
    5. ' ' → logprob: -13.026636123657227
    6. '   ' → logprob: -13.526636123657227
    7. ' ,' → logprob: -13.526636123657227
    8. '[x' → logprob: -15.276636123657227
    9. ',y' → logprob: -15.276636123657227
    10. '
' → logprob: -15.276636123657227

Token 556: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20141352713108063
    2. ' x' → logprob: -1.7014135122299194
    3. '	x' → logprob: -15.57641315460205
    4. '_x' → logprob: -18.201414108276367
    5. ')x' → logprob: -18.326414108276367
    6. ',x' → logprob: -18.826414108276367
    7. '$x' → logprob: -19.951414108276367
    8. ' ' → logprob: -20.076414108276367
    9. ''x' → logprob: -20.076414108276367
    10. '{x' → logprob: -20.201414108276367

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034142236108891666
    2. ' ,' → logprob: -8.125341415405273
    3. ',y' → logprob: -10.500341415405273
    4. ',
' → logprob: -11.375341415405273
    5. ',H' → logprob: -12.500341415405273
    6. ',W' → logprob: -13.625341415405273
    7. 'y' → logprob: -15.250341415405273
    8. '),' → logprob: -15.250341415405273
    9. '   ' → logprob: -15.875341415405273
    10. ')' → logprob: -15.875341415405273

Token 558: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.011048054322600365
    2. ' H' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.511048316955566
    4. ' ' → logprob: -17.13604736328125
    5. ',H' → logprob: -17.63604736328125
    6. 'min' → logprob: -17.76104736328125
    7. '	H' → logprob: -18.26104736328125
    8. '  ' → logprob: -18.63604736328125
    9. ' min' → logprob: -19.01104736328125
    10. '    ' → logprob: -19.26104736328125

Token 559: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0009128939709626138
    2. '-' → logprob: -7.000912666320801
    3. ' ' → logprob: -13.6259126663208
    4. '   ' → logprob: -16.250913619995117
    5. ' y' → logprob: -17.250913619995117
    6. 'def' → logprob: -17.500913619995117
    7. '[' → logprob: -17.625913619995117
    8. ')' → logprob: -17.625913619995117
    9. ',' → logprob: -17.750913619995117
    10. 'y' → logprob: -18.125913619995117

Token 560: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020699352025986
    2. ' y' → logprob: -2.3502070903778076
    3. '	y' → logprob: -15.975207328796387
    4. ' ' → logprob: -16.35020637512207
    5. '(y' → logprob: -16.72520637512207
    6. '   ' → logprob: -17.10020637512207
    7. ')y' → logprob: -18.10020637512207
    8. '  ' → logprob: -18.85020637512207
    9. ',y' → logprob: -19.35020637512207
    10. '    ' → logprob: -19.72520637512207

Token 561: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043054115027189255
    2. ')
' → logprob: -3.1680541038513184
    3. ',' → logprob: -10.793054580688477
    4. ' )' → logprob: -11.293054580688477
    5. ')
' → logprob: -11.668054580688477
    6. '   ' → logprob: -12.043054580688477
    7. ')

' → logprob: -12.918054580688477
    8. ' )
' → logprob: -13.168054580688477
    9. ')+' → logprob: -13.668054580688477
    10. '),' → logprob: -15.043054580688477

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024635538458824158
    2. '
' → logprob: -4.649635314941406
    3. ' for' → logprob: -4.899635314941406
    4. '    
' → logprob: -5.649635314941406
    5. '  
' → logprob: -6.649635314941406
    6. '<|end|>' → logprob: -7.524635314941406
    7. ',' → logprob: -7.649635314941406
    8. '   
' → logprob: -7.774635314941406
    9. ' 
' → logprob: -8.149635314941406
    10. 'for' → logprob: -8.274635314941406

Token 563: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001437493017874658
    2. ' for' → logprob: -6.876437664031982
    3. '   ' → logprob: -7.876437664031982
    4. 'size' → logprob: -10.751437187194824
    5. '
' → logprob: -13.251437187194824
    6. '	for' → logprob: -14.001437187194824
    7. '```' → logprob: -15.126437187194824
    8. '    
' → logprob: -15.251437187194824
    9. 'sizes' → logprob: -16.00143814086914
    10. '  ' → logprob: -16.50143814086914

Token 564: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0019287518225610256
    2. ' size' → logprob: -6.251928806304932
    3. 'sz' → logprob: -17.001928329467773
    4. '	size' → logprob: -17.876928329467773
    5. 's' → logprob: -18.251928329467773
    6. '   ' → logprob: -18.876928329467773
    7. ' ' → logprob: -19.501928329467773
    8. '(size' → logprob: -19.751928329467773
    9. 'siz' → logprob: -20.251928329467773
    10. '[size' → logprob: -20.376928329467773

Token 565: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04302031546831131
    2. 'in' → logprob: -3.168020248413086
    3. 'size' → logprob: -12.168020248413086
    4. ' ' → logprob: -12.918020248413086
    5. 'de' → logprob: -13.293020248413086
    6. 's' → logprob: -13.293020248413086
    7. 'int' → logprob: -13.543020248413086
    8. '	in' → logprob: -13.668020248413086
    9. '=' → logprob: -13.793020248413086
    10. 'from' → logprob: -13.918020248413086

Token 566: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00047106825513765216
    2. 're' → logprob: -8.375471115112305
    3. 'max' → logprob: -8.625471115112305
    4. ' range' → logprob: -9.750471115112305
    5. 'reverse' → logprob: -13.375471115112305
    6. ' reversed' → logprob: -14.000471115112305
    7. 'sorted' → logprob: -15.375471115112305
    8. '(range' → logprob: -16.625471115112305
    9. 'r' → logprob: -17.000471115112305
    10. '[max' → logprob: -17.125471115112305

Token 567: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002158146962756291
    2. ' max' → logprob: -8.750215530395508
    3. '(max' → logprob: -10.250215530395508
    4. 'min' → logprob: -10.750215530395508
    5. '[max' → logprob: -14.875215530395508
    6. ',max' → logprob: -16.250215530395508
    7. '   ' → logprob: -18.500215530395508
    8. '	max' → logprob: -18.500215530395508
    9. ' min' → logprob: -18.750215530395508
    10. '=max' → logprob: -18.875215530395508

Token 568: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.250003814697266
    3. '_s' → logprob: -14.500003814697266
    4. 'size' → logprob: -14.750003814697266
    5. '_sizes' → logprob: -16.250003814697266
    6. ')' → logprob: -16.375003814697266
    7. '_SIZE' → logprob: -16.750003814697266
    8. ' _' → logprob: -17.000003814697266
    9. '(max' → logprob: -17.000003814697266
    10. '=max' → logprob: -17.000003814697266

Token 569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ' ,' → logprob: -11.625008583068848
    3. ',
' → logprob: -18.500009536743164
    4. '   ' → logprob: -18.625009536743164
    5. ',size' → logprob: -19.625009536743164
    6. '，' → logprob: -19.875009536743164
    7. '‌,' → logprob: -20.625009536743164
    8. '1' → logprob: -20.625009536743164
    9. ',,' → logprob: -21.125009536743164
    10. '  ' → logprob: -21.375009536743164

Token 570: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.909333023941144e-05
    2. ' ' → logprob: -9.625068664550781
    3. '1' → logprob: -13.625068664550781
    4. '
' → logprob: -14.000068664550781
    5. '```' → logprob: -14.250068664550781
    6. '   ' → logprob: -16.00006866455078
    7. '``' → logprob: -16.00006866455078
    8. '  
' → logprob: -17.87506866455078
    9. ' 
' → logprob: -18.18756866455078
    10. '    
' → logprob: -18.50006866455078

Token 571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -13.125005722045898
    3. '
' → logprob: -13.500005722045898
    4. '1' → logprob: -13.750005722045898
    5. '```' → logprob: -13.875005722045898
    6. '   ' → logprob: -15.375005722045898
    7. '=' → logprob: -15.937505722045898
    8. '``' → logprob: -16.0000057220459
    9. '-' → logprob: -17.2500057220459
    10. '۰' → logprob: -17.5625057220459

Token 572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001427538663847372
    2. '-' → logprob: -9.875143051147461
    3. ',-' → logprob: -10.000143051147461
    4. ' ,' → logprob: -10.125143051147461
    5. ' -' → logprob: -12.375143051147461
    6. ' ,-' → logprob: -14.625143051147461
    7. '   ' → logprob: -14.875143051147461
    8. '0' → logprob: -15.500143051147461
    9. '-,' → logprob: -15.750143051147461
    10. ',
' → logprob: -15.750143051147461

Token 573: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028052295092493296
    2. ' -' → logprob: -5.877805233001709
    3. '```' → logprob: -15.87780475616455
    4. '   ' → logprob: -16.252805709838867
    5. ')' → logprob: -16.752805709838867
    6. '0' → logprob: -17.502805709838867
    7. ' ' → logprob: -17.502805709838867
    8. '-
' → logprob: -17.752805709838867
    9. '):
' → logprob: -17.877805709838867
    10. '
' → logprob: -17.877805709838867

Token 574: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20581744611263275
    2. '1' → logprob: -1.705817461013794
    3. ' -' → logprob: -5.455817222595215
    4. '):
' → logprob: -9.455817222595215
    5. ')' → logprob: -10.955817222595215
    6. ' ' → logprob: -11.205817222595215
    7. '   ' → logprob: -12.830817222595215
    8. ',' → logprob: -12.830817222595215
    9. '```' → logprob: -12.830817222595215
    10. '
' → logprob: -12.955817222595215

Token 575: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0790485218167305
    2. '):
' → logprob: -2.5790486335754395
    3. ':' → logprob: -9.704048156738281
    4. ' ):' → logprob: -10.204048156738281
    5. '   ' → logprob: -10.329048156738281
    6. '):
' → logprob: -10.829048156738281
    7. ' ):
' → logprob: -12.454048156738281
    8. ')' → logprob: -13.579048156738281
    9. ',' → logprob: -13.704048156738281
    10. ' :' → logprob: -14.579048156738281

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03317980840802193
    2. ' if' → logprob: -4.033179759979248
    3. '<|end|>' → logprob: -4.533179759979248
    4. '   ' → logprob: -6.158179759979248
    5. ')' → logprob: -7.283179759979248
    6. '<|end|>' → logprob: -8.408180236816406
    7. '        
' → logprob: -8.533180236816406
    8. ',' → logprob: -8.658180236816406
    9. ' ' → logprob: -8.783180236816406
    10. 'if' → logprob: -9.408180236816406

Token 577: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1430319845676422
    2. 'if' (adapté à ' if') → logprob: -2.0180320739746094
    3. '       ' → logprob: -9.14303207397461
    4. '<|end|>' → logprob: -9.39303207397461
    5. '        
' → logprob: -9.89303207397461
    6. ' ' → logprob: -11.01803207397461
    7. ' 
' → logprob: -11.14303207397461
    8. 'If' → logprob: -11.14303207397461
    9. '```' → logprob: -11.14303207397461
    10. ' can' → logprob: -11.26803207397461

Token 578: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.10021130740642548
    2. ' can' → logprob: -2.3502113819122314
    3. ' not' → logprob: -12.725211143493652
    4. 'not' → logprob: -14.225211143493652
    5. '	can' → logprob: -14.350211143493652
    6. '(can' → logprob: -15.100211143493652
    7. '_can' → logprob: -16.72521209716797
    8. '.can' → logprob: -17.35021209716797
    9. ' ' → logprob: -17.97521209716797
    10. '   ' → logprob: -18.22521209716797

Token 579: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.250006675720215
    3. '_can' → logprob: -13.875006675720215
    4. ' _' → logprob: -15.125006675720215
    5. 'place' → logprob: -15.250006675720215
    6. '_put' → logprob: -15.250006675720215
    7. '_places' → logprob: -16.50000762939453
    8. '```' → logprob: -16.50000762939453
    9. '_have' → logprob: -17.75000762939453
    10. '_raise' → logprob: -18.00000762939453

Token 580: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -2.6776029699249193e-05
    2. '(f' → logprob: -11.37502670288086
    3. '_' → logprob: -11.87502670288086
    4. 'car' → logprob: -12.62502670288086
    5. '_c' → logprob: -13.25002670288086
    6. 'Car' → logprob: -14.12502670288086
    7. '_floor' → logprob: -14.12502670288086
    8. ' _' → logprob: -14.75002670288086
    9. '```' → logprob: -14.75002670288086
    10. '_C' → logprob: -15.37502670288086

Token 581: 'pet' (ID: 9456)
  Prédit: 'pet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.015814978629350662
    2. 't' → logprob: -4.390814781188965
    3. 'car' → logprob: -7.015814781188965
    4. 'et' → logprob: -7.515814781188965
    5. ' carpet' → logprob: -7.515814781188965
    6. 'pt' → logprob: -7.640814781188965
    7. 'p' → logprob: -8.265814781188965
    8. '_car' → logprob: -9.015814781188965
    9. 'tet' → logprob: -9.765814781188965
    10. '_pet' → logprob: -10.140814781188965

Token 582: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.558399319241289e-05
    2. '(' → logprob: -10.625025749206543
    3. ' (' → logprob: -13.750025749206543
    4. '(
' → logprob: -16.000024795532227
    5. ' floor' → logprob: -17.375024795532227
    6. 'floor' → logprob: -17.500024795532227
    7. '(F' → logprob: -18.625024795532227
    8. '.floor' → logprob: -19.875024795532227
    9. '_floor' → logprob: -20.375024795532227
    10. '(

' → logprob: -21.500024795532227

Token 583: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.014172209426760674
    2. 'floor' → logprob: -4.264172077178955
    3. 'oor' → logprob: -12.264172554016113
    4. '(f' → logprob: -13.264172554016113
    5. ' floor' → logprob: -14.139172554016113
    6. 'lo' → logprob: -15.139172554016113
    7. '.floor' → logprob: -15.139172554016113
    8. '_floor' → logprob: -15.139172554016113
    9. 'l' → logprob: -15.639172554016113
    10. 'or' → logprob: -15.764172554016113

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005094261723570526
    2. ',f' → logprob: -7.750509262084961
    3. ' ,' → logprob: -9.625509262084961
    4. ',
' → logprob: -12.000509262084961
    5. '(f' → logprob: -12.250509262084961
    6. 'floor' → logprob: -14.500509262084961
    7. '[' → logprob: -15.125509262084961
    8. '[f' → logprob: -15.375509262084961
    9. 'f' → logprob: -15.625509262084961
    10. '(' → logprob: -16.37550926208496

Token 585: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01814994215965271
    2. ' x' → logprob: -4.0181498527526855
    3. '(x' → logprob: -17.768150329589844
    4. ' ' → logprob: -18.268150329589844
    5. ')x' → logprob: -18.768150329589844
    6. '	x' → logprob: -19.018150329589844
    7. '   ' → logprob: -19.268150329589844
    8. ',x' → logprob: -20.143150329589844
    9. '"x' → logprob: -20.393150329589844
    10. ')' → logprob: -20.643150329589844

Token 586: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009926761267706752
    2. ' ,' → logprob: -7.500992774963379
    3. ',y' → logprob: -7.750992774963379
    4. ',x' → logprob: -12.125992774963379
    5. 'y' → logprob: -14.500992774963379
    6. ',size' → logprob: -14.500992774963379
    7. '```' → logprob: -14.625992774963379
    8. ',
' → logprob: -14.875992774963379
    9. '       ' → logprob: -15.375992774963379
    10. '   ' → logprob: -15.375992774963379

Token 587: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00014001218369230628
    2. ' y' → logprob: -8.875140190124512
    3. '<|end|>' → logprob: -16.750139236450195
    4. ',y' → logprob: -18.000139236450195
    5. ',' → logprob: -18.000139236450195
    6. '	y' → logprob: -18.125139236450195
    7. '   ' → logprob: -18.875139236450195
    8. ' ' → logprob: -19.375139236450195
    9. ')y' → logprob: -19.500139236450195
    10. ')' → logprob: -19.875139236450195

Token 588: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.478889215737581e-05
    2. ' ,' → logprob: -10.000054359436035
    3. ',size' → logprob: -11.625054359436035
    4. ',
' → logprob: -15.500054359436035
    5. '       ' → logprob: -17.00005531311035
    6. ')' → logprob: -17.25005531311035
    7. 'size' → logprob: -17.37505531311035
    8. '),' → logprob: -17.75005531311035
    9. '```' → logprob: -18.37505531311035
    10. '           ' → logprob: -18.62505531311035

Token 589: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0001584850688232109
    2. ' size' → logprob: -8.750158309936523
    3. ')' → logprob: -18.375158309936523
    4. '[size' → logprob: -18.875158309936523
    5. '
' → logprob: -19.375158309936523
    6. '(size' → logprob: -19.500158309936523
    7. '	size' → logprob: -20.375158309936523
    8. '   ' → logprob: -20.750158309936523
    9. ',size' → logprob: -21.000158309936523
    10. 's' → logprob: -21.125158309936523

Token 590: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015514736878685653
    2. ' ,' → logprob: -9.125155448913574
    3. '):' → logprob: -10.625155448913574
    4. ')' → logprob: -11.875155448913574
    5. ',f' → logprob: -12.375155448913574
    6. ',
' → logprob: -12.875155448913574
    7. '   ' → logprob: -13.125155448913574
    8. '):
' → logprob: -13.125155448913574
    9. '       ' → logprob: -14.250155448913574
    10. '=' → logprob: -14.500155448913574

Token 591: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0019286326132714748
    2. ' W' → logprob: -6.251928806304932
    3. '	W' → logprob: -17.376928329467773
    4. '   ' → logprob: -17.626928329467773
    5. ',W' → logprob: -19.251928329467773
    6. '    ' → logprob: -19.751928329467773
    7. '  ' → logprob: -19.876928329467773
    8. '```' → logprob: -20.251928329467773
    9. ')' → logprob: -20.376928329467773
    10. ' ' → logprob: -20.501928329467773

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.203409844194539e-05
    2. ' ,' → logprob: -10.125041961669922
    3. ',H' → logprob: -13.875041961669922
    4. ',
' → logprob: -14.875041961669922
    5. ')' → logprob: -14.875041961669922
    6. '   ' → logprob: -16.250041961669922
    7. '```' → logprob: -17.250041961669922
    8. ',

' → logprob: -17.750041961669922
    9. '),' → logprob: -18.125041961669922
    10. ',W' → logprob: -18.250041961669922

Token 593: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00010902655776590109
    2. ' H' → logprob: -9.12510871887207
    3. ' ' → logprob: -18.00010871887207
    4. '   ' → logprob: -18.25010871887207
    5. '  ' → logprob: -20.00010871887207
    6. ')' → logprob: -21.00010871887207
    7. '    ' → logprob: -21.37510871887207
    8. ',' → logprob: -21.75010871887207
    9. '<|end|>' → logprob: -22.12510871887207
    10. '       ' → logprob: -22.37510871887207

Token 594: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012626546435058117
    2. '):
' → logprob: -4.387626647949219
    3. ')' → logprob: -9.762626647949219
    4. ' ):' → logprob: -10.762626647949219
    5. ':' → logprob: -11.262626647949219
    6. '       ' → logprob: -11.387626647949219
    7. '):
' → logprob: -11.887626647949219
    8. '):

' → logprob: -12.387626647949219
    9. '   ' → logprob: -13.887626647949219
    10. ',' → logprob: -14.387626647949219

Token 595: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07144724577665329
    2. ' place' → logprob: -3.3214471340179443
    3. 'place' → logprob: -3.5714471340179443
    4. '       ' → logprob: -5.946447372436523
    5. '```' → logprob: -7.696447372436523
    6. '            
' → logprob: -7.946447372436523
    7. '<|end|>' → logprob: -7.946447372436523
    8. '(place' → logprob: -8.321447372436523
    9. '        
' → logprob: -8.946447372436523
    10. ')' → logprob: -9.321447372436523

Token 596: ' #' (ID: 1069)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.05166284367442131
    2. ' place' → logprob: -3.0516629219055176
    3. '           ' → logprob: -5.801662921905518
    4. '       ' → logprob: -10.92666244506836
    5. '               ' → logprob: -11.30166244506836
    6. '   ' → logprob: -11.55166244506836
    7. '_place' → logprob: -12.42666244506836
    8. '.place' → logprob: -13.80166244506836
    9. '
' → logprob: -14.17666244506836
    10. '(place' → logprob: -14.55166244506836

Token 597: ' Pose' (ID: 70929)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.0004892880679108202
    2. ' place' → logprob: -7.750489234924316
    3. '           ' → logprob: -9.750489234924316
    4. '#' → logprob: -15.750489234924316
    5. '   ' → logprob: -16.125490188598633
    6. '       ' → logprob: -17.000490188598633
    7. '               ' → logprob: -17.375490188598633
    8. 'floor' → logprob: -17.875490188598633
    9. '```' → logprob: -18.125490188598633
    10. '.place' → logprob: -18.375490188598633

Token 598: ' le' (ID: 505)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.6901932954788208
    2. 'place' → logprob: -1.1901932954788208
    3. 'car' → logprob: -2.3151931762695312
    4. '           ' → logprob: -2.6901931762695312
    5. ' place' → logprob: -4.065193176269531
    6. '_place' → logprob: -5.190193176269531
    7. '               ' → logprob: -6.190193176269531
    8. '   ' → logprob: -6.315193176269531
    9. 'Car' → logprob: -7.690193176269531
    10. ' carpet' → logprob: -8.190193176269531

Token 599: ' tapis' (ID: 131304)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0012020161375403404
    2. '_car' → logprob: -6.75120210647583
    3. 't' → logprob: -11.376201629638672
    4. ' carpet' → logprob: -11.751201629638672
    5. 'Car' → logprob: -12.626201629638672
    6. '_c' → logprob: -13.001201629638672
    7. '
' → logprob: -13.126201629638672
    8. 'place' → logprob: -13.876201629638672
    9. ' tapis' → logprob: -14.001201629638672
    10. 'tap' → logprob: -14.126201629638672

Token 600: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011931795626878738
    2. '            
' → logprob: -4.886931896209717
    3. 'place' → logprob: -7.261931896209717
    4. ',' → logprob: -7.511931896209717
    5. '               ' → logprob: -7.511931896209717
    6. '   ' → logprob: -7.636931896209717
    7. '
' → logprob: -7.636931896209717
    8. '<|end|>' → logprob: -8.261931419372559
    9. ' place' → logprob: -8.386931419372559
    10. ')' → logprob: -8.761931419372559

Token 601: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049020372331142426
    2. 'place' → logprob: -3.174020290374756
    3. ' place' → logprob: -5.174020290374756
    4. '               ' → logprob: -8.674020767211914
    5. '            
' → logprob: -10.174020767211914
    6. '(place' → logprob: -10.174020767211914
    7. '
' → logprob: -10.674020767211914
    8. '   ' → logprob: -10.924020767211914
    9. '       ' → logprob: -11.049020767211914
    10. '_place' → logprob: -11.424020767211914

Token 602: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' (adapté à ' place') → logprob: -0.001510335598140955
    2. ' place' → logprob: -6.501510143280029
    3. '           ' → logprob: -11.751510620117188
    4. '   ' → logprob: -16.001510620117188
    5. '```' → logprob: -17.876510620117188
    6. '       ' → logprob: -18.376510620117188
    7. '.place' → logprob: -18.626510620117188
    8. '_place' → logprob: -18.626510620117188
    9. '-place' → logprob: -18.751510620117188
    10. '
' → logprob: -18.876510620117188

Token 603: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -2.236549335066229e-05
    2. 'car' → logprob: -11.625021934509277
    3. '_floor' → logprob: -11.875021934509277
    4. '_' → logprob: -12.625021934509277
    5. 'Car' → logprob: -13.750021934509277
    6. '(f' → logprob: -14.000021934509277
    7. '(car' → logprob: -14.500021934509277
    8. '_c' → logprob: -14.625021934509277
    9. 'floor' → logprob: -16.625022888183594
    10. '```' → logprob: -16.875022888183594

Token 604: 'pet' (ID: 9456)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0050277444534003735
    2. 'car' → logprob: -5.380027770996094
    3. 't' → logprob: -8.880027770996094
    4. 'floor' → logprob: -9.380027770996094
    5. '_c' → logprob: -9.630027770996094
    6. 'Car' → logprob: -10.255027770996094
    7. 'et' → logprob: -11.380027770996094
    8. '_floor' → logprob: -11.380027770996094
    9. '   ' → logprob: -11.880027770996094
    10. '_C' → logprob: -11.880027770996094

Token 605: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.75000286102295
    3. ' (' → logprob: -16.125003814697266
    4. '(car' → logprob: -16.875003814697266
    5. '(
' → logprob: -18.500003814697266
    6. 'floor' → logprob: -19.125003814697266
    7. '(F' → logprob: -19.125003814697266
    8. ' floor' → logprob: -19.500003814697266
    9. '```' → logprob: -20.000003814697266
    10. '.floor' → logprob: -21.500003814697266

Token 606: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.04307546839118004
    2. 'floor' → logprob: -3.1680755615234375
    3. 'or' → logprob: -10.418075561523438
    4. 'oor' → logprob: -10.543075561523438
    5. 'lor' → logprob: -12.043075561523438
    6. '(f' → logprob: -12.918075561523438
    7. ' floor' → logprob: -12.918075561523438
    8. 'lo' → logprob: -13.043075561523438
    9. '_floor' → logprob: -13.168075561523438
    10. '.floor' → logprob: -13.793075561523438

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6938918232917786
    2. '(f' → logprob: -0.6938918232917786
    3. ',f' → logprob: -7.443892002105713
    4. ')' → logprob: -9.318891525268555
    5. ' ,' → logprob: -10.818891525268555
    6. '(' → logprob: -10.943891525268555
    7. ' (' → logprob: -11.818891525268555
    8. ',
' → logprob: -11.943891525268555
    9. '),' → logprob: -12.068891525268555
    10. '[' → logprob: -12.693891525268555

Token 608: ' x' (ID: 1215)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.82854825258255
    2. 'x' → logprob: -1.0785481929779053
    3. ' floor' → logprob: -1.5785481929779053
    4. ' x' → logprob: -4.078548431396484
    5. 'f' → logprob: -11.328548431396484
    6. '(x' → logprob: -12.453548431396484
    7. ' ' → logprob: -13.328548431396484
    8. '_floor' → logprob: -14.078548431396484
    9. '```' → logprob: -14.578548431396484
    10. 'flo' → logprob: -14.828548431396484

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007654422894120216
    2. ',y' → logprob: -4.882654190063477
    3. ' ,' → logprob: -10.007654190063477
    4. 'y' → logprob: -12.882654190063477
    5. ',
' → logprob: -15.007654190063477
    6. '+' → logprob: -15.132654190063477
    7. '[' → logprob: -17.257654190063477
    8. '```' → logprob: -17.257654190063477
    9. '[y' → logprob: -17.382654190063477
    10. '   ' → logprob: -17.632654190063477

Token 610: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.611323624383658e-05
    2. ' y' → logprob: -9.625065803527832
    3. ',y' → logprob: -18.25006675720215
    4. ' ' → logprob: -18.37506675720215
    5. '<|end|>' → logprob: -18.62506675720215
    6. ',' → logprob: -18.75006675720215
    7. '   ' → logprob: -18.87506675720215
    8. '	y' → logprob: -19.50006675720215
    9. '    ' → logprob: -20.62506675720215
    10. ')y' → logprob: -20.75006675720215

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ',size' → logprob: -12.500004768371582
    3. ' ,' → logprob: -14.000004768371582
    4. ',
' → logprob: -18.000003814697266
    5. 'size' → logprob: -18.250003814697266
    6. '```' → logprob: -20.000003814697266
    7. '=' → logprob: -20.500003814697266
    8. '           ' → logprob: -20.875003814697266
    9. '   ' → logprob: -21.125003814697266
    10. ',s' → logprob: -21.625003814697266

Token 612: ' size' (ID: 2349)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16100186109542847
    2. 'size' → logprob: -1.9110019207000732
    3. ' -' → logprob: -7.536001682281494
    4. '-size' → logprob: -8.786002159118652
    5. ' size' → logprob: -9.661002159118652
    6. 'val' → logprob: -11.161002159118652
    7. '
' → logprob: -12.036002159118652
    8. '   ' → logprob: -12.786002159118652
    9. ' ' → logprob: -14.411002159118652
    10. ')' → logprob: -14.661002159118652

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ',-' → logprob: -11.750011444091797
    3. ' ,' → logprob: -12.500011444091797
    4. ',val' → logprob: -16.250011444091797
    5. ',
' → logprob: -17.000011444091797
    6. '   ' → logprob: -17.500011444091797
    7. '           ' → logprob: -17.625011444091797
    8. '-' → logprob: -17.750011444091797
    9. ' ,-' → logprob: -18.875011444091797
    10. '```' → logprob: -19.000011444091797

Token 614: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.2729995988775045e-06
    2. ' -' → logprob: -12.000006675720215
    3. ' ' → logprob: -21.7500057220459
    4. '   ' → logprob: -22.2500057220459
    5. '\-' → logprob: -23.7500057220459
    6. '  ' → logprob: -24.5000057220459
    7. '−' → logprob: -24.6250057220459
    8. '[-' → logprob: -25.3750057220459
    9. '-val' → logprob: -25.3750057220459
    10. '(-' → logprob: -25.5000057220459

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '<|end|>' → logprob: -17.375
    4. '۱' → logprob: -19.5
    5. '১' → logprob: -19.875
    6. '１' → logprob: -20.3125
    7. '```' → logprob: -20.4375
    8. '१' → logprob: -20.4375
    9. ')' → logprob: -20.75
    10. '<|end|>' → logprob: -21.0625

Token 616: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009263493702746928
    2. ')
' → logprob: -7.125926494598389
    3. '           ' → logprob: -9.12592601776123
    4. '
' → logprob: -12.25092601776123
    5. ' )' → logprob: -12.62592601776123
    6. '       ' → logprob: -13.37592601776123
    7. '   ' → logprob: -14.12592601776123
    8. '),' → logprob: -14.75092601776123
    9. ')\' → logprob: -15.00092601776123
    10. '<|end|>' → logprob: -15.00092601776123

Token 617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11945443600416183
    2. '
' → logprob: -2.3694543838500977
    3. '       ' → logprob: -4.869454383850098
    4. '            
' → logprob: -5.369454383850098
    5. '    
' → logprob: -6.119454383850098
    6. '   ' → logprob: -6.869454383850098
    7. '  
' → logprob: -6.994454383850098
    8. '        
' → logprob: -7.244454383850098
    9. '<|end|>' → logprob: -7.619454383850098
    10. '\n' → logprob: -8.119454383850098

Token 618: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.028553523123264313
    2. '
' → logprob: -4.278553485870361
    3. ' dfs' → logprob: -4.528553485870361
    4. '           ' → logprob: -6.153553485870361
    5. '   ' → logprob: -6.778553485870361
    6. '```' → logprob: -8.90355396270752
    7. '            
' → logprob: -10.40355396270752
    8. '    
' → logprob: -10.90355396270752
    9. 'df' → logprob: -11.02855396270752
    10. '``' → logprob: -11.77855396270752

Token 619: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.522638169466518e-05
    2. '(' → logprob: -10.625024795532227
    3. '(
' → logprob: -14.375024795532227
    4. ' (' → logprob: -15.500024795532227
    5. '```' → logprob: -17.625024795532227
    6. ' floor' → logprob: -17.875024795532227
    7. '_floor' → logprob: -18.375024795532227
    8. 'floor' → logprob: -18.750024795532227
    9. '.floor' → logprob: -19.250024795532227
    10. '(depth' → logprob: -19.250024795532227

Token 620: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.02975974604487419
    2. 'floor' → logprob: -3.529759645462036
    3. 'oor' → logprob: -12.654759407043457
    4. '_floor' → logprob: -13.279759407043457
    5. 'lo' → logprob: -13.654759407043457
    6. ',' → logprob: -13.779759407043457
    7. ' floor' → logprob: -14.654759407043457
    8. '.floor' → logprob: -15.154759407043457
    9. 'l' → logprob: -15.279759407043457
    10. 'loat' → logprob: -15.529759407043457

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.750006675720215
    4. ',W' → logprob: -15.750006675720215
    5. ',
' → logprob: -17.0000057220459
    6. '           ' → logprob: -17.0000057220459
    7. '```' → logprob: -17.3750057220459
    8. '[' → logprob: -17.8750057220459
    9. '       ' → logprob: -18.2500057220459
    10. '‌,' → logprob: -18.7500057220459

Token 622: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00317783304490149
    2. ' W' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.753177642822266
    4. '    ' → logprob: -18.628177642822266
    5. '	W' → logprob: -19.503177642822266
    6. '       ' → logprob: -19.753177642822266
    7. ' ' → logprob: -19.878177642822266
    8. '<W' → logprob: -20.503177642822266
    9. '           ' → logprob: -20.753177642822266
    10. '     ' → logprob: -21.003177642822266

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002707529056351632
    2. ' ,' → logprob: -8.75027084350586
    3. ',c' → logprob: -9.75027084350586
    4. ',H' → logprob: -10.12527084350586
    5. '   ' → logprob: -11.75027084350586
    6. ',y' → logprob: -13.37527084350586
    7. ',size' → logprob: -14.25027084350586
    8. ',C' → logprob: -14.75027084350586
    9. ',W' → logprob: -14.75027084350586
    10. ' carpet' → logprob: -14.87527084350586

Token 624: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.553032628493384e-05
    2. ' H' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.500075340270996
    4. '    ' → logprob: -17.000076293945312
    5. ' ' → logprob: -17.750076293945312
    6. 'x' → logprob: -18.000076293945312
    7. '  ' → logprob: -18.125076293945312
    8. 'y' → logprob: -19.250076293945312
    9. '     ' → logprob: -19.250076293945312
    10. '       ' → logprob: -19.375076293945312

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.251091377227567e-05
    2. ' ,' → logprob: -10.375042915344238
    3. ',c' → logprob: -11.500042915344238
    4. '   ' → logprob: -14.000042915344238
    5. '```' → logprob: -16.375041961669922
    6. ',
' → logprob: -16.875041961669922
    7. 'car' → logprob: -17.000041961669922
    8. '(c' → logprob: -17.375041961669922
    9. '           ' → logprob: -17.375041961669922
    10. '       ' → logprob: -18.125041961669922

Token 626: ' carpets' (ID: 93343)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6932120323181152
    2. ' carpets' → logprob: -0.6932120323181152
    3. 'cars' → logprob: -9.943212509155273
    4. ' carp' → logprob: -12.068212509155273
    5. ' carpet' → logprob: -12.568212509155273
    6. 'c' → logprob: -13.193212509155273
    7. ' ' → logprob: -13.568212509155273
    8. '   ' → logprob: -13.943212509155273
    9. 'care' → logprob: -14.443212509155273
    10. ' Carp' → logprob: -14.818212509155273

Token 627: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -4.453737710718997e-05
    2. 'used' → logprob: -10.125044822692871
    3. 's' → logprob: -13.250044822692871
    4. 'Used' → logprob: -13.875044822692871
    5. 'ed' → logprob: -14.500044822692871
    6. ',' → logprob: -15.500044822692871
    7. '_USED' → logprob: -15.750044822692871
    8. '```' → logprob: -15.875044822692871
    9. '   ' → logprob: -16.000043869018555
    10. 'd' → logprob: -16.500043869018555

Token 628: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47413867712020874
    2. ' +' → logprob: -0.9741386771202087
    3. ',' → logprob: -9.724138259887695
    4. '+,' → logprob: -13.974138259887695
    5. '   ' → logprob: -14.974138259887695
    6. ' ,' → logprob: -15.099138259887695
    7. '+
' → logprob: -16.099138259887695
    8. ' ' → logprob: -16.349138259887695
    9. '＋' → logprob: -16.474138259887695
    10. '```' → logprob: -17.349138259887695

Token 629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.50000286102295
    3. 'size' → logprob: -13.75000286102295
    4. '   ' → logprob: -16.000001907348633
    5. '
' → logprob: -17.750001907348633
    6. ',' → logprob: -17.875001907348633
    7. ' size' → logprob: -18.500001907348633
    8. '       ' → logprob: -19.250001907348633
    9. '```' → logprob: -19.625001907348633
    10. '  ' → logprob: -19.750001907348633

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2246291337069124e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',b' → logprob: -14.125021934509277
    4. ')' → logprob: -19.250022888183594
    5. ',
' → logprob: -19.250022888183594
    6. '   ' → logprob: -20.250022888183594
    7. 'best' → logprob: -21.125022888183594
    8. '),' → logprob: -21.500022888183594
    9. ' best' → logprob: -21.500022888183594
    10. '```' → logprob: -21.875022888183594

Token 631: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.01814994215965271
    2. ' best' → logprob: -4.0181498527526855
    3. '	best' → logprob: -20.518150329589844
    4. '(best' → logprob: -22.643150329589844
    5. '.best' → logprob: -22.768150329589844
    6. '_best' → logprob: -23.268150329589844
    7. 'Best' → logprob: -23.768150329589844
    8. 'b' → logprob: -24.643150329589844
    9. '-best' → logprob: -26.143150329589844
    10. ' ' → logprob: -26.518150329589844

Token 632: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4740850329399109
    2. ')
' → logprob: -0.9740850329399109
    3. ')
' → logprob: -12.224084854125977
    4. '           ' → logprob: -13.349084854125977
    5. '   ' → logprob: -14.224084854125977
    6. ' )
' → logprob: -15.474084854125977
    7. ')

' → logprob: -15.474084854125977
    8. ')`
' → logprob: -16.099084854125977
    9. ' )' → logprob: -16.349084854125977
    10. '),' → logprob: -16.599084854125977

Token 633: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006098957732319832
    2. 'place' → logprob: -5.131098747253418
    3. ' place' → logprob: -8.881098747253418
    4. '```' → logprob: -10.756098747253418
    5. 'placement' → logprob: -12.756098747253418
    6. '(place' → logprob: -13.131098747253418
    7. '       ' → logprob: -13.256098747253418
    8. '_place' → logprob: -14.506098747253418
    9. '``' → logprob: -14.756098747253418
    10. 'Place' → logprob: -14.756098747253418

Token 634: ' #' (ID: 1069)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.03991606459021568
    2. '           ' → logprob: -3.2899160385131836
    3. ' place' → logprob: -6.289916038513184
    4. '       ' → logprob: -11.164916038513184
    5. '   ' → logprob: -13.039916038513184
    6. '```' → logprob: -14.289916038513184
    7. '(place' → logprob: -15.289916038513184
    8. '          ' → logprob: -15.289916038513184
    9. '.place' → logprob: -15.789916038513184
    10. 'placement' → logprob: -16.0399169921875

Token 635: ' Ret' (ID: 16724)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -2.696889623621246e-06
    2. ' place' → logprob: -12.87500286102295
    3. 'Place' → logprob: -17.750001907348633
    4. '#' → logprob: -18.000001907348633
    5. '           ' → logprob: -18.375001907348633
    6. 'placer' → logprob: -19.625001907348633
    7. '       ' → logprob: -19.875001907348633
    8. '   ' → logprob: -20.125001907348633
    9. '
' → logprob: -20.125001907348633
    10. 'placement' → logprob: -20.500001907348633

Token 636: 'ire' (ID: 594)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.70997554063797
    2. 'race' → logprob: -0.83497554063797
    3. 'urn' → logprob: -2.834975481033325
    4. 'r' → logprob: -5.334975719451904
    5. 'our' → logprob: -6.334975719451904
    6. 'rack' → logprob: -6.459975719451904
    7. 'ape' → logprob: -6.834975719451904
    8. 'ra' → logprob: -6.959975719451904
    9. '_place' → logprob: -7.084975719451904
    10. 'rans' → logprob: -7.209975719451904

Token 637: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6115567684173584
    2. ' le' → logprob: -0.8615567684173584
    3. '_le' → logprob: -3.4865567684173584
    4. '_car' → logprob: -5.6115570068359375
    5. '           ' → logprob: -8.236557006835938
    6. 'car' → logprob: -9.236557006835938
    7. ' the' → logprob: -9.361557006835938
    8. '_place' → logprob: -9.861557006835938
    9. '(le' → logprob: -9.986557006835938
    10. 'the' → logprob: -9.986557006835938

Token 638: ' tapis' (ID: 131304)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.007124880328774452
    2. '_car' → logprob: -5.007124900817871
    3. 'place' → logprob: -8.382124900817871
    4. 't' → logprob: -9.007124900817871
    5. ' carpet' → logprob: -10.632124900817871
    6. 'Car' → logprob: -12.007124900817871
    7. ' tapis' → logprob: -12.007124900817871
    8. '_' → logprob: -12.132124900817871
    9. '_c' → logprob: -12.257124900817871
    10. 'tap' → logprob: -12.507124900817871

Token 639: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0057637072168290615
    2. 'place' → logprob: -5.255763530731201
    3. ' place' → logprob: -7.630763530731201
    4. '(place' → logprob: -10.25576400756836
    5. '
' → logprob: -12.75576400756836
    6. '            
' → logprob: -13.63076400756836
    7. 'placement' → logprob: -13.75576400756836
    8. '.place' → logprob: -14.00576400756836
    9. '_place' → logprob: -14.25576400756836
    10. '          ' → logprob: -14.25576400756836

Token 640: 'back' (ID: 2205)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.014174911193549633
    2. ' place' → logprob: -4.264174938201904
    3. 'floor' → logprob: -12.389174461364746
    4. '           ' → logprob: -12.639174461364746
    5. ')' → logprob: -13.389174461364746
    6. '(place' → logprob: -13.889174461364746
    7. '.place' → logprob: -15.139174461364746
    8. 'placer' → logprob: -15.139174461364746
    9. 'places' → logprob: -15.389174461364746
    10. 'placement' → logprob: -15.889174461364746

Token 641: 'track' (ID: 22792)
  Prédit: '_place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.3528594672679901
    2. 'place' → logprob: -1.2278594970703125
    3. ' place' → logprob: -5.4778594970703125
    4. 'trace' → logprob: -9.477859497070312
    5. '(place' → logprob: -10.352859497070312
    6. '   ' → logprob: -10.352859497070312
    7. '_' → logprob: -10.977859497070312
    8. 'space' → logprob: -11.227859497070312
    9. '_car' → logprob: -11.477859497070312
    10. 'plac' → logprob: -11.852859497070312

Token 642: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.15173856914043427
    2. '           ' → logprob: -2.2767386436462402
    3. ')' → logprob: -3.2767386436462402
    4. 'place' → logprob: -8.276738166809082
    5. '(place' → logprob: -9.651738166809082
    6. ' place' → logprob: -11.026738166809082
    7. '          ' → logprob: -11.151738166809082
    8. '            ' → logprob: -11.276738166809082
    9. '               ' → logprob: -11.526738166809082
    10. '       ' → logprob: -12.026738166809082

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21628399193286896
    2. 'place' → logprob: -1.7162840366363525
    3. ' place' → logprob: -4.216283798217773
    4. '(place' → logprob: -12.591283798217773
    5. '```' → logprob: -13.341283798217773
    6. '          ' → logprob: -14.716283798217773
    7. '.place' → logprob: -14.841283798217773
    8. '   ' → logprob: -14.966283798217773
    9. '       ' → logprob: -14.966283798217773
    10. '               ' → logprob: -15.216283798217773

Token 644: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' (adapté à ' place') → logprob: -1.8624639324116288e-06
    2. ' place' → logprob: -13.250001907348633
    3. 'placement' → logprob: -19.750001907348633
    4. '```' → logprob: -21.125001907348633
    5. '(place' → logprob: -21.250001907348633
    6. 'placer' → logprob: -21.750001907348633
    7. 'plac' → logprob: -21.875001907348633
    8. '.place' → logprob: -21.875001907348633
    9. '-place' → logprob: -22.000001907348633
    10. 'Place' → logprob: -22.125001907348633

Token 645: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.75
    3. 'car' → logprob: -16.125
    4. 'Car' → logprob: -16.5
    5. '_c' → logprob: -17.5
    6. '_floor' → logprob: -19.125
    7. '_cat' → logprob: -19.25
    8. '_code' → logprob: -19.5
    9. '```' → logprob: -19.75
    10. ' _' → logprob: -20.0

Token 646: 'pet' (ID: 9456)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.7810487747192383
    2. '_car' → logprob: -0.9060487747192383
    3. 't' → logprob: -2.6560487747192383
    4. 'pet' → logprob: -2.7810487747192383
    5. '_pet' → logprob: -5.281048774719238
    6. 'car' → logprob: -8.156048774719238
    7. '_t' → logprob: -8.656048774719238
    8. ' carpet' → logprob: -10.156048774719238
    9. 'pt' → logprob: -10.406048774719238
    10. '_et' → logprob: -10.906048774719238

Token 647: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -7.896309739408025e-07
    2. 'floor' → logprob: -14.875000953674316
    3. '(' → logprob: -15.500000953674316
    4. ' floor' → logprob: -16.75
    5. ' (' → logprob: -16.875
    6. '```' → logprob: -17.125
    7. '_floor' → logprob: -18.5
    8. '(
' → logprob: -18.5
    9. '[f' → logprob: -18.75
    10. '`' → logprob: -19.25

Token 648: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.02329835295677185
    2. 'floor' → logprob: -3.7732982635498047
    3. '(f' → logprob: -9.898298263549805
    4. '_floor' → logprob: -13.398298263549805
    5. '.floor' → logprob: -15.023298263549805
    6. ' floor' → logprob: -15.398298263549805
    7. 'oor' → logprob: -15.773298263549805
    8. 'lo' → logprob: -16.273298263549805
    9. 'l' → logprob: -16.398298263549805
    10. '[f' → logprob: -17.023298263549805

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4830787777900696
    2. '(f' → logprob: -0.9830787777900696
    3. ',f' → logprob: -4.733078956604004
    4. 'floor' → logprob: -8.858078956604004
    5. ' ,' → logprob: -11.983078956604004
    6. '[f' → logprob: -12.358078956604004
    7. ')' → logprob: -12.608078956604004
    8. '[' → logprob: -12.983078956604004
    9. ' floor' → logprob: -14.108078956604004
    10. '-floor' → logprob: -14.233078956604004

Token 650: ' x' (ID: 1215)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -7.493430894101039e-05
    2. ' floor' → logprob: -9.500075340270996
    3. 'f' → logprob: -19.75007438659668
    4. '_floor' → logprob: -19.75007438659668
    5. '.floor' → logprob: -21.37507438659668
    6. 'x' → logprob: -22.12507438659668
    7. 'Floor' → logprob: -22.75007438659668
    8. '-floor' → logprob: -22.87507438659668
    9. 'flo' → logprob: -23.50007438659668
    10. 'loor' → logprob: -23.87507438659668

Token 651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.840432565193623e-05
    2. ',y' → logprob: -9.500088691711426
    3. ' ,' → logprob: -11.750088691711426
    4. 'y' → logprob: -12.375088691711426
    5. '[' → logprob: -14.375088691711426
    6. '[y' → logprob: -14.625088691711426
    7. '```' → logprob: -16.37508773803711
    8. ' y' → logprob: -16.62508773803711
    9. ',f' → logprob: -17.62508773803711
    10. '   ' → logprob: -18.00008773803711

Token 652: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.493430894101039e-05
    2. ' y' → logprob: -9.500075340270996
    3. ',' → logprob: -19.37507438659668
    4. ',y' → logprob: -20.12507438659668
    5. ' ' → logprob: -20.75007438659668
    6. '	y' → logprob: -21.00007438659668
    7. '   ' → logprob: -21.25007438659668
    8. 'y's' → logprob: -21.62507438659668
    9. 'yse' → logprob: -22.00007438659668
    10. 'yj' → logprob: -22.37507438659668

Token 653: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023655613767914474
    2. ',f' → logprob: -8.875236511230469
    3. '(f' → logprob: -9.500236511230469
    4. 'floor' → logprob: -11.375236511230469
    5. ' ,' → logprob: -11.750236511230469
    6. 'f' → logprob: -14.000236511230469
    7. '```' → logprob: -14.250236511230469
    8. 'def' → logprob: -15.500236511230469
    9. '[' → logprob: -15.500236511230469
    10. '[f' → logprob: -16.00023651123047

Token 654: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0007575734634883702
    2. '1' → logprob: -7.500757694244385
    3. ' size' → logprob: -8.500757217407227
    4. 'val' → logprob: -14.625757217407227
    5. ' ' → logprob: -15.250757217407227
    6. 'value' → logprob: -15.500757217407227
    7. '0' → logprob: -15.625757217407227
    8. '   ' → logprob: -16.250757217407227
    9. ',size' → logprob: -17.125757217407227
    10. '(size' → logprob: -17.250757217407227

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ' ,' → logprob: -12.250004768371582
    3. '1' → logprob: -17.0000057220459
    4. ',
' → logprob: -17.7500057220459
    5. ' ' → logprob: -19.7500057220459
    6. 'def' → logprob: -20.2500057220459
    7. '```' → logprob: -20.2500057220459
    8. ')' → logprob: -20.3750057220459
    9. '=' → logprob: -20.3750057220459
    10. '[' → logprob: -21.0000057220459

Token 656: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -22.125
    4. '```' → logprob: -24.625
    5. '１' → logprob: -25.0
    6. '0' → logprob: -25.375
    7. '  ' → logprob: -25.375
    8. '+' → logprob: -26.375
    9. '' → logprob: -26.75
    10. '#' → logprob: -26.875

Token 657: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -23.5
    4. '   ' → logprob: -23.75
    5. '１' → logprob: -24.125
    6. '0' → logprob: -24.875
    7. '' → logprob: -25.375
    8. '۱' → logprob: -26.0
    9. '+' → logprob: -26.5
    10. '  ' → logprob: -26.5

Token 658: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -14.125007629394531
    4. ')

' → logprob: -17.37500762939453
    5. '<|end|>' → logprob: -18.12500762939453
    6. ')#' → logprob: -18.75000762939453
    7. '))' → logprob: -19.50000762939453
    8. ')
' → logprob: -20.00000762939453
    9. ')return' → logprob: -20.12500762939453
    10. '   ' → logprob: -20.12500762939453

Token 659: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 660: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.001970862038433552
    2. ' solve' → logprob: -6.6269707679748535
    3. 'main' → logprob: -7.5019707679748535
    4. ' def' → logprob: -10.751971244812012
    5. ' solution' → logprob: -10.876971244812012
    6. ' find' → logprob: -11.376971244812012
    7. 'solve' → logprob: -11.626971244812012
    8. ' best' → logprob: -11.876971244812012
    9. ' minimal' → logprob: -12.376971244812012
    10. 'def' → logprob: -12.501971244812012

Token 661: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.794061770662665e-05
    2. '()' → logprob: -10.37509822845459
    3. '(' → logprob: -10.62509822845459
    4. '():
' → logprob: -10.75009822845459
    5. ' ():' → logprob: -11.37509822845459
    6. '(f' → logprob: -11.87509822845459
    7. '_' → logprob: -13.87509822845459
    8. '(argv' → logprob: -15.00009822845459
    9. '(":' → logprob: -15.50009822845459
    10. '():
' → logprob: -15.75009822845459

Token 662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0063823373056948185
    2. '```' → logprob: -5.256382465362549
    3. ' import' → logprob: -8.13138198852539
    4. ' input' → logprob: -8.25638198852539
    5. 'import' → logprob: -8.75638198852539
    6. ' floor' → logprob: -10.00638198852539
    7. '(' → logprob: -10.00638198852539
    8. '   ' → logprob: -10.63138198852539
    9. ' readline' → logprob: -10.63138198852539
    10. 'input' → logprob: -10.75638198852539

Token 663: ' while' (ID: 2049)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.5678499341011047
    2. 'W' → logprob: -1.06784987449646
    3. '   ' → logprob: -2.44284987449646
    4. 'n' → logprob: -7.067850112915039
    5. 'import' → logprob: -7.817850112915039
    6. ' n' → logprob: -7.942850112915039
    7. ' input' → logprob: -7.942850112915039
    8. ' import' → logprob: -8.192850112915039
    9. 'w' → logprob: -9.067850112915039
    10. '```' → logprob: -9.567850112915039

Token 664: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.20142494142055511
    2. 'True' → logprob: -1.7014249563217163
    3. '(True' → logprob: -11.451424598693848
    4. '=True' → logprob: -14.076424598693848
    5. '1' → logprob: -15.326424598693848
    6. 'true' → logprob: -17.576425552368164
    7. ' ' → logprob: -18.076425552368164
    8. ' ' → logprob: -18.451425552368164
    9. '_true' → logprob: -18.576425552368164
    10. 'TRUE' → logprob: -19.951425552368164

Token 665: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03689919784665108
    2. '():' → logprob: -3.7868990898132324
    3. ':
' → logprob: -5.036899089813232
    4. ' :' → logprob: -5.786899089813232
    5. '   ' → logprob: -5.911899089813232
    6. '():
' → logprob: -6.911899089813232
    7. '(' → logprob: -9.41189956665039
    8. ' :
' → logprob: -9.53689956665039
    9. ',' → logprob: -9.78689956665039
    10. '):' → logprob: -11.41189956665039

Token 666: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06974010914564133
    2. ' try' → logprob: -2.819740056991577
    3. 'try' → logprob: -5.444740295410156
    4. ' line' → logprob: -5.694740295410156
    5. '```' → logprob: -10.569740295410156
    6. 'line' → logprob: -11.444740295410156
    7. '       ' → logprob: -11.569740295410156
    8. '   ' → logprob: -12.194740295410156
    9. '	try' → logprob: -12.444740295410156
    10. ' input' → logprob: -14.069740295410156

Token 667: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2656042277812958
    2. 'line' (adapté à ' line') → logprob: -1.5156042575836182
    3. 'try' → logprob: -5.015604019165039
    4. ' try' → logprob: -5.265604019165039
    5. '   ' → logprob: -7.265604019165039
    6. ' ligne' → logprob: -7.640604019165039
    7. ' W' → logprob: -9.015604019165039
    8. 'W' → logprob: -9.015604019165039
    9. 'ligne' → logprob: -9.015604019165039
    10. 'l' → logprob: -9.265604019165039

Token 668: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022686660289764
    2. '=' → logprob: -1.910226821899414
    3. 's' → logprob: -13.535226821899414
    4. '=line' → logprob: -13.910226821899414
    5. '=input' → logprob: -15.035226821899414
    6. '_' → logprob: -17.410226821899414
    7. ' =
' → logprob: -17.660226821899414
    8. ' ' → logprob: -17.660226821899414
    9. '=sys' → logprob: -17.785226821899414
    10. '   ' → logprob: -18.160226821899414

Token 669: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.015338827855885029
    2. ' input' → logprob: -4.515338897705078
    3. 'sys' → logprob: -5.515338897705078
    4. ' sys' → logprob: -8.265338897705078
    5. '=input' → logprob: -17.890338897705078
    6. '=sys' → logprob: -18.140338897705078
    7. '<input' → logprob: -18.265338897705078
    8. '_input' → logprob: -19.015338897705078
    9. '(sys' → logprob: -19.140338897705078
    10. '(input' → logprob: -19.640338897705078

Token 670: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3723221719264984
    2. '=' → logprob: -1.2473222017288208
    3. '       ' → logprob: -3.9973220825195312
    4. '=line' → logprob: -5.372322082519531
    5. 'line' → logprob: -8.372322082519531
    6. ' line' → logprob: -8.872322082519531
    7. '(line' → logprob: -9.747322082519531
    8. 'while' → logprob: -10.122322082519531
    9. '   ' → logprob: -10.372322082519531
    10. '=input' → logprob: -11.122322082519531

Token 671: ' #' (ID: 1069)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.48289525508880615
    2. 'line' → logprob: -0.9828952550888062
    3. ' line' → logprob: -4.982895374298096
    4. ' try' → logprob: -6.357895374298096
    5. 'while' → logprob: -9.107894897460938
    6. '       ' → logprob: -9.857894897460938
    7. '   ' → logprob: -10.732894897460938
    8. '
' → logprob: -12.732894897460938
    9. '           ' → logprob: -13.232894897460938
    10. ' while' → logprob: -14.232894897460938

Token 672: ' Lire' (ID: 57624)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.32603228092193604
    2. 'try' → logprob: -1.326032280921936
    3. ' line' → logprob: -4.5760321617126465
    4. ' try' → logprob: -6.3260321617126465
    5. 'while' → logprob: -7.4510321617126465
    6. '   ' → logprob: -11.451032638549805
    7. ' while' → logprob: -11.951032638549805
    8. '
' → logprob: -13.076032638549805
    9. 'for' → logprob: -13.701032638549805
    10. '```' → logprob: -13.951032638549805

Token 673: ' une' (ID: 2463)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.12729543447494507
    2. ' line' → logprob: -2.12729549407959
    3. '   ' → logprob: -8.75229549407959
    4. 'try' → logprob: -9.37729549407959
    5. 'while' → logprob: -9.87729549407959
    6. 'ligne' → logprob: -11.00229549407959
    7. '=line' → logprob: -11.37729549407959
    8. ' while' → logprob: -11.75229549407959
    9. ' ' → logprob: -11.75229549407959
    10. '    ' → logprob: -12.00229549407959

Token 674: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5392626523971558
    2. 'ligne' → logprob: -1.4142626523971558
    3. ' ligne' → logprob: -2.4142627716064453
    4. ' line' → logprob: -2.5392627716064453
    5. 'input' → logprob: -6.164262771606445
    6. 'while' → logprob: -6.414262771606445
    7. 'import' → logprob: -7.539262771606445
    8. 'l' → logprob: -8.039262771606445
    9. ' input' → logprob: -8.539262771606445
    10. ' while' → logprob: -9.164262771606445

Token 675: ' non' (ID: 2893)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.10358726978302
    2. ' =' → logprob: -1.35358726978302
    3. '       ' → logprob: -1.97858726978302
    4. 'line' → logprob: -2.2285871505737305
    5. '=' → logprob: -3.1035871505737305
    6. '=line' → logprob: -3.1035871505737305
    7. '   ' → logprob: -3.4785871505737305
    8. 'while' → logprob: -3.7285871505737305
    9. '(line' → logprob: -4.7285871505737305
    10. ' while' → logprob: -4.8535871505737305

Token 676: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.00678629707545042
    2. ' vide' → logprob: -5.006786346435547
    3. 'vid' → logprob: -10.006786346435547
    4. 'empty' → logprob: -11.256786346435547
    5. 'blank' → logprob: -12.381786346435547
    6. 'vider' → logprob: -12.881786346435547
    7. ' Vide' → logprob: -13.256786346435547
    8. ' empty' → logprob: -13.381786346435547
    9. 'Vide' → logprob: -13.631786346435547
    10. ' blank' → logprob: -14.881786346435547

Token 677: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0357370376586914
    2. ' =' → logprob: -1.2857370376586914
    3. '=line' → logprob: -2.0357370376586914
    4. 'while' → logprob: -2.2857370376586914
    5. 'line' → logprob: -2.4107370376586914
    6. ' line' → logprob: -4.035737037658691
    7. '       ' → logprob: -4.285737037658691
    8. ' while' → logprob: -4.410737037658691
    9. '(line' → logprob: -6.785737037658691
    10. '   ' → logprob: -7.660737037658691

Token 678: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7676272392272949
    2. ' =' → logprob: -0.8926272392272949
    3. 'while' → logprob: -2.517627239227295
    4. '=line' → logprob: -3.892627239227295
    5. ' while' → logprob: -4.892627239227295
    6. '       ' → logprob: -4.892627239227295
    7. 'line' → logprob: -4.892627239227295
    8. ' line' → logprob: -6.142627239227295
    9. '   ' → logprob: -8.267627716064453
    10. '(line' → logprob: -9.017627716064453

Token 679: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4013407230377197
    2. ' line' → logprob: -1.1513407230377197
    3. 'while' (adapté à ' while') → logprob: -4.901340484619141
    4. '       ' → logprob: -5.526340484619141
    5. ' while' → logprob: -5.901340484619141
    6. '   ' → logprob: -8.52634048461914
    7. ' ' → logprob: -12.40134048461914
    8. '	line' → logprob: -13.02634048461914
    9. '#line' → logprob: -13.15134048461914
    10. '(line' → logprob: -13.90134048461914

Token 680: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3251284658908844
    2. 'line' → logprob: -1.575128436088562
    3. ' not' → logprob: -2.7001285552978516
    4. 'not' → logprob: -5.950128555297852
    5. '(line' → logprob: -7.450128555297852
    6. ' True' → logprob: -9.200128555297852
    7. '(not' → logprob: -10.450128555297852
    8. 'True' → logprob: -10.575128555297852
    9. ' len' → logprob: -11.325128555297852
    10. 'len' → logprob: -11.575128555297852

Token 681: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.43484482169151306
    2. '==' → logprob: -1.3098448514938354
    3. '=' → logprob: -2.684844732284546
    4. ' ==' → logprob: -4.809844970703125
    5. ' =' → logprob: -5.184844970703125
    6. '.' → logprob: -7.934844970703125
    7. ':=' → logprob: -8.309844970703125
    8. 'strip' → logprob: -9.309844970703125
    9. ' :=' → logprob: -10.559844970703125
    10. ' ' → logprob: -10.684844970703125

Token 682: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.441142201423645
    2. '()==' → logprob: -1.191142201423645
    3. '==' → logprob: -2.9411420822143555
    4. ' ==' → logprob: -11.191142082214355
    5. '=' → logprob: -12.566142082214355
    6. '===' → logprob: -13.941142082214355
    7. '()=="' → logprob: -14.941142082214355
    8. '```' → logprob: -15.441142082214355
    9. '()!=' → logprob: -15.691142082214355
    10. ']==' → logprob: -15.941142082214355

Token 683: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0007962852250784636
    2. ' ==' → logprob: -7.375796318054199
    3. '()==' → logprob: -8.8757963180542
    4. '=' → logprob: -10.5007963180542
    5. '===' → logprob: -13.6257963180542
    6. '()' → logprob: -14.5007963180542
    7. '==
' → logprob: -15.1257963180542
    8. ')==' → logprob: -16.000795364379883
    9. '=='' → logprob: -16.125795364379883
    10. ']==' → logprob: -16.250795364379883

Token 684: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3132648468017578
    2. '''' → logprob: -1.3132648468017578
    3. '"":' → logprob: -13.063264846801758
    4. '""' → logprob: -15.188264846801758
    5. '''
' → logprob: -15.563264846801758
    6. ''''' → logprob: -15.688264846801758
    7. '''.' → logprob: -16.188264846801758
    8. ' '':
' → logprob: -16.188264846801758
    9. ''',' → logprob: -16.813264846801758
    10. '"' → logprob: -17.188264846801758

Token 685: '           ' (ID: 352)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.0452938079833984
    2. 'line' → logprob: -1.2952938079833984
    3. ':' → logprob: -2.1702938079833984
    4. ':
' → logprob: -2.6702938079833984
    5. '=line' → logprob: -2.9202938079833984
    6. '       ' → logprob: -3.0452938079833984
    7. '           ' → logprob: -3.4202938079833984
    8. '=' → logprob: -4.170293807983398
    9. '(line' → logprob: -4.420293807983398
    10. ' =' → logprob: -4.420293807983398

Token 686: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.004100246820598841
    2. ' line' → logprob: -5.504100322723389
    3. 'try' → logprob: -10.87909984588623
    4. '   ' → logprob: -13.37909984588623
    5. '	line' → logprob: -14.75409984588623
    6. 'l' → logprob: -14.87909984588623
    7. ' try' → logprob: -15.75409984588623
    8. '       ' → logprob: -15.87909984588623
    9. '```' → logprob: -16.379100799560547
    10. '           ' → logprob: -16.504100799560547

Token 687: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25722986459732056
    2. ' =' → logprob: -1.5072298049926758
    3. '=line' → logprob: -5.257229804992676
    4. '=sys' → logprob: -9.882229804992676
    5. 'line' → logprob: -11.257229804992676
    6. '=
' → logprob: -12.632229804992676
    7. '=input' → logprob: -13.382229804992676
    8. '.=' → logprob: -13.757229804992676
    9. '(line' → logprob: -13.882229804992676
    10. '+=' → logprob: -14.007229804992676

Token 688: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0453786738216877
    2. 'sys' → logprob: -3.2953786849975586
    3. ' input' → logprob: -5.045378684997559
    4. ' sys' → logprob: -7.045378684997559
    5. 'import' → logprob: -20.295377731323242
    6. 'stdin' → logprob: -20.295377731323242
    7. '=sys' → logprob: -20.670377731323242
    8. '=input' → logprob: -20.670377731323242
    9. '(sys' → logprob: -21.295377731323242
    10. '<input' → logprob: -22.295377731323242

Token 689: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00013786651834379882
    2. '.' → logprob: -9.250138282775879
    3. '.stdout' → logprob: -10.625138282775879
    4. '.readline' → logprob: -11.250138282775879
    5. 'stdin' → logprob: -12.875138282775879
    6. '.std' → logprob: -13.375138282775879
    7. '.argv' → logprob: -16.500137329101562
    8. '(stdin' → logprob: -16.750137329101562
    9. '.__' → logprob: -17.000137329101562
    10. '.st' → logprob: -17.750137329101562

Token 690: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -13.875000953674316
    3. ' readline' → logprob: -18.000001907348633
    4. '.readlines' → logprob: -18.375001907348633
    5. 'read' → logprob: -18.875001907348633
    6. '.read' → logprob: -19.250001907348633
    7. '```' → logprob: -20.125001907348633
    8. '.stdin' → logprob: -21.500001907348633
    9. '().' → logprob: -21.750001907348633
    10. '.buffer' → logprob: -21.875001907348633

Token 691: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14801736176013947
    2. '       ' → logprob: -2.023017406463623
    3. '<|end|>' → logprob: -6.148017406463623
    4. '<|end|>' → logprob: -6.773017406463623
    5. 'if' → logprob: -7.898017406463623
    6. '.rstrip' → logprob: -8.398016929626465
    7. '.readline' → logprob: -8.398016929626465
    8. '=' → logprob: -8.898016929626465
    9. ',' → logprob: -9.273016929626465
    10. ' if' → logprob: -9.398016929626465

Token 692: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013404916040599346
    2. 'if' → logprob: -5.013404846191406
    3. '           ' → logprob: -5.513404846191406
    4. ' if' → logprob: -6.638404846191406
    5. 'import' → logprob: -7.763404846191406
    6. '<|end|>' → logprob: -7.888404846191406
    7. '=' → logprob: -9.138404846191406
    8. '```' → logprob: -9.513404846191406
    9. ',' → logprob: -9.638404846191406
    10. '<|end|>' → logprob: -9.763404846191406

Token 693: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003996477462351322
    2. '           ' → logprob: -6.0039963722229
    3. ' if' → logprob: -6.5039963722229
    4. '       ' → logprob: -10.753996849060059
    5. 'If' → logprob: -14.378996849060059
    6. '
' → logprob: -15.753996849060059
    7. 'import' → logprob: -17.253995895385742
    8. 's' → logprob: -17.378995895385742
    9. '	if' → logprob: -18.003995895385742
    10. '   ' → logprob: -18.253995895385742

Token 694: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.044288475066423416
    2. ' not' → logprob: -4.044288635253906
    3. 'not' → logprob: -4.044288635253906
    4. ' line' → logprob: -4.794288635253906
    5. '	line' → logprob: -14.794288635253906
    6. '#line' → logprob: -15.794288635253906
    7. '(line' → logprob: -16.669288635253906
    8. ' ' → logprob: -17.419288635253906
    9. '=line' → logprob: -17.544288635253906
    10. '[line' → logprob: -17.794288635253906

Token 695: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519367039203644
    2. ' ==' → logprob: -1.501936674118042
    3. '=='' → logprob: -12.751936912536621
    4. '===' → logprob: -13.501936912536621
    5. '=' → logprob: -13.876936912536621
    6. '==
' → logprob: -14.001936912536621
    7. ')==' → logprob: -14.876936912536621
    8. '()==' → logprob: -15.376936912536621
    9. '=="' → logprob: -15.751936912536621
    10. '.strip' → logprob: -15.751936912536621

Token 696: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.002482553943991661
    2. ''' → logprob: -6.0024824142456055
    3. '""' → logprob: -13.002482414245605
    4. ' '':
' → logprob: -13.752482414245605
    5. '''
' → logprob: -13.877482414245605
    6. '"":' → logprob: -14.002482414245605
    7. ''''' → logprob: -14.252482414245605
    8. '"' → logprob: -14.502482414245605
    9. ' '' → logprob: -15.752482414245605
    10. '```' → logprob: -15.877482414245605

Token 697: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28300902247428894
    2. '           ' → logprob: -1.4080090522766113
    3. 'return' → logprob: -6.783009052276611
    4. ' return' → logprob: -7.658009052276611
    5. ':return' → logprob: -9.283008575439453
    6. '       ' → logprob: -9.408008575439453
    7. '	       ' → logprob: -11.408008575439453
    8. '   ' → logprob: -11.533008575439453
    9. ':' → logprob: -11.533008575439453
    10. '                       ' → logprob: -11.783008575439453

Token 698: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005252137780189514
    2. ' return' → logprob: -5.255252361297607
    3. '               ' → logprob: -11.75525188446045
    4. '           ' → logprob: -11.75525188446045
    5. 'break' → logprob: -13.38025188446045
    6. '       ' → logprob: -14.13025188446045
    7. '   ' → logprob: -15.63025188446045
    8. '                   ' → logprob: -16.130252838134766
    9. '	return' → logprob: -16.255252838134766
    10. '
' → logprob: -17.005252838134766

Token 699: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009257075376808643
    2. '        
' → logprob: -5.009256839752197
    3. '
' → logprob: -6.259256839752197
    4. '<|end|>' → logprob: -7.509256839752197
    5. '            
' → logprob: -11.384257316589355
    6. ',' → logprob: -11.509257316589355
    7. '        

' → logprob: -11.634257316589355
    8. '    
' → logprob: -11.634257316589355
    9. '  
' → logprob: -12.134257316589355
    10. '   ' → logprob: -12.509257316589355

Token 700: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18655981123447418
    2. '
' → logprob: -1.811559796333313
    3. '        
' → logprob: -5.061559677124023
    4. '<|end|>' → logprob: -8.061559677124023
    5. '\n' → logprob: -10.436559677124023
    6. '
' → logprob: -10.936559677124023
    7. '   ' → logprob: -11.686559677124023
    8. '    
' → logprob: -11.811559677124023
    9. '        

' → logprob: -11.811559677124023
    10. '

' → logprob: -11.936559677124023

Token 701: ' Fin' (ID: 7772)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07086227089166641
    2. 'exit' → logprob: -3.320862293243408
    3. 'break' → logprob: -4.195862293243408
    4. ' break' → logprob: -5.195862293243408
    5. 'import' → logprob: -5.320862293243408
    6. '       ' → logprob: -6.445862293243408
    7. ' #' → logprob: -6.945862293243408
    8. 'EOF' → logprob: -7.070862293243408
    9. 'quit' → logprob: -7.195862293243408
    10. ' exit' → logprob: -7.320862293243408

Token 702: ' fichier' (ID: 69637)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 703: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016332292929291725
    2. '        
' → logprob: -4.641332149505615
    3. '<|end|>' → logprob: -5.141332149505615
    4. '
' → logprob: -7.516332149505615
    5. '<|end|>' → logprob: -9.641332626342773
    6. ',' → logprob: -10.766332626342773
    7. '            
' → logprob: -11.016332626342773
    8. '        

' → logprob: -11.016332626342773
    9. '    
' → logprob: -11.891332626342773
    10. '		
' → logprob: -12.016332626342773

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025954778539016843
    2. '        
' → logprob: -9.000259399414062
    3. '<|end|>' → logprob: -9.625259399414062
    4. '
' → logprob: -10.125259399414062
    5. '   ' → logprob: -11.375259399414062
    6. ',' → logprob: -12.375259399414062
    7. '```' → logprob: -13.000259399414062
    8. '  
' → logprob: -13.125259399414062
    9. 's' → logprob: -13.125259399414062
    10. '           ' → logprob: -13.625259399414062

Token 705: ' W' (ID: 486)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01124198455363512
    2. ' parts' → logprob: -5.261241912841797
    3. 'W' (adapté à ' W') → logprob: -6.136241912841797
    4. 'n' → logprob: -6.261241912841797
    5. 'parts' → logprob: -6.886241912841797
    6. ' W' → logprob: -7.636241912841797
    7. ' n' → logprob: -9.011241912841797
    8. 'tokens' → logprob: -9.511241912841797
    9. '        
' → logprob: -10.011241912841797
    10. '   ' → logprob: -10.511241912841797

Token 706: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003685861302074045
    2. ',H' → logprob: -8.125368118286133
    3. ',W' → logprob: -10.250368118286133
    4. ',n' → logprob: -11.750368118286133
    5. ',Q' → logprob: -12.250368118286133
    6. ',s' → logprob: -12.500368118286133
    7. ' ,' → logprob: -13.000368118286133
    8. '=' → logprob: -13.000368118286133
    9. ',num' → logprob: -13.125368118286133
    10. ',y' → logprob: -13.125368118286133

Token 707: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.02324547804892063
    2. ' H' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.773244857788086
    4. ',H' → logprob: -17.023244857788086
    5. ',' → logprob: -17.898244857788086
    6. '   ' → logprob: -19.648244857788086
    7. '<|end|>' → logprob: -19.648244857788086
    8. ' 
' → logprob: -19.773244857788086
    9. '  ' → logprob: -19.773244857788086
    10. ' ' → logprob: -19.898244857788086

Token 708: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693902850151062
    2. ' =' → logprob: -2.126939058303833
    3. ',' → logprob: -11.501938819885254
    4. '=line' → logprob: -14.626938819885254
    5. '=int' → logprob: -16.37693977355957
    6. ')' → logprob: -16.37693977355957
    7. '<|end|>' → logprob: -16.37693977355957
    8. ')=' → logprob: -17.00193977355957
    9. '＝' → logprob: -17.12693977355957
    10. '=

' → logprob: -17.50193977355957

Token 709: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07889022678136826
    2. ' map' → logprob: -2.578890323638916
    3. '(map' → logprob: -15.203889846801758
    4. '	map' → logprob: -15.578889846801758
    5. '[' → logprob: -17.203889846801758
    6. '_map' → logprob: -18.078889846801758
    7. '.map' → logprob: -19.453889846801758
    8. 'm' → logprob: -20.203889846801758
    9. ' [' → logprob: -20.328889846801758
    10. 'list' → logprob: -20.328889846801758

Token 710: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.6312321753939614e-05
    2. 'int' → logprob: -10.875036239624023
    3. '(str' → logprob: -11.000036239624023
    4. '(lambda' → logprob: -15.500036239624023
    5. '[int' → logprob: -16.125036239624023
    6. '=int' → logprob: -16.250036239624023
    7. '(' → logprob: -16.250036239624023
    8. ' int' → logprob: -17.875036239624023
    9. ',int' → logprob: -18.625036239624023
    10. '<int' → logprob: -18.625036239624023

Token 711: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00011486753646750003
    2. ',line' → logprob: -9.125114440917969
    3. '(' → logprob: -13.250114440917969
    4. 'line' → logprob: -13.625114440917969
    5. '=line' → logprob: -13.750114440917969
    6. ',' → logprob: -14.000114440917969
    7. ' line' → logprob: -14.625114440917969
    8. '[line' → logprob: -15.625114440917969
    9. ')' → logprob: -15.750114440917969
    10. '#line' → logprob: -15.875114440917969

Token 712: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0007100477814674377
    2. ' line' → logprob: -7.2507100105285645
    3. '(line' → logprob: -17.250709533691406
    4. '	line' → logprob: -19.250709533691406
    5. '[line' → logprob: -19.500709533691406
    6. '#line' → logprob: -20.375709533691406
    7. '=line' → logprob: -21.000709533691406
    8. '_line' → logprob: -21.750709533691406
    9. '   ' → logprob: -21.875709533691406
    10. ')' → logprob: -22.500709533691406

Token 713: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.318204790353775
    2. '.strip' → logprob: -1.3182047605514526
    3. '.split' → logprob: -5.318204879760742
    4. '.' → logprob: -11.818204879760742
    5. '.readline' → logprob: -11.943204879760742
    6. '.rstrip' → logprob: -12.068204879760742
    7. 'strip' → logprob: -12.443204879760742
    8. ' .' → logprob: -12.693204879760742
    9. '(strip' → logprob: -13.693204879760742
    10. 'split' → logprob: -13.818204879760742

Token 714: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '.split' → logprob: -15.125
    3. '()' → logprob: -15.625
    4. 'split' → logprob: -19.375
    5. ' ().' → logprob: -20.125
    6. '(' → logprob: -20.375
    7. '()
' → logprob: -21.625
    8. '   ' → logprob: -22.0
    9. '()[' → logprob: -22.875
    10. '('').' → logprob: -23.75

Token 715: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. '(split' → logprob: -15.125000953674316
    3. ')' → logprob: -16.25
    4. '.split' → logprob: -17.0
    5. 'spl' → logprob: -17.875
    6. ' split' → logprob: -18.125
    7. ').' → logprob: -19.0
    8. '().' → logprob: -19.125
    9. '```' → logprob: -19.875
    10. 's' → logprob: -20.0

Token 716: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0014113049255684018
    2. '()' → logprob: -6.626411437988281
    3. '('' → logprob: -10.251411437988281
    4. ')' → logprob: -10.501411437988281
    5. '(' → logprob: -11.501411437988281
    6. '())
' → logprob: -11.626411437988281
    7. '(','' → logprob: -13.251411437988281
    8. '()))' → logprob: -14.251411437988281
    9. ' ())' → logprob: -14.376411437988281
    10. '())

' → logprob: -15.876411437988281

Token 717: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2375466376543045
    2. 'if' → logprob: -1.612546682357788
    3. 'floor' → logprob: -4.612546443939209
    4. ' if' → logprob: -6.737546443939209
    5. '```' → logprob: -7.487546443939209
    6. '   ' → logprob: -7.987546443939209
    7. '``' → logprob: -11.362546920776367
    8. ' floor' → logprob: -11.487546920776367
    9. '        
' → logprob: -11.737546920776367
    10. 'flo' → logprob: -12.112546920776367

Token 718: ' if' (ID: 538)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.0551307313144207
    2. 'if' (adapté à ' if') → logprob: -2.93013072013855
    3. ' floor' → logprob: -8.805130958557129
    4. ' if' → logprob: -9.430130958557129
    5. 'flo' → logprob: -11.680130958557129
    6. '   ' → logprob: -12.680130958557129
    7. '       ' → logprob: -12.805130958557129
    8. '```' → logprob: -13.555130958557129
    9. '#' → logprob: -14.305130958557129
    10. '.floor' → logprob: -14.680130958557129

Token 719: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0019300628919154406
    2. ' W' → logprob: -6.251930236816406
    3. '(W' → logprob: -13.751930236816406
    4. '(' → logprob: -14.876930236816406
    5. ' (' → logprob: -16.876930236816406
    6. '	W' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.501930236816406
    8. ' ' → logprob: -18.251930236816406
    9. '[' → logprob: -18.501930236816406
    10. '   ' → logprob: -19.501930236816406

Token 720: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759470462799072
    2. '==' → logprob: -0.8259470462799072
    3. '()==' → logprob: -13.450946807861328
    4. '=' → logprob: -13.700946807861328
    5. ')==' → logprob: -13.825946807861328
    6. ' ' → logprob: -13.825946807861328
    7. '0' → logprob: -14.075946807861328
    8. ']==' → logprob: -14.575946807861328
    9. '<=' → logprob: -14.575946807861328
    10. '===' → logprob: -14.700946807861328

Token 721: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. 'H' → logprob: -18.000553131103516
    4. ' H' → logprob: -19.375553131103516
    5. '```' → logprob: -20.125553131103516
    6. '۰' → logprob: -21.000553131103516
    7. ' ' → logprob: -21.375553131103516
    8. '  ' → logprob: -21.375553131103516
    9. '
' → logprob: -21.500553131103516
    10. '-' → logprob: -22.000553131103516

Token 722: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.2378600735682994e-05
    2. ' ' → logprob: -10.375032424926758
    3. 'H' → logprob: -13.750032424926758
    4. '-' → logprob: -16.500032424926758
    5. '```' → logprob: -17.250032424926758
    6. ' H' → logprob: -17.625032424926758
    7. '۰' → logprob: -19.375032424926758
    8. '``' → logprob: -19.875032424926758
    9. ' -' → logprob: -20.125032424926758
    10. '０' → logprob: -20.437532424926758

Token 723: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519311308860779
    2. 'and' → logprob: -1.5019311904907227
    3. ' ' → logprob: -13.251931190490723
    4. '	and' → logprob: -16.376930236816406
    5. ' и' → logprob: -17.126930236816406
    6. 'a' → logprob: -17.251930236816406
    7. '<|end|>' → logprob: -17.251930236816406
    8. ' or' → logprob: -17.751930236816406
    9. '  ' → logprob: -18.001930236816406
    10. ' ' → logprob: -18.001930236816406

Token 724: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0024756586644798517
    2. ' H' → logprob: -6.002475738525391
    3. ' ' → logprob: -19.25247573852539
    4. '   ' → logprob: -19.75247573852539
    5. '	H' → logprob: -21.00247573852539
    6. '  ' → logprob: -21.50247573852539
    7. ' ' → logprob: -22.25247573852539
    8. '       ' → logprob: -24.37747573852539
    9. '_H' → logprob: -25.12747573852539
    10. '0' → logprob: -25.12747573852539

Token 725: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07050139456987381
    2. ' ==' → logprob: -2.6955013275146484
    3. '=' → logprob: -8.070501327514648
    4. '0' → logprob: -8.945501327514648
    5. '<|end|>' → logprob: -9.570501327514648
    6. ')==' → logprob: -10.945501327514648
    7. ' ' → logprob: -12.070501327514648
    8. '==
' → logprob: -12.070501327514648
    9. ']==' → logprob: -12.195501327514648
    10. ' =' → logprob: -12.195501327514648

Token 726: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '<|end|>' → logprob: -19.250045776367188
    4. '   ' → logprob: -21.125045776367188
    5. '۰' → logprob: -21.500045776367188
    6. '  ' → logprob: -22.375045776367188
    7. '<|end|>' → logprob: -23.125045776367188
    8. '=' → logprob: -23.125045776367188
    9. '```' → logprob: -23.250045776367188
    10. '       ' → logprob: -23.375045776367188

Token 727: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -18.625003814697266
    4. '۰' → logprob: -19.625003814697266
    5. 'import' → logprob: -20.500003814697266
    6. '<|end|>' → logprob: -20.875003814697266
    7. '=' → logprob: -21.125003814697266
    8. '   ' → logprob: -21.375003814697266
    9. '```' → logprob: -21.375003814697266
    10. '  ' → logprob: -21.875003814697266

Token 728: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3134811222553253
    2. ':
' → logprob: -1.313481092453003
    3. ':return' → logprob: -8.688481330871582
    4. '       ' → logprob: -10.813481330871582
    5. '   ' → logprob: -10.813481330871582
    6. ':
' → logprob: -11.938481330871582
    7. '           ' → logprob: -13.688481330871582
    8. '):
' → logprob: -13.938481330871582
    9. ' :
' → logprob: -14.813481330871582
    10. '():
' → logprob: -14.938481330871582

Token 729: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003221206832677126
    2. '       ' → logprob: -5.753221035003662
    3. '   ' → logprob: -11.12822151184082
    4. '		' → logprob: -11.37822151184082
    5. '	       ' → logprob: -11.87822151184082
    6. '          ' → logprob: -13.12822151184082
    7. ' break' → logprob: -13.25322151184082
    8. 'break' → logprob: -13.62822151184082
    9. '               ' → logprob: -14.00322151184082
    10. 'return' → logprob: -14.12822151184082

Token 730: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.43847066164016724
    2. 'break' (adapté à ' break') → logprob: -1.6884706020355225
    3. ' return' → logprob: -2.4384706020355225
    4. ' break' → logprob: -2.6884706020355225
    5. '       ' → logprob: -4.438470840454102
    6. '           ' → logprob: -5.813470840454102
    7. '	break' → logprob: -9.813470840454102
    8. '               ' → logprob: -11.063470840454102
    9. '	return' → logprob: -11.313470840454102
    10. '   ' → logprob: -11.813470840454102

Token 731: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03607174754142761
    2. 'floor' → logprob: -3.53607177734375
    3. '   ' → logprob: -5.53607177734375
    4. '```' → logprob: -6.28607177734375
    5. '        
' → logprob: -8.91107177734375
    6. '
' → logprob: -8.91107177734375
    7. ' floor' → logprob: -9.41107177734375
    8. 'flo' → logprob: -9.78607177734375
    9. 'n' → logprob: -11.16107177734375
    10. '<|end|>' → logprob: -11.16107177734375

Token 732: '       ' (ID: 309)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.12675757706165314
    2. '       ' → logprob: -2.3767576217651367
    3. '```' → logprob: -4.126757621765137
    4. ' floor' → logprob: -5.001757621765137
    5. '   ' → logprob: -6.001757621765137
    6. '
' → logprob: -8.501757621765137
    7. '``' → logprob: -8.751757621765137
    8. 'f' → logprob: -9.376757621765137
    9. '.floor' → logprob: -9.501757621765137
    10. '        
' → logprob: -9.501757621765137

Token 733: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' (adapté à ' floor') → logprob: -4.191489642835222e-05
    2. '       ' → logprob: -10.750041961669922
    3. ' floor' → logprob: -11.000041961669922
    4. '```' → logprob: -13.250041961669922
    5. 'flo' → logprob: -13.875041961669922
    6. 'scr' → logprob: -15.000041961669922
    7. '   ' → logprob: -15.625041961669922
    8. 'car' → logprob: -15.750041961669922
    9. '_floor' → logprob: -16.375041961669922
    10. 'n' → logprob: -16.625041961669922

Token 734: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164566993713379
    2. '=' → logprob: -4.264164447784424
    3. ',' → logprob: -15.139164924621582
    4. ' =[' → logprob: -15.389164924621582
    5. ' =
' → logprob: -15.889164924621582
    6. ' ' → logprob: -15.889164924621582
    7. '[' → logprob: -16.139163970947266
    8. '=[]' → logprob: -16.264163970947266
    9. '=[]
' → logprob: -17.014163970947266
    10. ')' → logprob: -17.014163970947266

Token 735: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5201885104179382
    2. '[[' → logprob: -1.020188570022583
    3. ' [' → logprob: -3.270188570022583
    4. ' [[' → logprob: -5.020188331604004
    5. '[]' → logprob: -8.520188331604004
    6. '[
' → logprob: -9.645188331604004
    7. '[]
' → logprob: -9.770188331604004
    8. '[['' → logprob: -9.770188331604004
    9. '[int' → logprob: -11.145188331604004
    10. '[s' → logprob: -11.645188331604004

Token 736: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004158953088335693
    2. 'for' → logprob: -8.000415802001953
    3. ' for' → logprob: -9.500415802001953
    4. '   ' → logprob: -12.250415802001953
    5. '           ' → logprob: -15.625415802001953
    6. '<|end|>' → logprob: -15.750415802001953
    7. '```' → logprob: -15.750415802001953
    8. '	' → logprob: -16.125415802001953
    9. '	for' → logprob: -16.250415802001953
    10. '	   ' → logprob: -16.625415802001953

Token 737: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10041649639606476
    2. '       ' → logprob: -2.600416421890259
    3. ' for' → logprob: -3.850416421890259
    4. '   ' → logprob: -10.97541618347168
    5. '	for' → logprob: -11.97541618347168
    6. '```' → logprob: -13.60041618347168
    7. '           ' → logprob: -14.60041618347168
    8. '
' → logprob: -15.22541618347168
    9. '	' → logprob: -16.35041618347168
    10. ' ' → logprob: -16.35041618347168

Token 738: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003208372974768281
    2. ' _' → logprob: -5.753208160400391
    3. '_i' → logprob: -10.87820816040039
    4. '_H' → logprob: -11.50320816040039
    5. '_h' → logprob: -13.87820816040039
    6. '_in' → logprob: -14.62820816040039
    7. '_y' → logprob: -15.87820816040039
    8. ' i' → logprob: -16.50320816040039
    9. '_j' → logprob: -17.12820816040039
    10. '_range' → logprob: -17.12820816040039

Token 739: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017107593594118953
    2. 'in' → logprob: -6.376710891723633
    3. 'range' → logprob: -12.376710891723633
    4. '_' → logprob: -13.001710891723633
    5. ' _' → logprob: -14.001710891723633
    6. ' ' → logprob: -14.376710891723633
    7. ' range' → logprob: -14.876710891723633
    8. 'i' → logprob: -15.126710891723633
    9. ' i' → logprob: -17.126710891723633
    10. '  ' → logprob: -18.251710891723633

Token 740: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '	range' → logprob: -18.375059127807617
    4. '(range' → logprob: -19.875059127807617
    5. '_range' → logprob: -21.250059127807617
    6. '.range' → logprob: -21.750059127807617
    7. '_' → logprob: -22.625059127807617
    8. 'Range' → logprob: -23.375059127807617
    9. 'in' → logprob: -23.500059127807617
    10. 'rang' → logprob: -24.000059127807617

Token 741: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0008048642775975168
    2. 'H' → logprob: -7.125804901123047
    3. ' H' → logprob: -15.625804901123047
    4. ' (' → logprob: -16.250804901123047
    5. '	H' → logprob: -16.625804901123047
    6. '(' → logprob: -17.500804901123047
    7. '   ' → logprob: -17.500804901123047
    8. 'HBox' → logprob: -18.625804901123047
    9. '<H' → logprob: -19.500804901123047
    10. ')' → logprob: -19.500804901123047

Token 742: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006795424502342939
    2. '):' → logprob: -5.006795406341553
    3. '):
' → logprob: -10.131795883178711
    4. ':
' → logprob: -10.631795883178711
    5. '       ' → logprob: -12.256795883178711
    6. '():
' → logprob: -12.631795883178711
    7. ':' → logprob: -12.881795883178711
    8. '           ' → logprob: -13.256795883178711
    9. '   ' → logprob: -13.381795883178711
    10. ')' → logprob: -14.006795883178711

Token 743: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028807099908590317
    2. '   ' → logprob: -3.7788071632385254
    3. ' line' → logprob: -5.528807163238525
    4. '```' → logprob: -7.028807163238525
    5. 'line' → logprob: -8.778806686401367
    6. '	   ' → logprob: -9.653806686401367
    7. '	       ' → logprob: -9.778806686401367
    8. 'floor' → logprob: -9.778806686401367
    9. '	line' → logprob: -10.028806686401367
    10. ' floor' → logprob: -10.028806686401367

Token 744: ' row' (ID: 5225)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.3662542700767517
    2. ' floor' → logprob: -1.9912543296813965
    3. 'row' (adapté à ' row') → logprob: -2.4912543296813965
    4. 'line' → logprob: -3.2412543296813965
    5. ' row' → logprob: -3.2412543296813965
    6. ' line' → logprob: -4.7412543296813965
    7. '           ' → logprob: -8.241253852844238
    8. '   ' → logprob: -10.366253852844238
    9. 'flo' → logprob: -10.866253852844238
    10. 'ligne' → logprob: -11.116253852844238

Token 745: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142453908920288
    2. '=' → logprob: -1.7014245986938477
    3. '=line' → logprob: -12.076424598693848
    4. '   ' → logprob: -13.326424598693848
    5. '           ' → logprob: -13.951424598693848
    6. '    ' → logprob: -14.576424598693848
    7. '            ' → logprob: -14.826424598693848
    8. '=
' → logprob: -15.451424598693848
    9. '=[]' → logprob: -15.451424598693848
    10. ' ' → logprob: -15.451424598693848

Token 746: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0005530327325686812
    2. ' list' → logprob: -7.500553131103516
    3. '[list' → logprob: -19.875553131103516
    4. '	list' → logprob: -21.750553131103516
    5. '=list' → logprob: -23.000553131103516
    6. '[' → logprob: -23.750553131103516
    7. '   ' → logprob: -24.000553131103516
    8. '.list' → logprob: -24.250553131103516
    9. 'List' → logprob: -24.375553131103516
    10. ':list' → logprob: -24.500553131103516

Token 747: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.65707261255011e-06
    2. 'map' → logprob: -11.750008583068848
    3. '(' → logprob: -14.375008583068848
    4. '(int' → logprob: -16.125009536743164
    5. '.map' → logprob: -18.375009536743164
    6. ',map' → logprob: -18.625009536743164
    7. '	map' → logprob: -19.375009536743164
    8. ' map' → logprob: -19.875009536743164
    9. '()' → logprob: -20.000009536743164
    10. '(
' → logprob: -20.125009536743164

Token 748: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00020687808864749968
    2. 'int' → logprob: -8.50020694732666
    3. '(lambda' → logprob: -13.50020694732666
    4. ',int' → logprob: -14.25020694732666
    5. '[int' → logprob: -14.62520694732666
    6. '(' → logprob: -15.25020694732666
    7. '=int' → logprob: -15.62520694732666
    8. ' int' → logprob: -15.87520694732666
    9. '<int' → logprob: -16.000205993652344
    10. ']int' → logprob: -16.500205993652344

Token 749: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.20319688320159912
    2. ',' → logprob: -1.7031968832015991
    3. 'sys' → logprob: -6.578197002410889
    4. ',input' → logprob: -8.32819652557373
    5. '=sys' → logprob: -9.82819652557373
    6. '(' → logprob: -9.95319652557373
    7. '(input' → logprob: -11.07819652557373
    8. '	sys' → logprob: -11.45319652557373
    9. ' sys' → logprob: -11.95319652557373
    10. ',
' → logprob: -12.57819652557373

Token 750: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.56102097814437e-05
    2. ' sys' → logprob: -10.000045776367188
    3. 'input' → logprob: -16.125045776367188
    4. '(sys' → logprob: -16.625045776367188
    5. '	sys' → logprob: -19.000045776367188
    6. '=sys' → logprob: -19.625045776367188
    7. 'Sys' → logprob: -20.625045776367188
    8. 'lambda' → logprob: -21.500045776367188
    9. 'stdin' → logprob: -21.875045776367188
    10. '.sys' → logprob: -22.250045776367188

Token 751: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.941850526549388e-06
    2. 'stdin' → logprob: -11.750007629394531
    3. '.stdout' → logprob: -17.62500762939453
    4. '.argv' → logprob: -18.12500762939453
    5. '(stdin' → logprob: -18.25000762939453
    6. '.readline' → logprob: -18.50000762939453
    7. ' stdin' → logprob: -19.25000762939453
    8. '.' → logprob: -19.50000762939453
    9. '.std' → logprob: -20.37500762939453
    10. '   ' → logprob: -20.62500762939453

Token 752: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.3902033970225602e-05
    2. '().' → logprob: -11.500014305114746
    3. '.' → logprob: -13.125014305114746
    4. '.stdin' → logprob: -13.500014305114746
    5. '.readlines' → logprob: -15.625014305114746
    6. '=sys' → logprob: -16.50001335144043
    7. '.read' → logprob: -17.12501335144043
    8. 'sys' → logprob: -17.62501335144043
    9. ' readline' → logprob: -18.75001335144043
    10. '(sys' → logprob: -19.12501335144043

Token 753: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '.readline' → logprob: -13.00000286102295
    3. '.strip' → logprob: -15.37500286102295
    4. '()' → logprob: -15.75000286102295
    5. '(' → logprob: -17.625001907348633
    6. '()[' → logprob: -18.125001907348633
    7. ' ().' → logprob: -18.250001907348633
    8. '(line' → logprob: -19.125001907348633
    9. '#line' → logprob: -19.500001907348633
    10. '()
' → logprob: -20.000001907348633

Token 754: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0004473540757317096
    2. 'split' → logprob: -7.7504472732543945
    3. 'rstrip' → logprob: -11.375447273254395
    4. 'read' → logprob: -12.750447273254395
    5. ' strip' → logprob: -13.125447273254395
    6. '.strip' → logprob: -16.12544822692871
    7. '(strip' → logprob: -17.00044822692871
    8. '-strip' → logprob: -19.00044822692871
    9. '.readline' → logprob: -19.00044822692871
    10. 'decode' → logprob: -19.50044822692871

Token 755: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -15.75
    3. ' ().' → logprob: -17.75
    4. '.split' → logprob: -18.875
    5. '()))' → logprob: -19.375
    6. '.' → logprob: -20.5
    7. '   ' → logprob: -20.75
    8. 'split' → logprob: -20.75
    9. '(' → logprob: -21.625
    10. '(),' → logprob: -22.25

Token 756: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -14.75
    3. '.split' → logprob: -18.75
    4. '(split' → logprob: -18.875
    5. 'spl' → logprob: -20.875
    6. 'rstrip' → logprob: -23.0
    7. '_split' → logprob: -23.125
    8. 'strip' → logprob: -24.125
    9. 's' → logprob: -25.375
    10. 'replace' → logprob: -25.75

Token 757: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.016074256971478462
    2. '))' → logprob: -4.266074180603027
    3. '()' → logprob: -6.641074180603027
    4. '()))
' → logprob: -7.516074180603027
    5. '(' → logprob: -10.016074180603027
    6. '()));' → logprob: -12.016074180603027
    7. '())' → logprob: -12.266074180603027
    8. '()))
' → logprob: -13.766074180603027
    9. '))
' → logprob: -14.391074180603027
    10. '()))

' → logprob: -14.641074180603027

Token 758: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017622781917452812
    2. 'floor' → logprob: -4.142622947692871
    3. '       ' → logprob: -6.767622947692871
    4. ' floor' → logprob: -8.267622947692871
    5. '<|end|>' → logprob: -9.767622947692871
    6. '.floor' → logprob: -10.642622947692871
    7. '   ' → logprob: -11.017622947692871
    8. ')' → logprob: -11.017622947692871
    9. '		' → logprob: -11.642622947692871
    10. 'flo' → logprob: -11.767622947692871

Token 759: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' (adapté à ' floor') → logprob: -4.751746746478602e-05
    2. '       ' → logprob: -10.25004768371582
    3. ' floor' → logprob: -11.37504768371582
    4. '           ' → logprob: -14.75004768371582
    5. 'flo' → logprob: -16.12504768371582
    6. '   ' → logprob: -17.62504768371582
    7. '.floor' → logprob: -18.00004768371582
    8. 'for' → logprob: -18.12504768371582
    9. '_floor' → logprob: -18.37504768371582
    10. '```' → logprob: -18.75004768371582

Token 760: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000206401280593127
    2. '.' → logprob: -8.500205993652344
    3. '.app' → logprob: -13.750205993652344
    4. 'append' → logprob: -14.625205993652344
    5. '.extend' → logprob: -14.750205993652344
    6. '<|end|>' → logprob: -15.000205993652344
    7. ' .' → logprob: -15.500205993652344
    8. '.ap' → logprob: -16.000205993652344
    9. '.setdefault' → logprob: -16.125205993652344
    10. '.Append' → logprob: -16.375205993652344

Token 761: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -4.572941179503687e-05
    2. 'row' → logprob: -10.000045776367188
    3. '(' → logprob: -15.375045776367188
    4. '(list' → logprob: -18.250045776367188
    5. ' row' → logprob: -18.750045776367188
    6. '(
' → logprob: -19.000045776367188
    7. ',row' → logprob: -19.250045776367188
    8. '=row' → logprob: -19.750045776367188
    9. '[row' → logprob: -20.000045776367188
    10. '	row' → logprob: -21.250045776367188

Token 762: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.93448489275761e-05
    2. '       ' → logprob: -9.625079154968262
    3. ')
' → logprob: -11.250079154968262
    4. '   ' → logprob: -16.000080108642578
    5. '))' → logprob: -17.000080108642578
    6. ' )' → logprob: -17.000080108642578
    7. '<|end|>' → logprob: -17.375080108642578
    8. ')

' → logprob: -17.625080108642578
    9. '())' → logprob: -18.250080108642578
    10. ')}' → logprob: -18.500080108642578

Token 763: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16630412638187408
    2. 'best' → logprob: -2.166304111480713
    3. ' best' → logprob: -3.291304111480713
    4. '	best' → logprob: -7.041304111480713
    5. '       ' → logprob: -8.041304588317871
    6. '```' → logprob: -8.916304588317871
    7. '
' → logprob: -10.416304588317871
    8. '(best' → logprob: -10.541304588317871
    9. '_best' → logprob: -11.791304588317871
    10. ' ' → logprob: -12.666304588317871

Token 764: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -6.170270353322849e-05
    2. ' best' → logprob: -9.750061988830566
    3. '       ' → logprob: -12.750061988830566
    4. '```' → logprob: -15.500061988830566
    5. '	best' → logprob: -16.12506103515625
    6. '
' → logprob: -16.25006103515625
    7. '   ' → logprob: -16.75006103515625
    8. '(best' → logprob: -18.62506103515625
    9. '_best' → logprob: -18.87506103515625
    10. '.best' → logprob: -19.87506103515625

Token 765: ' Recherche' (ID: 114815)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00012892624363303185
    2. ' best' → logprob: -9.125128746032715
    3. '       ' → logprob: -11.000128746032715
    4. '   ' → logprob: -13.250128746032715
    5. 'max' → logprob: -14.375128746032715
    6. 'import' → logprob: -15.500128746032715
    7. '	best' → logprob: -15.875128746032715
    8. '```' → logprob: -16.00012969970703
    9. '#' → logprob: -16.12512969970703
    10. '
' → logprob: -16.25012969970703

Token 766: ' solution' (ID: 7578)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.2358350157737732
    2. '       ' → logprob: -1.860835075378418
    3. ' best' → logprob: -3.110835075378418
    4. '   ' → logprob: -4.735835075378418
    5. '	best' → logprob: -7.735835075378418
    6. '```' → logprob: -8.110835075378418
    7. '
' → logprob: -9.110835075378418
    8. '_best' → logprob: -9.360835075378418
    9. 'for' → logprob: -9.610835075378418
    10. '(best' → logprob: -9.985835075378418

Token 767: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6330137252807617
    2. 'best' → logprob: -1.6330137252807617
    3. ' best' → logprob: -1.7580137252807617
    4. '   ' → logprob: -2.5080137252807617
    5. '(best' → logprob: -4.758013725280762
    6. '
' → logprob: -5.258013725280762
    7. '	best' → logprob: -5.258013725280762
    8. '```' → logprob: -8.133013725280762
    9. '_best' → logprob: -8.508013725280762
    10. '        
' → logprob: -8.883013725280762

Token 768: ' back' (ID: 1602)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.10738957673311234
    2. 'best' → logprob: -2.7323896884918213
    3. ' dfs' → logprob: -3.4823896884918213
    4. 'me' → logprob: -5.857389450073242
    5. ' best' → logprob: -6.232389450073242
    6. 'def' → logprob: -7.982389450073242
    7. 'DFS' → logprob: -8.857389450073242
    8. 'import' → logprob: -9.357389450073242
    9. '[' → logprob: -9.607389450073242
    10. ' DFS' → logprob: -9.732389450073242

Token 769: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.002295255661010742
    2. 'track' → logprob: -6.25229549407959
    3. '   ' → logprob: -8.00229549407959
    4. '       ' → logprob: -10.87729549407959
    5. 'tracker' → logprob: -12.00229549407959
    6. 'tr' → logprob: -12.62729549407959
    7. 'tract' → logprob: -13.50229549407959
    8. 'tracked' → logprob: -14.12729549407959
    9. '_tracking' → logprob: -14.62729549407959
    10. 't' → logprob: -14.87729549407959

Token 770: ' DFS' (ID: 115767)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.240759015083313
    2. 'best' → logprob: -2.4907588958740234
    3. ' best' → logprob: -2.7407588958740234
    4. '   ' → logprob: -2.8657588958740234
    5. '
' → logprob: -4.740758895874023
    6. '	best' → logprob: -7.240758895874023
    7. '```' → logprob: -9.240758895874023
    8. '(best' → logprob: -9.740758895874023
    9. '_best' → logprob: -10.990758895874023
    10. '        
' → logprob: -11.240758895874023

Token 771: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028765516355633736
    2. '   ' → logprob: -3.9037654399871826
    3. '
' → logprob: -5.903765678405762
    4. 'best' → logprob: -5.903765678405762
    5. ' best' → logprob: -6.278765678405762
    6. '	best' → logprob: -8.153765678405762
    7. '        
' → logprob: -8.528765678405762
    8. '(best' → logprob: -8.653765678405762
    9. '```' → logprob: -9.528765678405762
    10. '  
' → logprob: -10.403765678405762

Token 772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07354569435119629
    2. '   ' → logprob: -2.6985456943511963
    3. ' best' → logprob: -5.948545455932617
    4. 'best' → logprob: -7.198545455932617
    5. '	best' → logprob: -9.448545455932617
    6. '
' → logprob: -9.948545455932617
    7. '```' → logprob: -10.323545455932617
    8. '        
' → logprob: -10.448545455932617
    9. '(best' → logprob: -11.573545455932617
    10. '    
' → logprob: -11.823545455932617

Token 773: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.01110689528286457
    2. ' best' → logprob: -4.511106967926025
    3. '       ' → logprob: -10.136106491088867
    4. '	best' → logprob: -11.511106491088867
    5. '   ' → logprob: -12.511106491088867
    6. '
' → logprob: -12.636106491088867
    7. '```' → logprob: -13.386106491088867
    8. '(best' → logprob: -14.511106491088867
    9. '_best' → logprob: -15.636106491088867
    10. '.best' → logprob: -16.261106491088867

Token 774: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027579771354794502
    2. '=' → logprob: -3.7775797843933105
    3. '[' → logprob: -5.7775797843933105
    4. '=[' → logprob: -6.7775797843933105
    5. ' =[' → logprob: -9.652579307556152
    6. '<|end|>' → logprob: -11.527579307556152
    7. ',' → logprob: -12.027579307556152
    8. '   ' → logprob: -12.277579307556152
    9. '<|end|>' → logprob: -13.777579307556152
    10. '```' → logprob: -14.527579307556152

Token 775: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.2378600735682994e-05
    2. ' [' → logprob: -10.625032424926758
    3. '[len' → logprob: -13.000032424926758
    4. '[b' → logprob: -13.625032424926758
    5. '[int' → logprob: -13.875032424926758
    6. '[min' → logprob: -14.125032424926758
    7. '[list' → logprob: -14.375032424926758
    8. '[value' → logprob: -14.875032424926758
    9. '[max' → logprob: -14.875032424926758
    10. '[result' → logprob: -15.625032424926758

Token 776: 'W' (ID: 54)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.34346848726272583
    2. 'W' → logprob: -1.468468427658081
    3. '10' → logprob: -3.343468427658081
    4. 'H' → logprob: -4.71846866607666
    5. '100' → logprob: -4.96846866607666
    6. 'sys' → logprob: -5.46846866607666
    7. 'sum' → logprob: -5.59346866607666
    8. '101' → logprob: -8.21846866607666
    9. '999' → logprob: -8.21846866607666
    10. 'int' → logprob: -8.59346866607666

Token 777: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.001191298826597631
    2. ' *' → logprob: -6.751191139221191
    3. 'H' → logprob: -11.126191139221191
    4. '+' → logprob: -12.251191139221191
    5. ']' → logprob: -14.126191139221191
    6. '**' → logprob: -15.001191139221191
    7. ']*' → logprob: -16.626192092895508
    8. 'W' → logprob: -16.876192092895508
    9. '*h' → logprob: -16.876192092895508
    10. '_H' → logprob: -17.001192092895508

Token 778: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.069664333248511e-05
    2. ' H' → logprob: -10.875020980834961
    3. '*' → logprob: -14.000020980834961
    4. ' ' → logprob: -14.125020980834961
    5. '   ' → logprob: -16.25002098083496
    6. '
' → logprob: -17.37502098083496
    7. '  ' → logprob: -17.87502098083496
    8. '    ' → logprob: -18.50002098083496
    9. ' *' → logprob: -19.12502098083496
    10. '           ' → logprob: -19.25002098083496

Token 779: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045087698847055435
    2. '+' → logprob: -3.6700878143310547
    3. ' +' → logprob: -4.170087814331055
    4. ']
' → logprob: -5.795087814331055
    5. ' ]' → logprob: -9.295087814331055
    6. ']

' → logprob: -11.670087814331055
    7. '+]' → logprob: -12.045087814331055
    8. '   ' → logprob: -12.670087814331055
    9. ']
' → logprob: -13.670087814331055
    10. ')' → logprob: -13.670087814331055

Token 780: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5171123147010803
    2. '   ' → logprob: -1.2671122550964355
    3. '
' → logprob: -2.1421122550964355
    4. '<|end|>' → logprob: -6.3921122550964355
    5. ',' → logprob: -6.8921122550964355
    6. '        
' → logprob: -8.017112731933594
    7. ')' → logprob: -8.392112731933594
    8. '    
' → logprob: -8.517112731933594
    9. ',d' → logprob: -8.642112731933594
    10. ' ' → logprob: -8.892112731933594

Token 781: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02803286910057068
    2. '   ' → logprob: -3.6530327796936035
    3. '
' → logprob: -7.6530327796936035
    4. ')
' → logprob: -7.9030327796936035
    5. '    
' → logprob: -8.278033256530762
    6. '  
' → logprob: -8.653033256530762
    7. 'dfs' → logprob: -9.028033256530762
    8. ')' → logprob: -9.653033256530762
    9. '#' → logprob: -9.903033256530762
    10. ' 
' → logprob: -10.028033256530762

Token 782: ' meilleure' (ID: 52387)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0640895888209343
    2. ' dfs' → logprob: -2.81408953666687
    3. '
' → logprob: -6.564089775085449
    4. '       ' → logprob: -8.18908977508545
    5. '   ' → logprob: -8.43908977508545
    6. 'best' → logprob: -9.18908977508545
    7. '
' → logprob: -10.81408977508545
    8. '        
' → logprob: -10.93908977508545
    9. '0' → logprob: -11.06408977508545
    10. '#' → logprob: -11.18908977508545

Token 783: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.04589034616947174
    2. ' solution' → logprob: -3.2958903312683105
    3. '[' → logprob: -5.6708903312683105
    4. 'score' → logprob: -6.7958903312683105
    5. 'possible' → logprob: -6.9208903312683105
    6. 'ré' → logprob: -7.0458903312683105
    7. 'answer' → logprob: -7.9208903312683105
    8. ' réponse' → logprob: -8.420890808105469
    9. '_solution' → logprob: -8.795890808105469
    10. '#' → logprob: -8.795890808105469

Token 784: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18122871220111847
    2. '   ' → logprob: -1.806228756904602
    3. '
' → logprob: -7.0562286376953125
    4. 'dfs' → logprob: -8.806228637695312
    5. '<|end|>' → logprob: -9.181228637695312
    6. ' dfs' → logprob: -9.556228637695312
    7. '```' → logprob: -9.681228637695312
    8. '        
' → logprob: -9.806228637695312
    9. ',' → logprob: -9.931228637695312
    10. '  ' → logprob: -10.431228637695312

Token 785: 'min' (ID: 1493)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.0394903421401978
    2. 'float' → logprob: -1.9144903421401978
    3. ')' → logprob: -2.039490222930908
    4. '])' → logprob: -2.664490222930908
    5. '0' → logprob: -2.789490222930908
    6. '[' → logprob: -2.914490222930908
    7. 'initial' → logprob: -3.414490222930908
    8. 'possible' → logprob: -3.539490222930908
    9. 'sys' → logprob: -3.789490222930908
    10. ']' → logprob: -3.789490222930908

Token 786: ' tapis' (ID: 131304)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.054789423942566
    2. ')' → logprob: -1.304789423942566
    3. 'imum' → logprob: -1.304789423942566
    4. '=' → logprob: -3.1797895431518555
    5. ']' → logprob: -3.4297895431518555
    6. '_possible' → logprob: -5.0547895431518555
    7. '_tokens' → logprob: -5.5547895431518555
    8. 'possible' → logprob: -5.6797895431518555
    9. ' possible' → logprob: -5.6797895431518555
    10. '[' → logprob: -6.3047895431518555

Token 787: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014613312669098377
    2. ')
' → logprob: -4.639613151550293
    3. '])' → logprob: -6.264613151550293
    4. ']' → logprob: -6.639613151550293
    5. ')]' → logprob: -7.139613151550293
    6. 'used' → logprob: -8.514613151550293
    7. '   ' → logprob: -8.764613151550293
    8. 's' → logprob: -9.764613151550293
    9. ' used' → logprob: -10.014613151550293
    10. '[' → logprob: -10.139613151550293

Token 788: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027348848059773445
    2. '   ' → logprob: -3.652348756790161
    3. 'dfs' → logprob: -7.40234899520874
    4. ' dfs' → logprob: -8.652348518371582
    5. '
' → logprob: -9.777348518371582
    6. '        
' → logprob: -9.902348518371582
    7. '```' → logprob: -9.902348518371582
    8. '<|end|>' → logprob: -10.277348518371582
    9. '           ' → logprob: -11.277348518371582
    10. '  ' → logprob: -11.277348518371582

Token 789: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.10791344940662384
    2. ' dfs' → logprob: -2.4829134941101074
    3. '   ' → logprob: -3.9829134941101074
    4. 'df' → logprob: -9.35791301727295
    5. '```' → logprob: -11.10791301727295
    6. '       ' → logprob: -11.23291301727295
    7. '
' → logprob: -11.23291301727295
    8. 'd' → logprob: -11.48291301727295
    9. 'dfa' → logprob: -12.10791301727295
    10. 'DFS' → logprob: -12.60791301727295

Token 790: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.981667537620524e-06
    2. 'floor' → logprob: -13.500001907348633
    3. '(' → logprob: -14.500001907348633
    4. ' (' → logprob: -17.125001907348633
    5. ' floor' → logprob: -17.125001907348633
    6. '(
' → logprob: -17.750001907348633
    7. '_floor' → logprob: -18.000001907348633
    8. '(F' → logprob: -18.625001907348633
    9. '.floor' → logprob: -19.000001907348633
    10. 'Floor' → logprob: -19.375001907348633

Token 791: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.03806352615356445
    2. 'floor' → logprob: -3.2880635261535645
    3. '(f' → logprob: -11.038063049316406
    4. ' floor' → logprob: -12.663063049316406
    5. ',' → logprob: -14.163063049316406
    6. '_floor' → logprob: -14.413063049316406
    7. 'oor' → logprob: -14.913063049316406
    8. '.floor' → logprob: -14.913063049316406
    9. 'lo' → logprob: -15.163063049316406
    10. ',f' → logprob: -15.663063049316406

Token 792: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.635164754698053e-05
    2. ',f' → logprob: -10.375066757202148
    3. ' ,' → logprob: -11.000066757202148
    4. ',W' → logprob: -11.250066757202148
    5. '(f' → logprob: -13.125066757202148
    6. '       ' → logprob: -13.250066757202148
    7. '(' → logprob: -14.750066757202148
    8. ',
' → logprob: -15.000066757202148
    9. ')' → logprob: -15.375066757202148
    10. ',w' → logprob: -16.25006675720215

Token 793: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -3.547789674485102e-05
    2. ' W' → logprob: -10.250035285949707
    3. '	W' → logprob: -18.750036239624023
    4. '   ' → logprob: -18.875036239624023
    5. '       ' → logprob: -19.500036239624023
    6. '    ' → logprob: -20.625036239624023
    7. ',W' → logprob: -21.750036239624023
    8. '(W' → logprob: -22.000036239624023
    9. ' ' → logprob: -22.250036239624023
    10. '        ' → logprob: -22.250036239624023

Token 794: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003382038848940283
    2. ',H' → logprob: -8.125338554382324
    3. ' ,' → logprob: -10.125338554382324
    4. ',W' → logprob: -13.875338554382324
    5. '       ' → logprob: -14.750338554382324
    6. '   ' → logprob: -14.875338554382324
    7. 'H' → logprob: -16.250337600708008
    8. ',
' → logprob: -16.875337600708008
    9. '```' → logprob: -17.000337600708008
    10. ')' → logprob: -17.375337600708008

Token 795: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0206720617134124e-05
    2. ' H' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.125009536743164
    4. '       ' → logprob: -19.375009536743164
    5. ' ' → logprob: -19.625009536743164
    6. '    ' → logprob: -20.000009536743164
    7. '  ' → logprob: -20.375009536743164
    8. '	H' → logprob: -20.750009536743164
    9. ',H' → logprob: -21.125009536743164
    10. '     ' → logprob: -21.125009536743164

Token 796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.827200897736475e-05
    2. ' ,' → logprob: -9.625078201293945
    3. '0' → logprob: -11.625078201293945
    4. ',b' → logprob: -13.875078201293945
    5. ')' → logprob: -14.000078201293945
    6. '   ' → logprob: -14.375078201293945
    7. ',
' → logprob: -15.250078201293945
    8. '       ' → logprob: -15.625078201293945
    9. '```' → logprob: -16.000078201293945
    10. '[' → logprob: -17.000078201293945

Token 797: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.625003814697266
    4. '۰' → logprob: -20.625003814697266
    5. '
' → logprob: -20.875003814697266
    6. '000' → logprob: -21.250003814697266
    7. '  ' → logprob: -21.625003814697266
    8. ')' → logprob: -21.625003814697266
    9. '```' → logprob: -21.750003814697266
    10. '       ' → logprob: -21.875003814697266

Token 798: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.875001907348633
    4. '```' → logprob: -18.375001907348633
    5. 'best' → logprob: -18.625001907348633
    6. '
' → logprob: -18.937501907348633
    7. '1' → logprob: -19.437501907348633
    8. '=' → logprob: -20.000001907348633
    9. '  ' → logprob: -20.062501907348633
    10. '۰' → logprob: -20.125001907348633

Token 799: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.500108141452074e-05
    2. ',b' → logprob: -10.375035285949707
    3. ' ,' → logprob: -12.625035285949707
    4. '   ' → logprob: -15.125035285949707
    5. '       ' → logprob: -16.50003433227539
    6. ',
' → logprob: -17.25003433227539
    7. ')' → logprob: -18.87503433227539
    8. '```' → logprob: -19.12503433227539
    9. '(best' → logprob: -20.00003433227539
    10. 'best' → logprob: -20.00003433227539

Token 800: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00020354038861114532
    2. ' best' → logprob: -8.500203132629395
    3. '	best' → logprob: -21.25020408630371
    4. '(best' → logprob: -22.37520408630371
    5. '.best' → logprob: -22.62520408630371
    6. '_best' → logprob: -23.00020408630371
    7. '   ' → logprob: -23.87520408630371
    8. '```' → logprob: -24.50020408630371
    9. 'Best' → logprob: -24.75020408630371
    10. 'b' → logprob: -25.00020408630371

Token 801: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07938123494386673
    2. ')
' → logprob: -2.579381227493286
    3. '       ' → logprob: -8.079380989074707
    4. '   ' → logprob: -8.704380989074707
    5. ')
' → logprob: -11.579380989074707
    6. ' )' → logprob: -13.329380989074707
    7. '<|end|>' → logprob: -13.579380989074707
    8. ')

' → logprob: -14.079380989074707
    9. ' )
' → logprob: -14.954380989074707
    10. '),' → logprob: -14.954380989074707

Token 802: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5755472779273987
    2. '       ' → logprob: -0.9505472779273987
    3. 'print' → logprob: -3.075547218322754
    4. '```' → logprob: -5.450547218322754
    5. '<|end|>' → logprob: -8.075547218322754
    6. ' print' → logprob: -9.200547218322754
    7. '    
' → logprob: -9.575547218322754
    8. '        
' → logprob: -9.700547218322754
    9. '
' → logprob: -9.825547218322754
    10. '``' → logprob: -11.825547218322754

Token 803: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5808253288269043
    2. 'print' (adapté à ' print') → logprob: -0.8308253288269043
    3. '   ' → logprob: -5.330825328826904
    4. '
' → logprob: -11.455825805664062
    5. '```' → logprob: -11.580825805664062
    6. ' print' → logprob: -11.705825805664062
    7. '        
' → logprob: -12.580825805664062
    8. '    
' → logprob: -14.080825805664062
    9. '<|end|>' → logprob: -15.205825805664062
    10. '	print' → logprob: -15.205825805664062

Token 804: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -7.493430894101039e-05
    2. 'best' → logprob: -9.500075340270996
    3. '(' → logprob: -18.62507438659668
    4. ' best' → logprob: -18.87507438659668
    5. '	best' → logprob: -19.62507438659668
    6. '(b' → logprob: -21.50007438659668
    7. '.best' → logprob: -21.62507438659668
    8. '_best' → logprob: -21.87507438659668
    9. '-best' → logprob: -23.25007438659668
    10. ' (' → logprob: -23.37507438659668

Token 805: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -16.5
    3. '```' → logprob: -19.125
    4. ' [' → logprob: -19.875
    5. '   ' → logprob: -20.125
    6. ')[' → logprob: -20.125
    7. '[
' → logprob: -20.875
    8. ')
' → logprob: -21.375
    9. '()[' → logprob: -22.0
    10. '``' → logprob: -22.25

Token 806: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '
' → logprob: -18.0
    5. '```' → logprob: -19.0
    6. '   ' → logprob: -19.625
    7. ' ' → logprob: -20.25
    8. '﻿' → logprob: -21.5
    9. '-' → logprob: -21.5
    10. ')' → logprob: -21.625

Token 807: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '})' → logprob: -14.625000953674316
    3. '))' → logprob: -15.250000953674316
    4. ')}' → logprob: -15.875000953674316
    5. ' )' → logprob: -16.625001907348633
    6. '())' → logprob: -17.250001907348633
    7. ')
' → logprob: -17.500001907348633
    8. '}' → logprob: -17.500001907348633
    9. ')`' → logprob: -17.500001907348633
    10. ')}}' → logprob: -17.500001907348633

Token 808: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.566440999507904
    2. '<|end|>' → logprob: -0.941440999507904
    3. '```' → logprob: -3.316441059112549
    4. ' if' → logprob: -5.941441059112549
    5. '#' → logprob: -6.191441059112549
    6. '
' → logprob: -7.191441059112549
    7. '<|end|>' → logprob: -8.19144058227539
    8. '[' → logprob: -9.69144058227539
    9. 'import' → logprob: -9.69144058227539
    10. 'W' → logprob: -9.94144058227539

Token 809: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.061970822513103485
    2. ' __' → logprob: -2.8119707107543945
    3. 'name' → logprob: -13.936970710754395
    4. '___' → logprob: -14.311970710754395
    5. '(__' → logprob: -14.436970710754395
    6. '_name' → logprob: -15.186970710754395
    7. '_' → logprob: -15.686970710754395
    8. '/__' → logprob: -15.936970710754395
    9. '.__' → logprob: -16.31197166442871
    10. '```' → logprob: -16.31197166442871

Token 810: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008369538933038712
    2. '__.__' → logprob: -5.383369445800781
    3. '==' → logprob: -6.258369445800781
    4. ' ==' → logprob: -7.133369445800781
    5. '.__' → logprob: -8.008369445800781
    6. '__.' → logprob: -8.383369445800781
    7. '[' → logprob: -9.508369445800781
    8. '__[' → logprob: -9.883369445800781
    9. '.' → logprob: -10.133369445800781
    10. '```' → logprob: -10.508369445800781

Token 811: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00044103997061029077
    2. '__.__' → logprob: -7.750441074371338
    3. '__.' → logprob: -12.75044059753418
    4. '==' → logprob: -12.75044059753418
    5. '___' → logprob: -13.25044059753418
    6. '____' → logprob: -13.62544059753418
    7. '__["' → logprob: -14.25044059753418
    8. '=="' → logprob: -15.75044059753418
    9. '__[' → logprob: -15.75044059753418
    10. '__('' → logprob: -16.00044059753418

Token 812: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0055356393568217754
    2. '==' → logprob: -5.25553560256958
    3. ' ==' → logprob: -8.630536079406738
    4. '=="' → logprob: -9.255536079406738
    5. '=='' → logprob: -11.255536079406738
    6. '__.__' → logprob: -11.630536079406738
    7. '__,' → logprob: -13.880536079406738
    8. '=' → logprob: -14.130536079406738
    9. '__["' → logprob: -14.380536079406738
    10. '___' → logprob: -14.380536079406738

Token 813: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1602727621793747
    2. ''' → logprob: -1.9102727174758911
    3. '__' → logprob: -10.285272598266602
    4. ' "__' → logprob: -11.285272598266602
    5. ' '__' → logprob: -13.535272598266602
    6. '"name' → logprob: -16.6602725982666
    7. '"user' → logprob: -16.6602725982666
    8. '('__' → logprob: -16.6602725982666
    9. ''"' → logprob: -16.9102725982666
    10. ''name' → logprob: -17.1602725982666

Token 814: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003374886582605541
    2. '__' → logprob: -8.000337600708008
    3. 'name' → logprob: -13.500337600708008
    4. ' main' → logprob: -15.750337600708008
    5. '_main' → logprob: -15.750337600708008
    6. 'built' → logprob: -15.875337600708008
    7. '"' → logprob: -16.125337600708008
    8. '__":
' → logprob: -17.125337600708008
    9. 'python' → logprob: -17.125337600708008
    10. '(main' → logprob: -17.625337600708008

Token 815: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.18253549933433533
    2. '__' → logprob: -1.8075355291366577
    3. '__':
' → logprob: -5.932535648345947
    4. '__.' → logprob: -10.057535171508789
    5. '__["' → logprob: -10.557535171508789
    6. '__:' → logprob: -10.807535171508789
    7. '__.__' → logprob: -11.057535171508789
    8. '==' → logprob: -11.807535171508789
    9. '.' → logprob: -12.307535171508789
    10. '__
' → logprob: -12.932535171508789

Token 816: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.200166469876422e-06
    2. ' main' → logprob: -12.250004768371582
    3. '__' → logprob: -15.750004768371582
    4. '	main' → logprob: -16.0000057220459
    5. '_main' → logprob: -17.1250057220459
    6. 'run' → logprob: -17.7500057220459
    7. '(main' → logprob: -18.6250057220459
    8. 'python' → logprob: -19.2500057220459
    9. '```' → logprob: -19.2500057220459
    10. '   ' → logprob: -19.8750057220459

Token 817: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -18.75
    4. '   ' → logprob: -19.375
    5. '.main' → logprob: -22.875
    6. '_main' → logprob: -23.0
    7. 'import' → logprob: -23.125
    8. '(main' → logprob: -23.625
    9. '```' → logprob: -25.625
    10. 'Main' → logprob: -25.875

Token 818: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 816
Tokens correctement prédits (1ère position, stricte): 327
Tokens correctement prédits (1ère position, avec adaptation): 356
Tokens correctement prédits (top 10): 624
Précision stricte (1ère position): 40.07%
Précision adaptée (1ère position): 43.63%
Précision (top 10): 76.47%
================================================================================
