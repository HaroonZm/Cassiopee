================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    sys.setrecursionlimit(10**7)

    def neighbors(x, y):
        return [(x+1,y), (x-1,y), (x,y+1), (x,y-1)]

    while True:
        n = sys.stdin.readline().strip()
        if n == '0':
            break
        n = int(n)
        futons = []
        head_cells = set()
        foot_cells = set()
        for _ in range(n):
            line = sys.stdin.readline().strip().split()
            x = int(line[0])
            y = int(line[1])
            d = line[2]
            if d == 'x':
                # futon occupies (x,y) and (x+1,y)
                h = (x, y)     # head at left cell
                f = (x+1, y)   # foot at right cell
            else:
                # futon occupies (x,y) and (x,y+1)
                h = (x, y)     # head at bottom cell
                f = (x, y+1)   # foot at top cell
            head_cells.add(h)
            foot_cells.add(f)

        # check if any foot is adjacent to any head (other than its own)
        # Since no overlap, foot cell is never head cell of same futon
        bad = False
        for f in foot_cells:
            for nb in neighbors(f[0], f[1]):
                if nb in head_cells:
                    bad = True
                    break
            if bad:
                break

        if bad:
            print("No")
        else:
            print("Yes")

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.45526614785194397
    2. '\n' → logprob: -1.3302661180496216
    3. '   ' → logprob: -2.705266237258911
    4. '    
' → logprob: -4.580265998840332
    5. ' 
' → logprob: -5.205265998840332
    6. '    ' → logprob: -5.330265998840332
    7. '```' → logprob: -5.580265998840332
    8. '(' → logprob: -5.955265998840332
    9. ''' → logprob: -6.580265998840332
    10. ' \' → logprob: -7.330265998840332

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4218117594718933
    2. '   ' → logprob: -1.671811819076538
    3. 'pass' → logprob: -2.421811819076538
    4. 'p' → logprob: -3.671811819076538
    5. 'return' → logprob: -4.171811580657959
    6. 'r' → logprob: -4.421811580657959
    7. '#' → logprob: -5.171811580657959
    8. '    ' → logprob: -6.171811580657959
    9. 'a' → logprob: -6.296811580657959
    10. 'n' → logprob: -6.796811580657959

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.031138697639107704
    2. ' sys' → logprob: -3.6561386585235596
    3. ' math' → logprob: -5.781138896942139
    4. ' ' → logprob: -6.656138896942139
    5. ' numpy' → logprob: -8.65613842010498
    6. ' json' → logprob: -9.15613842010498
    7. ' random' → logprob: -10.15613842010498
    8. ' tensorflow' → logprob: -10.28113842010498
    9. ' space' → logprob: -11.15613842010498
    10. 'os' → logprob: -11.28113842010498

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2184634655714035
    2. '\n' → logprob: -3.34346342086792
    3. 'newline' → logprob: -3.46846342086792
    4. '\' → logprob: -3.71846342086792
    5. '<|end|>' → logprob: -3.84346342086792
    6. '.readline' → logprob: -4.21846342086792
    7. 'import' → logprob: -4.34346342086792
    8. '```' → logprob: -4.59346342086792
    9. '   ' → logprob: -4.71846342086792
    10. '[' → logprob: -5.46846342086792

Token 7: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8574399948120117
    2. '<|end|>' → logprob: -1.2324399948120117
    3. 'import' → logprob: -2.8574399948120117
    4. '```' → logprob: -3.2324399948120117
    5. '.readline' → logprob: -3.4824399948120117
    6. '<|end|>' → logprob: -3.8574399948120117
    7. '
' → logprob: -3.9824399948120117
    8. 'newline' → logprob: -4.232439994812012
    9. '\n' → logprob: -4.357439994812012
    10. '   ' → logprob: -4.607439994812012

Token 8: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34727635979652405
    2. ' ' → logprob: -2.347276449203491
    3. '    ' → logprob: -2.347276449203491
    4. '\n' → logprob: -3.722276449203491
    5. '\' → logprob: -4.222276210784912
    6. '.' → logprob: -4.722276210784912
    7. '[' → logprob: -4.722276210784912
    8. 'import' → logprob: -4.847276210784912
    9. 'newline' → logprob: -5.222276210784912
    10. '  ' → logprob: -5.347276210784912

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.7729658540920354e-05
    2. ' .' → logprob: -11.125027656555176
    3. '.exit' → logprob: -12.625027656555176
    4. '.readline' → logprob: -13.500027656555176
    5. '.stdout' → logprob: -13.625027656555176
    6. '.argv' → logprob: -13.625027656555176
    7. '.import' → logprob: -14.125027656555176
    8. '.stdin' → logprob: -14.250027656555176
    9. '.user' → logprob: -14.750027656555176
    10. '.`' → logprob: -14.875027656555176

Token 10: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7032743692398071
    2. 'trace' → logprob: -1.5782743692398071
    3. '_trace' → logprob: -1.9532743692398071
    4. '_version' → logprob: -3.3282742500305176
    5. 'ex' → logprob: -4.203274250030518
    6. '_ex' → logprob: -4.328274250030518
    7. 'rec' → logprob: -4.453274250030518
    8. 's' → logprob: -4.703274250030518
    9. '_encoding' → logprob: -4.703274250030518
    10. '_limit' → logprob: -4.953274250030518

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003574887989088893
    2. '_limit' → logprob: -6.628574848175049
    3. '_' → logprob: -7.128574848175049
    4. 'urs' → logprob: -7.753574848175049
    5. 'limit' → logprob: -8.128575325012207
    6. 'ur' → logprob: -8.378575325012207
    7. 'ursive' → logprob: -8.753575325012207
    8. 'ut' → logprob: -9.253575325012207
    9. 'urse' → logprob: -9.628575325012207
    10. 't' → logprob: -10.003575325012207

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5781434774398804
    2. '_limit' → logprob: -0.8281434774398804
    3. '_depth' → logprob: -6.32814359664917
    4. ' limit' → logprob: -9.078143119812012
    5. 'depth' → logprob: -9.328143119812012
    6. 'lim' → logprob: -9.828143119812012
    7. 'Limit' → logprob: -9.828143119812012
    8. '_lim' → logprob: -9.953143119812012
    9. '(limit' → logprob: -11.828143119812012
    10. 'error' → logprob: -11.828143119812012

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.4849443838757e-06
    2. '(

' → logprob: -13.500004768371582
    3. ' (' → logprob: -13.625004768371582
    4. '("("' → logprob: -14.125004768371582
    5. '(
' → logprob: -14.250004768371582
    6. '((' → logprob: -15.500004768371582
    7. '('' → logprob: -16.000003814697266
    8. '()' → logprob: -16.625003814697266
    9. ')' → logprob: -18.375003814697266
    10. '(
' → logprob: -18.375003814697266

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029773982241749763
    2. '100' → logprob: -3.5297739505767822
    3. ' ' → logprob: -11.029773712158203
    4. '1' → logprob: -12.154773712158203
    5. '   ' → logprob: -14.279773712158203
    6. '500' → logprob: -14.529773712158203
    7. '300' → logprob: -15.154773712158203
    8. '200' → logprob: -15.654773712158203
    9. '  ' → logprob: -15.904773712158203
    10. '999' → logprob: -16.029773712158203

Token 15: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031651611789129674
    2. '00' → logprob: -8.625316619873047
    3. '4' → logprob: -9.750316619873047
    4. '000' → logprob: -10.375316619873047
    5. '6' → logprob: -10.750316619873047
    6. '2' → logprob: -11.375316619873047
    7. '**' → logprob: -11.500316619873047
    8. '5' → logprob: -13.000316619873047
    9. '3' → logprob: -13.875316619873047
    10. ')' → logprob: -14.625316619873047

Token 16: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0028795339167118073
    2. '6' → logprob: -6.002879619598389
    3. '8' → logprob: -8.12787914276123
    4. '9' → logprob: -9.12787914276123
    5. '5' → logprob: -18.002880096435547
    6. '```' → logprob: -18.502880096435547
    7. ')' → logprob: -20.127880096435547
    8. '(' → logprob: -20.252880096435547
    9. '{' → logprob: -20.377880096435547
    10. ' ' → logprob: -20.377880096435547

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.875003814697266
    3. ')
' → logprob: -14.625003814697266
    4. '))' → logprob: -14.875003814697266
    5. ' ' → logprob: -17.500003814697266
    6. '),' → logprob: -18.125003814697266
    7. ')))' → logprob: -18.375003814697266
    8. '）' → logprob: -18.500003814697266
    9. '')' → logprob: -18.625003814697266
    10. ')`' → logprob: -18.875003814697266

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5392071604728699
    2. '    
' → logprob: -1.0392072200775146
    3. '
' → logprob: -3.2892072200775146
    4. '\' → logprob: -4.2892069816589355
    5. '\n' → logprob: -5.1642069816589355
    6. '```' → logprob: -5.5392069816589355
    7. '   
' → logprob: -8.039207458496094
    8. '    
    
' → logprob: -8.039207458496094
    9. '  
' → logprob: -8.039207458496094
    10. ' 
' → logprob: -8.039207458496094

Token 19: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04567230865359306
    2. 'n' → logprob: -3.2956724166870117
    3. 'a' → logprob: -6.295672416687012
    4. 'x' → logprob: -6.670672416687012
    5. '    
' → logprob: -7.170672416687012
    6. 'try' → logprob: -7.420672416687012
    7. 'for' → logprob: -7.545672416687012
    8. ' ' → logprob: -7.795672416687012
    9. '    ' → logprob: -7.795672416687012
    10. 'i' → logprob: -8.045672416687012

Token 20: ' neighbors' (ID: 31655)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6623238921165466
    2. ' factorial' → logprob: -1.0373239517211914
    3. ' f' → logprob: -2.6623239517211914
    4. ' solve' → logprob: -3.0373239517211914
    5. ' fibonacci' → logprob: -5.662323951721191
    6. ' factor' → logprob: -6.162323951721191
    7. ' ' → logprob: -6.537323951721191
    8. ' helper' → logprob: -6.912323951721191
    9. ' fib' → logprob: -7.037323951721191
    10. 'dfs' → logprob: -7.412323951721191

Token 21: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001499983249232173
    2. '_' → logprob: -6.626500129699707
    3. '(node' → logprob: -10.001500129699707
    4. '_(' → logprob: -10.501500129699707
    5. '(n' → logprob: -11.376500129699707
    6. ' (' → logprob: -11.501500129699707
    7. '_list' → logprob: -11.626500129699707
    8. 's' → logprob: -11.751500129699707
    9. '(x' → logprob: -11.876500129699707
    10. '(space' → logprob: -12.251500129699707

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026433244347572327
    2. '):' → logprob: -3.651433229446411
    3. ',y' → logprob: -9.526432991027832
    4. ')' → logprob: -10.401432991027832
    5. ' ,' → logprob: -11.026432991027832
    6. ':' → logprob: -12.901432991027832
    7. ',
' → logprob: -13.526432991027832
    8. ' ):' → logprob: -13.526432991027832
    9. ',x' → logprob: -13.651432991027832
    10. '):
' → logprob: -13.651432991027832

Token 23: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25193724036216736
    2. ' y' → logprob: -1.5019372701644897
    3. '    ' → logprob: -12.751936912536621
    4. '	y' → logprob: -12.751936912536621
    5. '   ' → logprob: -13.751936912536621
    6. ' ' → logprob: -13.876936912536621
    7. ' ' → logprob: -16.501937866210938
    8. ',y' → logprob: -16.876937866210938
    9. '<|end|>' → logprob: -16.876937866210938
    10. '  ' → logprob: -17.251937866210938

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002193908003391698
    2. ')' → logprob: -9.000219345092773
    3. ',' → logprob: -9.375219345092773
    4. ' ):' → logprob: -12.375219345092773
    5. ':' → logprob: -12.500219345092773
    6. '   ' → logprob: -13.750219345092773
    7. '):
' → logprob: -14.000219345092773
    8. ''):' → logprob: -15.625219345092773
    9. '),' → logprob: -15.750219345092773
    10. ')：' → logprob: -15.875219345092773

Token 25: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10366137325763702
    2. '       ' → logprob: -2.353661298751831
    3. '):' → logprob: -6.97866153717041
    4. '    ' → logprob: -7.10366153717041
    5. '   ' → logprob: -7.10366153717041
    6. ' :' → logprob: -8.72866153717041
    7. '():' → logprob: -8.72866153717041
    8. ':
' → logprob: -9.22866153717041
    9. ',' → logprob: -9.35366153717041
    10. '(' → logprob: -9.85366153717041

Token 26: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017399635165929794
    2. ':' → logprob: -5.017399787902832
    3. '   ' → logprob: -5.267399787902832
    4. '    ' → logprob: -6.767399787902832
    5. ' ' → logprob: -7.017399787902832
    6. '        ' → logprob: -7.392399787902832
    7. ',' → logprob: -7.392399787902832
    8. 'return' (adapté à ' return') → logprob: -7.767399787902832
    9. ' return' → logprob: -8.267399787902832
    10. ' :' → logprob: -8.642399787902832

Token 27: ' [(' (ID: 43900)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.0123162269592285
    2. ' [(' → logprob: -1.3873162269592285
    3. '[' → logprob: -1.7623162269592285
    4. ' [
' → logprob: -1.8873162269592285
    5. '[(' → logprob: -3.3873162269592285
    6. ' ' → logprob: -4.3873162269592285
    7. ' []' → logprob: -4.8873162269592285
    8. '[
' → logprob: -5.0123162269592285
    9. ' {(' → logprob: -7.0123162269592285
    10. '[x' → logprob: -7.2623162269592285

Token 28: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005268145352602005
    2. ' x' → logprob: -5.505268096923828
    3. '(x' → logprob: -6.755268096923828
    4. ' (' → logprob: -10.755268096923828
    5. ')x' → logprob: -13.755268096923828
    6. '	x' → logprob: -14.630268096923828
    7. ''x' → logprob: -15.130268096923828
    8. '(' → logprob: -15.505268096923828
    9. ',x' → logprob: -15.630268096923828
    10. '"x' → logprob: -15.755268096923828

Token 29: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2330091893672943
    2. '+' → logprob: -1.6080092191696167
    3. ',' → logprob: -5.608009338378906
    4. ' -' → logprob: -5.733009338378906
    5. ' +' → logprob: -7.358009338378906
    6. ' ' → logprob: -11.358009338378906
    7. '   ' → logprob: -12.858009338378906
    8. '+,' → logprob: -13.108009338378906
    9. ' ,' → logprob: -13.233009338378906
    10. '1' → logprob: -13.608009338378906

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017323249951004982
    2. '0' → logprob: -4.767323017120361
    3. '-' → logprob: -4.892323017120361
    4. ' ' → logprob: -6.892323017120361
    5. ' -' → logprob: -9.51732349395752
    6. ',' → logprob: -10.01732349395752
    7. 'dx' → logprob: -10.64232349395752
    8. ' ,' → logprob: -12.51732349395752
    9. ' dx' → logprob: -13.26732349395752
    10. ',-' → logprob: -13.51732349395752

Token 31: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ',)' → logprob: -13.75000286102295
    3. ' ,' → logprob: -14.00000286102295
    4. ',y' → logprob: -14.37500286102295
    5. '<|end|>' → logprob: -15.50000286102295
    6. ',
' → logprob: -15.87500286102295
    7. ',

' → logprob: -16.250003814697266
    8. '‌,' → logprob: -16.625003814697266
    9. ')' → logprob: -16.750003814697266
    10. ',),' → logprob: -17.000003814697266

Token 32: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00920923799276352
    2. '),(' → logprob: -4.884209156036377
    3. ')' → logprob: -7.009209156036377
    4. '),
' → logprob: -7.634209156036377
    5. ' ),' → logprob: -9.384209632873535
    6. '),

' → logprob: -9.634209632873535
    7. ',' → logprob: -9.759209632873535
    8. ' ' → logprob: -13.009209632873535
    9. ',),' → logprob: -13.634209632873535
    10. '<|end|>' → logprob: -14.009209632873535

Token 33: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00030924470047466457
    2. '(x' → logprob: -8.250308990478516
    3. '<|end|>' → logprob: -10.250308990478516
    4. ' ' → logprob: -12.125308990478516
    5. '(' → logprob: -12.250308990478516
    6. ' ' → logprob: -13.375308990478516
    7. ' `(' → logprob: -15.125308990478516
    8. ' (
' → logprob: -15.250308990478516
    9. ',' → logprob: -16.250308990478516
    10. '(n' → logprob: -16.500308990478516

Token 34: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001174747827462852
    2. ' x' → logprob: -6.7511749267578125
    3. '(x' → logprob: -12.501174926757812
    4. '   ' → logprob: -15.501174926757812
    5. ')x' → logprob: -15.751174926757812
    6. '	x' → logprob: -15.876174926757812
    7. ' ' → logprob: -15.876174926757812
    8. '"x' → logprob: -16.126174926757812
    9. '    ' → logprob: -16.876174926757812
    10. ' (' → logprob: -17.126174926757812

Token 35: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0014476180076599121
    2. ',' → logprob: -6.751447677612305
    3. '+' → logprob: -8.876447677612305
    4. ',y' → logprob: -9.126447677612305
    5. ' -' → logprob: -11.376447677612305
    6. ' ' → logprob: -11.876447677612305
    7. ',j' → logprob: -13.126447677612305
    8. ' ,' → logprob: -13.376447677612305
    9. ',n' → logprob: -13.626447677612305
    10. ',x' → logprob: -13.751447677612305

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.300083648762666e-05
    2. ' ' → logprob: -9.875053405761719
    3. ',' → logprob: -14.500053405761719
    4. '```' → logprob: -15.125053405761719
    5. '   ' → logprob: -15.625053405761719
    6. 'y' → logprob: -16.18755340576172
    7. '0' → logprob: -16.62505340576172
    8. '
' → logprob: -16.81255340576172
    9. '  ' → logprob: -16.87505340576172
    10. ')' → logprob: -17.18755340576172

Token 37: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.38817307353019714
    2. ',' → logprob: -1.1381731033325195
    3. ' ,' → logprob: -6.8881731033325195
    4. ',x' → logprob: -9.13817310333252
    5. ')' → logprob: -9.51317310333252
    6. ',(' → logprob: -10.38817310333252
    7. ',n' → logprob: -10.88817310333252
    8. '),(' → logprob: -11.13817310333252
    9. ',user' → logprob: -12.13817310333252
    10. '<|end|>' → logprob: -12.26317310333252

Token 38: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.001606747624464333
    2. '),(' → logprob: -7.2516069412231445
    3. ')' → logprob: -7.3766069412231445
    4. ',' → logprob: -8.626606941223145
    5. ' ),' → logprob: -9.751606941223145
    6. ')]' → logprob: -10.751606941223145
    7. '),
' → logprob: -11.876606941223145
    8. '],' → logprob: -12.876606941223145
    9. '),

' → logprob: -14.376606941223145
    10. ',),' → logprob: -15.251606941223145

Token 39: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.014561734162271023
    2. '<|end|>' → logprob: -4.264561653137207
    3. '(x' → logprob: -9.014561653137207
    4. ' ' → logprob: -9.014561653137207
    5. ')' → logprob: -9.889561653137207
    6. '(' → logprob: -10.514561653137207
    7. '<|end|>' → logprob: -11.014561653137207
    8. ' `(' → logprob: -11.389561653137207
    9. ',' → logprob: -11.639561653137207
    10. ' )' → logprob: -11.764561653137207

Token 40: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004637553822249174
    2. 'y' → logprob: -5.379637718200684
    3. ' x' → logprob: -11.254637718200684
    4. '```' → logprob: -13.254637718200684
    5. ' y' → logprob: -13.754637718200684
    6. '(x' → logprob: -14.379637718200684
    7. ',' → logprob: -14.629637718200684
    8. ' ' → logprob: -15.504637718200684
    9. ')' → logprob: -16.379636764526367
    10. ',x' → logprob: -16.504636764526367

Token 41: ',y' (ID: 16103)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -5.0020742492051795e-05
    2. ',' → logprob: -10.750049591064453
    3. '-' → logprob: -11.125049591064453
    4. ')' → logprob: -12.500049591064453
    5. '),' → logprob: -13.000049591064453
    6. '+,' → logprob: -13.125049591064453
    7. '+)' → logprob: -13.250049591064453
    8. ' +' → logprob: -13.500049591064453
    9. ',+' → logprob: -13.750049591064453
    10. '1' → logprob: -13.875049591064453

Token 42: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.632542913896032e-05
    2. '-' → logprob: -10.000046730041504
    3. '+)' → logprob: -14.750046730041504
    4. ' +' → logprob: -15.250046730041504
    5. '1' → logprob: -16.375045776367188
    6. ')' → logprob: -17.125045776367188
    7. '+
' → logprob: -17.500045776367188
    8. '+')' → logprob: -17.500045776367188
    9. ')+' → logprob: -17.750045776367188
    10. '+-' → logprob: -18.875045776367188

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '-' → logprob: -13.25000286102295
    3. ' ' → logprob: -13.87500286102295
    4. ')' → logprob: -16.500003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '```' → logprob: -17.875003814697266
    7. '0' → logprob: -18.875003814697266
    8. '  ' → logprob: -19.000003814697266
    9. ')]' → logprob: -19.625003814697266
    10. '),' → logprob: -19.875003814697266

Token 44: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004589973017573357
    2. ')]' → logprob: -6.004590034484863
    3. ')' → logprob: -6.504590034484863
    4. '),(' → logprob: -8.004590034484863
    5. ' ),' → logprob: -8.254590034484863
    6. '),
' → logprob: -11.629590034484863
    7. ',' → logprob: -12.129590034484863
    8. ' )' → logprob: -12.879590034484863
    9. ')],' → logprob: -14.129590034484863
    10. '],' → logprob: -14.129590034484863

Token 45: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02358167991042137
    2. '(x' → logprob: -3.7735817432403564
    3. '(' → logprob: -8.523581504821777
    4. '(y' → logprob: -9.523581504821777
    5. ' ' → logprob: -9.898581504821777
    6. '<|end|>' → logprob: -12.023581504821777
    7. '(s' → logprob: -13.023581504821777
    8. ' y' → logprob: -13.148581504821777
    9. ' `(' → logprob: -14.148581504821777
    10. '(space' → logprob: -14.898581504821777

Token 46: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003000696888193488
    2. 'y' → logprob: -8.125300407409668
    3. ' x' → logprob: -12.500300407409668
    4. '```' → logprob: -15.875300407409668
    5. '(x' → logprob: -16.12529945373535
    6. '   ' → logprob: -17.75029945373535
    7. ' y' → logprob: -17.87529945373535
    8. ' ' → logprob: -18.37529945373535
    9. '"x' → logprob: -18.75029945373535
    10. ')x' → logprob: -19.25029945373535

Token 47: ',y' (ID: 16103)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5240225195884705
    2. ',y' → logprob: -1.1490225791931152
    3. ',' → logprob: -2.3990225791931152
    4. ',x' → logprob: -10.274022102355957
    5. ')' → logprob: -10.399022102355957
    6. ' -' → logprob: -11.524022102355957
    7. ' ,' → logprob: -11.774022102355957
    8. 'y' → logprob: -12.024022102355957
    9. ',user' → logprob: -12.399022102355957
    10. ',n' → logprob: -13.024022102355957

Token 48: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0280383548888494e-06
    2. '+' → logprob: -14.250000953674316
    3. ')' → logprob: -15.875000953674316
    4. ' -' → logprob: -16.000001907348633
    5. ')]' → logprob: -16.750001907348633
    6. '-)' → logprob: -16.875001907348633
    7. '−' → logprob: -18.000001907348633
    8. '1' → logprob: -18.500001907348633
    9. '–' → logprob: -18.625001907348633
    10. '),' → logprob: -20.125001907348633

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -15.250000953674316
    4. ')' → logprob: -16.000001907348633
    5. '<|end|>' → logprob: -16.375001907348633
    6. '۱' → logprob: -17.375001907348633
    7. '-' → logprob: -17.937501907348633
    8. '१' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.687501907348633
    10. '১' → logprob: -18.750001907348633

Token 50: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011535553494468331
    2. ')' → logprob: -6.876153469085693
    3. ']' → logprob: -9.876153945922852
    4. ' )' → logprob: -10.376153945922852
    5. ')])' → logprob: -10.376153945922852
    6. '   ' → logprob: -13.501153945922852
    7. ')],' → logprob: -13.501153945922852
    8. '),' → logprob: -13.876153945922852
    9. '])]' → logprob: -14.251153945922852
    10. ')}' → logprob: -14.501153945922852

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6377005577087402
    2. '
' → logprob: -0.8877005577087402
    3. '    
' → logprob: -3.0127005577087402
    4. '<|end|>' → logprob: -5.63770055770874
    5. '```' → logprob: -6.01270055770874
    6. '  
' → logprob: -6.38770055770874
    7. ' 
' → logprob: -7.26270055770874
    8. '   
' → logprob: -8.137701034545898
    9. '' → logprob: -8.262701034545898
    10. '\' → logprob: -8.262701034545898

Token 52: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2882055342197418
    2. '
' → logprob: -1.5382055044174194
    3. '    
' → logprob: -4.163205623626709
    4. 'n' → logprob: -4.788205623626709
    5. 'x' → logprob: -5.788205623626709
    6. '```' → logprob: -5.913205623626709
    7. 'for' → logprob: -6.288205623626709
    8. 's' → logprob: -7.038205623626709
    9. 'def' → logprob: -7.538205623626709
    10. '\n' → logprob: -7.913205623626709

Token 53: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00539929186925292
    2. 'True' → logprob: -5.255399227142334
    3. ' len' → logprob: -9.755399703979492
    4. ' not' → logprob: -9.880399703979492
    5. '(True' → logprob: -10.130399703979492
    6. ' sys' → logprob: -12.130399703979492
    7. ' ' → logprob: -12.255399703979492
    8. ' input' → logprob: -14.130399703979492
    9. ' x' → logprob: -14.130399703979492
    10. '=True' → logprob: -14.255399703979492

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030269217677414417
    2. ' :' → logprob: -8.2503023147583
    3. '):' → logprob: -11.1253023147583
    4. '():' → logprob: -11.7503023147583
    5. ':
' → logprob: -11.8753023147583
    6. '   ' → logprob: -12.3753023147583
    7. ':**' → logprob: -12.5003023147583
    8. '<|end|>' → logprob: -13.6253023147583
    9. '    ' → logprob: -14.6253023147583
    10. '       ' → logprob: -14.7503023147583

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12861034274101257
    2. '<|end|>' → logprob: -2.503610372543335
    3. ' ' → logprob: -3.503610372543335
    4. '    ' → logprob: -6.003610134124756
    5. '   ' → logprob: -6.253610134124756
    6. '        
' → logprob: -6.503610134124756
    7. '<|end|>' → logprob: -6.878610134124756
    8. '        ' → logprob: -7.378610134124756
    9. '      ' → logprob: -8.378610610961914
    10. '  ' → logprob: -9.003610610961914

Token 56: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.0691373348236084
    2. '   ' → logprob: -1.3191373348236084
    3. ' try' → logprob: -1.4441373348236084
    4. 'line' → logprob: -3.3191373348236084
    5. 'try' → logprob: -3.6941373348236084
    6. 'n' (adapté à ' n') → logprob: -3.8191373348236084
    7. 'data' → logprob: -4.3191375732421875
    8. '    ' → logprob: -4.4441375732421875
    9. ' n' → logprob: -4.5691375732421875
    10. ' ' → logprob: -4.6941375732421875

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4997517466545105
    2. ' ' → logprob: -2.2497518062591553
    3. ' >' → logprob: -2.4997518062591553
    4. ',' → logprob: -2.6247518062591553
    5. '=' → logprob: -2.8747518062591553
    6. ' ,' → logprob: -2.8747518062591553
    7. ' ==' → logprob: -4.749751567840576
    8. '  ' → logprob: -5.124751567840576
    9. '>' → logprob: -5.749751567840576
    10. '   ' → logprob: -6.999751567840576

Token 58: ' sys' (ID: 12228)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10281643271446228
    2. 'int' → logprob: -2.352816343307495
    3. ' input' → logprob: -6.102816581726074
    4. 'input' → logprob: -8.352816581726074
    5. ' ' → logprob: -8.977816581726074
    6. '=int' → logprob: -12.102816581726074
    7. '<int' → logprob: -14.602816581726074
    8. '[int' → logprob: -14.727816581726074
    9. '(int' → logprob: -15.102816581726074
    10. '  ' → logprob: -15.477816581726074

Token 59: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.5795778632164001
    2. '.' → logprob: -0.8295778632164001
    3. '.readline' → logprob: -5.954577922821045
    4. '.stdout' → logprob: -7.579577922821045
    5. '.input' → logprob: -7.829577922821045
    6. '.argv' → logprob: -10.204577445983887
    7. '().' → logprob: -10.579577445983887
    8. '.read' → logprob: -10.954577445983887
    9. '.exit' → logprob: -10.954577445983887
    10. '.std' → logprob: -11.329577445983887

Token 60: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0006127171218395233
    2. '.' → logprob: -7.500612735748291
    3. '.read' → logprob: -9.750612258911133
    4. ' readline' → logprob: -13.625612258911133
    5. '.readlines' → logprob: -15.875612258911133
    6. 'read' → logprob: -16.000612258911133
    7. '.write' → logprob: -17.750612258911133
    8. '.Read' → logprob: -18.250612258911133
    9. ' .' → logprob: -18.750612258911133
    10. '.tell' → logprob: -19.125612258911133

Token 61: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03513623774051666
    2. '().' → logprob: -3.4101362228393555
    3. '(' → logprob: -6.6601362228393555
    4. '())' → logprob: -9.410136222839355
    5. '()>' → logprob: -9.535136222839355
    6. '()]' → logprob: -11.535136222839355
    7. ' ()' → logprob: -11.660136222839355
    8. '()
' → logprob: -12.535136222839355
    9. '()<' → logprob: -12.660136222839355
    10. '()`' → logprob: -12.660136222839355

Token 62: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0009117019944824278
    2. 'rstrip' → logprob: -7.000911712646484
    3. 'split' → logprob: -16.625911712646484
    4. ' strip' → logprob: -16.750911712646484
    5. 'decode' → logprob: -18.500911712646484
    6. 'read' → logprob: -18.625911712646484
    7. 'str' → logprob: -18.875911712646484
    8. 'rst' → logprob: -19.125911712646484
    9. 'stripe' → logprob: -20.000911712646484
    10. 'stop' → logprob: -20.500911712646484

Token 63: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0034154667519032955
    2. '(' → logprob: -5.753415584564209
    3. '()
' → logprob: -9.87841510772705
    4. '()==' → logprob: -10.50341510772705
    5. ')' → logprob: -10.62841510772705
    6. '()>' → logprob: -10.87841510772705
    7. '<|end|>' → logprob: -10.87841510772705
    8. '())' → logprob: -11.00341510772705
    9. '().' → logprob: -11.25341510772705
    10. '()<' → logprob: -11.50341510772705

Token 64: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02840452827513218
    2. ' ' → logprob: -3.653404474258423
    3. 'not' → logprob: -6.403404712677002
    4. ' n' → logprob: -7.778404712677002
    5. 'n' → logprob: -10.653404235839844
    6. '	not' → logprob: -13.903404235839844
    7. ' ' → logprob: -13.903404235839844
    8. '  ' → logprob: -14.278404235839844
    9. ' no' → logprob: -15.028404235839844
    10. 'n't' → logprob: -15.153404235839844

Token 67: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.038204092532396317
    2. '==' → logprob: -3.2882041931152344
    3. ' ' → logprob: -9.288204193115234
    4. ' =' → logprob: -10.413204193115234
    5. '=' → logprob: -10.663204193115234
    6. ')' → logprob: -12.788204193115234
    7. '()==' → logprob: -12.913204193115234
    8. ' ===' → logprob: -13.038204193115234
    9. ')==' → logprob: -13.163204193115234
    10. ' in' → logprob: -13.538204193115234

Token 68: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.4068087339401245
    2. '""' → logprob: -1.4068087339401245
    3. ''' → logprob: -2.906808853149414
    4. '"' → logprob: -3.781808853149414
    5. ' ''' → logprob: -4.906808853149414
    6. '"":' → logprob: -6.281808853149414
    7. ' ""' → logprob: -6.531808853149414
    8. ' '' → logprob: -7.281808853149414
    9. ''A' → logprob: -9.906808853149414
    10. ' ' → logprob: -9.906808853149414

Token 69: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4459174573421478
    2. '''' → logprob: -1.1959174871444702
    3. '':' → logprob: -3.8209173679351807
    4. ''\' → logprob: -4.32091760635376
    5. '"' → logprob: -5.57091760635376
    6. '"":' → logprob: -5.69591760635376
    7. ':' → logprob: -6.07091760635376
    8. '#' → logprob: -6.07091760635376
    9. '""' → logprob: -6.07091760635376
    10. '```' → logprob: -6.69591760635376

Token 70: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.013807565905153751
    2. '\n' → logprob: -5.013807773590088
    3. ''' → logprob: -5.513807773590088
    4. '':
' → logprob: -6.263807773590088
    5. ':' → logprob: -7.013807773590088
    6. '':
' → logprob: -9.26380729675293
    7. '":' → logprob: -9.88880729675293
    8. ''):' → logprob: -10.88880729675293
    9. '\r' → logprob: -11.51380729675293
    10. ':
' → logprob: -11.51380729675293

Token 71: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05642670392990112
    2. ':' → logprob: -3.306426763534546
    3. '           ' → logprob: -4.306426525115967
    4. '\n' → logprob: -6.681426525115967
    5. '<|end|>' → logprob: -6.681426525115967
    6. ':
' → logprob: -7.181426525115967
    7. '   ' → logprob: -7.181426525115967
    8. '
' → logprob: -8.806427001953125
    9. ' break' → logprob: -9.056427001953125
    10. '\' → logprob: -9.056427001953125

Token 72: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20205725729465485
    2. ' break' → logprob: -1.9520572423934937
    3. 'break' (adapté à ' break') → logprob: -3.577057361602783
    4. '           ' → logprob: -4.452057361602783
    5. '	break' → logprob: -7.202057361602783
    6. '   ' → logprob: -8.452056884765625
    7. ' return' → logprob: -9.702056884765625
    8. 'return' → logprob: -9.827056884765625
    9. '        
' → logprob: -9.952056884765625
    10. '_break' → logprob: -10.327056884765625

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3225647807121277
    2. '<|end|>' → logprob: -1.3225648403167725
    3. '\n' → logprob: -5.322564601898193
    4. '       ' → logprob: -5.947564601898193
    5. '<|end|>' → logprob: -7.572564601898193
    6. '        
' → logprob: -8.072565078735352
    7. ')' → logprob: -8.697565078735352
    8. '\' → logprob: -9.072565078735352
    9. ',' → logprob: -9.072565078735352
    10. '  
' → logprob: -9.197565078735352

Token 74: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' n' (ID: 297)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6222112774848938
    2. '<|end|>' → logprob: -1.247211217880249
    3. '       ' → logprob: -2.747211217880249
    4. 'n' (adapté à ' n') → logprob: -2.872211217880249
    5. '<|end|>' → logprob: -3.997211217880249
    6. ' n' → logprob: -4.747211456298828
    7. ' 
' → logprob: -4.747211456298828
    8. '        
' → logprob: -5.622211456298828
    9. ' ' → logprob: -6.122211456298828
    10. ',' → logprob: -6.247211456298828

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806525096297264
    2. '=' → logprob: -3.288065195083618
    3. '=int' → logprob: -10.788064956665039
    4. ' ' → logprob: -13.038064956665039
    5. ',' → logprob: -14.538064956665039
    6. ' =
' → logprob: -15.538064956665039
    7. ')' → logprob: -15.913064956665039
    8. '.' → logprob: -16.78806495666504
    9. 'int' → logprob: -16.91306495666504
    10. ' ' → logprob: -17.53806495666504

Token 77: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3868713080883026
    2. 'int' → logprob: -1.136871337890625
    3. '[int' → logprob: -15.886871337890625
    4. '=int' → logprob: -16.511871337890625
    5. '(int' → logprob: -17.136871337890625
    6. '<int' → logprob: -17.511871337890625
    7. ']int' → logprob: -17.636871337890625
    8. '	int' → logprob: -18.636871337890625
    9. ' ' → logprob: -18.636871337890625
    10. ' in' → logprob: -19.261871337890625

Token 78: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00861468818038702
    2. '(' → logprob: -4.758614540100098
    3. ' (' → logprob: -16.133615493774414
    4. '(
' → logprob: -17.633615493774414
    5. '()' → logprob: -17.758615493774414
    6. '(nn' → logprob: -17.883615493774414
    7. '((' → logprob: -18.508615493774414
    8. '(s' → logprob: -19.008615493774414
    9. '(x' → logprob: -19.133615493774414
    10. ' ' → logprob: -19.383615493774414

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.186122770188376e-05
    2. ')
' → logprob: -9.375091552734375
    3. ' )' → logprob: -13.750091552734375
    4. '**' → logprob: -14.000091552734375
    5. '))' → logprob: -14.250091552734375
    6. '<|end|>' → logprob: -14.500091552734375
    7. '*' → logprob: -14.625091552734375
    8. ')

' → logprob: -14.625091552734375
    9. ')`' → logprob: -14.750091552734375
    10. '`)' → logprob: -14.750091552734375

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045770383439958096
    2. '<|end|>' → logprob: -6.129577159881592
    3. '   ' → logprob: -6.504577159881592
    4. '        
' → logprob: -8.254576683044434
    5. ')' → logprob: -9.004576683044434
    6. ' ' → logprob: -9.129576683044434
    7. '        ' → logprob: -9.629576683044434
    8. '      ' → logprob: -9.629576683044434
    9. ',' → logprob: -10.254576683044434
    10. '	' → logprob: -10.379576683044434

Token 81: ' fut' (ID: 4073)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.14884379506111145
    2. 'grid' → logprob: -3.023843765258789
    3. '       ' → logprob: -3.273843765258789
    4. ' lines' → logprob: -4.398843765258789
    5. ' graph' → logprob: -4.523843765258789
    6. ' matrix' → logprob: -4.648843765258789
    7. ' a' → logprob: -5.773843765258789
    8. 'matrix' → logprob: -6.273843765258789
    9. ' data' → logprob: -6.648843765258789
    10. ' board' → logprob: -6.648843765258789

Token 82: 'ons' (ID: 1808)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.3004961609840393
    2. 'a' → logprob: -1.9254961013793945
    3. 'ures' → logprob: -2.3004961013793945
    4. 'u' → logprob: -5.0504961013793945
    5. 'ur' → logprob: -6.0504961013793945
    6. 'su' → logprob: -6.8004961013793945
    7. 'ured' → logprob: -6.9254961013793945
    8. 'ile' → logprob: -7.5504961013793945
    9. 'aba' → logprob: -8.050496101379395
    10. 'ime' → logprob: -8.550496101379395

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06367088854312897
    2. '=' → logprob: -2.9386708736419678
    3. '_positions' → logprob: -5.438671112060547
    4. '[' → logprob: -6.188671112060547
    5. '_' → logprob: -7.313671112060547
    6. '   ' → logprob: -8.063671112060547
    7. '=[]' → logprob: -8.313671112060547
    8. '[]' → logprob: -8.563671112060547
    9. 's' → logprob: -8.813671112060547
    10. ')' → logprob: -9.313671112060547

Token 84: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.03103088214993477
    2. ' [' → logprob: -4.031030654907227
    3. '[]' → logprob: -4.406030654907227
    4. '[' → logprob: -7.906030654907227
    5. ' [[]' → logprob: -9.031030654907227
    6. ' set' → logprob: -10.281030654907227
    7. ' ' → logprob: -11.156030654907227
    8. ' [(' → logprob: -11.406030654907227
    9. 'set' → logprob: -11.656030654907227
    10. ' []
' → logprob: -11.781030654907227

Token 85: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' head' (ID: 3189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.226673424243927
    2. ' for' → logprob: -1.6016733646392822
    3. '	for' → logprob: -7.726673603057861
    4. '[' → logprob: -7.851673603057861
    5. '   ' → logprob: -8.101673126220703
    6. '    ' → logprob: -9.851673126220703
    7. ' ' → logprob: -10.976673126220703
    8. '<|end|>' → logprob: -11.476673126220703
    9. '\t' → logprob: -11.976673126220703
    10. '' → logprob: -12.226673126220703

Token 87: '_cells' (ID: 93468)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15710404515266418
    2. '=' → logprob: -2.407104015350342
    3. ' =' → logprob: -3.782104015350342
    4. '_positions' → logprob: -4.657104015350342
    5. '   ' → logprob: -5.532104015350342
    6. '_' → logprob: -5.907104015350342
    7. '_pos' → logprob: -6.032104015350342
    8. '_x' → logprob: -6.282104015350342
    9. '=[]' → logprob: -6.657104015350342
    10. '_idx' → logprob: -6.907104015350342

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007670506834983826
    2. '=' → logprob: -5.0076704025268555
    3. '=[]' → logprob: -8.257670402526855
    4. ',' → logprob: -8.257670402526855
    5. '.append' → logprob: -9.132670402526855
    6. '<|end|>' → logprob: -9.382670402526855
    7. '   ' → logprob: -10.007670402526855
    8. ' ' → logprob: -10.507670402526855
    9. ')' → logprob: -10.507670402526855
    10. '[:]' → logprob: -10.757670402526855

Token 89: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.02217651531100273
    2. ' set' → logprob: -4.772176742553711
    3. '[]' → logprob: -5.022176742553711
    4. ' ' → logprob: -5.522176742553711
    5. 'set' → logprob: -6.147176742553711
    6. ' {}' → logprob: -7.772176742553711
    7. ' [' → logprob: -8.522176742553711
    8. ' []
' → logprob: -10.272176742553711
    9. '0' → logprob: -10.772176742553711
    10. '{}' → logprob: -11.147176742553711

Token 90: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001214237418025732
    2. '(' → logprob: -9.750121116638184
    3. '(),' → logprob: -10.625121116638184
    4. '([]' → logprob: -11.125121116638184
    5. '())' → logprob: -12.125121116638184
    6. '()]' → logprob: -12.250121116638184
    7. '([(' → logprob: -12.500121116638184
    8. '()
' → logprob: -13.125121116638184
    9. '()

' → logprob: -13.500121116638184
    10. ' ()' → logprob: -13.875121116638184

Token 91: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' foot' (ID: 6428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7857325673103333
    2. '<|end|>' → logprob: -1.6607325077056885
    3. ' for' → logprob: -2.2857325077056885
    4. 'for' → logprob: -2.4107325077056885
    5. '       ' → logprob: -3.0357325077056885
    6. '   ' → logprob: -3.9107325077056885
    7. '
' → logprob: -3.9107325077056885
    8. '' → logprob: -4.035732746124268
    9. '	for' → logprob: -4.285732746124268
    10. ' 
' → logprob: -4.785732746124268

Token 93: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.054563675075769424
    2. '_' → logprob: -3.4295637607574463
    3. 's' → logprob: -3.9295637607574463
    4. '_s' → logprob: -8.429563522338867
    5. ' _' → logprob: -8.554563522338867
    6. '_c' → logprob: -8.804563522338867
    7. '_positions' → logprob: -9.054563522338867
    8. 'cells' → logprob: -9.179563522338867
    9. '<|end|>' → logprob: -10.304563522338867
    10. '```' → logprob: -10.554563522338867

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011194007471203804
    2. '=' → logprob: -4.511194229125977
    3. '<|end|>' → logprob: -8.886194229125977
    4. ' ' → logprob: -12.511194229125977
    5. ' =
' → logprob: -13.761194229125977
    6. ')' → logprob: -14.386194229125977
    7. ',' → logprob: -14.386194229125977
    8. '<|end|>' → logprob: -14.761194229125977
    9. 's' → logprob: -14.886194229125977
    10. ' =)' → logprob: -15.261194229125977

Token 95: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.0081937275826931
    2. 'set' → logprob: -4.883193492889404
    3. ' ' → logprob: -8.008193969726562
    4. ' {}' → logprob: -8.883193969726562
    5. ' []' → logprob: -9.883193969726562
    6. '=set' → logprob: -10.883193969726562
    7. '	set' → logprob: -11.133193969726562
    8. ' {' → logprob: -11.258193969726562
    9. '{}' → logprob: -11.633193969726562
    10. ' ' → logprob: -12.633193969726562

Token 96: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011903452686965466
    2. '(' → logprob: -6.876190185546875
    3. '()
' → logprob: -8.876190185546875
    4. '()\' → logprob: -11.751190185546875
    5. '()

' → logprob: -12.501190185546875
    6. '()]' → logprob: -13.501190185546875
    7. '(),' → logprob: -13.751190185546875
    8. '();' → logprob: -14.126190185546875
    9. ' ()' → logprob: -14.251190185546875
    10. '   ' → logprob: -14.876190185546875

Token 97: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8338389992713928
    2. '
' → logprob: -1.833838939666748
    3. '<|end|>' → logprob: -1.833838939666748
    4. ' for' → logprob: -1.958838939666748
    5. 'for' (adapté à ' for') → logprob: -2.583838939666748
    6. '   ' → logprob: -4.583838939666748
    7. '	for' → logprob: -5.083838939666748
    8. '	' → logprob: -6.208838939666748
    9. '<|end|>' → logprob: -6.333838939666748
    10. ' ' → logprob: -6.333838939666748

Token 99: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0027081076987087727
    2. '_' → logprob: -6.3777079582214355
    3. ' ' → logprob: -7.2527079582214355
    4. ' i' → logprob: -8.127708435058594
    5. ' ' → logprob: -13.752708435058594
    6. ' ‌' → logprob: -14.502708435058594
    7. 'i' → logprob: -15.502708435058594
    8. ' ​' → logprob: -16.377708435058594
    9. ' ▁' → logprob: -16.877708435058594
    10. '_i' → logprob: -17.002708435058594

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2872585952281952
    2. 'in' → logprob: -1.4122586250305176
    3. ' ' → logprob: -5.287258625030518
    4. '_' → logprob: -8.28725814819336
    5. 'i' → logprob: -8.66225814819336
    6. ' _' → logprob: -8.66225814819336
    7. 'range' → logprob: -8.78725814819336
    8. '<|end|>' → logprob: -9.66225814819336
    9. ' i' → logprob: -9.78725814819336
    10. 'n' → logprob: -9.78725814819336

Token 101: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07890003174543381
    2. ' range' → logprob: -2.578900098800659
    3. '(range' → logprob: -12.203900337219238
    4. '	range' → logprob: -12.578900337219238
    5. 'rang' → logprob: -14.328900337219238
    6. 'ran' → logprob: -14.828900337219238
    7. ' xrange' → logprob: -14.953900337219238
    8. '_range' → logprob: -15.453900337219238
    9. ' ' → logprob: -16.578899383544922
    10. '<|end|>' → logprob: -16.828899383544922

Token 102: '(n' (ID: 2406)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06233770400285721
    2. '(n' → logprob: -3.312337636947632
    3. 'n' → logprob: -3.812337636947632
    4. ' (' → logprob: -6.562337875366211
    5. '(' → logprob: -7.687337875366211
    6. '	n' → logprob: -10.437337875366211
    7. '_n' → logprob: -12.437337875366211
    8. ' ' → logprob: -14.062337875366211
    9. ' range' → logprob: -15.062337875366211
    10. '   ' → logprob: -15.562337875366211

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002359594451263547
    2. ' ):' → logprob: -6.252359390258789
    3. '():' → logprob: -8.252359390258789
    4. '):
' → logprob: -9.252359390258789
    5. ':' → logprob: -10.002359390258789
    6. ')' → logprob: -11.377359390258789
    7. '   ' → logprob: -12.127359390258789
    8. '(n' → logprob: -13.127359390258789
    9. 'n' → logprob: -13.377359390258789
    10. ',' → logprob: -14.002359390258789

Token 104: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7005617618560791
    2. ':' → logprob: -1.325561761856079
    3. '           ' → logprob: -2.075561761856079
    4. ',' → logprob: -3.325561761856079
    5. '<|end|>' → logprob: -3.325561761856079
    6. '   ' → logprob: -3.825561761856079
    7. '<|end|>' → logprob: -5.3255615234375
    8. ' (' → logprob: -6.2005615234375
    9. '):' → logprob: -6.5755615234375
    10. '():' → logprob: -6.5755615234375

Token 105: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006681748200207949
    2. ' x' → logprob: -5.7566819190979
    3. ' 
' → logprob: -6.6316819190979
    4. ' s' → logprob: -6.7566819190979
    5. ' line' → logprob: -7.7566819190979
    6. ' ' → logprob: -8.256681442260742
    7. ' f' → logprob: -9.631681442260742
    8. ' input' → logprob: -10.006681442260742
    9. '    ' → logprob: -10.131681442260742
    10. 'x' → logprob: -10.631681442260742

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00979386456310749
    2. '=' → logprob: -4.634793758392334
    3. 's' → logprob: -10.384794235229492
    4. '=line' → logprob: -12.759794235229492
    5. '_' → logprob: -13.759794235229492
    6. ' ' → logprob: -13.759794235229492
    7. '   ' → logprob: -14.634794235229492
    8. ')' → logprob: -14.634794235229492
    9. '    ' → logprob: -15.384794235229492
    10. ',' → logprob: -15.384794235229492

Token 107: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.02978532575070858
    2. 'sys' → logprob: -3.529785394668579
    3. ' input' → logprob: -10.52978515625
    4. 'input' → logprob: -12.02978515625
    5. '	sys' → logprob: -13.65478515625
    6. '=sys' → logprob: -15.02978515625
    7. ' list' → logprob: -15.52978515625
    8. '   ' → logprob: -15.90478515625
    9. '(sys' → logprob: -16.02978515625
    10. ' ' → logprob: -16.27978515625

Token 108: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0024968255311250687
    2. 'stdin' → logprob: -6.252496719360352
    3. '.readline' → logprob: -7.627496719360352
    4. '.' → logprob: -10.502496719360352
    5. 'in' → logprob: -10.877496719360352
    6. '.stdout' → logprob: -11.377496719360352
    7. '.argv' → logprob: -11.877496719360352
    8. '.in' → logprob: -12.002496719360352
    9. '(stdin' → logprob: -13.002496719360352
    10. '```' → logprob: -13.127496719360352

Token 109: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.650518920039758e-06
    2. '.' → logprob: -12.625003814697266
    3. '.readlines' → logprob: -15.875003814697266
    4. '.stdin' → logprob: -16.500003814697266
    5. '().' → logprob: -19.125003814697266
    6. '```' → logprob: -19.250003814697266
    7. ' readline' → logprob: -19.500003814697266
    8. '.read' → logprob: -19.875003814697266
    9. 'read' → logprob: -20.625003814697266
    10. 'r' → logprob: -21.375003814697266

Token 110: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02325642853975296
    2. '()' → logprob: -3.773256540298462
    3. ' ().' → logprob: -13.273256301879883
    4. '()).' → logprob: -13.523256301879883
    5. '>().' → logprob: -13.648256301879883
    6. '().'' → logprob: -13.898256301879883
    7. '(' → logprob: -14.023256301879883
    8. '()].' → logprob: -14.273256301879883
    9. '())' → logprob: -14.398256301879883
    10. ' ()' → logprob: -14.773256301879883

Token 111: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.836499985889532e-05
    2. 'rstrip' → logprob: -10.2500581741333
    3. 'split' → logprob: -10.7500581741333
    4. ' strip' → logprob: -13.5000581741333
    5. 'str' → logprob: -18.250059127807617
    6. 'stripe' → logprob: -18.750059127807617
    7. '.strip' → logprob: -18.750059127807617
    8. '(strip' → logprob: -18.875059127807617
    9. '_strip' → logprob: -19.500059127807617
    10. '-strip' → logprob: -20.125059127807617

Token 112: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002879145904444158
    2. '().' → logprob: -8.500288009643555
    3. '(' → logprob: -9.625288009643555
    4. '()
' → logprob: -11.375288009643555
    5. '())' → logprob: -13.500288009643555
    6. '()

' → logprob: -13.625288009643555
    7. '()\' → logprob: -14.375288009643555
    8. '()`' → logprob: -14.500288009643555
    9. '(),' → logprob: -14.500288009643555
    10. '()]' → logprob: -14.625288009643555

Token 113: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01057752501219511
    2. 'x' → logprob: -5.51057767868042
    3. 'xy' → logprob: -6.26057767868042
    4. 'cells' → logprob: -6.88557767868042
    5. 'parts' → logprob: -7.01057767868042
    6. 'coords' → logprob: -7.13557767868042
    7. 'coordinates' → logprob: -7.26057767868042
    8. 's' → logprob: -8.260577201843262
    9. 'data' → logprob: -8.885577201843262
    10. 'tokens' → logprob: -9.010577201843262

Token 114: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009119106456637383
    2. '(' → logprob: -5.134119033813477
    3. '('' → logprob: -5.759119033813477
    4. '()]' → logprob: -12.009119033813477
    5. '())' → logprob: -12.384119033813477
    6. '(),' → logprob: -12.509119033813477
    7. '("("' → logprob: -12.509119033813477
    8. '(',' → logprob: -13.009119033813477
    9. '()[' → logprob: -13.009119033813477
    10. '()?>' → logprob: -14.009119033813477

Token 115: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4800775945186615
    2. '           ' → logprob: -1.3550776243209839
    3. '   ' → logprob: -2.9800775051116943
    4. '<|end|>' → logprob: -3.8550775051116943
    5. '    ' → logprob: -4.480077743530273
    6. ' ' → logprob: -4.730077743530273
    7. '()' → logprob: -4.730077743530273
    8. '        ' → logprob: -5.480077743530273
    9. '  ' → logprob: -5.730077743530273
    10. '        
' → logprob: -5.980077743530273

Token 116: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.05782236531376839
    2. ' x' → logprob: -2.9328224658966064
    3. 'f' → logprob: -6.807822227478027
    4. '           ' → logprob: -7.057822227478027
    5. '       ' → logprob: -7.557822227478027
    6. ' f' → logprob: -9.182822227478027
    7. 'a' → logprob: -9.182822227478027
    8. '   ' → logprob: -10.057822227478027
    9. 'xi' → logprob: -11.057822227478027
    10. ' ' → logprob: -11.182822227478027

Token 117: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013988017104566097
    2. '1' → logprob: -4.388988018035889
    3. '0' → logprob: -7.888988018035889
    4. ' =' → logprob: -8.13898754119873
    5. '=' → logprob: -8.26398754119873
    6. ',x' → logprob: -8.38898754119873
    7. ',y' → logprob: -9.01398754119873
    8. ' ,' → logprob: -9.63898754119873
    9. '<|end|>' → logprob: -9.76398754119873
    10. '=int' → logprob: -11.38898754119873

Token 118: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07888989895582199
    2. ' int' → logprob: -2.578889846801758
    3. '[int' → logprob: -16.828889846801758
    4. '=int' → logprob: -16.953889846801758
    5. '(int' → logprob: -17.203889846801758
    6. '	int' → logprob: -17.203889846801758
    7. '<int' → logprob: -18.703889846801758
    8. '   ' → logprob: -19.828889846801758
    9. ']int' → logprob: -19.828889846801758
    10. ' ' → logprob: -19.953889846801758

Token 119: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.16022849082946777
    2. '(' → logprob: -1.9102284908294678
    3. '(
' → logprob: -13.035228729248047
    4. '(

' → logprob: -13.535228729248047
    5. '(x' → logprob: -15.535228729248047
    6. '(lines' → logprob: -15.660228729248047
    7. '#line' → logprob: -15.785228729248047
    8. '[line' → logprob: -16.660228729248047
    9. '(Line' → logprob: -16.660228729248047
    10. '=line' → logprob: -16.785228729248047

Token 120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009508833172731102
    2. '(' → logprob: -7.000950813293457
    3. '()[' → logprob: -10.875950813293457
    4. '0' → logprob: -11.000950813293457
    5. '   ' → logprob: -14.000950813293457
    6. ')' → logprob: -14.375950813293457
    7. ' [' → logprob: -14.500950813293457
    8. ')[' → logprob: -14.625950813293457
    9. '[
' → logprob: -15.000950813293457
    10. '[-' → logprob: -15.250950813293457

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.407366916188039e-05
    2. '1' → logprob: -9.875054359436035
    3. ' ' → logprob: -13.625054359436035
    4. '[' → logprob: -14.125054359436035
    5. '2' → logprob: -15.375054359436035
    6. '-' → logprob: -15.750054359436035
    7. '   ' → logprob: -16.50005340576172
    8. ')' → logprob: -16.75005340576172
    9. '
' → logprob: -17.25005340576172
    10. '3' → logprob: -17.25005340576172

Token 122: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007878291653469205
    2. '])' → logprob: -7.875787734985352
    3. ')]' → logprob: -9.375787734985352
    4. '),' → logprob: -9.375787734985352
    5. ')
' → logprob: -9.750787734985352
    6. '[' → logprob: -9.750787734985352
    7. ',' → logprob: -10.000787734985352
    8. ' )' → logprob: -10.250787734985352
    9. ')])' → logprob: -11.750787734985352
    10. '))' → logprob: -12.125787734985352

Token 123: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.014232496730983257
    2. ' y' → logprob: -4.264232635498047
    3. '	y' → logprob: -10.514232635498047
    4. '<|end|>' → logprob: -10.764232635498047
    5. ' ' → logprob: -11.139232635498047
    6. ',y' → logprob: -13.139232635498047
    7. '1' → logprob: -13.514232635498047
    8. '  ' → logprob: -14.514232635498047
    9. '    ' → logprob: -14.514232635498047
    10. ''y' → logprob: -14.639232635498047

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10119551420211792
    2. ' =' → logprob: -2.4761955738067627
    3. '<|end|>' → logprob: -4.601195335388184
    4. '=int' → logprob: -7.226195335388184
    5. '<|end|>' → logprob: -7.601195335388184
    6. ',' → logprob: -7.851195335388184
    7. ')' → logprob: -8.351195335388184
    8. '=
' → logprob: -8.601195335388184
    9. ' ' → logprob: -10.226195335388184
    10. ' =
' → logprob: -11.351195335388184

Token 126: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014168446883559227
    2. ' int' → logprob: -4.2641682624816895
    3. '[int' → logprob: -13.139168739318848
    4. '(int' → logprob: -13.764168739318848
    5. '<int' → logprob: -14.139168739318848
    6. '=int' → logprob: -14.264168739318848
    7. ']int' → logprob: -15.639168739318848
    8. '	int' → logprob: -15.639168739318848
    9. ':int' → logprob: -16.01416778564453
    10. ',int' → logprob: -17.01416778564453

Token 127: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -4.727905979962088e-05
    2. '(' → logprob: -10.87504768371582
    3. '[line' → logprob: -10.87504768371582
    4. '(int' → logprob: -12.25004768371582
    5. '(x' → logprob: -12.87504768371582
    6. ')' → logprob: -13.62504768371582
    7. '=line' → logprob: -14.87504768371582
    8. '#line' → logprob: -16.12504768371582
    9. ' (' → logprob: -16.12504768371582
    10. ',line' → logprob: -16.25004768371582

Token 128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.435139898210764e-05
    2. ')' → logprob: -10.125083923339844
    3. '(' → logprob: -10.250083923339844
    4. '[
' → logprob: -12.625083923339844
    5. '1' → logprob: -13.125083923339844
    6. '0' → logprob: -13.875083923339844
    7. '()[' → logprob: -14.250083923339844
    8. '[line' → logprob: -15.500083923339844
    9. ' [' → logprob: -15.625083923339844
    10. '   ' → logprob: -15.625083923339844

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011840384686365724
    2. '0' → logprob: -6.751183986663818
    3. ' ' → logprob: -11.501184463500977
    4. '-' → logprob: -14.126184463500977
    5. '   ' → logprob: -14.126184463500977
    6. '])' → logprob: -14.376184463500977
    7. ')' → logprob: -14.501184463500977
    8. '
' → logprob: -15.688684463500977
    9. '```' → logprob: -16.063684463500977
    10. '2' → logprob: -16.126184463500977

Token 130: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001664717128733173
    2. ')
' → logprob: -9.250166893005371
    3. ')]' → logprob: -10.000166893005371
    4. '])' → logprob: -11.875166893005371
    5. '),' → logprob: -12.125166893005371
    6. ')])' → logprob: -12.875166893005371
    7. '<|end|>' → logprob: -13.000166893005371
    8. '))' → logprob: -13.375166893005371
    9. ' )' → logprob: -13.750166893005371
    10. ']' → logprob: -14.000166893005371

Token 131: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3080275058746338
    2. 'd' → logprob: -1.4330275058746338
    3. '           ' → logprob: -1.8080275058746338
    4. ' orientation' → logprob: -3.433027505874634
    5. ' d' → logprob: -3.558027505874634
    6. 'f' → logprob: -3.808027505874634
    7. ' ,' → logprob: -3.808027505874634
    8. '       ' → logprob: -3.933027505874634
    9. 'orientation' → logprob: -3.933027505874634
    10. '            
' → logprob: -4.058027267456055

Token 132: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.6803091764450073
    2. ' d' → logprob: -1.9303091764450073
    3. 'h' → logprob: -2.430309295654297
    4. 'o' → logprob: -2.805309295654297
    5. 'x' → logprob: -3.180309295654297
    6. 'a' → logprob: -3.930309295654297
    7. 'w' → logprob: -4.055309295654297
    8. ' o' → logprob: -4.180309295654297
    9. ' h' → logprob: -4.305309295654297
    10. 'dx' → logprob: -4.430309295654297

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5766785740852356
    2. ' =' → logprob: -0.8266785740852356
    3. '<|end|>' → logprob: -8.076678276062012
    4. 'irection' → logprob: -8.701678276062012
    5. 'ef' → logprob: -9.576678276062012
    6. ')' → logprob: -10.951678276062012
    7. 'f' → logprob: -11.076678276062012
    8. '=''' → logprob: -11.201678276062012
    9. 'irections' → logprob: -11.201678276062012
    10. '='' → logprob: -11.201678276062012

Token 134: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.20271830260753632
    2. 'line' → logprob: -1.7027182579040527
    3. ' int' → logprob: -6.952718257904053
    4. 'int' → logprob: -8.327718734741211
    5. ' ' → logprob: -9.702718734741211
    6. ' '' → logprob: -10.952718734741211
    7. ''' → logprob: -11.827718734741211
    8. '(line' → logprob: -11.952718734741211
    9. '	line' → logprob: -11.952718734741211
    10. '=line' → logprob: -12.952718734741211

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023107275774236768
    2. '2' → logprob: -8.37523078918457
    3. '(' → logprob: -15.75023078918457
    4. '3' → logprob: -16.12523078918457
    5. '[]' → logprob: -16.87523078918457
    6. '[-' → logprob: -17.12523078918457
    7. ' [' → logprob: -17.25023078918457
    8. '()[' → logprob: -17.50023078918457
    9. '   ' → logprob: -17.62523078918457
    10. '```' → logprob: -17.75023078918457

Token 136: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14312371611595154
    2. '2' → logprob: -2.0181236267089844
    3. '1' → logprob: -8.018123626708984
    4. ' ' → logprob: -9.518123626708984
    5. ']' → logprob: -10.768123626708984
    6. '])' → logprob: -11.518123626708984
    7. '   ' → logprob: -12.268123626708984
    8. '-' → logprob: -12.768123626708984
    9. '[' → logprob: -13.705623626708984
    10. '3' → logprob: -14.018123626708984

Token 137: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016916269436478615
    2. ')]' → logprob: -4.516916275024414
    3. ' )' → logprob: -5.516916275024414
    4. '')' → logprob: -7.266916275024414
    5. ']' → logprob: -7.641916275024414
    6. ')
' → logprob: -8.266916275024414
    7. '']' → logprob: -8.891916275024414
    8. '')]' → logprob: -9.141916275024414
    9. '])' → logprob: -10.016916275024414
    10. ''])' → logprob: -10.641916275024414

Token 138: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010040088556706905
    2. ' 
' → logprob: -5.635040283203125
    3. ' if' → logprob: -6.135040283203125
    4. '        ' → logprob: -6.385040283203125
    5. '<|end|>' → logprob: -6.385040283203125
    6. '       ' → logprob: -7.885040283203125
    7. 'if' (adapté à ' if') → logprob: -8.635040283203125
    8. '
' → logprob: -9.760040283203125
    9. ' ' → logprob: -10.010040283203125
    10. '  ' → logprob: -10.010040283203125

Token 140: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.011051355861127377
    2. 'd' → logprob: -4.511051177978516
    3. ' ' → logprob: -13.011051177978516
    4. ' len' → logprob: -15.261051177978516
    5. '_d' → logprob: -15.511051177978516
    6. 'len' → logprob: -15.761051177978516
    7. ' ' → logprob: -15.886051177978516
    8. '(d' → logprob: -16.386051177978516
    9. '	d' → logprob: -16.386051177978516
    10. '_' → logprob: -16.448551177978516

Token 141: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1008872389793396
    2. '==' → logprob: -2.3508872985839844
    3. '[' → logprob: -8.600887298583984
    4. '=' → logprob: -8.600887298583984
    5. ')' → logprob: -8.975887298583984
    6. '=='' → logprob: -9.850887298583984
    7. ' =='' → logprob: -10.350887298583984
    8. '<|end|>' → logprob: -10.475887298583984
    9. ' =' → logprob: -10.600887298583984
    10. ' ' → logprob: -11.225887298583984

Token 142: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1419169306755066
    2. ' '' → logprob: -2.3919169902801514
    3. ''H' → logprob: -4.391916751861572
    4. ''O' → logprob: -4.766916751861572
    5. ''A' → logprob: -4.766916751861572
    6. ''U' → logprob: -5.266916751861572
    7. ''o' → logprob: -6.141916751861572
    8. ''I' → logprob: -6.641916751861572
    9. '"' → logprob: -7.016916751861572
    10. ''a' → logprob: -7.016916751861572

Token 143: 'x' (ID: 87)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2780449390411377
    2. 'h' → logprob: -1.9030449390411377
    3. '0' → logprob: -3.4030449390411377
    4. '1' → logprob: -4.528044700622559
    5. ''' → logprob: -4.653044700622559
    6. 'S' → logprob: -5.153044700622559
    7. 'x' → logprob: -5.403044700622559
    8. 'o' → logprob: -5.653044700622559
    9. 'N' → logprob: -5.903044700622559
    10. 'E' → logprob: -5.903044700622559

Token 144: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.6531469225883484
    2. '':' → logprob: -1.2781469821929932
    3. ''' → logprob: -2.528146982192993
    4. '+' → logprob: -2.653146982192993
    5. '1' → logprob: -4.028146743774414
    6. '0' → logprob: -4.653146743774414
    7. '-' → logprob: -5.028146743774414
    8. '2' → logprob: -5.153146743774414
    9. 'h' → logprob: -5.903146743774414
    10. 'x' → logprob: -6.403146743774414

Token 145: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006124075502157211
    2. ':
' → logprob: -5.506124019622803
    3. '==' → logprob: -8.131124496459961
    4. '   ' → logprob: -8.131124496459961
    5. '<|end|>' → logprob: -8.256124496459961
    6. '=' → logprob: -8.756124496459961
    7. '           ' → logprob: -8.881124496459961
    8. '':' → logprob: -9.006124496459961
    9. ' ==' → logprob: -9.006124496459961
    10. '       ' → logprob: -9.131124496459961

Token 146: ' #' (ID: 1069)
  Prédit: ' head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' head' → logprob: -0.18031276762485504
    2. ' foot' → logprob: -3.0553128719329834
    3. 'head' → logprob: -3.3053128719329834
    4. ' fut' → logprob: -3.8053128719329834
    5. ' 
' → logprob: -4.180312633514404
    6. '
' → logprob: -4.555312633514404
    7. 'foot' → logprob: -4.805312633514404
    8. ' continue' → logprob: -4.805312633514404
    9. ' ' → logprob: -5.555312633514404
    10. '<|end|>' → logprob: -6.305312633514404

Token 147: ' fut' (ID: 4073)
  Prédit: ' head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' head' → logprob: -0.21198663115501404
    2. 'head' → logprob: -1.8369866609573364
    3. ' foot' → logprob: -4.711986541748047
    4. 'foot' → logprob: -4.836986541748047
    5. '#' → logprob: -5.336986541748047
    6. ' #' → logprob: -5.836986541748047
    7. ' continue' → logprob: -6.461986541748047
    8. ' pass' → logprob: -6.461986541748047
    9. ' fut' → logprob: -7.086986541748047
    10. 'continue' → logprob: -8.024486541748047

Token 148: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.39057794213294983
    2. 'ons' → logprob: -1.1405779123306274
    3. '   ' → logprob: -7.265577793121338
    4. '_' → logprob: -7.640577793121338
    5. 's' → logprob: -7.765577793121338
    6. '_cells' → logprob: -8.015578269958496
    7. '       ' → logprob: -8.265578269958496
    8. 'for' → logprob: -8.640578269958496
    9. 'uns' → logprob: -9.265578269958496
    10. ')' → logprob: -9.265578269958496

Token 149: ' occupies' (ID: 134274)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.6712114214897156
    2. 's' → logprob: -1.0462114810943604
    3. '.append' → logprob: -2.0462114810943604
    4. '_positions' → logprob: -5.546211242675781
    5. 'cells' → logprob: -7.046211242675781
    6. ' =' → logprob: -7.171211242675781
    7. '_' → logprob: -7.796211242675781
    8. '_heads' → logprob: -7.796211242675781
    9. '.' → logprob: -7.921211242675781
    10. '_coords' → logprob: -8.421211242675781

Token 150: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.118612140417099
    2. '(x' → logprob: -2.368612051010132
    3. '(' → logprob: -4.368612289428711
    4. '[(' → logprob: -6.118612289428711
    5. ' [(' → logprob: -6.618612289428711
    6. ' ' → logprob: -7.743612289428711
    7. ' cells' → logprob: -7.743612289428711
    8. ' two' → logprob: -7.993612289428711
    9. ' three' → logprob: -8.243612289428711
    10. ' {(' → logprob: -8.493612289428711

Token 151: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00893279816955328
    2. ' x' → logprob: -5.258932590484619
    3. '(x' → logprob: -5.633932590484619
    4. ' (' → logprob: -9.258933067321777
    5. ')x' → logprob: -11.633933067321777
    6. ')' → logprob: -12.133933067321777
    7. '(' → logprob: -12.633933067321777
    8. ',x' → logprob: -12.883933067321777
    9. ',' → logprob: -13.633933067321777
    10. '),' → logprob: -15.883933067321777

Token 152: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5284519195556641
    2. ',' → logprob: -0.9034519195556641
    3. ',x' → logprob: -5.903451919555664
    4. ' ,' → logprob: -6.403451919555664
    5. '+' → logprob: -7.778451919555664
    6. '-' → logprob: -8.153451919555664
    7. '   ' → logprob: -8.903451919555664
    8. ' ' → logprob: -11.028451919555664
    9. ' +' → logprob: -11.403451919555664
    10. ' -' → logprob: -11.653451919555664

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008088137023150921
    2. '),' → logprob: -5.633088111877441
    3. ' )' → logprob: -6.258088111877441
    4. ',' → logprob: -6.383088111877441
    5. '),(' → logprob: -7.633088111877441
    6. 'and' → logprob: -9.258088111877441
    7. ' and' → logprob: -9.508088111877441
    8. ')
' → logprob: -10.258088111877441
    9. ',x' → logprob: -10.508088111877441
    10. '-' → logprob: -10.508088111877441

Token 154: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7921317219734192
    2. ' and' → logprob: -0.7921317219734192
    3. ' ,' → logprob: -2.6671316623687744
    4. ')' → logprob: -4.0421319007873535
    5. 'and' → logprob: -5.9171319007873535
    6. '),' → logprob: -6.4171319007873535
    7. '           ' → logprob: -7.1671319007873535
    8. '<|end|>' → logprob: -8.042131423950195
    9. ',
' → logprob: -8.417131423950195
    10. '   ' → logprob: -8.667131423950195

Token 155: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12695729732513428
    2. '(x' → logprob: -2.126957416534424
    3. ' ' → logprob: -11.251956939697266
    4. '(' → logprob: -11.626956939697266
    5. '   ' → logprob: -12.751956939697266
    6. '(s' → logprob: -14.251956939697266
    7. '(y' → logprob: -14.501956939697266
    8. '
' → logprob: -14.626956939697266
    9. ' `(' → logprob: -15.001956939697266
    10. '  ' → logprob: -15.251956939697266

Token 156: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12633636593818665
    2. ' x' → logprob: -2.2513363361358643
    3. '(x' → logprob: -4.751336574554443
    4. ' (' → logprob: -5.376336574554443
    5. ',' → logprob: -9.626336097717285
    6. ',x' → logprob: -11.001336097717285
    7. ' ,' → logprob: -11.251336097717285
    8. '(' → logprob: -11.376336097717285
    9. ')' → logprob: -11.501336097717285
    10. ')x' → logprob: -11.626336097717285

Token 157: '+' (ID: 10)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.07882732897996902
    2. '+' → logprob: -2.828827381134033
    3. ',' → logprob: -4.203827381134033
    4. ',(' → logprob: -6.953827381134033
    5. ',x' → logprob: -8.203826904296875
    6. ' +' → logprob: -8.578826904296875
    7. ' ,' → logprob: -9.078826904296875
    8. '-' → logprob: -9.203826904296875
    9. ',
' → logprob: -10.453826904296875
    10. '   ' → logprob: -10.453826904296875

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0770811066031456
    2. '0' → logprob: -2.7020812034606934
    3. ' ' → logprob: -4.952081203460693
    4. '
' → logprob: -10.702080726623535
    5. ',' → logprob: -11.702080726623535
    6. '   ' → logprob: -12.202080726623535
    7. ')' → logprob: -12.452080726623535
    8. ' ,' → logprob: -12.452080726623535
    9. '```' → logprob: -13.452080726623535
    10. '2' → logprob: -13.452080726623535

Token 159: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.01825740374624729
    2. ',' → logprob: -4.0182576179504395
    3. ',x' → logprob: -9.393257141113281
    4. ' ,' → logprob: -10.768257141113281
    5. ',Y' → logprob: -13.768257141113281
    6. ',n' → logprob: -15.018257141113281
    7. ',
' → logprob: -15.268257141113281
    8. ',num' → logprob: -15.768257141113281
    9. ',user' → logprob: -16.01825714111328
    10. ',int' → logprob: -16.26825714111328

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010010129772126675
    2. ')
' → logprob: -7.001000881195068
    3. '       ' → logprob: -10.001001358032227
    4. '),' → logprob: -11.001001358032227
    5. ' )' → logprob: -11.376001358032227
    6. '           ' → logprob: -12.251001358032227
    7. '))' → logprob: -13.126001358032227
    8. ')
' → logprob: -13.251001358032227
    9. '   ' → logprob: -13.501001358032227
    10. ')

' → logprob: -13.751001358032227

Token 161: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3055601418018341
    2. ')' → logprob: -1.9305601119995117
    3. '               ' → logprob: -2.5555601119995117
    4. '       ' → logprob: -3.9305601119995117
    5. '<|end|>' → logprob: -4.430560111999512
    6. '
' → logprob: -5.180560111999512
    7. ',' → logprob: -6.805560111999512
    8. '            
' → logprob: -7.805560111999512
    9. ' )' → logprob: -8.180560111999512
    10. ')
' → logprob: -8.180560111999512

Token 162: ' h' (ID: 312)
  Prédit: ' fut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fut' → logprob: -1.1811619997024536
    2. '           ' → logprob: -1.5561619997024536
    3. '       ' → logprob: -1.6811619997024536
    4. ' foot' → logprob: -1.9311619997024536
    5. ' head' → logprob: -2.931161880493164
    6. 'foot' → logprob: -2.931161880493164
    7. '
' → logprob: -4.181161880493164
    8. 'f' → logprob: -4.306161880493164
    9. 'head' → logprob: -5.306161880493164
    10. '        ' → logprob: -5.806161880493164

Token 163: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6975623965263367
    2. 'ead' → logprob: -0.6975623965263367
    3. 'ea' → logprob: -6.447562217712402
    4. 'eat' → logprob: -7.572562217712402
    5. ' =' → logprob: -7.947562217712402
    6. ',' → logprob: -8.510062217712402
    7. 't' → logprob: -8.635062217712402
    8. 'f' → logprob: -9.322562217712402
    9. '```' → logprob: -9.385062217712402
    10. ' e' → logprob: -9.447562217712402

Token 164: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7842950224876404
    2. '(x' → logprob: -1.0342950820922852
    3. 'x' → logprob: -1.7842950820922852
    4. ' x' → logprob: -3.909295082092285
    5. '(' → logprob: -9.784295082092285
    6. '{x' → logprob: -11.034295082092285
    7. '   ' → logprob: -11.159295082092285
    8. ' ' → logprob: -11.284295082092285
    9. ')' → logprob: -13.409295082092285
    10. '1' → logprob: -13.534295082092285

Token 165: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.176947600673884e-05
    2. ' x' → logprob: -10.750021934509277
    3. '(x' → logprob: -15.625021934509277
    4. ')x' → logprob: -15.625021934509277
    5. ')' → logprob: -18.37502098083496
    6. ',x' → logprob: -19.00002098083496
    7. '	x' → logprob: -19.25002098083496
    8. '"x' → logprob: -19.37502098083496
    9. '   ' → logprob: -19.50002098083496
    10. ',' → logprob: -20.37502098083496

Token 166: ',' (ID: 11)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.6331890225410461
    2. ',' → logprob: -0.7581890225410461
    3. ' ,' → logprob: -7.5081892013549805
    4. ',x' → logprob: -11.13318920135498
    5. '+' → logprob: -11.88318920135498
    6. ',
' → logprob: -12.13318920135498
    7. ',n' → logprob: -12.88318920135498
    8. '<|end|>' → logprob: -13.50818920135498
    9. '   ' → logprob: -13.75818920135498
    10. ' ' → logprob: -14.00818920135498

Token 167: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003357006062287837
    2. ' y' → logprob: -8.000335693359375
    3. '	y' → logprob: -16.250335693359375
    4. ')y' → logprob: -16.375335693359375
    5. ',y' → logprob: -17.250335693359375
    6. '   ' → logprob: -17.750335693359375
    7. ' ' → logprob: -17.875335693359375
    8. '    ' → logprob: -18.875335693359375
    9. '  ' → logprob: -19.375335693359375
    10. ')' → logprob: -19.500335693359375

Token 168: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007351516745984554
    2. ')
' → logprob: -5.007351398468018
    3. '+' → logprob: -7.507351398468018
    4. ' )' → logprob: -9.757351875305176
    5. ')

' → logprob: -12.007351875305176
    6. ',' → logprob: -12.132351875305176
    7. '),' → logprob: -12.757351875305176
    8. ' +' → logprob: -12.882351875305176
    9. ');' → logprob: -13.132351875305176
    10. '<|end|>' → logprob: -13.132351875305176

Token 169: '    ' (ID: 257)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25352954864501953
    2. '           ' → logprob: -2.0035295486450195
    3. '       ' → logprob: -3.3785295486450195
    4. ')
' → logprob: -4.0035295486450195
    5. ')' → logprob: -4.7535295486450195
    6. 'foot' → logprob: -5.1285295486450195
    7. ',' → logprob: -5.2535295486450195
    8. '               ' → logprob: -5.3785295486450195
    9. '<|end|>' → logprob: -5.3785295486450195
    10. 'f' → logprob: -6.0035295486450195

Token 170: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15756624937057495
    2. ')
' → logprob: -2.0325663089752197
    3. '
' → logprob: -5.157566070556641
    4. '           ' → logprob: -5.407566070556641
    5. '<|end|>' → logprob: -6.532566070556641
    6. '       ' → logprob: -7.032566070556641
    7. 'foot' → logprob: -7.407566070556641
    8. ',' → logprob: -7.532566070556641
    9. '               ' → logprob: -8.53256607055664
    10. '+' → logprob: -8.65756607055664

Token 171: ' head' (ID: 3189)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0639849305152893
    2. ' (' → logprob: -2.9389848709106445
    3. 'f' → logprob: -5.6889848709106445
    4. 'h' → logprob: -6.0639848709106445
    5. 'foot' → logprob: -6.8139848709106445
    6. '   ' → logprob: -7.4389848709106445
    7. '(' → logprob: -7.8139848709106445
    8. 'x' → logprob: -8.188984870910645
    9. 'head' → logprob: -8.188984870910645
    10. ' ' → logprob: -8.938984870910645

Token 172: ' at' (ID: 540)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5281980633735657
    2. ')' → logprob: -1.028198003768921
    3. '<|end|>' → logprob: -3.403198003768921
    4. ',
' → logprob: -4.2781982421875
    5. ' ,' → logprob: -6.6531982421875
    6. ')
' → logprob: -6.6531982421875
    7. ',x' → logprob: -7.2781982421875
    8. '
' → logprob: -7.5281982421875
    9. ',)' → logprob: -7.6531982421875
    10. '       ' → logprob: -7.6531982421875

Token 173: ' left' (ID: 3561)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.48177778720855713
    2. 'x' → logprob: -0.9817777872085571
    3. ' (' → logprob: -4.981777667999268
    4. ' x' → logprob: -7.231777667999268
    5. '(' → logprob: -9.981778144836426
    6. ')' → logprob: -10.731778144836426
    7. ')x' → logprob: -12.481778144836426
    8. 'h' → logprob: -12.606778144836426
    9. 'the' → logprob: -13.106778144836426
    10. '```' → logprob: -13.856778144836426

Token 174: ' cell' (ID: 4206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4378257095813751
    2. '<|end|>' → logprob: -1.3128256797790527
    3. ',' → logprob: -2.9378256797790527
    4. '           ' → logprob: -4.437825679779053
    5. '       ' → logprob: -5.062825679779053
    6. ',
' → logprob: -5.562825679779053
    7. '
' → logprob: -5.812825679779053
    8. '<|end|>' → logprob: -6.062825679779053
    9. ')
' → logprob: -6.312825679779053
    10. ' )' → logprob: -7.312825679779053

Token 175: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9057021141052246
    2. '       ' → logprob: -1.1557021141052246
    3. ')' → logprob: -1.9057021141052246
    4. '<|end|>' → logprob: -3.0307021141052246
    5. ',' → logprob: -3.4057021141052246
    6. '               ' → logprob: -3.7807021141052246
    7. '
' → logprob: -4.530702114105225
    8. ')
' → logprob: -4.530702114105225
    9. '<|end|>' → logprob: -7.155702114105225
    10. '   ' → logprob: -7.405702114105225

Token 177: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.008407481014728546
    2. '(x' → logprob: -5.8834075927734375
    3. ' f' → logprob: -6.3834075927734375
    4. '           ' → logprob: -6.5084075927734375
    5. '(' → logprob: -7.3834075927734375
    6. 'h' → logprob: -7.8834075927734375
    7. 't' → logprob: -8.383407592773438
    8. '   ' → logprob: -8.383407592773438
    9. 'foot' → logprob: -8.508407592773438
    10. 'head' → logprob: -9.133407592773438

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6329935789108276
    2. ' =' → logprob: -0.7579935789108276
    3. 'oot' → logprob: -8.382993698120117
    4. ' ' → logprob: -9.132993698120117
    5. ',' → logprob: -11.757993698120117
    6. '	' → logprob: -11.882993698120117
    7. '(' → logprob: -12.257993698120117
    8. 't' → logprob: -12.257993698120117
    9. 'o' → logprob: -12.382993698120117
    10. '   ' → logprob: -12.382993698120117

Token 179: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5765994191169739
    2. '(x' → logprob: -0.8265994191169739
    3. '(' → logprob: -7.326599597930908
    4. ' ' → logprob: -14.20159912109375
    5. '((' → logprob: -14.70159912109375
    6. 'x' → logprob: -15.20159912109375
    7. '(n' → logprob: -16.07659912109375
    8. '(X' → logprob: -16.32659912109375
    9. '(s' → logprob: -16.57659912109375
    10. ' x' → logprob: -16.82659912109375

Token 180: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.404745439183898e-05
    2. '(x' → logprob: -10.37503433227539
    3. ' x' → logprob: -12.87503433227539
    4. '   ' → logprob: -16.37503433227539
    5. ')x' → logprob: -16.75003433227539
    6. '	x' → logprob: -18.87503433227539
    7. '{x' → logprob: -18.87503433227539
    8. ''x' → logprob: -19.62503433227539
    9. '```' → logprob: -19.62503433227539
    10. ')' → logprob: -19.87503433227539

Token 181: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03806157782673836
    2. ' +' → logprob: -3.2880616188049316
    3. ',' → logprob: -12.288061141967773
    4. '1' → logprob: -12.288061141967773
    5. '+
' → logprob: -13.038061141967773
    6. '   ' → logprob: -13.038061141967773
    7. ' ' → logprob: -13.163061141967773
    8. '+,' → logprob: -13.413061141967773
    9. ' +
' → logprob: -14.288061141967773
    10. ' ,' → logprob: -14.413061141967773

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024787469301372766
    2. ' ' → logprob: -6.00247859954834
    3. '0' → logprob: -12.87747859954834
    4. '   ' → logprob: -14.87747859954834
    5. '
' → logprob: -16.252479553222656
    6. '2' → logprob: -16.877479553222656
    7. '  ' → logprob: -17.127479553222656
    8. '```' → logprob: -17.752479553222656
    9. ')' → logprob: -18.064979553222656
    10. '<|end|>' → logprob: -18.314979553222656

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00464206887409091
    2. ',y' → logprob: -5.379642009735107
    3. ' ,' → logprob: -10.754642486572266
    4. ',
' → logprob: -14.879642486572266
    5. 'y' → logprob: -16.129642486572266
    6. ',Y' → logprob: -17.754642486572266
    7. ')' → logprob: -18.129642486572266
    8. ' ' → logprob: -18.504642486572266
    9. ' y' → logprob: -18.629642486572266
    10. '```' → logprob: -18.754642486572266

Token 184: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020678490400314
    2. ' y' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.97520637512207
    4. '	y' → logprob: -17.47520637512207
    5. ')y' → logprob: -17.97520637512207
    6. ',y' → logprob: -18.10020637512207
    7. '<|end|>' → logprob: -18.60020637512207
    8. ''y' → logprob: -19.35020637512207
    9. ')' → logprob: -19.72520637512207
    10. ',' → logprob: -19.97520637512207

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014525714504998177
    2. ')
' → logprob: -8.875144958496094
    3. ' )' → logprob: -12.375144958496094
    4. '       ' → logprob: -15.000144958496094
    5. ')

' → logprob: -15.375144958496094
    6. ')#' → logprob: -16.125144958496094
    7. '),' → logprob: -16.250144958496094
    8. ')
' → logprob: -16.375144958496094
    9. '   ' → logprob: -16.500144958496094
    10. '))' → logprob: -17.000144958496094

Token 186: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023118527606129646
    2. ')
' → logprob: -3.898118495941162
    3. '       ' → logprob: -6.148118495941162
    4. '           ' → logprob: -8.52311897277832
    5. ' )' → logprob: -9.02311897277832
    6. '<|end|>' → logprob: -9.27311897277832
    7. ' )
' → logprob: -12.52311897277832
    8. '
' → logprob: -12.52311897277832
    9. '               ' → logprob: -12.89811897277832
    10. ')\' → logprob: -13.27311897277832

Token 188: ' foot' (ID: 6428)
  Prédit: 'foot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foot' → logprob: -0.030086809769272804
    2. ' foot' → logprob: -3.5300867557525635
    3. 'f' → logprob: -8.780086517333984
    4. ')' → logprob: -9.905086517333984
    5. 'fo' → logprob: -10.280086517333984
    6. 'tail' → logprob: -10.780086517333984
    7. 'Foot' → logprob: -11.030086517333984
    8. 'head' → logprob: -11.155086517333984
    9. '<|end|>' → logprob: -11.280086517333984
    10. ' f' → logprob: -12.530086517333984

Token 189: ' at' (ID: 540)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00960969552397728
    2. '_cells' → logprob: -5.634609699249268
    3. ')
' → logprob: -6.259609699249268
    4. '<|end|>' → logprob: -6.384609699249268
    5. ' )' → logprob: -6.634609699249268
    6. '           ' → logprob: -8.25960922241211
    7. '       ' → logprob: -8.38460922241211
    8. '_cell' → logprob: -9.13460922241211
    9. ' at' → logprob: -9.25960922241211
    10. ' cells' → logprob: -9.63460922241211

Token 190: ' right' (ID: 1849)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5947123765945435
    2. 'left' → logprob: -1.4697123765945435
    3. 'x' → logprob: -1.8447123765945435
    4. ' left' → logprob: -4.094712257385254
    5. ' (' → logprob: -4.094712257385254
    6. 'right' → logprob: -4.469712257385254
    7. ' x' → logprob: -4.594712257385254
    8. ' right' → logprob: -5.469712257385254
    9. 'the' → logprob: -7.719712257385254
    10. ' the' → logprob: -8.469712257385254

Token 191: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.20713955163955688
    2. ' cell' → logprob: -1.707139492034912
    3. ')' → logprob: -5.207139492034912
    4. '_cell' → logprob: -9.08213996887207
    5. '	cell' → logprob: -10.20713996887207
    6. ' )' → logprob: -11.08213996887207
    7. '(cell' → logprob: -11.20713996887207
    8. '<|end|>' → logprob: -11.58213996887207
    9. ')
' → logprob: -12.33213996887207
    10. ' cellule' → logprob: -12.45713996887207

Token 192: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034931693226099014
    2. ')' → logprob: -4.284931659698486
    3. '<|end|>' → logprob: -4.409931659698486
    4. '       ' → logprob: -5.534931659698486
    5. '               ' → logprob: -6.409931659698486
    6. '
' → logprob: -6.659931659698486
    7. ',' → logprob: -7.909931659698486
    8. '            
' → logprob: -8.409932136535645
    9. '<|end|>' → logprob: -8.534932136535645
    10. 'elif' → logprob: -9.034932136535645

Token 193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018074551597237587
    2. '<|end|>' → logprob: -4.5180745124816895
    3. '       ' → logprob: -5.8930745124816895
    4. '
' → logprob: -5.8930745124816895
    5. ')' → logprob: -7.6430745124816895
    6. 'foot' → logprob: -7.8930745124816895
    7. '               ' → logprob: -8.893074989318848
    8. '<|end|>' → logprob: -9.018074989318848
    9. '```' → logprob: -9.143074989318848
    10. '            
' → logprob: -10.268074989318848

Token 194: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19443753361701965
    2. '       ' → logprob: -2.9444375038146973
    3. 'elif' → logprob: -2.9444375038146973
    4. 'else' (adapté à ' else') → logprob: -3.1944375038146973
    5. ' else' → logprob: -4.319437503814697
    6. ' elif' → logprob: -4.444437503814697
    7. '<|end|>' → logprob: -5.694437503814697
    8. '            
' → logprob: -7.819437503814697
    9. '   ' → logprob: -7.944437503814697
    10. '
' → logprob: -8.194437980651855

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02339339256286621
    2. ':
' → logprob: -3.773393392562866
    3. ' :' → logprob: -9.898393630981445
    4. '<|end|>' → logprob: -10.523393630981445
    5. '       ' → logprob: -10.648393630981445
    6. '   ' → logprob: -11.898393630981445
    7. ' :
' → logprob: -11.898393630981445
    8. '           ' → logprob: -12.023393630981445
    9. '        ' → logprob: -12.398393630981445
    10. ':

' → logprob: -12.523393630981445

Token 196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6155512928962708
    2. ' (' → logprob: -1.115551233291626
    3. '       ' → logprob: -3.115551233291626
    4. '(' → logprob: -3.990551233291626
    5. '(x' → logprob: -3.990551233291626
    6. '#' → logprob: -4.615551471710205
    7. ':' → logprob: -4.740551471710205
    8. '           ' → logprob: -4.740551471710205
    9. ':
' → logprob: -5.115551471710205
    10. '   ' → logprob: -5.240551471710205

Token 197: ' #' (ID: 1069)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5511200428009033
    2. 'h' → logprob: -0.9261200428009033
    3. '#' (adapté à ' #') → logprob: -4.426119804382324
    4. ' (' → logprob: -5.301119804382324
    5. ' ' → logprob: -5.551119804382324
    6. ' #' → logprob: -6.051119804382324
    7. '           ' → logprob: -6.801119804382324
    8. '(h' → logprob: -6.926119804382324
    9. '               ' → logprob: -7.301119804382324
    10. '
' → logprob: -7.676119804382324

Token 198: ' fut' (ID: 4073)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.06354034692049026
    2. 'h' → logprob: -2.813540458679199
    3. ' (' → logprob: -7.438540458679199
    4. '#' → logprob: -8.6885404586792
    5. ' f' → logprob: -8.9385404586792
    6. '   ' → logprob: -9.3135404586792
    7. 'f' → logprob: -9.3135404586792
    8. ' ' → logprob: -9.4385404586792
    9. '(' → logprob: -9.5635404586792
    10. '           ' → logprob: -9.5635404586792

Token 199: 'on' (ID: 263)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6065107583999634
    2. ' =' → logprob: -0.9815107583999634
    3. '(x' → logprob: -3.356510639190674
    4. '(' → logprob: -3.856510639190674
    5. '=' → logprob: -4.731510639190674
    6. ' x' → logprob: -5.481510639190674
    7. ' ' → logprob: -5.981510639190674
    8. '               ' → logprob: -6.856510639190674
    9. 'x' → logprob: -6.981510639190674
    10. '<|end|>' → logprob: -7.231510639190674

Token 200: ' occupies' (ID: 134274)
  Prédit: ' occupies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occupies' → logprob: -0.03253452107310295
    2. 'occup' → logprob: -3.532534599304199
    3. ' (' → logprob: -6.657534599304199
    4. ' =' → logprob: -7.532534599304199
    5. '   ' → logprob: -8.4075345993042
    6. '(' → logprob: -8.7825345993042
    7. '=' → logprob: -9.2825345993042
    8. ' ocu' → logprob: -9.7825345993042
    9. ' ocupa' → logprob: -9.7825345993042
    10. ' at' → logprob: -9.9075345993042

Token 201: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16029612720012665
    2. '(x' → logprob: -1.910296082496643
    3. '(' → logprob: -10.410296440124512
    4. 'x' → logprob: -10.535296440124512
    5. ' x' → logprob: -11.160296440124512
    6. ' ' → logprob: -14.785296440124512
    7. ',' → logprob: -15.910296440124512
    8. '```' → logprob: -16.410295486450195
    9. '   ' → logprob: -16.535295486450195
    10. '`' → logprob: -17.035295486450195

Token 202: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017257531872019172
    2. '(x' → logprob: -6.376725673675537
    3. ' x' → logprob: -10.751726150512695
    4. '(' → logprob: -13.751726150512695
    5. ' (' → logprob: -14.876726150512695
    6. ',' → logprob: -15.376726150512695
    7. ')x' → logprob: -15.376726150512695
    8. ')' → logprob: -16.001726150512695
    9. ',x' → logprob: -16.376726150512695
    10. '(
' → logprob: -17.126726150512695

Token 203: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043376852408982813
    2. ',y' → logprob: -8.375433921813965
    3. ' ,' → logprob: -9.125433921813965
    4. ',x' → logprob: -9.875433921813965
    5. 'x' → logprob: -10.125433921813965
    6. ' ' → logprob: -13.500433921813965
    7. 'y' → logprob: -14.625433921813965
    8. ')' → logprob: -15.250433921813965
    9. '+' → logprob: -15.750433921813965
    10. ',f' → logprob: -16.00043296813965

Token 204: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1848676204681396
    2. ')' → logprob: -1.3098676204681396
    3. ',' → logprob: -1.3098676204681396
    4. '-' → logprob: -1.9348676204681396
    5. '),' → logprob: -4.809867858886719
    6. '   ' → logprob: -7.809867858886719
    7. ' +' → logprob: -7.809867858886719
    8. ' -' → logprob: -8.184867858886719
    9. ' and' → logprob: -8.434867858886719
    10. ' ,' → logprob: -8.684867858886719

Token 205: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3812640905380249
    2. 'and' → logprob: -1.506264090538025
    3. ',' → logprob: -2.5062642097473145
    4. ')' → logprob: -4.6312642097473145
    5. '(' → logprob: -6.7562642097473145
    6. ' (' → logprob: -7.0062642097473145
    7. ' ,' → logprob: -7.2562642097473145
    8. '   ' → logprob: -7.8812642097473145
    9. '(x' → logprob: -8.006263732910156
    10. '),' → logprob: -9.381263732910156

Token 206: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.17982061207294464
    2. '(x' → logprob: -1.8048206567764282
    3. '(' → logprob: -9.554821014404297
    4. 'x' → logprob: -13.429821014404297
    5. ',' → logprob: -13.929821014404297
    6. ' ' → logprob: -14.929821014404297
    7. '`' → logprob: -14.929821014404297
    8. ')' → logprob: -15.054821014404297
    9. ' `(' → logprob: -15.179821014404297
    10. ' x' → logprob: -15.304821014404297

Token 207: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007330321241170168
    2. '(x' → logprob: -7.750732898712158
    3. ' x' → logprob: -8.125733375549316
    4. 'y' → logprob: -13.250733375549316
    5. ' (' → logprob: -13.375733375549316
    6. '
' → logprob: -14.000733375549316
    7. ')x' → logprob: -14.750733375549316
    8. '(' → logprob: -14.750733375549316
    9. ',' → logprob: -15.000733375549316
    10. '<|end|>' → logprob: -15.000733375549316

Token 208: ',y' (ID: 16103)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005213391850702465
    2. ',' → logprob: -8.000521659851074
    3. ',y' → logprob: -9.125521659851074
    4. '+
' → logprob: -10.375521659851074
    5. ' +' → logprob: -10.500521659851074
    6. '-' → logprob: -12.625521659851074
    7. '1' → logprob: -13.000521659851074
    8. '   ' → logprob: -13.125521659851074
    9. '+,' → logprob: -13.125521659851074
    10. '+y' → logprob: -13.500521659851074

Token 209: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.15310683415737e-05
    2. ' +' → logprob: -10.875021934509277
    3. '-' → logprob: -13.500021934509277
    4. '1' → logprob: -14.375021934509277
    5. ')' → logprob: -15.000021934509277
    6. ')+' → logprob: -15.750021934509277
    7. '+)' → logprob: -17.00002098083496
    8. '+
' → logprob: -17.12502098083496
    9. '+x' → logprob: -17.25002098083496
    10. '   ' → logprob: -18.00002098083496

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6550729419104755e-05
    2. '+' → logprob: -10.250036239624023
    3. ')' → logprob: -14.750036239624023
    4. ' ' → logprob: -14.750036239624023
    5. '   ' → logprob: -15.875036239624023
    6. '<|end|>' → logprob: -16.500036239624023
    7. '```' → logprob: -16.750036239624023
    8. 'x' → logprob: -16.875036239624023
    9. '{
' → logprob: -17.250036239624023
    10. '-' → logprob: -17.625036239624023

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012494005495682359
    2. ')
' → logprob: -6.751249313354492
    3. ' )' → logprob: -9.751249313354492
    4. '       ' → logprob: -11.751249313354492
    5. '           ' → logprob: -12.501249313354492
    6. '),' → logprob: -13.001249313354492
    7. ')#' → logprob: -13.751249313354492
    8. ')

' → logprob: -14.376249313354492
    9. '<|end|>' → logprob: -14.376249313354492
    10. '               ' → logprob: -14.376249313354492

Token 212: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028894072398543358
    2. '
' → logprob: -4.278893947601318
    3. '           ' → logprob: -4.903893947601318
    4. 'h' → logprob: -5.778893947601318
    5. '       ' → logprob: -6.528893947601318
    6. ',' → logprob: -7.528893947601318
    7. ':
' → logprob: -7.778893947601318
    8. '   ' → logprob: -7.778893947601318
    9. '<|end|>' → logprob: -8.028894424438477
    10. ' h' → logprob: -8.278894424438477

Token 213: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.04938580095767975
    2. ' h' → logprob: -3.0493857860565186
    3. '           ' → logprob: -7.174386024475098
    4. '   ' → logprob: -11.549386024475098
    5. '               ' → logprob: -11.799386024475098
    6. ' ' → logprob: -12.549386024475098
    7. '	h' → logprob: -12.674386024475098
    8. '
' → logprob: -12.799386024475098
    9. '       ' → logprob: -13.799386024475098
    10. '            ' → logprob: -14.049386024475098

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. '=(' → logprob: -14.725208282470703
    4. ',' → logprob: -14.725208282470703
    5. ' =(' → logprob: -15.100208282470703
    6. ' (' → logprob: -15.475208282470703
    7. ' =
' → logprob: -15.850208282470703
    8. ' ' → logprob: -15.975208282470703
    9. '=
' → logprob: -16.975208282470703
    10. '(' → logprob: -17.100208282470703

Token 215: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.01584208384156227
    2. ' (' → logprob: -4.265841960906982
    3. '(' → logprob: -6.390841960906982
    4. 'x' → logprob: -15.01584243774414
    5. ' x' → logprob: -18.51584243774414
    6. ' ' → logprob: -19.01584243774414
    7. '(
' → logprob: -19.01584243774414
    8. '((' → logprob: -19.64084243774414
    9. '(s' → logprob: -19.76584243774414
    10. '(int' → logprob: -19.89084243774414

Token 216: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.456358823925257e-05
    2. '(x' → logprob: -9.750064849853516
    3. ' x' → logprob: -12.000064849853516
    4. ')x' → logprob: -16.875064849853516
    5. '(' → logprob: -18.000064849853516
    6. '"x' → logprob: -18.000064849853516
    7. ',' → logprob: -18.250064849853516
    8. '{x' → logprob: -18.375064849853516
    9. ',x' → logprob: -18.875064849853516
    10. ' (' → logprob: -18.875064849853516

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013691288768313825
    2. ' ,' → logprob: -9.250137329101562
    3. ',y' → logprob: -10.500137329101562
    4. 'y' → logprob: -12.125137329101562
    5. ' ' → logprob: -12.750137329101562
    6. ' y' → logprob: -13.000137329101562
    7. 'x' → logprob: -13.750137329101562
    8. '+' → logprob: -14.000137329101562
    9. ')' → logprob: -15.500137329101562
    10. ',
' → logprob: -15.750137329101562

Token 218: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759425759315491
    2. ' y' → logprob: -0.8259425759315491
    3. ' ' → logprob: -13.200942993164062
    4. '    ' → logprob: -14.325942993164062
    5. 'x' → logprob: -15.700942993164062
    6. '   ' → logprob: -16.200942993164062
    7. '  ' → logprob: -16.575942993164062
    8. ')y' → logprob: -16.700942993164062
    9. '	y' → logprob: -16.950942993164062
    10. ')' → logprob: -17.075942993164062

Token 219: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016892943531274796
    2. '+' → logprob: -4.641892910003662
    3. ')
' → logprob: -5.391892910003662
    4. ',' → logprob: -6.891892910003662
    5. '),' → logprob: -7.266892910003662
    6. ' +' → logprob: -7.891892910003662
    7. ' )' → logprob: -8.14189338684082
    8. '   ' → logprob: -9.76689338684082
    9. '<|end|>' → logprob: -11.14189338684082
    10. ' ' → logprob: -11.39189338684082

Token 220: '    ' (ID: 257)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4312044680118561
    2. ' f' → logprob: -1.1812044382095337
    3. ',' → logprob: -4.306204319000244
    4. '       ' → logprob: -4.681204319000244
    5. ' (' → logprob: -5.056204319000244
    6. '   ' → logprob: -5.806204319000244
    7. ' ' → logprob: -5.806204319000244
    8. '
' → logprob: -5.931204319000244
    9. '<|end|>' → logprob: -5.931204319000244
    10. '               ' → logprob: -7.181204319000244

Token 221: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7864747643470764
    2. '<|end|>' → logprob: -1.1614747047424316
    3. ' f' → logprob: -1.6614747047424316
    4. ',' → logprob: -3.6614747047424316
    5. '<|end|>' → logprob: -5.661474704742432
    6. '
' → logprob: -5.661474704742432
    7. '               ' → logprob: -6.286474704742432
    8. '       ' → logprob: -6.411474704742432
    9. ' ' → logprob: -6.536474704742432
    10. ')' → logprob: -6.661474704742432

Token 222: ' head' (ID: 3189)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8410319089889526
    2. '(x' → logprob: -0.8410319089889526
    3. ' (' → logprob: -2.716032028198242
    4. 'foot' → logprob: -3.216032028198242
    5. 'x' → logprob: -4.341032028198242
    6. '(' → logprob: -5.341032028198242
    7. 'head' → logprob: -5.466032028198242
    8. '<|end|>' → logprob: -5.966032028198242
    9. '(y' → logprob: -6.341032028198242
    10. 'y' → logprob: -6.591032028198242

Token 223: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.21238203346729279
    2. '<|end|>' → logprob: -1.7123820781707764
    3. 'at' → logprob: -5.212381839752197
    4. ',' → logprob: -5.962381839752197
    5. ')' → logprob: -6.587381839752197
    6. ' (' → logprob: -7.462381839752197
    7. ' ' → logprob: -8.212382316589355
    8. '<|end|>' → logprob: -8.837382316589355
    9. '+' → logprob: -9.212382316589355
    10. '
' → logprob: -9.337382316589355

Token 224: ' bottom' (ID: 8725)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.23103435337543488
    2. 'x' → logprob: -2.231034278869629
    3. '(x' → logprob: -2.481034278869629
    4. ' left' → logprob: -4.981034278869629
    5. ' (' → logprob: -5.231034278869629
    6. ' x' → logprob: -6.606034278869629
    7. 'right' → logprob: -6.731034278869629
    8. '(left' → logprob: -8.481034278869629
    9. ' right' → logprob: -9.731034278869629
    10. 'down' → logprob: -9.856034278869629

Token 225: ' cell' (ID: 4206)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3653819561004639
    2. ' cell' → logprob: -1.3653819561004639
    3. 'cell' → logprob: -1.3653819561004639
    4. ')' → logprob: -2.240381956100464
    5. '<|end|>' → logprob: -2.615381956100464
    6. ' (' → logprob: -4.490382194519043
    7. '
' → logprob: -4.615382194519043
    8. ' ,' → logprob: -4.740382194519043
    9. '(cell' → logprob: -5.240382194519043
    10. 'f' → logprob: -5.615382194519043

Token 226: '
' (ID: 198)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5483325719833374
    2. '<|end|>' → logprob: -1.5483325719833374
    3. '               ' → logprob: -2.048332691192627
    4. ' f' → logprob: -2.673332691192627
    5. '           ' → logprob: -4.673332691192627
    6. '
' → logprob: -6.923332691192627
    7. '       ' → logprob: -8.048332214355469
    8. '<|end|>' → logprob: -8.673332214355469
    9. ')' → logprob: -9.173332214355469
    10. '   ' → logprob: -9.423332214355469

Token 227: '               ' (ID: 506)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.513974666595459
    2. 'f' → logprob: -1.388974666595459
    3. '               ' → logprob: -2.638974666595459
    4. '<|end|>' → logprob: -2.763974666595459
    5. '           ' → logprob: -4.638974666595459
    6. ',' → logprob: -5.763974666595459
    7. ' (' → logprob: -6.263974666595459
    8. '
' → logprob: -7.388974666595459
    9. ')' → logprob: -7.638974666595459
    10. '       ' → logprob: -7.888974666595459

Token 228: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.4324469566345215
    2. 'f' (adapté à ' f') → logprob: -1.0574469566345215
    3. ' (' → logprob: -5.6824469566345215
    4. '(' → logprob: -8.30744743347168
    5. '(x' → logprob: -9.68244743347168
    6. '(f' → logprob: -10.80744743347168
    7. '           ' → logprob: -13.68244743347168
    8. '   ' → logprob: -14.05744743347168
    9. '               ' → logprob: -14.43244743347168
    10. ' ' → logprob: -15.18244743347168

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26649245619773865
    2. ' =' → logprob: -1.641492486000061
    3. ' (' → logprob: -3.2664923667907715
    4. '(' → logprob: -6.8914923667907715
    5. '(x' → logprob: -7.0164923667907715
    6. '<|end|>' → logprob: -9.14149284362793
    7. ' ' → logprob: -10.51649284362793
    8. '=(' → logprob: -10.76649284362793
    9. ',' → logprob: -11.01649284362793
    10. ')' → logprob: -11.76649284362793

Token 230: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6932780742645264
    2. '(x' → logprob: -0.6932780742645264
    3. '(' → logprob: -8.943278312683105
    4. 'x' → logprob: -15.943278312683105
    5. ' ' → logprob: -17.56827735900879
    6. ' x' → logprob: -17.94327735900879
    7. '(
' → logprob: -18.06827735900879
    8. '<|end|>' → logprob: -19.06827735900879
    9. '```' → logprob: -19.31827735900879
    10. '((' → logprob: -19.31827735900879

Token 231: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010428131790831685
    2. '(x' → logprob: -6.87604284286499
    3. ' x' → logprob: -11.626042366027832
    4. ' (' → logprob: -14.501042366027832
    5. '(' → logprob: -15.126042366027832
    6. '(
' → logprob: -16.37604331970215
    7. ')x' → logprob: -16.50104331970215
    8. '0' → logprob: -17.12604331970215
    9. ',' → logprob: -17.25104331970215
    10. '{x' → logprob: -17.25104331970215

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00843467004597187
    2. '+' → logprob: -4.883434772491455
    3. ',y' → logprob: -7.258434772491455
    4. ' ,' → logprob: -9.258434295654297
    5. 'y' → logprob: -11.633434295654297
    6. ' y' → logprob: -12.133434295654297
    7. ' ' → logprob: -12.133434295654297
    8. 'f' → logprob: -12.883434295654297
    9. '   ' → logprob: -13.758434295654297
    10. ',f' → logprob: -13.883434295654297

Token 233: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06895877420902252
    2. 'x' → logprob: -3.1939587593078613
    3. ' y' → logprob: -3.6939587593078613
    4. '(x' → logprob: -8.06895923614502
    5. '(y' → logprob: -8.31895923614502
    6. ' x' → logprob: -8.81895923614502
    7. ' (' → logprob: -10.31895923614502
    8. '(' → logprob: -12.19395923614502
    9. '+' → logprob: -12.56895923614502
    10. ' ' → logprob: -13.19395923614502

Token 234: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012821101699955761
    2. ' +' → logprob: -9.000127792358398
    3. '1' → logprob: -12.750127792358398
    4. ')+' → logprob: -13.625127792358398
    5. ')' → logprob: -15.375127792358398
    6. '+
' → logprob: -15.625127792358398
    7. '[' → logprob: -16.0001277923584
    8. '   ' → logprob: -16.3751277923584
    9. ' ' → logprob: -17.1251277923584
    10. '<|end|>' → logprob: -17.5001277923584

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.875008583068848
    3. ')' → logprob: -14.375008583068848
    4. '   ' → logprob: -15.000008583068848
    5. '
' → logprob: -16.37500762939453
    6. '+' → logprob: -17.00000762939453
    7. '```' → logprob: -17.31250762939453
    8. '  ' → logprob: -17.43750762939453
    9. '-' → logprob: -18.06250762939453
    10. '    ' → logprob: -18.25000762939453

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002574057725723833
    2. ')
' → logprob: -8.37525749206543
    3. ' )' → logprob: -10.75025749206543
    4. '       ' → logprob: -12.37525749206543
    5. ')

' → logprob: -15.62525749206543
    6. ')#' → logprob: -15.75025749206543
    7. '')' → logprob: -15.87525749206543
    8. '           ' → logprob: -16.00025749206543
    9. '<|end|>' → logprob: -16.00025749206543
    10. '   ' → logprob: -16.25025749206543

Token 237: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17165854573249817
    2. ')' → logprob: -2.171658515930176
    3. '<|end|>' → logprob: -3.171658515930176
    4. '           ' → logprob: -6.796658515930176
    5. ' )' → logprob: -8.671658515930176
    6. '
' → logprob: -9.046658515930176
    7. '<|end|>' → logprob: -9.546658515930176
    8. '   ' → logprob: -9.546658515930176
    9. ')
' → logprob: -9.671658515930176
    10. '#' (adapté à ' #') → logprob: -10.171658515930176

Token 239: ' foot' (ID: 6428)
  Prédit: 'foot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foot' → logprob: -0.024048231542110443
    2. ' foot' → logprob: -4.024048328399658
    3. 'f' → logprob: -5.149048328399658
    4. 'fo' → logprob: -10.5240478515625
    5. ' f' → logprob: -10.7740478515625
    6. ')' → logprob: -11.7740478515625
    7. 'Foot' → logprob: -12.5240478515625
    8. '(' → logprob: -12.7740478515625
    9. '#' → logprob: -13.0240478515625
    10. ' ' → logprob: -13.0240478515625

Token 240: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.13863171637058258
    2. '<|end|>' → logprob: -2.263631820678711
    3. ')' → logprob: -3.763631820678711
    4. '<|end|>' → logprob: -7.013631820678711
    5. 'at' → logprob: -7.138631820678711
    6. ' ' → logprob: -8.763631820678711
    7. ' )' → logprob: -8.763631820678711
    8. ' cells' → logprob: -9.513631820678711
    9. ' (' → logprob: -10.263631820678711
    10. '_cells' → logprob: -10.513631820678711

Token 241: ' top' (ID: 2344)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.3352116644382477
    2. ' bottom' → logprob: -2.085211753845215
    3. 'top' → logprob: -2.210211753845215
    4. ' top' → logprob: -3.085211753845215
    5. '(bottom' → logprob: -5.710211753845215
    6. '(top' → logprob: -7.210211753845215
    7. ' (' → logprob: -8.085211753845215
    8. 'f' → logprob: -8.335211753845215
    9. 'y' → logprob: -9.085211753845215
    10. ' y' → logprob: -9.460211753845215

Token 242: ' cell' (ID: 4206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08417209982872009
    2. 'cell' → logprob: -2.959172010421753
    3. ' cell' → logprob: -3.584172010421753
    4. '_cell' → logprob: -7.584172248840332
    5. ' )' → logprob: -8.459172248840332
    6. '<|end|>' → logprob: -8.709172248840332
    7. '	cell' → logprob: -10.334172248840332
    8. '(cell' → logprob: -10.459172248840332
    9. 'token' → logprob: -10.584172248840332
    10. ')_' → logprob: -11.084172248840332

Token 243: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03115903213620186
    2. 'head' → logprob: -3.781158924102783
    3. '
' → logprob: -6.031158924102783
    4. '       ' → logprob: -6.281158924102783
    5. 'foot' → logprob: -6.406158924102783
    6. '<|end|>' → logprob: -6.656158924102783
    7. ' head' → logprob: -8.281159400939941
    8. '            
' → logprob: -9.281159400939941
    9. '   ' → logprob: -9.656159400939941
    10. '```' → logprob: -9.906159400939941

Token 245: ' head' (ID: 3189)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9623342156410217
    2. '       ' → logprob: -1.337334156036377
    3. ' head' → logprob: -1.337334156036377
    4. 'head' (adapté à ' head') → logprob: -2.462334156036377
    5. '   ' → logprob: -6.087334156036377
    6. '
' → logprob: -6.212334156036377
    7. '	head' → logprob: -7.212334156036377
    8. 'foot' → logprob: -7.462334156036377
    9. '=head' → logprob: -7.712334156036377
    10. ' foot' → logprob: -8.212334632873535

Token 246: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -13.375004768371582
    3. 's' → logprob: -13.375004768371582
    4. 'cells' → logprob: -14.625004768371582
    5. 'Cells' → logprob: -15.625004768371582
    6. '_chars' → logprob: -15.625004768371582
    7. ' _' → logprob: -15.750004768371582
    8. '_cell' → logprob: -16.0000057220459
    9. '_positions' → logprob: -16.2500057220459
    10. '_calls' → logprob: -16.5000057220459

Token 247: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.676292231422849e-05
    2. '.' → logprob: -11.125017166137695
    3. '.append' → logprob: -13.875017166137695
    4. '.setdefault' → logprob: -14.250017166137695
    5. '.update' → logprob: -15.250017166137695
    6. '.insert' → logprob: -15.875017166137695
    7. ' .' → logprob: -17.125017166137695
    8. ').' → logprob: -17.375017166137695
    9. '.Add' → logprob: -17.750017166137695
    10. 'add' → logprob: -19.250017166137695

Token 248: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00012916464766021818
    2. '(' → logprob: -9.000128746032715
    3. ' (' → logprob: -12.750128746032715
    4. '(f' → logprob: -13.625128746032715
    5. 'h' → logprob: -13.875128746032715
    6. '((' → logprob: -14.375128746032715
    7. ' h' → logprob: -16.25012969970703
    8. '(s' → logprob: -18.50012969970703
    9. '(x' → logprob: -18.87512969970703
    10. '(
' → logprob: -19.87512969970703

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001443035143893212
    2. ')
' → logprob: -8.875144004821777
    3. '<|end|>' → logprob: -13.500144004821777
    4. '())' → logprob: -13.625144004821777
    5. ' )' → logprob: -14.000144004821777
    6. ')}' → logprob: -15.000144004821777
    7. ')#' → logprob: -15.875144004821777
    8. '),' → logprob: -16.000144958496094
    9. ')add' → logprob: -16.250144958496094
    10. ')

' → logprob: -16.375144958496094

Token 250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09439399093389511
    2. '<|end|>' → logprob: -2.5943939685821533
    3. '       ' → logprob: -4.969394207000732
    4. 'foot' → logprob: -5.219394207000732
    5. ')' → logprob: -6.844394207000732
    6. '
' → logprob: -7.594394207000732
    7. '            
' → logprob: -8.094393730163574
    8. '               ' → logprob: -8.219393730163574
    9. '<|end|>' → logprob: -8.719393730163574
    10. '            ' → logprob: -9.219393730163574

Token 251: ' foot' (ID: 6428)
  Prédit: 'foot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foot' (adapté à ' foot') → logprob: -0.35138702392578125
    2. ' foot' → logprob: -1.2263870239257812
    3. '           ' → logprob: -6.351387023925781
    4. 'f' → logprob: -7.101387023925781
    5. '       ' → logprob: -8.601387023925781
    6. ' f' → logprob: -8.976387023925781
    7. ' fut' → logprob: -11.351387023925781
    8. '   ' → logprob: -11.601387023925781
    9. 'Foot' → logprob: -11.601387023925781
    10. 'fo' → logprob: -11.851387023925781

Token 252: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -3.173704271830502e-06
    2. '_chars' → logprob: -14.62500286102295
    3. ')_' → logprob: -14.87500286102295
    4. '_' → logprob: -15.00000286102295
    5. '```' → logprob: -15.12500286102295
    6. 'Cells' → logprob: -15.37500286102295
    7. '_tokens' → logprob: -15.62500286102295
    8. ' _' → logprob: -15.87500286102295
    9. '_atoms' → logprob: -15.87500286102295
    10. '<|end|>' → logprob: -16.250003814697266

Token 253: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.008619185537099838
    2. '.' → logprob: -4.75861930847168
    3. 'add' → logprob: -13.38361930847168
    4. '<|end|>' → logprob: -13.50861930847168
    5. ' .' → logprob: -14.13361930847168
    6. '.setdefault' → logprob: -14.50861930847168
    7. '.Add' → logprob: -15.63361930847168
    8. '.update' → logprob: -15.88361930847168
    9. '.append' → logprob: -16.38361930847168
    10. ').' → logprob: -16.63361930847168

Token 254: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -13.875000953674316
    3. 'f' → logprob: -17.500001907348633
    4. ' (' → logprob: -18.000001907348633
    5. ' f' → logprob: -21.625001907348633
    6. '	f' → logprob: -21.750001907348633
    7. '((' → logprob: -21.750001907348633
    8. '(F' → logprob: -21.875001907348633
    9. '(
' → logprob: -22.000001907348633
    10. '[f' → logprob: -22.500001907348633

Token 255: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2166411478538066e-05
    2. ')
' → logprob: -10.625052452087402
    3. '<|end|>' → logprob: -10.875052452087402
    4. '       ' → logprob: -12.125052452087402
    5. ' )' → logprob: -13.750052452087402
    6. '())' → logprob: -14.500052452087402
    7. '<|end|>' → logprob: -14.875052452087402
    8. '),' → logprob: -15.625052452087402
    9. '()' → logprob: -15.875052452087402
    10. ')n' → logprob: -15.875052452087402

Token 256: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' check' (ID: 2371)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8212451934814453
    2. ' visited' → logprob: -1.3212451934814453
    3. '       ' → logprob: -2.0712451934814453
    4. '#' → logprob: -2.4462451934814453
    5. ' #' → logprob: -3.9462451934814453
    6. ' graph' → logprob: -4.946245193481445
    7. ' used' → logprob: -4.946245193481445
    8. 'f' → logprob: -5.571245193481445
    9. ' from' → logprob: -5.821245193481445
    10. ' fut' → logprob: -5.821245193481445

Token 259: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7838048338890076
    2. ' if' → logprob: -1.0338048934936523
    3. '   ' → logprob: -2.0338048934936523
    4. ' for' → logprob: -4.033804893493652
    5. ' ' → logprob: -4.908804893493652
    6. '    ' → logprob: -5.158804893493652
    7. '        ' → logprob: -5.283804893493652
    8. '<|end|>' → logprob: -5.533804893493652
    9. ' whether' → logprob: -5.783804893493652
    10. 's' → logprob: -6.033804893493652

Token 260: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.678429365158081
    2. ' len' → logprob: -2.053429365158081
    3. 'len' → logprob: -2.553429365158081
    4. 'head' → logprob: -2.553429365158081
    5. ' fut' → logprob: -2.803429365158081
    6. ' head' → logprob: -3.428429365158081
    7. ' all' → logprob: -3.678429365158081
    8. 'any' → logprob: -4.17842960357666
    9. ' ' → logprob: -4.67842960357666
    10. 'n' → logprob: -4.92842960357666

Token 261: ' foot' (ID: 6428)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3634488582611084
    2. '   ' → logprob: -2.4884488582611084
    3. ' ' → logprob: -3.1134488582611084
    4. '(' → logprob: -3.2384488582611084
    5. ' for' → logprob: -3.7384488582611084
    6. ' fut' → logprob: -3.9884488582611084
    7. '_' → logprob: -4.3634490966796875
    8. '       ' → logprob: -4.4884490966796875
    9. ' head' → logprob: -4.9884490966796875
    10. 'f' → logprob: -4.9884490966796875

Token 262: ' is' (ID: 382)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.16305221617221832
    2. '_' → logprob: -2.5380523204803467
    3. ' in' → logprob: -2.7880523204803467
    4. ' _' → logprob: -6.288052082061768
    5. ' ' → logprob: -6.288052082061768
    6. ')' → logprob: -6.538052082061768
    7. '_cell' → logprob: -6.538052082061768
    8. 'in' → logprob: -7.038052082061768
    9. 's' → logprob: -7.913052082061768
    10. '   ' → logprob: -8.163052558898926

Token 263: ' adjacent' (ID: 39069)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6199328899383545
    2. 'in' → logprob: -1.2449328899383545
    3. ' adjacent' → logprob: -2.2449328899383545
    4. 'adj' → logprob: -3.6199328899383545
    5. ' also' → logprob: -4.244933128356934
    6. 'also' → logprob: -4.869933128356934
    7. ' not' → logprob: -5.244933128356934
    8. 'not' → logprob: -5.369933128356934
    9. '   ' → logprob: -6.119933128356934
    10. 'next' → logprob: -6.494933128356934

Token 264: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2880023121833801
    2. 'to' → logprob: -1.4130022525787354
    3. '<|end|>' → logprob: -5.7880024909973145
    4. ',' → logprob: -6.7880024909973145
    5. ')' → logprob: -7.2880024909973145
    6. '(' → logprob: -7.6630024909973145
    7. '_to' → logprob: -8.163002014160156
    8. '_' → logprob: -8.413002014160156
    9. ':' → logprob: -8.538002014160156
    10. '   ' → logprob: -9.038002014160156

Token 265: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.3395742177963257
    2. ' a' → logprob: -1.3395742177963257
    3. 'any' → logprob: -4.464574337005615
    4. 'head' → logprob: -5.089574337005615
    5. ' head' → logprob: -5.464574337005615
    6. 'a' → logprob: -5.714574337005615
    7. ' ' → logprob: -7.714574337005615
    8. ' the' → logprob: -9.714573860168457
    9. '   ' → logprob: -9.714573860168457
    10. ' an' → logprob: -10.089573860168457

Token 266: ' head' (ID: 3189)
  Prédit: ' head'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' head' → logprob: -0.22755151987075806
    2. 'head' → logprob: -1.6025514602661133
    3. ' of' → logprob: -6.977551460266113
    4. 'foot' → logprob: -7.477551460266113
    5. ' foot' → logprob: -8.477551460266113
    6. ' ' → logprob: -9.727551460266113
    7. ' h' → logprob: -9.852551460266113
    8. 'of' → logprob: -10.352551460266113
    9. 'neighbor' → logprob: -10.352551460266113
    10. 'def' → logprob: -10.477551460266113

Token 267: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011497041210532188
    2. ':' → logprob: -5.2614970207214355
    3. ',' → logprob: -6.1364970207214355
    4. '.' → logprob: -6.5114970207214355
    5. '<|end|>' → logprob: -7.0114970207214355
    6. ' and' → logprob: -7.6364970207214355
    7. ' for' → logprob: -8.011497497558594
    8. '   ' → logprob: -8.761497497558594
    9. ')' → logprob: -8.886497497558594
    10. ' or' → logprob: -9.761497497558594

Token 268: 'other' (ID: 2141)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12374123185873032
    2. ' )' → logprob: -2.7487411499023438
    3. '       ' → logprob: -3.3737411499023438
    4. ' and' → logprob: -4.873741149902344
    5. '           ' → logprob: -5.373741149902344
    6. '):' → logprob: -6.748741149902344
    7. '        ' → logprob: -6.998741149902344
    8. ':' → logprob: -6.998741149902344
    9. ')
' → logprob: -7.123741149902344
    10. ',' → logprob: -7.873741149902344

Token 269: ' than' (ID: 1572)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3358496129512787
    2. ' )' → logprob: -1.835849642753601
    3. ' than' → logprob: -2.7108495235443115
    4. '       ' → logprob: -4.460849761962891
    5. '   ' → logprob: -4.960849761962891
    6. ' ' → logprob: -5.085849761962891
    7. '    ' → logprob: -5.585849761962891
    8. '           ' → logprob: -5.585849761962891
    9. ',' → logprob: -5.835849761962891
    10. '_tokens' → logprob: -6.210849761962891

Token 270: ' its' (ID: 1617)
  Prédit: ' itself'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itself' → logprob: -0.44011497497558594
    2. ' the' → logprob: -1.440114974975586
    3. ' its' → logprob: -2.690114974975586
    4. ' own' → logprob: -3.315114974975586
    5. 'the' → logprob: -5.190114974975586
    6. ')' → logprob: -6.440114974975586
    7. ' a' → logprob: -6.440114974975586
    8. ' (' → logprob: -6.565114974975586
    9. ' their' → logprob: -6.940114974975586
    10. 'own' → logprob: -7.315114974975586

Token 271: ' own' (ID: 2316)
  Prédit: ' own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.21086108684539795
    2. 'own' → logprob: -1.710861086845398
    3. ')' → logprob: -4.7108612060546875
    4. ' )' → logprob: -8.960861206054688
    5. 'self' → logprob: -9.335861206054688
    6. 'selves' → logprob: -10.335861206054688
    7. '```' → logprob: -10.460861206054688
    8. '
' → logprob: -11.460861206054688
    9. 'space' → logprob: -11.585861206054688
    10. ''s' → logprob: -11.710861206054688

Token 272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3363785743713379
    2. ' fut' → logprob: -2.586378574371338
    3. ' )' → logprob: -2.586378574371338
    4. 'foot' → logprob: -2.836378574371338
    5. 'f' → logprob: -3.961378574371338
    6. ' cell' → logprob: -4.086378574371338
    7. 'cell' → logprob: -4.336378574371338
    8. ' foot' → logprob: -4.961378574371338
    9. '_f' → logprob: -5.211378574371338
    10. ' ' → logprob: -5.961378574371338

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04459257423877716
    2. '
' → logprob: -4.419592380523682
    3. '<|end|>' → logprob: -4.794592380523682
    4. ':' → logprob: -5.419592380523682
    5. '        
' → logprob: -5.669592380523682
    6. ')' → logprob: -5.794592380523682
    7. ' for' → logprob: -6.044592380523682
    8. ',' → logprob: -6.169592380523682
    9. '.' → logprob: -6.544592380523682
    10. '        ' → logprob: -7.044592380523682

Token 274: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20668436586856842
    2. ' for' → logprob: -2.4566843509674072
    3. '
' → logprob: -2.8316843509674072
    4. ' 
' → logprob: -4.081684589385986
    5. '        
' → logprob: -4.331684589385986
    6. 'for' → logprob: -5.331684589385986
    7. ' found' → logprob: -6.206684589385986
    8. '        ' → logprob: -6.581684589385986
    9. '    
' → logprob: -7.831684589385986
    10. '  
' → logprob: -7.956684589385986

Token 275: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.143987774848938
    2. ' for' → logprob: -2.3939876556396484
    3. ' found' → logprob: -3.3939876556396484
    4. 'for' → logprob: -6.018987655639648
    5. 'found' → logprob: -6.393987655639648
    6. ' visited' → logprob: -7.018987655639648
    7. ' foot' → logprob: -7.018987655639648
    8. ' conflict' → logprob: -7.268987655639648
    9. '        
' → logprob: -7.643987655639648
    10. '   ' → logprob: -7.768987655639648

Token 276: ' no' (ID: 860)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3953735828399658
    2. ' (' → logprob: -1.8953735828399658
    3. ' not' → logprob: -2.020373582839966
    4. ' foot' → logprob: -2.145373582839966
    5. 'foot' → logprob: -3.270373582839966
    6. '(' → logprob: -3.270373582839966
    7. ' n' → logprob: -3.395373582839966
    8. 'for' → logprob: -3.520373582839966
    9. ' all' → logprob: -3.770373582839966
    10. ' any' → logprob: -3.770373582839966

Token 277: ' overlap' (ID: 56631)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.8978595733642578
    2. ')' → logprob: -2.022859573364258
    3. ' further' → logprob: -2.522859573364258
    4. ' more' → logprob: -2.647859573364258
    5. '       ' → logprob: -2.897859573364258
    6. 'e' → logprob: -3.147859573364258
    7. ' for' → logprob: -3.147859573364258
    8. 'w' → logprob: -3.272859573364258
    9. '   ' → logprob: -3.272859573364258
    10. ' foot' → logprob: -3.397859573364258

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2801588773727417
    2. '       ' → logprob: -2.5301589965820312
    3. ',
' → logprob: -2.6551589965820312
    4. ' ,' → logprob: -3.0301589965820312
    5. '<|end|>' → logprob: -3.5301589965820312
    6. ' and' → logprob: -5.780158996582031
    7. ' for' → logprob: -5.780158996582031
    8. ':
' → logprob: -6.280158996582031
    9. '
' → logprob: -6.280158996582031
    10. ':' → logprob: -6.405158996582031

Token 279: ' foot' (ID: 6428)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8115103244781494
    2. ' found' → logprob: -1.4365103244781494
    3. '       ' → logprob: -2.0615103244781494
    4. 'found' → logprob: -3.0615103244781494
    5. 'for' → logprob: -3.4365103244781494
    6. ' visited' → logprob: -3.9365103244781494
    7. ' possible' → logprob: -4.43651008605957
    8. 'visited' → logprob: -4.56151008605957
    9. ' adjacency' → logprob: -4.68651008605957
    10. 'possible' → logprob: -5.18651008605957

Token 280: ' cell' (ID: 4206)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.11645384132862091
    2. 's' → logprob: -2.4914538860321045
    3. ' not' → logprob: -4.866453647613525
    4. 'cells' → logprob: -5.991453647613525
    5. ' in' → logprob: -6.116453647613525
    6. '   ' → logprob: -6.241453647613525
    7. ' s' → logprob: -6.241453647613525
    8. ')' → logprob: -6.616453647613525
    9. 'not' → logprob: -6.616453647613525
    10. ' !=' → logprob: -6.616453647613525

Token 281: ' is' (ID: 382)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1760304868221283
    2. 's' → logprob: -2.676030397415161
    3. ' in' → logprob: -2.676030397415161
    4. 'not' → logprob: -4.42603063583374
    5. ' s' → logprob: -5.67603063583374
    6. ')' → logprob: -6.05103063583374
    7. ' is' → logprob: -6.42603063583374
    8. ' can' → logprob: -7.17603063583374
    9. '   ' → logprob: -7.55103063583374
    10. 'in' → logprob: -7.55103063583374

Token 282: ' never' (ID: 3779)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.17839325964450836
    2. 'not' → logprob: -2.5533933639526367
    3. ' never' → logprob: -2.8033933639526367
    4. ' always' → logprob: -4.303393363952637
    5. ' in' → logprob: -5.678393363952637
    6. 'never' → logprob: -5.678393363952637
    7. ' guaranteed' → logprob: -5.928393363952637
    8. 'always' → logprob: -7.553393363952637
    9. ' either' → logprob: -8.428393363952637
    10. 'in' → logprob: -8.803393363952637

Token 283: ' head' (ID: 3189)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3967498242855072
    2. ' in' → logprob: -1.8967498540878296
    3. ' part' → logprob: -3.52174973487854
    4. 'equal' → logprob: -3.52174973487854
    5. 'a' → logprob: -3.64674973487854
    6. 'adj' → logprob: -3.77174973487854
    7. ' equal' → logprob: -3.89674973487854
    8. ' itself' → logprob: -4.521749973297119
    9. ' a' → logprob: -4.771749973297119
    10. 'the' → logprob: -5.146749973297119

Token 284: ' cell' (ID: 4206)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6871845722198486
    2. '
' → logprob: -0.9371845722198486
    3. '<|end|>' → logprob: -2.4371845722198486
    4. '        
' → logprob: -4.8121843338012695
    5. ' for' → logprob: -6.0621843338012695
    6. '<|end|>' → logprob: -6.0621843338012695
    7. ',' → logprob: -6.6871843338012695
    8. ')' → logprob: -7.0621843338012695
    9. '.' → logprob: -7.6871843338012695
    10. ')
' → logprob: -7.9371843338012695

Token 286: ' same' (ID: 2684)
  Prédit: 'another'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'another' → logprob: -1.109573245048523
    2. 'the' → logprob: -1.609573245048523
    3. 'any' → logprob: -1.984573245048523
    4. ' the' → logprob: -1.984573245048523
    5. ' another' → logprob: -2.7345733642578125
    6. ' any' → logprob: -2.9845733642578125
    7. 'same' → logprob: -3.6095733642578125
    8. ' same' → logprob: -3.9845733642578125
    9. ' its' → logprob: -4.6095733642578125
    10. 'a' → logprob: -4.9845733642578125

Token 287: ' fut' (ID: 4073)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.712039589881897
    2. ' fut' → logprob: -0.712039589881897
    3. '   ' → logprob: -5.337039470672607
    4. 'foot' → logprob: -5.462039470672607
    5. 'for' → logprob: -5.587039470672607
    6. '       ' → logprob: -6.962039470672607
    7. ' for' → logprob: -6.962039470672607
    8. 'def' → logprob: -7.087039470672607
    9. ' or' → logprob: -7.837039470672607
    10. ' f' → logprob: -7.962039470672607

Token 288: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.004790853708982468
    2. 'ons' → logprob: -5.379790782928467
    3. 'or' → logprob: -10.004791259765625
    4. 'for' → logprob: -10.254791259765625
    5. 'on's' → logprob: -11.129791259765625
    6. '   ' → logprob: -11.129791259765625
    7. ')' → logprob: -11.254791259765625
    8. '       ' → logprob: -11.504791259765625
    9. 'ont' → logprob: -11.629791259765625
    10. ' ' → logprob: -12.129791259765625

Token 289: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07658755034208298
    2. '
' → logprob: -2.701587438583374
    3. '        
' → logprob: -6.076587677001953
    4. '<|end|>' → logprob: -6.076587677001953
    5. ',' → logprob: -7.451587677001953
    6. ' for' → logprob: -7.576587677001953
    7. '<|end|>' → logprob: -8.701587677001953
    8. '.' → logprob: -9.076587677001953
    9. ')' → logprob: -9.076587677001953
    10. ',
' → logprob: -9.451587677001953

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009599658660590649
    2. '
' → logprob: -5.509599685668945
    3. '<|end|>' → logprob: -6.009599685668945
    4. '        
' → logprob: -6.384599685668945
    5. ',' → logprob: -8.009599685668945
    6. ' for' → logprob: -8.259599685668945
    7. ')' → logprob: -8.509599685668945
    8. '   ' → logprob: -9.134599685668945
    9. '           ' → logprob: -9.384599685668945
    10. '    
' → logprob: -9.759599685668945

Token 291: ' bad' (ID: 4790)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011762511916458607
    2. ' for' → logprob: -4.761762619018555
    3. ' found' → logprob: -6.136762619018555
    4. '        
' → logprob: -7.886762619018555
    5. 'for' → logprob: -8.261762619018555
    6. 'found' → logprob: -9.636762619018555
    7. ' is' → logprob: -10.511762619018555
    8. '   ' → logprob: -10.636762619018555
    9. '           ' → logprob: -10.636762619018555
    10. ',' → logprob: -10.636762619018555

Token 292: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10110274702310562
    2. '=' → logprob: -2.851102828979492
    3. ' =' → logprob: -3.976102828979492
    4. '_cells' → logprob: -4.601102828979492
    5. '_neighbors' → logprob: -4.851102828979492
    6. '_positions' → logprob: -7.976102828979492
    7. '_found' → logprob: -7.976102828979492
    8. '   ' → logprob: -8.101102828979492
    9. ':' → logprob: -8.851102828979492
    10. '_pairs' → logprob: -9.101102828979492

Token 293: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02975245751440525
    2. ' False' → logprob: -3.529752492904663
    3. '   ' → logprob: -13.279752731323242
    4. 'set' → logprob: -16.279752731323242
    5. '(False' → logprob: -16.904752731323242
    6. 'True' → logprob: -17.904752731323242
    7. '=False' → logprob: -17.904752731323242
    8. '0' → logprob: -18.279752731323242
    9. ' ' → logprob: -18.529752731323242
    10. '[]' → logprob: -19.154752731323242

Token 294: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4275673031806946
    2. '
' → logprob: -1.8025672435760498
    3. '<|end|>' → logprob: -1.8025672435760498
    4. '   ' → logprob: -5.427567481994629
    5. '<|end|>' → logprob: -6.177567481994629
    6. '        
' → logprob: -6.177567481994629
    7. '    
' → logprob: -6.302567481994629
    8. ' for' → logprob: -6.302567481994629
    9. '  
' → logprob: -6.552567481994629
    10. '	' → logprob: -7.052567481994629

Token 295: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3638981580734253
    2. '       ' → logprob: -1.3638981580734253
    3. '<|end|>' → logprob: -3.238898277282715
    4. '   ' → logprob: -6.488898277282715
    5. ' for' → logprob: -6.738898277282715
    6. '        
' → logprob: -6.738898277282715
    7. '  
' → logprob: -6.863898277282715
    8. '    
' → logprob: -6.988898277282715
    9. '\n' → logprob: -6.988898277282715
    10. '<|end|>' → logprob: -7.238898277282715

Token 296: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20857737958431244
    2. ' for' → logprob: -2.0835773944854736
    3. '
' → logprob: -2.8335773944854736
    4. 'for' (adapté à ' for') → logprob: -5.5835771560668945
    5. '   ' → logprob: -8.083577156066895
    6. '        
' → logprob: -8.958577156066895
    7. ' 
' → logprob: -8.958577156066895
    8. ' ' → logprob: -9.083577156066895
    9. '<|end|>' → logprob: -9.333577156066895
    10. '	' → logprob: -9.458577156066895

Token 297: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.7441052794456482
    2. 'f' → logprob: -1.119105339050293
    3. ' h' → logprob: -2.244105339050293
    4. 'h' → logprob: -2.619105339050293
    5. '   ' → logprob: -5.619105339050293
    6. ' fx' → logprob: -5.869105339050293
    7. 'foot' → logprob: -5.994105339050293
    8. ' foot' → logprob: -6.369105339050293
    9. ' (' → logprob: -6.369105339050293
    10. 'fx' → logprob: -6.619105339050293

Token 298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05075926333665848
    2. ' ' → logprob: -3.6757593154907227
    3. 'in' → logprob: -3.8007593154907227
    4. '_' → logprob: -7.550759315490723
    5. 'n' → logprob: -7.550759315490723
    6. '<|end|>' → logprob: -8.550759315490723
    7. ',' → logprob: -8.800759315490723
    8. '  ' → logprob: -9.550759315490723
    9. ')' → logprob: -9.550759315490723
    10. 'i' → logprob: -9.925759315490723

Token 299: ' foot' (ID: 6428)
  Prédit: 'foot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foot' → logprob: -0.001282376004382968
    2. ' foot' → logprob: -6.751282215118408
    3. 'head' → logprob: -9.126282691955566
    4. 'fo' → logprob: -13.626282691955566
    5. ' ' → logprob: -14.376282691955566
    6. '   ' → logprob: -14.501282691955566
    7. '  ' → logprob: -15.251282691955566
    8. 'Foot' → logprob: -15.501282691955566
    9. 'f' → logprob: -15.751282691955566
    10. ' head' → logprob: -16.00128173828125

Token 300: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.00016599490481894463
    2. '_' → logprob: -9.000165939331055
    3. 's' → logprob: -10.750165939331055
    4. ')_' → logprob: -12.500165939331055
    5. ' _' → logprob: -12.625165939331055
    6. '_cell' → logprob: -12.750165939331055
    7. ')' → logprob: -12.750165939331055
    8. 'cells' → logprob: -13.750165939331055
    9. '```' → logprob: -13.750165939331055
    10. '_c' → logprob: -14.375165939331055

Token 301: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012714827433228493
    2. ':
' → logprob: -4.387714862823486
    3. ' :' → logprob: -9.637714385986328
    4. '):' → logprob: -10.012714385986328
    5. ' in' → logprob: -10.512714385986328
    6. ',' → logprob: -10.512714385986328
    7. '   ' → logprob: -11.262714385986328
    8. '):
' → logprob: -11.762714385986328
    9. '       ' → logprob: -12.387714385986328
    10. ':
' → logprob: -12.762714385986328

Token 302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08231034874916077
    2. '       ' → logprob: -2.957310438156128
    3. '<|end|>' → logprob: -4.457310199737549
    4. ' if' → logprob: -4.957310199737549
    5. ',' → logprob: -5.957310199737549
    6. '<|end|>' → logprob: -6.707310199737549
    7. ':' → logprob: -7.082310199737549
    8. ' for' → logprob: -7.207310199737549
    9. '   ' → logprob: -7.582310199737549
    10. '        ' → logprob: -7.832310199737549

Token 303: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03222406283020973
    2. '       ' → logprob: -4.407224178314209
    3. ' if' → logprob: -4.657224178314209
    4. 'for' (adapté à ' for') → logprob: -6.157224178314209
    5. ' n' → logprob: -6.282224178314209
    6. ' neighbors' → logprob: -6.407224178314209
    7. ' x' → logprob: -6.532224178314209
    8. '        ' → logprob: -7.282224178314209
    9. '    ' → logprob: -7.782224178314209
    10. ' ' → logprob: -7.907224178314209

Token 304: ' nb' (ID: 28791)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0064210714772343636
    2. ' nx' → logprob: -5.506421089172363
    3. '(nx' → logprob: -6.881421089172363
    4. 'nh' → logprob: -7.756421089172363
    5. 'hx' → logprob: -7.756421089172363
    6. 'n' → logprob: -7.881421089172363
    7. 'nb' → logprob: -11.006421089172363
    8. 'x' → logprob: -11.256421089172363
    9. ' nh' → logprob: -11.631421089172363
    10. 'hn' → logprob: -11.881421089172363

Token 305: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06213909387588501
    2. 'in' → logprob: -3.1871390342712402
    3. '(nb' → logprob: -4.31213903427124
    4. '(' → logprob: -6.43713903427124
    5. ' ' → logprob: -6.43713903427124
    6. ',' → logprob: -7.93713903427124
    7. '(n' → logprob: -8.187139511108398
    8. ')' → logprob: -8.312139511108398
    9. '(ne' → logprob: -8.312139511108398
    10. 'or' → logprob: -8.437139511108398

Token 306: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.07892900705337524
    2. ' neighbors' → logprob: -2.5789289474487305
    3. '   ' → logprob: -11.20392894744873
    4. '(ne' → logprob: -11.57892894744873
    5. 'ne' → logprob: -11.57892894744873
    6. '           ' → logprob: -13.20392894744873
    7. '_neighbors' → logprob: -13.57892894744873
    8. '       ' → logprob: -13.57892894744873
    9. '[' → logprob: -14.45392894744873
    10. ')' → logprob: -14.82892894744873

Token 307: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.2532951831817627
    2. '(*' → logprob: -1.5032951831817627
    3. '(' → logprob: -6.878294944763184
    4. 'f' → logprob: -8.128294944763184
    5. ')' → logprob: -11.253294944763184
    6. '*f' → logprob: -11.628294944763184
    7. ' (' → logprob: -12.003294944763184
    8. ' f' → logprob: -13.128294944763184
    9. ' (*' → logprob: -13.253294944763184
    10. '(*(' → logprob: -13.378294944763184

Token 308: '[' (ID: 58)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.27558937668800354
    2. '):
' → logprob: -1.7755893468856812
    3. '[' → logprob: -2.6505894660949707
    4. '(' → logprob: -7.650589466094971
    5. '):
' → logprob: -8.650588989257812
    6. '(f' → logprob: -9.400588989257812
    7. ')' → logprob: -10.275588989257812
    8. ' ):' → logprob: -10.900588989257812
    9. '   ' → logprob: -11.275588989257812
    10. ':' → logprob: -11.275588989257812

Token 309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022070204431656748
    2. '[' → logprob: -8.87522029876709
    3. ' ' → logprob: -10.37522029876709
    4. ')]' → logprob: -10.75022029876709
    5. ')' → logprob: -11.25022029876709
    6. ')])' → logprob: -12.62522029876709
    7. '):' → logprob: -12.87522029876709
    8. '   ' → logprob: -13.00022029876709
    9. ')][' → logprob: -13.37522029876709
    10. '
' → logprob: -13.62522029876709

Token 310: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004281659494154155
    2. ',f' → logprob: -8.125428199768066
    3. ' ,' → logprob: -9.125428199768066
    4. '],' → logprob: -11.250428199768066
    5. ',n' → logprob: -12.875428199768066
    6. ' ' → logprob: -13.250428199768066
    7. '   ' → logprob: -13.500428199768066
    8. ',b' → logprob: -14.250428199768066
    9. ',
' → logprob: -14.250428199768066
    10. '),' → logprob: -14.625428199768066

Token 311: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0024758970830589533
    2. ' f' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.62747573852539
    4. '    ' → logprob: -17.62747573852539
    5. '	f' → logprob: -17.87747573852539
    6. ' ' → logprob: -18.37747573852539
    7. '  ' → logprob: -18.75247573852539
    8. '     ' → logprob: -19.37747573852539
    9. '       ' → logprob: -20.00247573852539
    10. ')' → logprob: -20.37747573852539

Token 312: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019311357755213976
    2. '[' → logprob: -6.251931190490723
    3. ' ' → logprob: -14.001931190490723
    4. '   ' → logprob: -14.376931190490723
    5. '```' → logprob: -14.376931190490723
    6. ')' → logprob: -15.626931190490723
    7. '0' → logprob: -15.626931190490723
    8. '
' → logprob: -16.501930236816406
    9. '``' → logprob: -17.251930236816406
    10. '(' → logprob: -18.001930236816406

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.500001907348633
    4. '
' → logprob: -16.750001907348633
    5. '0' → logprob: -17.375001907348633
    6. '[' → logprob: -18.250001907348633
    7. '```' → logprob: -18.375001907348633
    8. 'f' → logprob: -18.750001907348633
    9. '])' → logprob: -19.687501907348633
    10. '4' → logprob: -19.687501907348633

Token 314: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018630845472216606
    2. ']):' → logprob: -4.2686309814453125
    3. '):
' → logprob: -6.1436309814453125
    4. ')' → logprob: -6.1436309814453125
    5. ']:' → logprob: -9.768630981445312
    6. ']):
' → logprob: -10.143630981445312
    7. ')]' → logprob: -10.768630981445312
    8. ' ):' → logprob: -11.518630981445312
    9. '>):' → logprob: -11.893630981445312
    10. '）：' → logprob: -12.143630981445312

Token 315: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013423854485154152
    2. '           ' → logprob: -4.388423919677734
    3. ' if' → logprob: -7.263423919677734
    4. 'if' → logprob: -9.638423919677734
    5. '       ' → logprob: -10.388423919677734
    6. '
' → logprob: -10.513423919677734
    7. '<|end|>' → logprob: -11.013423919677734
    8. '	           ' → logprob: -11.138423919677734
    9. '   ' → logprob: -11.513423919677734
    10. '            
' → logprob: -11.638423919677734

Token 316: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10320056229829788
    2. ' if' → logprob: -2.353200674057007
    3. '               ' → logprob: -5.978200435638428
    4. '           ' → logprob: -8.478200912475586
    5. '                   ' → logprob: -8.478200912475586
    6. '   ' → logprob: -10.353200912475586
    7. '	if' → logprob: -12.603200912475586
    8. '       ' → logprob: -13.728200912475586
    9. '	           ' → logprob: -13.978200912475586
    10. 'If' → logprob: -14.228200912475586

Token 317: ' nb' (ID: 28791)
  Prédit: ' nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nb' → logprob: -0.018222754821181297
    2. 'nb' → logprob: -4.018222808837891
    3. '(nb' → logprob: -9.64322280883789
    4. '	nb' → logprob: -11.89322280883789
    5. '_nb' → logprob: -15.26822280883789
    6. 'n' → logprob: -15.51822280883789
    7. 'b' → logprob: -15.64322280883789
    8. '   ' → logprob: -16.14322280883789
    9. ' ' → logprob: -16.64322280883789
    10. '
' → logprob: -16.76822280883789

Token 318: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132782578468323
    2. 'in' → logprob: -1.3132781982421875
    3. ' ' → logprob: -11.813278198242188
    4. '<|end|>' → logprob: -11.813278198242188
    5. ')' → logprob: -13.813278198242188
    6. '	in' → logprob: -15.438278198242188
    7. ' not' → logprob: -16.438278198242188
    8. '<|end|>' → logprob: -16.688278198242188
    9. '==' → logprob: -16.938278198242188
    10. '_in' → logprob: -17.063278198242188

Token 319: ' head' (ID: 3189)
  Prédit: 'head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -7.505351095460355e-05
    2. ' head' → logprob: -9.500075340270996
    3. 'foot' → logprob: -16.12507438659668
    4. '   ' → logprob: -17.50007438659668
    5. ' ' → logprob: -19.25007438659668
    6. '	head' → logprob: -19.50007438659668
    7. '.head' → logprob: -20.50007438659668
    8. '=head' → logprob: -21.00007438659668
    9. '(head' → logprob: -21.00007438659668
    10. '           ' → logprob: -22.25007438659668

Token 320: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -1.9361264946837764e-07
    2. 'cells' → logprob: -16.75
    3. '_' → logprob: -18.5
    4. '_heads' → logprob: -18.75
    5. ' cells' → logprob: -19.0
    6. ' _' → logprob: -19.625
    7. '_cell' → logprob: -20.0
    8. '_c' → logprob: -20.25
    9. 's' → logprob: -20.25
    10. 'Cells' → logprob: -20.375

Token 321: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038273513317108154
    2. 'and' → logprob: -3.288273572921753
    3. '               ' → logprob: -8.913273811340332
    4. '                   ' → logprob: -10.288273811340332
    5. '<|end|>' → logprob: -10.663273811340332
    6. '           ' → logprob: -11.038273811340332
    7. '                ' → logprob: -12.038273811340332
    8. ':' → logprob: -12.788273811340332
    9. '              ' → logprob: -12.788273811340332
    10. '            ' → logprob: -12.913273811340332

Token 322: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6387779712677002
    2. '                   ' → logprob: -0.7637779712677002
    3. 'and' → logprob: -5.763777732849121
    4. '               ' → logprob: -6.638777732849121
    5. '                       ' → logprob: -7.638777732849121
    6. '                    
' → logprob: -8.138777732849121
    7. '                ' → logprob: -8.763777732849121
    8. '                  ' → logprob: -8.763777732849121
    9. '<|end|>' → logprob: -8.763777732849121
    10. '                    ' → logprob: -8.763777732849121

Token 323: ' bad' (ID: 4790)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07499714195728302
    2. ' if' → logprob: -3.1999971866607666
    3. ' bad' → logprob: -4.1999969482421875
    4. '                   ' → logprob: -5.0749969482421875
    5. ' and' → logprob: -5.4499969482421875
    6. '               ' → logprob: -6.3249969482421875
    7. 'bad' (adapté à ' bad') → logprob: -6.5749969482421875
    8. 'if' → logprob: -6.6999969482421875
    9. '
' → logprob: -7.0749969482421875
    10. '   ' → logprob: -8.824996948242188

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132716417312622
    2. '=' → logprob: -1.3132716417312622
    3. '=True' → logprob: -11.688271522521973
    4. ' ' → logprob: -14.688271522521973
    5. '                       ' → logprob: -15.563271522521973
    6. '   ' → logprob: -15.688271522521973
    7. '                   ' → logprob: -16.06327247619629
    8. '=False' → logprob: -16.06327247619629
    9. '               ' → logprob: -16.43827247619629
    10. '                           ' → logprob: -16.93827247619629

Token 325: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.029750484973192215
    2. 'True' → logprob: -3.5297505855560303
    3. '=True' → logprob: -18.15475082397461
    4. '(True' → logprob: -18.77975082397461
    5. ' Tru' → logprob: -21.27975082397461
    6. ' true' → logprob: -21.90475082397461
    7. ' ' → logprob: -22.90475082397461
    8. '.True' → logprob: -23.15475082397461
    9. '1' → logprob: -23.27975082397461
    10. '   ' → logprob: -23.40475082397461

Token 326: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0034565716050565243
    2. '<|end|>' → logprob: -5.8784565925598145
    3. '               ' → logprob: -8.503456115722656
    4. '
' → logprob: -8.628456115722656
    5. '                       ' → logprob: -9.003456115722656
    6. '           ' → logprob: -10.128456115722656
    7. '                    
' → logprob: -10.503456115722656
    8. '                    ' → logprob: -11.128456115722656
    9. '<|end|>' → logprob: -11.253456115722656
    10. '       ' → logprob: -11.378456115722656

Token 327: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007710324716754258
    2. '<|end|>' → logprob: -7.6257710456848145
    3. '                    
' → logprob: -9.750770568847656
    4. '                       ' → logprob: -9.750770568847656
    5. '               ' → logprob: -10.000770568847656
    6. '                    ' → logprob: -10.375770568847656
    7. '           ' → logprob: -10.875770568847656
    8. '				' → logprob: -11.375770568847656
    9. '       ' → logprob: -11.875770568847656
    10. '<|end|>' → logprob: -11.875770568847656

Token 328: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003862245939671993
    2. 'break' (adapté à ' break') → logprob: -8.750386238098145
    3. ' break' → logprob: -8.875386238098145
    4. '                       ' → logprob: -10.250386238098145
    5. '               ' → logprob: -10.750386238098145
    6. '                    
' → logprob: -12.125386238098145
    7. '                    ' → logprob: -12.375386238098145
    8. '           ' → logprob: -12.500386238098145
    9. '				' → logprob: -12.625386238098145
    10. '
' → logprob: -12.750386238098145

Token 329: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3086276948451996
    2. '<|end|>' → logprob: -1.558627724647522
    3. '
' → logprob: -3.0586276054382324
    4. '       ' → logprob: -5.808627605438232
    5. '               ' → logprob: -6.558627605438232
    6. '<|end|>' → logprob: -7.058627605438232
    7. '  
' → logprob: -7.683627605438232
    8. ' ' → logprob: -8.18362808227539
    9. '   ' → logprob: -8.30862808227539
    10. ' 
' → logprob: -8.43362808227539

Token 330: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006701869890093803
    2. '       ' → logprob: -6.006701946258545
    3. '<|end|>' → logprob: -6.256701946258545
    4. '
' → logprob: -6.381701946258545
    5. '               ' → logprob: -8.881701469421387
    6. '   ' → logprob: -9.256701469421387
    7. '        
' → logprob: -9.756701469421387
    8. '          ' → logprob: -10.006701469421387
    9. '		' → logprob: -10.256701469421387
    10. '    
' → logprob: -10.381701469421387

Token 331: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03180820867419243
    2. '           ' → logprob: -3.6568081378936768
    3. '<|end|>' → logprob: -6.031808376312256
    4. '               ' → logprob: -6.906808376312256
    5. '
' → logprob: -7.656808376312256
    6. '   ' → logprob: -7.781808376312256
    7. '        ' → logprob: -7.906808376312256
    8. ' ' → logprob: -8.156807899475098
    9. '        
' → logprob: -9.031807899475098
    10. '    ' → logprob: -9.906807899475098

Token 332: ' bad' (ID: 4790)
  Prédit: ' bad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bad' → logprob: -0.003177952254191041
    2. 'bad' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.628177642822266
    4. 'b' → logprob: -17.753177642822266
    5. '_bad' → logprob: -17.878177642822266
    6. ' not' → logprob: -18.253177642822266
    7. ' good' → logprob: -18.378177642822266
    8. ' ' → logprob: -18.503177642822266
    9. ' break' → logprob: -18.628177642822266
    10. ' b' → logprob: -19.378177642822266

Token 333: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2247672975063324
    2. ':
' → logprob: -2.2247672080993652
    3. '           ' → logprob: -2.4747672080993652
    4. '               ' → logprob: -5.099767208099365
    5. '       ' → logprob: -5.974767208099365
    6. '==' → logprob: -9.474767684936523
    7. '   ' → logprob: -9.974767684936523
    8. '                   ' → logprob: -10.099767684936523
    9. '                       ' → logprob: -10.224767684936523
    10. '):
' → logprob: -10.474767684936523

Token 334: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20145319402217865
    2. '           ' → logprob: -1.7014532089233398
    3. '       ' → logprob: -11.07645320892334
    4. 'break' → logprob: -11.32645320892334
    5. ' break' → logprob: -12.07645320892334
    6. '                   ' → logprob: -13.20145320892334
    7. '	       ' → logprob: -13.32645320892334
    8. '		' → logprob: -13.82645320892334
    9. '			' → logprob: -14.45145320892334
    10. '	           ' → logprob: -15.07645320892334

Token 335: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -1.109519600868225
    2. '           ' → logprob: -1.359519600868225
    3. 'break' (adapté à ' break') → logprob: -1.359519600868225
    4. '               ' → logprob: -1.859519600868225
    5. '       ' → logprob: -7.3595194816589355
    6. '   ' → logprob: -8.234519958496094
    7. '	break' → logprob: -9.859519958496094
    8. ' ' → logprob: -12.359519958496094
    9. '                   ' → logprob: -12.734519958496094
    10. '
' → logprob: -13.484519958496094

Token 336: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8882599472999573
    2. '       ' → logprob: -1.0132598876953125
    3. '<|end|>' → logprob: -1.5132598876953125
    4. '        
' → logprob: -6.1382598876953125
    5. '   ' → logprob: -6.6382598876953125
    6. '<|end|>' → logprob: -7.3882598876953125
    7. '    
' → logprob: -7.6382598876953125
    8. '  
' → logprob: -9.013259887695312
    9. ',' → logprob: -9.138259887695312
    10. '            
' → logprob: -9.388259887695312

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.443739116191864
    2. '
' → logprob: -1.4437391757965088
    3. '<|end|>' → logprob: -2.193739175796509
    4. '        
' → logprob: -5.19373893737793
    5. '   ' → logprob: -5.56873893737793
    6. '    
' → logprob: -7.56873893737793
    7. '<|end|>' → logprob: -7.56873893737793
    8. '```' → logprob: -9.19373893737793
    9. '            
' → logprob: -9.44373893737793
    10. '  
' → logprob: -10.31873893737793

Token 338: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0460447259247303
    2. 'if' (adapté à ' if') → logprob: -3.1710448265075684
    3. ' if' → logprob: -6.171044826507568
    4. '   ' → logprob: -7.421044826507568
    5. '
' → logprob: -8.42104434967041
    6. 'print' → logprob: -9.29604434967041
    7. '```' → logprob: -10.92104434967041
    8. '        
' → logprob: -11.67104434967041
    9. '<|end|>' → logprob: -11.79604434967041
    10. '	if' → logprob: -13.42104434967041

Token 339: ' bad' (ID: 4790)
  Prédit: ' bad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bad' → logprob: -0.079025499522686
    2. ' not' → logprob: -2.5790255069732666
    3. ' ' → logprob: -8.954025268554688
    4. 'bad' → logprob: -12.579025268554688
    5. ' ' → logprob: -13.579025268554688
    6. 'not' → logprob: -13.954025268554688
    7. ' good' → logprob: -13.954025268554688
    8. '_bad' → logprob: -18.454025268554688
    9. ' no' → logprob: -18.579025268554688
    10. ' space' → logprob: -18.829025268554688

Token 340: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38703635334968567
    2. ':
' → logprob: -1.1370363235473633
    3. '           ' → logprob: -8.887036323547363
    4. '       ' → logprob: -11.887036323547363
    5. '==' → logprob: -12.137036323547363
    6. ' ==' → logprob: -12.387036323547363
    7. ':

' → logprob: -12.762036323547363
    8. ':
' → logprob: -13.012036323547363
    9. '():
' → logprob: -13.637036323547363
    10. ' :' → logprob: -13.887036323547363

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007615071372129023
    2. '
' → logprob: -8.250761032104492
    3. 'print' → logprob: -8.250761032104492
    4. ' print' → logprob: -9.000761032104492
    5. '       ' → logprob: -9.250761032104492
    6. '            
' → logprob: -11.750761032104492
    7. '```' → logprob: -12.875761032104492
    8. '        
' → logprob: -12.875761032104492
    9. '	       ' → logprob: -13.500761032104492
    10. '               ' → logprob: -13.875761032104492

Token 342: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.34173479676246643
    2. 'print' (adapté à ' print') → logprob: -1.591734766960144
    3. '           ' → logprob: -3.0917348861694336
    4. '       ' → logprob: -3.2167348861694336
    5. '   ' → logprob: -7.966734886169434
    6. '	print' → logprob: -11.716734886169434
    7. ' ' → logprob: -12.091734886169434
    8. '               ' → logprob: -12.341734886169434
    9. '
' → logprob: -12.591734886169434
    10. '        
' → logprob: -12.716734886169434

Token 343: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03143053874373436
    2. '('' → logprob: -3.90643048286438
    3. '(' → logprob: -4.531430721282959
    4. ' ("' → logprob: -10.4064302444458
    5. '"' → logprob: -11.6564302444458
    6. '(-' → logprob: -12.2814302444458
    7. '(NO' → logprob: -12.5314302444458
    8. '   ' → logprob: -12.6564302444458
    9. '(No' → logprob: -12.9064302444458
    10. '(False' → logprob: -13.2814302444458

Token 344: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.2307482957839966
    2. 'NG' → logprob: -1.2307482957839966
    3. 'NO' → logprob: -1.7307482957839966
    4. 'Bad' → logprob: -2.605748176574707
    5. 'BAD' → logprob: -3.480748176574707
    6. 'NA' → logprob: -3.855748176574707
    7. 'Impossible' → logprob: -3.855748176574707
    8. 'im' → logprob: -4.605748176574707
    9. 'Invalid' → logprob: -4.605748176574707
    10. 'Yes' → logprob: -4.605748176574707

Token 345: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -5.0020742492051795e-05
    2. ' ")' → logprob: -10.500049591064453
    3. '"' → logprob: -11.750049591064453
    4. '!")' → logprob: -12.375049591064453
    5. '")
' → logprob: -13.000049591064453
    6. 's' → logprob: -13.750049591064453
    7. '.")' → logprob: -14.000049591064453
    8. ' Good' → logprob: -14.250049591064453
    9. ')' → logprob: -14.750049591064453
    10. '");' → logprob: -14.875049591064453

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016110755677800626
    2. ' else' → logprob: -9.500161170959473
    3. 'else' → logprob: -9.750161170959473
    4. '<|end|>' → logprob: -11.250161170959473
    5. '```' → logprob: -11.875161170959473
    6. '           ' → logprob: -13.125161170959473
    7. '   ' → logprob: -13.125161170959473
    8. ')' → logprob: -13.125161170959473
    9. ',' → logprob: -14.500161170959473
    10. '[' → logprob: -15.375161170959473

Token 347: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007261582184582949
    2. ' else' → logprob: -5.132261753082275
    3. 'else' (adapté à ' else') → logprob: -6.632261753082275
    4. '   ' → logprob: -12.132261276245117
    5. '<|end|>' → logprob: -12.882261276245117
    6. '           ' → logprob: -13.257261276245117
    7. '	else' → logprob: -13.882261276245117
    8. '```' → logprob: -14.007261276245117
    9. '	' → logprob: -14.382261276245117
    10. '      ' → logprob: -14.507261276245117

Token 348: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12068226933479309
    2. ':' → logprob: -2.4956822395324707
    3. ':
' → logprob: -3.4956822395324707
    4. '(' → logprob: -8.245682716369629
    5. '	       ' → logprob: -8.495682716369629
    6. '		' → logprob: -9.620682716369629
    7. '<|end|>' → logprob: -9.745682716369629
    8. '       ' → logprob: -9.870682716369629
    9. '():
' → logprob: -10.120682716369629
    10. '          ' → logprob: -10.245682716369629

Token 349: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001733855315251276
    2. '       ' → logprob: -9.250173568725586
    3. 'print' → logprob: -10.625173568725586
    4. ' print' → logprob: -10.625173568725586
    5. '	       ' → logprob: -10.625173568725586
    6. '		' → logprob: -13.750173568725586
    7. '```' → logprob: -14.125173568725586
    8. '   ' → logprob: -14.125173568725586
    9. '               ' → logprob: -14.250173568725586
    10. '          ' → logprob: -15.250173568725586

Token 350: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.20230667293071747
    2. ' print' → logprob: -1.7023066282272339
    3. '           ' → logprob: -7.077306747436523
    4. '       ' → logprob: -9.952306747436523
    5. '   ' → logprob: -14.702306747436523
    6. '	print' → logprob: -14.702306747436523
    7. '```' → logprob: -14.952306747436523
    8. '               ' → logprob: -16.452306747436523
    9. ' ' → logprob: -17.702306747436523
    10. '.print' → logprob: -17.827306747436523

Token 351: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.011055837385356426
    2. '(' → logprob: -4.511055946350098
    3. '("("' → logprob: -12.011055946350098
    4. '(
' → logprob: -13.636055946350098
    5. '('' → logprob: -14.511055946350098
    6. '("""' → logprob: -16.38605499267578
    7. '("(' → logprob: -16.88605499267578
    8. '("")' → logprob: -17.63605499267578
    9. '(""' → logprob: -17.76105499267578
    10. ' ("' → logprob: -17.76105499267578

Token 352: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -4.320199877838604e-07
    2. '"' → logprob: -15.5
    3. 'YES' → logprob: -16.625
    4. ' Yes' → logprob: -16.625
    5. 'Ye' → logprob: -17.625
    6. 'No' → logprob: -19.25
    7. '“Yes' → logprob: -20.375
    8. 'Ok' → logprob: -20.625
    9. 'OK' → logprob: -20.75
    10. 'yes' → logprob: -20.75

Token 353: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.011097692884504795
    2. ')' → logprob: -4.5110979080200195
    3. ')")' → logprob: -10.38609790802002
    4. '")
' → logprob: -11.01109790802002
    5. '```' → logprob: -13.76109790802002
    6. '')' → logprob: -14.01109790802002
    7. ')
' → logprob: -16.011096954345703
    8. '`)' → logprob: -16.011096954345703
    9. '}")' → logprob: -16.136096954345703
    10. '"' → logprob: -16.386096954345703

Token 354: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 353
Tokens correctement prédits (1ère position, stricte): 152
Tokens correctement prédits (1ère position, avec adaptation): 160
Tokens correctement prédits (top 10): 277
Précision stricte (1ère position): 43.06%
Précision adaptée (1ère position): 45.33%
Précision (top 10): 78.47%
================================================================================
