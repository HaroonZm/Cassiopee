================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import Tuple, List, Dict

class Player(ABC):
    @abstractmethod
    def name(self) -> str:
        pass

class Fabre(Player):
    def name(self) -> str:
        return "Fabre"

class Audrey(Player):
    def name(self) -> str:
        return "Audrey"

class GameState:
    def __init__(self, number: str):
        self.number = number

    def __hash__(self):
        return hash(self.number)

    def __eq__(self, other):
        if not isinstance(other, GameState):
            return False
        return self.number == other.number

    def is_terminal(self) -> bool:
        return len(self.number) == 1

    def generate_next_states(self) -> List['GameState']:
        # From current number, generate all possible next states according to rules
        next_states = []
        digits = list(map(int, self.number))
        n = len(digits)
        for i in range(n-1):
            # sum of adjacent i and i+1 digits
            s = digits[i] + digits[i+1]
            # create new digits list with i and i+1 replaced by s
            new_digits = digits[:i] + [s] + digits[i+2:]
            new_number_str = "".join(str(d) for d in new_digits)
            next_states.append(GameState(new_number_str))
        return next_states

class Outcome:
    def __init__(self, winner: Player):
        self.winner = winner

class Strategy(ABC):
    @abstractmethod
    def decide_winner(self, state: GameState, is_first_player_turn: bool) -> Player:
        pass

class MinimaxStrategy(Strategy):
    def __init__(self, first_player: Player, second_player: Player):
        self.first_player = first_player
        self.second_player = second_player
        self.memo: Dict[Tuple[str,bool], Player] = {}

    def decide_winner(self, state: GameState, is_first_player_turn: bool) -> Player:
        key = (state.number, is_first_player_turn)
        if key in self.memo:
            return self.memo[key]

        if state.is_terminal():
            # The player who cannot move loses.
            # If it's first player's turn and no moves => first_player loses => second_player wins
            # So winner is the opponent of the current player who cannot move.
            winner = self.second_player if is_first_player_turn else self.first_player
            self.memo[key] = winner
            return winner

        next_states = state.generate_next_states()
        if not next_states:
            # No moves possible; current player loses => opponent wins
            winner = self.second_player if is_first_player_turn else self.first_player
            self.memo[key] = winner
            return winner

        # Current player tries to move so that they can win
        current_player = self.first_player if is_first_player_turn else self.second_player
        opponent = self.second_player if is_first_player_turn else self.first_player

        for nxt in next_states:
            nxt_winner = self.decide_winner(nxt, not is_first_player_turn)
            if nxt_winner == current_player:
                # Current player can force a win
                self.memo[key] = current_player
                return current_player

        # Otherwise, opponent wins
        self.memo[key] = opponent
        return opponent

class Game:
    def __init__(self, initial_number: str, first_player: Player, second_player: Player):
        self.state = GameState(initial_number)
        self.first_player = first_player
        self.second_player = second_player
        # For now, use minimax strategy with memoization
        self.strategy = MinimaxStrategy(first_player, second_player)

    def play(self) -> Player:
        return self.strategy.decide_winner(self.state, True)

class InputParser:
    def __init__(self):
        pass

    def parse_input(self) -> List[str]:
        dataset_count = int(input())
        numbers = []
        for _ in range(dataset_count):
            num_str = input().strip()
            numbers.append(num_str)
        return numbers

class OutputFormatter:
    def __init__(self):
        pass

    def format_winner(self, player: Player) -> str:
        # According to problem statement, add period at end
        return f"{player.name()} wins."

def main():
    parser = InputParser()
    formatter = OutputFormatter()
    player1 = Fabre()
    player2 = Audrey()

    test_numbers = parser.parse_input()

    for number in test_numbers:
        game = Game(number, player1, player2)
        winner = game.play()
        print(formatter.format_winner(winner))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.4742446839809418
    2. 'ABC' → logprob: -0.9742447137832642
    3. ' A' → logprob: -9.849245071411133
    4. 'AB' → logprob: -10.224245071411133
    5. 'A' → logprob: -10.724245071411133
    6. 'ABCDE' → logprob: -10.724245071411133
    7. 'abc' → logprob: -10.849245071411133
    8. 'abstract' → logprob: -11.849245071411133
    9. ' abstract' → logprob: -13.224245071411133
    10. 'import' → logprob: -13.599245071411133

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6998194456100464
    2. '.' → logprob: -0.6998194456100464
    3. 'import' → logprob: -6.574819564819336
    4. '<|end|>' → logprob: -6.824819564819336
    5. ':' → logprob: -6.949819564819336
    6. ' ,' → logprob: -7.074819564819336
    7. ' ' → logprob: -7.574819564819336
    8. ' .' → logprob: -7.574819564819336
    9. '```' → logprob: -8.199819564819336
    10. '' → logprob: -8.324819564819336

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5464798808097839
    2. 'abstract' → logprob: -0.9214798808097839
    3. 'Abstract' → logprob: -3.7964799404144287
    4. ' ' → logprob: -8.671480178833008
    5. ' Abstract' → logprob: -9.046480178833008
    6. '.abstract' → logprob: -9.296480178833008
    7. ' A' → logprob: -9.921480178833008
    8. '```' → logprob: -10.546480178833008
    9. ' ABC' → logprob: -10.796480178833008
    10. ' ABSTRACT' → logprob: -11.296480178833008

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -2.7133641196996905e-05
    2. 'classmethod' → logprob: -10.62502670288086
    3. 'staticmethod' → logprob: -13.75002670288086
    4. 'meth' → logprob: -14.12502670288086
    5. 'm' → logprob: -15.50002670288086
    6. '_method' → logprob: -15.62502670288086
    7. 'ethod' → logprob: -15.75002670288086
    8. ' method' → logprob: -15.87502670288086
    9. 'abstract' → logprob: -16.12502670288086
    10. 'met' → logprob: -16.37502670288086

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44023677706718445
    2. 'class' → logprob: -1.6902368068695068
    3. '```' → logprob: -1.9402368068695068
    4. '

' → logprob: -4.690236568450928
    5. '\n' → logprob: -4.940236568450928
    6. '' → logprob: -5.940236568450928
    7. ' class' → logprob: -6.315236568450928
    8. '<|end|>' → logprob: -6.315236568450928
    9. '``' → logprob: -6.690236568450928
    10. '
' → logprob: -7.065236568450928

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05012281984090805
    2. '

' → logprob: -3.5501227378845215
    3. 'class' → logprob: -4.6751227378845215
    4. '```' → logprob: -5.1751227378845215
    5. '
' → logprob: -6.5501227378845215
    6. '' → logprob: -7.0501227378845215
    7. '\n' → logprob: -7.4251227378845215
    8. '  
' → logprob: -7.5501227378845215
    9. ' 
' → logprob: -8.05012321472168
    10. '``' → logprob: -8.17512321472168

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.11298394203186035
    2. ' collections' → logprob: -2.4879839420318604
    3. 'typing' → logprob: -4.487983703613281
    4. ' dat' → logprob: -4.987983703613281
    5. 'collections' → logprob: -6.362983703613281
    6. ' os' → logprob: -6.487983703613281
    7. ' math' → logprob: -7.612983703613281
    8. ' sys' → logprob: -7.737983703613281
    9. ' datetime' → logprob: -7.737983703613281
    10. ' io' → logprob: -8.112983703613281

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.042810648679733276
    2. 'import' → logprob: -3.2928106784820557
    3. '<|end|>' → logprob: -6.042810440063477
    4. '.' → logprob: -6.542810440063477
    5. ' ' → logprob: -7.542810440063477
    6. '<|end|>' → logprob: -9.542810440063477
    7. ' as' → logprob: -9.667810440063477
    8. '[' → logprob: -9.792810440063477
    9. '```' → logprob: -10.292810440063477
    10. ' .' → logprob: -10.417810440063477

Token 11: ' Tuple' (ID: 50841)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.4503095746040344
    2. ' List' → logprob: -1.7003095149993896
    3. 'Any' → logprob: -2.0753095149993896
    4. ' Union' → logprob: -3.7003095149993896
    5. ' Callable' → logprob: -4.325309753417969
    6. 'List' → logprob: -5.075309753417969
    7. ' Protocol' → logprob: -5.575309753417969
    8. ' Optional' → logprob: -6.075309753417969
    9. 'Union' → logprob: -6.825309753417969
    10. 'Callable' → logprob: -6.950309753417969

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8321534395217896
    2. '
' → logprob: -0.9571534395217896
    3. 'class' → logprob: -1.8321534395217896
    4. '```' → logprob: -4.0821533203125
    5. '\n' → logprob: -6.7071533203125
    6. '


' → logprob: -6.9571533203125
    7. '``' → logprob: -7.0821533203125
    8. '
' → logprob: -7.8321533203125
    9. ' class' → logprob: -8.8321533203125
    10. '`

' → logprob: -8.9571533203125

Token 13: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -1.3111306428909302
    2. ' Union' → logprob: -1.4361306428909302
    3. ' Any' → logprob: -1.9361306428909302
    4. ' Callable' → logprob: -2.1861305236816406
    5. ' Optional' → logprob: -2.5611305236816406
    6. 'Any' → logprob: -2.6861305236816406
    7. 'Union' → logprob: -3.6861305236816406
    8. 'List' → logprob: -3.8111305236816406
    9. 'Optional' → logprob: -4.186130523681641
    10. ' Protocol' → logprob: -4.311130523681641

Token 14: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3756021559238434
    2. '
' → logprob: -1.375602126121521
    3. 'class' → logprob: -2.8756022453308105
    4. '```' → logprob: -5.7506022453308105
    5. '


' → logprob: -8.250601768493652
    6. '\n' → logprob: -8.500601768493652
    7. '
' → logprob: -8.750601768493652
    8. '``' → logprob: -8.750601768493652
    9. ' class' → logprob: -10.250601768493652
    10. '<class' → logprob: -11.500601768493652

Token 15: ' Dict' (ID: 55179)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.9427555203437805
    2. ' Optional' → logprob: -1.6927554607391357
    3. ' Callable' → logprob: -1.6927554607391357
    4. ' Any' → logprob: -2.9427554607391357
    5. 'Optional' → logprob: -3.0677554607391357
    6. 'Any' → logprob: -3.3177554607391357
    7. ' Dict' → logprob: -3.4427554607391357
    8. 'Callable' → logprob: -3.5677554607391357
    9. 'Union' → logprob: -3.5677554607391357
    10. 'Dict' → logprob: -5.067755699157715

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.445451945066452
    2. 'class' → logprob: -1.4454519748687744
    3. '

' → logprob: -2.1954519748687744
    4. '```' → logprob: -4.945451736450195
    5. '\n' → logprob: -5.445451736450195
    6. '


' → logprob: -8.195451736450195
    7. '``' → logprob: -8.320451736450195
    8. ' class' → logprob: -8.695451736450195
    9. '<class' → logprob: -8.945451736450195
    10. '
' → logprob: -8.945451736450195

Token 17: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.012347886338829994
    2. '
' → logprob: -4.51234769821167
    3. 'c' → logprob: -6.88734769821167
    4. '```' → logprob: -8.637348175048828
    5. '\n' → logprob: -10.387348175048828
    6. ' class' → logprob: -10.762348175048828
    7. '

' → logprob: -10.887348175048828
    8. '``' → logprob: -12.137348175048828
    9. '"class' → logprob: -12.387348175048828
    10. ' 
' → logprob: -12.387348175048828

Token 18: ' Player' (ID: 12487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22167088091373444
    2. ' Abstract' → logprob: -3.0966708660125732
    3. ' Base' → logprob: -3.0966708660125732
    4. ' My' → logprob: -3.3466708660125732
    5. ' Space' → logprob: -4.721671104431152
    6. ' Serializer' → logprob: -4.721671104431152
    7. ' Shape' → logprob: -4.971671104431152
    8. ' User' → logprob: -5.096671104431152
    9. ' ABC' → logprob: -5.221671104431152
    10. ' Task' → logprob: -5.721671104431152

Token 19: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11316695809364319
    2. ':' → logprob: -2.2381670475006104
    3. '(Abstract' → logprob: -8.238166809082031
    4. '():' → logprob: -10.113166809082031
    5. '```' → logprob: -11.738166809082031
    6. '(Player' → logprob: -12.238166809082031
    7. ' :' → logprob: -12.363166809082031
    8. '<|end|>' → logprob: -12.988166809082031
    9. '(object' → logprob: -13.113166809082031
    10. ':
' → logprob: -13.113166809082031

Token 20: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.014255649410188198
    2. ' ABC' → logprob: -4.264255523681641
    3. ')' → logprob: -10.26425552368164
    4. 'AB' → logprob: -11.01425552368164
    5. 'abc' → logprob: -11.51425552368164
    6. 'Abstract' → logprob: -11.76425552368164
    7. 'ABCDE' → logprob: -11.88925552368164
    8. '   ' → logprob: -12.01425552368164
    9. '):' → logprob: -12.63925552368164
    10. ' ' → logprob: -13.63925552368164

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015658074989914894
    2. ')' → logprob: -6.501565933227539
    3. ':' → logprob: -10.376565933227539
    4. '):
' → logprob: -10.751565933227539
    5. ',' → logprob: -11.751565933227539
    6. ' ):' → logprob: -13.876565933227539
    7. '):

' → logprob: -14.001565933227539
    8. '):
' → logprob: -15.501565933227539
    9. '():' → logprob: -15.626565933227539
    10. ')>' → logprob: -15.876565933227539

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05314387381076813
    2. ':' → logprob: -3.6781439781188965
    3. '    
' → logprob: -4.6781439781188965
    4. '    ' → logprob: -5.4281439781188965
    5. 'def' → logprob: -5.8031439781188965
    6. '
' → logprob: -5.8031439781188965
    7. '<|end|>' → logprob: -5.9281439781188965
    8. ' def' → logprob: -7.0531439781188965
    9. ')' → logprob: -7.3031439781188965
    10. '```' → logprob: -8.303143501281738

Token 23: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9038075804710388
    2. ' def' → logprob: -1.0288076400756836
    3. '   ' → logprob: -1.5288076400756836
    4. '    
' → logprob: -4.528807640075684
    5. '
' → logprob: -5.528807640075684
    6. '    ' → logprob: -5.778807640075684
    7. ' 
' → logprob: -7.278807640075684
    8. ' @' → logprob: -7.528807640075684
    9. '@' (adapté à ' @') → logprob: -7.528807640075684
    10. ' ' → logprob: -8.403807640075684

Token 24: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -7.465036105713807e-06
    2. 'ab' → logprob: -12.250007629394531
    3. 'abs' → logprob: -13.125007629394531
    4. 'property' → logprob: -15.375007629394531
    5. 'abc' → logprob: -15.375007629394531
    6. 'staticmethod' → logprob: -16.00000762939453
    7. '.abstract' → logprob: -16.75000762939453
    8. ' abstract' → logprob: -17.37500762939453
    9. 'classmethod' → logprob: -18.00000762939453
    10. 'a' → logprob: -18.00000762939453

Token 25: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0009166974923573434
    2. '_method' → logprob: -7.000916481018066
    3. 'classmethod' → logprob: -12.750916481018066
    4. 'meth' → logprob: -14.000916481018066
    5. '	method' → logprob: -15.000916481018066
    6. 'staticmethod' → logprob: -15.000916481018066
    7. ' method' → logprob: -15.625916481018066
    8. '_' → logprob: -15.875916481018066
    9. '   ' → logprob: -16.000917434692383
    10. '.method' → logprob: -16.250917434692383

Token 26: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.14796246588230133
    2. 'def' → logprob: -2.0229625701904297
    3. ' ' → logprob: -6.02296257019043
    4. '(' → logprob: -7.27296257019043
    5. '    ' → logprob: -7.27296257019043
    6. '   ' → logprob: -8.02296257019043
    7. '    
' → logprob: -8.52296257019043
    8. '<|end|>' → logprob: -8.77296257019043
    9. '
' → logprob: -9.02296257019043
    10. ')' → logprob: -9.27296257019043

Token 27: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9024324417114258
    2. '(' → logprob: -1.4024324417114258
    3. 'method' → logprob: -2.027432441711426
    4. '
' → logprob: -2.277432441711426
    5. ' def' → logprob: -2.652432441711426
    6. '    
' → logprob: -5.027432441711426
    7. '('' → logprob: -5.027432441711426
    8. '\' → logprob: -5.652432441711426
    9. ' (' → logprob: -5.777432441711426
    10. '(
' → logprob: -5.902432441711426

Token 28: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17030125856399536
    2. 'method' → logprob: -2.0453011989593506
    3. ' def' → logprob: -4.04530143737793
    4. 'classmethod' → logprob: -5.29530143737793
    5. 'abstract' → logprob: -5.92030143737793
    6. 'property' → logprob: -7.29530143737793
    7. 'staticmethod' → logprob: -8.29530143737793
    8. '
' → logprob: -8.54530143737793
    9. ' ' → logprob: -8.92030143737793
    10. '`' → logprob: -9.04530143737793

Token 29: ' name' (ID: 1308)
  Prédit: ' play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' play' → logprob: -0.17104598879814148
    2. ' ' → logprob: -2.421046018600464
    3. ' move' → logprob: -3.296046018600464
    4. ' make' → logprob: -4.046045780181885
    5. ' get' → logprob: -6.046045780181885
    6. ' initialize' → logprob: -6.046045780181885
    7. ' take' → logprob: -6.421045780181885
    8. ' choose' → logprob: -6.671045780181885
    9. ' update' → logprob: -6.671045780181885
    10. ' def' → logprob: -6.671045780181885

Token 30: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003322792239487171
    2. '(' → logprob: -5.753322601318359
    3. ')' → logprob: -9.50332260131836
    4. ' (' → logprob: -10.87832260131836
    5. ')(' → logprob: -10.87832260131836
    6. 'self' → logprob: -11.00332260131836
    7. '(s' → logprob: -11.87832260131836
    8. 's' → logprob: -12.87832260131836
    9. '()' → logprob: -13.62832260131836
    10. '```' → logprob: -13.75332260131836

Token 31: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004887416027486324
    2. '):' → logprob: -5.379887580871582
    3. 'self' → logprob: -8.504887580871582
    4. ',' → logprob: -10.129887580871582
    5. ')->' → logprob: -11.379887580871582
    6. ' )' → logprob: -12.004887580871582
    7. ':' → logprob: -12.504887580871582
    8. '(self' → logprob: -14.254887580871582
    9. ',)' → logprob: -14.254887580871582
    10. '),' → logprob: -14.629887580871582

Token 32: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007707654032856226
    2. '(' → logprob: -4.882707595825195
    3. 'self' → logprob: -10.007707595825195
    4. '()' → logprob: -10.757707595825195
    5. ')' → logprob: -11.007707595825195
    6. ' (' → logprob: -12.632707595825195
    7. '():' → logprob: -12.882707595825195
    8. '(s' → logprob: -12.882707595825195
    9. '(
' → logprob: -12.882707595825195
    10. '   ' → logprob: -13.507707595825195

Token 33: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.002975679701194167
    2. 'str' → logprob: -6.0029754638671875
    3. ' ' → logprob: -7.6279754638671875
    4. ' None' → logprob: -12.002975463867188
    5. '  ' → logprob: -13.002975463867188
    6. '	str' → logprob: -13.627975463867188
    7. '[str' → logprob: -14.127975463867188
    8. ' ' → logprob: -14.252975463867188
    9. '    ' → logprob: -14.877975463867188
    10. '   ' → logprob: -15.002975463867188

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.398067828034982e-05
    2. '():' → logprob: -10.25007438659668
    3. '):' → logprob: -11.25007438659668
    4. ':return' → logprob: -11.50007438659668
    5. ':
' → logprob: -12.50007438659668
    6. ' :' → logprob: -12.50007438659668
    7. '<|end|>' → logprob: -12.87507438659668
    8. '   ' → logprob: -13.12507438659668
    9. ':def' → logprob: -13.25007438659668
    10. '.' → logprob: -14.50007438659668

Token 35: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.650399386882782
    2. '       ' → logprob: -1.4003994464874268
    3. ' pass' → logprob: -1.5253994464874268
    4. '...' → logprob: -4.400399208068848
    5. '   ' → logprob: -6.650399208068848
    6. '<|end|>' → logprob: -8.525399208068848
    7. '	pass' → logprob: -8.525399208068848
    8. ' ...' → logprob: -10.150399208068848
    9. 'raise' → logprob: -10.650399208068848
    10. '    ' → logprob: -10.900399208068848

Token 37: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6302348375320435
    2. '<|end|>' → logprob: -1.0052348375320435
    3. '\n' → logprob: -3.255234718322754
    4. '   ' → logprob: -3.630234718322754
    5. '

' → logprob: -4.505234718322754
    6. '    
' → logprob: -4.880234718322754
    7. '<|end|>' → logprob: -5.005234718322754
    8. ' 
' → logprob: -6.130234718322754
    9. 'newline' → logprob: -6.255234718322754
    10. '  
' → logprob: -6.505234718322754

Token 38: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22300344705581665
    2. '   ' → logprob: -2.223003387451172
    3. '<|end|>' → logprob: -3.473003387451172
    4. '

' → logprob: -3.848003387451172
    5. '\n' → logprob: -3.848003387451172
    6. '    
' → logprob: -4.598003387451172
    7. '<|end|>' → logprob: -6.098003387451172
    8. ' 
' → logprob: -6.973003387451172
    9. 'class' → logprob: -7.098003387451172
    10. ':' → logprob: -7.223003387451172

Token 39: ' Fab' (ID: 44633)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.954018771648407
    2. ' Chess' → logprob: -1.5790188312530518
    3. ' Player' → logprob: -1.8290188312530518
    4. ' Bot' → logprob: -2.3290188312530518
    5. ' Computer' → logprob: -3.9540188312530518
    6. ' Game' → logprob: -4.329018592834473
    7. ' Warrior' → logprob: -4.454018592834473
    8. ' AI' → logprob: -4.704018592834473
    9. ' Agent' → logprob: -4.954018592834473
    10. ' Poker' → logprob: -4.954018592834473

Token 40: 're' (ID: 264)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'io' → logprob: -1.2871626615524292
    2. 'i' → logprob: -1.4121626615524292
    3. 'ian' → logprob: -1.5371626615524292
    4. 'er' → logprob: -1.9121626615524292
    5. 'ri' → logprob: -2.7871627807617188
    6. 'iano' → logprob: -4.412162780761719
    7. 'ric' → logprob: -4.537162780761719
    8. 'erg' → logprob: -5.287162780761719
    9. 'e' → logprob: -5.662162780761719
    10. 'rique' → logprob: -5.662162780761719

Token 41: '(Player' (ID: 50954)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3617972731590271
    2. 'au' → logprob: -2.111797332763672
    3. 'r' → logprob: -2.236797332763672
    4. 'Player' → logprob: -4.111797332763672
    5. 'e' → logprob: -4.611797332763672
    6. 'o' → logprob: -4.861797332763672
    7. 'tte' → logprob: -4.861797332763672
    8. 'c' → logprob: -5.486797332763672
    9. 's' → logprob: -5.611797332763672
    10. 'l' → logprob: -5.861797332763672

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012591355480253696
    2. ')' → logprob: -4.387591361999512
    3. '):
' → logprob: -9.512591361999512
    4. ' ):' → logprob: -13.137591361999512
    5. ':' → logprob: -13.387591361999512
    6. '   ' → logprob: -13.637591361999512
    7. '):

' → logprob: -13.762591361999512
    8. '):
' → logprob: -14.887591361999512
    9. ',' → logprob: -15.137591361999512
    10. '```' → logprob: -16.012590408325195

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016865752637386322
    2. '
' → logprob: -5.0168657302856445
    3. ' def' → logprob: -5.7668657302856445
    4. '    ' → logprob: -6.1418657302856445
    5. '    
' → logprob: -6.1418657302856445
    6. 'def' → logprob: -6.5168657302856445
    7. '<|end|>' → logprob: -7.8918657302856445
    8. ' 
' → logprob: -8.891865730285645
    9. ' ' → logprob: -8.891865730285645
    10. '       ' → logprob: -9.016865730285645

Token 44: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3678663372993469
    2. ' def' → logprob: -1.2428662776947021
    3. 'def' (adapté à ' def') → logprob: -3.992866277694702
    4. '    ' → logprob: -7.617866516113281
    5. '    
' → logprob: -9.742866516113281
    6. ' ' → logprob: -9.867866516113281
    7. '```' → logprob: -10.242866516113281
    8. '
' → logprob: -10.367866516113281
    9. '@property' → logprob: -10.492866516113281
    10. ' name' → logprob: -10.617866516113281

Token 45: ' name' (ID: 1308)
  Prédit: ' name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.012327747419476509
    2. ' __' → logprob: -4.762327671051025
    3. 'name' → logprob: -6.012327671051025
    4. ' ' → logprob: -6.887327671051025
    5. ' _' → logprob: -9.137328147888184
    6. ' def' → logprob: -10.262328147888184
    7. '__' → logprob: -10.262328147888184
    8. ' ' → logprob: -10.762328147888184
    9. '_' → logprob: -10.887328147888184
    10. '_name' → logprob: -12.012328147888184

Token 46: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002003218833124265
    2. '(' → logprob: -8.625200271606445
    3. '(s' → logprob: -11.250200271606445
    4. '       ' → logprob: -12.875200271606445
    5. ' (' → logprob: -13.125200271606445
    6. '   ' → logprob: -13.375200271606445
    7. ')' → logprob: -14.500200271606445
    8. 'self' → logprob: -15.000200271606445
    9. '(
' → logprob: -15.875200271606445
    10. ' ' → logprob: -16.125200271606445

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002953015500679612
    2. 'self' → logprob: -8.375295639038086
    3. '):' → logprob: -9.875295639038086
    4. '   ' → logprob: -12.250295639038086
    5. '):
' → logprob: -13.125295639038086
    6. '       ' → logprob: -13.125295639038086
    7. ' )' → logprob: -13.375295639038086
    8. ')->' → logprob: -13.750295639038086
    9. '(self' → logprob: -13.750295639038086
    10. '`)' → logprob: -15.875295639038086

Token 48: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.726714551448822
    2. ' ->' → logprob: -1.2267146110534668
    3. '(self' → logprob: -2.476714611053467
    4. ':' → logprob: -2.476714611053467
    5. ')' → logprob: -3.226714611053467
    6. '       ' → logprob: -4.976714611053467
    7. '(' → logprob: -5.851714611053467
    8. ')->' → logprob: -5.851714611053467
    9. '   ' → logprob: -6.726714611053467
    10. 'self' → logprob: -7.101714611053467

Token 49: ' str' (ID: 989)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.7647274732589722
    2. ' str' → logprob: -1.1397274732589722
    3. '"' → logprob: -1.8897274732589722
    4. ' '' → logprob: -2.8897275924682617
    5. ''' → logprob: -5.139727592468262
    6. ' ' → logprob: -6.639727592468262
    7. ' ' → logprob: -8.139727592468262
    8. 'str' → logprob: -8.514727592468262
    9. '   ' → logprob: -9.014727592468262
    10. '    ' → logprob: -10.139727592468262

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.3596853831550106e-05
    2. '):' → logprob: -10.875053405761719
    3. ':
' → logprob: -11.000053405761719
    4. '():' → logprob: -11.625053405761719
    5. ' :' → logprob: -12.625053405761719
    6. ':return' → logprob: -12.875053405761719
    7. '       ' → logprob: -14.000053405761719
    8. ':**' → logprob: -14.125053405761719
    9. '>:' → logprob: -14.625053405761719
    10. '":' → logprob: -14.750053405761719

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08715810626745224
    2. '"' → logprob: -2.962158203125
    3. ''' → logprob: -3.462158203125
    4. ' '' → logprob: -9.337158203125
    5. '        ' → logprob: -9.587158203125
    6. ' "' → logprob: -9.712158203125
    7. '   ' → logprob: -9.962158203125
    8. '`' → logprob: -10.962158203125
    9. '           ' → logprob: -11.087158203125
    10. '        
' → logprob: -11.087158203125

Token 52: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5541391968727112
    2. '"' → logprob: -1.3041391372680664
    3. 'return' (adapté à ' return') → logprob: -2.3041391372680664
    4. ' return' → logprob: -3.0541391372680664
    5. ''' → logprob: -5.304139137268066
    6. ' "' → logprob: -6.554139137268066
    7. '   ' → logprob: -7.804139137268066
    8. ' '' → logprob: -9.554139137268066
    9. '           ' → logprob: -10.179139137268066
    10. '"""' → logprob: -11.179139137268066

Token 53: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05041179805994034
    2. ''' → logprob: -3.3004117012023926
    3. ' "' → logprob: -4.425411701202393
    4. ' '' → logprob: -8.05041217803955
    5. '"I' → logprob: -13.17541217803955
    6. ' ' → logprob: -13.67541217803955
    7. '"A' → logprob: -13.80041217803955
    8. '`' → logprob: -14.67541217803955
    9. ' ' → logprob: -15.30041217803955
    10. ''s' → logprob: -15.42541217803955

Token 54: 'Fab' (ID: 75489)
  Prédit: 'Fab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fab' → logprob: -0.0005402852548286319
    2. ''' → logprob: -8.750540733337402
    3. 'fab' → logprob: -8.750540733337402
    4. '"' → logprob: -9.125540733337402
    5. 'F' → logprob: -10.000540733337402
    6. 'Fabric' → logprob: -10.500540733337402
    7. ' Fab' → logprob: -10.750540733337402
    8. 'FAB' → logprob: -12.250540733337402
    9. 'Gab' → logprob: -13.250540733337402
    10. '`' → logprob: -13.250540733337402

Token 55: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00010819212911883369
    2. 'r' → logprob: -9.250107765197754
    3. 'ré' → logprob: -11.625107765197754
    4. 'ре' → logprob: -14.000107765197754
    5. ' re' → logprob: -14.625107765197754
    6. '	re' → logprob: -14.875107765197754
    7. 'e' → logprob: -15.500107765197754
    8. 'Re' → logprob: -15.625107765197754
    9. 'er' → logprob: -15.875107765197754
    10. 'reur' → logprob: -16.00010871887207

Token 56: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -4.36574100604048e-06
    2. '"
' → logprob: -13.250004768371582
    3. '"""' → logprob: -14.125004768371582
    4. '"`' → logprob: -14.625004768371582
    5. ''"' → logprob: -14.875004768371582
    6. '```' → logprob: -15.375004768371582
    7. ' "' → logprob: -15.625004768371582
    8. '"

' → logprob: -15.750004768371582
    9. '"I' → logprob: -16.375003814697266
    10. '\"' → logprob: -16.625003814697266

Token 57: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16455461084842682
    2. 'class' → logprob: -2.4145545959472656
    3. '

' → logprob: -2.7895545959472656
    4. ' class' → logprob: -8.164554595947266
    5. '    
' → logprob: -8.664554595947266
    6. '


' → logprob: -9.039554595947266
    7. '<|end|>' → logprob: -9.539554595947266
    8. '```' → logprob: -9.789554595947266
    9. '\n' → logprob: -10.039554595947266
    10. '   ' → logprob: -10.664554595947266

Token 58: ' Audrey' (ID: 136593)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4188756942749023
    2. ' R' → logprob: -2.1688756942749023
    3. ' Ar' → logprob: -3.2938756942749023
    4. ' Fab' → logprob: -3.2938756942749023
    5. ' AI' → logprob: -3.6688756942749023
    6. ' Pierre' → logprob: -3.7938756942749023
    7. ' Chess' → logprob: -3.9188756942749023
    8. ' Space' → logprob: -3.9813756942749023
    9. ' M' → logprob: -3.9813756942749023
    10. ' Car' → logprob: -4.106375694274902

Token 59: '(Player' (ID: 50954)
  Prédit: '(Player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Player' → logprob: -2.3199920178740285e-05
    2. '(' → logprob: -10.750022888183594
    3. '(player' → logprob: -14.000022888183594
    4. 'Player' → logprob: -15.125022888183594
    5. '(F' → logprob: -15.375022888183594
    6. '(P' → logprob: -15.750022888183594
    7. '<Player' → logprob: -16.750022888183594
    8. '(Game' → logprob: -16.875022888183594
    9. '   ' → logprob: -17.000022888183594
    10. '	Player' → logprob: -17.000022888183594

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4769735634326935
    2. '):
' → logprob: -0.9769735336303711
    3. ')' → logprob: -5.976973533630371
    4. '):
' → logprob: -8.226973533630371
    5. '   ' → logprob: -9.476973533630371
    6. '):

' → logprob: -12.101973533630371
    7. ':' → logprob: -12.851973533630371
    8. ' ' → logprob: -13.601973533630371
    9. ':
' → logprob: -14.476973533630371
    10. ')
' → logprob: -14.726973533630371

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034642943646758795
    2. ':' → logprob: -5.753464221954346
    3. '
' → logprob: -9.628464698791504
    4. '    
' → logprob: -10.003464698791504
    5. '    ' → logprob: -10.253464698791504
    6. ':
' → logprob: -10.378464698791504
    7. ' def' → logprob: -10.503464698791504
    8. '  ' → logprob: -10.628464698791504
    9. '       ' → logprob: -11.003464698791504
    10. ' ' → logprob: -11.753464698791504

Token 62: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4196537137031555
    2. ' def' → logprob: -1.4196536540985107
    3. 'def' (adapté à ' def') → logprob: -2.2946536540985107
    4. ' ' → logprob: -9.66965389251709
    5. '  ' → logprob: -10.41965389251709
    6. '
' → logprob: -11.29465389251709
    7. '    ' → logprob: -11.91965389251709
    8. '	def' → logprob: -12.54465389251709
    9. '       ' → logprob: -12.66965389251709
    10. '    
' → logprob: -12.91965389251709

Token 63: ' name' (ID: 1308)
  Prédit: ' name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.10032280534505844
    2. 'name' → logprob: -2.350322723388672
    3. ' def' → logprob: -9.725322723388672
    4. 'def' → logprob: -10.725322723388672
    5. ' ' → logprob: -11.100322723388672
    6. '  ' → logprob: -11.975322723388672
    7. '   ' → logprob: -11.975322723388672
    8. '(name' → logprob: -13.475322723388672
    9. '	name' → logprob: -13.725322723388672
    10. '_name' → logprob: -13.850322723388672

Token 64: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004294771933928132
    2. '(' → logprob: -7.875429630279541
    3. ')' → logprob: -10.375429153442383
    4. '   ' → logprob: -12.375429153442383
    5. 'self' → logprob: -12.750429153442383
    6. '```' → logprob: -12.875429153442383
    7. ')(' → logprob: -13.375429153442383
    8. ' (' → logprob: -13.500429153442383
    9. '()' → logprob: -13.750429153442383
    10. '       ' → logprob: -13.750429153442383

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ' )' → logprob: -12.375007629394531
    3. 'self' → logprob: -13.250007629394531
    4. '   ' → logprob: -14.125007629394531
    5. '(self' → logprob: -15.000007629394531
    6. '       ' → logprob: -15.500007629394531
    7. ' ' → logprob: -15.875007629394531
    8. '`)' → logprob: -16.62500762939453
    9. '```' → logprob: -17.00000762939453
    10. ')
' → logprob: -17.12500762939453

Token 66: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.026341410353779793
    2. ')' → logprob: -4.151341438293457
    3. '->' → logprob: -4.776341438293457
    4. '   ' → logprob: -7.401341438293457
    5. '       ' → logprob: -7.401341438293457
    6. '(' → logprob: -8.651341438293457
    7. '(self' → logprob: -9.151341438293457
    8. ' ' → logprob: -9.276341438293457
    9. ')->' → logprob: -9.401341438293457
    10. '    ' → logprob: -10.651341438293457

Token 67: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.038079023361206055
    2. 'str' → logprob: -3.288079023361206
    3. '"' → logprob: -10.413079261779785
    4. ' "' → logprob: -12.663079261779785
    5. ' ' → logprob: -13.038079261779785
    6. '[str' → logprob: -14.538079261779785
    7. 's' → logprob: -15.038079261779785
    8. '	str' → logprob: -15.163079261779785
    9. ' ' → logprob: -15.163079261779785
    10. 'Str' → logprob: -15.788079261779785

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008241023868322372
    2. '       ' → logprob: -5.008241176605225
    3. '():' → logprob: -7.008241176605225
    4. '):' → logprob: -7.633241176605225
    5. ':
' → logprob: -9.633240699768066
    6. ' :' → logprob: -10.258240699768066
    7. ':return' → logprob: -10.883240699768066
    8. '):
' → logprob: -12.508240699768066
    9. '   ' → logprob: -12.508240699768066
    10. '>:' → logprob: -13.383240699768066

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023798657639417797
    2. '"' → logprob: -8.750238418579102
    3. '        ' → logprob: -10.500238418579102
    4. 'return' → logprob: -10.625238418579102
    5. ' return' → logprob: -10.750238418579102
    6. '   ' → logprob: -13.375238418579102
    7. '           ' → logprob: -13.500238418579102
    8. '      ' → logprob: -13.750238418579102
    9. ' "' → logprob: -14.000238418579102
    10. '    ' → logprob: -15.000238418579102

Token 70: ' return' (ID: 622)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.39975228905677795
    2. 'return' (adapté à ' return') → logprob: -1.1497522592544556
    3. ' return' → logprob: -4.774752140045166
    4. '       ' → logprob: -5.774752140045166
    5. '"A' → logprob: -7.024752140045166
    6. '   ' → logprob: -8.649752616882324
    7. ' "' → logprob: -8.649752616882324
    8. '           ' → logprob: -12.524752616882324
    9. ' ' → logprob: -13.274752616882324
    10. '`' → logprob: -13.524752616882324

Token 71: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10036701709032059
    2. ' "' → logprob: -2.3503670692443848
    3. '"A' → logprob: -9.350366592407227
    4. ''' → logprob: -10.475366592407227
    5. ' ' → logprob: -10.600366592407227
    6. ' ' → logprob: -11.225366592407227
    7. ' '' → logprob: -13.225366592407227
    8. '""' → logprob: -13.975366592407227
    9. '"""' → logprob: -14.350366592407227
    10. '"А' → logprob: -14.725366592407227

Token 72: 'Aud' (ID: 54517)
  Prédit: 'Aud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Aud' → logprob: -0.0003850325592793524
    2. '"' → logprob: -8.000385284423828
    3. '"A' → logprob: -10.000385284423828
    4. 'aud' → logprob: -13.125385284423828
    5. ''A' → logprob: -14.125385284423828
    6. 'AUD' → logprob: -14.500385284423828
    7. 'Fab' → logprob: -15.375385284423828
    8. ' Audrey' → logprob: -15.625385284423828
    9. 'Audit' → logprob: -15.750385284423828
    10. '`' → logprob: -16.375385284423828

Token 73: 'rey' (ID: 14603)
  Prédit: 'rey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rey' → logprob: -2.45848218582978e-06
    2. 're' → logprob: -13.12500286102295
    3. 'r' → logprob: -15.00000286102295
    4. ' rey' → logprob: -17.500001907348633
    5. '```' → logprob: -18.375001907348633
    6. 'ray' → logprob: -19.375001907348633
    7. '\' → logprob: -19.625001907348633
    8. 'roy' → logprob: -19.625001907348633
    9. 'rev' → logprob: -19.625001907348633
    10. '**' → logprob: -19.750001907348633

Token 74: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -4.990154047845863e-05
    2. '"
' → logprob: -10.000049591064453
    3. '"""' → logprob: -13.250049591064453
    4. '```' → logprob: -13.875049591064453
    5. '"

' → logprob: -14.000049591064453
    6. '"`' → logprob: -15.000049591064453
    7. ' "' → logprob: -15.875049591064453
    8. '"}' → logprob: -16.500049591064453
    9. ''"' → logprob: -16.625049591064453
    10. '")' → logprob: -17.000049591064453

Token 75: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.030069684609770775
    2. '
' → logprob: -3.530069589614868
    3. ' class' → logprob: -9.155069351196289
    4. 'c' → logprob: -9.905069351196289
    5. '<|end|>' → logprob: -10.155069351196289
    6. '

' → logprob: -10.405069351196289
    7. '```' → logprob: -11.030069351196289
    8. '  
' → logprob: -11.155069351196289
    9. '#' → logprob: -11.655069351196289
    10. '<|end|>' → logprob: -11.905069351196289

Token 76: ' Game' (ID: 7022)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -2.1639626026153564
    2. ' Chess' → logprob: -2.1639626026153564
    3. ' Pierre' → logprob: -2.5389626026153564
    4. ' Car' → logprob: -2.5389626026153564
    5. ' Game' → logprob: -2.7889626026153564
    6. ' Team' → logprob: -3.7889626026153564
    7. ' Ar' → logprob: -4.038962364196777
    8. ' Jean' → logprob: -4.288962364196777
    9. ' R' → logprob: -4.413962364196777
    10. ' Fab' → logprob: -4.538962364196777

Token 77: 'State' (ID: 1881)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014523439109325409
    2. '(' → logprob: -4.264523506164551
    3. '():' → logprob: -8.76452350616455
    4. ':
' → logprob: -9.76452350616455
    5. '(Player' → logprob: -9.76452350616455
    6. '):' → logprob: -10.13952350616455
    7. ' :' → logprob: -11.01452350616455
    8. '(Game' → logprob: -12.01452350616455
    9. '>:' → logprob: -12.76452350616455
    10. '(Abstract' → logprob: -12.76452350616455

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013167407363653183
    2. '(' → logprob: -4.388167381286621
    3. ':
' → logprob: -7.763167381286621
    4. ' :' → logprob: -9.013167381286621
    5. '():' → logprob: -9.763167381286621
    6. '(object' → logprob: -10.388167381286621
    7. '(Enum' → logprob: -12.263167381286621
    8. '):' → logprob: -12.638167381286621
    9. '(Abstract' → logprob: -12.763167381286621
    10. ',' → logprob: -13.138167381286621

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009713839739561081
    2. '    ' → logprob: -5.509713649749756
    3. ' def' → logprob: -5.634713649749756
    4. '    
' → logprob: -7.009713649749756
    5. 'def' → logprob: -8.134714126586914
    6. ':' → logprob: -8.134714126586914
    7. '<|end|>' → logprob: -8.759714126586914
    8. ')' → logprob: -9.259714126586914
    9. ' 
' → logprob: -9.509714126586914
    10. ' ' → logprob: -9.884714126586914

Token 80: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.038296911865472794
    2. 'def' (adapté à ' def') → logprob: -3.288296937942505
    3. '   ' → logprob: -8.413296699523926
    4. ' pass' → logprob: -10.913296699523926
    5. '    ' → logprob: -12.538296699523926
    6. ' players' → logprob: -12.538296699523926
    7. ' player' → logprob: -13.413296699523926
    8. ')' → logprob: -13.788296699523926
    9. ' ' → logprob: -14.163296699523926
    10. 'pass' → logprob: -14.413296699523926

Token 81: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.016766933724284172
    2. ' init' → logprob: -4.5167670249938965
    3. '_init' → logprob: -5.8917670249938965
    4. 'init' → logprob: -6.2667670249938965
    5. ' def' → logprob: -7.8917670249938965
    6. '_' → logprob: -8.016766548156738
    7. '__' → logprob: -8.266766548156738
    8. '   ' → logprob: -11.391766548156738
    9. 'def' → logprob: -11.641766548156738
    10. ' _' → logprob: -11.641766548156738

Token 82: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9862216504407115e-05
    2. 'i' → logprob: -11.375020027160645
    3. ' init' → logprob: -11.875020027160645
    4. 'ini' → logprob: -14.000020027160645
    5. 'in' → logprob: -14.875020027160645
    6. '   ' → logprob: -16.000019073486328
    7. '	init' → logprob: -17.000019073486328
    8. 'inite' → logprob: -17.000019073486328
    9. ' i' → logprob: -17.375019073486328
    10. ' ' → logprob: -18.000019073486328

Token 83: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6837073564529419
    2. '(self' → logprob: -1.558707356452942
    3. '__(' → logprob: -1.683707356452942
    4. '<|end|>' → logprob: -2.8087072372436523
    5. ' (' → logprob: -3.5587072372436523
    6. '__(
' → logprob: -5.683707237243652
    7. ')(' → logprob: -6.683707237243652
    8. '<|end|>' → logprob: -6.808707237243652
    9. 'self' → logprob: -7.183707237243652
    10. '__' → logprob: -7.183707237243652

Token 84: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08393097668886185
    2. ' self' → logprob: -2.5839309692382812
    3. ')' → logprob: -5.333930969238281
    4. ' )' → logprob: -9.333930969238281
    5. '):
' → logprob: -9.583930969238281
    6. '(self' → logprob: -11.208930969238281
    7. ' ' → logprob: -12.083930969238281
    8. '):

' → logprob: -12.208930969238281
    9. '   ' → logprob: -12.958930969238281
    10. '       ' → logprob: -13.083930969238281

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006546385586261749
    2. '):' → logprob: -5.631546497344971
    3. 'self' → logprob: -6.256546497344971
    4. ' ,' → logprob: -7.506546497344971
    5. ')' → logprob: -8.006546020507812
    6. '<|end|>' → logprob: -10.256546020507812
    7. ' self' → logprob: -10.881546020507812
    8. '):
' → logprob: -10.881546020507812
    9. '<|end|>' → logprob: -10.881546020507812
    10. ' ):' → logprob: -11.756546020507812

Token 86: ' number' (ID: 2086)
  Prédit: ' players'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' players' → logprob: -0.5056058168411255
    2. ' self' → logprob: -1.1306058168411255
    3. 'self' → logprob: -3.630605697631836
    4. ' player' → logprob: -3.755605697631836
    5. ' current' → logprob: -4.255605697631836
    6. '   ' → logprob: -5.880605697631836
    7. 'players' → logprob: -6.005605697631836
    8. ' board' → logprob: -6.130605697631836
    9. ')' → logprob: -7.255605697631836
    10. ' state' → logprob: -8.005605697631836

Token 87: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03421494737267494
    2. '_of' → logprob: -4.034214973449707
    3. 's' → logprob: -4.284214973449707
    4. '_players' → logprob: -6.784214973449707
    5. '_states' → logprob: -8.534214973449707
    6. ':int' → logprob: -8.784214973449707
    7. ')' → logprob: -8.909214973449707
    8. 'ed' → logprob: -9.159214973449707
    9. '1' → logprob: -9.534214973449707
    10. ' :' → logprob: -9.784214973449707

Token 88: ' str' (ID: 989)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1270018070936203
    2. 'int' → logprob: -2.1270017623901367
    3. ' ' → logprob: -10.002001762390137
    4. '[int' → logprob: -12.002001762390137
    5. ' List' → logprob: -12.252001762390137
    6. '	int' → logprob: -12.502001762390137
    7. 'List' → logprob: -12.752001762390137
    8. '0' → logprob: -13.252001762390137
    9. ':int' → logprob: -13.752001762390137
    10. ')' → logprob: -13.752001762390137

Token 89: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7967601418495178
    2. '):' → logprob: -0.9217601418495178
    3. ',' → logprob: -1.921760082244873
    4. ':' → logprob: -5.421760082244873
    5. '=' → logprob: -7.671760082244873
    6. ' =' → logprob: -10.296760559082031
    7. ' ' → logprob: -10.546760559082031
    8. '):
' → logprob: -10.671760559082031
    9. '=None' → logprob: -11.296760559082031
    10. ' ,' → logprob: -11.421760559082031

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015400926349684596
    2. ')' → logprob: -7.251540184020996
    3. ' ' → logprob: -8.001540184020996
    4. '<|end|>' → logprob: -9.126540184020996
    5. ':' → logprob: -9.376540184020996
    6. '   ' → logprob: -9.501540184020996
    7. '      ' → logprob: -10.126540184020996
    8. ',' → logprob: -10.251540184020996
    9. 'self' → logprob: -10.376540184020996
    10. '    ' → logprob: -10.626540184020996

Token 91: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7869530916213989
    2. '       ' → logprob: -1.161953091621399
    3. 'self' (adapté à ' self') → logprob: -1.536953091621399
    4. '        ' → logprob: -4.411952972412109
    5. ' ' → logprob: -5.661952972412109
    6. ' ' → logprob: -6.911952972412109
    7. '      ' → logprob: -9.91195297241211
    8. '   ' → logprob: -10.03695297241211
    9. '    ' → logprob: -10.03695297241211
    10. '         ' → logprob: -10.41195297241211

Token 92: '.number' (ID: 25737)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007652299012988806
    2. '.number' → logprob: -4.882652282714844
    3. 'number' → logprob: -11.007652282714844
    4. ' .' → logprob: -12.382652282714844
    5. '._' → logprob: -12.757652282714844
    6. ' =' → logprob: -12.757652282714844
    7. '   ' → logprob: -12.882652282714844
    8. '=' → logprob: -13.007652282714844
    9. ' number' → logprob: -13.132652282714844
    10. '_number' → logprob: -13.132652282714844

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25200292468070984
    2. ' =' → logprob: -1.5020029544830322
    3. ':' → logprob: -10.002002716064453
    4. ')' → logprob: -11.377002716064453
    5. '<|end|>' → logprob: -11.877002716064453
    6. 's' → logprob: -12.752002716064453
    7. '_' → logprob: -13.877002716064453
    8. '=int' → logprob: -14.002002716064453
    9. '=}' → logprob: -14.377002716064453
    10. '=str' → logprob: -14.627002716064453

Token 94: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.20145025849342346
    2. 'number' → logprob: -1.701450228691101
    3. ' ' → logprob: -10.70145034790039
    4. '	number' → logprob: -12.57645034790039
    5. 'Number' → logprob: -13.20145034790039
    6. '"' → logprob: -13.32645034790039
    7. ' ' → logprob: -13.57645034790039
    8. ' numbers' → logprob: -13.82645034790039
    9. '_number' → logprob: -13.95145034790039
    10. '    ' → logprob: -14.20145034790039

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21482546627521515
    2. '<|end|>' → logprob: -1.7148255109786987
    3. '    
' → logprob: -5.714825630187988
    4. ' 
' → logprob: -5.839825630187988
    5. '   ' → logprob: -5.964825630187988
    6. '<|end|>' → logprob: -6.089825630187988
    7. '

' → logprob: -6.464825630187988
    8. ' ' → logprob: -8.339825630187988
    9. '  
' → logprob: -9.589825630187988
    10. '    ' → logprob: -9.714825630187988

Token 96: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5675517916679382
    2. '   ' → logprob: -1.067551851272583
    3. '<|end|>' → logprob: -2.692551851272583
    4. '    
' → logprob: -4.692551612854004
    5. '<|end|>' → logprob: -5.317551612854004
    6. ' ' → logprob: -6.442551612854004
    7. ' 
' → logprob: -6.817551612854004
    8. 'def' → logprob: -6.817551612854004
    9. '    ' → logprob: -7.067551612854004
    10. ',' → logprob: -7.192551612854004

Token 97: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.711758017539978
    2. '<|end|>' → logprob: -0.961758017539978
    3. '
' → logprob: -2.8367581367492676
    4. '   ' → logprob: -3.3367581367492676
    5. '<|end|>' → logprob: -4.461758136749268
    6. '    
' → logprob: -4.961758136749268
    7. ' def' → logprob: -5.211758136749268
    8. '    ' → logprob: -5.711758136749268
    9. ' ' → logprob: -6.211758136749268
    10. ',' → logprob: -7.086758136749268

Token 98: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.056215543299913406
    2. ' get' → logprob: -3.681215524673462
    3. 'def' → logprob: -4.681215763092041
    4. ' is' → logprob: -5.806215763092041
    5. ' update' → logprob: -6.056215763092041
    6. ' ' → logprob: -6.431215763092041
    7. ' to' → logprob: -6.431215763092041
    8. ' number' → logprob: -6.681215763092041
    9. ' play' → logprob: -6.931215763092041
    10. ' has' → logprob: -7.181215763092041

Token 99: 'hash' (ID: 16909)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.1371881514787674
    2. 'str' → logprob: -2.762188196182251
    3. 'repr' → logprob: -2.762188196182251
    4. 'init' → logprob: -6.762187957763672
    5. 'hash' → logprob: -7.512187957763672
    6. 'lt' → logprob: -9.262187957763672
    7. 'len' → logprob: -10.512187957763672
    8. 'getitem' → logprob: -11.262187957763672
    9. 'copy' → logprob: -11.387187957763672
    10. 'get' → logprob: -11.637187957763672

Token 100: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.35137099027633667
    2. '__' → logprob: -1.2263710498809814
    3. '__(
' → logprob: -6.226370811462402
    4. '__('' → logprob: -7.726370811462402
    5. '(' → logprob: -8.476370811462402
    6. '__((' → logprob: -8.976370811462402
    7. '(self' → logprob: -9.351370811462402
    8. '_' → logprob: -10.851370811462402
    9. '__(*' → logprob: -10.976370811462402
    10. '__("' → logprob: -11.351370811462402

Token 101: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.847109812544659e-05
    2. ')' → logprob: -10.000048637390137
    3. ' self' → logprob: -12.875048637390137
    4. '
' → logprob: -15.000048637390137
    5. '(self' → logprob: -16.37504768371582
    6. ' ' → logprob: -16.62504768371582
    7. '   ' → logprob: -17.50004768371582
    8. ')
' → logprob: -18.12504768371582
    9. 's' → logprob: -18.25004768371582
    10. '  ' → logprob: -18.87504768371582

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16103576123714447
    2. ')' → logprob: -1.9110357761383057
    3. 'self' → logprob: -7.911035537719727
    4. '):
' → logprob: -8.411035537719727
    5. ',' → logprob: -8.911035537719727
    6. '   ' → logprob: -10.536035537719727
    7. ' ):' → logprob: -10.661035537719727
    8. '(self' → logprob: -12.161035537719727
    9. ' ' → logprob: -12.161035537719727
    10. '}' → logprob: -12.536035537719727

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013285996101330966
    2. ' return' → logprob: -9.00013256072998
    3. 'return' → logprob: -11.62513256072998
    4. '      ' → logprob: -15.75013256072998
    5. '   ' → logprob: -16.625133514404297
    6. '	' → logprob: -17.125133514404297
    7. '	   ' → logprob: -17.250133514404297
    8. '```' → logprob: -17.250133514404297
    9. '           ' → logprob: -17.750133514404297
    10. '	return' → logprob: -18.125133514404297

Token 104: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006288995034992695
    2. ' return' → logprob: -5.256289005279541
    3. '       ' → logprob: -6.881289005279541
    4. '   ' → logprob: -10.631288528442383
    5. 'hash' → logprob: -13.006288528442383
    6. 'ret' → logprob: -14.256288528442383
    7. '
' → logprob: -15.506288528442383
    8. ' ' → logprob: -16.631288528442383
    9. '    ' → logprob: -16.756288528442383
    10. '	return' → logprob: -17.006288528442383

Token 105: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.11283795535564423
    2. ' hash' → logprob: -2.23783802986145
    3. '   ' → logprob: -11.612837791442871
    4. 'ha' → logprob: -13.362837791442871
    5. 'int' → logprob: -13.612837791442871
    6. '	hash' → logprob: -14.237837791442871
    7. '(hash' → logprob: -14.237837791442871
    8. 'h' → logprob: -14.612837791442871
    9. ' ' → logprob: -14.737837791442871
    10. '
' → logprob: -14.862837791442871

Token 106: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.038159798830747604
    2. '(' → logprob: -3.2881598472595215
    3. '(s' → logprob: -9.538159370422363
    4. '((' → logprob: -10.288159370422363
    5. ' (' → logprob: -11.538159370422363
    6. '(this' → logprob: -13.788159370422363
    7. '(
' → logprob: -14.288159370422363
    8. '(object' → logprob: -15.913159370422363
    9. '(

' → logprob: -16.03816032409668
    10. '(str' → logprob: -16.16316032409668

Token 107: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.008699547499418259
    2. '.' → logprob: -4.758699417114258
    3. ').' → logprob: -10.133699417114258
    4. '.n' → logprob: -10.383699417114258
    5. ' .' → logprob: -11.883699417114258
    6. '.code' → logprob: -13.258699417114258
    7. ')' → logprob: -13.633699417114258
    8. 'number' → logprob: -13.883699417114258
    9. '.numero' → logprob: -14.133699417114258
    10. '.num' → logprob: -14.133699417114258

Token 108: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ' )' → logprob: -12.125008583068848
    3. ')
' → logprob: -13.500008583068848
    4. '   ' → logprob: -14.000008583068848
    5. ')return' → logprob: -15.375008583068848
    6. '))' → logprob: -15.750008583068848
    7. '}' → logprob: -16.12500762939453
    8. '+' → logprob: -16.25000762939453
    9. '<|end|>' → logprob: -16.87500762939453
    10. '())' → logprob: -17.37500762939453

Token 109: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6833804249763489
    2. '<|end|>' → logprob: -0.9333804249763489
    3. '   ' → logprob: -2.683380365371704
    4. '<|end|>' → logprob: -3.808380365371704
    5. '    
' → logprob: -5.433380603790283
    6. '

' → logprob: -5.933380603790283
    7. ' ' → logprob: -7.058380603790283
    8. '\n' → logprob: -7.808380603790283
    9. ')' → logprob: -7.808380603790283
    10. '```' → logprob: -7.808380603790283

Token 110: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003461905289441347
    2. ' def' → logprob: -8.000346183776855
    3. '   ' → logprob: -11.625346183776855
    4. '	def' → logprob: -14.000346183776855
    5. ' ' → logprob: -14.500346183776855
    6. 'class' → logprob: -16.000347137451172
    7. ')' → logprob: -16.250347137451172
    8. '<|end|>' → logprob: -16.625347137451172
    9. '    
' → logprob: -17.000347137451172
    10. '__' → logprob: -17.000347137451172

Token 111: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0600612498819828
    2. '__' → logprob: -3.81006121635437
    3. ' def' → logprob: -3.93506121635437
    4. ' ' → logprob: -4.935061454772949
    5. 'eq' → logprob: -5.685061454772949
    6. ' ==' → logprob: -6.060061454772949
    7. '_eq' → logprob: -6.810061454772949
    8. 'def' → logprob: -7.185061454772949
    9. ' eq' → logprob: -7.685061454772949
    10. '==' → logprob: -8.31006145477295

Token 112: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -1.9361264946837764e-07
    2. ' eq' → logprob: -16.375
    3. 'cmp' → logprob: -19.0
    4. 'lt' → logprob: -19.75
    5. 'e' → logprob: -20.0
    6. '_eq' → logprob: -20.5
    7. '   ' → logprob: -21.125
    8. 'init' → logprob: -21.25
    9. '```' → logprob: -21.25
    10. '

' → logprob: -21.375

Token 113: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00872720219194889
    2. '__' → logprob: -4.758727073669434
    3. '__((' → logprob: -10.008727073669434
    4. '__(
' → logprob: -10.258727073669434
    5. '(self' → logprob: -10.883727073669434
    6. '__('' → logprob: -11.633727073669434
    7. '__(*' → logprob: -12.758727073669434
    8. '__("' → logprob: -13.883727073669434
    9. '(' → logprob: -14.383727073669434
    10. '<|end|>' → logprob: -15.508727073669434

Token 114: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.93579563125968e-05
    2. 'other' → logprob: -9.500089645385742
    3. ' self' → logprob: -11.375089645385742
    4. '(self' → logprob: -13.125089645385742
    5. ')' → logprob: -14.750089645385742
    6. '
' → logprob: -15.625089645385742
    7. ' ' → logprob: -15.750089645385742
    8. ',' → logprob: -16.750089645385742
    9. '   ' → logprob: -16.875089645385742
    10. '	self' → logprob: -17.250089645385742

Token 115: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3470386862754822
    2. '(self' → logprob: -1.347038745880127
    3. 'self' → logprob: -4.472038745880127
    4. '__' → logprob: -5.097038745880127
    5. ')' → logprob: -5.472038745880127
    6. ',' → logprob: -5.847038745880127
    7. '<|end|>' → logprob: -5.972038745880127
    8. '__((' → logprob: -6.097038745880127
    9. '(' → logprob: -6.722038745880127
    10. ')(' → logprob: -7.347038745880127

Token 116: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3132626414299011
    2. ' other' → logprob: -1.313262701034546
    3. ' o' → logprob: -15.313262939453125
    4. '(other' → logprob: -15.688262939453125
    5. ' ' → logprob: -15.938262939453125
    6. 'o' → logprob: -16.438262939453125
    7. 'Other' → logprob: -16.688262939453125
    8. 'othe' → logprob: -16.938262939453125
    9. 'oth' → logprob: -16.938262939453125
    10. 'self' → logprob: -17.063262939453125

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02688710018992424
    2. ')' → logprob: -3.6518871784210205
    3. ' ):' → logprob: -7.901886940002441
    4. ':' → logprob: -8.901886940002441
    5. '):
' → logprob: -9.901886940002441
    6. ' )' → logprob: -10.651886940002441
    7. '):

' → logprob: -13.026886940002441
    8. 'self' → logprob: -13.276886940002441
    9. ',' → logprob: -14.276886940002441
    10. ' ' → logprob: -14.401886940002441

Token 118: '       ' (ID: 309)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.4638378322124481
    2. '       ' → logprob: -1.0888378620147705
    3. '        ' → logprob: -3.5888378620147705
    4. ' ' → logprob: -5.713837623596191
    5. ' self' → logprob: -6.213837623596191
    6. '<|end|>' → logprob: -7.588837623596191
    7. '    ' → logprob: -8.463837623596191
    8. ' None' → logprob: -8.963837623596191
    9. ' True' → logprob: -9.213837623596191
    10. '      ' → logprob: -9.213837623596191

Token 119: ' if' (ID: 538)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.11321741342544556
    2. ' return' → logprob: -2.613217353820801
    3. 'return' → logprob: -3.613217353820801
    4. '       ' → logprob: -5.238217353820801
    5. 'is' → logprob: -6.988217353820801
    6. ' if' → logprob: -7.613217353820801
    7. 'if' (adapté à ' if') → logprob: -10.3632173538208
    8. ' self' → logprob: -11.2382173538208
    9. 'self' → logprob: -12.4882173538208
    10. '   ' → logprob: -13.4882173538208

Token 120: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004402701742947102
    2. ' isinstance' → logprob: -6.0044026374816895
    3. 'not' → logprob: -6.2544026374816895
    4. '	not' → logprob: -13.629403114318848
    5. ' self' → logprob: -13.754403114318848
    6. ' ' → logprob: -14.879403114318848
    7. ' ' → logprob: -15.004403114318848
    8. 'self' → logprob: -16.50440216064453
    9. ' no' → logprob: -16.75440216064453
    10. ' other' → logprob: -17.25440216064453

Token 121: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.00014036978245712817
    2. 'is' → logprob: -8.875140190124512
    3. ' hasattr' → logprob: -14.750140190124512
    4. ' is' → logprob: -16.875141143798828
    5. '(is' → logprob: -18.750141143798828
    6. '<|end|>' → logprob: -19.250141143798828
    7. '  ' → logprob: -19.500141143798828
    8. ' ' → logprob: -19.625141143798828
    9. '    ' → logprob: -20.250141143798828
    10. 'Is' → logprob: -20.250141143798828

Token 122: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -4.68022444692906e-05
    2. 'other' → logprob: -10.250046730041504
    3. ' other' → logprob: -12.000046730041504
    4. '(' → logprob: -12.250046730041504
    5. ' (' → logprob: -14.875046730041504
    6. 'Other' → logprob: -16.12504768371582
    7. '_other' → logprob: -18.25004768371582
    8. '(o' → logprob: -18.75004768371582
    9. '(
' → logprob: -18.87504768371582
    10. '.other' → logprob: -19.25004768371582

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07255096733570099
    2. '(self' → logprob: -2.6975510120391846
    3. '(' → logprob: -6.5725507736206055
    4. '(Game' → logprob: -7.0725507736206055
    5. ',self' → logprob: -9.072550773620605
    6. 'self' → logprob: -9.197550773620605
    7. ' ,' → logprob: -9.322550773620605
    8. '(other' → logprob: -10.197550773620605
    9. ' (' → logprob: -12.197550773620605
    10. 'other' → logprob: -12.572550773620605

Token 124: ' Game' (ID: 7022)
  Prédit: ' Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Game' → logprob: -0.038044821470975876
    2. 'Game' → logprob: -3.2880449295043945
    3. '	Game' → logprob: -12.788044929504395
    4. '(Game' → logprob: -14.913044929504395
    5. '_Game' → logprob: -16.288043975830078
    6. '<Game' → logprob: -16.413043975830078
    7. ' ' → logprob: -16.788043975830078
    8. '.Game' → logprob: -17.163043975830078
    9. ' Gam' → logprob: -18.038043975830078
    10. ' ' → logprob: -18.163043975830078

Token 125: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -6.704273118884885e-07
    2. 'state' → logprob: -15.250000953674316
    3. '	State' → logprob: -15.500000953674316
    4. ' State' → logprob: -16.375
    5. '_State' → logprob: -17.75
    6. '<State' → logprob: -18.25
    7. '_STATE' → logprob: -18.625
    8. ')' → logprob: -18.75
    9. 'Stat' → logprob: -18.875
    10. ' state' → logprob: -19.25

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06221605837345123
    2. '):
' → logprob: -2.81221604347229
    3. ')' → logprob: -8.437215805053711
    4. ' ):' → logprob: -11.312215805053711
    5. '):

' → logprob: -11.562215805053711
    6. '):
' → logprob: -11.687215805053711
    7. ' ):
' → logprob: -14.562215805053711
    8. '   ' → logprob: -14.687215805053711
    9. ':' → logprob: -15.062215805053711
    10. ' ' → logprob: -16.31221580505371

Token 127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.059375129640102386
    2. 'return' → logprob: -3.059375047683716
    3. ' return' → logprob: -4.934375286102295
    4. ':return' → logprob: -7.059375286102295
    5. '       ' → logprob: -7.184375286102295
    6. '):
' → logprob: -7.434375286102295
    7. '):' → logprob: -7.934375286102295
    8. ':' → logprob: -8.559374809265137
    9. 'True' → logprob: -8.559374809265137
    10. ')' → logprob: -8.684374809265137

Token 128: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5047551393508911
    2. ' return' → logprob: -1.0047551393508911
    3. '           ' → logprob: -3.5047550201416016
    4. '       ' → logprob: -9.504755020141602
    5. 'False' → logprob: -10.504755020141602
    6. '
' → logprob: -11.129755020141602
    7. ':return' → logprob: -11.254755020141602
    8. '   ' → logprob: -11.879755020141602
    9. '               ' → logprob: -11.879755020141602
    10. '```' → logprob: -12.629755020141602

Token 129: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00017147827020380646
    2. 'Not' → logprob: -8.750171661376953
    3. ' False' → logprob: -11.250171661376953
    4. ' Not' → logprob: -18.875171661376953
    5. 'True' → logprob: -19.500171661376953
    6. '(False' → logprob: -20.250171661376953
    7. '=False' → logprob: -22.250171661376953
    8. '   ' → logprob: -22.250171661376953
    9. 'false' → logprob: -22.625171661376953
    10. '```' → logprob: -23.125171661376953

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3880334794521332
    2. '
' → logprob: -1.1380335092544556
    3. '        
' → logprob: -7.888033390045166
    4. '<|end|>' → logprob: -8.013033866882324
    5. ')' → logprob: -8.388033866882324
    6. ',' → logprob: -9.763033866882324
    7. ' 
' → logprob: -10.388033866882324
    8. '    
' → logprob: -10.513033866882324
    9. '  
' → logprob: -10.638033866882324
    10. ')
' → logprob: -10.763033866882324

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033328952267766
    2. '
' → logprob: -5.75333309173584
    3. ' return' → logprob: -9.62833309173584
    4. 'return' → logprob: -10.00333309173584
    5. '        
' → logprob: -10.87833309173584
    6. '<|end|>' → logprob: -11.75333309173584
    7. ',' → logprob: -11.87833309173584
    8. '   ' → logprob: -13.37833309173584
    9. '    
' → logprob: -13.87833309173584
    10. '      ' → logprob: -14.00333309173584

Token 132: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03713516145944595
    2. '       ' → logprob: -3.787135124206543
    3. ' return' → logprob: -4.287135124206543
    4. '
' → logprob: -10.412135124206543
    5. '   ' → logprob: -11.287135124206543
    6. '	return' → logprob: -12.412135124206543
    7. '```' → logprob: -14.037135124206543
    8. '        
' → logprob: -14.412135124206543
    9. '{return' → logprob: -14.662135124206543
    10. ')return' → logprob: -15.162135124206543

Token 133: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020710527896881
    2. ' self' → logprob: -2.3502070903778076
    3. '
' → logprob: -14.850207328796387
    4. '(self' → logprob: -15.850207328796387
    5. ' ' → logprob: -17.47520637512207
    6. '	self' → logprob: -18.22520637512207
    7. ' ' → logprob: -18.60020637512207
    8. '   ' → logprob: -19.35020637512207
    9. '$self' → logprob: -19.85020637512207
    10. '```' → logprob: -19.97520637512207

Token 134: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.0007119550718925893
    2. '.' → logprob: -7.250711917877197
    3. '.num' → logprob: -14.625712394714355
    4. ' .' → logprob: -15.000712394714355
    5. '.n' → logprob: -15.250712394714355
    6. '.numero' → logprob: -15.250712394714355
    7. 'number' → logprob: -15.375712394714355
    8. '.name' → logprob: -15.875712394714355
    9. '.value' → logprob: -16.12571144104004
    10. '.message' → logprob: -17.50071144104004

Token 135: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759508013725281
    2. '==' → logprob: -0.8259508013725281
    3. '=' → logprob: -11.575950622558594
    4. '==
' → logprob: -14.450950622558594
    5. '===' → logprob: -14.575950622558594
    6. ' =' → logprob: -15.075950622558594
    7. '.' → logprob: -15.450950622558594
    8. ')==' → logprob: -15.825950622558594
    9. ' ==
' → logprob: -16.950950622558594
    10. '==(' → logprob: -17.325950622558594

Token 136: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.31326213479042053
    2. 'other' → logprob: -1.3132621049880981
    3. '(other' → logprob: -15.688261985778809
    4. 'Other' → logprob: -15.938261985778809
    5. '.other' → logprob: -16.563262939453125
    6. '_other' → logprob: -17.438262939453125
    7. ' oth' → logprob: -17.938262939453125
    8. ' ' → logprob: -18.313262939453125
    9. ' ' → logprob: -18.688262939453125
    10. ' other's' → logprob: -19.063262939453125

Token 137: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.018180029466748238
    2. '.' → logprob: -4.018179893493652
    3. ' .' → logprob: -10.893179893493652
    4. '.other' → logprob: -12.393179893493652
    5. 'number' → logprob: -13.018179893493652
    6. '.state' → logprob: -13.518179893493652
    7. '.
' → logprob: -14.518179893493652
    8. '.version' → logprob: -14.768179893493652
    9. '.code' → logprob: -14.768179893493652
    10. '.user' → logprob: -15.268179893493652

Token 138: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4856750965118408
    2. '<|end|>' → logprob: -0.9856750965118408
    3. '

' → logprob: -4.735674858093262
    4. '<|end|>' → logprob: -6.235674858093262
    5. '   ' → logprob: -7.985674858093262
    6. 'class' → logprob: -8.735674858093262
    7. '    
' → logprob: -8.985674858093262
    8. '


' → logprob: -9.985674858093262
    9. ' 
' → logprob: -10.860674858093262
    10. '```' → logprob: -11.110674858093262

Token 139: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.580787181854248
    2. 'class' → logprob: -0.830787181854248
    3. '<|end|>' → logprob: -6.205787181854248
    4. '

' → logprob: -6.455787181854248
    5. 'from' → logprob: -7.955787181854248
    6. '<|end|>' → logprob: -8.580787658691406
    7. ' class' → logprob: -8.705787658691406
    8. '    
' → logprob: -9.205787658691406
    9. '  
' → logprob: -9.580787658691406
    10. '#' → logprob: -9.705787658691406

Token 140: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.008170673623681068
    2. 'from' → logprob: -4.8831706047058105
    3. 'def' (adapté à ' def') → logprob: -7.5081706047058105
    4. 'import' → logprob: -12.633171081542969
    5. '   ' → logprob: -13.133171081542969
    6. 'game' → logprob: -13.633171081542969
    7. 'player' → logprob: -13.758171081542969
    8. '#' → logprob: -13.883171081542969
    9. ' class' → logprob: -13.883171081542969
    10. 'cache' → logprob: -14.008171081542969

Token 141: ' is' (ID: 382)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6667395830154419
    2. ' __' → logprob: -1.541739583015442
    3. 'def' → logprob: -2.2917394638061523
    4. 'copy' → logprob: -4.041739463806152
    5. ' copy' → logprob: -4.041739463806152
    6. ' deepcopy' → logprob: -4.041739463806152
    7. ' is' → logprob: -4.166739463806152
    8. ' ' → logprob: -4.166739463806152
    9. ' str' → logprob: -4.166739463806152
    10. 'str' → logprob: -4.166739463806152

Token 142: '_terminal' (ID: 166163)
  Prédit: '_finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finished' → logprob: -0.8729642629623413
    2. '_w' → logprob: -1.4979642629623413
    3. '_valid' → logprob: -1.8729642629623413
    4. '_over' → logprob: -3.122964382171631
    5. '_terminal' → logprob: -3.247964382171631
    6. '_final' → logprob: -3.372964382171631
    7. '_' → logprob: -3.872964382171631
    8. '_complete' → logprob: -3.997964382171631
    9. '_game' → logprob: -4.497964382171631
    10. '_win' → logprob: -4.997964382171631

Token 143: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010568885772954673
    2. 'self' → logprob: -10.125105857849121
    3. '(' → logprob: -10.750105857849121
    4. ' (' → logprob: -10.750105857849121
    5. '()' → logprob: -11.125105857849121
    6. '(s' → logprob: -13.375105857849121
    7. ' ' → logprob: -13.750105857849121
    8. '   ' → logprob: -13.750105857849121
    9. '_state' → logprob: -14.000105857849121
    10. ' self' → logprob: -14.375105857849121

Token 144: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09213533252477646
    2. ')' → logprob: -2.592135429382324
    3. '):
' → logprob: -4.842135429382324
    4. '(self' → logprob: -5.967135429382324
    5. 'self' → logprob: -6.342135429382324
    6. '()' → logprob: -7.967135429382324
    7. ',' → logprob: -8.342135429382324
    8. '():' → logprob: -8.842135429382324
    9. '):

' → logprob: -9.217135429382324
    10. ' ):' → logprob: -10.092135429382324

Token 145: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06288178265094757
    2. ':' → logprob: -3.6878817081451416
    3. '(' → logprob: -4.062881946563721
    4. '():' → logprob: -5.312881946563721
    5. 'self' → logprob: -5.562881946563721
    6. ' ->' → logprob: -5.937881946563721
    7. '()' → logprob: -6.312881946563721
    8. '():
' → logprob: -6.562881946563721
    9. '->' → logprob: -7.062881946563721
    10. '(
' → logprob: -7.312881946563721

Token 146: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.16155356168746948
    2. 'bool' → logprob: -1.9115536212921143
    3. ' True' → logprob: -6.911553382873535
    4. 'True' → logprob: -8.286553382873535
    5. 'False' → logprob: -10.286553382873535
    6. ' False' → logprob: -11.036553382873535
    7. 'int' → logprob: -11.161553382873535
    8. ' int' → logprob: -12.536553382873535
    9. ' ' → logprob: -12.786553382873535
    10. '	bool' → logprob: -12.911553382873535

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01825670711696148
    2. '():' → logprob: -4.018256664276123
    3. ':
' → logprob: -9.643257141113281
    4. '):' → logprob: -11.143257141113281
    5. ':return' → logprob: -11.393257141113281
    6. ' :' → logprob: -11.768257141113281
    7. '():
' → logprob: -12.518257141113281
    8. '<|end|>' → logprob: -13.143257141113281
    9. ':**' → logprob: -14.143257141113281
    10. '   ' → logprob: -14.268257141113281

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01685168594121933
    2. '   ' → logprob: -4.516851902008057
    3. ' return' → logprob: -5.391851902008057
    4. 'return' → logprob: -7.391851902008057
    5. ' True' → logprob: -8.141851425170898
    6. ' False' → logprob: -8.891851425170898
    7. 'False' → logprob: -9.141851425170898
    8. 'True' → logprob: -10.141851425170898
    9. '    ' → logprob: -11.891851425170898
    10. '
' → logprob: -12.141851425170898

Token 149: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8782206177711487
    2. 'len' → logprob: -0.8782206177711487
    3. 'return' (adapté à ' return') → logprob: -1.878220558166504
    4. 'False' → logprob: -5.378220558166504
    5. ' self' → logprob: -5.503220558166504
    6. ' len' → logprob: -5.628220558166504
    7. ' return' → logprob: -5.878220558166504
    8. 'int' → logprob: -7.628220558166504
    9. 'True' → logprob: -8.378220558166504
    10. 'bool' → logprob: -9.503220558166504

Token 150: ' len' (ID: 4631)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8773424029350281
    2. 'len' → logprob: -1.0023424625396729
    3. ' len' → logprob: -1.8773424625396729
    4. ' self' → logprob: -2.752342462539673
    5. 'False' → logprob: -8.752342224121094
    6. ' False' → logprob: -9.377342224121094
    7. ' ' → logprob: -11.002342224121094
    8. ' not' → logprob: -11.377342224121094
    9. 'int' → logprob: -11.627342224121094
    10. ' int' → logprob: -12.002342224121094

Token 151: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019312551012262702
    2. '(' → logprob: -6.251931190490723
    3. ' (' → logprob: -13.501931190490723
    4. 'self' → logprob: -14.001931190490723
    5. '(s' → logprob: -15.126931190490723
    6. '(
' → logprob: -16.75193214416504
    7. '(this' → logprob: -17.75193214416504
    8. ' self' → logprob: -17.87693214416504
    9. '()' → logprob: -19.25193214416504
    10. '(sel' → logprob: -19.75193214416504

Token 152: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.0005004895501770079
    2. '.' → logprob: -7.625500679016113
    3. ' .' → logprob: -11.625500679016113
    4. 'number' → logprob: -13.250500679016113
    5. '.user' → logprob: -13.625500679016113
    6. ').' → logprob: -16.625499725341797
    7. '<number' → logprob: -16.625499725341797
    8. '.num' → logprob: -16.875499725341797
    9. '[number' → logprob: -16.875499725341797
    10. '.n' → logprob: -17.000499725341797

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015500946901738644
    2. '==' → logprob: -7.251550197601318
    3. ')==' → logprob: -7.501550197601318
    4. ' )' → logprob: -8.50154972076416
    5. ' ==' → logprob: -9.62654972076416
    6. ')<=' → logprob: -12.37654972076416
    7. '()' → logprob: -12.50154972076416
    8. '<=' → logprob: -12.87654972076416
    9. '%' → logprob: -13.00154972076416
    10. ')>=' → logprob: -13.62654972076416

Token 154: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3502216041088104
    2. ' ==' → logprob: -1.2252216339111328
    3. '()' → logprob: -7.350221633911133
    4. '()==' → logprob: -8.100221633911133
    5. '<=' → logprob: -8.350221633911133
    6. '>=' → logprob: -9.100221633911133
    7. ' <=' → logprob: -9.350221633911133
    8. '<' → logprob: -9.475221633911133
    9. ' ' → logprob: -9.850221633911133
    10. '%' → logprob: -9.850221633911133

Token 155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13912640511989594
    2. '1' → logprob: -2.1391263008117676
    3. ' ' → logprob: -4.514126300811768
    4. '5' → logprob: -7.514126300811768
    5. '4' → logprob: -8.764126777648926
    6. '3' → logprob: -8.889126777648926
    7. '10' → logprob: -8.889126777648926
    8. '6' → logprob: -9.514126777648926
    9. '2' → logprob: -9.889126777648926
    10. '7' → logprob: -10.764126777648926

Token 156: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14413732290267944
    2. '1' → logprob: -2.019137382507324
    3. ' ' → logprob: -7.519137382507324
    4. '5' → logprob: -8.394137382507324
    5. '3' → logprob: -8.519137382507324
    6. '4' → logprob: -8.644137382507324
    7. '2' → logprob: -8.894137382507324
    8. '10' → logprob: -9.519137382507324
    9. '6' → logprob: -9.644137382507324
    10. '7' → logprob: -11.144137382507324

Token 157: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8630421757698059
    2. '<|end|>' → logprob: -0.8630421757698059
    3. '
' → logprob: -1.9880421161651611
    4. '<|end|>' → logprob: -4.36304235458374
    5. '    
' → logprob: -6.11304235458374
    6. 'def' → logprob: -6.23804235458374
    7. '

' → logprob: -7.23804235458374
    8. ' ' → logprob: -7.86304235458374
    9. '  
' → logprob: -8.238041877746582
    10. 'class' → logprob: -8.238041877746582

Token 159: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016206118743866682
    2. ' def' → logprob: -9.000162124633789
    3. '   ' → logprob: -10.250162124633789
    4. 'class' → logprob: -13.125162124633789
    5. '@' → logprob: -15.000162124633789
    6. ' ' → logprob: -15.250162124633789
    7. '@property' → logprob: -15.750162124633789
    8. '	def' → logprob: -15.875162124633789
    9. '    
' → logprob: -16.37516212463379
    10. 'de' → logprob: -16.50016212463379

Token 160: ' generate' (ID: 10419)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0438578724861145
    2. 'def' → logprob: -3.1688578128814697
    3. ' get' → logprob: -7.918858051300049
    4. '   ' → logprob: -9.29385757446289
    5. ' remove' → logprob: -9.41885757446289
    6. '_' → logprob: -10.66885757446289
    7. ' ' → logprob: -10.66885757446289
    8. ' 
' → logprob: -10.79385757446289
    9. ' possible' → logprob: -10.91885757446289
    10. ' next' → logprob: -10.91885757446289

Token 161: '_next' (ID: 25436)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.6583130955696106
    2. '_states' → logprob: -1.2833130359649658
    3. '_next' → logprob: -2.283313035964966
    4. '_children' → logprob: -3.408313035964966
    5. '_pos' → logprob: -3.783313035964966
    6. '_possible' → logprob: -4.158313274383545
    7. '_success' → logprob: -4.408313274383545
    8. '_' → logprob: -5.658313274383545
    9. '_actions' → logprob: -5.783313274383545
    10. '(self' → logprob: -5.908313274383545

Token 162: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0006843181326985359
    2. '_moves' → logprob: -7.5006842613220215
    3. '(self' → logprob: -9.50068473815918
    4. '_' → logprob: -11.25068473815918
    5. '_state' → logprob: -11.37568473815918
    6. '_numbers' → logprob: -12.00068473815918
    7. 'States' → logprob: -12.50068473815918
    8. ' states' → logprob: -12.62568473815918
    9. 'states' → logprob: -12.62568473815918
    10. '```' → logprob: -12.62568473815918

Token 163: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0033604626078158617
    2. '(' → logprob: -5.753360271453857
    3. ' (' → logprob: -8.628360748291016
    4. '(s' → logprob: -13.253360748291016
    5. '(
' → logprob: -13.628360748291016
    6. '()' → logprob: -15.628360748291016
    7. '   ' → logprob: -15.628360748291016
    8. 'self' → logprob: -15.753360748291016
    9. '
' → logprob: -16.253360748291016
    10. '(sel' → logprob: -16.378360748291016

Token 164: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10797615349292755
    2. '):' → logprob: -2.607976198196411
    3. ',' → logprob: -3.732976198196411
    4. ' )' → logprob: -6.357975959777832
    5. 'self' → logprob: -6.607975959777832
    6. '(self' → logprob: -7.482975959777832
    7. '):
' → logprob: -7.607975959777832
    8. ' ):' → logprob: -8.482975959777832
    9. ' ,' → logprob: -9.107975959777832
    10. ':' → logprob: -9.232975959777832

Token 165: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016646185889840126
    2. '(' → logprob: -4.266646385192871
    3. ' (' → logprob: -6.141646385192871
    4. ' ->' → logprob: -8.891646385192871
    5. 'self' → logprob: -9.766646385192871
    6. ':' → logprob: -9.891646385192871
    7. '(
' → logprob: -10.391646385192871
    8. ' self' → logprob: -10.766646385192871
    9. '->' → logprob: -11.641646385192871
    10. ' ' → logprob: -12.141646385192871

Token 166: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.07024506479501724
    2. ' List' → logprob: -2.6952450275421143
    3. '[List' → logprob: -8.195244789123535
    4. 'list' → logprob: -11.070244789123535
    5. ' list' → logprob: -12.195244789123535
    6. '[]' → logprob: -12.570244789123535
    7. '	List' → logprob: -13.320244789123535
    8. '[' → logprob: -13.695244789123535
    9. '   ' → logprob: -13.695244789123535
    10. ' ->' → logprob: -13.820244789123535

Token 167: '['' (ID: 1181)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005595852271653712
    2. '<Game' → logprob: -8.37555980682373
    3. '[str' → logprob: -9.00055980682373
    4. '['' → logprob: -10.00055980682373
    5. '[
' → logprob: -10.12555980682373
    6. '[int' → logprob: -10.12555980682373
    7. '[List' → logprob: -10.62555980682373
    8. '(Game' → logprob: -11.00055980682373
    9. '<|end|>' → logprob: -11.12555980682373
    10. ' [' → logprob: -11.87555980682373

Token 168: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -1.7835754988482222e-05
    2. ' Game' → logprob: -11.000018119812012
    3. '	Game' → logprob: -14.375018119812012
    4. '<Game' → logprob: -15.875018119812012
    5. '.Game' → logprob: -16.375017166137695
    6. '_Game' → logprob: -16.750017166137695
    7. '   ' → logprob: -17.250017166137695
    8. '_game' → logprob: -17.625017166137695
    9. '(Game' → logprob: -17.750017166137695
    10. ' ' → logprob: -18.000017166137695

Token 169: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.5048530030981055e-06
    2. 'States' → logprob: -14.125001907348633
    3. 'state' → logprob: -15.500001907348633
    4. 'Stat' → logprob: -15.625001907348633
    5. 'Sta' → logprob: -15.750001907348633
    6. 'St' → logprob: -16.500001907348633
    7. '	State' → logprob: -17.250001907348633
    8. '_STATE' → logprob: -17.500001907348633
    9. 'S' → logprob: -18.125001907348633
    10. '<State' → logprob: -18.500001907348633

Token 170: '']:
' (ID: 44766)
  Prédit: '']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:
' → logprob: -0.6062106490135193
    2. '']:' → logprob: -0.8562106490135193
    3. '']' → logprob: -3.981210708618164
    4. ']:' → logprob: -4.606210708618164
    5. ']:
' → logprob: -7.356210708618164
    6. ']' → logprob: -8.356210708618164
    7. '"]:' → logprob: -9.106210708618164
    8. ':' → logprob: -10.231210708618164
    9. ' '' → logprob: -10.231210708618164
    10. ''' → logprob: -10.481210708618164

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015121731848921627
    2. ' states' → logprob: -10.625151634216309
    3. ',' → logprob: -10.750151634216309
    4. ' next' → logprob: -11.250151634216309
    5. '    ' → logprob: -11.375151634216309
    6. '   ' → logprob: -11.375151634216309
    7. '[]' → logprob: -11.625151634216309
    8. '      ' → logprob: -11.625151634216309
    9. ' new' → logprob: -11.875151634216309
    10. '#' → logprob: -11.875151634216309

Token 172: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.10405683517456055
    2. 'states' → logprob: -2.4790568351745605
    3. 'result' → logprob: -4.9790568351745605
    4. '       ' → logprob: -5.4790568351745605
    5. ' next' → logprob: -6.2290568351745605
    6. 'results' → logprob: -6.4790568351745605
    7. ' states' → logprob: -8.729057312011719
    8. 'new' → logprob: -8.979057312011719
    9. 'return' → logprob: -9.854057312011719
    10. '[next' → logprob: -10.604057312011719

Token 173: ' From' (ID: 7217)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6007440686225891
    2. ' next' → logprob: -0.9757440686225891
    3. 'states' → logprob: -2.9757440090179443
    4. ' states' → logprob: -4.100744247436523
    5. 'result' → logprob: -5.725744247436523
    6. 'results' → logprob: -6.475744247436523
    7. ' result' → logprob: -6.725744247436523
    8. '   ' → logprob: -8.225744247436523
    9. ' results' → logprob: -8.475744247436523
    10. 'def' → logprob: -9.100744247436523

Token 174: ' current' (ID: 2208)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8243771195411682
    2. '[]' → logprob: -1.5743770599365234
    3. 'self' → logprob: -2.5743770599365234
    4. '[
' → logprob: -2.9493770599365234
    5. ' []' → logprob: -3.0743770599365234
    6. ' self' → logprob: -3.6993770599365234
    7. 'the' → logprob: -4.074377059936523
    8. ' ' → logprob: -4.199377059936523
    9. ' next' → logprob: -4.324377059936523
    10. ' [' → logprob: -4.574377059936523

Token 175: ' number' (ID: 2086)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.17326045036315918
    2. ' states' → logprob: -2.298260450363159
    3. 'number' → logprob: -3.673260450363159
    4. 'next' → logprob: -4.048260688781738
    5. ' next' → logprob: -5.173260688781738
    6. 's' → logprob: -6.423260688781738
    7. 'numbers' → logprob: -6.548260688781738
    8. ' number' → logprob: -6.673260688781738
    9. 'result' → logprob: -6.923260688781738
    10. 'state' → logprob: -6.923260688781738

Token 176: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1821119785308838
    2. 'states' → logprob: -1.3071119785308838
    3. ' =' → logprob: -1.4321119785308838
    4. ' states' → logprob: -3.307111978530884
    5. ':' → logprob: -3.557111978530884
    6. '=' → logprob: -3.682111978530884
    7. ',' → logprob: -3.932111978530884
    8. 'next' → logprob: -4.432111740112305
    9. '<|end|>' → logprob: -4.557111740112305
    10. 'tokens' → logprob: -5.057111740112305

Token 177: ' generate' (ID: 10419)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.07397045195102692
    2. 'next' → logprob: -3.0739705562591553
    3. ' states' → logprob: -4.323970317840576
    4. ' result' → logprob: -5.573970317840576
    5. ' results' → logprob: -5.573970317840576
    6. 'result' → logprob: -7.198970317840576
    7. 'states' → logprob: -7.198970317840576
    8. 'results' → logprob: -7.323970317840576
    9. ' tokens' → logprob: -7.573970317840576
    10. ' new' → logprob: -7.573970317840576

Token 178: ' all' (ID: 722)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.39817044138908386
    2. 'next' → logprob: -1.6481704711914062
    3. ' states' → logprob: -3.2731704711914062
    4. '[next' → logprob: -3.2731704711914062
    5. '[]' → logprob: -3.5231704711914062
    6. 'states' → logprob: -4.398170471191406
    7. ' [' → logprob: -5.023170471191406
    8. ' []' → logprob: -5.273170471191406
    9. ' new' → logprob: -6.148170471191406
    10. '[
' → logprob: -6.773170471191406

Token 179: ' possible' (ID: 4149)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3503260910511017
    2. ' states' → logprob: -1.8503260612487793
    3. ' possible' → logprob: -2.3503260612487793
    4. 'next' → logprob: -3.9753260612487793
    5. ' new' → logprob: -4.975326061248779
    6. 'states' → logprob: -5.225326061248779
    7. 'possible' → logprob: -5.225326061248779
    8. '[next' → logprob: -5.975326061248779
    9. ' valid' → logprob: -6.350326061248779
    10. '[]' → logprob: -7.475326061248779

Token 180: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.43824833631515503
    2. ' states' → logprob: -1.6882483959197998
    3. 'next' → logprob: -2.1882483959198
    4. 'states' → logprob: -3.0632483959198
    5. '[next' → logprob: -5.063248157501221
    6. ' new' → logprob: -6.313248157501221
    7. ' Game' → logprob: -7.063248157501221
    8. 'Game' → logprob: -7.688248157501221
    9. '_next' → logprob: -8.063248634338379
    10. 'new' → logprob: -8.563248634338379

Token 181: ' states' (ID: 9407)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.4568753242492676
    2. ' states' → logprob: -1.0818753242492676
    3. 'states' → logprob: -3.7068753242492676
    4. 'States' → logprob: -7.081875324249268
    5. ' [' → logprob: -7.331875324249268
    6. ' _' → logprob: -7.956875324249268
    7. ' []' → logprob: -7.956875324249268
    8. '_' → logprob: -8.33187484741211
    9. ' ' → logprob: -8.70687484741211
    10. '[' → logprob: -8.83187484741211

Token 182: ' according' (ID: 7065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5719172954559326
    2. ':' → logprob: -2.0719172954559326
    3. ' states' → logprob: -2.5719172954559326
    4. 'states' → logprob: -2.8219172954559326
    5. '<|end|>' → logprob: -2.9469172954559326
    6. '[]' → logprob: -3.3219172954559326
    7. 's' → logprob: -4.446917533874512
    8. '=[]' → logprob: -4.821917533874512
    9. '   ' → logprob: -4.821917533874512
    10. '(states' → logprob: -4.821917533874512

Token 183: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2835886478424072
    2. '<|end|>' → logprob: -2.0335886478424072
    3. 'to' → logprob: -2.1585886478424072
    4. ' ' → logprob: -8.158588409423828
    5. '<|end|>' → logprob: -9.408588409423828
    6. '_to' → logprob: -9.408588409423828
    7. 'ly' → logprob: -10.033588409423828
    8. 'def' → logprob: -11.033588409423828
    9. '
' → logprob: -11.533588409423828
    10. '...' → logprob: -11.658588409423828

Token 184: ' rules' (ID: 9607)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.19874027371406555
    2. 'the' → logprob: -1.9487402439117432
    3. ' some' → logprob: -4.698740482330322
    4. 'self' → logprob: -5.323740482330322
    5. ' self' → logprob: -5.573740482330322
    6. 'some' → logprob: -5.698740482330322
    7. ' game' → logprob: -5.823740482330322
    8. ' all' → logprob: -6.323740482330322
    9. ' possible' → logprob: -6.323740482330322
    10. ' rules' → logprob: -6.698740482330322

Token 185: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.262397438287735
    2. '<|end|>' → logprob: -2.012397527694702
    3. ':' → logprob: -3.262397527694702
    4. '<|end|>' → logprob: -4.137397289276123
    5. '
' → logprob: -5.137397289276123
    6. ' states' → logprob: -5.387397289276123
    7. 'states' → logprob: -5.512397289276123
    8. '   ' → logprob: -5.762397289276123
    9. 'tokens' → logprob: -6.137397289276123
    10. ' ' → logprob: -6.137397289276123

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47702232003211975
    2. '<|end|>' → logprob: -1.1020222902297974
    3. ':' → logprob: -4.227022171020508
    4. '<|end|>' → logprob: -4.727022171020508
    5. ' ' → logprob: -4.977022171020508
    6. '[]' → logprob: -5.477022171020508
    7. '[' → logprob: -5.852022171020508
    8. '   ' → logprob: -6.227022171020508
    9. '#' → logprob: -7.102022171020508
    10. '        ' → logprob: -7.227022171020508

Token 187: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.20345495641231537
    2. ' next' → logprob: -2.4534549713134766
    3. 'states' → logprob: -2.5784549713134766
    4. '       ' → logprob: -4.453454971313477
    5. ' states' → logprob: -5.328454971313477
    6. 'result' → logprob: -6.203454971313477
    7. 'tokens' → logprob: -6.328454971313477
    8. '[next' → logprob: -7.953454971313477
    9. 'results' → logprob: -8.203454971313477
    10. 'new' → logprob: -8.453454971313477

Token 188: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.00014537633978761733
    2. '_' → logprob: -9.125144958496094
    3. '_numbers' → logprob: -11.000144958496094
    4. 'states' → logprob: -12.250144958496094
    5. '_next' → logprob: -12.500144958496094
    6. 's' → logprob: -13.125144958496094
    7. ' _' → logprob: -13.250144958496094
    8. '_number' → logprob: -13.250144958496094
    9. ' =' → logprob: -13.625144958496094
    10. ' states' → logprob: -13.750144958496094

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012524133548140526
    2. '=' → logprob: -4.387524127960205
    3. ':' → logprob: -11.637524604797363
    4. '=[]' → logprob: -12.762524604797363
    5. 's' → logprob: -13.637524604797363
    6. ' ' → logprob: -13.887524604797363
    7. ',' → logprob: -16.012523651123047
    8. ' ' → logprob: -16.012523651123047
    9. ')' → logprob: -16.012523651123047
    10. '[]' → logprob: -16.387523651123047

Token 190: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006772919092327356
    2. ' []' → logprob: -5.006772994995117
    3. '[]
' → logprob: -9.881772994995117
    4. '[]

' → logprob: -12.256772994995117
    5. '[' → logprob: -14.131772994995117
    6. ' []
' → logprob: -14.631772994995117
    7. '[]}' → logprob: -15.131772994995117
    8. '[]>' → logprob: -15.881772994995117
    9. ' []

' → logprob: -16.506772994995117
    10. '[])' → logprob: -17.256772994995117

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02425467036664486
    2. ' for' → logprob: -4.02425479888916
    3. 'for' → logprob: -5.89925479888916
    4. '
' → logprob: -6.14925479888916
    5. '        
' → logprob: -7.64925479888916
    6. ',' → logprob: -8.64925479888916
    7. '#' → logprob: -8.64925479888916
    8. '   ' → logprob: -9.89925479888916
    9. ' 
' → logprob: -10.27425479888916
    10. ' ' → logprob: -10.52425479888916

Token 192: ' digits' (ID: 37806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23125101625919342
    2. ' for' → logprob: -2.1062510013580322
    3. 'num' → logprob: -3.6062510013580322
    4. 'n' → logprob: -4.356251239776611
    5. 'if' → logprob: -4.356251239776611
    6. ' if' → logprob: -4.981251239776611
    7. 'length' → logprob: -5.356251239776611
    8. ' n' → logprob: -5.356251239776611
    9. 'number' → logprob: -5.481251239776611
    10. 'current' → logprob: -5.481251239776611

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004107492510229349
    2. '=' → logprob: -5.504107475280762
    3. ' ' → logprob: -11.004107475280762
    4. 's' → logprob: -12.379107475280762
    5. '_' → logprob: -13.379107475280762
    6. '.' → logprob: -13.879107475280762
    7. '_str' → logprob: -14.379107475280762
    8. ',' → logprob: -14.629107475280762
    9. '_list' → logprob: -14.754107475280762
    10. '_len' → logprob: -15.004107475280762

Token 194: ' list' (ID: 1562)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16949869692325592
    2. 'list' → logprob: -2.6694986820220947
    3. '[self' → logprob: -3.4194986820220947
    4. ' self' → logprob: -3.5444986820220947
    5. ' list' → logprob: -4.544498920440674
    6. '[' → logprob: -4.794498920440674
    7. ' [' → logprob: -5.169498920440674
    8. '[list' → logprob: -8.544498443603516
    9. '[str' → logprob: -9.544498443603516
    10. '[int' → logprob: -10.419498443603516

Token 195: '(map' (ID: 16946)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010866894444916397
    2. '(' → logprob: -9.37510871887207
    3. '(map' → logprob: -10.87510871887207
    4. 'self' → logprob: -12.37510871887207
    5. '(str' → logprob: -15.12510871887207
    6. '(int' → logprob: -16.37510871887207
    7. ' (' → logprob: -16.50010871887207
    8. '(range' → logprob: -16.50010871887207
    9. '(filter' → logprob: -17.12510871887207
    10. '(set' → logprob: -17.12510871887207

Token 196: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017994119552895427
    2. '(str' → logprob: -6.376799583435059
    3. '(lambda' → logprob: -9.751799583435059
    4. '(' → logprob: -10.501799583435059
    5. 'int' → logprob: -11.626799583435059
    6. '[int' → logprob: -14.376799583435059
    7. 'str' → logprob: -14.501799583435059
    8. ' (' → logprob: -14.626799583435059
    9. '   ' → logprob: -15.501799583435059
    10. ',int' → logprob: -15.501799583435059

Token 197: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012321976944804192
    2. '(' → logprob: -4.512321949005127
    3. '(list' → logprob: -7.012321949005127
    4. ',' → logprob: -9.012322425842285
    5. ' (' → logprob: -9.137322425842285
    6. '(str' → logprob: -9.512322425842285
    7. 'self' → logprob: -10.762322425842285
    8. '(
' → logprob: -11.512322425842285
    9. ',self' → logprob: -11.512322425842285
    10. ')' → logprob: -12.012322425842285

Token 198: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15650320053100586
    2. 'list' → logprob: -2.656503200531006
    3. 'str' → logprob: -3.031503200531006
    4. ' self' → logprob: -3.906503200531006
    5. ' list' → logprob: -5.656503200531006
    6. ' str' → logprob: -5.906503200531006
    7. '(self' → logprob: -9.656503677368164
    8. '   ' → logprob: -11.156503677368164
    9. ' ' → logprob: -11.906503677368164
    10. '
' → logprob: -12.281503677368164

Token 199: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.0026540132239460945
    2. '(number' → logprob: -6.377654075622559
    3. 'number' → logprob: -7.752654075622559
    4. ' .' → logprob: -8.377654075622559
    5. '.' → logprob: -9.127654075622559
    6. ')' → logprob: -9.752654075622559
    7. '
' → logprob: -10.002654075622559
    8. ').' → logprob: -11.002654075622559
    9. 'umber' → logprob: -11.252654075622559
    10. '.character' → logprob: -11.252654075622559

Token 200: '))
' (ID: 2210)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.35644662380218506
    2. '))' → logprob: -1.231446623802185
    3. '()))
' → logprob: -5.356446743011475
    4. '()' → logprob: -6.856446743011475
    5. '[' → logprob: -7.356446743011475
    6. '))
' → logprob: -7.481446743011475
    7. '(' → logprob: -8.106446266174316
    8. '[:-' → logprob: -8.356446266174316
    9. ' ))' → logprob: -8.481446266174316
    10. '()[' → logprob: -9.106446266174316

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01790606416761875
    2. ' for' → logprob: -4.892906188964844
    3. ')' → logprob: -5.892906188964844
    4. 'for' → logprob: -6.017906188964844
    5. '
' → logprob: -6.267906188964844
    6. '        
' → logprob: -6.517906188964844
    7. ',' → logprob: -6.892906188964844
    8. '#' → logprob: -8.767906188964844
    9. '<|end|>' → logprob: -8.767906188964844
    10. '   ' → logprob: -10.267906188964844

Token 202: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47736549377441406
    2. 'for' → logprob: -0.9773654937744141
    3. ' n' → logprob: -6.602365493774414
    4. 'n' (adapté à ' n') → logprob: -6.977365493774414
    5. ' if' → logprob: -7.852365493774414
    6. '       ' → logprob: -8.477365493774414
    7. 'if' → logprob: -8.852365493774414
    8. 'length' → logprob: -9.227365493774414
    9. ' length' → logprob: -9.477365493774414
    10. '        
' → logprob: -11.602365493774414

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09029798209667206
    2. '=' → logprob: -2.4652979373931885
    3. '=len' → logprob: -7.590298175811768
    4. 'um' → logprob: -8.09029769897461
    5. '_digits' → logprob: -8.46529769897461
    6. 'o' → logprob: -9.59029769897461
    7. ' ' → logprob: -9.84029769897461
    8. '_' → logprob: -10.09029769897461
    9. 'digits' → logprob: -10.09029769897461
    10. 'd' → logprob: -10.59029769897461

Token 204: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.04859793186187744
    2. 'len' → logprob: -3.048597812652588
    3. ' digits' → logprob: -12.798598289489746
    4. '=len' → logprob: -12.923598289489746
    5. '[len' → logprob: -13.048598289489746
    6. '(len' → logprob: -13.048598289489746
    7. ' ' → logprob: -14.673598289489746
    8. 'digits' → logprob: -14.923598289489746
    9. '	len' → logprob: -16.17359733581543
    10. '0' → logprob: -17.42359733581543

Token 205: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00987283792346716
    2. '(self' → logprob: -4.634872913360596
    3. '(' → logprob: -9.384872436523438
    4. 'digits' → logprob: -11.509872436523438
    5. '(next' → logprob: -11.634872436523438
    6. 'self' → logprob: -12.134872436523438
    7. ' digits' → logprob: -13.009872436523438
    8. ' (' → logprob: -13.134872436523438
    9. '(
' → logprob: -14.134872436523438
    10. '(numbers' → logprob: -14.259872436523438

Token 206: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.007698314264416695
    2. 'digits' → logprob: -4.8826985359191895
    3. 'igts' → logprob: -10.507698059082031
    4. 'ig' → logprob: -11.007698059082031
    5. 'its' → logprob: -11.507698059082031
    6. ')' → logprob: -11.632698059082031
    7. ' digits' → logprob: -11.882698059082031
    8. 'igit' → logprob: -12.632698059082031
    9. 'self' → logprob: -13.007698059082031
    10. 'next' → logprob: -13.382698059082031

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035846480750478804
    2. ')
' → logprob: -8.000358581542969
    3. ' )' → logprob: -11.125358581542969
    4. '       ' → logprob: -13.375358581542969
    5. ')

' → logprob: -13.375358581542969
    6. '-' → logprob: -14.000358581542969
    7. '   ' → logprob: -14.000358581542969
    8. '[' → logprob: -14.250358581542969
    9. ')-' → logprob: -14.250358581542969
    10. '))' → logprob: -14.375358581542969

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5624315738677979
    2. '
' → logprob: -1.8124315738677979
    3. ' for' → logprob: -2.312431573867798
    4. 'for' → logprob: -2.687431573867798
    5. '<|end|>' → logprob: -3.437431573867798
    6. '        
' → logprob: -3.687431573867798
    7. ' 
' → logprob: -4.062431335449219
    8. ' ' → logprob: -4.562431335449219
    9. '  
' → logprob: -5.812431335449219
    10. '    
' → logprob: -6.062431335449219

Token 209: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4288271963596344
    2. ' for' → logprob: -1.053827166557312
    3. 'if' → logprob: -10.178827285766602
    4. ' if' → logprob: -10.428827285766602
    5. '       ' → logprob: -10.803827285766602
    6. ')' → logprob: -11.553827285766602
    7. '
' → logprob: -11.803827285766602
    8. ' 
' → logprob: -12.178827285766602
    9. ' ' → logprob: -12.678827285766602
    10. '   ' → logprob: -12.928827285766602

Token 210: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16083349287509918
    2. 'i' → logprob: -1.910833477973938
    3. ' split' → logprob: -8.285833358764648
    4. 'split' → logprob: -9.285833358764648
    5. ' cut' → logprob: -10.160833358764648
    6. ' ' → logprob: -10.160833358764648
    7. ' idx' → logprob: -10.785833358764648
    8. '	i' → logprob: -10.910833358764648
    9. '   ' → logprob: -11.535833358764648
    10. '_' → logprob: -11.598333358764648

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031634606420993805
    2. 'in' → logprob: -5.8781633377075195
    3. ' ' → logprob: -8.12816333770752
    4. ',' → logprob: -10.50316333770752
    5. '1' → logprob: -12.12816333770752
    6. 'd' → logprob: -12.50316333770752
    7. '0' → logprob: -12.50316333770752
    8. 'n' → logprob: -12.62816333770752
    9. '+' → logprob: -12.87816333770752
    10. '_' → logprob: -13.12816333770752

Token 212: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740857183933258
    2. ' range' → logprob: -0.9740856885910034
    3. ' ' → logprob: -12.224085807800293
    4. '	range' → logprob: -13.474085807800293
    5. '  ' → logprob: -14.474085807800293
    6. '(range' → logprob: -14.599085807800293
    7. '   ' → logprob: -14.724085807800293
    8. '[' → logprob: -15.849085807800293
    9. ' xrange' → logprob: -16.099084854125977
    10. ')' → logprob: -16.599084854125977

Token 213: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.44233420491218567
    2. '(' → logprob: -1.0673341751098633
    3. '1' → logprob: -4.567334175109863
    4. 'n' → logprob: -6.067334175109863
    5. ' n' → logprob: -7.442334175109863
    6. ' ' → logprob: -8.567334175109863
    7. ' (' → logprob: -10.567334175109863
    8. '(len' → logprob: -11.317334175109863
    9. '(
' → logprob: -12.317334175109863
    10. ')' → logprob: -12.567334175109863

Token 214: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7176446914672852
    2. ' -' → logprob: -1.5926446914672852
    3. '-' → logprob: -1.7176446914672852
    4. '):
' → logprob: -2.092644691467285
    5. ' ):' → logprob: -5.342644691467285
    6. ' ):
' → logprob: -7.717644691467285
    7. '   ' → logprob: -8.217644691467285
    8. ')' → logprob: -8.967644691467285
    9. '       ' → logprob: -9.717644691467285
    10. ' ' → logprob: -10.342644691467285

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002096197713399306
    2. ' ' → logprob: -8.50020980834961
    3. '2' → logprob: -12.50020980834961
    4. '0' → logprob: -14.18770980834961
    5. ')' → logprob: -15.06270980834961
    6. '   ' → logprob: -15.43770980834961
    7. '```' → logprob: -15.81270980834961
    8. '  ' → logprob: -16.12520980834961
    9. '3' → logprob: -16.43770980834961
    10. '
' → logprob: -16.62520980834961

Token 216: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42885130643844604
    2. '):
' → logprob: -1.0538513660430908
    3. '):
' → logprob: -9.678851127624512
    4. ' ):' → logprob: -10.178851127624512
    5. '):

' → logprob: -11.178851127624512
    6. ',' → logprob: -11.553851127624512
    7. ' ):
' → logprob: -11.928851127624512
    8. ')' → logprob: -11.928851127624512
    9. ':' → logprob: -12.178851127624512
    10. '1' → logprob: -12.928851127624512

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03518848866224289
    2. '       ' → logprob: -4.285188674926758
    3. ',' → logprob: -4.910188674926758
    4. ' if' → logprob: -5.785188674926758
    5. ' for' → logprob: -6.035188674926758
    6. '            
' → logprob: -6.410188674926758
    7. '+' → logprob: -7.035188674926758
    8. '<|end|>' → logprob: -7.160188674926758
    9. '   ' → logprob: -7.535188674926758
    10. ' new' → logprob: -7.660188674926758

Token 218: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.13602587580680847
    2. ' for' → logprob: -3.511025905609131
    3. 'new' → logprob: -4.136025905609131
    4. ' next' → logprob: -4.136025905609131
    5. ' sum' → logprob: -4.261025905609131
    6. ' if' → logprob: -4.386025905609131
    7. ' combined' → logprob: -5.011025905609131
    8. ' left' → logprob: -5.136025905609131
    9. '           ' → logprob: -5.136025905609131
    10. ' s' → logprob: -5.386025905609131

Token 219: ' sum' (ID: 4215)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2784934937953949
    2. ' new' → logprob: -2.0284934043884277
    3. 'sum' → logprob: -3.1534934043884277
    4. 'for' → logprob: -4.028493404388428
    5. 'combined' → logprob: -4.153493404388428
    6. 'next' → logprob: -4.903493404388428
    7. '#' → logprob: -5.528493404388428
    8. ' combined' → logprob: -5.903493404388428
    9. 'merged' → logprob: -5.903493404388428
    10. 'if' → logprob: -5.903493404388428

Token 220: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13853198289871216
    2. '_val' → logprob: -2.8885319232940674
    3. '_of' → logprob: -3.6385319232940674
    4. ' =' → logprob: -4.1385321617126465
    5. '_value' → logprob: -4.3885321617126465
    6. '_digit' → logprob: -5.1385321617126465
    7. '_digits' → logprob: -5.2635321617126465
    8. 's' → logprob: -5.8885321617126465
    9. 'ed' → logprob: -6.2635321617126465
    10. '_result' → logprob: -7.1385321617126465

Token 221: ' adjacent' (ID: 39069)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.01954251527786255
    2. ' digits' → logprob: -4.144542694091797
    3. 'two' → logprob: -6.269542694091797
    4. 'the' → logprob: -7.394542694091797
    5. 'adj' → logprob: -8.019542694091797
    6. ' two' → logprob: -8.144542694091797
    7. ' the' → logprob: -8.644542694091797
    8. ' adjacent' → logprob: -9.769542694091797
    9. 'd' → logprob: -10.394542694091797
    10. 'dig' → logprob: -11.144542694091797

Token 222: ' i' (ID: 575)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5286011695861816
    2. ' digits' → logprob: -0.9036011695861816
    3. 's' → logprob: -5.528601169586182
    4. 'd' → logprob: -8.153600692749023
    5. ' ' → logprob: -8.403600692749023
    6. '<|end|>' → logprob: -8.528600692749023
    7. ',' → logprob: -8.653600692749023
    8. 'digit' → logprob: -9.028600692749023
    9. '_digits' → logprob: -9.278600692749023
    10. '<|end|>' → logprob: -9.903600692749023

Token 223: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.129268616437912
    2. '+' → logprob: -2.5042686462402344
    3. ']' → logprob: -3.5042686462402344
    4. 'tokens' → logprob: -6.754268646240234
    5. ' ' → logprob: -6.879268646240234
    6. ' and' → logprob: -7.004268646240234
    7. ' +' → logprob: -7.129268646240234
    8. ' s' → logprob: -7.129268646240234
    9. 'ons' → logprob: -7.379268646240234
    10. '  ' → logprob: -7.379268646240234

Token 224: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006161397323012352
    2. ' i' → logprob: -5.131161212921143
    3. '(i' → logprob: -8.5061616897583
    4. '
' → logprob: -11.8811616897583
    5. '`' → logprob: -12.2561616897583
    6. ' (' → logprob: -12.2561616897583
    7. '{i' → logprob: -12.5061616897583
    8. '	i' → logprob: -12.6311616897583
    9. '```' → logprob: -13.0061616897583
    10. '[i' → logprob: -13.0061616897583

Token 225: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008120091515593231
    2. ' +' → logprob: -7.12581205368042
    3. '+
' → logprob: -12.250811576843262
    4. '1' → logprob: -13.875811576843262
    5. '+i' → logprob: -14.625811576843262
    6. ' ' → logprob: -14.875811576843262
    7. ' +
' → logprob: -15.375811576843262
    8. 'i' → logprob: -16.000812530517578
    9. '   ' → logprob: -16.125812530517578
    10. 's' → logprob: -16.125812530517578

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5941604690160602e-05
    2. ' ' → logprob: -10.625025749206543
    3. '```' → logprob: -14.625025749206543
    4. 'i' → logprob: -15.125025749206543
    5. '   ' → logprob: -15.375025749206543
    6. '  ' → logprob: -16.12502670288086
    7. 'tokens' → logprob: -16.37502670288086
    8. '
' → logprob: -16.50002670288086
    9. '0' → logprob: -16.62502670288086
    10. ')' → logprob: -16.87502670288086

Token 227: ' digits' (ID: 37806)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20560987293720245
    2. ')' → logprob: -3.2056097984313965
    3. '=' → logprob: -3.2056097984313965
    4. 'digits' → logprob: -3.3306097984313965
    5. ',' → logprob: -3.8306097984313965
    6. ' digits' → logprob: -4.3306097984313965
    7. ':' → logprob: -5.3306097984313965
    8. 's' → logprob: -5.7056097984313965
    9. ' is' → logprob: -5.9556097984313965
    10. 'd' → logprob: -5.9556097984313965

Token 228: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23653635382652283
    2. '           ' → logprob: -2.6115362644195557
    3. '=' → logprob: -2.7365362644195557
    4. ',' → logprob: -3.7365362644195557
    5. ':' → logprob: -3.8615362644195557
    6. ')' → logprob: -4.486536502838135
    7. '<|end|>' → logprob: -5.361536502838135
    8. '            ' → logprob: -5.986536502838135
    9. '<|end|>' → logprob: -6.861536502838135
    10. '            
' → logprob: -7.111536502838135

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07121025025844574
    2. ',' → logprob: -3.0712101459503174
    3. ' =' → logprob: -4.6962103843688965
    4. ':' → logprob: -5.5712103843688965
    5. '=' → logprob: -6.1962103843688965
    6. ' next' → logprob: -6.4462103843688965
    7. ')' → logprob: -7.1962103843688965
    8. '            
' → logprob: -7.3212103843688965
    9. ' if' → logprob: -7.4462103843688965
    10. '       ' → logprob: -7.5712103843688965

Token 230: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.6177750825881958
    2. ' s' → logprob: -1.4927750825881958
    3. ' new' → logprob: -2.4927749633789062
    4. 'sum' → logprob: -2.6177749633789062
    5. 'new' → logprob: -2.8677749633789062
    6. 'next' → logprob: -4.992774963378906
    7. 'total' → logprob: -5.242774963378906
    8. ' sum' → logprob: -5.492774963378906
    9. ' next' → logprob: -5.867774963378906
    10. '           ' → logprob: -6.742774963378906

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03860560432076454
    2. '=' → logprob: -3.2886056900024414
    3. 'um' → logprob: -7.538605690002441
    4. ' ' → logprob: -10.538605690002441
    5. '=sum' → logprob: -13.913605690002441
    6. '_' → logprob: -14.288605690002441
    7. 'd' → logprob: -14.413605690002441
    8. 's' → logprob: -14.663605690002441
    9. '=int' → logprob: -15.288605690002441
    10. '	' → logprob: -15.288605690002441

Token 232: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.01125341933220625
    2. ' digits' → logprob: -4.511253356933594
    3. 'str' → logprob: -8.761253356933594
    4. 'd' → logprob: -10.261253356933594
    5. '	d' → logprob: -12.761253356933594
    6. ' str' → logprob: -13.011253356933594
    7. ' ' → logprob: -13.136253356933594
    8. 'dig' → logprob: -13.511253356933594
    9. '(d' → logprob: -13.636253356933594
    10. '   ' → logprob: -13.761253356933594

Token 233: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.250006675720215
    3. 'i' → logprob: -13.500006675720215
    4. '[
' → logprob: -14.500006675720215
    5. ' [' → logprob: -18.12500762939453
    6. '   ' → logprob: -18.37500762939453
    7. '[index' → logprob: -18.75000762939453
    8. '[I' → logprob: -18.87500762939453
    9. ',i' → logprob: -19.00000762939453
    10. '[idx' → logprob: -19.12500762939453

Token 234: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002265278482809663
    2. ']+' → logprob: -6.127265453338623
    3. ' ]' → logprob: -9.877264976501465
    4. '+' → logprob: -10.627264976501465
    5. ' +' → logprob: -12.752264976501465
    6. '+]' → logprob: -15.002264976501465
    7. ']
' → logprob: -15.127264976501465
    8. '+i' → logprob: -15.252264976501465
    9. ')' → logprob: -15.627264976501465
    10. '']' → logprob: -15.627264976501465

Token 235: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602364182472229
    2. '+' → logprob: -1.9102363586425781
    3. '+i' → logprob: -12.410236358642578
    4. '+d' → logprob: -12.660236358642578
    5. '+s' → logprob: -13.035236358642578
    6. ' +
' → logprob: -14.035236358642578
    7. ' ' → logprob: -14.160236358642578
    8. '+
' → logprob: -15.285236358642578
    9. '+p' → logprob: -16.160236358642578
    10. '+b' → logprob: -16.285236358642578

Token 236: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.6931551694869995
    2. 'digits' → logprob: -0.6931551694869995
    3. 'd' → logprob: -12.568155288696289
    4. ' ' → logprob: -13.568155288696289
    5. 'igits' → logprob: -14.318155288696289
    6. '1' → logprob: -14.318155288696289
    7. '_digits' → logprob: -14.318155288696289
    8. 'digit' → logprob: -15.318155288696289
    9. '	d' → logprob: -15.318155288696289
    10. '
' → logprob: -15.443155288696289

Token 237: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4736459888808895e-05
    2. '[
' → logprob: -11.625014305114746
    3. '[' → logprob: -12.625014305114746
    4. '][' → logprob: -13.625014305114746
    5. 'i' → logprob: -14.375014305114746
    6. ']' → logprob: -14.875014305114746
    7. '{i' → logprob: -16.000015258789062
    8. ' [' → logprob: -17.250015258789062
    9. '[++' → logprob: -17.375015258789062
    10. '```' → logprob: -17.375015258789062

Token 238: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023858259373810142
    2. ' +' → logprob: -8.625238418579102
    3. 'i' → logprob: -10.750238418579102
    4. '+i' → logprob: -11.000238418579102
    5. '1' → logprob: -11.375238418579102
    6. '+
' → logprob: -12.875238418579102
    7. ']' → logprob: -13.250238418579102
    8. '[i' → logprob: -13.500238418579102
    9. '+)' → logprob: -14.000238418579102
    10. ']+' → logprob: -14.750238418579102

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.937508583068848
    4. '```' → logprob: -16.00000762939453
    5. ']' → logprob: -16.31250762939453
    6. '2' → logprob: -17.75000762939453
    7. '+' → logprob: -17.75000762939453
    8. '  ' → logprob: -17.87500762939453
    9. '0' → logprob: -18.06250762939453
    10. 'i' → logprob: -18.56250762939453

Token 240: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40500059723854065
    2. ')' → logprob: -1.6550005674362183
    3. ']
' → logprob: -2.280000686645508
    4. ')
' → logprob: -3.280000686645508
    5. '           ' → logprob: -7.405000686645508
    6. '])' → logprob: -7.655000686645508
    7. ']
' → logprob: -7.780000686645508
    8. '       ' → logprob: -8.780000686645508
    9. ')
' → logprob: -8.905000686645508
    10. ')]' → logprob: -9.905000686645508

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021453700959682465
    2. '
' → logprob: -5.021453857421875
    3. '<|end|>' → logprob: -5.146453857421875
    4. ',' → logprob: -6.021453857421875
    5. '            
' → logprob: -6.521453857421875
    6. ')' → logprob: -6.646453857421875
    7. '       ' → logprob: -6.896453857421875
    8. ' if' → logprob: -7.146453857421875
    9. '<|end|>' → logprob: -7.396453857421875
    10. ' next' → logprob: -8.521453857421875

Token 242: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10791077464818954
    2. ' if' → logprob: -3.1079108715057373
    3. ' next' → logprob: -3.6079108715057373
    4. ' new' → logprob: -3.7329108715057373
    5. 'next' → logprob: -5.857910633087158
    6. 'new' → logprob: -6.732910633087158
    7. 'if' → logprob: -7.107910633087158
    8. '[next' → logprob: -7.982910633087158
    9. '            
' → logprob: -8.232911109924316
    10. ' tokens' → logprob: -8.732911109924316

Token 243: ' create' (ID: 2501)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29942914843559265
    2. 'new' → logprob: -1.924429178237915
    3. ' if' → logprob: -3.424429178237915
    4. '           ' → logprob: -3.424429178237915
    5. 'next' → logprob: -3.674429178237915
    6. ' new' → logprob: -4.799428939819336
    7. 'for' → logprob: -5.174428939819336
    8. '#' → logprob: -5.674428939819336
    9. '       ' → logprob: -6.174428939819336
    10. ' next' → logprob: -6.799428939819336

Token 244: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.08413758128881454
    2. 'new' → logprob: -2.9591376781463623
    3. ' a' → logprob: -4.209137439727783
    4. ' next' → logprob: -4.459137439727783
    5. 'next' → logprob: -6.209137439727783
    6. 'a' → logprob: -8.959137916564941
    7. '<|end|>' → logprob: -9.709137916564941
    8. '_new' → logprob: -9.834137916564941
    9. '<|end|>' → logprob: -10.584137916564941
    10. ' the' → logprob: -11.084137916564941

Token 245: ' digits' (ID: 37806)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.05982447415590286
    2. '_number' → logprob: -2.9348244667053223
    3. 'state' → logprob: -6.309824466705322
    4. 'digits' → logprob: -6.434824466705322
    5. '_digits' → logprob: -7.059824466705322
    6. ' number' → logprob: -8.18482494354248
    7. '_numbers' → logprob: -9.30982494354248
    8. '_state' → logprob: -9.43482494354248
    9. 'next' → logprob: -10.30982494354248
    10. 'numbers' → logprob: -10.30982494354248

Token 246: ' list' (ID: 1562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010181587189435959
    2. '           ' → logprob: -5.135181427001953
    3. 's' → logprob: -6.385181427001953
    4. '_list' → logprob: -7.135181427001953
    5. '       ' → logprob: -7.385181427001953
    6. '=' → logprob: -8.260181427001953
    7. 'list' → logprob: -8.260181427001953
    8. '[' → logprob: -9.260181427001953
    9. ',' → logprob: -9.885181427001953
    10. ' list' → logprob: -9.885181427001953

Token 247: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021103601902723312
    2. ',' → logprob: -5.396103382110596
    3. 'new' → logprob: -5.396103382110596
    4. ' new' → logprob: -5.646103382110596
    5. ' with' → logprob: -5.771103382110596
    6. ' for' → logprob: -6.146103382110596
    7. '       ' → logprob: -7.771103382110596
    8. ' =' → logprob: -8.146103858947754
    9. '[' → logprob: -8.271103858947754
    10. ' next' → logprob: -8.396103858947754

Token 248: ' i' (ID: 575)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.09551636874675751
    2. ' digits' → logprob: -2.5955164432525635
    3. ' s' → logprob: -4.470516204833984
    4. 's' → logprob: -6.220516204833984
    5. ' the' → logprob: -7.345516204833984
    6. '[' → logprob: -7.595516204833984
    7. '[i' → logprob: -7.720516204833984
    8. ' [' → logprob: -7.845516204833984
    9. '[s' → logprob: -8.095516204833984
    10. 'the' → logprob: -8.595516204833984

Token 249: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4353826344013214
    2. ' and' → logprob: -1.435382604598999
    3. ' +' → logprob: -2.810382604598999
    4. 'and' → logprob: -4.060382843017578
    5. ' i' → logprob: -4.435382843017578
    6. ' replaced' → logprob: -5.310382843017578
    7. ',' → logprob: -5.560382843017578
    8. ' ' → logprob: -5.810382843017578
    9. '   ' → logprob: -6.685382843017578
    10. '    ' → logprob: -6.685382843017578

Token 250: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006402421277016401
    2. ' i' → logprob: -7.375640392303467
    3. '(i' → logprob: -12.000639915466309
    4. '
' → logprob: -12.750639915466309
    5. '{i' → logprob: -13.375639915466309
    6. '	i' → logprob: -13.750639915466309
    7. '[i' → logprob: -14.000639915466309
    8. '`' → logprob: -15.125639915466309
    9. '+' → logprob: -15.250639915466309
    10. '```' → logprob: -15.500639915466309

Token 251: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009165783412754536
    2. ' +' → logprob: -7.000916481018066
    3. '+i' → logprob: -12.750916481018066
    4. 'i' → logprob: -13.625916481018066
    5. ' i' → logprob: -15.250916481018066
    6. '+
' → logprob: -15.750916481018066
    7. '2' → logprob: -16.250917434692383
    8. '1' → logprob: -16.625917434692383
    9. 's' → logprob: -16.625917434692383
    10. '   ' → logprob: -16.750917434692383

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005984273157082498
    2. '2' → logprob: -7.500598430633545
    3. ' ' → logprob: -10.250597953796387
    4. '```' → logprob: -13.125597953796387
    5. 'i' → logprob: -13.250597953796387
    6. '<|end|>' → logprob: -13.625597953796387
    7. '   ' → logprob: -13.750597953796387
    8. '
' → logprob: -14.688097953796387
    9. '...' → logprob: -14.875597953796387
    10. '-' → logprob: -15.000597953796387

Token 253: ' replaced' (ID: 21009)
  Prédit: ' replaced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replaced' → logprob: -0.1051446795463562
    2. 'removed' → logprob: -3.605144739151001
    3. ' removed' → logprob: -4.230144500732422
    4. 'merged' → logprob: -4.605144500732422
    5. 'digits' → logprob: -4.730144500732422
    6. ' merged' → logprob: -4.980144500732422
    7. ' elements' → logprob: -4.980144500732422
    8. 's' → logprob: -4.980144500732422
    9. 'th' → logprob: -5.855144500732422
    10. 'tokens' → logprob: -5.855144500732422

Token 254: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.10785941034555435
    2. 'by' → logprob: -2.6078593730926514
    3. ' with' → logprob: -4.3578596115112305
    4. 'with' → logprob: -4.4828596115112305
    5. 's' → logprob: -5.9828596115112305
    6. ' s' → logprob: -6.8578596115112305
    7. ' ' → logprob: -8.85785961151123
    8. ',' → logprob: -8.98285961151123
    9. ' i' → logprob: -9.35785961151123
    10. '=' → logprob: -9.35785961151123

Token 255: ' s' (ID: 265)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.21917735040187836
    2. 's' → logprob: -2.34417724609375
    3. '[str' → logprob: -2.84417724609375
    4. ' [' → logprob: -3.96917724609375
    5. '[' → logprob: -4.21917724609375
    6. 'str' → logprob: -5.71917724609375
    7. 'the' → logprob: -6.21917724609375
    8. ' s' → logprob: -7.09417724609375
    9. '[int' → logprob: -7.21917724609375
    10. 'a' → logprob: -7.34417724609375

Token 256: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029365433380007744
    2. ',' → logprob: -3.9043655395507812
    3. 'digits' → logprob: -5.154365539550781
    4. ' digits' → logprob: -7.404365539550781
    5. ' and' → logprob: -7.529365539550781
    6. '       ' → logprob: -7.654365539550781
    7. ' next' → logprob: -8.279365539550781
    8. '[' → logprob: -9.154365539550781
    9. 'next' → logprob: -9.154365539550781
    10. ':' → logprob: -9.279365539550781

Token 257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007480498868972063
    2. ',' → logprob: -5.382480621337891
    3. '       ' → logprob: -7.132480621337891
    4. ' new' → logprob: -7.632480621337891
    5. 'new' → logprob: -7.757480621337891
    6. ' next' → logprob: -8.25748062133789
    7. '               ' → logprob: -9.00748062133789
    8. ' and' → logprob: -9.25748062133789
    9. 'next' → logprob: -9.25748062133789
    10. 'digits' → logprob: -9.38248062133789

Token 258: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.2634050250053406
    2. 'new' (adapté à ' new') → logprob: -1.5134050846099854
    3. '           ' → logprob: -4.638404846191406
    4. '       ' → logprob: -6.888404846191406
    5. ' next' → logprob: -8.388404846191406
    6. 'next' → logprob: -8.638404846191406
    7. ' for' → logprob: -8.888404846191406
    8. '   ' → logprob: -9.888404846191406
    9. 'for' → logprob: -9.888404846191406
    10. 'digits' → logprob: -11.013404846191406

Token 259: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.005810651928186417
    2. 'digits' → logprob: -5.380810737609863
    3. '_' → logprob: -6.880810737609863
    4. '_number' → logprob: -9.880810737609863
    5. '_numbers' → logprob: -10.380810737609863
    6. '_state' → logprob: -11.005810737609863
    7. ' digits' → logprob: -11.505810737609863
    8. '_d' → logprob: -11.630810737609863
    9. '_digit' → logprob: -11.630810737609863
    10. '_states' → logprob: -11.630810737609863

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868717551231384
    2. '=' → logprob: -1.1368718147277832
    3. 's' → logprob: -14.511871337890625
    4. ' ' → logprob: -16.761871337890625
    5. '[' → logprob: -17.136871337890625
    6. '＝' → logprob: -17.386871337890625
    7. '   ' → logprob: -17.511871337890625
    8. '[:]' → logprob: -17.636871337890625
    9. ')' → logprob: -17.886871337890625
    10. ':' → logprob: -18.011871337890625

Token 261: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.001503313542343676
    2. ' digits' → logprob: -6.5015034675598145
    3. '   ' → logprob: -14.626502990722656
    4. '[' → logprob: -15.376502990722656
    5. 'd' → logprob: -16.001502990722656
    6. 'dig' → logprob: -16.751502990722656
    7. ' ' → logprob: -16.751502990722656
    8. 'digit' → logprob: -17.126502990722656
    9. '[]' → logprob: -17.751502990722656
    10. 'Digits' → logprob: -18.251502990722656

Token 262: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -6.392202976712724e-06
    2. '[:]' → logprob: -12.250006675720215
    3. '[' → logprob: -13.500006675720215
    4. '[i' → logprob: -16.7500057220459
    5. '.copy' → logprob: -17.0000057220459
    6. '[
' → logprob: -17.5000057220459
    7. '[:-' → logprob: -18.7500057220459
    8. ' [:' → logprob: -19.2500057220459
    9. '][:' → logprob: -20.0000057220459
    10. '=' → logprob: -20.6250057220459

Token 263: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.2729995988775045e-06
    2. ' i' → logprob: -12.000006675720215
    3. ']' → logprob: -17.2500057220459
    4. '   ' → logprob: -17.7500057220459
    5. '	i' → logprob: -18.6250057220459
    6. '{i' → logprob: -18.6250057220459
    7. ' ' → logprob: -18.7500057220459
    8. ',' → logprob: -19.8750057220459
    9. '0' → logprob: -19.8750057220459
    10. '[' → logprob: -20.1250057220459

Token 264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00047773998812772334
    2. ']+' → logprob: -7.7504777908325195
    3. '+' → logprob: -10.25047779083252
    4. ' ]' → logprob: -11.87547779083252
    5. 'i' → logprob: -13.00047779083252
    6. '1' → logprob: -14.00047779083252
    7. 's' → logprob: -15.25047779083252
    8. '-' → logprob: -15.37547779083252
    9. '2' → logprob: -15.62547779083252
    10. '```' → logprob: -15.62547779083252

Token 265: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760515928268433
    2. '+' → logprob: -0.8260515928268433
    3. '+[' → logprob: -9.326051712036133
    4. '+s' → logprob: -11.326051712036133
    5. 's' → logprob: -12.951051712036133
    6. '[' → logprob: -13.326051712036133
    7. '   ' → logprob: -13.451051712036133
    8. '       ' → logprob: -13.701051712036133
    9. '+i' → logprob: -13.701051712036133
    10. '+d' → logprob: -14.701051712036133

Token 266: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.012493056245148182
    2. '[d' → logprob: -5.262493133544922
    3. '[new' → logprob: -5.262493133544922
    4. '[' → logprob: -6.762493133544922
    5. '[number' → logprob: -7.887493133544922
    6. '[int' → logprob: -9.012493133544922
    7. '[len' → logprob: -9.137493133544922
    8. '[i' → logprob: -9.262493133544922
    9. '[str' → logprob: -9.512493133544922
    10. ' [' → logprob: -10.387493133544922

Token 267: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.981667537620524e-06
    2. ' s' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '           ' → logprob: -18.875001907348633
    5. '{s' → logprob: -19.125001907348633
    6. '(s' → logprob: -19.250001907348633
    7. '       ' → logprob: -19.375001907348633
    8. 'str' → logprob: -19.625001907348633
    9. '`s' → logprob: -20.125001907348633
    10. '	s' → logprob: -20.125001907348633

Token 268: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0206720617134124e-05
    2. ']+' → logprob: -11.62501049041748
    3. ' ]' → logprob: -14.25001049041748
    4. ',' → logprob: -15.50001049041748
    5. '']' → logprob: -16.250009536743164
    6. '()]' → logprob: -17.000009536743164
    7. '`]' → logprob: -17.375009536743164
    8. '[' → logprob: -17.625009536743164
    9. '+]' → logprob: -17.875009536743164
    10. '"]' → logprob: -17.875009536743164

Token 269: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693209946155548
    2. ' +' → logprob: -2.126932144165039
    3. '+d' → logprob: -12.751932144165039
    4. ',' → logprob: -15.501932144165039
    5. '+[' → logprob: -15.626932144165039
    6. ')' → logprob: -16.00193214416504
    7. '[' → logprob: -16.00193214416504
    8. ']' → logprob: -16.37693214416504
    9. '<|end|>' → logprob: -16.50193214416504
    10. ']+' → logprob: -16.62693214416504

Token 270: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.003603394143283367
    2. ' digits' → logprob: -5.628603458404541
    3. 'd' → logprob: -13.628602981567383
    4. 'igits' → logprob: -14.503602981567383
    5. '   ' → logprob: -14.878602981567383
    6. ' ' → logprob: -14.878602981567383
    7. '       ' → logprob: -15.253602981567383
    8. '           ' → logprob: -15.628602981567383
    9. 'dig' → logprob: -16.128602981567383
    10. '[' → logprob: -16.128602981567383

Token 271: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[(' → logprob: -12.87500286102295
    3. '[' → logprob: -16.500001907348633
    4. 'i' → logprob: -18.375001907348633
    5. '[
' → logprob: -19.250001907348633
    6. '(i' → logprob: -19.250001907348633
    7. '[I' → logprob: -19.375001907348633
    8. '{i' → logprob: -20.125001907348633
    9. ' [' → logprob: -20.500001907348633
    10. '```' → logprob: -21.125001907348633

Token 272: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.729906196298543e-06
    2. ' +' → logprob: -12.125009536743164
    3. '2' → logprob: -12.375009536743164
    4. '[' → logprob: -18.625009536743164
    5. ' ' → logprob: -18.750009536743164
    6. '+
' → logprob: -19.375009536743164
    7. '{' → logprob: -19.625009536743164
    8. '＋' → logprob: -19.875009536743164
    9. '+i' → logprob: -19.875009536743164
    10. '3' → logprob: -20.500009536743164

Token 273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '+' → logprob: -16.125
    4. '
' → logprob: -16.5
    5. '1' → logprob: -17.75
    6. '   ' → logprob: -18.0
    7. '3' → logprob: -19.125
    8. '```' → logprob: -19.375
    9. '２' → logprob: -19.625
    10. '  ' → logprob: -20.0

Token 274: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.05011919513344765
    2. ']' → logprob: -3.050119161605835
    3. ':]
' → logprob: -6.800119400024414
    4. ' :]' → logprob: -7.925119400024414
    5. ' ]' → logprob: -10.175119400024414
    6. '1' → logprob: -12.425119400024414
    7. ':' → logprob: -12.425119400024414
    8. ']
' → logprob: -13.175119400024414
    9. ' :]
' → logprob: -13.550119400024414
    10. '']' → logprob: -13.800119400024414

Token 275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007739955093711615
    2. '       ' → logprob: -5.007740020751953
    3. '
' → logprob: -7.882740020751953
    4. ',' → logprob: -8.257740020751953
    5. '<|end|>' → logprob: -8.757740020751953
    6. '        
' → logprob: -10.257740020751953
    7. '            
' → logprob: -10.257740020751953
    8. 'next' → logprob: -10.757740020751953
    9. '               ' → logprob: -10.757740020751953
    10. ')' → logprob: -10.882740020751953

Token 276: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1855744123458862
    2. 'new' (adapté à ' new') → logprob: -1.1855744123458862
    3. ' new' → logprob: -1.9355744123458862
    4. 'next' → logprob: -2.185574531555176
    5. '       ' → logprob: -2.810574531555176
    6. ' next' → logprob: -3.060574531555176
    7. '
' → logprob: -4.185574531555176
    8. '#' → logprob: -5.935574531555176
    9. '[next' → logprob: -6.685574531555176
    10. ' #' → logprob: -6.810574531555176

Token 277: '_number' (ID: 11733)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.5453965067863464
    2. '_number' → logprob: -1.2953965663909912
    3. '_digits' → logprob: -2.295396566390991
    4. 'number' → logprob: -3.295396566390991
    5. '_state' → logprob: -5.545396327972412
    6. 'digits' → logprob: -6.170396327972412
    7. '_numbers' → logprob: -6.295396327972412
    8. 'states' → logprob: -7.170396327972412
    9. 'state' → logprob: -10.17039680480957
    10. '.append' → logprob: -10.67039680480957

Token 278: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692947685718536
    2. '=' → logprob: -2.126929521560669
    3. ' ' → logprob: -15.00192928314209
    4. 's' → logprob: -15.00192928314209
    5. '='' → logprob: -15.87692928314209
    6. ' ="' → logprob: -15.87692928314209
    7. '"' → logprob: -16.251930236816406
    8. ' ='' → logprob: -16.251930236816406
    9. ' =
' → logprob: -16.376930236816406
    10. ')' → logprob: -16.751930236816406

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407862544059753
    2. '=' → logprob: -0.9740786552429199
    3. '='' → logprob: -14.599078178405762
    4. ' ' → logprob: -15.224078178405762
    5. ')' → logprob: -15.349078178405762
    6. 's' → logprob: -15.974078178405762
    7. '```' → logprob: -16.474079132080078
    8. '"' → logprob: -16.599079132080078
    9. ' ='' → logprob: -16.724079132080078
    10. '   ' → logprob: -16.849079132080078

Token 280: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16053545475006104
    2. '''.' → logprob: -1.910535454750061
    3. ' ''.' → logprob: -8.53553581237793
    4. ''' → logprob: -10.03553581237793
    5. ' "".' → logprob: -10.03553581237793
    6. 'str' → logprob: -11.16053581237793
    7. '""' → logprob: -11.78553581237793
    8. '''' → logprob: -12.41053581237793
    9. '"",' → logprob: -14.66053581237793
    10. ' ' → logprob: -15.16053581237793

Token 281: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. ' join' → logprob: -14.125000953674316
    3. 'jo' → logprob: -15.375000953674316
    4. '.join' → logprob: -17.500001907348633
    5. ' ' → logprob: -17.750001907348633
    6. 'j' → logprob: -18.000001907348633
    7. '.' → logprob: -18.125001907348633
    8. '```' → logprob: -18.375001907348633
    9. '(join' → logprob: -18.375001907348633
    10. '".' → logprob: -18.500001907348633

Token 282: '(str' (ID: 7946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.42976975440979004
    2. 'map' → logprob: -1.17976975440979
    3. '(str' → logprob: -3.42976975440979
    4. '(map' → logprob: -5.304769515991211
    5. '[str' → logprob: -5.429769515991211
    6. ' map' → logprob: -8.679769515991211
    7. ' str' → logprob: -9.554769515991211
    8. '	str' → logprob: -13.554769515991211
    9. '=str' → logprob: -14.179769515991211
    10. '   ' → logprob: -14.554769515991211

Token 283: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03646526113152504
    2. '(x' → logprob: -3.4114651679992676
    3. '(s' → logprob: -6.286465167999268
    4. '(new' → logprob: -7.286465167999268
    5. '(num' → logprob: -8.911465644836426
    6. '(k' → logprob: -10.536465644836426
    7. '(i' → logprob: -10.661465644836426
    8. '(j' → logprob: -10.911465644836426
    9. 'd' → logprob: -11.161465644836426
    10. '(e' → logprob: -11.536465644836426

Token 284: ')' (ID: 8)
  Prédit: 'igit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.2125220000743866
    2. ')' → logprob: -1.712522029876709
    3. 'ig' → logprob: -4.837522029876709
    4. 'd' → logprob: -7.337522029876709
    5. 'new' → logprob: -7.462522029876709
    6. ')new' → logprob: -7.837522029876709
    7. ')d' → logprob: -8.83752155303955
    8. '(d' → logprob: -8.83752155303955
    9. '(x' → logprob: -8.96252155303955
    10. 'x' → logprob: -9.08752155303955

Token 285: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1162445917725563
    2. 'for' → logprob: -2.2412445545196533
    3. ')' → logprob: -5.991244792938232
    4. '(d' → logprob: -7.991244792938232
    5. '(s' → logprob: -8.366244316101074
    6. 'd' → logprob: -8.991244316101074
    7. 'new' → logprob: -9.116244316101074
    8. '```' → logprob: -10.866244316101074
    9. ' d' → logprob: -11.241244316101074
    10. ' ' → logprob: -11.366244316101074

Token 286: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05609821900725365
    2. ' d' → logprob: -3.556098222732544
    3. 'new' → logprob: -3.931098222732544
    4. ' new' → logprob: -5.056097984313965
    5. '_d' → logprob: -12.056097984313965
    6. ' in' → logprob: -13.556097984313965
    7. ' ' → logprob: -13.931097984313965
    8. '  ' → logprob: -14.181097984313965
    9. '_new' → logprob: -14.556097984313965
    10. '	d' → logprob: -14.806097984313965

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037264458369463682
    2. 'in' → logprob: -5.628726482391357
    3. '  ' → logprob: -10.1287260055542
    4. ' ' → logprob: -10.2537260055542
    5. 'new' → logprob: -10.5037260055542
    6. ' new' → logprob: -11.3787260055542
    7. 'd' → logprob: -12.5037260055542
    8. ' d' → logprob: -12.8787260055542
    9. 's' → logprob: -13.1287260055542
    10. '   ' → logprob: -13.2537260055542

Token 288: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.001170225441455841
    2. ' new' → logprob: -6.7511701583862305
    3. '[new' → logprob: -16.751171112060547
    4. '(new' → logprob: -19.001171112060547
    5. ')new' → logprob: -19.501171112060547
    6. '_new' → logprob: -20.126171112060547
    7. '   ' → logprob: -20.751171112060547
    8. '$new' → logprob: -20.751171112060547
    9. '.new' → logprob: -21.126171112060547
    10. '	new' → logprob: -21.126171112060547

Token 289: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0015909154899418354
    2. 'digits' → logprob: -6.501590728759766
    3. 'new' → logprob: -9.751590728759766
    4. 'igits' → logprob: -11.251590728759766
    5. '_number' → logprob: -11.501590728759766
    6. 'Digits' → logprob: -12.751590728759766
    7. '_numbers' → logprob: -13.501590728759766
    8. '_states' → logprob: -13.751590728759766
    9. '```' → logprob: -14.501590728759766
    10. 'number' → logprob: -15.001590728759766

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011086731217801571
    2. ')
' → logprob: -4.511086940765381
    3. ')
' → logprob: -10.886086463928223
    4. '           ' → logprob: -11.386086463928223
    5. '       ' → logprob: -12.386086463928223
    6. ' )' → logprob: -13.386086463928223
    7. ')

' → logprob: -13.636086463928223
    8. '))' → logprob: -14.761086463928223
    9. ')`
' → logprob: -15.136086463928223
    10. ')`' → logprob: -15.386086463928223

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037073178100399673
    2. 'next' → logprob: -8.125370979309082
    3. ' next' → logprob: -10.000370979309082
    4. '       ' → logprob: -11.625370979309082
    5. '[next' → logprob: -12.125370979309082
    6. '(next' → logprob: -12.750370979309082
    7. ',' → logprob: -12.875370979309082
    8. ',next' → logprob: -13.000370979309082
    9. '<|end|>' → logprob: -13.625370979309082
    10. '.next' → logprob: -14.125370979309082

Token 292: ' next' (ID: 2613)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4956135153770447
    2. 'next' (adapté à ' next') → logprob: -0.9956135153770447
    3. ' next' → logprob: -3.8706135749816895
    4. '[next' → logprob: -8.870613098144531
    5. '       ' → logprob: -9.120613098144531
    6. '
' → logprob: -9.495613098144531
    7. '.next' → logprob: -10.120613098144531
    8. '(next' → logprob: -10.620613098144531
    9. '	next' → logprob: -10.995613098144531
    10. ',next' → logprob: -11.495613098144531

Token 293: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.9361264946837764e-07
    2. 'States' → logprob: -16.5
    3. 'states' → logprob: -17.25
    4. '_state' → logprob: -17.875
    5. '_' → logprob: -18.25
    6. ' states' → logprob: -19.0
    7. ' States' → logprob: -19.375
    8. '```' → logprob: -19.75
    9. 's' → logprob: -19.875
    10. '_steps' → logprob: -20.25

Token 294: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005238140933215618
    2. '.' → logprob: -5.255238056182861
    3. '.app' → logprob: -13.25523853302002
    4. 'append' → logprob: -13.88023853302002
    5. '.extend' → logprob: -14.00523853302002
    6. '.Append' → logprob: -15.13023853302002
    7. '.ap' → logprob: -15.25523853302002
    8. ' .' → logprob: -16.005237579345703
    9. '.add' → logprob: -16.755237579345703
    10. '.push' → logprob: -16.880237579345703

Token 295: '(Game' (ID: 44100)
  Prédit: '(Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Game' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.750006675720215
    4. '(self' → logprob: -16.1250057220459
    5. '(G' → logprob: -16.2500057220459
    6. '(
' → logprob: -16.7500057220459
    7. '(new' → logprob: -18.1250057220459
    8. '((' → logprob: -18.1250057220459
    9. '(game' → logprob: -18.1250057220459
    10. 'Game' → logprob: -18.3750057220459

Token 296: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.7432603272027336e-06
    2. 'States' → logprob: -13.500001907348633
    3. 'Game' → logprob: -16.625001907348633
    4. 'state' → logprob: -17.250001907348633
    5. '_State' → logprob: -17.750001907348633
    6. '_state' → logprob: -17.875001907348633
    7. 'S' → logprob: -18.125001907348633
    8. '_STATE' → logprob: -18.375001907348633
    9. 'St' → logprob: -18.500001907348633
    10. '	State' → logprob: -18.625001907348633

Token 297: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -3.1186566047836095e-05
    2. '(' → logprob: -10.750031471252441
    3. '(next' → logprob: -12.500031471252441
    4. ')new' → logprob: -12.625031471252441
    5. 'new' → logprob: -13.375031471252441
    6. ')' → logprob: -14.625031471252441
    7. '(
' → logprob: -14.875031471252441
    8. ')(' → logprob: -15.750031471252441
    9. ',new' → logprob: -17.750030517578125
    10. ' (' → logprob: -17.750030517578125

Token 298: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.005937328562140465
    2. 'number' → logprob: -5.130937099456787
    3. '_digits' → logprob: -12.380937576293945
    4. 'digits' → logprob: -13.505937576293945
    5. ' number' → logprob: -14.505937576293945
    6. 'Number' → logprob: -14.630937576293945
    7. '_' → logprob: -14.880937576293945
    8. ')' → logprob: -15.005937576293945
    9. 'umber' → logprob: -15.380937576293945
    10. '_numbers' → logprob: -15.505937576293945

Token 299: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.005956768058240414
    2. 'str' → logprob: -5.130956649780273
    3. 'new' → logprob: -11.130956649780273
    4. 's' → logprob: -12.005956649780273
    5. 'Str' → logprob: -12.005956649780273
    6. ')' → logprob: -14.630956649780273
    7. '-str' → logprob: -16.130956649780273
    8. ' str' → logprob: -16.380956649780273
    9. '
' → logprob: -16.630956649780273
    10. '(str' → logprob: -16.755956649780273

Token 300: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008617172949016094
    2. ')
' → logprob: -4.758617401123047
    3. ')return' → logprob: -14.008617401123047
    4. '       ' → logprob: -14.383617401123047
    5. ')
' → logprob: -14.383617401123047
    6. '))' → logprob: -15.133617401123047
    7. ' )' → logprob: -15.633617401123047
    8. ')

' → logprob: -15.883617401123047
    9. ')`
' → logprob: -16.633617401123047
    10. '   ' → logprob: -17.008617401123047

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01836942508816719
    2. 'return' → logprob: -4.018369197845459
    3. ' return' → logprob: -9.143369674682617
    4. '   ' → logprob: -9.393369674682617
    5. '
' → logprob: -11.018369674682617
    6. '	return' → logprob: -11.643369674682617
    7. '	' → logprob: -13.393369674682617
    8. '```' → logprob: -13.893369674682617
    9. '        
' → logprob: -14.393369674682617
    10. '           ' → logprob: -15.268369674682617

Token 302: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21028952300548553
    2. 'return' (adapté à ' return') → logprob: -1.710289478302002
    3. '   ' → logprob: -5.210289478302002
    4. ' return' → logprob: -5.710289478302002
    5. '	return' → logprob: -10.71028995513916
    6. '
' → logprob: -10.83528995513916
    7. '        
' → logprob: -11.46028995513916
    8. '    ' → logprob: -13.21028995513916
    9. '    
' → logprob: -13.21028995513916
    10. '	' → logprob: -13.46028995513916

Token 303: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.31326955556869507
    2. ' next' → logprob: -1.3132696151733398
    3. '[next' → logprob: -11.81326961517334
    4. '(next' → logprob: -15.18826961517334
    5. '	next' → logprob: -16.063268661499023
    6. '.next' → logprob: -18.313268661499023
    7. '_next' → logprob: -19.813268661499023
    8. ',next' → logprob: -20.188268661499023
    9. '   ' → logprob: -21.188268661499023
    10. '```' → logprob: -22.313268661499023

Token 304: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -5.512236498361744e-07
    2. 'states' → logprob: -14.625000953674316
    3. '_state' → logprob: -17.25
    4. '_st' → logprob: -18.125
    5. '_' → logprob: -18.25
    6. 'States' → logprob: -18.625
    7. ' states' → logprob: -19.625
    8. '_steps' → logprob: -20.75
    9. '.states' → logprob: -21.0
    10. ' States' → logprob: -21.5

Token 305: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2909284234046936
    2. '   ' → logprob: -1.5409283638000488
    3. '<|end|>' → logprob: -3.790928363800049
    4. '
' → logprob: -5.040928363800049
    5. '    
' → logprob: -5.290928363800049
    6. 'from' → logprob: -5.915928363800049
    7. ' class' → logprob: -7.915928363800049
    8. '<|end|>' → logprob: -8.040928840637207
    9. '```' → logprob: -8.915928840637207
    10. '.' → logprob: -9.290928840637207

Token 306: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0010428131790831685
    2. 'from' → logprob: -7.00104284286499
    3. 'import' → logprob: -9.626042366027832
    4. ' class' → logprob: -11.251042366027832
    5. 'abstract' → logprob: -11.376042366027832
    6. 'def' → logprob: -11.376042366027832
    7. '   ' → logprob: -11.876042366027832
    8. '<|end|>' → logprob: -11.876042366027832
    9. '@' → logprob: -12.876042366027832
    10. '#' → logprob: -13.376042366027832

Token 307: ' Outcome' (ID: 183683)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.5297253727912903
    2. 'Fab' → logprob: -1.6547253131866455
    3. 'Min' → logprob: -2.4047253131866455
    4. 'Player' → logprob: -3.7797253131866455
    5. 'Turn' → logprob: -4.279725551605225
    6. 'Solver' → logprob: -4.529725551605225
    7. 'N' → logprob: -4.654725551605225
    8. 'Match' → logprob: -4.779725551605225
    9. ' Game' → logprob: -4.904725551605225
    10. ' Fab' → logprob: -5.029725551605225

Token 308: ':
' (ID: 734)
  Prédit: '(Enum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Enum' → logprob: -0.44610822200775146
    2. '(' → logprob: -1.1961082220077515
    3. ':' → logprob: -3.071108341217041
    4. ':
' → logprob: -4.696108341217041
    5. '(enum' → logprob: -6.321108341217041
    6. '(Int' → logprob: -9.321107864379883
    7. '(T' → logprob: -9.946107864379883
    8. '(str' → logprob: -10.946107864379883
    9. '(Abstract' → logprob: -11.446107864379883
    10. '(D' → logprob: -12.196107864379883

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15381701290607452
    2. 'class' → logprob: -2.5288169384002686
    3. ' pass' → logprob: -3.4038169384002686
    4. ' ABC' → logprob: -4.653817176818848
    5. 'from' → logprob: -5.153817176818848
    6. ' class' → logprob: -5.153817176818848
    7. 'pass' → logprob: -5.528817176818848
    8. ' def' → logprob: -6.778817176818848
    9. '    ' → logprob: -7.028817176818848
    10. 'def' → logprob: -7.403817176818848

Token 310: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.4208548069000244
    2. 'WIN' → logprob: -1.4208548069000244
    3. 'class' → logprob: -1.5458548069000244
    4. ' WIN' → logprob: -2.7958548069000244
    5. '   ' → logprob: -3.2958548069000244
    6. 'pass' → logprob: -3.4208548069000244
    7. ' def' → logprob: -3.4208548069000244
    8. 'from' → logprob: -3.6708548069000244
    9. ' pass' → logprob: -4.170854568481445
    10. 'win' → logprob: -4.295854568481445

Token 311: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0008265409851446748
    2. 'enum' → logprob: -7.375826358795166
    3. ' init' → logprob: -9.000826835632324
    4. ' __' → logprob: -9.625826835632324
    5. '__' → logprob: -12.125826835632324
    6. 'class' → logprob: -13.750826835632324
    7. ' enum' → logprob: -14.125826835632324
    8. 'enumer' → logprob: -14.375826835632324
    9. '_enum' → logprob: -14.625826835632324
    10. '   ' → logprob: -14.625826835632324

Token 312: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.002261590678244829
    2. 'new' → logprob: -6.627261638641357
    3. 'eq' → logprob: -7.002261638641357
    4. 'hash' → logprob: -10.7522611618042
    5. 'lt' → logprob: -13.7522611618042
    6. 'enum' → logprob: -14.2522611618042
    7. ' init' → logprob: -14.5022611618042
    8. 'def' → logprob: -14.8772611618042
    9. 'class' → logprob: -15.1272611618042
    10. 'str' → logprob: -15.6272611618042

Token 313: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05898099020123482
    2. '__(' → logprob: -3.058980941772461
    3. '(' → logprob: -4.808980941772461
    4. ' (' → logprob: -6.308980941772461
    5. 'self' → logprob: -8.183980941772461
    6. '__(
' → logprob: -10.433980941772461
    7. '(
' → logprob: -11.308980941772461
    8. 'def' → logprob: -11.433980941772461
    9. ',' → logprob: -11.933980941772461
    10. '__' → logprob: -12.058980941772461

Token 314: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5451681974809617e-05
    2. ' self' → logprob: -11.125015258789062
    3. '(self' → logprob: -15.000015258789062
    4. '   ' → logprob: -16.750015258789062
    5. ')' → logprob: -17.125015258789062
    6. '	self' → logprob: -17.125015258789062
    7. '__(' → logprob: -17.500015258789062
    8. '
' → logprob: -17.750015258789062
    9. ' ' → logprob: -18.500015258789062
    10. '0' → logprob: -19.000015258789062

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03205922245979309
    2. '(self' → logprob: -3.7820591926574707
    3. 'self' → logprob: -5.157059192657471
    4. ' (' → logprob: -6.157059192657471
    5. ' ,' → logprob: -7.407059192657471
    6. '   ' → logprob: -9.282059669494629
    7. ',self' → logprob: -9.407059669494629
    8. ' self' → logprob: -10.157059669494629
    9. '__(' → logprob: -10.907059669494629
    10. '(' → logprob: -11.157059669494629

Token 316: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.42051100730895996
    2. ' winner' → logprob: -2.17051100730896
    3. 'win' → logprob: -2.92051100730896
    4. 'is' → logprob: -3.17051100730896
    5. 'player' → logprob: -3.42051100730896
    6. 'result' → logprob: -3.42051100730896
    7. 'value' → logprob: -3.92051100730896
    8. 'state' → logprob: -4.420511245727539
    9. ' player' → logprob: -5.295511245727539
    10. 'won' → logprob: -5.420511245727539

Token 317: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018702808767557144
    2. ',' → logprob: -4.018702983856201
    3. '=None' → logprob: -8.018702507019043
    4. '):' → logprob: -9.143702507019043
    5. '_name' → logprob: -10.143702507019043
    6. '_player' → logprob: -10.768702507019043
    7. ')' → logprob: -10.893702507019043
    8. '=' → logprob: -10.893702507019043
    9. ' :' → logprob: -11.518702507019043
    10. ':,' → logprob: -13.268702507019043

Token 318: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.0011302133789286017
    2. 'str' → logprob: -7.376130104064941
    3. ' Player' → logprob: -7.626130104064941
    4. '	Player' → logprob: -11.626130104064941
    5. 'int' → logprob: -12.876130104064941
    6. ''' → logprob: -13.751130104064941
    7. ' str' → logprob: -14.126130104064941
    8. '   ' → logprob: -14.376130104064941
    9. '<Player' → logprob: -14.626130104064941
    10. '(Player' → logprob: -15.001130104064941

Token 319: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004825081559829414
    2. '):' → logprob: -8.250482559204102
    3. '):
' → logprob: -8.750482559204102
    4. ' ,' → logprob: -10.250482559204102
    5. ')' → logprob: -11.000482559204102
    6. '=' → logprob: -12.500482559204102
    7. '=None' → logprob: -12.750482559204102
    8. ',
' → logprob: -13.500482559204102
    9. ':' → logprob: -14.250482559204102
    10. '   ' → logprob: -14.375482559204102

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015893694944679737
    2. 'self' → logprob: -6.501589298248291
    3. ' self' → logprob: -9.37658977508545
    4. ',' → logprob: -13.75158977508545
    5. '   ' → logprob: -14.00158977508545
    6. '(self' → logprob: -16.001588821411133
    7. '	self' → logprob: -16.251588821411133
    8. '```' → logprob: -17.126588821411133
    9. '	' → logprob: -17.251588821411133
    10. 'def' → logprob: -17.501588821411133

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00023894020705483854
    2. '       ' → logprob: -8.500239372253418
    3. ' self' → logprob: -10.250239372253418
    4. '	self' → logprob: -17.1252384185791
    5. '   ' → logprob: -18.2502384185791
    6. '(self' → logprob: -18.3752384185791
    7. '[self' → logprob: -19.6252384185791
    8. 'super' → logprob: -20.7502384185791
    9. '=self' → logprob: -20.7502384185791
    10. '_self' → logprob: -21.6252384185791

Token 322: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.014327093958854675
    2. '.' → logprob: -4.264327049255371
    3. ' .' → logprob: -9.014327049255371
    4. 'winner' → logprob: -10.639327049255371
    5. '.player' → logprob: -11.514327049255371
    6. ' winner' → logprob: -13.014327049255371
    7. '.wicket' → logprob: -13.889327049255371
    8. '	w' → logprob: -14.639327049255371
    9. '=w' → logprob: -14.764327049255371
    10. '   ' → logprob: -14.889327049255371

Token 323: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -1.0802738870552275e-05
    2. 'winner' → logprob: -12.37501049041748
    3. 'inne' → logprob: -13.12501049041748
    4. 'inn' → logprob: -13.12501049041748
    5. 'i' → logprob: -13.75001049041748
    6. 'iner' → logprob: -14.25001049041748
    7. 'inning' → logprob: -14.75001049041748
    8. 'inners' → logprob: -16.250011444091797
    9. '_inner' → logprob: -17.125011444091797
    10. '   ' → logprob: -17.125011444091797

Token 324: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022545099258423
    2. ' =' → logprob: -1.9102253913879395
    3. ' ' → logprob: -14.535225868225098
    4. '   ' → logprob: -15.285225868225098
    5. ')' → logprob: -15.535225868225098
    6. '=w' → logprob: -16.28522491455078
    7. ',' → logprob: -16.53522491455078
    8. ':' → logprob: -16.78522491455078
    9. '.' → logprob: -16.91022491455078
    10. '<|end|>' → logprob: -16.91022491455078

Token 325: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.3132762610912323
    2. ' winner' → logprob: -1.3132762908935547
    3. 'w' → logprob: -11.188276290893555
    4. 'win' → logprob: -14.813276290893555
    5. 'Winner' → logprob: -16.688276290893555
    6. '	w' → logprob: -16.688276290893555
    7. '_w' → logprob: -17.063276290893555
    8. ' ' → logprob: -17.563276290893555
    9. 'writer' → logprob: -17.688276290893555
    10. 'winning' → logprob: -18.188276290893555

Token 326: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09849213063716888
    2. '
' → logprob: -2.47349214553833
    3. '<|end|>' → logprob: -4.84849214553833
    4. '   ' → logprob: -6.97349214553833
    5. '<|end|>' → logprob: -8.098491668701172
    6. '    
' → logprob: -8.723491668701172
    7. '

' → logprob: -8.973491668701172
    8. ' class' → logprob: -9.348491668701172
    9. '  
' → logprob: -11.723491668701172
    10. ' 
' → logprob: -11.973491668701172

Token 328: ' Strategy' (ID: 39435)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.22883877158164978
    2. 'Fab' → logprob: -1.9788388013839722
    3. 'Min' → logprob: -4.478838920593262
    4. 'Solver' → logprob: -4.603838920593262
    5. 'Evaluator' → logprob: -4.728838920593262
    6. ' Game' → logprob: -4.728838920593262
    7. ' Fab' → logprob: -5.228838920593262
    8. 'Strategy' → logprob: -5.603838920593262
    9. 'Match' → logprob: -5.978838920593262
    10. 'Outcome' → logprob: -6.228838920593262

Token 329: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4830901026725769
    2. '(' → logprob: -0.9830901026725769
    3. ':
' → logprob: -4.733089923858643
    4. '(Player' → logprob: -9.6080904006958
    5. '(Abstract' → logprob: -10.1080904006958
    6. '():' → logprob: -10.8580904006958
    7. '(object' → logprob: -11.1080904006958
    8. '):' → logprob: -11.7330904006958
    9. ':

' → logprob: -11.9830904006958
    10. ' :' → logprob: -12.8580904006958

Token 330: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.00019495772721711546
    2. 'Player' → logprob: -9.125194549560547
    3. '):
' → logprob: -9.500194549560547
    4. '):' → logprob: -12.375194549560547
    5. ' ABC' → logprob: -12.625194549560547
    6. ')' → logprob: -13.625194549560547
    7. '(' → logprob: -14.125194549560547
    8. 'abc' → logprob: -14.750194549560547
    9. 'AB' → logprob: -15.000194549560547
    10. '```' → logprob: -15.375194549560547

Token 331: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020588021725416183
    2. '):
' → logprob: -3.895587921142578
    3. ')' → logprob: -10.645587921142578
    4. ':' → logprob: -11.520587921142578
    5. '):
' → logprob: -12.020587921142578
    6. '):

' → logprob: -12.395587921142578
    7. ' ):' → logprob: -13.645587921142578
    8. ',' → logprob: -14.645587921142578
    9. '   ' → logprob: -15.645587921142578
    10. 'def' → logprob: -16.520587921142578

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009107773192226887
    2. '
' → logprob: -5.00910758972168
    3. ' def' → logprob: -7.00910758972168
    4. '<|end|>' → logprob: -7.63410758972168
    5. 'def' → logprob: -8.00910758972168
    6. '    
' → logprob: -8.38410758972168
    7. ')' → logprob: -9.25910758972168
    8. '[' → logprob: -9.75910758972168
    9. '<|end|>' → logprob: -9.75910758972168
    10. '    ' → logprob: -9.88410758972168

Token 333: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.19044385850429535
    2. '   ' → logprob: -1.8154438734054565
    3. ' @' → logprob: -4.565443992614746
    4. 'def' → logprob: -8.440443992614746
    5. ' def' → logprob: -11.690443992614746
    6. 'abstract' → logprob: -12.815443992614746
    7. '
' → logprob: -13.065443992614746
    8. '@property' → logprob: -13.315443992614746
    9. '    
' → logprob: -13.565443992614746
    10. '@param' → logprob: -13.690443992614746

Token 334: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -2.951771421066951e-05
    2. 'property' → logprob: -10.875029563903809
    3. ' abstract' → logprob: -12.250029563903809
    4. 'staticmethod' → logprob: -12.500029563903809
    5. 'classmethod' → logprob: -14.125029563903809
    6. 'ab' → logprob: -14.250029563903809
    7. 'abc' → logprob: -15.000029563903809
    8. 'abs' → logprob: -16.000028610229492
    9. 'method' → logprob: -17.000028610229492
    10. '.abstract' → logprob: -17.500028610229492

Token 335: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0029925592243671417
    2. '_method' → logprob: -5.877992630004883
    3. 'def' → logprob: -8.877992630004883
    4. 'token' → logprob: -10.877992630004883
    5. '_token' → logprob: -11.002992630004883
    6. 'classmethod' → logprob: -11.752992630004883
    7. ' method' → logprob: -13.877992630004883
    8. 'staticmethod' → logprob: -13.877992630004883
    9. '	method' → logprob: -14.627992630004883
    10. 'ethod' → logprob: -14.752992630004883

Token 336: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07665877044200897
    2. '
' → logprob: -2.8266587257385254
    3. ' def' → logprob: -4.576658725738525
    4. 'method' → logprob: -5.951658725738525
    5. '   ' → logprob: -7.826658725738525
    6. '    
' → logprob: -7.951658725738525
    7. '	def' → logprob: -8.326659202575684
    8. '_token' → logprob: -8.701659202575684
    9. 'classmethod' → logprob: -9.451659202575684
    10. '  
' → logprob: -9.826659202575684

Token 337: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02905840240418911
    2. 'method' → logprob: -3.7790584564208984
    3. '
' → logprob: -5.279058456420898
    4. '   ' → logprob: -8.029058456420898
    5. 'token' → logprob: -8.779058456420898
    6. 'classmethod' → logprob: -9.404058456420898
    7. ' def' → logprob: -10.029058456420898
    8. '_token' → logprob: -10.779058456420898
    9. '    
' → logprob: -10.904058456420898
    10. 'staticmethod' → logprob: -11.279058456420898

Token 338: ' def' (ID: 1056)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.06004396826028824
    2. 'def' (adapté à ' def') → logprob: -3.685044050216675
    3. 'staticmethod' → logprob: -3.685044050216675
    4. 'classmethod' → logprob: -5.435043811798096
    5. 'property' → logprob: -5.685043811798096
    6. 'abstract' → logprob: -8.435044288635254
    7. 'token' → logprob: -10.310044288635254
    8. '
' → logprob: -10.935044288635254
    9. 'code' → logprob: -11.060044288635254
    10. 'call' → logprob: -11.310044288635254

Token 339: ' decide' (ID: 13001)
  Prédit: ' choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choose' → logprob: -0.6401911973953247
    2. 'choose' → logprob: -1.8901911973953247
    3. ' decide' → logprob: -2.390191078186035
    4. ' play' → logprob: -3.140191078186035
    5. ' select' → logprob: -3.265191078186035
    6. ' next' → logprob: -3.390191078186035
    7. 'def' → logprob: -3.390191078186035
    8. 'dec' → logprob: -4.140191078186035
    9. ' best' → logprob: -4.265191078186035
    10. ' def' → logprob: -4.265191078186035

Token 340: '_w' (ID: 3567)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00039063513395376503
    2. '(' → logprob: -8.875391006469727
    3. 'self' → logprob: -9.250391006469727
    4. '_state' → logprob: -10.000391006469727
    5. '_next' → logprob: -10.625391006469727
    6. '<|end|>' → logprob: -10.625391006469727
    7. '<|end|>' → logprob: -11.125391006469727
    8. '_move' → logprob: -11.500391006469727
    9. ' (' → logprob: -11.625391006469727
    10. '(state' → logprob: -12.000391006469727

Token 341: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.004017614759504795
    2. 'in' → logprob: -5.6290178298950195
    3. 'inning' → logprob: -8.12901782989502
    4. 'i' → logprob: -10.37901782989502
    5. 'inn' → logprob: -10.37901782989502
    6. 'inline' → logprob: -11.62901782989502
    7. 'iner' → logprob: -11.75401782989502
    8. '_inner' → logprob: -12.00401782989502
    9. '(inner' → logprob: -12.37901782989502
    10. '   ' → logprob: -12.50401782989502

Token 342: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023011912708170712
    2. '(' → logprob: -8.625229835510254
    3. 'self' → logprob: -10.125229835510254
    4. ' (' → logprob: -11.625229835510254
    5. '   ' → logprob: -15.000229835510254
    6. ')(' → logprob: -15.250229835510254
    7. ' self' → logprob: -15.500229835510254
    8. '(
' → logprob: -15.625229835510254
    9. ')' → logprob: -16.62523078918457
    10. '
' → logprob: -17.12523078918457

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016080588102340698
    2. 'self' → logprob: -6.501607894897461
    3. ' ,' → logprob: -10.001607894897461
    4. ')' → logprob: -10.376607894897461
    5. '(self' → logprob: -11.501607894897461
    6. ',self' → logprob: -12.126607894897461
    7. '       ' → logprob: -12.126607894897461
    8. ',state' → logprob: -12.501607894897461
    9. ' self' → logprob: -13.001607894897461
    10. '   ' → logprob: -14.376607894897461

Token 344: ' state' (ID: 2608)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0077736712992191315
    2. ' self' → logprob: -5.1327738761901855
    3. 'state' → logprob: -6.3827738761901855
    4. 'game' → logprob: -9.382773399353027
    5. ' state' → logprob: -10.382773399353027
    6. '       ' → logprob: -11.007773399353027
    7. '   ' → logprob: -11.382773399353027
    8. ' game' → logprob: -11.882773399353027
    9. '(self' → logprob: -13.882773399353027
    10. ' ' → logprob: -14.632773399353027

Token 345: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.47495681833243e-05
    2. ')' → logprob: -11.250024795532227
    3. ' :' → logprob: -11.750024795532227
    4. ',' → logprob: -13.125024795532227
    5. '):' → logprob: -13.375024795532227
    6. 's' → logprob: -15.875024795532227
    7. '   ' → logprob: -16.750024795532227
    8. '_state' → logprob: -17.375024795532227
    9. '')' → logprob: -17.875024795532227
    10. '):
' → logprob: -17.875024795532227

Token 346: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.5765454769134521
    2. ' Game' → logprob: -0.8265454769134521
    3. ')' → logprob: -7.576545715332031
    4. '	Game' → logprob: -10.326545715332031
    5. '(Game' → logprob: -11.076545715332031
    6. '_Game' → logprob: -11.201545715332031
    7. ''' → logprob: -11.701545715332031
    8. '.Game' → logprob: -11.951545715332031
    9. '<Game' → logprob: -12.076545715332031
    10. ' '' → logprob: -12.326545715332031

Token 347: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -5.9153885558771435e-06
    2. ')' → logprob: -12.250005722045898
    3. ' State' → logprob: -15.000005722045898
    4. '_State' → logprob: -15.000005722045898
    5. '	State' → logprob: -16.1250057220459
    6. '_STATE' → logprob: -16.6250057220459
    7. '_state' → logprob: -17.1250057220459
    8. 'States' → logprob: -17.1250057220459
    9. '<State' → logprob: -17.8750057220459
    10. '   ' → logprob: -18.2500057220459

Token 348: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3486098349094391
    2. ',' → logprob: -1.2236098051071167
    3. ' )' → logprob: -9.598609924316406
    4. '   ' → logprob: -9.723609924316406
    5. ' ,' → logprob: -11.223609924316406
    6. ',)' → logprob: -11.598609924316406
    7. ')->' → logprob: -12.348609924316406
    8. '):' → logprob: -12.598609924316406
    9. '')' → logprob: -13.348609924316406
    10. ',state' → logprob: -13.848609924316406

Token 349: ' is' (ID: 382)
  Prédit: ' player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.31838855147361755
    2. 'player' → logprob: -2.0683884620666504
    3. ' current' → logprob: -2.3183884620666504
    4. 'current' → logprob: -3.0683884620666504
    5. ' players' → logprob: -7.44338846206665
    6. 'next' → logprob: -8.443388938903809
    7. ' next' → logprob: -8.568388938903809
    8. 'players' → logprob: -9.693388938903809
    9. '	player' → logprob: -10.443388938903809
    10. ' ' → logprob: -10.568388938903809

Token 350: '_first' (ID: 29347)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.3970826268196106
    2. '_first' → logprob: -1.6470825672149658
    3. '_current' → logprob: -2.397082567214966
    4. '_player' → logprob: -3.397082567214966
    5. '_next' → logprob: -5.522082805633545
    6. 'Fab' → logprob: -6.647082805633545
    7. '_max' → logprob: -6.772082805633545
    8. '_' → logprob: -7.147082805633545
    9. '_turn' → logprob: -7.647082805633545
    10. '_start' → logprob: -7.772082805633545

Token 351: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.02446443773806095
    2. '_turn' → logprob: -4.0244646072387695
    3. '_move' → logprob: -5.1494646072387695
    4. ')' → logprob: -8.14946460723877
    5. '_' → logprob: -9.52446460723877
    6. '_players' → logprob: -10.52446460723877
    7. '=True' → logprob: -10.89946460723877
    8. ')_' → logprob: -11.02446460723877
    9. 'player' → logprob: -11.52446460723877
    10. '_m' → logprob: -11.64946460723877

Token 352: '_turn' (ID: 89223)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2574935555458069
    2. '_turn' → logprob: -1.507493495941162
    3. 'turn' → logprob: -6.007493495941162
    4. ''s' → logprob: -7.007493495941162
    5. ')' → logprob: -7.132493495941162
    6. 's' → logprob: -7.257493495941162
    7. '_move' → logprob: -7.757493495941162
    8. '):
' → logprob: -9.50749397277832
    9. '):' → logprob: -10.00749397277832
    10. '   ' → logprob: -11.13249397277832

Token 353: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38698437809944153
    2. ')' → logprob: -1.1369843482971191
    3. ' )' → logprob: -10.011984825134277
    4. '):' → logprob: -10.011984825134277
    5. '   ' → logprob: -11.511984825134277
    6. ' ' → logprob: -12.261984825134277
    7. '=True' → logprob: -13.136984825134277
    8. ' :' → logprob: -13.261984825134277
    9. ',' → logprob: -13.261984825134277
    10. '=' → logprob: -14.136984825134277

Token 354: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.04896112158894539
    2. ' bool' → logprob: -3.0489611625671387
    3. ')' → logprob: -7.923961162567139
    4. 'True' → logprob: -12.04896068572998
    5. ' ' → logprob: -12.92396068572998
    6. '	bool' → logprob: -13.67396068572998
    7. '   ' → logprob: -14.04896068572998
    8. ' True' → logprob: -15.29896068572998
    9. '<bool' → logprob: -15.54896068572998
    10. ' )' → logprob: -15.67396068572998

Token 355: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. '   ' → logprob: -13.250003814697266
    3. ' )' → logprob: -13.500003814697266
    4. '):' → logprob: -15.250003814697266
    5. ':' → logprob: -16.000003814697266
    6. ')->' → logprob: -16.375003814697266
    7. '`)' → logprob: -17.625003814697266
    8. '')' → logprob: -17.750003814697266
    9. ' ' → logprob: -18.125003814697266
    10. ',' → logprob: -18.500003814697266

Token 356: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.3023596704006195
    2. '->' → logprob: -1.552359700202942
    3. ')' → logprob: -3.0523595809936523
    4. ')->' → logprob: -6.427359580993652
    5. '   ' → logprob: -8.677359580993652
    6. ':' → logprob: -9.802359580993652
    7. ' ' → logprob: -9.802359580993652
    8. ' )->' → logprob: -10.927359580993652
    9. ' )' → logprob: -12.177359580993652
    10. '  ' → logprob: -12.427359580993652

Token 357: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.03332775458693504
    2. 'Outcome' → logprob: -3.65832781791687
    3. ''' → logprob: -5.533327579498291
    4. 'Tuple' → logprob: -6.408327579498291
    5. ' Player' → logprob: -6.783327579498291
    6. '"' → logprob: -9.53332805633545
    7. 'bool' → logprob: -9.78332805633545
    8. 'Dict' → logprob: -10.28332805633545
    9. 'str' → logprob: -10.53332805633545
    10. 'Winner' → logprob: -11.28332805633545

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49153757095336914
    2. '<|end|>' → logprob: -0.9915375709533691
    3. '   ' → logprob: -4.741537570953369
    4. '<|end|>' → logprob: -5.991537570953369
    5. '):' → logprob: -6.116537570953369
    6. '():' → logprob: -6.866537570953369
    7. ':
' → logprob: -7.366537570953369
    8. ')' → logprob: -7.491537570953369
    9. '       ' → logprob: -8.116537094116211
    10. '.' → logprob: -8.366537094116211

Token 359: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.41350114345550537
    2. ' pass' → logprob: -1.6635011434555054
    3. '       ' → logprob: -1.9135011434555054
    4. '<|end|>' → logprob: -6.913501262664795
    5. '   ' → logprob: -8.663500785827637
    6. '	pass' → logprob: -8.788500785827637
    7. '...' → logprob: -8.913500785827637
    8. '    ' → logprob: -9.413500785827637
    9. '        ' → logprob: -10.538500785827637
    10. ' ' → logprob: -10.913500785827637

Token 361: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4649934470653534
    2. '
' → logprob: -1.0899934768676758
    3. '   ' → logprob: -3.589993476867676
    4. '<|end|>' → logprob: -5.214993476867676
    5. ' class' → logprob: -6.339993476867676
    6. ' 
' → logprob: -7.964993476867676
    7. '    
' → logprob: -8.714993476867676
    8. '

' → logprob: -8.964993476867676
    9. '<|end|>' → logprob: -10.089993476867676
    10. 'def' → logprob: -10.214993476867676

Token 362: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.981667537620524e-06
    2. ' class' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -15.125001907348633
    4. 'import' → logprob: -15.875001907348633
    5. 'from' → logprob: -17.125001907348633
    6. '<class' → logprob: -17.250001907348633
    7. '```' → logprob: -17.500001907348633
    8. '#' → logprob: -17.875001907348633
    9. '<|end|>' → logprob: -18.750001907348633
    10. '"class' → logprob: -18.750001907348633

Token 363: ' Min' (ID: 4438)
  Prédit: ' Min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Min' → logprob: -0.6565984487533569
    2. 'Min' → logprob: -0.9065984487533569
    3. 'Memo' → logprob: -4.4065985679626465
    4. 'Fab' → logprob: -4.6565985679626465
    5. 'Optimal' → logprob: -4.7815985679626465
    6. 'Simple' → logprob: -4.9065985679626465
    7. ' Mini' → logprob: -4.9065985679626465
    8. 'Perfect' → logprob: -5.2815985679626465
    9. 'Mini' → logprob: -5.4065985679626465
    10. ' Fab' → logprob: -5.5315985679626465

Token 364: 'imax' (ID: 125477)
  Prédit: 'imax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imax' → logprob: -0.0030272675212472677
    2. 'Max' → logprob: -6.003027439117432
    3. 'max' → logprob: -7.503027439117432
    4. '_max' → logprob: -18.628026962280273
    5. 'amax' → logprob: -19.003026962280273
    6. 'im' → logprob: -19.878026962280273
    7. 'i' → logprob: -20.253026962280273
    8. 'MAX' → logprob: -20.503026962280273
    9. 'imize' → logprob: -21.128026962280273
    10. ' max' → logprob: -21.378026962280273

Token 365: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.006721655838191509
    2. '(' → logprob: -5.006721496582031
    3. '(strategy' → logprob: -13.506721496582031
    4. 'Str' → logprob: -14.006721496582031
    5. 'Algorithm' → logprob: -14.381721496582031
    6. 'Strateg' → logprob: -14.756721496582031
    7. 'Based' → logprob: -14.881721496582031
    8. 'Depth' → logprob: -14.881721496582031
    9. '_strategy' → logprob: -14.881721496582031
    10. 'Search' → logprob: -15.006721496582031

Token 366: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.57802414894104
    2. '(' → logprob: -0.82802414894104
    3. ':
' → logprob: -6.453023910522461
    4. ' :' → logprob: -8.078023910522461
    5. '(S' → logprob: -8.828023910522461
    6. '   ' → logprob: -11.203023910522461
    7. '(strategy' → logprob: -11.828023910522461
    8. '):' → logprob: -11.953023910522461
    9. '(Abstract' → logprob: -11.953023910522461
    10. '():' → logprob: -12.453023910522461

Token 367: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -7.517272024415433e-05
    2. '):' → logprob: -10.250075340270996
    3. 'ABC' → logprob: -10.750075340270996
    4. ' Strategy' → logprob: -11.750075340270996
    5. ')' → logprob: -12.000075340270996
    6. '):
' → logprob: -12.750075340270996
    7. 'Strateg' → logprob: -14.625075340270996
    8. 'Str' → logprob: -14.875075340270996
    9. '   ' → logprob: -15.250075340270996
    10. '_strategy' → logprob: -16.25007438659668

Token 368: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38689881563186646
    2. '):
' → logprob: -1.1368987560272217
    3. '):
' → logprob: -11.2618989944458
    4. ')' → logprob: -11.6368989944458
    5. '   ' → logprob: -12.5118989944458
    6. ':' → logprob: -13.7618989944458
    7. '):

' → logprob: -13.8868989944458
    8. ' ):' → logprob: -15.5118989944458
    9. ':
' → logprob: -16.261898040771484
    10. ' ):
' → logprob: -16.511898040771484

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.5358694731257856e-05
    2. '    
' → logprob: -11.250035285949707
    3. '
' → logprob: -11.750035285949707
    4. ' def' → logprob: -11.750035285949707
    5. 'def' → logprob: -12.625035285949707
    6. '	def' → logprob: -13.500035285949707
    7. '    ' → logprob: -14.250035285949707
    8. '   ' → logprob: -14.375035285949707
    9. ' indentation' → logprob: -15.875035285949707
    10. 'indent' → logprob: -16.750036239624023

Token 370: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.47545742988586426
    2. ' def' → logprob: -0.9754574298858643
    3. '   ' → logprob: -6.600457191467285
    4. 'class' → logprob: -12.475457191467285
    5. ' _' → logprob: -12.600457191467285
    6. '_cache' → logprob: -12.725457191467285
    7. 'cache' → logprob: -13.100457191467285
    8. ' ' → logprob: -13.350457191467285
    9. '_def' → logprob: -13.350457191467285
    10. 'import' → logprob: -13.975457191467285

Token 371: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12344339489936829
    2. 'def' → logprob: -2.248443365097046
    3. '   ' → logprob: -4.873443603515625
    4. ' decide' → logprob: -7.498443603515625
    5. 'dec' → logprob: -7.623443603515625
    6. 'init' → logprob: -7.748443603515625
    7. '  ' → logprob: -7.873443603515625
    8. ' ' → logprob: -8.373443603515625
    9. ' define' → logprob: -8.873443603515625
    10. ' init' → logprob: -8.998443603515625

Token 372: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.003532367292791605
    2. 'def' → logprob: -5.753532409667969
    3. 'name' → logprob: -8.628532409667969
    4. '   ' → logprob: -9.628532409667969
    5. 'call' → logprob: -9.878532409667969
    6. '(init' → logprob: -11.128532409667969
    7. 'nit' → logprob: -12.003532409667969
    8. 'class' → logprob: -12.253532409667969
    9. 'new' → logprob: -12.378532409667969
    10. 'hash' → logprob: -12.628532409667969

Token 373: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009909904561936855
    2. '__(' → logprob: -4.7599101066589355
    3. '(' → logprob: -6.8849101066589355
    4. '   ' → logprob: -9.259909629821777
    5. '()' → logprob: -9.759909629821777
    6. 'self' → logprob: -10.009909629821777
    7. ' (' → logprob: -10.259909629821777
    8. ')(' → logprob: -11.509909629821777
    9. '<>(' → logprob: -12.384909629821777
    10. '       ' → logprob: -12.509909629821777

Token 374: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.180258191714529e-06
    2. ' self' → logprob: -11.875008583068848
    3. ')' → logprob: -14.000008583068848
    4. '   ' → logprob: -16.25000762939453
    5. '
' → logprob: -16.50000762939453
    6. '(self' → logprob: -17.00000762939453
    7. '       ' → logprob: -17.37500762939453
    8. '):
' → logprob: -17.50000762939453
    9. '0' → logprob: -17.87500762939453
    10. ')(' → logprob: -18.75000762939453

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18641409277915955
    2. '):' → logprob: -2.0614140033721924
    3. 'self' → logprob: -3.6864140033721924
    4. '):
' → logprob: -4.3114142417907715
    5. ')' → logprob: -5.9364142417907715
    6. '   ' → logprob: -7.5614142417907715
    7. ' ):' → logprob: -7.8114142417907715
    8. ' ,' → logprob: -8.186413764953613
    9. '(self' → logprob: -8.936413764953613
    10. ' self' → logprob: -9.061413764953613

Token 376: ' first' (ID: 1577)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.09929617494344711
    2. 'memo' → logprob: -2.7242960929870605
    3. ')' → logprob: -4.3492960929870605
    4. 'fab' → logprob: -5.0992960929870605
    5. 'Fab' → logprob: -6.4742960929870605
    6. '):
' → logprob: -6.5992960929870605
    7. ' cache' → logprob: -6.7242960929870605
    8. 'player' → logprob: -6.8492960929870605
    9. 'max' → logprob: -6.8492960929870605
    10. 'out' → logprob: -7.0992960929870605

Token 377: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.0008375041070394218
    2. ':' → logprob: -7.125837326049805
    3. '_w' → logprob: -11.875837326049805
    4. 'Player' → logprob: -12.250837326049805
    5. '_move' → logprob: -12.625837326049805
    6. ')' → logprob: -12.750837326049805
    7. 'player' → logprob: -12.875837326049805
    8. '_:' → logprob: -13.125837326049805
    9. ',' → logprob: -13.250837326049805
    10. '):' → logprob: -13.250837326049805

Token 378: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004115323536098003
    2. ',' → logprob: -5.504115104675293
    3. ' :' → logprob: -10.879115104675293
    4. '):' → logprob: -11.379115104675293
    5. ')' → logprob: -12.254115104675293
    6. ' ,' → logprob: -14.004115104675293
    7. '   ' → logprob: -15.254115104675293
    8. '=' → logprob: -15.254115104675293
    9. '_:' → logprob: -16.12911605834961
    10. '=None' → logprob: -16.50411605834961

Token 379: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.03859470412135124
    2. ' Player' → logprob: -3.2885947227478027
    3. 'Fab' → logprob: -7.913594722747803
    4. '	Player' → logprob: -8.663594245910645
    5. ' Fab' → logprob: -12.038594245910645
    6. ' ' → logprob: -13.038594245910645
    7. '<Player' → logprob: -13.163594245910645
    8. ')' → logprob: -13.788594245910645
    9. '   ' → logprob: -13.788594245910645
    10. '(Player' → logprob: -13.913594245910645

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.4192871175473556e-05
    2. ' ,' → logprob: -10.125054359436035
    3. '):' → logprob: -11.625054359436035
    4. '):
' → logprob: -13.000054359436035
    5. '   ' → logprob: -13.125054359436035
    6. ',
' → logprob: -14.750054359436035
    7. ')' → logprob: -15.250054359436035
    8. '       ' → logprob: -16.50005340576172
    9. ' ' → logprob: -16.75005340576172
    10. ':' → logprob: -17.37505340576172

Token 381: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.011049585416913033
    2. ' second' → logprob: -4.511049747467041
    3. '   ' → logprob: -13.636049270629883
    4. '	second' → logprob: -14.761049270629883
    5. ' ' → logprob: -16.636049270629883
    6. '  ' → logprob: -18.136049270629883
    7. 'other' → logprob: -18.136049270629883
    8. '
' → logprob: -18.261049270629883
    9. '    ' → logprob: -18.636049270629883
    10. 'Second' → logprob: -18.761049270629883

Token 382: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.0004050514253322035
    2. 'Player' → logprob: -8.250405311584473
    3. ':' → logprob: -9.625405311584473
    4. 'player' → logprob: -10.750405311584473
    5. '_Player' → logprob: -11.500405311584473
    6. ')' → logprob: -12.000405311584473
    7. '_PLAYER' → logprob: -12.000405311584473
    8. '<Player' → logprob: -12.000405311584473
    9. '=' → logprob: -12.500405311584473
    10. ')_' → logprob: -12.625405311584473

Token 383: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03485363721847534
    2. ':' → logprob: -3.90985369682312
    3. ',' → logprob: -4.784853458404541
    4. '):
' → logprob: -5.284853458404541
    5. ' ):' → logprob: -7.659853458404541
    6. ')' → logprob: -8.2848539352417
    7. '):
' → logprob: -11.0348539352417
    8. ' :' → logprob: -11.2848539352417
    9. '):

' → logprob: -12.1598539352417
    10. ' ,' → logprob: -12.1598539352417

Token 384: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.062037933617830276
    2. ' Player' → logprob: -2.812037944793701
    3. '	Player' → logprob: -9.812037467956543
    4. '   ' → logprob: -11.562037467956543
    5. ' ' → logprob: -12.687037467956543
    6. '<Player' → logprob: -14.062037467956543
    7. '_Player' → logprob: -14.312037467956543
    8. ')' → logprob: -14.937037467956543
    9. 'player' → logprob: -15.187037467956543
    10. ' player' → logprob: -15.437037467956543

Token 385: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2973385751247406
    2. '):
' → logprob: -1.672338604927063
    3. ',' → logprob: -2.6723384857177734
    4. ')' → logprob: -8.922338485717773
    5. ':' → logprob: -9.297338485717773
    6. '):
' → logprob: -9.922338485717773
    7. '   ' → logprob: -10.547338485717773
    8. ' ):' → logprob: -12.672338485717773
    9. ' ):
' → logprob: -13.172338485717773
    10. ',
' → logprob: -14.047338485717773

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.65707261255011e-06
    2. 'self' → logprob: -12.250008583068848
    3. ' self' → logprob: -13.500008583068848
    4. ',' → logprob: -13.875008583068848
    5. '<|end|>' → logprob: -14.625008583068848
    6. '   ' → logprob: -14.875008583068848
    7. '	' → logprob: -15.500008583068848
    8. '      ' → logprob: -15.625008583068848
    9. '	self' → logprob: -16.500009536743164
    10. '```' → logprob: -16.875009536743164

Token 387: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04907916858792305
    2. '       ' → logprob: -3.049079179763794
    3. ' self' → logprob: -7.799078941345215
    4. '   ' → logprob: -9.424078941345215
    5. '	self' → logprob: -14.674078941345215
    6. ' ' → logprob: -15.799078941345215
    7. 'super' → logprob: -17.04907989501953
    8. '
' → logprob: -17.17407989501953
    9. '           ' → logprob: -17.17407989501953
    10. '     ' → logprob: -17.29907989501953

Token 388: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -3.054500666621607e-06
    2. 'first' → logprob: -13.62500286102295
    3. '.' → logprob: -13.75000286102295
    4. ' .' → logprob: -15.25000286102295
    5. '._' → logprob: -15.50000286102295
    6. '.First' → logprob: -16.875003814697266
    7. '.f' → logprob: -17.125003814697266
    8. '   ' → logprob: -17.125003814697266
    9. '.firstname' → logprob: -17.125003814697266
    10. '.next' → logprob: -17.250003814697266

Token 389: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -7.226628895296017e-06
    2. 'player' → logprob: -13.375007629394531
    3. '_user' → logprob: -13.500007629394531
    4. '_players' → logprob: -13.875007629394531
    5. '_first' → logprob: -14.000007629394531
    6. '_PLAYER' → logprob: -14.750007629394531
    7. '._' → logprob: -14.875007629394531
    8. '_' → logprob: -15.000007629394531
    9. 'Player' → logprob: -15.250007629394531
    10. '   ' → logprob: -15.500007629394531

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695415318012238
    2. '=' → logprob: -2.1269540786743164
    3. ',' → logprob: -11.126954078674316
    4. ' ' → logprob: -11.876954078674316
    5. '   ' → logprob: -13.001954078674316
    6. '    ' → logprob: -13.626954078674316
    7. ')' → logprob: -15.126954078674316
    8. '  ' → logprob: -15.501954078674316
    9. ':' → logprob: -16.626955032348633
    10. '=self' → logprob: -16.751955032348633

Token 391: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.07889155298471451
    2. ' first' → logprob: -2.5788915157318115
    3. 'second' → logprob: -13.57889175415039
    4. '	first' → logprob: -14.70389175415039
    5. '(first' → logprob: -16.95389175415039
    6. ' second' → logprob: -16.95389175415039
    7. 'f' → logprob: -17.20389175415039
    8. ' ' → logprob: -17.45389175415039
    9. '[first' → logprob: -17.57889175415039
    10. '.first' → logprob: -18.95389175415039

Token 392: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -2.8444881536415778e-05
    2. 'player' → logprob: -10.625028610229492
    3. 'Player' → logprob: -13.000028610229492
    4. '
' → logprob: -14.125028610229492
    5. '_PLAYER' → logprob: -15.125028610229492
    6. ' player' → logprob: -15.250028610229492
    7. '   ' → logprob: -16.125028610229492
    8. '_' → logprob: -16.125028610229492
    9. ',' → logprob: -16.375028610229492
    10. '    
' → logprob: -17.125028610229492

Token 393: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.150362166110426e-05
    2. 'self' → logprob: -9.375091552734375
    3. ' self' → logprob: -12.250091552734375
    4. ',' → logprob: -14.250091552734375
    5. '
' → logprob: -14.500091552734375
    6. '   ' → logprob: -14.875091552734375
    7. '	' → logprob: -16.625091552734375
    8. '      ' → logprob: -16.875091552734375
    9. '<|end|>' → logprob: -16.875091552734375
    10. '        
' → logprob: -17.250091552734375

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021188464597798884
    2. 'self' → logprob: -8.750211715698242
    3. ' self' → logprob: -9.875211715698242
    4. '   ' → logprob: -14.125211715698242
    5. ',' → logprob: -15.375211715698242
    6. '      ' → logprob: -15.500211715698242
    7. '
' → logprob: -15.500211715698242
    8. '	self' → logprob: -15.875211715698242
    9. '	' → logprob: -16.250211715698242
    10. '        
' → logprob: -16.375211715698242

Token 395: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00023929782037157565
    2. '       ' → logprob: -8.500239372253418
    3. ' self' → logprob: -10.250239372253418
    4. '   ' → logprob: -15.250239372253418
    5. '           ' → logprob: -16.3752384185791
    6. '
' → logprob: -18.6252384185791
    7. '        ' → logprob: -19.5002384185791
    8. '	self' → logprob: -19.6252384185791
    9. '        
' → logprob: -20.1252384185791
    10. 'second' → logprob: -20.1252384185791

Token 396: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -0.0631839781999588
    2. '.' → logprob: -2.8131840229034424
    3. 'second' → logprob: -6.813183784484863
    4. ' .' → logprob: -9.688183784484863
    5. '.first' → logprob: -10.563183784484863
    6. ' second' → logprob: -11.563183784484863
    7. '	second' → logprob: -12.313183784484863
    8. '   ' → logprob: -13.063183784484863
    9. '.
' → logprob: -13.188183784484863
    10. ',' → logprob: -13.438183784484863

Token 397: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -5.796184723294573e-06
    2. '._' → logprob: -13.250005722045898
    3. 'Player' → logprob: -13.250005722045898
    4. '_' → logprob: -14.625005722045898
    5. '_PLAYER' → logprob: -14.750005722045898
    6. '_Player' → logprob: -14.875005722045898
    7. 'player' → logprob: -15.125005722045898
    8. '.' → logprob: -15.125005722045898
    9. '_players' → logprob: -16.0000057220459
    10. ' _' → logprob: -16.5000057220459

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20167012512683868
    2. ' =' → logprob: -1.7016701698303223
    3. '<|end|>' → logprob: -8.951669692993164
    4. ' ' → logprob: -9.826669692993164
    5. '_' → logprob: -10.701669692993164
    6. ')' → logprob: -11.326669692993164
    7. '=
' → logprob: -11.701669692993164
    8. ',' → logprob: -12.201669692993164
    9. ' =
' → logprob: -12.201669692993164
    10. '   ' → logprob: -12.326669692993164

Token 399: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.01815006136894226
    2. ' second' → logprob: -4.0181498527526855
    3. '	second' → logprob: -15.643150329589844
    4. '(second' → logprob: -17.643150329589844
    5. ' ' → logprob: -18.768150329589844
    6. '   ' → logprob: -19.393150329589844
    7. 'first' → logprob: -19.768150329589844
    8. '.second' → logprob: -20.018150329589844
    9. 'Second' → logprob: -20.393150329589844
    10. '_second' → logprob: -21.143150329589844

Token 400: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.0005442153196781874
    2. 'player' → logprob: -7.62554407119751
    3. 'Player' → logprob: -9.875544548034668
    4. '_PLAYER' → logprob: -13.750544548034668
    5. '_' → logprob: -13.875544548034668
    6. ')' → logprob: -14.000544548034668
    7. '-player' → logprob: -14.250544548034668
    8. ',' → logprob: -15.500544548034668
    9. '   ' → logprob: -15.750544548034668
    10. ' player' → logprob: -15.750544548034668

Token 401: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6514284014701843
    2. '   ' → logprob: -0.7764284014701843
    3. '    
' → logprob: -4.27642822265625
    4. '       ' → logprob: -5.40142822265625
    5. '        
' → logprob: -8.52642822265625
    6. '    ' → logprob: -11.27642822265625
    7. '   
' → logprob: -11.77642822265625
    8. ' 
' → logprob: -12.02642822265625
    9. 'def' → logprob: -12.02642822265625
    10. '  
' → logprob: -12.40142822265625

Token 402: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14476245641708374
    2. '
' → logprob: -2.0197625160217285
    3. '    
' → logprob: -6.2697625160217285
    4. 'def' → logprob: -9.64476203918457
    5. '       ' → logprob: -9.89476203918457
    6. '        
' → logprob: -10.26976203918457
    7. '```' → logprob: -11.51976203918457
    8. '<|end|>' → logprob: -11.51976203918457
    9. '
' → logprob: -12.39476203918457
    10. '  
' → logprob: -12.51976203918457

Token 403: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.559097945690155
    2. '       ' → logprob: -1.5590980052947998
    3. 'def' → logprob: -1.5590980052947998
    4. ' self' → logprob: -5.184097766876221
    5. '   ' → logprob: -6.559097766876221
    6. ' def' → logprob: -7.559097766876221
    7. 'from' → logprob: -10.059098243713379
    8. 'import' → logprob: -11.684098243713379
    9. ' ' → logprob: -11.934098243713379
    10. '           ' → logprob: -12.059098243713379

Token 404: '.memo' (ID: 161018)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.7340601682662964
    2. '_cache' → logprob: -1.3590601682662964
    3. ' _' → logprob: -2.609060287475586
    4. ' .' → logprob: -2.734060287475586
    5. '.cache' → logprob: -2.984060287475586
    6. 'cache' → logprob: -3.734060287475586
    7. ' cache' → logprob: -4.609060287475586
    8. '.memo' → logprob: -4.734060287475586
    9. ' memo' → logprob: -4.859060287475586
    10. '_' → logprob: -4.859060287475586

Token 405: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2525305449962616
    2. '=' → logprob: -1.502530574798584
    3. ':' → logprob: -7.502530574798584
    4. '={}' → logprob: -10.002530097961426
    5. '={' → logprob: -14.002530097961426
    6. ' ' → logprob: -14.002530097961426
    7. ' ={' → logprob: -14.627530097961426
    8. '={}
' → logprob: -14.877530097961426
    9. '   ' → logprob: -15.002530097961426
    10. ' :' → logprob: -15.127530097961426

Token 406: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.0007123126997612417
    2. ' Dict' → logprob: -7.2507123947143555
    3. 'dict' → logprob: -13.375712394714355
    4. '{}' → logprob: -14.375712394714355
    5. 'Dic' → logprob: -16.00071144104004
    6. '.Dict' → logprob: -16.25071144104004
    7. 'Dictionary' → logprob: -17.75071144104004
    8. '   ' → logprob: -17.75071144104004
    9. '_dict' → logprob: -17.87571144104004
    10. '{' → logprob: -18.00071144104004

Token 407: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00035727277281694114
    2. '[(' → logprob: -8.375357627868652
    3. ' =' → logprob: -9.625357627868652
    4. '[int' → logprob: -10.625357627868652
    5. '[
' → logprob: -11.500357627868652
    6. '[str' → logprob: -12.125357627868652
    7. '=' → logprob: -12.250357627868652
    8. '[[' → logprob: -12.500357627868652
    9. ' [' → logprob: -12.625357627868652
    10. '<Game' → logprob: -13.125357627868652

Token 408: 'Tuple' (ID: 40048)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.0036904551088809967
    2. 'Tuple' → logprob: -5.628690242767334
    3. '[' → logprob: -9.628690719604492
    4. ' Game' → logprob: -11.003690719604492
    5. 'str' → logprob: -13.128690719604492
    6. '(Game' → logprob: -13.253690719604492
    7. '	Game' → logprob: -13.878690719604492
    8. '   ' → logprob: -14.003690719604492
    9. '[str' → logprob: -14.253690719604492
    10. 'int' → logprob: -15.503690719604492

Token 409: '[str' (ID: 33439)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10055223852396011
    2. '[str' → logprob: -2.3505523204803467
    3. '[int' → logprob: -7.975552082061768
    4. '[
' → logprob: -14.600552558898926
    5. '['' → logprob: -14.725552558898926
    6. 'str' → logprob: -14.725552558898926
    7. ',' → logprob: -15.225552558898926
    8. '(Game' → logprob: -15.975552558898926
    9. 'Game' → logprob: -17.35055160522461
    10. '[(' → logprob: -17.85055160522461

Token 410: ',bool' (ID: 175134)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001979378139367327
    2. ',bool' → logprob: -8.625198364257812
    3. ' ,' → logprob: -11.625198364257812
    4. ',int' → logprob: -11.750198364257812
    5. ',List' → logprob: -14.125198364257812
    6. ' ' → logprob: -15.875198364257812
    7. ',
' → logprob: -16.000198364257812
    8. '   ' → logprob: -16.500198364257812
    9. ',b' → logprob: -16.500198364257812
    10. ',is' → logprob: -16.750198364257812

Token 411: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02981066145002842
    2. '],' → logprob: -3.529810667037964
    3. ' ,' → logprob: -9.904810905456543
    4. ',bool' → logprob: -12.904810905456543
    5. ',List' → logprob: -13.154810905456543
    6. ',int' → logprob: -13.154810905456543
    7. '   ' → logprob: -13.279810905456543
    8. ' ],' → logprob: -14.154810905456543
    9. '  ' → logprob: -15.029810905456543
    10. ' ' → logprob: -15.154810905456543

Token 412: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -6.980854959692806e-05
    2. ' Player' → logprob: -9.625069618225098
    3. '	Player' → logprob: -12.875069618225098
    4. 'str' → logprob: -13.875069618225098
    5. '<Player' → logprob: -16.625070571899414
    6. '_Player' → logprob: -17.125070571899414
    7. '.Player' → logprob: -18.250070571899414
    8. '(Player' → logprob: -18.625070571899414
    9. '_player' → logprob: -19.000070571899414
    10. 'Tuple' → logprob: -19.000070571899414

Token 413: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.306760805164231e-05
    2. ']=' → logprob: -12.37501335144043
    3. ' ]' → logprob: -12.37501335144043
    4. '']' → logprob: -13.12501335144043
    5. '"]' → logprob: -13.12501335144043
    6. '()]' → logprob: -15.37501335144043
    7. '   ' → logprob: -16.25001335144043
    8. '>' → logprob: -16.25001335144043
    9. '`]' → logprob: -16.87501335144043
    10. ')]' → logprob: -17.37501335144043

Token 414: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740781784057617
    2. ' =' → logprob: -0.9740781784057617
    3. ' ' → logprob: -14.224078178405762
    4. '={}' → logprob: -14.974078178405762
    5. '   ' → logprob: -15.599078178405762
    6. '=[]' → logprob: -17.349079132080078
    7. ')' → logprob: -18.099079132080078
    8. '={}
' → logprob: -18.099079132080078
    9. '  ' → logprob: -18.349079132080078
    10. '       ' → logprob: -18.724079132080078

Token 415: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.3915141355246305e-05
    2. ' {}' → logprob: -10.75002384185791
    3. 'dict' → logprob: -13.00002384185791
    4. '{}
' → logprob: -16.750024795532227
    5. ' dict' → logprob: -17.375024795532227
    6. '{}

' → logprob: -17.500024795532227
    7. '{' → logprob: -19.000024795532227
    8. '={}' → logprob: -19.250024795532227
    9. '{})' → logprob: -19.375024795532227
    10. '{}\' → logprob: -20.625024795532227

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042237089946866035
    2. '
' → logprob: -5.754223823547363
    3. '    
' → logprob: -6.879223823547363
    4. 'def' → logprob: -11.754223823547363
    5. '        
' → logprob: -13.004223823547363
    6. ' 
' → logprob: -13.129223823547363
    7. ' def' → logprob: -13.504223823547363
    8. '  
' → logprob: -14.379223823547363
    9. '```' → logprob: -14.629223823547363
    10. '   
' → logprob: -14.754223823547363

Token 417: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006544370204210281
    2. '   ' → logprob: -5.506544589996338
    3. ' def' → logprob: -6.006544589996338
    4. ' ' → logprob: -15.75654411315918
    5. '  ' → logprob: -15.88154411315918
    6. '	def' → logprob: -16.50654411315918
    7. '    ' → logprob: -18.63154411315918
    8. '
' → logprob: -19.38154411315918
    9. 'de' → logprob: -19.88154411315918
    10. '    
' → logprob: -20.25654411315918

Token 418: ' decide' (ID: 13001)
  Prédit: 'dec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dec' → logprob: -0.014164566993713379
    2. ' decide' → logprob: -4.264164447784424
    3. '_dec' → logprob: -14.514164924621582
    4. 'def' → logprob: -14.889164924621582
    5. ' decid' → logprob: -16.014163970947266
    6. ' dec' → logprob: -16.389163970947266
    7. 'decision' → logprob: -17.764163970947266
    8. '.dec' → logprob: -18.139163970947266
    9. '   ' → logprob: -18.389163970947266
    10. 'decode' → logprob: -18.514163970947266

Token 419: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -11.875007629394531
    3. ' _' → logprob: -15.125007629394531
    4. '_player' → logprob: -17.25000762939453
    5. '_writer' → logprob: -17.37500762939453
    6. '_next' → logprob: -17.62500762939453
    7. '   ' → logprob: -17.87500762939453
    8. '_y' → logprob: -18.00000762939453
    9. '

' → logprob: -18.00000762939453
    10. '_s' → logprob: -18.12500762939453

Token 420: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -1.0683535037969705e-05
    2. 'winner' → logprob: -11.75001049041748
    3. '_inner' → logprob: -13.50001049041748
    4. 'inn' → logprob: -14.62501049041748
    5. 'inne' → logprob: -15.50001049041748
    6. 'iner' → logprob: -15.62501049041748
    7. ' inner' → logprob: -15.75001049041748
    8. '_' → logprob: -16.125011444091797
    9. 'inning' → logprob: -16.625011444091797
    10. 'inners' → logprob: -17.000011444091797

Token 421: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003397535183466971
    2. '(' → logprob: -8.00033950805664
    3. '(
' → logprob: -12.50033950805664
    4. ' (' → logprob: -14.75033950805664
    5. 'self' → logprob: -16.37533950805664
    6. '   ' → logprob: -16.75033950805664
    7. '       ' → logprob: -17.12533950805664
    8. '(s' → logprob: -18.12533950805664
    9. '(sel' → logprob: -18.37533950805664
    10. '(

' → logprob: -19.12533950805664

Token 422: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001118307700380683
    2. '(' → logprob: -7.751118183135986
    3. 'self' → logprob: -8.126118659973145
    4. ')' → logprob: -9.001118659973145
    5. ' (' → logprob: -9.126118659973145
    6. ')(' → logprob: -9.876118659973145
    7. ',' → logprob: -10.126118659973145
    8. '   ' → logprob: -10.626118659973145
    9. '       ' → logprob: -10.751118659973145
    10. '(
' → logprob: -11.751118659973145

Token 423: ' state' (ID: 2608)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1604369729757309
    2. ' self' → logprob: -1.910436987876892
    3. 'state' → logprob: -9.035436630249023
    4. '       ' → logprob: -9.660436630249023
    5. ' state' → logprob: -10.660436630249023
    6. '(self' → logprob: -12.660436630249023
    7. '   ' → logprob: -12.785436630249023
    8. ' ' → logprob: -15.285436630249023
    9. '    ' → logprob: -16.285436630249023
    10. '
' → logprob: -17.160436630249023

Token 424: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013500562636181712
    2. ' ,' → logprob: -9.00013542175293
    3. ',self' → logprob: -12.12513542175293
    4. '       ' → logprob: -12.75013542175293
    5. 'self' → logprob: -13.37513542175293
    6. '   ' → logprob: -14.50013542175293
    7. '(self' → logprob: -14.75013542175293
    8. ',state' → logprob: -15.50013542175293
    9. ',
' → logprob: -15.62513542175293
    10. '        ' → logprob: -16.00013542175293

Token 425: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.12763282656669617
    2. ' Game' → logprob: -2.1276328563690186
    3. 'self' → logprob: -7.3776326179504395
    4. ' self' → logprob: -9.752633094787598
    5. '   ' → logprob: -11.877633094787598
    6. '       ' → logprob: -11.877633094787598
    7. '(Game' → logprob: -12.502633094787598
    8. ' ' → logprob: -14.002633094787598
    9. '	Game' → logprob: -14.127633094787598
    10. '<Game' → logprob: -14.877633094787598

Token 426: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.00018363336857873946
    2. '_State' → logprob: -8.750184059143066
    3. '_state' → logprob: -11.250184059143066
    4. 'States' → logprob: -11.875184059143066
    5. '   ' → logprob: -13.000184059143066
    6. '_STATE' → logprob: -14.125184059143066
    7. 'state' → logprob: -14.125184059143066
    8. '_' → logprob: -15.125184059143066
    9. '.State' → logprob: -15.250184059143066
    10. '_S' → logprob: -15.375184059143066

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.500001907348633
    4. ',self' → logprob: -17.000001907348633
    5. 'self' → logprob: -17.500001907348633
    6. '       ' → logprob: -18.500001907348633
    7. ',
' → logprob: -18.625001907348633
    8. ',state' → logprob: -20.500001907348633
    9. ',is' → logprob: -21.375001907348633
    10. '‌,' → logprob: -22.125001907348633

Token 428: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014164687134325504
    2. 'is' → logprob: -4.264164924621582
    3. '    ' → logprob: -13.889164924621582
    4. '        ' → logprob: -16.014163970947266
    5. ' ' → logprob: -16.639163970947266
    6. '   ' → logprob: -17.639163970947266
    7. '       ' → logprob: -17.889163970947266
    8. '	is' → logprob: -19.139163970947266
    9. ')is' → logprob: -19.639163970947266
    10. '     ' → logprob: -19.764163970947266

Token 429: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -2.1008713702030946e-06
    2. '_f' → logprob: -13.500001907348633
    3. '_' → logprob: -15.125001907348633
    4. '_FIRST' → logprob: -16.000001907348633
    5. 'first' → logprob: -16.125001907348633
    6. 'First' → logprob: -17.625001907348633
    7. ' _' → logprob: -18.000001907348633
    8. ')_' → logprob: -18.125001907348633
    9. '_First' → logprob: -18.375001907348633
    10. '_current' → logprob: -18.375001907348633

Token 430: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -8.2994620242971e-06
    2. '_Player' → logprob: -13.125008583068848
    3. '   ' → logprob: -13.500008583068848
    4. '_PLAYER' → logprob: -13.750008583068848
    5. '_players' → logprob: -14.125008583068848
    6. ')_' → logprob: -14.250008583068848
    7. '<Player' → logprob: -14.750008583068848
    8. '_' → logprob: -14.875008583068848
    9. 'Player' → logprob: -14.875008583068848
    10. 'player' → logprob: -15.125008583068848

Token 431: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -1.1279553291387856e-05
    2. '   ' → logprob: -12.125011444091797
    3. 'turn' → logprob: -13.500011444091797
    4. ')' → logprob: -13.500011444091797
    5. ':' → logprob: -13.875011444091797
    6. '       ' → logprob: -15.000011444091797
    7. ' _' → logprob: -15.000011444091797
    8. ''s' → logprob: -15.125011444091797
    9. '):' → logprob: -15.375011444091797
    10. '):
' → logprob: -15.625011444091797

Token 432: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0076828161254525185
    2. ')' → logprob: -4.882682800292969
    3. '):' → logprob: -9.632682800292969
    4. '   ' → logprob: -11.632682800292969
    5. ' )' → logprob: -14.257682800292969
    6. ' :' → logprob: -14.257682800292969
    7. '       ' → logprob: -14.632682800292969
    8. '):
' → logprob: -15.632682800292969
    9. ':)' → logprob: -15.632682800292969
    10. 'self' → logprob: -16.63268280029297

Token 433: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.13054336607456207
    2. 'bool' → logprob: -2.1305434703826904
    3. ')' → logprob: -5.630543231964111
    4. ':' → logprob: -12.00554370880127
    5. ' )' → logprob: -12.25554370880127
    6. ' ' → logprob: -12.63054370880127
    7. '   ' → logprob: -13.13054370880127
    8. ' True' → logprob: -13.38054370880127
    9. '_bool' → logprob: -13.50554370880127
    10. 'True' → logprob: -14.00554370880127

Token 434: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034023032640106976
    2. '):' → logprob: -8.000340461730957
    3. '   ' → logprob: -13.125340461730957
    4. ' )' → logprob: -13.500340461730957
    5. '):
' → logprob: -14.000340461730957
    6. ')->' → logprob: -14.875340461730957
    7. ':' → logprob: -16.62533950805664
    8. '       ' → logprob: -17.25033950805664
    9. '):
' → logprob: -18.50033950805664
    10. '):

' → logprob: -18.50033950805664

Token 435: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.14812776446342468
    2. '->' → logprob: -2.648127794265747
    3. ':' → logprob: -2.898127794265747
    4. ')' → logprob: -4.523127555847168
    5. ')->' → logprob: -7.523127555847168
    6. '   ' → logprob: -8.023127555847168
    7. '       ' → logprob: -11.023127555847168
    8. ' ' → logprob: -11.273127555847168
    9. '):' → logprob: -12.148127555847168
    10. ' )->' → logprob: -12.773127555847168

Token 436: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.20142677426338196
    2. ' Player' → logprob: -1.7014267444610596
    3. '	Player' → logprob: -11.45142650604248
    4. ' ' → logprob: -14.45142650604248
    5. 'Optional' → logprob: -14.57642650604248
    6. '(Player' → logprob: -14.70142650604248
    7. '_Player' → logprob: -14.70142650604248
    8. '   ' → logprob: -15.07642650604248
    9. '<Player' → logprob: -15.70142650604248
    10. '  ' → logprob: -15.82642650604248

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004637673031538725
    2. '       ' → logprob: -6.254637718200684
    3. '):' → logprob: -6.379637718200684
    4. ':
' → logprob: -7.129637718200684
    5. '):
' → logprob: -8.754637718200684
    6. '():' → logprob: -11.004637718200684
    7. '   ' → logprob: -11.254637718200684
    8. ',' → logprob: -12.129637718200684
    9. ')' → logprob: -12.504637718200684
    10. ' :' → logprob: -12.504637718200684

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.014684110297821e-06
    2. '   ' → logprob: -13.000008583068848
    3. ' if' → logprob: -13.125008583068848
    4. '        
' → logprob: -13.125008583068848
    5. '```' → logprob: -14.125008583068848
    6. '      ' → logprob: -15.375008583068848
    7. '[' → logprob: -15.750008583068848
    8. '{' → logprob: -15.750008583068848
    9. 'if' → logprob: -15.750008583068848
    10. '           ' → logprob: -16.000009536743164

Token 439: ' key' (ID: 2140)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1942417025566101
    2. ' key' → logprob: -1.9442417621612549
    3. 'key' (adapté à ' key') → logprob: -3.444241762161255
    4. ' if' → logprob: -6.819241523742676
    5. 'if' → logprob: -7.819241523742676
    6. 'state' → logprob: -11.194241523742676
    7. '        
' → logprob: -12.694241523742676
    8. '   ' → logprob: -13.444241523742676
    9. '_key' → logprob: -13.694241523742676
    10. 'token' → logprob: -14.194241523742676

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692904472351074
    2. '=' → logprob: -2.1269290447235107
    3. ' =(' → logprob: -14.12692928314209
    4. '=(' → logprob: -16.251928329467773
    5. ',' → logprob: -16.626928329467773
    6. ')' → logprob: -17.626928329467773
    7. ' =
' → logprob: -18.251928329467773
    8. '=
' → logprob: -18.501928329467773
    9. '＝' → logprob: -18.501928329467773
    10. ')=' → logprob: -18.626928329467773

Token 441: ' (' (ID: 350)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -2.7729658540920354e-05
    2. ' (' → logprob: -10.500027656555176
    3. '(' → logprob: -16.000028610229492
    4. '   ' → logprob: -18.500028610229492
    5. '(State' → logprob: -18.625028610229492
    6. '(key' → logprob: -18.750028610229492
    7. '((' → logprob: -18.750028610229492
    8. '       ' → logprob: -18.750028610229492
    9. '(self' → logprob: -18.875028610229492
    10. '[state' → logprob: -18.875028610229492

Token 442: 'state' (ID: 5294)
  Prédit: 'state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -4.5491004129871726e-05
    2. ' state' → logprob: -10.000045776367188
    3. '(state' → logprob: -18.125045776367188
    4. '   ' → logprob: -19.375045776367188
    5. '       ' → logprob: -21.625045776367188
    6. '	state' → logprob: -21.750045776367188
    7. ' ' → logprob: -22.125045776367188
    8. ',state' → logprob: -22.500045776367188
    9. '           ' → logprob: -22.625045776367188
    10. '    ' → logprob: -23.000045776367188

Token 443: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -2.4153549020411447e-05
    2. 'number' → logprob: -10.87502384185791
    3. '.' → logprob: -12.50002384185791
    4. ' .' → logprob: -14.25002384185791
    5. ',' → logprob: -14.87502384185791
    6. '.n' → logprob: -16.125024795532227
    7. ' ' → logprob: -17.000024795532227
    8. '
' → logprob: -17.250024795532227
    9. '(number' → logprob: -17.375024795532227
    10. '.state' → logprob: -17.500024795532227

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.825890159234405e-05
    2. ' ,' → logprob: -9.625068664550781
    3. ',is' → logprob: -13.250068664550781
    4. ',
' → logprob: -15.000068664550781
    5. '‌,' → logprob: -18.75006866455078
    6. ',user' → logprob: -19.25006866455078
    7. '   ' → logprob: -19.50006866455078
    8. ',index' → logprob: -19.87506866455078
    9. ',status' → logprob: -20.00006866455078
    10. '
' → logprob: -20.25006866455078

Token 445: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3868711292743683
    2. ' is' → logprob: -1.136871099472046
    3. ')is' → logprob: -17.136871337890625
    4. '   ' → logprob: -18.886871337890625
    5. ' ' → logprob: -19.011871337890625
    6. ')' → logprob: -19.511871337890625
    7. '	is' → logprob: -19.886871337890625
    8. '        ' → logprob: -19.886871337890625
    9. '    ' → logprob: -20.011871337890625
    10. '_is' → logprob: -20.386871337890625

Token 446: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -4.36574100604048e-06
    2. 'first' → logprob: -12.875004768371582
    3. '_' → logprob: -13.500004768371582
    4. '_f' → logprob: -16.125003814697266
    5. '_FIRST' → logprob: -16.125003814697266
    6. ' _' → logprob: -17.125003814697266
    7. 'First' → logprob: -17.750003814697266
    8. ' first' → logprob: -17.875003814697266
    9. ')_' → logprob: -18.875003814697266
    10. '_First' → logprob: -19.000003814697266

Token 447: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -5.080963092041202e-06
    2. 'player' → logprob: -12.375004768371582
    3. 'Player' → logprob: -14.500004768371582
    4. '_PLAYER' → logprob: -16.2500057220459
    5. '_players' → logprob: -17.2500057220459
    6. ' player' → logprob: -17.6250057220459
    7. '_play' → logprob: -17.8750057220459
    8. '_user' → logprob: -18.0000057220459
    9. '   ' → logprob: -18.0000057220459
    10. '_first' → logprob: -18.2500057220459

Token 448: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -3.15441757265944e-05
    2. 'turn' → logprob: -10.375031471252441
    3. 'Turn' → logprob: -16.625032424926758
    4. '-turn' → logprob: -16.750032424926758
    5. ')' → logprob: -17.250032424926758
    6. '_t' → logprob: -17.375032424926758
    7. 'urn' → logprob: -17.750032424926758
    8. '   ' → logprob: -18.500032424926758
    9. '```' → logprob: -18.500032424926758
    10. ')_' → logprob: -19.000032424926758

Token 449: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026455431361682713
    2. ')
' → logprob: -8.250264167785645
    3. '       ' → logprob: -13.625264167785645
    4. ',' → logprob: -14.000264167785645
    5. ')

' → logprob: -15.125264167785645
    6. ' )' → logprob: -15.125264167785645
    7. ')
' → logprob: -15.500264167785645
    8. '   ' → logprob: -15.875264167785645
    9. ',)' → logprob: -16.50026512145996
    10. '),' → logprob: -16.62526512145996

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00430442625656724
    2. ' if' → logprob: -5.7543044090271
    3. '<|end|>' → logprob: -7.2543044090271
    4. 'if' → logprob: -8.254304885864258
    5. '        
' → logprob: -9.754304885864258
    6. ')' → logprob: -10.254304885864258
    7. '   ' → logprob: -11.379304885864258
    8. '<|end|>' → logprob: -11.504304885864258
    9. ' ' → logprob: -11.754304885864258
    10. 'token' → logprob: -12.254304885864258

Token 451: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6809387803077698
    2. '       ' → logprob: -0.9309387803077698
    3. 'if' (adapté à ' if') → logprob: -2.305938720703125
    4. '        
' → logprob: -12.930938720703125
    5. ',' → logprob: -13.305938720703125
    6. '	if' → logprob: -13.305938720703125
    7. 'If' → logprob: -14.180938720703125
    8. '   ' → logprob: -14.305938720703125
    9. 'token' → logprob: -14.680938720703125
    10. '<|end|>' → logprob: -14.805938720703125

Token 452: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.03804149478673935
    2. 'key' → logprob: -3.288041591644287
    3. '	key' → logprob: -18.163042068481445
    4. 'Key' → logprob: -18.538042068481445
    5. '(key' → logprob: -18.788042068481445
    6. '_key' → logprob: -18.913042068481445
    7. '   ' → logprob: -21.038042068481445
    8. '[key' → logprob: -21.163042068481445
    9. ' ' → logprob: -22.163042068481445
    10. '$key' → logprob: -22.163042068481445

Token 453: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01603800244629383
    2. 'in' → logprob: -4.141037940979004
    3. ')' → logprob: -13.141037940979004
    4. ' ' → logprob: -14.016037940979004
    5. '<|end|>' → logprob: -14.641037940979004
    6. ' not' → logprob: -15.516037940979004
    7. '	in' → logprob: -15.766037940979004
    8. ']' → logprob: -16.14103889465332
    9. 'In' → logprob: -16.89103889465332
    10. '   ' → logprob: -16.89103889465332

Token 454: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001502598519437015
    2. ' self' → logprob: -6.501502513885498
    3. '       ' → logprob: -15.501502990722656
    4. '(self' → logprob: -17.126502990722656
    5. '[self' → logprob: -18.126502990722656
    6. '	self' → logprob: -18.251502990722656
    7. '           ' → logprob: -18.626502990722656
    8. '   ' → logprob: -18.751502990722656
    9. '=self' → logprob: -19.251502990722656
    10. '
' → logprob: -19.501502990722656

Token 455: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.0004098195640835911
    2. '.' → logprob: -7.8754096031188965
    3. '.mem' → logprob: -10.750410079956055
    4. ' .' → logprob: -12.250410079956055
    5. '.memory' → logprob: -13.125410079956055
    6. 'memo' → logprob: -14.000410079956055
    7. '.mime' → logprob: -15.375410079956055
    8. '.mu' → logprob: -16.125410079956055
    9. '.token' → logprob: -16.375410079956055
    10. '.mn' → logprob: -16.375410079956055

Token 456: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010119986720383167
    2. ':
' → logprob: -4.635119915008545
    3. ':return' → logprob: -8.135120391845703
    4. '       ' → logprob: -10.010120391845703
    5. '           ' → logprob: -10.760120391845703
    6. ':
' → logprob: -13.635120391845703
    7. '):
' → logprob: -14.510120391845703
    8. '):' → logprob: -14.510120391845703
    9. ',' → logprob: -14.510120391845703
    10. ' and' → logprob: -15.010120391845703

Token 457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006364276050589979
    2. 'return' → logprob: -7.750636577606201
    3. ':' → logprob: -9.000636100769043
    4. ' return' → logprob: -9.750636100769043
    5. ':
' → logprob: -11.625636100769043
    6. '       ' → logprob: -12.125636100769043
    7. ':return' → logprob: -12.250636100769043
    8. '          ' → logprob: -13.125636100769043
    9. ',' → logprob: -14.375636100769043
    10. '{return' → logprob: -14.875636100769043

Token 458: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.021288692951202393
    2. '           ' → logprob: -4.021288871765137
    3. ' return' → logprob: -5.771288871765137
    4. '       ' → logprob: -11.146288871765137
    5. '   ' → logprob: -13.146288871765137
    6. '
' → logprob: -14.021288871765137
    7. ':return' → logprob: -14.646288871765137
    8. '	return' → logprob: -15.521288871765137
    9. '{return' → logprob: -15.646288871765137
    10. ')return' → logprob: -17.02128791809082

Token 459: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078401252627373
    2. ' self' → logprob: -5.504078388214111
    3. '[self' → logprob: -18.629077911376953
    4. '	self' → logprob: -19.879077911376953
    5. '(self' → logprob: -20.254077911376953
    6. '=self' → logprob: -22.504077911376953
    7. '   ' → logprob: -23.129077911376953
    8. '       ' → logprob: -23.379077911376953
    9. 'Self' → logprob: -23.379077911376953
    10. '_self' → logprob: -24.129077911376953

Token 460: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.00032271104282699525
    2. '.m' → logprob: -9.250322341918945
    3. '.mem' → logprob: -9.375322341918945
    4. '.' → logprob: -9.375322341918945
    5. ' .' → logprob: -10.250322341918945
    6. 'memo' → logprob: -12.000322341918945
    7. '.memory' → logprob: -12.375322341918945
    8. '.mn' → logprob: -12.750322341918945
    9. '.mu' → logprob: -13.250322341918945
    10. '.mime' → logprob: -13.750322341918945

Token 461: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. 'key' → logprob: -19.125
    4. '[
' → logprob: -19.875
    5. '[state' → logprob: -20.875
    6. '```' → logprob: -20.875
    7. '(key' → logprob: -21.0
    8. '[token' → logprob: -21.0
    9. '[self' → logprob: -22.0
    10. ' [' → logprob: -22.125

Token 462: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015979631280060858
    2. ')' → logprob: -8.875160217285156
    3. ' ]' → logprob: -11.500160217285156
    4. '])' → logprob: -12.375160217285156
    5. ']
' → logprob: -13.000160217285156
    6. ')]' → logprob: -13.500160217285156
    7. ' ' → logprob: -14.750160217285156
    8. '[' → logprob: -15.000160217285156
    9. '   ' → logprob: -16.000160217285156
    10. '<|end|>' → logprob: -16.000160217285156

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009237268241122365
    2. '        
' → logprob: -7.7509236335754395
    3. 'if' → logprob: -8.250924110412598
    4. '
' → logprob: -8.500924110412598
    5. ' if' → logprob: -10.750924110412598
    6. '    
' → logprob: -13.375924110412598
    7. '   ' → logprob: -13.875924110412598
    8. '  
' → logprob: -13.875924110412598
    9. '       
' → logprob: -14.250924110412598
    10. '<|end|>' → logprob: -14.500924110412598

Token 464: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003190666902810335
    2. '       ' → logprob: -5.753190517425537
    3. ' if' → logprob: -11.253190994262695
    4. '        
' → logprob: -17.003190994262695
    5. '#' → logprob: -17.628190994262695
    6. '   ' → logprob: -17.878190994262695
    7. '```' → logprob: -18.378190994262695
    8. 'If' → logprob: -19.128190994262695
    9. 'player' → logprob: -19.378190994262695
    10. '	if' → logprob: -19.753190994262695

Token 465: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.006716317031532526
    2. ' state' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.00671672821045
    4. ' ' → logprob: -15.88171672821045
    5. '	state' → logprob: -17.131715774536133
    6. '(state' → logprob: -18.256715774536133
    7. '  ' → logprob: -19.006715774536133
    8. '    ' → logprob: -19.131715774536133
    9. 'len' → logprob: -19.631715774536133
    10. ' ' → logprob: -19.881715774536133

Token 466: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0001246348983841017
    2. '.' → logprob: -9.00012493133545
    3. '.isnan' → logprob: -14.37512493133545
    4. ' .' → logprob: -14.87512493133545
    5. 'is' → logprob: -15.87512493133545
    6. '.i' → logprob: -17.750123977661133
    7. ').' → logprob: -17.875123977661133
    8. '.isfile' → logprob: -18.125123977661133
    9. '<|end|>' → logprob: -18.125123977661133
    10. '.has' → logprob: -18.375123977661133

Token 467: '_terminal' (ID: 166163)
  Prédit: '_terminal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_terminal' → logprob: -1.6240566083070007e-06
    2. 'terminal' → logprob: -13.625001907348633
    3. '_' → logprob: -14.750001907348633
    4. '_term' → logprob: -17.625001907348633
    5. ' terminal' → logprob: -18.500001907348633
    6. '_t' → logprob: -20.250001907348633
    7. '_token' → logprob: -20.500001907348633
    8. '-terminal' → logprob: -21.125001907348633
    9. '\' → logprob: -21.375001907348633
    10. '_
' → logprob: -21.625001907348633

Token 468: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014349423348903656
    2. '():
' → logprob: -4.264349460601807
    3. '()' → logprob: -8.639348983764648
    4. ' ():' → logprob: -11.889348983764648
    5. '():
' → logprob: -13.264348983764648
    6. '():

' → logprob: -15.639348983764648
    7. '(' → logprob: -16.63934898376465
    8. '()):
' → logprob: -17.13934898376465
    9. '()>' → logprob: -18.01434898376465
    10. ':' → logprob: -18.38934898376465

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014327093958854675
    2. '       ' → logprob: -4.514327049255371
    3. 'if' → logprob: -6.514327049255371
    4. ' if' → logprob: -6.889327049255371
    5. ':' → logprob: -7.514327049255371
    6. ':
' → logprob: -9.139327049255371
    7. 'return' → logprob: -10.264327049255371
    8. 'player' → logprob: -11.639327049255371
    9. '
' → logprob: -11.764327049255371
    10. '{
' → logprob: -11.889327049255371

Token 470: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48065686225891113
    2. 'return' → logprob: -0.9806568622589111
    3. 'winner' → logprob: -5.105656623840332
    4. '#' (adapté à ' #') → logprob: -8.855656623840332
    5. '           ' → logprob: -8.980656623840332
    6. '       ' → logprob: -8.980656623840332
    7. ' if' → logprob: -10.105656623840332
    8. ' return' → logprob: -10.480656623840332
    9. 'winning' → logprob: -11.480656623840332
    10. ' winner' → logprob: -11.855656623840332

Token 471: ' The' (ID: 623)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.08725708723068237
    2. 'if' → logprob: -2.712257146835327
    3. 'return' → logprob: -4.337256908416748
    4. '#' → logprob: -6.087256908416748
    5. ' winner' → logprob: -6.837256908416748
    6. 'self' → logprob: -7.712256908416748
    7. '       ' → logprob: -8.837257385253906
    8. 'result' → logprob: -9.837257385253906
    9. ' if' → logprob: -10.212257385253906
    10. '           ' → logprob: -10.587257385253906

Token 472: ' player' (ID: 5033)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.08267083019018173
    2. 'current' → logprob: -3.7076709270477295
    3. 'los' → logprob: -4.20767068862915
    4. ' winner' → logprob: -4.45767068862915
    5. '
' → logprob: -4.95767068862915
    6. '#' → logprob: -5.08267068862915
    7. '       ' → logprob: -5.83267068862915
    8. 'memo' → logprob: -5.95767068862915
    9. '           ' → logprob: -6.08267068862915
    10. 'return' → logprob: -6.58267068862915

Token 473: ' who' (ID: 1218)
  Prédit: ' who'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' who' → logprob: -0.39463943243026733
    2. 'who' → logprob: -1.644639492034912
    3. ' to' → logprob: -2.769639492034912
    4. 'to' → logprob: -3.019639492034912
    5. ' whose' → logprob: -5.519639492034912
    6. ' that' → logprob: -5.519639492034912
    7. 'whose' → logprob: -5.644639492034912
    8. 'that' → logprob: -6.019639492034912
    9. 'not' → logprob: -6.144639492034912
    10. '   ' → logprob: -6.769639492034912

Token 474: ' cannot' (ID: 6284)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5635542273521423
    2. ' is' → logprob: -1.438554286956787
    3. 'turn' → logprob: -3.188554286956787
    4. ' has' → logprob: -4.188554286956787
    5. 's' → logprob: -4.313554286956787
    6. ' plays' → logprob: -4.313554286956787
    7. 'moves' → logprob: -4.313554286956787
    8. 'last' → logprob: -4.438554286956787
    9. '   ' → logprob: -4.563554286956787
    10. 'has' → logprob: -4.813554286956787

Token 475: ' move' (ID: 5275)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.23134608566761017
    2. 'move' → logprob: -1.9813461303710938
    3. ' make' → logprob: -3.2313461303710938
    4. ' move' → logprob: -3.6063461303710938
    5. 'play' → logprob: -6.606346130371094
    6. ' play' → logprob: -8.606346130371094
    7. '   ' → logprob: -8.731346130371094
    8. ' ' → logprob: -8.731346130371094
    9. '  ' → logprob: -10.606346130371094
    10. '	move' → logprob: -10.731346130371094

Token 476: ' loses' (ID: 63582)
  Prédit: ' loses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loses' → logprob: -0.029088390991091728
    2. 'los' → logprob: -3.7790884971618652
    3. '()' → logprob: -6.279088497161865
    4. ' is' → logprob: -7.154088497161865
    5. 'lose' → logprob: -7.279088497161865
    6. 'is' → logprob: -7.779088497161865
    7. '   ' → logprob: -7.904088497161865
    8. '           ' → logprob: -8.529088020324707
    9. ',' → logprob: -8.654088020324707
    10. 'lo' → logprob: -8.779088020324707

Token 477: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5594000816345215
    2. '       ' → logprob: -1.5594000816345215
    3. ' if' → logprob: -2.3094000816345215
    4. '
' → logprob: -3.0594000816345215
    5. '.' → logprob: -3.3094000816345215
    6. '           ' → logprob: -4.0594000816345215
    7. '        
' → logprob: -5.6844000816345215
    8. ' and' → logprob: -5.8094000816345215
    9. 'return' → logprob: -6.4344000816345215
    10. ',
' → logprob: -6.5594000816345215

Token 478: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6021448969841003
    2. 'winner' → logprob: -0.9771448969841003
    3. ' winner' → logprob: -3.352144956588745
    4. 'if' → logprob: -3.977144956588745
    5. '           ' → logprob: -4.102144718170166
    6. 'los' → logprob: -5.602144718170166
    7. ' if' → logprob: -6.852144718170166
    8. 'result' → logprob: -7.852144718170166
    9. ' loser' → logprob: -8.227145195007324
    10. '
' → logprob: -9.602145195007324

Token 479: ' #' (ID: 1069)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.011287017725408077
    2. 'los' → logprob: -4.636287212371826
    3. 'if' → logprob: -6.886287212371826
    4. 'self' → logprob: -7.761287212371826
    5. '#' (adapté à ' #') → logprob: -10.011286735534668
    6. ' winner' → logprob: -11.136286735534668
    7. 'result' → logprob: -11.636286735534668
    8. '       ' → logprob: -12.011286735534668
    9. 'winning' → logprob: -13.011286735534668
    10. '   ' → logprob: -13.386286735534668

Token 480: ' If' (ID: 1843)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.019018303602933884
    2. 'los' → logprob: -4.394018173217773
    3. ' winner' → logprob: -5.394018173217773
    4. 'if' → logprob: -6.894018173217773
    5. '#' → logprob: -7.394018173217773
    6. '       ' → logprob: -9.144018173217773
    7. ' loser' → logprob: -9.769018173217773
    8. 'self' → logprob: -9.769018173217773
    9. '   ' → logprob: -9.894018173217773
    10. 'result' → logprob: -11.269018173217773

Token 481: ' it's' (ID: 4275)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004254577215760946
    2. ' is' → logprob: -5.504254341125488
    3. 'not' → logprob: -9.129254341125488
    4. 'len' → logprob: -10.129254341125488
    5. ' not' → logprob: -11.129254341125488
    6. 'state' → logprob: -11.754254341125488
    7. '   ' → logprob: -13.379254341125488
    8. ' ' → logprob: -14.004254341125488
    9. ' len' → logprob: -14.254254341125488
    10. '
' → logprob: -14.629254341125488

Token 482: ' first' (ID: 1577)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.007193643134087324
    2. 'first' → logprob: -5.132193565368652
    3. 'not' → logprob: -6.757193565368652
    4. ' is' → logprob: -10.257193565368652
    5. 'state' → logprob: -10.507193565368652
    6. 'self' → logprob: -10.757193565368652
    7. ' first' → logprob: -11.882193565368652
    8. 'the' → logprob: -11.882193565368652
    9. ' not' → logprob: -13.382193565368652
    10. 'True' → logprob: -13.632193565368652

Token 483: ' player's' (ID: 107234)
  Prédit: '_player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.0002966127940453589
    2. ' player's' → logprob: -8.625296592712402
    3. ''s' → logprob: -9.750296592712402
    4. '   ' → logprob: -11.250296592712402
    5. '_user' → logprob: -11.500296592712402
    6. '_token' → logprob: -11.625296592712402
    7. 'Player' → logprob: -12.000296592712402
    8. '_players' → logprob: -12.500296592712402
    9. '_first' → logprob: -13.250296592712402
    10. 'player' → logprob: -13.250296592712402

Token 484: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.160243421792984
    2. ' turn' → logprob: -1.9102433919906616
    3. '_turn' → logprob: -10.910243034362793
    4. 't' → logprob: -14.785243034362793
    5. 'eturn' → logprob: -16.03524398803711
    6. 'Turn' → logprob: -16.28524398803711
    7. 'move' → logprob: -16.41024398803711
    8. ' turno' → logprob: -16.53524398803711
    9. '
' → logprob: -16.78524398803711
    10. '   ' → logprob: -17.03524398803711

Token 485: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020994342863559723
    2. ' and' → logprob: -4.145994186401367
    3. 'and' → logprob: -6.395994186401367
    4. '           ' → logprob: -6.895994186401367
    5. ':' → logprob: -7.395994186401367
    6. ' return' → logprob: -7.520994186401367
    7. 'return' → logprob: -7.895994186401367
    8. ':return' → logprob: -8.020994186401367
    9. ' (' → logprob: -8.520994186401367
    10. '       ' → logprob: -9.520994186401367

Token 486: ' no' (ID: 860)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.03959311172366142
    2. 'len' → logprob: -3.41459321975708
    3. 'the' → logprob: -5.91459321975708
    4. ' state' → logprob: -6.16459321975708
    5. 'is' → logprob: -8.164592742919922
    6. 'there' → logprob: -8.164592742919922
    7. 'not' → logprob: -8.539592742919922
    8. ' len' → logprob: -9.164592742919922
    9. 'it' → logprob: -10.039592742919922
    10. ' the' → logprob: -10.164592742919922

Token 487: ' moves' (ID: 19523)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.9171510934829712
    2. ' moves' → logprob: -1.0421510934829712
    3. 'next' → logprob: -2.2921509742736816
    4. 'moves' → logprob: -2.5421509742736816
    5. 's' → logprob: -3.7921509742736816
    6. ' more' → logprob: -3.9171509742736816
    7. ' further' → logprob: -4.542150974273682
    8. 'more' → logprob: -5.542150974273682
    9. '.' → logprob: -6.542150974273682
    10. ' states' → logprob: -6.792150974273682

Token 488: ' =>' (ID: 871)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.9557978510856628
    2. ',' → logprob: -1.4557979106903076
    3. 'left' → logprob: -1.9557979106903076
    4. ' are' → logprob: -2.0807979106903076
    5. 'possible' → logprob: -3.3307979106903076
    6. ' left' → logprob: -3.4557979106903076
    7. 'can' → logprob: -3.9557979106903076
    8. ' can' → logprob: -4.3307976722717285
    9. ' possible' → logprob: -4.4557976722717285
    10. ':' → logprob: -5.4557976722717285

Token 489: ' first' (ID: 1577)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23167406022548676
    2. 'self' → logprob: -2.1066739559173584
    3. ' return' → logprob: -2.9816739559173584
    4. 'second' → logprob: -4.2316741943359375
    5. '           ' → logprob: -4.3566741943359375
    6. ' self' → logprob: -5.6066741943359375
    7. 'is' → logprob: -6.1066741943359375
    8. ' second' → logprob: -7.7316741943359375
    9. ' is' → logprob: -8.356674194335938
    10. '       ' → logprob: -8.731674194335938

Token 490: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -7.20734242349863e-05
    2. 'player' → logprob: -9.875072479248047
    3. ' player' → logprob: -12.000072479248047
    4. '   ' → logprob: -12.375072479248047
    5. ' _' → logprob: -13.000072479248047
    6. 'Player' → logprob: -13.000072479248047
    7. '_PLAYER' → logprob: -13.500072479248047
    8. '
' → logprob: -13.500072479248047
    9. '_' → logprob: -14.250072479248047
    10. '_players' → logprob: -14.625072479248047

Token 491: ' loses' (ID: 63582)
  Prédit: ' loses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loses' → logprob: -0.10597642511129379
    2. ' else' → logprob: -3.1059763431549072
    3. 'los' → logprob: -4.105976581573486
    4. 'else' → logprob: -4.480976581573486
    5. 'lose' → logprob: -4.980976581573486
    6. ',' → logprob: -5.105976581573486
    7. 'wins' → logprob: -5.980976581573486
    8. 'eturn' → logprob: -6.355976581573486
    9. ' wins' → logprob: -6.480976581573486
    10. ' lose' → logprob: -6.480976581573486

Token 492: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5834456086158752
    2. ',' → logprob: -1.2084455490112305
    3. '           ' → logprob: -2.4584455490112305
    4. '.' → logprob: -3.7084455490112305
    5. ' if' → logprob: -3.9584455490112305
    6. ' =' → logprob: -5.2084455490112305
    7. ' and' → logprob: -6.2084455490112305
    8. '=' → logprob: -6.4584455490112305
    9. ':' → logprob: -7.3334455490112305
    10. '
' → logprob: -7.4584455490112305

Token 493: ' second' (ID: 3099)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05020038038492203
    2. 'return' → logprob: -3.0502004623413086
    3. ' self' → logprob: -6.675200462341309
    4. ' return' → logprob: -8.425200462341309
    5. '           ' → logprob: -9.300200462341309
    6. 'second' → logprob: -10.675200462341309
    7. '   ' → logprob: -12.550200462341309
    8. '(self' → logprob: -12.800200462341309
    9. '       ' → logprob: -13.050200462341309
    10. '{return' → logprob: -13.550200462341309

Token 494: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -8.77627644513268e-06
    2. 'Player' → logprob: -12.625008583068848
    3. '_PLAYER' → logprob: -13.500008583068848
    4. '_' → logprob: -13.500008583068848
    5. ' _' → logprob: -14.375008583068848
    6. 'player' → logprob: -14.750008583068848
    7. '_Player' → logprob: -15.125008583068848
    8. '_user' → logprob: -15.750008583068848
    9. '<Player' → logprob: -15.875008583068848
    10. '_players' → logprob: -16.000009536743164

Token 495: ' wins' (ID: 25327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4725029766559601
    2. '
' → logprob: -1.3475029468536377
    3. 'else' → logprob: -2.8475029468536377
    4. 'return' → logprob: -3.4725029468536377
    5. '           ' → logprob: -4.347503185272217
    6. ' else' → logprob: -5.097503185272217
    7. '
' → logprob: -5.847503185272217
    8. '   ' → logprob: -6.722503185272217
    9. '               ' → logprob: -7.222503185272217
    10. '<|end|>' → logprob: -7.222503185272217

Token 496: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12657903134822845
    2. '       ' → logprob: -2.5015790462493896
    3. '
' → logprob: -3.8765790462493896
    4. 'return' → logprob: -5.2515788078308105
    5. ',' → logprob: -5.3765788078308105
    6. ' return' → logprob: -6.3765788078308105
    7. '\n' → logprob: -7.0015788078308105
    8. '        
' → logprob: -7.0015788078308105
    9. '<|end|>' → logprob: -7.5015788078308105
    10. '.' → logprob: -8.001579284667969

Token 497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012754731578752398
    2. '       ' → logprob: -7.126275539398193
    3. ' if' → logprob: -8.251275062561035
    4. 'if' → logprob: -9.501275062561035
    5. 'return' → logprob: -9.751275062561035
    6. ',' → logprob: -10.376275062561035
    7. ' return' → logprob: -10.751275062561035
    8. '
' → logprob: -11.751275062561035
    9. '        
' → logprob: -12.626275062561035
    10. '               ' → logprob: -12.751275062561035

Token 498: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1051175594329834
    2. 'winner' → logprob: -1.4801175594329834
    3. 'if' → logprob: -1.7301175594329834
    4. '           ' → logprob: -1.9801175594329834
    5. ' winner' → logprob: -2.8551175594329834
    6. ' return' → logprob: -3.2301175594329834
    7. ' if' → logprob: -3.6051175594329834
    8. '       ' → logprob: -7.8551177978515625
    9. 'winning' → logprob: -8.230117797851562
    10. 'w' → logprob: -8.355117797851562

Token 499: ' So' (ID: 2632)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.7252041697502136
    2. 'if' → logprob: -1.2252042293548584
    3. ' winner' → logprob: -2.6002042293548584
    4. '           ' → logprob: -2.9752042293548584
    5. ' if' → logprob: -2.9752042293548584
    6. 'return' → logprob: -3.2252042293548584
    7. ' return' → logprob: -5.350203990936279
    8. 'los' → logprob: -7.850203990936279
    9. '       ' → logprob: -8.600204467773438
    10. ' loser' → logprob: -8.600204467773438

Token 500: ' winner' (ID: 19499)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4435237646102905
    2. ' return' → logprob: -1.5685237646102905
    3. ' winner' → logprob: -1.6935237646102905
    4. ' if' → logprob: -1.8185237646102905
    5. 'winner' → logprob: -2.19352388381958
    6. '       ' → logprob: -3.31852388381958
    7. 'if' → logprob: -3.56852388381958
    8. '           ' → logprob: -4.06852388381958
    9. 'result' → logprob: -4.81852388381958
    10. ' result' → logprob: -5.31852388381958

Token 501: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022706031799316
    2. '=' → logprob: -1.9102270603179932
    3. ' is' → logprob: -13.285226821899414
    4. ' ' → logprob: -14.910226821899414
    5. ':' → logprob: -15.910226821899414
    6. '```' → logprob: -15.910226821899414
    7. '           ' → logprob: -16.160226821899414
    8. '=self' → logprob: -16.410226821899414
    9. 'return' → logprob: -16.410226821899414
    10. 's' → logprob: -16.410226821899414

Token 502: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31328916549682617
    2. ' self' → logprob: -1.3132891654968262
    3. '(self' → logprob: -10.563289642333984
    4. '	self' → logprob: -14.438289642333984
    5. '
' → logprob: -14.688289642333984
    6. '   ' → logprob: -15.563289642333984
    7. '```' → logprob: -15.688289642333984
    8. '[self' → logprob: -15.938289642333984
    9. '=self' → logprob: -16.063289642333984
    10. ' ' → logprob: -16.688289642333984

Token 503: ' opponent' (ID: 38519)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007619171869009733
    2. ' self' → logprob: -5.632619380950928
    3. '
' → logprob: -5.882619380950928
    4. 'second' → logprob: -6.757619380950928
    5. '[self' → logprob: -10.38261890411377
    6. ' second' → logprob: -11.25761890411377
    7. '.second' → logprob: -12.00761890411377
    8. '```' → logprob: -12.88261890411377
    9. '
' → logprob: -13.00761890411377
    10. '(self' → logprob: -14.00761890411377

Token 504: ' of' (ID: 328)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9091638922691345
    2. '       ' → logprob: -1.6591639518737793
    3. ')' → logprob: -2.0341639518737793
    4. ':' → logprob: -2.4091639518737793
    5. '.' → logprob: -2.5341639518737793
    6. ',' → logprob: -4.159163951873779
    7. ' else' → logprob: -4.159163951873779
    8. 'if' → logprob: -4.284163951873779
    9. '
' → logprob: -4.534163951873779
    10. '           ' → logprob: -4.659163951873779

Token 505: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08833890408277512
    2. '(self' → logprob: -2.963338851928711
    3. ' self' → logprob: -3.588338851928711
    4. ' (' → logprob: -5.963338851928711
    5. 'first' → logprob: -6.463338851928711
    6. '(' → logprob: -8.338338851928711
    7. ' first' → logprob: -8.713338851928711
    8. 'the' → logprob: -9.213338851928711
    9. ' ' → logprob: -9.338338851928711
    10. '[self' → logprob: -9.338338851928711

Token 506: ' current' (ID: 2208)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.1741500049829483
    2. 'self' → logprob: -2.174149990081787
    3. ' first' → logprob: -3.174149990081787
    4. 'Player' → logprob: -7.049149990081787
    5. 'current' → logprob: -7.424149990081787
    6. '   ' → logprob: -7.674149990081787
    7. '[first' → logprob: -7.674149990081787
    8. ' self' → logprob: -7.799149990081787
    9. '(self' → logprob: -8.924150466918945
    10. 'if' → logprob: -8.924150466918945

Token 507: ' player' (ID: 5033)
  Prédit: '_player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.32037094235420227
    2. 'first' → logprob: -1.6953709125518799
    3. 'Player' → logprob: -3.32037091255188
    4. 'player' → logprob: -3.94537091255188
    5. '_first' → logprob: -4.070371150970459
    6. ' first' → logprob: -4.445371150970459
    7. ' player' → logprob: -5.945371150970459
    8. ' Player' → logprob: -7.320371150970459
    9. '_' → logprob: -7.820371150970459
    10. ' ' → logprob: -8.1953706741333

Token 508: ' who' (ID: 1218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20286798477172852
    2. '           ' → logprob: -2.4528679847717285
    3. '.' → logprob: -2.8278679847717285
    4. ',' → logprob: -3.8278679847717285
    5. '
' → logprob: -5.7028679847717285
    6. ':' → logprob: -5.9528679847717285
    7. ' =' → logprob: -6.2028679847717285
    8. ' if' → logprob: -6.3278679847717285
    9. '        
' → logprob: -6.3278679847717285
    10. '=' → logprob: -6.8278679847717285

Token 509: ' cannot' (ID: 6284)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -1.401909351348877
    2. 'has' → logprob: -1.651909351348877
    3. 'is' → logprob: -1.901909351348877
    4. ' cannot' → logprob: -2.151909351348877
    5. ' has' → logprob: -2.276909351348877
    6. ' is' → logprob: -2.401909351348877
    7. ' can't' → logprob: -3.276909351348877
    8. 'can't' → logprob: -3.776909351348877
    9. 'must' → logprob: -4.901909351348877
    10. ' must' → logprob: -5.151909351348877

Token 510: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.011412895284593105
    2. ' move' → logprob: -4.511413097381592
    3. 'make' → logprob: -8.761412620544434
    4. 'play' → logprob: -9.011412620544434
    5. '_move' → logprob: -9.761412620544434
    6. 'moves' → logprob: -11.511412620544434
    7. '	move' → logprob: -11.761412620544434
    8. 'm' → logprob: -12.511412620544434
    9. '   ' → logprob: -12.511412620544434
    10. '.move' → logprob: -13.886412620544434

Token 511: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015136415138840675
    2. '       ' → logprob: -4.640136241912842
    3. ' =' → logprob: -6.265136241912842
    4. '
' → logprob: -6.515136241912842
    5. ',' → logprob: -7.015136241912842
    6. '.' → logprob: -8.51513671875
    7. 'return' → logprob: -8.51513671875
    8. ' if' → logprob: -8.64013671875
    9. '        
' → logprob: -9.14013671875
    10. '=' → logprob: -9.26513671875

Token 512: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0353555828332901
    2. 'if' → logprob: -3.785355567932129
    3. ' if' → logprob: -5.160355567932129
    4. 'winner' → logprob: -5.285355567932129
    5. ' winner' → logprob: -7.160355567932129
    6. 'player' → logprob: -8.785355567932129
    7. '           ' → logprob: -8.910355567932129
    8. 'return' → logprob: -10.035355567932129
    9. 'current' → logprob: -10.035355567932129
    10. 'next' → logprob: -10.535355567932129

Token 513: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -0.01743711531162262
    2. ' winner' → logprob: -4.642436981201172
    3. 'if' → logprob: -5.517436981201172
    4. '       ' → logprob: -6.517436981201172
    5. 'self' → logprob: -6.892436981201172
    6. 'return' → logprob: -7.392436981201172
    7. '           ' → logprob: -7.767436981201172
    8. ' if' → logprob: -10.142436981201172
    9. 'result' → logprob: -10.517436981201172
    10. 'w' → logprob: -11.017436981201172

Token 514: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740773141384125
    2. '=' → logprob: -0.9740773439407349
    3. ':' → logprob: -15.599077224731445
    4. '=self' → logprob: -17.349077224731445
    5. '```' → logprob: -17.349077224731445
    6. 's' → logprob: -17.599077224731445
    7. '=}' → logprob: -17.724077224731445
    8. ' ' → logprob: -17.849077224731445
    9. '=

' → logprob: -17.974077224731445
    10. ')' → logprob: -18.349077224731445

Token 515: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.5716304410016164e-05
    2. ' self' → logprob: -10.250035285949707
    3. '(self' → logprob: -16.125036239624023
    4. '   ' → logprob: -16.500036239624023
    5. '       ' → logprob: -18.375036239624023
    6. '
' → logprob: -18.875036239624023
    7. '	self' → logprob: -19.625036239624023
    8. '[self' → logprob: -19.875036239624023
    9. '           ' → logprob: -20.125036239624023
    10. '=self' → logprob: -21.625036239624023

Token 516: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -0.029963139444589615
    2. '.first' → logprob: -3.529963254928589
    3. '.' → logprob: -8.529963493347168
    4. '.s' → logprob: -12.529963493347168
    5. 'second' → logprob: -13.029963493347168
    6. '.third' → logprob: -13.029963493347168
    7. '.f' → logprob: -13.654963493347168
    8. '.other' → logprob: -13.904963493347168
    9. '.se' → logprob: -14.029963493347168
    10. '	second' → logprob: -14.154963493347168

Token 517: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -1.1472419600977446e-06
    2. 'Player' → logprob: -14.875000953674316
    3. 'player' → logprob: -14.875000953674316
    4. '_PLAYER' → logprob: -16.125001907348633
    5. '_' → logprob: -16.250001907348633
    6. ' if' → logprob: -17.000001907348633
    7. '
' → logprob: -17.000001907348633
    8. '_play' → logprob: -17.250001907348633
    9. '_Player' → logprob: -17.375001907348633
    10. ' _' → logprob: -17.625001907348633

Token 518: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1810455024242401
    2. 'if' → logprob: -1.8060455322265625
    3. '       ' → logprob: -6.6810455322265625
    4. 'else' → logprob: -10.806045532226562
    5. '<|end|>' → logprob: -11.431045532226562
    6. '	if' → logprob: -12.556045532226562
    7. ' else' → logprob: -13.056045532226562
    8. ' ' → logprob: -13.181045532226562
    9. '           ' → logprob: -13.431045532226562
    10. '   ' → logprob: -13.431045532226562

Token 519: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0017072015907615423
    2. ' is' → logprob: -6.376707077026367
    3. '   ' → logprob: -12.501707077026367
    4. ' ' → logprob: -14.251707077026367
    5. 'not' → logprob: -14.501707077026367
    6. '  ' → logprob: -16.751707077026367
    7. '	is' → logprob: -17.126707077026367
    8. '           ' → logprob: -17.501707077026367
    9. '       ' → logprob: -18.126707077026367
    10. '    ' → logprob: -18.376707077026367

Token 520: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -1.2664456789934775e-06
    2. 'first' → logprob: -13.750000953674316
    3. 'First' → logprob: -17.375001907348633
    4. '_FIRST' → logprob: -18.375001907348633
    5. '[first' → logprob: -18.750001907348633
    6. '_f' → logprob: -18.875001907348633
    7. ' first' → logprob: -19.000001907348633
    8. '_' → logprob: -19.125001907348633
    9. '```' → logprob: -19.250001907348633
    10. '_second' → logprob: -19.375001907348633

Token 521: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -2.935296834039036e-06
    2. 'player' → logprob: -13.12500286102295
    3. 'Player' → logprob: -14.00000286102295
    4. '_user' → logprob: -16.875003814697266
    5. '_PLAYER' → logprob: -17.000003814697266
    6. '_players' → logprob: -18.000003814697266
    7. '_Player' → logprob: -18.250003814697266
    8. '_first' → logprob: -18.625003814697266
    9. '_play' → logprob: -18.750003814697266
    10. 'e' → logprob: -18.750003814697266

Token 522: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -1.3856492842023727e-06
    2. 'turn' → logprob: -13.625000953674316
    3. '_t' → logprob: -16.125001907348633
    4. '```' → logprob: -18.000001907348633
    5. '-turn' → logprob: -18.500001907348633
    6. ' _' → logprob: -18.625001907348633
    7. 'Turn' → logprob: -19.375001907348633
    8. 'eturn' → logprob: -19.875001907348633
    9. '_' → logprob: -20.375001907348633
    10. 'urn' → logprob: -20.875001907348633

Token 523: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10020699352025986
    2. 'else' → logprob: -2.3502070903778076
    3. '        ' → logprob: -16.47520637512207
    4. '
' → logprob: -16.60020637512207
    5. '       ' → logprob: -16.97520637512207
    6. '	else' → logprob: -17.35020637512207
    7. ' ' → logprob: -18.22520637512207
    8. '           ' → logprob: -18.47520637512207
    9. '         ' → logprob: -19.10020637512207
    10. '   ' → logprob: -19.35020637512207

Token 524: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006718452088534832
    2. ' self' → logprob: -5.006718635559082
    3. '           ' → logprob: -13.381718635559082
    4. '       ' → logprob: -13.881718635559082
    5. '	self' → logprob: -15.756718635559082
    6. '   ' → logprob: -16.131717681884766
    7. '(self' → logprob: -16.131717681884766
    8. 's' → logprob: -16.381717681884766
    9. '[self' → logprob: -16.506717681884766
    10. ' ' → logprob: -16.881717681884766

Token 525: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -2.236549335066229e-05
    2. 'first' → logprob: -11.000021934509277
    3. '.' → logprob: -12.125021934509277
    4. ' first' → logprob: -16.125022888183594
    5. ':first' → logprob: -16.625022888183594
    6. '.f' → logprob: -17.625022888183594
    7. ' .' → logprob: -17.750022888183594
    8. '.second' → logprob: -17.750022888183594
    9. '	first' → logprob: -18.125022888183594
    10. '   ' → logprob: -18.250022888183594

Token 526: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -3.054500666621607e-06
    2. 'Player' → logprob: -13.12500286102295
    3. 'player' → logprob: -14.50000286102295
    4. '_PLAYER' → logprob: -14.87500286102295
    5. '_user' → logprob: -16.750003814697266
    6. '_players' → logprob: -17.125003814697266
    7. '<Player' → logprob: -17.625003814697266
    8. '_Player' → logprob: -17.750003814697266
    9. '<|end|>' → logprob: -17.750003814697266
    10. '   ' → logprob: -18.500003814697266

Token 527: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007773502147756517
    2. '<|end|>' → logprob: -8.500777244567871
    3. ')' → logprob: -8.750777244567871
    4. '           ' → logprob: -8.875777244567871
    5. '
' → logprob: -8.875777244567871
    6. '        
' → logprob: -10.125777244567871
    7. 'else' → logprob: -10.875777244567871
    8. ',' → logprob: -10.875777244567871
    9. '.' → logprob: -11.500777244567871
    10. '               ' → logprob: -11.750777244567871

Token 528: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004410059191286564
    2. '           ' → logprob: -5.504410266876221
    3. 'self' → logprob: -8.129409790039062
    4. ' self' → logprob: -10.879409790039062
    5. '   ' → logprob: -11.879409790039062
    6. 'else' → logprob: -12.504409790039062
    7. '
' → logprob: -12.629409790039062
    8. '        
' → logprob: -13.004409790039062
    9. '               ' → logprob: -14.504409790039062
    10. ',' → logprob: -14.879409790039062

Token 529: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5963899493217468
    2. 'self' (adapté à ' self') → logprob: -0.8463899493217468
    3. ' self' → logprob: -3.9713900089263916
    4. '           ' → logprob: -6.5963897705078125
    5. 'return' → logprob: -10.846389770507812
    6. '   ' → logprob: -12.596389770507812
    7. '        
' → logprob: -13.096389770507812
    8. '
' → logprob: -13.721389770507812
    9. '	self' → logprob: -13.971389770507812
    10. ',' → logprob: -14.346389770507812

Token 530: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.0004688034241553396
    2. '.' → logprob: -8.375469207763672
    3. '.mem' → logprob: -8.750469207763672
    4. '.memory' → logprob: -9.875469207763672
    5. ' .' → logprob: -11.250469207763672
    6. '.m' → logprob: -11.625469207763672
    7. '.mime' → logprob: -12.875469207763672
    8. 'memo' → logprob: -14.000469207763672
    9. '.micro' → logprob: -14.125469207763672
    10. '.mn' → logprob: -14.625469207763672

Token 531: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. '[k' → logprob: -20.5
    4. '[token' → logprob: -21.625
    5. ' [' → logprob: -21.875
    6. 'key' → logprob: -22.625
    7. ')[' → logprob: -22.625
    8. '[state' → logprob: -22.875
    9. '
' → logprob: -23.0
    10. '[
' → logprob: -23.0

Token 532: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08101001381874084
    2. '=' → logprob: -2.831010103225708
    3. ' =' → logprob: -4.206009864807129
    4. ']=' → logprob: -5.706009864807129
    5. ' ]' → logprob: -7.456009864807129
    6. ')' → logprob: -9.956009864807129
    7. ' ' → logprob: -12.581009864807129
    8. ')=' → logprob: -14.456009864807129
    9. 'return' → logprob: -15.206009864807129
    10. ' )' → logprob: -15.456009864807129

Token 533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '=
' → logprob: -16.143150329589844
    4. 'return' → logprob: -17.018150329589844
    5. ' ' → logprob: -17.643150329589844
    6. ']=' → logprob: -17.893150329589844
    7. '.=' → logprob: -18.893150329589844
    8. '[' → logprob: -19.143150329589844
    9. ']' → logprob: -19.393150329589844
    10. '.' → logprob: -19.518150329589844

Token 534: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.0040835049003362656
    2. ' winner' → logprob: -5.504083633422852
    3. 'w' → logprob: -12.254083633422852
    4. 'win' → logprob: -15.129083633422852
    5. 'Winner' → logprob: -18.37908363342285
    6. 'winning' → logprob: -18.62908363342285
    7. 'won' → logprob: -18.87908363342285
    8. 'writer' → logprob: -19.12908363342285
    9. '(w' → logprob: -19.62908363342285
    10. '	w' → logprob: -19.87908363342285

Token 535: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041267683263868093
    2. '       ' → logprob: -8.250412940979004
    3. 'return' → logprob: -8.875412940979004
    4. ' return' → logprob: -12.750412940979004
    5. '               ' → logprob: -13.125412940979004
    6. '
' → logprob: -13.250412940979004
    7. '   ' → logprob: -13.375412940979004
    8. '<|end|>' → logprob: -13.750412940979004
    9. ',' → logprob: -14.375412940979004
    10. '	       ' → logprob: -15.125412940979004

Token 536: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007653369102627039
    2. '       ' → logprob: -5.00765323638916
    3. 'return' → logprob: -7.00765323638916
    4. ' return' → logprob: -10.88265323638916
    5. '<|end|>' → logprob: -12.38265323638916
    6. '   ' → logprob: -12.50765323638916
    7. '               ' → logprob: -13.63265323638916
    8. '
' → logprob: -14.00765323638916
    9. ',' → logprob: -14.13265323638916
    10. '	       ' → logprob: -14.38265323638916

Token 537: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5804489850997925
    2. 'return' (adapté à ' return') → logprob: -0.8304489850997925
    3. ' return' → logprob: -5.455449104309082
    4. '       ' → logprob: -8.455449104309082
    5. '   ' → logprob: -11.455449104309082
    6. '	return' → logprob: -14.205449104309082
    7. '               ' → logprob: -14.455449104309082
    8. '          ' → logprob: -14.580449104309082
    9. '{return' → logprob: -14.830449104309082
    10. 'eturn' → logprob: -15.580449104309082

Token 538: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -1.723973582556937e-05
    2. ' winner' → logprob: -11.000017166137695
    3. 'w' → logprob: -14.625017166137695
    4. 'win' → logprob: -18.000017166137695
    5. 'writer' → logprob: -20.500017166137695
    6. 'winning' → logprob: -20.875017166137695
    7. 'self' → logprob: -21.500017166137695
    8. 'owner' → logprob: -21.625017166137695
    9. '	w' → logprob: -21.875017166137695
    10. 'won' → logprob: -22.250017166137695

Token 539: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009698724374175072
    2. '        
' → logprob: -4.759698867797852
    3. 'next' → logprob: -7.759698867797852
    4. ' next' → logprob: -8.759698867797852
    5. '
' → logprob: -9.134698867797852
    6. '    
' → logprob: -9.259698867797852
    7. '<|end|>' → logprob: -9.384698867797852
    8. '  
' → logprob: -9.759698867797852
    9. 'Next' → logprob: -9.884698867797852
    10. '   ' → logprob: -11.009698867797852

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00577615387737751
    2. 'next' → logprob: -5.2557759284973145
    3. '        
' → logprob: -7.8807759284973145
    4. 'for' → logprob: -9.755776405334473
    5. ' next' → logprob: -10.505776405334473
    6. 'possible' → logprob: -10.630776405334473
    7. '
' → logprob: -11.630776405334473
    8. '   ' → logprob: -11.755776405334473
    9. 'states' → logprob: -11.880776405334473
    10. '    
' → logprob: -11.880776405334473

Token 541: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.6059328317642212
    2. 'current' → logprob: -0.9809328317642212
    3. '       ' → logprob: -3.6059327125549316
    4. 'if' → logprob: -3.6059327125549316
    5. 'possible' → logprob: -4.105932712554932
    6. 'player' → logprob: -5.230932712554932
    7. ' next' → logprob: -6.605932712554932
    8. ' current' → logprob: -7.230932712554932
    9. 'players' → logprob: -7.980932712554932
    10. 'for' → logprob: -8.23093318939209

Token 542: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.3663626305060461e-05
    2. 'states' → logprob: -11.62501335144043
    3. '_' → logprob: -13.12501335144043
    4. '_state' → logprob: -14.00001335144043
    5. '_next' → logprob: -14.37501335144043
    6. 'States' → logprob: -14.62501335144043
    7. ' states' → logprob: -15.12501335144043
    8. '_players' → logprob: -16.12501335144043
    9. '_possible' → logprob: -16.25001335144043
    10. 'for' → logprob: -16.50001335144043

Token 543: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. ':' → logprob: -13.75192928314209
    4. ' ' → logprob: -15.87692928314209
    5. 's' → logprob: -16.876930236816406
    6. '()' → logprob: -17.626930236816406
    7. 'for' → logprob: -18.251930236816406
    8. ' :' → logprob: -18.876930236816406
    9. '   ' → logprob: -19.126930236816406
    10. '    ' → logprob: -19.626930236816406

Token 544: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0067154900170862675
    2. ' state' → logprob: -5.006715297698975
    3. '[state' → logprob: -15.881715774536133
    4. '	state' → logprob: -17.881715774536133
    5. '(state' → logprob: -18.381715774536133
    6. '[' → logprob: -18.881715774536133
    7. '   ' → logprob: -19.131715774536133
    8. ' ' → logprob: -20.881715774536133
    9. 'State' → logprob: -22.256715774536133
    10. ' [' → logprob: -22.381715774536133

Token 545: '.generate' (ID: 33917)
  Prédit: '.generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.generate' → logprob: -0.0005535095697268844
    2. '.' → logprob: -7.500553607940674
    3. ' .' → logprob: -14.750553131103516
    4. '.gener' → logprob: -18.750553131103516
    5. 'generate' → logprob: -19.250553131103516
    6. '.create' → logprob: -19.375553131103516
    7. '.generated' → logprob: -19.375553131103516
    8. '.Generate' → logprob: -19.750553131103516
    9. '.get' → logprob: -19.875553131103516
    10. '.evaluate' → logprob: -20.000553131103516

Token 546: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -9.014684110297821e-06
    2. 'next' → logprob: -11.625008583068848
    3. '```' → logprob: -17.000009536743164
    4. '__' → logprob: -18.625009536743164
    5. '_' → logprob: -18.750009536743164
    6. '_to' → logprob: -18.875009536743164
    7. 'Next' → logprob: -18.875009536743164
    8. '._' → logprob: -19.125009536743164
    9. '"_' → logprob: -19.375009536743164
    10. '_new' → logprob: -19.625009536743164

Token 547: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -6.704273118884885e-07
    2. '_state' → logprob: -15.000000953674316
    3. 'states' → logprob: -15.375000953674316
    4. 'States' → logprob: -17.75
    5. '```' → logprob: -17.875
    6. ' states' → logprob: -18.0
    7. 's' → logprob: -18.125
    8. '_' → logprob: -18.375
    9. '_next' → logprob: -18.75
    10. '_stats' → logprob: -19.125

Token 548: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1894010454416275
    2. '       ' → logprob: -2.189401149749756
    3. '()
' → logprob: -2.814401149749756
    4. '
' → logprob: -8.064400672912598
    5. '        
' → logprob: -9.064400672912598
    6. 'for' → logprob: -9.564400672912598
    7. '()

' → logprob: -10.064400672912598
    8. '(' → logprob: -11.314400672912598
    9. ' for' → logprob: -11.439400672912598
    10. ':' → logprob: -11.564400672912598

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09326338768005371
    2. 'for' → logprob: -2.5932633876800537
    3. ' for' → logprob: -4.343263626098633
    4. 'current' → logprob: -7.718263626098633
    5. '        
' → logprob: -8.593263626098633
    6. 'if' → logprob: -8.593263626098633
    7. 'winner' → logprob: -8.593263626098633
    8. 'next' → logprob: -9.093263626098633
    9. ' current' → logprob: -10.218263626098633
    10. 'possible' → logprob: -10.343263626098633

Token 550: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.021113522350788116
    2. '       ' → logprob: -4.271113395690918
    3. 'for' → logprob: -5.021113395690918
    4. ' if' → logprob: -8.146113395690918
    5. 'current' → logprob: -11.146113395690918
    6. 'next' → logprob: -11.396113395690918
    7. '        
' → logprob: -12.396113395690918
    8. ' for' → logprob: -13.021113395690918
    9. 'winner' → logprob: -13.021113395690918
    10. '#' → logprob: -13.396113395690918

Token 551: ' not' (ID: 625)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.06200476363301277
    2. ' is' → logprob: -2.812004804611206
    3. '   ' → logprob: -10.437005043029785
    4. '
' → logprob: -13.187005043029785
    5. 'not' → logprob: -13.437005043029785
    6. ' ' → logprob: -13.812005043029785
    7. '	is' → logprob: -13.812005043029785
    8. '    ' → logprob: -14.562005043029785
    9. ' not' → logprob: -14.562005043029785
    10. '       ' → logprob: -15.062005043029785

Token 552: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.14290271699428558
    2. 'next' → logprob: -2.0179026126861572
    3. ' any' → logprob: -8.642902374267578
    4. 'any' → logprob: -11.267902374267578
    5. '(next' → logprob: -11.517902374267578
    6. '	next' → logprob: -12.017902374267578
    7. '[next' → logprob: -12.142902374267578
    8. ' ' → logprob: -12.267902374267578
    9. '.next' → logprob: -12.892902374267578
    10. ' is' → logprob: -13.017902374267578

Token 553: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -8.661626634420827e-05
    2. 'states' → logprob: -9.750086784362793
    3. 'States' → logprob: -11.125086784362793
    4. '_' → logprob: -12.750086784362793
    5. ' states' → logprob: -12.875086784362793
    6. '_state' → logprob: -13.375086784362793
    7. 'next' → logprob: -13.625086784362793
    8. '_next' → logprob: -13.750086784362793
    9. 's' → logprob: -14.500086784362793
    10. '   ' → logprob: -15.125086784362793

Token 554: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014201588928699493
    2. ':
' → logprob: -4.264201641082764
    3. ':return' → logprob: -10.764201164245605
    4. ' :' → logprob: -11.389201164245605
    5. ':
' → logprob: -13.014201164245605
    6. '):' → logprob: -14.014201164245605
    7. '<|end|>' → logprob: -14.014201164245605
    8. ':

' → logprob: -14.764201164245605
    9. '       ' → logprob: -15.014201164245605
    10. ' :
' → logprob: -15.139201164245605

Token 555: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11167558282613754
    2. '       ' → logprob: -2.736675500869751
    3. '#' → logprob: -4.36167573928833
    4. ':' → logprob: -4.73667573928833
    5. ' for' → logprob: -5.98667573928833
    6. ' if' → logprob: -6.23667573928833
    7. ' #' → logprob: -6.36167573928833
    8. ' winner' → logprob: -6.36167573928833
    9. ':
' → logprob: -6.48667573928833
    10. '        
' → logprob: -6.48667573928833

Token 556: ' #' (ID: 1069)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.014791036024689674
    2. '           ' → logprob: -4.639791011810303
    3. 'op' → logprob: -6.264791011810303
    4. ' winner' → logprob: -6.389791011810303
    5. '       ' → logprob: -7.014791011810303
    6. 'w' → logprob: -8.514791488647461
    7. '
' → logprob: -9.764791488647461
    8. '#' (adapté à ' #') → logprob: -9.764791488647461
    9. 'self' → logprob: -10.389791488647461
    10. '        
' → logprob: -10.639791488647461

Token 557: ' No' (ID: 3004)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.0015409269835799932
    2. '#' → logprob: -6.6265411376953125
    3. '       ' → logprob: -8.876541137695312
    4. ' winner' → logprob: -9.751541137695312
    5. '           ' → logprob: -11.626541137695312
    6. '#w' → logprob: -13.376541137695312
    7. 'op' → logprob: -13.501541137695312
    8. '   ' → logprob: -13.626541137695312
    9. 'winning' → logprob: -14.251541137695312
    10. ' #' → logprob: -14.376541137695312

Token 558: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.16005796194076538
    2. ' moves' → logprob: -2.91005802154541
    3. 'winner' → logprob: -3.03505802154541
    4. ' winner' → logprob: -3.91005802154541
    5. '_moves' → logprob: -4.28505802154541
    6. '#' → logprob: -5.53505802154541
    7. 'possible' → logprob: -5.78505802154541
    8. 'next' → logprob: -6.78505802154541
    9. ' possible' → logprob: -7.66005802154541
    10. '
' → logprob: -7.66005802154541

Token 559: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08518930524587631
    2. ':' → logprob: -3.7101893424987793
    3. ':
' → logprob: -4.210189342498779
    4. '=' → logprob: -4.335189342498779
    5. ' available' → logprob: -4.710189342498779
    6. '       ' → logprob: -4.835189342498779
    7. ' =' → logprob: -4.960189342498779
    8. 'available' → logprob: -6.210189342498779
    9. ',' → logprob: -6.960189342498779
    10. ' =>' → logprob: -7.460189342498779

Token 560: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04482637345790863
    2. ',' → logprob: -3.6698262691497803
    3. ':' → logprob: -4.794826507568359
    4. '
' → logprob: -5.919826507568359
    5. '       ' → logprob: -5.919826507568359
    6. ':
' → logprob: -6.169826507568359
    7. '=' → logprob: -7.044826507568359
    8. '            
' → logprob: -7.794826507568359
    9. '<|end|>' → logprob: -8.54482650756836
    10. '               ' → logprob: -8.79482650756836

Token 561: ' current' (ID: 2208)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.015614904463291168
    2. ' winner' → logprob: -4.390614986419678
    3. '           ' → logprob: -5.890614986419678
    4. '       ' → logprob: -8.76561450958252
    5. 'w' → logprob: -9.51561450958252
    6. '#' → logprob: -9.76561450958252
    7. 'return' → logprob: -11.51561450958252
    8. 'op' → logprob: -11.64061450958252
    9. '#w' → logprob: -11.64061450958252
    10. '   ' → logprob: -12.89061450958252

Token 562: ' player' (ID: 5033)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.5479573607444763
    2. '_player' → logprob: -0.9229573607444763
    3. ' player' → logprob: -4.672957420349121
    4. '_w' → logprob: -4.797957420349121
    5. 'winner' → logprob: -5.172957420349121
    6. '_turn' → logprob: -7.672957420349121
    7. 'turn' → logprob: -8.422957420349121
    8. ' winner' → logprob: -9.422957420349121
    9. 'w' → logprob: -9.922957420349121
    10. ' =' → logprob: -10.047957420349121

Token 563: ' loses' (ID: 63582)
  Prédit: 'los'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'los' → logprob: -0.12731558084487915
    2. ' loses' → logprob: -2.1273155212402344
    3. 'wins' → logprob: -8.752315521240234
    4. 'lo' → logprob: -9.752315521240234
    5. 'lose' → logprob: -10.252315521240234
    6. '   ' → logprob: -10.252315521240234
    7. '           ' → logprob: -10.752315521240234
    8. 'fails' → logprob: -11.627315521240234
    9. '       ' → logprob: -11.752315521240234
    10. '```' → logprob: -11.752315521240234

Token 564: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02901659905910492
    2. '
' → logprob: -3.9040164947509766
    3. '       ' → logprob: -5.404016494750977
    4. ',' → logprob: -6.154016494750977
    5. '=' → logprob: -7.154016494750977
    6. ' =' → logprob: -8.029016494750977
    7. '        
' → logprob: -8.654016494750977
    8. ' and' → logprob: -9.154016494750977
    9. '            
' → logprob: -9.154016494750977
    10. '<|end|>' → logprob: -9.404016494750977

Token 565: ' opponent' (ID: 38519)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.6114678978919983
    2. ' winner' → logprob: -1.3614678382873535
    3. 'return' → logprob: -2.3614678382873535
    4. ' return' → logprob: -2.6114678382873535
    5. 'self' → logprob: -3.9864678382873535
    6. ' self' → logprob: -4.9864678382873535
    7. ' opponent' → logprob: -5.8614678382873535
    8. 'w' → logprob: -6.2364678382873535
    9. 'op' → logprob: -6.9864678382873535
    10. '       ' → logprob: -7.6114678382873535

Token 566: ' wins' (ID: 25327)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wins' → logprob: -0.2678011655807495
    2. '_w' → logprob: -1.7678011655807495
    3. ' wins' → logprob: -3.392801284790039
    4. ' =' → logprob: -3.642801284790039
    5. '=' → logprob: -6.017801284790039
    6. 'winner' → logprob: -7.267801284790039
    7. 'w' → logprob: -7.767801284790039
    8. '   ' → logprob: -8.517801284790039
    9. '_player' → logprob: -9.392801284790039
    10. ' ' → logprob: -9.642801284790039

Token 567: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050086427479982376
    2. '
' → logprob: -3.675086498260498
    3. '       ' → logprob: -3.925086498260498
    4. ',' → logprob: -7.300086498260498
    5. '        
' → logprob: -7.425086498260498
    6. '=' → logprob: -7.800086498260498
    7. ' =' → logprob: -8.05008602142334
    8. '            
' → logprob: -8.17508602142334
    9. ')
' → logprob: -8.30008602142334
    10. ')' → logprob: -8.30008602142334

Token 568: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006447488442063332
    2. '       ' → logprob: -5.3814473152160645
    3. ',' → logprob: -7.2564473152160645
    4. '
' → logprob: -8.256447792053223
    5. ' =' → logprob: -8.506447792053223
    6. '<|end|>' → logprob: -8.756447792053223
    7. '=' → logprob: -8.881447792053223
    8. 'winner' → logprob: -9.506447792053223
    9. '        
' → logprob: -9.881447792053223
    10. '            
' → logprob: -9.881447792053223

Token 569: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -0.0015662844525650144
    2. ' winner' → logprob: -6.626566410064697
    3. '       ' → logprob: -8.626565933227539
    4. '           ' → logprob: -10.251565933227539
    5. 'w' → logprob: -10.751565933227539
    6. 'self' → logprob: -13.376565933227539
    7. 'winning' → logprob: -14.376565933227539
    8. 'return' → logprob: -14.501565933227539
    9. '   ' → logprob: -14.876565933227539
    10. '        
' → logprob: -15.376565933227539

Token 570: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. ' ' → logprob: -14.951414108276367
    4. '=

' → logprob: -16.701414108276367
    5. '=
' → logprob: -16.951414108276367
    6. '   ' → logprob: -17.076414108276367
    7. 's' → logprob: -17.201414108276367
    8. '=self' → logprob: -17.201414108276367
    9. 'w' → logprob: -17.701414108276367
    10. ' =
' → logprob: -17.826414108276367

Token 571: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018150178715586662
    2. ' self' → logprob: -4.018150329589844
    3. '(self' → logprob: -15.768150329589844
    4. ' ' → logprob: -17.518150329589844
    5. '=self' → logprob: -17.518150329589844
    6. '[self' → logprob: -17.518150329589844
    7. '   ' → logprob: -17.643150329589844
    8. '	self' → logprob: -17.893150329589844
    9. '       ' → logprob: -19.518150329589844
    10. ' ' → logprob: -20.143150329589844

Token 572: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -0.0010555570479482412
    2. '.first' → logprob: -6.876055717468262
    3. 'second' → logprob: -11.126055717468262
    4. '.' → logprob: -12.126055717468262
    5. '.third' → logprob: -13.626055717468262
    6. '	second' → logprob: -14.001055717468262
    7. ' .' → logprob: -16.001054763793945
    8. '.s' → logprob: -16.126054763793945
    9. '.other' → logprob: -16.126054763793945
    10. ' second' → logprob: -16.501054763793945

Token 573: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -9.088346359931165e-07
    2. 'player' → logprob: -14.125000953674316
    3. 'Player' → logprob: -16.25
    4. '_PLAYER' → logprob: -16.875
    5. '_play' → logprob: -19.375
    6. '_' → logprob: -19.375
    7. ' player' → logprob: -20.0
    8. '_Player' → logprob: -20.0
    9. '-player' → logprob: -20.0
    10. '_user' → logprob: -20.5

Token 574: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.029756393283605576
    2. ' is' → logprob: -3.5297563076019287
    3. 'not' → logprob: -12.154756546020508
    4. '   ' → logprob: -15.154756546020508
    5. ' not' → logprob: -15.529756546020508
    6. '           ' → logprob: -16.654756546020508
    7. ' ' → logprob: -17.529756546020508
    8. '	is' → logprob: -18.279756546020508
    9. '       ' → logprob: -18.529756546020508
    10. '    ' → logprob: -19.029756546020508

Token 576: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0013315484393388033
    2. 'first' → logprob: -6.626331329345703
    3. 'not' → logprob: -13.376331329345703
    4. '_last' → logprob: -13.626331329345703
    5. 'First' → logprob: -14.001331329345703
    6. 'is' → logprob: -14.126331329345703
    7. '_current' → logprob: -14.501331329345703
    8. '_FIRST' → logprob: -15.626331329345703
    9. 'f' → logprob: -15.751331329345703
    10. ' first' → logprob: -15.876331329345703

Token 577: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -5.073596548754722e-05
    2. 'player' → logprob: -10.00005054473877
    3. '_first' → logprob: -12.62505054473877
    4. 'first' → logprob: -13.37505054473877
    5. 'Player' → logprob: -15.12505054473877
    6. '_PLAYER' → logprob: -16.500051498413086
    7. '_user' → logprob: -16.500051498413086
    8. ' player' → logprob: -17.875051498413086
    9. '```' → logprob: -19.250051498413086
    10. '_players' → logprob: -19.625051498413086

Token 578: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.0019294669618830085
    2. 'turn' → logprob: -6.25192928314209
    3. 'Turn' → logprob: -15.25192928314209
    4. '-turn' → logprob: -15.37692928314209
    5. 'eturn' → logprob: -15.50192928314209
    6. 'urn' → logprob: -16.501930236816406
    7. ' turn' → logprob: -17.251930236816406
    8. '_' → logprob: -17.501930236816406
    9. '_t' → logprob: -17.626930236816406
    10. 'else' → logprob: -17.751930236816406

Token 579: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16022615134716034
    2. 'else' → logprob: -1.9102261066436768
    3. '        ' → logprob: -13.285225868225098
    4. '         ' → logprob: -15.785225868225098
    5. '	else' → logprob: -16.035226821899414
    6. ' ' → logprob: -17.535226821899414
    7. '          ' → logprob: -17.660226821899414
    8. '       ' → logprob: -17.660226821899414
    9. '            ' → logprob: -17.660226821899414
    10. '_else' → logprob: -18.160226821899414

Token 580: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00861528143286705
    2. ' self' → logprob: -4.758615493774414
    3. '           ' → logprob: -15.508615493774414
    4. '       ' → logprob: -15.758615493774414
    5. '	self' → logprob: -16.133615493774414
    6. ' ' → logprob: -16.258615493774414
    7. '(self' → logprob: -16.383615493774414
    8. '[self' → logprob: -16.758615493774414
    9. '=self' → logprob: -17.258615493774414
    10. '<|end|>' → logprob: -17.383615493774414

Token 581: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -9.13388703338569e-06
    2. 'first' → logprob: -11.625009536743164
    3. '.' → logprob: -16.500009536743164
    4. '.f' → logprob: -17.375009536743164
    5. '	first' → logprob: -18.875009536743164
    6. '.second' → logprob: -19.000009536743164
    7. ' .' → logprob: -19.250009536743164
    8. ' first' → logprob: -19.500009536743164
    9. 'First' → logprob: -19.750009536743164
    10. ':first' → logprob: -19.750009536743164

Token 582: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -1.9361264946837764e-07
    2. 'player' → logprob: -16.25
    3. 'Player' → logprob: -16.75
    4. '_PLAYER' → logprob: -17.5
    5. '_play' → logprob: -18.375
    6. '   ' → logprob: -19.0
    7. '_' → logprob: -19.25
    8. '_user' → logprob: -19.5
    9. ' player' → logprob: -19.875
    10. '_Player' → logprob: -20.5

Token 583: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0402582623064518
    2. '       ' → logprob: -3.4152581691741943
    3. 'self' → logprob: -5.040258407592773
    4. '
' → logprob: -9.915258407592773
    5. ' self' → logprob: -10.290258407592773
    6. 'return' → logprob: -11.540258407592773
    7. ',' → logprob: -12.415258407592773
    8. '               ' → logprob: -12.540258407592773
    9. '   ' → logprob: -12.665258407592773
    10. '<|end|>' → logprob: -12.915258407592773

Token 584: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031990062445402145
    2. '       ' → logprob: -3.5319900512695312
    3. 'self' → logprob: -6.906990051269531
    4. ')' → logprob: -7.031990051269531
    5. '
' → logprob: -9.156990051269531
    6. ')
' → logprob: -9.156990051269531
    7. '<|end|>' → logprob: -10.031990051269531
    8. '               ' → logprob: -10.656990051269531
    9. ' self' → logprob: -11.156990051269531
    10. '            
' → logprob: -11.781990051269531

Token 585: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5471546649932861
    2. 'self' (adapté à ' self') → logprob: -1.2971546649932861
    3. '       ' → logprob: -2.297154664993286
    4. ' self' → logprob: -3.047154664993286
    5. '   ' → logprob: -9.922154426574707
    6. ' ' → logprob: -12.297154426574707
    7. 'return' → logprob: -13.297154426574707
    8. '	self' → logprob: -13.547154426574707
    9. '               ' → logprob: -13.922154426574707
    10. '          ' → logprob: -14.547154426574707

Token 586: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -5.347765181795694e-05
    2. '.' → logprob: -10.250053405761719
    3. '.memory' → logprob: -11.625053405761719
    4. '.mem' → logprob: -12.125053405761719
    5. 'memo' → logprob: -12.750053405761719
    6. ' .' → logprob: -14.875053405761719
    7. '.mime' → logprob: -16.12505340576172
    8. '.
' → logprob: -17.50005340576172
    9. '.mn' → logprob: -17.50005340576172
    10. ' memo' → logprob: -17.75005340576172

Token 587: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.500000953674316
    3. 'key' → logprob: -18.875
    4. '[token' → logprob: -19.625
    5. ' [' → logprob: -19.75
    6. '[
' → logprob: -20.625
    7. '[k' → logprob: -20.875
    8. ' key' → logprob: -21.375
    9. '```' → logprob: -21.625
    10. ',key' → logprob: -21.625

Token 588: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01887255348265171
    2. ']=' → logprob: -4.5188727378845215
    3. '=' → logprob: -4.8938727378845215
    4. ' =' → logprob: -8.893872261047363
    5. ')' → logprob: -9.268872261047363
    6. '[key' → logprob: -10.143872261047363
    7. ' ]' → logprob: -11.018872261047363
    8. '[' → logprob: -11.768872261047363
    9. ')=' → logprob: -12.518872261047363
    10. '   ' → logprob: -13.893872261047363

Token 589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019370813388377428
    2. ' =' → logprob: -6.251936912536621
    3. ']' → logprob: -12.626936912536621
    4. ']=' → logprob: -12.876936912536621
    5. '[key' → logprob: -13.501936912536621
    6. '[' → logprob: -14.376936912536621
    7. ')' → logprob: -15.001936912536621
    8. ')=' → logprob: -15.876936912536621
    9. '=
' → logprob: -16.001937866210938
    10. '   ' → logprob: -17.751937866210938

Token 590: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.003202550346031785
    2. ' winner' → logprob: -5.753202438354492
    3. 'w' → logprob: -10.628202438354492
    4. 'win' → logprob: -14.628202438354492
    5. '	w' → logprob: -17.503202438354492
    6. 'writer' → logprob: -18.003202438354492
    7. 'Winner' → logprob: -18.003202438354492
    8. 'winning' → logprob: -18.003202438354492
    9. '   ' → logprob: -18.378202438354492
    10. 'won' → logprob: -18.628202438354492

Token 591: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033760786755010486
    2. '       ' → logprob: -8.625337600708008
    3. 'return' → logprob: -9.000337600708008
    4. '<|end|>' → logprob: -11.250337600708008
    5. '   ' → logprob: -12.500337600708008
    6. '               ' → logprob: -12.500337600708008
    7. ',' → logprob: -12.500337600708008
    8. '          ' → logprob: -13.000337600708008
    9. ')' → logprob: -13.375337600708008
    10. ' return' → logprob: -13.625337600708008

Token 592: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011465342715382576
    2. '       ' → logprob: -4.511465549468994
    3. 'return' → logprob: -8.136465072631836
    4. '
' → logprob: -10.386465072631836
    5. '   ' → logprob: -10.636465072631836
    6. ')' → logprob: -11.386465072631836
    7. '<|end|>' → logprob: -11.511465072631836
    8. '        
' → logprob: -11.636465072631836
    9. '               ' → logprob: -12.011465072631836
    10. '            
' → logprob: -12.261465072631836

Token 593: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.036282382905483246
    2. '           ' → logprob: -4.036282539367676
    3. ' return' → logprob: -4.036282539367676
    4. '       ' → logprob: -8.161282539367676
    5. '   ' → logprob: -10.911282539367676
    6. '	return' → logprob: -13.911282539367676
    7. '               ' → logprob: -15.161282539367676
    8. '{return' → logprob: -15.411282539367676
    9. 'eturn' → logprob: -15.661282539367676
    10. ':return' → logprob: -15.786282539367676

Token 594: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.061969030648469925
    2. ' winner' → logprob: -2.811969041824341
    3. 'w' → logprob: -13.561968803405762
    4. 'Winner' → logprob: -16.561969757080078
    5. 'win' → logprob: -17.811969757080078
    6. '	w' → logprob: -20.561969757080078
    7. 'self' → logprob: -20.686969757080078
    8. '>w' → logprob: -21.311969757080078
    9. 'writer' → logprob: -21.436969757080078
    10. ' winnaar' → logprob: -21.686969757080078

Token 595: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009309752844274044
    2. '
' → logprob: -5.384309768676758
    3. ' for' → logprob: -5.759309768676758
    4. '        
' → logprob: -7.259309768676758
    5. 'for' → logprob: -8.134309768676758
    6. ' next' → logprob: -8.634309768676758
    7. 'next' → logprob: -9.384309768676758
    8. '<|end|>' → logprob: -9.384309768676758
    9. ' 
' → logprob: -10.384309768676758
    10. '  
' → logprob: -10.634309768676758

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12076584994792938
    2. 'for' → logprob: -2.2457659244537354
    3. ' for' → logprob: -4.870765686035156
    4. '        
' → logprob: -8.745765686035156
    5. 'next' → logprob: -10.120765686035156
    6. 'best' → logprob: -11.370765686035156
    7. 'winner' → logprob: -11.870765686035156
    8. '
' → logprob: -12.245765686035156
    9. '```' → logprob: -12.495765686035156
    10. '   ' → logprob: -12.745765686035156

Token 597: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5787387490272522
    2. 'for' → logprob: -1.0787386894226074
    3. '       ' → logprob: -2.3287386894226074
    4. ' if' → logprob: -6.953738689422607
    5. ' for' → logprob: -7.328738689422607
    6. 'next' → logprob: -8.953739166259766
    7. '        
' → logprob: -9.578739166259766
    8. 'winner' → logprob: -9.953739166259766
    9. 'possible' → logprob: -10.828739166259766
    10. 'current' → logprob: -10.953739166259766

Token 598: ' Current' (ID: 14536)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0023290286771953106
    2. 'current' → logprob: -7.002328872680664
    3. 'for' → logprob: -7.127328872680664
    4. '#' → logprob: -8.627328872680664
    5. 'results' → logprob: -9.252328872680664
    6. 'next' → logprob: -9.377328872680664
    7. 'If' → logprob: -9.752328872680664
    8. 'w' → logprob: -9.877328872680664
    9. 'possible' → logprob: -9.877328872680664
    10. ' if' → logprob: -10.002328872680664

Token 599: ' player' (ID: 5033)
  Prédit: '_player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.23307254910469055
    2. 'player' → logprob: -1.6080725193023682
    3. 'for' → logprob: -5.233072757720947
    4. '_turn' → logprob: -7.233072757720947
    5. '_w' → logprob: -7.608072757720947
    6. ' player' → logprob: -7.608072757720947
    7. 'turn' → logprob: -8.858072280883789
    8. 'winner' → logprob: -8.983072280883789
    9. ' for' → logprob: -9.358072280883789
    10. 'is' → logprob: -9.858072280883789

Token 600: ' tries' (ID: 30519)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.8366082310676575
    2. 'wins' → logprob: -1.0866081714630127
    3. '_can' → logprob: -2.3366081714630127
    4. 'can' → logprob: -2.7116081714630127
    5. 'w' → logprob: -3.2116081714630127
    6. ' can' → logprob: -4.336608409881592
    7. '_turn' → logprob: -6.211608409881592
    8. 'is' → logprob: -6.461608409881592
    9. '   ' → logprob: -6.586608409881592
    10. 'win' → logprob: -6.586608409881592

Token 601: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5840520262718201
    2. 'to' → logprob: -0.8340520262718201
    3. ':' → logprob: -5.209052085876465
    4. 'all' → logprob: -6.584052085876465
    5. ':
' → logprob: -7.209052085876465
    6. ' all' → logprob: -8.084052085876465
    7. '   ' → logprob: -8.959052085876465
    8. 'for' → logprob: -11.584052085876465
    9. 'each' → logprob: -11.709052085876465
    10. 'every' → logprob: -11.709052085876465

Token 602: ' move' (ID: 5275)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5200006365776062
    2. 'win' → logprob: -1.145000696182251
    3. 'choose' → logprob: -2.895000696182251
    4. 'any' → logprob: -4.270000457763672
    5. 'ensure' → logprob: -5.020000457763672
    6. 'force' → logprob: -5.895000457763672
    7. 'maximize' → logprob: -6.020000457763672
    8. 'next' → logprob: -6.520000457763672
    9. 'gu' → logprob: -6.895000457763672
    10. 'move' → logprob: -7.020000457763672

Token 603: ' so' (ID: 813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8830050826072693
    2. '       ' → logprob: -1.383005142211914
    3. ' for' → logprob: -1.758005142211914
    4. ' to' → logprob: -2.383005142211914
    5. 'to' → logprob: -3.383005142211914
    6. 'next' → logprob: -4.258005142211914
    7. ':' → logprob: -4.758005142211914
    8. ' in' → logprob: -5.633005142211914
    9. ' next' → logprob: -5.758005142211914
    10. ',' → logprob: -6.383005142211914

Token 604: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.20831024646759033
    2. ' that' → logprob: -1.7083102464675903
    3. 'for' → logprob: -5.833310127258301
    4. '       ' → logprob: -5.833310127258301
    5. '   ' → logprob: -7.458310127258301
    6. 'r' → logprob: -9.5833101272583
    7. ' for' → logprob: -9.5833101272583
    8. 'ur' → logprob: -9.7083101272583
    9. '           ' → logprob: -9.8333101272583
    10. 'next' → logprob: -9.9583101272583

Token 605: ' they' (ID: 1023)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.8015748858451843
    2. 'the' → logprob: -1.676574945449829
    3. ' any' → logprob: -2.426574945449829
    4. 'they' → logprob: -2.676574945449829
    5. ' the' → logprob: -2.926574945449829
    6. 'next' → logprob: -3.176574945449829
    7. ' they' → logprob: -3.426574945449829
    8. 'self' → logprob: -3.551574945449829
    9. 'winner' → logprob: -3.926574945449829
    10. ' next' → logprob: -4.05157470703125

Token 606: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.3980664610862732
    2. 'win' → logprob: -1.398066520690918
    3. ' can' → logprob: -2.523066520690918
    4. ' win' → logprob: -7.398066520690918
    5. 'will' → logprob: -8.148066520690918
    6. 'won' → logprob: -9.898066520690918
    7. 'wins' → logprob: -10.273066520690918
    8. ' will' → logprob: -10.523066520690918
    9. 'cannot' → logprob: -10.773066520690918
    10. '   ' → logprob: -11.648066520690918

Token 607: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0070938654243946075
    2. 'force' → logprob: -5.632093906402588
    3. ' win' → logprob: -6.007093906402588
    4. 'gu' → logprob: -7.257093906402588
    5. ' guarantee' → logprob: -8.75709342956543
    6. ' force' → logprob: -9.75709342956543
    7. 'ensure' → logprob: -9.75709342956543
    8. 'event' → logprob: -10.88209342956543
    9. '   ' → logprob: -11.63209342956543
    10. ' eventually' → logprob: -11.75709342956543

Token 608: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4167734980583191
    2. ' for' → logprob: -1.1667735576629639
    3. 'for' → logprob: -3.541773557662964
    4. '        
' → logprob: -8.541773796081543
    5. '
' → logprob: -9.166773796081543
    6. ',' → logprob: -10.041773796081543
    7. ':' → logprob: -10.291773796081543
    8. ' next' → logprob: -10.916773796081543
    9. 'next' → logprob: -10.916773796081543
    10. '   ' → logprob: -11.166773796081543

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02835598587989807
    2. 'for' → logprob: -4.153356075286865
    3. ' for' → logprob: -4.403356075286865
    4. '        
' → logprob: -12.028355598449707
    5. '<|end|>' → logprob: -13.528355598449707
    6. 'next' → logprob: -13.778355598449707
    7. ' next' → logprob: -14.903355598449707
    8. '	for' → logprob: -15.153355598449707
    9. '   ' → logprob: -15.153355598449707
    10. '  
' → logprob: -15.528355598449707

Token 610: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5131108164787292
    2. ' for' → logprob: -1.013110876083374
    3. '       ' → logprob: -3.263110876083374
    4. '        
' → logprob: -11.763111114501953
    5. 'next' → logprob: -13.263111114501953
    6. '	for' → logprob: -14.263111114501953
    7. ' next' → logprob: -14.388111114501953
    8. '   ' → logprob: -14.513111114501953
    9. '```' → logprob: -14.513111114501953
    10. ' ' → logprob: -15.513111114501953

Token 611: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.0017146894242614508
    2. '_w' → logprob: -6.876714706420898
    3. ' =' → logprob: -8.501714706420898
    4. '_' → logprob: -8.626714706420898
    5. 'player' → logprob: -9.501714706420898
    6. '_state' → logprob: -9.626714706420898
    7. '=' → logprob: -10.001714706420898
    8. '_turn' → logprob: -10.126714706420898
    9. 'Player' → logprob: -10.501714706420898
    10. '_players' → logprob: -11.501714706420898

Token 612: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059296246618032455
    2. '=' → logprob: -5.130929470062256
    3. ' ' → logprob: -14.380929946899414
    4. ' if' → logprob: -15.630929946899414
    5. 'if' → logprob: -16.630929946899414
    6. ',' → logprob: -16.755929946899414
    7. ')' → logprob: -17.005929946899414
    8. ' =
' → logprob: -17.255929946899414
    9. '        ' → logprob: -18.005929946899414
    10. 's' → logprob: -18.130929946899414

Token 613: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163628220558167
    2. ' self' → logprob: -4.264163494110107
    3. '(self' → logprob: -16.389163970947266
    4. '[self' → logprob: -17.139163970947266
    5. '
' → logprob: -17.514163970947266
    6. '	self' → logprob: -18.264163970947266
    7. '=self' → logprob: -19.014163970947266
    8. '       ' → logprob: -19.389163970947266
    9. 'se' → logprob: -19.764163970947266
    10. '```' → logprob: -20.139163970947266

Token 614: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -1.981667537620524e-06
    2. 'first' → logprob: -13.250001907348633
    3. '.' → logprob: -15.750001907348633
    4. ' .' → logprob: -17.500001907348633
    5. ' first' → logprob: -18.375001907348633
    6. '.f' → logprob: -19.125001907348633
    7. '
' → logprob: -19.375001907348633
    8. '.second' → logprob: -19.625001907348633
    9. '.self' → logprob: -19.750001907348633
    10. '	first' → logprob: -20.000001907348633

Token 615: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -4.842555426876061e-06
    2. 'Player' → logprob: -13.000004768371582
    3. '_' → logprob: -13.750004768371582
    4. '_Player' → logprob: -14.375004768371582
    5. '._' → logprob: -15.375004768371582
    6. '_PLAYER' → logprob: -15.750004768371582
    7. ' _' → logprob: -16.2500057220459
    8. '_user' → logprob: -16.2500057220459
    9. '_players' → logprob: -16.2500057220459
    10. 'player' → logprob: -16.7500057220459

Token 616: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5759437084197998
    2. 'if' → logprob: -0.8259437084197998
    3. '       ' → logprob: -13.200943946838379
    4. '<|end|>' → logprob: -13.450943946838379
    5. '        ' → logprob: -15.200943946838379
    6. 'If' → logprob: -15.450943946838379
    7. ' ' → logprob: -16.325942993164062
    8. '
' → logprob: -16.325942993164062
    9. '<|end|>' → logprob: -16.950942993164062
    10. '           ' → logprob: -16.950942993164062

Token 617: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1602245420217514
    2. ' is' → logprob: -1.9102245569229126
    3. 'not' → logprob: -15.660224914550781
    4. '   ' → logprob: -16.78522491455078
    5. ' ' → logprob: -16.91022491455078
    6. ' not' → logprob: -17.91022491455078
    7. '	is' → logprob: -17.91022491455078
    8. ' ' → logprob: -18.28522491455078
    9. '```' → logprob: -18.78522491455078
    10. '(is' → logprob: -19.03522491455078

Token 618: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.005237668287009001
    2. 'first' → logprob: -5.255237579345703
    3. 'irst' → logprob: -13.380237579345703
    4. 'First' → logprob: -13.755237579345703
    5. 'is' → logprob: -14.505237579345703
    6. 'f' → logprob: -15.255237579345703
    7. ' first' → logprob: -15.630237579345703
    8. '_FIRST' → logprob: -16.630237579345703
    9. '```' → logprob: -17.255237579345703
    10. '1' → logprob: -17.755237579345703

Token 619: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -8.625866030342877e-05
    2. 'player' → logprob: -9.375085830688477
    3. 'Player' → logprob: -14.000085830688477
    4. '_turn' → logprob: -15.750085830688477
    5. '_PLAYER' → logprob: -15.875085830688477
    6. '_first' → logprob: -16.125085830688477
    7. ' player' → logprob: -17.000085830688477
    8. '_players' → logprob: -17.125085830688477
    9. '_play' → logprob: -17.500085830688477
    10. '-player' → logprob: -17.875085830688477

Token 620: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.0007108822464942932
    2. 'turn' → logprob: -7.250710964202881
    3. 'eturn' → logprob: -14.875710487365723
    4. '-turn' → logprob: -15.625710487365723
    5. 'Turn' → logprob: -15.750710487365723
    6. 'urn' → logprob: -15.750710487365723
    7. ' turn' → logprob: -17.37571144104004
    8. '_t' → logprob: -17.87571144104004
    9. '.turn' → logprob: -20.25071144104004
    10. '(turn' → logprob: -20.37571144104004

Token 621: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5763101577758789
    2. ' else' → logprob: -0.8263101577758789
    3. '<|end|>' → logprob: -7.951310157775879
    4. ' ' → logprob: -12.576310157775879
    5. '<|end|>' → logprob: -12.701310157775879
    6. '
' → logprob: -12.826310157775879
    7. '	else' → logprob: -13.201310157775879
    8. ',' → logprob: -13.826310157775879
    9. '       ' → logprob: -13.951310157775879
    10. ')' → logprob: -13.951310157775879

Token 622: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02324605919420719
    2. ' self' → logprob: -3.7732460498809814
    3. '           ' → logprob: -16.02324676513672
    4. '   ' → logprob: -16.14824676513672
    5. '       ' → logprob: -16.14824676513672
    6. '	self' → logprob: -16.39824676513672
    7. ' ' → logprob: -16.52324676513672
    8. 's' → logprob: -17.27324676513672
    9. '=self' → logprob: -17.89824676513672
    10. '(self' → logprob: -18.27324676513672

Token 623: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -3.833878508885391e-05
    2. 'second' → logprob: -10.250038146972656
    3. '.' → logprob: -13.000038146972656
    4. '.secondary' → logprob: -15.500038146972656
    5. '	second' → logprob: -15.625038146972656
    6. '.third' → logprob: -16.000038146972656
    7. ' .' → logprob: -16.500038146972656
    8. '.first' → logprob: -18.000038146972656
    9. '.sec' → logprob: -18.250038146972656
    10. '.seconds' → logprob: -18.500038146972656

Token 624: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -15.000000953674316
    3. 'player' → logprob: -15.250000953674316
    4. ' _' → logprob: -16.000001907348633
    5. '_PLAYER' → logprob: -16.000001907348633
    6. 'Player' → logprob: -16.625001907348633
    7. '_user' → logprob: -17.875001907348633
    8. '_Player' → logprob: -18.250001907348633
    9. '._' → logprob: -18.625001907348633
    10. ' player' → logprob: -19.375001907348633

Token 625: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6556921601295471
    2. ' for' → logprob: -1.4056921005249023
    3. '       ' → logprob: -1.9056921005249023
    4. 'for' → logprob: -3.7806921005249023
    5. '  
' → logprob: -3.7806921005249023
    6. '        
' → logprob: -4.155692100524902
    7. ' 
' → logprob: -4.655692100524902
    8. '    
' → logprob: -4.905692100524902
    9. '   ' → logprob: -6.030692100524902
    10. '\n' → logprob: -6.280692100524902

Token 626: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.431912899017334
    2. '       ' → logprob: -1.681912899017334
    3. 'for' → logprob: -1.806912899017334
    4. '        
' → logprob: -8.556913375854492
    5. '
' → logprob: -8.681913375854492
    6. ' next' → logprob: -9.806913375854492
    7. '   ' → logprob: -10.181913375854492
    8. 'next' → logprob: -10.306913375854492
    9. '    
' → logprob: -11.306913375854492
    10. ',' → logprob: -11.431913375854492

Token 627: ' opponent' (ID: 38519)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008151084766723216
    2. ' for' → logprob: -7.500814914703369
    3. '       ' → logprob: -8.250815391540527
    4. 'next' → logprob: -14.750815391540527
    5. '        
' → logprob: -14.750815391540527
    6. '```' → logprob: -15.625815391540527
    7. 'For' → logprob: -17.62581443786621
    8. '   ' → logprob: -18.37581443786621
    9. '	for' → logprob: -18.50081443786621
    10. 'all' → logprob: -19.12581443786621

Token 628: ' =' (ID: 314)
  Prédit: '_can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_can' → logprob: -0.8959913849830627
    2. '_w' → logprob: -1.020991325378418
    3. ' =' → logprob: -1.645991325378418
    4. '_player' → logprob: -3.895991325378418
    5. '=' → logprob: -4.770991325378418
    6. '_win' → logprob: -5.270991325378418
    7. '_states' → logprob: -6.145991325378418
    8. '_has' → logprob: -7.270991325378418
    9. '_' → logprob: -7.770991325378418
    10. '_is' → logprob: -8.270991325378418

Token 629: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020915418863297
    2. ' self' → logprob: -2.3502092361450195
    3. '       ' → logprob: -13.85020923614502
    4. '   ' → logprob: -14.60020923614502
    5. ' ' → logprob: -14.85020923614502
    6. '(self' → logprob: -15.35020923614502
    7. '	self' → logprob: -15.72520923614502
    8. '=self' → logprob: -16.225208282470703
    9. ' ' → logprob: -16.850208282470703
    10. '    ' → logprob: -16.850208282470703

Token 630: '.second' (ID: 27534)
  Prédit: '.first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.575958251953125
    2. '.second' → logprob: -0.825958251953125
    3. '.' → logprob: -11.575958251953125
    4. '.self' → logprob: -12.450958251953125
    5. '.third' → logprob: -13.075958251953125
    6. 'second' → logprob: -13.450958251953125
    7. '	second' → logprob: -14.825958251953125
    8. 'first' → logprob: -14.950958251953125
    9. '.f' → logprob: -15.075958251953125
    10. ' .' → logprob: -15.200958251953125

Token 631: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -1.259079363080673e-05
    2. 'player' → logprob: -11.500012397766113
    3. 'Player' → logprob: -13.000012397766113
    4. '_PLAYER' → logprob: -16.50001335144043
    5. '_' → logprob: -17.62501335144043
    6. '-player' → logprob: -18.12501335144043
    7. '...' → logprob: -19.00001335144043
    8. '_user' → logprob: -19.12501335144043
    9. '_strategy' → logprob: -19.25001335144043
    10. '_Player' → logprob: -19.37501335144043

Token 632: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 633: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004089916590601206
    2. ' is' → logprob: -5.504089832305908
    3. 'not' → logprob: -12.004090309143066
    4. '   ' → logprob: -12.754090309143066
    5. '           ' → logprob: -13.629090309143066
    6. ' ' → logprob: -14.504090309143066
    7. ' not' → logprob: -15.629090309143066
    8. '       ' → logprob: -15.754090309143066
    9. '	is' → logprob: -16.25408935546875
    10. '    ' → logprob: -16.50408935546875

Token 634: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0008847765857353806
    2. 'is' → logprob: -7.625885009765625
    3. 'first' → logprob: -8.500885009765625
    4. 'not' → logprob: -9.000885009765625
    5. 'First' → logprob: -9.625885009765625
    6. '_FIRST' → logprob: -13.500885009765625
    7. ' is' → logprob: -14.250885009765625
    8. '_last' → logprob: -15.125885009765625
    9. '```' → logprob: -15.500885009765625
    10. '_current' → logprob: -15.500885009765625

Token 635: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.00033677343162707984
    2. 'player' → logprob: -8.000336647033691
    3. 'Player' → logprob: -14.000336647033691
    4. '_first' → logprob: -15.500336647033691
    5. '_PLAYER' → logprob: -16.125337600708008
    6. '_turn' → logprob: -17.250337600708008
    7. '```' → logprob: -17.250337600708008
    8. ' player' → logprob: -17.375337600708008
    9. '_players' → logprob: -17.500337600708008
    10. 'first' → logprob: -17.750337600708008

Token 636: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.00602988013997674
    2. 'turn' → logprob: -5.131030082702637
    3. 'else' → logprob: -9.506030082702637
    4. 'Turn' → logprob: -11.756030082702637
    5. 'urn' → logprob: -12.006030082702637
    6. ' else' → logprob: -12.506030082702637
    7. '_' → logprob: -12.881030082702637
    8. '-turn' → logprob: -13.256030082702637
    9. '   ' → logprob: -13.631030082702637
    10. '       ' → logprob: -13.881030082702637

Token 637: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20144207775592804
    2. ' else' → logprob: -1.7014421224594116
    3. '        ' → logprob: -11.076441764831543
    4. '         ' → logprob: -12.076441764831543
    5. '       ' → logprob: -13.451441764831543
    6. '```' → logprob: -13.576441764831543
    7. '           ' → logprob: -13.701441764831543
    8. '	else' → logprob: -13.951441764831543
    9. '          ' → logprob: -14.451441764831543
    10. '            ' → logprob: -14.576441764831543

Token 638: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001513196504674852
    2. ' self' → logprob: -6.5015130043029785
    3. '       ' → logprob: -11.626513481140137
    4. '           ' → logprob: -13.376513481140137
    5. '   ' → logprob: -15.376513481140137
    6. '(self' → logprob: -16.62651252746582
    7. '[self' → logprob: -17.12651252746582
    8. '	self' → logprob: -17.37651252746582
    9. ' ' → logprob: -17.75151252746582
    10. '=self' → logprob: -17.75151252746582

Token 639: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -2.339278580620885e-06
    2. 'first' → logprob: -13.125001907348633
    3. '.' → logprob: -15.500001907348633
    4. ' .' → logprob: -17.000001907348633
    5. '.user' → logprob: -18.375001907348633
    6. '.f' → logprob: -18.750001907348633
    7. '.firstname' → logprob: -19.375001907348633
    8. '.current' → logprob: -19.500001907348633
    9. 'First' → logprob: -19.500001907348633
    10. '.First' → logprob: -19.625001907348633

Token 640: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -3.054500666621607e-06
    2. 'Player' → logprob: -13.25000286102295
    3. 'player' → logprob: -13.87500286102295
    4. '_PLAYER' → logprob: -15.37500286102295
    5. '_user' → logprob: -16.875003814697266
    6. '_' → logprob: -18.250003814697266
    7. ' player' → logprob: -18.250003814697266
    8. '-player' → logprob: -18.625003814697266
    9. '_Player' → logprob: -18.750003814697266
    10. '<Player' → logprob: -19.125003814697266

Token 641: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37187138199806213
    2. 'for' → logprob: -1.7468713521957397
    3. ' for' → logprob: -1.9968713521957397
    4. '
' → logprob: -8.621870994567871
    5. '        
' → logprob: -8.621870994567871
    6. '	for' → logprob: -10.246870994567871
    7. '   ' → logprob: -10.371870994567871
    8. ',' → logprob: -11.621870994567871
    9. 'next' → logprob: -11.746870994567871
    10. '<|end|>' → logprob: -12.246870994567871

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5775365233421326
    2. 'for' → logprob: -0.8275365233421326
    3. ' for' → logprob: -6.452536582946777
    4. '        
' → logprob: -11.577536582946777
    5. '```' → logprob: -12.202536582946777
    6. '   ' → logprob: -12.952536582946777
    7. 'next' → logprob: -13.827536582946777
    8. '	for' → logprob: -14.702536582946777
    9. '
' → logprob: -15.452536582946777
    10. '           ' → logprob: -15.952536582946777

Token 643: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.994086627149954e-05
    2. '       ' → logprob: -9.750080108642578
    3. ' for' → logprob: -10.750080108642578
    4. '        
' → logprob: -16.250080108642578
    5. '```' → logprob: -16.625080108642578
    6. '
' → logprob: -18.000080108642578
    7. '   ' → logprob: -18.875080108642578
    8. 'next' → logprob: -19.250080108642578
    9. '	for' → logprob: -20.125080108642578
    10. 'fo' → logprob: -20.250080108642578

Token 644: ' nxt' (ID: 160200)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.015229289419949055
    2. ' next' → logprob: -4.265229225158691
    3. 'state' → logprob: -7.390229225158691
    4. 'ns' → logprob: -7.765229225158691
    5. ' state' → logprob: -11.140229225158691
    6. 'child' → logprob: -12.890229225158691
    7. ' ns' → logprob: -13.015229225158691
    8. '(next' → logprob: -13.140229225158691
    9. '[next' → logprob: -13.890229225158691
    10. '	next' → logprob: -14.765229225158691

Token 645: ' in' (ID: 306)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.031119519844651222
    2. ' in' → logprob: -3.5311195850372314
    3. 'state' → logprob: -7.156119346618652
    4. '_states' → logprob: -7.656119346618652
    5. '_' → logprob: -9.656119346618652
    6. 'in' → logprob: -10.156119346618652
    7. 'e' → logprob: -12.781119346618652
    8. 'State' → logprob: -13.156119346618652
    9. 'states' → logprob: -13.531119346618652
    10. 't' → logprob: -13.906119346618652

Token 646: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -4.7755875129951164e-05
    2. ' next' → logprob: -10.00004768371582
    3. '(next' → logprob: -13.62504768371582
    4. '[next' → logprob: -13.75004768371582
    5. '.next' → logprob: -18.62504768371582
    6. '   ' → logprob: -18.62504768371582
    7. '	next' → logprob: -18.75004768371582
    8. 'state' → logprob: -19.75004768371582
    9. 'new' → logprob: -19.87504768371582
    10. ' ' → logprob: -20.75004768371582

Token 647: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -6.988221684878226e-06
    2. 'States' → logprob: -13.125006675720215
    3. 'states' → logprob: -13.375006675720215
    4. '_state' → logprob: -13.750006675720215
    5. '_next' → logprob: -13.875006675720215
    6. '_' → logprob: -14.000006675720215
    7. ' states' → logprob: -15.875006675720215
    8. 'next' → logprob: -16.37500762939453
    9. 's' → logprob: -16.50000762939453
    10. '.states' → logprob: -17.12500762939453

Token 648: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4744451344013214
    2. ':
' → logprob: -0.974445104598999
    3. '           ' → logprob: -8.349445343017578
    4. '):
' → logprob: -9.474445343017578
    5. ':
' → logprob: -10.974445343017578
    6. '():
' → logprob: -11.349445343017578
    7. ',' → logprob: -11.474445343017578
    8. '       ' → logprob: -11.849445343017578
    9. ':

' → logprob: -12.599445343017578
    10. '):' → logprob: -13.724445343017578

Token 649: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003980184264946729
    2. ' if' → logprob: -8.125397682189941
    3. 'if' → logprob: -9.750397682189941
    4. '            
' → logprob: -10.375397682189941
    5. ',' → logprob: -13.625397682189941
    6. '          ' → logprob: -13.750397682189941
    7. '<|end|>' → logprob: -13.750397682189941
    8. 'result' → logprob: -13.875397682189941
    9. '
' → logprob: -14.000397682189941
    10. ':' → logprob: -14.500397682189941

Token 650: ' nxt' (ID: 160200)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.16363215446472168
    2. ' winner' → logprob: -2.4136321544647217
    3. '           ' → logprob: -3.2886321544647217
    4. 'if' → logprob: -4.663632392883301
    5. 'next' → logprob: -5.288632392883301
    6. 'w' → logprob: -5.288632392883301
    7. ' if' → logprob: -6.038632392883301
    8. ' next' → logprob: -6.538632392883301
    9. 'result' → logprob: -8.0386323928833
    10. 'win' → logprob: -8.6636323928833

Token 651: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.002216988243162632
    2. 'winner' → logprob: -6.127216815948486
    3. 'w' → logprob: -11.127217292785645
    4. '_player' → logprob: -12.502217292785645
    5. 'Winner' → logprob: -12.627217292785645
    6. '_win' → logprob: -12.877217292785645
    7. ' winner' → logprob: -13.002217292785645
    8. '_result' → logprob: -13.127217292785645
    9. ':' → logprob: -14.502217292785645
    10. '```' → logprob: -15.127217292785645

Token 652: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.00010092071170220152
    2. '_inner' → logprob: -11.000101089477539
    3. 'iner' → logprob: -11.125101089477539
    4. 'inn' → logprob: -11.375101089477539
    5. 'in' → logprob: -11.500101089477539
    6. ' inner' → logprob: -11.625101089477539
    7. '=' → logprob: -12.125101089477539
    8. ' =' → logprob: -12.375101089477539
    9. 'ins' → logprob: -12.500101089477539
    10. 'winner' → logprob: -12.625101089477539

Token 653: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. 's' → logprob: -16.501930236816406
    4. ' ' → logprob: -16.501930236816406
    5. '=self' → logprob: -17.126930236816406
    6. ')' → logprob: -18.126930236816406
    7. ',' → logprob: -18.751930236816406
    8. '=

' → logprob: -18.751930236816406
    9. '=}' → logprob: -18.751930236816406
    10. ':' → logprob: -19.001930236816406

Token 654: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023246407508850098
    2. ' self' → logprob: -3.7732462882995605
    3. '           ' → logprob: -14.148246765136719
    4. '(self' → logprob: -15.648246765136719
    5. '	self' → logprob: -18.14824676513672
    6. '[self' → logprob: -18.64824676513672
    7. '=self' → logprob: -18.77324676513672
    8. ' ' → logprob: -18.89824676513672
    9. '               ' → logprob: -19.27324676513672
    10. '   ' → logprob: -19.39824676513672

Token 655: '.dec' (ID: 65387)
  Prédit: '.dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dec' → logprob: -0.00016432604752480984
    2. 'dec' → logprob: -8.750164031982422
    3. ' .' → logprob: -12.750164031982422
    4. '.' → logprob: -13.625164031982422
    5. '.def' → logprob: -13.875164031982422
    6. '.de' → logprob: -15.125164031982422
    7. '.det' → logprob: -15.375164031982422
    8. '.Dec' → logprob: -15.875164031982422
    9. '   ' → logprob: -17.000164031982422
    10. '(dec' → logprob: -17.250164031982422

Token 656: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -5.200166469876422e-06
    2. 'id' → logprob: -13.625004768371582
    3. '```' → logprob: -14.625004768371582
    4. '`' → logprob: -14.750004768371582
    5. '**' → logprob: -14.875004768371582
    6. 'ise' → logprob: -15.125004768371582
    7. '{
' → logprob: -15.125004768371582
    8. '
' → logprob: -15.500004768371582
    9. '{' → logprob: -15.750004768371582
    10. 'ode' → logprob: -16.0000057220459

Token 657: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.375
    3. 'winner' → logprob: -17.125
    4. 'Winner' → logprob: -17.375
    5. 'w' → logprob: -18.0
    6. '_y' → logprob: -19.0
    7. '`' → logprob: -19.125
    8. '_n' → logprob: -19.5
    9. '_' → logprob: -19.625
    10. '_next' → logprob: -19.625

Token 658: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.0004282851587049663
    2. 'winner' → logprob: -7.875428199768066
    3. '_w' → logprob: -11.000428199768066
    4. 'nner' → logprob: -11.250428199768066
    5. 'iner' → logprob: -12.375428199768066
    6. 'inn' → logprob: -12.500428199768066
    7. '_inner' → logprob: -12.500428199768066
    8. '{' → logprob: -14.375428199768066
    9. 'unner' → logprob: -14.625428199768066
    10. '(inner' → logprob: -14.625428199768066

Token 659: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015614043222740293
    2. '(' → logprob: -6.501561641693115
    3. '(
' → logprob: -10.376561164855957
    4. '(next' → logprob: -10.876561164855957
    5. ' (' → logprob: -11.751561164855957
    6. '((' → logprob: -14.626561164855957
    7. '(nx' → logprob: -16.001562118530273
    8. '(x' → logprob: -16.126562118530273
    9. '```' → logprob: -16.626562118530273
    10. ',' → logprob: -16.626562118530273

Token 660: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.11253239959478378
    2. 'ext' → logprob: -2.487532377243042
    3. 't' → logprob: -3.862532377243042
    4. '(n' → logprob: -6.862532615661621
    5. 'state' → logprob: -7.862532615661621
    6. '_state' → logprob: -8.237532615661621
    7. '(next' → logprob: -8.362532615661621
    8. '`' → logprob: -9.612532615661621
    9. '_states' → logprob: -9.612532615661621
    10. '(' → logprob: -10.362532615661621

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002751619089394808
    2. '(n' → logprob: -6.87775182723999
    3. ',n' → logprob: -7.12775182723999
    4. ',state' → logprob: -7.50275182723999
    5. '(next' → logprob: -9.377751350402832
    6. '(' → logprob: -9.377751350402832
    7. ',next' → logprob: -9.752751350402832
    8. '(not' → logprob: -9.877751350402832
    9. ' ,' → logprob: -10.377751350402832
    10. '(True' → logprob: -11.002751350402832

Token 662: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0013926156098023057
    2. ' not' → logprob: -6.626392841339111
    3. '   ' → logprob: -10.376392364501953
    4. '(not' → logprob: -10.626392364501953
    5. '           ' → logprob: -12.376392364501953
    6. '!' → logprob: -13.126392364501953
    7. '               ' → logprob: -13.251392364501953
    8. '       ' → logprob: -13.751392364501953
    9. '	not' → logprob: -14.626392364501953
    10. '                   ' → logprob: -14.626392364501953

Token 663: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0001234428636962548
    2. ' is' → logprob: -9.000123023986816
    3. '(is' → logprob: -19.125123977661133
    4. ')is' → logprob: -19.125123977661133
    5. '	is' → logprob: -19.375123977661133
    6. '   ' → logprob: -21.375123977661133
    7. '"is' → logprob: -22.125123977661133
    8. '```' → logprob: -22.500123977661133
    9. '$is' → logprob: -23.125123977661133
    10. '_is' → logprob: -23.250123977661133

Token 664: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -5.848420551046729e-05
    2. 'first' → logprob: -9.7500581741333
    3. 'First' → logprob: -16.625059127807617
    4. '_is' → logprob: -17.125059127807617
    5. '_' → logprob: -17.625059127807617
    6. ' first' → logprob: -18.125059127807617
    7. '_FIRST' → logprob: -18.625059127807617
    8. '_f' → logprob: -18.875059127807617
    9. '.first' → logprob: -19.500059127807617
    10. '_current' → logprob: -19.875059127807617

Token 665: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -2.534558552724775e-05
    2. 'player' → logprob: -10.625025749206543
    3. 'Player' → logprob: -15.250025749206543
    4. '_user' → logprob: -15.375025749206543
    5. '_PLAYER' → logprob: -15.875025749206543
    6. '_first' → logprob: -16.125024795532227
    7. '_players' → logprob: -16.625024795532227
    8. ' player' → logprob: -16.875024795532227
    9. '-player' → logprob: -17.500024795532227
    10. '_play' → logprob: -17.875024795532227

Token 666: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.00015860427811276168
    2. 'turn' → logprob: -8.750158309936523
    3. '-turn' → logprob: -16.750158309936523
    4. 'urn' → logprob: -17.125158309936523
    5. 'Turn' → logprob: -17.250158309936523
    6. ')' → logprob: -17.750158309936523
    7. 'eturn' → logprob: -18.125158309936523
    8. '```' → logprob: -18.250158309936523
    9. ' turn' → logprob: -18.375158309936523
    10. '_t' → logprob: -18.375158309936523

Token 667: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00602229917421937
    2. ')
' → logprob: -5.1310224533081055
    3. '           ' → logprob: -9.381022453308105
    4. ' )' → logprob: -12.631022453308105
    5. ')

' → logprob: -13.006022453308105
    6. ')
' → logprob: -13.631022453308105
    7. '               ' → logprob: -13.881022453308105
    8. '):
' → logprob: -14.631022453308105
    9. ' )
' → logprob: -15.256022453308105
    10. '       ' → logprob: -15.381022453308105

Token 668: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9623810658231378e-05
    2. ' if' → logprob: -11.875020027160645
    3. '<|end|>' → logprob: -12.375020027160645
    4. '
' → logprob: -12.875020027160645
    5. ',' → logprob: -13.750020027160645
    6. '       ' → logprob: -14.125020027160645
    7. '               ' → logprob: -14.125020027160645
    8. '            
' → logprob: -14.250020027160645
    9. '<|end|>' → logprob: -14.250020027160645
    10. '          ' → logprob: -14.750020027160645

Token 669: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3992421329021454
    2. 'if' (adapté à ' if') → logprob: -1.1492421627044678
    3. ' if' → logprob: -4.399241924285889
    4. '       ' → logprob: -13.024242401123047
    5. '```' → logprob: -13.399242401123047
    6. 'If' → logprob: -13.774242401123047
    7. '               ' → logprob: -13.774242401123047
    8. '          ' → logprob: -14.024242401123047
    9. ' ' → logprob: -14.649242401123047
    10. '   ' → logprob: -15.274242401123047

Token 670: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005241106729954481
    2. ' nxt' → logprob: -5.2552409172058105
    3. '   ' → logprob: -13.255241394042969
    4. '(n' → logprob: -13.630241394042969
    5. '
' → logprob: -14.005241394042969
    6. 'x' → logprob: -14.880241394042969
    7. '```' → logprob: -14.880241394042969
    8. '	n' → logprob: -15.005241394042969
    9. 'current' → logprob: -15.130241394042969
    10. ' n' → logprob: -15.255241394042969

Token 671: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.875
    3. '==' → logprob: -17.125
    4. ' _' → logprob: -18.25
    5. '[' → logprob: -18.875
    6. ' ==' → logprob: -19.0
    7. '._' → logprob: -19.125
    8. '   ' → logprob: -19.125
    9. ')' → logprob: -19.25
    10. '.' → logprob: -19.5

Token 672: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.005039133131504059
    2. 'winner' → logprob: -5.380039215087891
    3. '_w' → logprob: -7.880039215087891
    4. 'w' → logprob: -11.38003921508789
    5. 'nner' → logprob: -12.25503921508789
    6. ' winner' → logprob: -12.50503921508789
    7. '   ' → logprob: -13.25503921508789
    8. 'unner' → logprob: -13.38003921508789
    9. 'inn' → logprob: -13.38003921508789
    10. '```' → logprob: -13.50503921508789

Token 673: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31328609585762024
    2. ' ==' → logprob: -1.3132860660552979
    3. ')==' → logprob: -11.938285827636719
    4. '=' → logprob: -12.313285827636719
    5. '==
' → logprob: -12.313285827636719
    6. ' is' → logprob: -12.438285827636719
    7. '```' → logprob: -13.313285827636719
    8. 'is' → logprob: -13.813285827636719
    9. ']==' → logprob: -14.438285827636719
    10. '()==' → logprob: -14.563285827636719

Token 674: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00023107275774236768
    2. ' current' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.62523078918457
    4. '[current' → logprob: -16.37523078918457
    5. 'cur' → logprob: -16.37523078918457
    6. '(current' → logprob: -16.75023078918457
    7. '	current' → logprob: -17.12523078918457
    8. '=current' → logprob: -17.62523078918457
    9. '.current' → logprob: -18.12523078918457
    10. '$current' → logprob: -18.25023078918457

Token 675: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -4.842555426876061e-06
    2. 'player' → logprob: -12.375004768371582
    3. 'Player' → logprob: -15.000004768371582
    4. '_PLAYER' → logprob: -16.7500057220459
    5. '_user' → logprob: -17.8750057220459
    6. '_' → logprob: -17.8750057220459
    7. ' player' → logprob: -17.8750057220459
    8. '_play' → logprob: -18.3750057220459
    9. '-player' → logprob: -18.3750057220459
    10. '<Player' → logprob: -18.7500057220459

Token 676: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10075165331363678
    2. ':
' → logprob: -2.3507516384124756
    3. ':return' → logprob: -8.100751876831055
    4. '           ' → logprob: -8.975751876831055
    5. '               ' → logprob: -9.350751876831055
    6. '):' → logprob: -11.725751876831055
    7. '):
' → logprob: -11.850751876831055
    8. 'return' → logprob: -12.350751876831055
    9. ':
' → logprob: -13.100751876831055
    10. ':

' → logprob: -13.350751876831055

Token 677: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00255318870767951
    2. '           ' → logprob: -6.1275529861450195
    3. ' return' → logprob: -8.87755298614502
    4. 'self' → logprob: -9.50255298614502
    5. 'return' → logprob: -9.87755298614502
    6. ' self' → logprob: -9.87755298614502
    7. '                   ' → logprob: -11.62755298614502
    8. '):
' → logprob: -11.75255298614502
    9. ',' → logprob: -12.25255298614502
    10. ':
' → logprob: -12.50255298614502

Token 678: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006050851196050644
    2. '               ' → logprob: -5.506051063537598
    3. '           ' → logprob: -6.881051063537598
    4. ' self' → logprob: -7.006051063537598
    5. 'return' → logprob: -10.256051063537598
    6. '   ' → logprob: -14.756051063537598
    7. '       ' → logprob: -14.881051063537598
    8. '```' → logprob: -15.006051063537598
    9. '                   ' → logprob: -15.381051063537598
    10. 'break' → logprob: -15.631051063537598

Token 679: ' Current' (ID: 14536)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0033391944598406553
    2. ' self' → logprob: -5.7533392906188965
    3. '               ' → logprob: -8.753338813781738
    4. '           ' → logprob: -12.878338813781738
    5. 'return' → logprob: -15.003338813781738
    6. '   ' → logprob: -15.878338813781738
    7. 'break' → logprob: -16.253339767456055
    8. '                   ' → logprob: -16.753339767456055
    9. ' ' → logprob: -17.128339767456055
    10. '	self' → logprob: -17.253339767456055

Token 680: ' player' (ID: 5033)
  Prédit: ' player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.7178186178207397
    2. '_player' → logprob: -0.7178186178207397
    3. 'player' → logprob: -3.8428187370300293
    4. ' player's' → logprob: -7.217818737030029
    5. 'Player' → logprob: -7.467818737030029
    6. ' Player' → logprob: -7.717818737030029
    7. ')' → logprob: -7.842818737030029
    8. '_token' → logprob: -8.717818260192871
    9. '_' → logprob: -8.967818260192871
    10. ' _' → logprob: -9.467818260192871

Token 681: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.1021985411643982
    2. '               ' → logprob: -3.102198600769043
    3. 'can' → logprob: -3.102198600769043
    4. ' wins' → logprob: -6.102198600769043
    5. '                   ' → logprob: -6.727198600769043
    6. '           ' → logprob: -7.227198600769043
    7. 'wins' → logprob: -7.227198600769043
    8. ' will' → logprob: -7.602198600769043
    9. ' has' → logprob: -8.227198600769043
    10. 'return' → logprob: -8.352198600769043

Token 682: ' force' (ID: 9578)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.39924097061157227
    2. ' win' → logprob: -1.1492409706115723
    3. 'return' → logprob: -5.274240970611572
    4. ' return' → logprob: -5.399240970611572
    5. 'choose' → logprob: -6.649240970611572
    6. ' guarantee' → logprob: -6.899240970611572
    7. ' choose' → logprob: -9.024240493774414
    8. '	win' → logprob: -9.899240493774414
    9. 'force' → logprob: -10.774240493774414
    10. '_win' → logprob: -10.899240493774414

Token 683: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10122793912887573
    2. ' a' → logprob: -2.3512279987335205
    3. 'the' → logprob: -7.351227760314941
    4. 'win' → logprob: -8.601227760314941
    5. 'vict' → logprob: -9.476227760314941
    6. ' the' → logprob: -9.601227760314941
    7. ' victory' → logprob: -10.101227760314941
    8. ' win' → logprob: -12.601227760314941
    9. '胜' → logprob: -12.851227760314941
    10. ' ' → logprob: -14.351227760314941

Token 684: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0028259195387363434
    2. ' win' → logprob: -5.877825736999512
    3. 'vict' → logprob: -11.127825736999512
    4. 'winning' → logprob: -13.127825736999512
    5. '_win' → logprob: -13.752825736999512
    6. '	win' → logprob: -14.252825736999512
    7. 'w' → logprob: -14.877825736999512
    8. '"' → logprob: -15.127825736999512
    9. '   ' → logprob: -15.127825736999512
    10. 'next' → logprob: -15.377825736999512

Token 685: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005032312474213541
    2. '           ' → logprob: -8.125503540039062
    3. 'return' → logprob: -9.125503540039062
    4. '                   ' → logprob: -10.000503540039062
    5. ' return' → logprob: -10.250503540039062
    6. ':
' → logprob: -12.625503540039062
    7. ',' → logprob: -13.000503540039062
    8. ':return' → logprob: -13.125503540039062
    9. '                
' → logprob: -13.125503540039062
    10. '.' → logprob: -13.750503540039062

Token 686: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017800184432417154
    2. '           ' → logprob: -6.376780033111572
    3. 'self' → logprob: -9.751779556274414
    4. ' self' → logprob: -11.376779556274414
    5. '                   ' → logprob: -12.751779556274414
    6. ',' → logprob: -13.001779556274414
    7. '
' → logprob: -13.501779556274414
    8. '              ' → logprob: -15.126779556274414
    9. 'return' → logprob: -15.251779556274414
    10. '                ' → logprob: -15.501779556274414

Token 687: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.034883227199316025
    2. ' self' → logprob: -3.5348832607269287
    3. '               ' → logprob: -5.28488302230835
    4. '           ' → logprob: -9.909883499145508
    5. '   ' → logprob: -14.534883499145508
    6. '                   ' → logprob: -14.784883499145508
    7. '	self' → logprob: -15.034883499145508
    8. 'return' → logprob: -15.159883499145508
    9. '       ' → logprob: -15.409883499145508
    10. ' ' → logprob: -15.409883499145508

Token 688: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.00019614976190496236
    2. '.memory' → logprob: -9.37519645690918
    3. '.' → logprob: -9.87519645690918
    4. '.mem' → logprob: -10.00019645690918
    5. ' .' → logprob: -11.62519645690918
    6. '.m' → logprob: -13.37519645690918
    7. '.mime' → logprob: -13.37519645690918
    8. '.mn' → logprob: -14.50019645690918
    9. '.motor' → logprob: -15.25019645690918
    10. '.token' → logprob: -15.50019645690918

Token 689: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: 0.0
    2. 'key' → logprob: -17.625
    3. '[' → logprob: -18.75
    4. '[token' → logprob: -19.625
    5. '[k' → logprob: -22.125
    6. '```' → logprob: -22.75
    7. '$key' → logprob: -23.125
    8. '	key' → logprob: -23.25
    9. ',key' → logprob: -23.375
    10. '[
' → logprob: -23.375

Token 690: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07635178416967392
    2. ' =' → logprob: -3.4513518810272217
    3. ']=' → logprob: -3.9513518810272217
    4. '=' → logprob: -3.9513518810272217
    5. ' ]' → logprob: -5.701351642608643
    6. ')' → logprob: -12.7013521194458
    7. '[' → logprob: -13.5763521194458
    8. ' =
' → logprob: -14.7013521194458
    9. '']' → logprob: -14.9513521194458
    10. ')=' → logprob: -14.9513521194458

Token 691: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407716512680054
    2. ' =' → logprob: -0.9740771651268005
    3. '=
' → logprob: -16.099077224731445
    4. ' =
' → logprob: -16.974077224731445
    5. ' ' → logprob: -17.474077224731445
    6. ']=' → logprob: -18.349077224731445
    7. '=

' → logprob: -18.349077224731445
    8. ')' → logprob: -18.849077224731445
    9. '=True' → logprob: -19.099077224731445
    10. ']' → logprob: -19.224077224731445

Token 692: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0004309076175559312
    2. ' current' → logprob: -7.750431060791016
    3. '	current' → logprob: -16.625431060791016
    4. '   ' → logprob: -16.625431060791016
    5. '(current' → logprob: -16.875431060791016
    6. 'cur' → logprob: -17.500431060791016
    7. '$current' → logprob: -17.625431060791016
    8. '[current' → logprob: -18.000431060791016
    9. 'curr' → logprob: -18.125431060791016
    10. '.current' → logprob: -19.250431060791016

Token 693: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -4.961759259458631e-06
    2. 'player' → logprob: -12.250004768371582
    3. '_w' → logprob: -16.8750057220459
    4. ' player' → logprob: -17.3750057220459
    5. '_PLAYER' → logprob: -17.3750057220459
    6. 'Player' → logprob: -17.6250057220459
    7. 'er' → logprob: -17.8750057220459
    8. '_' → logprob: -18.0000057220459
    9. '_user' → logprob: -18.0000057220459
    10. '   ' → logprob: -19.1250057220459

Token 694: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012044002069160342
    2. 'return' → logprob: -6.751204490661621
    3. ' return' → logprob: -11.376204490661621
    4. '           ' → logprob: -11.876204490661621
    5. '                   ' → logprob: -12.126204490661621
    6. '<|end|>' → logprob: -12.126204490661621
    7. '
' → logprob: -13.501204490661621
    8. '                
' → logprob: -14.626204490661621
    9. '			' → logprob: -14.626204490661621
    10. '		       ' → logprob: -14.751204490661621

Token 695: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.876193169271573e-05
    2. 'return' → logprob: -9.500088691711426
    3. ' return' → logprob: -12.125088691711426
    4. '                   ' → logprob: -12.125088691711426
    5. '<|end|>' → logprob: -14.250088691711426
    6. '           ' → logprob: -14.750088691711426
    7. '			' → logprob: -15.250088691711426
    8. '                
' → logprob: -15.250088691711426
    9. '		       ' → logprob: -15.250088691711426
    10. '                       ' → logprob: -15.375088691711426

Token 696: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10629375278949738
    2. '               ' → logprob: -2.3562936782836914
    3. ' return' → logprob: -5.106293678283691
    4. '           ' → logprob: -12.231293678283691
    5. 'break' → logprob: -13.481293678283691
    6. '                   ' → logprob: -13.731293678283691
    7. '	return' → logprob: -13.731293678283691
    8. ':return' → logprob: -14.481293678283691
    9. 'eturn' → logprob: -14.981293678283691
    10. '       ' → logprob: -15.231293678283691

Token 697: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.02975083328783512
    2. ' current' → logprob: -3.5297508239746094
    3. '	current' → logprob: -15.52975082397461
    4. '[current' → logprob: -16.65475082397461
    5. '$current' → logprob: -17.02975082397461
    6. 'urrent' → logprob: -17.02975082397461
    7. '(current' → logprob: -17.27975082397461
    8. '_current' → logprob: -17.77975082397461
    9. '.current' → logprob: -18.27975082397461
    10. 'curr' → logprob: -18.90475082397461

Token 698: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -5.1928003813372925e-05
    2. 'player' → logprob: -9.875051498413086
    3. '_' → logprob: -15.250051498413086
    4. '_user' → logprob: -16.250051498413086
    5. ' player' → logprob: -16.750051498413086
    6. '_token' → logprob: -16.750051498413086
    7. 'Player' → logprob: -17.375051498413086
    8. '_play' → logprob: -17.875051498413086
    9. '_PLAYER' → logprob: -17.875051498413086
    10. '_players' → logprob: -18.500051498413086

Token 699: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.228561349213123e-05
    2. '        
' → logprob: -10.250052452087402
    3. '
' → logprob: -12.000052452087402
    4. 'return' → logprob: -12.625052452087402
    5. '           ' → logprob: -13.625052452087402
    6. '      ' → logprob: -13.750052452087402
    7. 'continue' → logprob: -13.875052452087402
    8. '<|end|>' → logprob: -14.125052452087402
    9. '```' → logprob: -14.125052452087402
    10. '   ' → logprob: -14.625052452087402

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003217574267182499
    2. 'self' → logprob: -8.125321388244629
    3. '
' → logprob: -11.375321388244629
    4. '        
' → logprob: -12.250321388244629
    5. ' self' → logprob: -12.875321388244629
    6. '```' → logprob: -13.125321388244629
    7. '#' → logprob: -13.375321388244629
    8. 'continue' → logprob: -13.750321388244629
    9. '           ' → logprob: -13.750321388244629
    10. '   ' → logprob: -15.000321388244629

Token 701: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03813880681991577
    2. '       ' → logprob: -3.2881388664245605
    3. ' self' → logprob: -9.288138389587402
    4. '#' (adapté à ' #') → logprob: -12.413138389587402
    5. '```' → logprob: -15.038138389587402
    6. '   ' → logprob: -15.163138389587402
    7. '	self' → logprob: -16.53813934326172
    8. '        
' → logprob: -17.16313934326172
    9. '
' → logprob: -17.28813934326172
    10. '[self' → logprob: -17.53813934326172

Token 702: ' Otherwise' (ID: 33987)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11336111277341843
    2. '#' → logprob: -2.363361120223999
    3. '       ' → logprob: -4.36336088180542
    4. ' self' → logprob: -8.113361358642578
    5. '   ' → logprob: -11.113361358642578
    6. ' #' → logprob: -11.363361358642578
    7. ' ' → logprob: -13.238361358642578
    8. '	self' → logprob: -13.863361358642578
    9. '           ' → logprob: -14.363361358642578
    10. '  ' → logprob: -14.363361358642578

Token 703: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32043418288230896
    2. 'self' → logprob: -1.3204342126846313
    3. ' self' → logprob: -4.945434093475342
    4. ',' → logprob: -11.5704345703125
    5. '           ' → logprob: -11.8204345703125
    6. '   ' → logprob: -11.8204345703125
    7. '
' → logprob: -12.5704345703125
    8. '#' → logprob: -14.5704345703125
    9. '(self' → logprob: -14.6954345703125
    10. '	self' → logprob: -14.6954345703125

Token 704: ' opponent' (ID: 38519)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007749063428491354
    2. ' self' → logprob: -5.257749080657959
    3. '       ' → logprob: -6.007749080657959
    4. '#' → logprob: -9.8827486038208
    5. '   ' → logprob: -14.2577486038208
    6. '           ' → logprob: -14.8827486038208
    7. ' #' → logprob: -15.3827486038208
    8. '	self' → logprob: -16.257749557495117
    9. ' ' → logprob: -16.507749557495117
    10. '  ' → logprob: -17.882749557495117

Token 705: ' wins' (ID: 25327)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wins' → logprob: -0.03042774833738804
    2. ' wins' → logprob: -4.030427932739258
    3. 'is' → logprob: -5.030427932739258
    4. ' is' → logprob: -5.530427932739258
    5. 'will' → logprob: -7.530427932739258
    6. '```' → logprob: -7.905427932739258
    7. 'w' → logprob: -8.780427932739258
    8. '<|end|>' → logprob: -9.030427932739258
    9. '_w' → logprob: -9.405427932739258
    10. 'winner' → logprob: -9.905427932739258

Token 706: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.061676347395405e-05
    2. 'self' → logprob: -10.25005054473877
    3. '
' → logprob: -11.75005054473877
    4. ',' → logprob: -13.00005054473877
    5. '   ' → logprob: -13.50005054473877
    6. '        
' → logprob: -14.00005054473877
    7. '<|end|>' → logprob: -14.25005054473877
    8. ' self' → logprob: -14.37505054473877
    9. '```' → logprob: -14.75005054473877
    10. '           ' → logprob: -14.87505054473877

Token 707: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02987556718289852
    2. 'self' → logprob: -3.5298755168914795
    3. ' self' → logprob: -9.029875755310059
    4. '   ' → logprob: -13.029875755310059
    5. '```' → logprob: -13.029875755310059
    6. '           ' → logprob: -15.529875755310059
    7. '[self' → logprob: -15.779875755310059
    8. '<|end|>' → logprob: -16.029874801635742
    9. ',' → logprob: -16.279874801635742
    10. '	self' → logprob: -17.029874801635742

Token 708: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47472235560417175
    2. 'self' (adapté à ' self') → logprob: -0.9747223854064941
    3. ' self' → logprob: -7.349722385406494
    4. '```' → logprob: -13.849721908569336
    5. '   ' → logprob: -13.974721908569336
    6. '	self' → logprob: -15.724721908569336
    7. '           ' → logprob: -16.224721908569336
    8. '(self' → logprob: -16.474721908569336
    9. ' ' → logprob: -16.474721908569336
    10. '      ' → logprob: -16.724721908569336

Token 709: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.0006641837535426021
    2. '.' → logprob: -7.500664234161377
    3. '.mem' → logprob: -9.250663757324219
    4. '.memory' → logprob: -11.375663757324219
    5. 'memo' → logprob: -13.625663757324219
    6. '.mime' → logprob: -14.000663757324219
    7. ' .' → logprob: -14.250663757324219
    8. '.mn' → logprob: -15.375663757324219
    9. '.m' → logprob: -15.750663757324219
    10. '.micro' → logprob: -16.25066375732422

Token 710: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. 'key' → logprob: -17.0
    4. '[(' → logprob: -18.125
    5. '[
' → logprob: -20.125
    6. '[k' → logprob: -21.125
    7. ' [' → logprob: -21.25
    8. '```' → logprob: -22.5
    9. ',key' → logprob: -22.875
    10. '\[' → logprob: -23.0

Token 711: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015951432287693024
    2. '[key' → logprob: -4.265951633453369
    3. ']=' → logprob: -6.390951633453369
    4. '=' → logprob: -9.890951156616211
    5. ' ]' → logprob: -10.015951156616211
    6. '[' → logprob: -12.515951156616211
    7. '   ' → logprob: -12.515951156616211
    8. ')' → logprob: -13.140951156616211
    9. 'key' → logprob: -13.515951156616211
    10. '       ' → logprob: -13.890951156616211

Token 712: ' =' (ID: 314)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.007635851390659809
    2. '=' → logprob: -4.882636070251465
    3. '[' → logprob: -11.632636070251465
    4. ']' → logprob: -11.757636070251465
    5. ']=' → logprob: -12.132636070251465
    6. 'key' → logprob: -12.757636070251465
    7. ' =' → logprob: -13.007636070251465
    8. '[
' → logprob: -14.382636070251465
    9. '][' → logprob: -14.882636070251465
    10. '```' → logprob: -15.382636070251465

Token 713: ' opponent' (ID: 38519)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0007243485888466239
    2. ' opponent' → logprob: -7.2507243156433105
    3. '   ' → logprob: -11.750724792480469
    4. 'opp' → logprob: -13.500724792480469
    5. '       ' → logprob: -13.750724792480469
    6. '	op' → logprob: -13.750724792480469
    7. ' op' → logprob: -13.875724792480469
    8. '           ' → logprob: -14.000724792480469
    9. '(op' → logprob: -14.750724792480469
    10. '```' → logprob: -15.875724792480469

Token 714: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11202520877122879
    2. 'return' → logprob: -2.612025260925293
    3. '
' → logprob: -3.487025260925293
    4. ' return' → logprob: -6.987025260925293
    5. '<|end|>' → logprob: -7.237025260925293
    6. '   ' → logprob: -9.487025260925293
    7. ')return' → logprob: -9.737025260925293
    8. '        
' → logprob: -9.987025260925293
    9. ':return' → logprob: -10.487025260925293
    10. '
' → logprob: -10.737025260925293

Token 715: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5766445398330688
    2. 'return' → logprob: -0.8266445398330688
    3. ' return' → logprob: -7.451644420623779
    4. '   ' → logprob: -9.201644897460938
    5. '{return' → logprob: -12.326644897460938
    6. ':return' → logprob: -12.326644897460938
    7. ')return' → logprob: -12.701644897460938
    8. '	return' → logprob: -12.701644897460938
    9. '```' → logprob: -12.951644897460938
    10. '           ' → logprob: -13.201644897460938

Token 716: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007567389984615147
    2. '       ' → logprob: -7.500756740570068
    3. ' return' → logprob: -8.50075626373291
    4. '   ' → logprob: -15.87575626373291
    5. '{return' → logprob: -16.125757217407227
    6. ':return' → logprob: -16.375757217407227
    7. '	return' → logprob: -16.750757217407227
    8. ')return' → logprob: -17.250757217407227
    9. '.return' → logprob: -18.250757217407227
    10. '```' → logprob: -18.750757217407227

Token 717: ' opponent' (ID: 38519)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0001093841710826382
    2. ' opponent' → logprob: -9.125109672546387
    3. 'opp' → logprob: -15.375109672546387
    4. '	op' → logprob: -16.37510871887207
    5. '   ' → logprob: -16.75010871887207
    6. '(op' → logprob: -17.12510871887207
    7. 'operand' → logprob: -17.25010871887207
    8. 'operator' → logprob: -17.62510871887207
    9. 'Opponent' → logprob: -18.50010871887207
    10. '```' → logprob: -18.50010871887207

Token 718: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 719: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 720: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -1.0507692098617554
    2. 'Random' → logprob: -1.4257692098617554
    3. 'Fab' → logprob: -1.4257692098617554
    4. ' Game' → logprob: -3.800769329071045
    5. ' Fab' → logprob: -4.050769329071045
    6. 'Evaluator' → logprob: -4.050769329071045
    7. 'Outcome' → logprob: -4.425769329071045
    8. 'Ref' → logprob: -4.550769329071045
    9. ' Random' → logprob: -4.675769329071045
    10. 'Match' → logprob: -4.675769329071045

Token 721: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017606735229492188
    2. ':
' → logprob: -4.892606735229492
    3. '(' → logprob: -5.892606735229492
    4. 'Manager' → logprob: -5.892606735229492
    5. '(Game' → logprob: -6.517606735229492
    6. 'Engine' → logprob: -7.142606735229492
    7. 'Controller' → logprob: -7.267606735229492
    8. 'Runner' → logprob: -8.017606735229492
    9. 'Master' → logprob: -8.767606735229492
    10. 'State' → logprob: -9.267606735229492

Token 722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030274299904704094
    2. ':
' → logprob: -4.030274391174316
    3. ':' → logprob: -4.530274391174316
    4. 'def' → logprob: -8.155274391174316
    5. '):
' → logprob: -8.530274391174316
    6. '<|end|>' → logprob: -8.530274391174316
    7. '```' → logprob: -8.530274391174316
    8. '(' → logprob: -9.280274391174316
    9. ' def' → logprob: -9.280274391174316
    10. '    
' → logprob: -10.405274391174316

Token 723: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5240386128425598
    2. 'def' (adapté à ' def') → logprob: -1.024038553237915
    3. '   ' → logprob: -3.024038553237915
    4. 'class' → logprob: -9.649038314819336
    5. '```' → logprob: -9.774038314819336
    6. '	def' → logprob: -12.024038314819336
    7. '    ' → logprob: -14.024038314819336
    8. ':def' → logprob: -14.774038314819336
    9. '  ' → logprob: -15.524038314819336
    10. ':' → logprob: -15.774038314819336

Token 724: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.25227686762809753
    2. '__' → logprob: -1.50227689743042
    3. 'init' → logprob: -9.002276420593262
    4. '```' → logprob: -9.127276420593262
    5. 'def' → logprob: -10.002276420593262
    6. '_init' → logprob: -10.502276420593262
    7. ' def' → logprob: -10.877276420593262
    8. '.__' → logprob: -11.502276420593262
    9. ' init' → logprob: -12.627276420593262
    10. '___' → logprob: -12.752276420593262

Token 725: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.75
    3. 'def' → logprob: -16.0
    4. '(init' → logprob: -16.75
    5. ' init' → logprob: -17.0
    6. '_init' → logprob: -18.5
    7. '   ' → logprob: -18.75
    8. 'inite' → logprob: -19.0
    9. '	init' → logprob: -19.375
    10. '`' → logprob: -19.5

Token 726: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -5.908022285439074e-05
    2. '__' → logprob: -10.750059127807617
    3. '__(
' → logprob: -10.875059127807617
    4. '(self' → logprob: -11.000059127807617
    5. 'self' → logprob: -14.250059127807617
    6. '(' → logprob: -14.375059127807617
    7. '_(' → logprob: -14.500059127807617
    8. ' (' → logprob: -16.375059127807617
    9. '__((' → logprob: -16.625059127807617
    10. '```' → logprob: -16.875059127807617

Token 727: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.735893965815194e-05
    2. ' self' → logprob: -11.750017166137695
    3. '(self' → logprob: -11.875017166137695
    4. '
' → logprob: -13.500017166137695
    5. '   ' → logprob: -14.250017166137695
    6. '       ' → logprob: -15.875017166137695
    7. '	self' → logprob: -16.625017166137695
    8. 'Self' → logprob: -16.875017166137695
    9. ')' → logprob: -17.125017166137695
    10. ',' → logprob: -17.250017166137695

Token 728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0076147946529090405
    2. 'self' → logprob: -5.507614612579346
    3. '(self' → logprob: -5.757614612579346
    4. ' (' → logprob: -8.507615089416504
    5. ' self' → logprob: -9.632615089416504
    6. ' ,' → logprob: -9.882615089416504
    7. ',self' → logprob: -10.382615089416504
    8. ',
' → logprob: -11.382615089416504
    9. '   ' → logprob: -12.382615089416504
    10. '       ' → logprob: -13.007615089416504

Token 729: ' initial' (ID: 4871)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.008976164273917675
    2. 'player' → logprob: -5.633975982666016
    3. 'state' → logprob: -6.133975982666016
    4. ' first' → logprob: -6.508975982666016
    5. 'initial' → logprob: -7.383975982666016
    6. 'strategy' → logprob: -7.508975982666016
    7. 'players' → logprob: -8.758975982666016
    8. 'number' → logprob: -9.008975982666016
    9. 'starting' → logprob: -9.133975982666016
    10. 'start' → logprob: -9.883975982666016

Token 730: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.48430827260017395
    2. '_state' → logprob: -1.6093082427978516
    3. 'number' → logprob: -1.9843082427978516
    4. 'state' → logprob: -3.1093082427978516
    5. ':' → logprob: -7.609308242797852
    6. 'str' → logprob: -7.859308242797852
    7. ',' → logprob: -8.234308242797852
    8. ' number' → logprob: -8.734308242797852
    9. '_str' → logprob: -9.234308242797852
    10. '_string' → logprob: -9.734308242797852

Token 731: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.225939872208983e-05
    2. ':str' → logprob: -10.500032424926758
    3. ' :' → logprob: -13.000032424926758
    4. '):' → logprob: -13.125032424926758
    5. '):
' → logprob: -15.375032424926758
    6. '   ' → logprob: -15.750032424926758
    7. '_:' → logprob: -17.750032424926758
    8. ')' → logprob: -17.750032424926758
    9. '```' → logprob: -18.250032424926758
    10. ' ' → logprob: -18.500032424926758

Token 732: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0002671768015716225
    2. ' str' → logprob: -8.250267028808594
    3. '[str' → logprob: -12.375267028808594
    4. ')' → logprob: -14.250267028808594
    5. '   ' → logprob: -14.750267028808594
    6. '"' → logprob: -15.000267028808594
    7. 'List' → logprob: -15.625267028808594
    8. '=str' → logprob: -17.000267028808594
    9. ':str' → logprob: -17.125267028808594
    10. '(str' → logprob: -17.250267028808594

Token 733: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021321794483810663
    2. '):' → logprob: -6.377132415771484
    3. '):
' → logprob: -7.877132415771484
    4. ' ,' → logprob: -10.502132415771484
    5. '   ' → logprob: -11.502132415771484
    6. '):
' → logprob: -12.502132415771484
    7. ')' → logprob: -12.627132415771484
    8. '       ' → logprob: -13.002132415771484
    9. ':' → logprob: -13.252132415771484
    10. ' ' → logprob: -14.627132415771484

Token 734: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0038883150555193424
    2. ' first' → logprob: -6.003888130187988
    3. 'player' → logprob: -6.753888130187988
    4. '   ' → logprob: -9.503888130187988
    5. 'strategy' → logprob: -9.503888130187988
    6. 'players' → logprob: -9.628888130187988
    7. ' player' → logprob: -11.378888130187988
    8. ' players' → logprob: -12.503888130187988
    9. ' strategy' → logprob: -12.628888130187988
    10. ' ' → logprob: -13.253888130187988

Token 735: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.003311985172331333
    2. 'Player' → logprob: -6.253312110900879
    3. 'player' → logprob: -6.628312110900879
    4. '<Player' → logprob: -11.378312110900879
    5. '_Player' → logprob: -11.378312110900879
    6. '   ' → logprob: -11.753312110900879
    7. '_PLAYER' → logprob: -12.128312110900879
    8. ':' → logprob: -12.378312110900879
    9. ' player' → logprob: -12.753312110900879
    10. ')' → logprob: -12.878312110900879

Token 736: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020570266991853714
    2. ',' → logprob: -3.8955702781677246
    3. ' :' → logprob: -10.770569801330566
    4. ' ,' → logprob: -12.395569801330566
    5. '   ' → logprob: -13.520569801330566
    6. ':,' → logprob: -13.895569801330566
    7. '       ' → logprob: -15.395569801330566
    8. ':first' → logprob: -15.770569801330566
    9. '):' → logprob: -16.270570755004883
    10. '```' → logprob: -16.645570755004883

Token 737: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.0005794849130325019
    2. ' Player' → logprob: -7.750579357147217
    3. 'Fab' → logprob: -9.125579833984375
    4. '	Player' → logprob: -10.250579833984375
    5. '<Player' → logprob: -13.750579833984375
    6. '   ' → logprob: -14.375579833984375
    7. '(Player' → logprob: -14.750579833984375
    8. '_Player' → logprob: -14.875579833984375
    9. 'str' → logprob: -15.500579833984375
    10. '  ' → logprob: -15.750579833984375

Token 738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. ' ,' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.125006675720215
    4. ':' → logprob: -14.625006675720215
    5. '):' → logprob: -16.00000762939453
    6. '       ' → logprob: -16.37500762939453
    7. ',
' → logprob: -17.00000762939453
    8. ')' → logprob: -17.50000762939453
    9. '):
' → logprob: -18.25000762939453
    10. ' ' → logprob: -19.37500762939453

Token 739: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0019298245897516608
    2. ' second' → logprob: -6.251929759979248
    3. '   ' → logprob: -13.626930236816406
    4. '	second' → logprob: -16.876930236816406
    5. ' ' → logprob: -17.751930236816406
    6. '  ' → logprob: -18.876930236816406
    7. 'strategy' → logprob: -18.876930236816406
    8. '    
' → logprob: -19.376930236816406
    9. 'first' → logprob: -19.626930236816406
    10. 'Second' → logprob: -19.876930236816406

Token 740: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.011381899937987328
    2. 'Player' → logprob: -4.511382102966309
    3. '_Player' → logprob: -8.261382102966309
    4. '<Player' → logprob: -11.261382102966309
    5. ' Player' → logprob: -11.511382102966309
    6. '_PLAYER' → logprob: -11.636382102966309
    7. '	Player' → logprob: -11.636382102966309
    8. ')' → logprob: -11.636382102966309
    9. '=' → logprob: -12.011382102966309
    10. ')_' → logprob: -12.011382102966309

Token 741: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28439000248908997
    2. '):
' → logprob: -2.0343899726867676
    3. ':' → logprob: -2.1593899726867676
    4. ',' → logprob: -6.784389972686768
    5. ')' → logprob: -9.284390449523926
    6. '   ' → logprob: -9.909390449523926
    7. '):
' → logprob: -10.159390449523926
    8. '):

' → logprob: -10.409390449523926
    9. ' ):' → logprob: -10.909390449523926
    10. ' ):
' → logprob: -12.659390449523926

Token 742: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.0015121236210688949
    2. ' Player' → logprob: -6.501512050628662
    3. '	Player' → logprob: -12.00151252746582
    4. '   ' → logprob: -12.75151252746582
    5. '
' → logprob: -15.00151252746582
    6. 'player' → logprob: -16.12651252746582
    7. '<Player' → logprob: -16.37651252746582
    8. ' ' → logprob: -16.37651252746582
    9. '_Player' → logprob: -17.00151252746582
    10. '  ' → logprob: -17.62651252746582

Token 743: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2558653652667999
    2. '):' → logprob: -1.5058653354644775
    3. ',' → logprob: -5.755865573883057
    4. '   ' → logprob: -7.630865573883057
    5. '       ' → logprob: -8.505865097045898
    6. '):
' → logprob: -10.005865097045898
    7. ')' → logprob: -10.630865097045898
    8. '):

' → logprob: -12.880865097045898
    9. ':' → logprob: -13.505865097045898
    10. ' ):
' → logprob: -13.880865097045898

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004950098809786141
    2. 'self' → logprob: -8.125494956970215
    3. '   ' → logprob: -8.875494956970215
    4. ' self' → logprob: -10.250494956970215
    5. '
' → logprob: -11.625494956970215
    6. '```' → logprob: -12.875494956970215
    7. ',' → logprob: -13.000494956970215
    8. 'def' → logprob: -13.000494956970215
    9. '):
' → logprob: -13.500494956970215
    10. ' ' → logprob: -13.750494956970215

Token 745: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004106065724045038
    2. '       ' → logprob: -5.504106044769287
    3. ' self' → logprob: -10.504106521606445
    4. '   ' → logprob: -15.879106521606445
    5. '
' → logprob: -17.504106521606445
    6. '	self' → logprob: -18.004106521606445
    7. '(self' → logprob: -18.879106521606445
    8. 'def' → logprob: -19.629106521606445
    9. 'super' → logprob: -20.004106521606445
    10. '```' → logprob: -20.004106521606445

Token 746: '.state' (ID: 6696)
  Prédit: '.initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.002781100571155548
    2. '.state' → logprob: -6.002780914306641
    3. 'initial' → logprob: -8.75278091430664
    4. '.current' → logprob: -9.25278091430664
    5. '.first' → logprob: -10.12778091430664
    6. 'state' → logprob: -11.50278091430664
    7. '.number' → logprob: -14.37778091430664
    8. '.' → logprob: -15.25278091430664
    9. '._' → logprob: -15.37778091430664
    10. '_initial' → logprob: -16.25278091430664

Token 747: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575943648815155
    2. ' =' → logprob: -0.825943648815155
    3. '   ' → logprob: -12.575943946838379
    4. '       ' → logprob: -15.200943946838379
    5. ':' → logprob: -15.575943946838379
    6. '    ' → logprob: -16.450942993164062
    7. ' ' → logprob: -16.575942993164062
    8. ')' → logprob: -17.075942993164062
    9. ',' → logprob: -17.575942993164062
    10. '  ' → logprob: -17.700942993164062

Token 748: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -6.2729995988775045e-06
    2. ' Game' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.5000057220459
    4. '	Game' → logprob: -20.6250057220459
    5. '(Game' → logprob: -22.3750057220459
    6. '  ' → logprob: -23.2500057220459
    7. ' ' → logprob: -23.3750057220459
    8. 'State' → logprob: -23.6250057220459
    9. '       ' → logprob: -23.8750057220459
    10. '<Game' → logprob: -24.5000057220459

Token 749: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -4.320199877838604e-07
    2. 'state' → logprob: -15.5
    3. 'Game' → logprob: -16.125
    4. '(initial' → logprob: -18.125
    5. '(Game' → logprob: -18.5
    6. 'STATE' → logprob: -18.625
    7. '_state' → logprob: -19.0
    8. 'States' → logprob: -19.125
    9. ' State' → logprob: -19.75
    10. '(state' → logprob: -20.0

Token 750: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -0.0003364158037584275
    2. 'initial' → logprob: -8.000336647033691
    3. '(' → logprob: -13.875336647033691
    4. ' initial' → logprob: -17.625335693359375
    5. '	initial' → logprob: -18.250335693359375
    6. '.initial' → logprob: -18.375335693359375
    7. '(
' → logprob: -18.500335693359375
    8. '(init' → logprob: -19.750335693359375
    9. '```' → logprob: -19.875335693359375
    10. '   ' → logprob: -20.125335693359375

Token 751: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -2.0339031834737398e-05
    2. 'number' → logprob: -10.875020027160645
    3. ')' → logprob: -14.750020027160645
    4. '_' → logprob: -14.750020027160645
    5. '
' → logprob: -16.12502098083496
    6. 'Number' → logprob: -16.25002098083496
    7. '_n' → logprob: -16.37502098083496
    8. '```' → logprob: -17.12502098083496
    9. '_state' → logprob: -17.25002098083496
    10. '_string' → logprob: -17.62502098083496

Token 752: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37515586614608765
    2. ')
' → logprob: -1.3751559257507324
    3. '       ' → logprob: -2.8751559257507324
    4. ',' → logprob: -5.750155925750732
    5. '<|end|>' → logprob: -9.000155448913574
    6. '),' → logprob: -9.250155448913574
    7. '   ' → logprob: -9.625155448913574
    8. '
' → logprob: -9.875155448913574
    9. ' ' → logprob: -10.000155448913574
    10. ')
' → logprob: -11.000155448913574

Token 753: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022857412695884705
    2. 'self' → logprob: -6.127285957336426
    3. ' self' → logprob: -9.252285957336426
    4. '<|end|>' → logprob: -13.002285957336426
    5. '   ' → logprob: -13.627285957336426
    6. '	self' → logprob: -15.127285957336426
    7. '```' → logprob: -15.252285957336426
    8. ' ' → logprob: -15.502285957336426
    9. '      ' → logprob: -15.752285957336426
    10. '        
' → logprob: -15.877285957336426

Token 754: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00010688089241739362
    2. '       ' → logprob: -9.250106811523438
    3. ' self' → logprob: -11.625106811523438
    4. '
' → logprob: -13.500106811523438
    5. '        
' → logprob: -16.000106811523438
    6. '   ' → logprob: -16.000106811523438
    7. 'def' → logprob: -16.625106811523438
    8. '(self' → logprob: -17.750106811523438
    9. '#' → logprob: -18.250106811523438
    10. 'import' → logprob: -18.250106811523438

Token 755: '.first' (ID: 14272)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.3133765459060669
    2. '.first' → logprob: -1.313376545906067
    3. ' first' → logprob: -10.688376426696777
    4. '_first' → logprob: -10.813376426696777
    5. '=' → logprob: -11.313376426696777
    6. ' =' → logprob: -11.688376426696777
    7. '.' → logprob: -11.688376426696777
    8. '
' → logprob: -11.938376426696777
    9. '.current' → logprob: -11.938376426696777
    10. 'current' → logprob: -12.063376426696777

Token 756: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -1.1279553291387856e-05
    2. 'Player' → logprob: -12.500011444091797
    3. 'player' → logprob: -12.625011444091797
    4. '_' → logprob: -13.875011444091797
    5. '_players' → logprob: -14.250011444091797
    6. '   ' → logprob: -14.625011444091797
    7. ' _' → logprob: -15.125011444091797
    8. '=_' → logprob: -15.125011444091797
    9. '_PLAYER' → logprob: -15.250011444091797
    10. '=' → logprob: -15.250011444091797

Token 757: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17987270653247833
    2. ' =' → logprob: -1.804872751235962
    3. ',' → logprob: -9.304872512817383
    4. '=self' → logprob: -10.804872512817383
    5. '   ' → logprob: -11.804872512817383
    6. '=
' → logprob: -12.929872512817383
    7. '<|end|>' → logprob: -13.304872512817383
    8. ' ' → logprob: -13.429872512817383
    9. 'self' → logprob: -13.929872512817383
    10. ')' → logprob: -14.304872512817383

Token 758: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -2.7610454708337784e-05
    2. ' first' → logprob: -10.500027656555176
    3. '	first' → logprob: -19.87502670288086
    4. 'second' → logprob: -20.00002670288086
    5. '(first' → logprob: -20.62502670288086
    6. '
' → logprob: -20.62502670288086
    7. '[first' → logprob: -21.00002670288086
    8. 'f' → logprob: -21.25002670288086
    9. 'First' → logprob: -22.12502670288086
    10. '   ' → logprob: -22.25002670288086

Token 759: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -6.480199954239652e-05
    2. 'Player' → logprob: -9.875064849853516
    3. 'player' → logprob: -12.000064849853516
    4. ',' → logprob: -12.875064849853516
    5. '_PLAYER' → logprob: -14.000064849853516
    6. '
' → logprob: -14.125064849853516
    7. '._' → logprob: -14.250064849853516
    8. '   ' → logprob: -14.625064849853516
    9. '_' → logprob: -15.125064849853516
    10. '.' → logprob: -15.250064849853516

Token 760: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036602874752134085
    2. 'self' → logprob: -5.628660202026367
    3. ' self' → logprob: -10.878660202026367
    4. ',' → logprob: -10.878660202026367
    5. '
' → logprob: -11.253660202026367
    6. '   ' → logprob: -12.003660202026367
    7. '<|end|>' → logprob: -13.628660202026367
    8. ' ' → logprob: -15.003660202026367
    9. '      ' → logprob: -15.003660202026367
    10. '(self' → logprob: -15.128660202026367

Token 761: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20227394998073578
    2. 'self' → logprob: -1.702273964881897
    3. ' self' → logprob: -7.077273845672607
    4. '   ' → logprob: -11.827274322509766
    5. ' ' → logprob: -13.202274322509766
    6. '	self' → logprob: -13.327274322509766
    7. ',' → logprob: -13.702274322509766
    8. '<|end|>' → logprob: -13.952274322509766
    9. '      ' → logprob: -14.202274322509766
    10. '
' → logprob: -14.327274322509766

Token 762: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -9.253090865968261e-06
    2. '       ' → logprob: -12.000009536743164
    3. ' self' → logprob: -12.750009536743164
    4. 'second' → logprob: -15.625009536743164
    5. '   ' → logprob: -17.875009536743164
    6. '           ' → logprob: -18.625009536743164
    7. '	self' → logprob: -20.875009536743164
    8. '
' → logprob: -20.875009536743164
    9. ' ' → logprob: -21.250009536743164
    10. '        ' → logprob: -21.500009536743164

Token 763: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -0.2523822784423828
    2. 'second' → logprob: -1.5023822784423828
    3. '.' → logprob: -8.252382278442383
    4. ' second' → logprob: -9.002382278442383
    5. '_second' → logprob: -10.502382278442383
    6. '	second' → logprob: -10.877382278442383
    7. '.first' → logprob: -11.252382278442383
    8. '   ' → logprob: -12.627382278442383
    9. '
' → logprob: -13.127382278442383
    10. ' .' → logprob: -14.002382278442383

Token 764: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -4.4849443838757e-06
    2. 'Player' → logprob: -13.000004768371582
    3. '_PLAYER' → logprob: -14.125004768371582
    4. '_Player' → logprob: -14.625004768371582
    5. '_' → logprob: -14.875004768371582
    6. '._' → logprob: -15.375004768371582
    7. '_players' → logprob: -15.625004768371582
    8. 'player' → logprob: -15.875004768371582
    9. ' _' → logprob: -16.750003814697266
    10. '   ' → logprob: -16.750003814697266

Token 765: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8823671936988831
    2. '_turn' → logprob: -1.3823671340942383
    3. ' =' → logprob: -2.0073671340942383
    4. '._' → logprob: -2.5073671340942383
    5. '_player' → logprob: -2.7573671340942383
    6. '   ' → logprob: -4.132367134094238
    7. '       ' → logprob: -4.382367134094238
    8. '.turn' → logprob: -4.757367134094238
    9. '.' → logprob: -4.882367134094238
    10. '_' → logprob: -6.132367134094238

Token 766: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0001584850688232109
    2. ' second' → logprob: -8.750158309936523
    3. '	second' → logprob: -17.750158309936523
    4. '   ' → logprob: -18.125158309936523
    5. 'first' → logprob: -19.125158309936523
    6. '(second' → logprob: -19.750158309936523
    7. '
' → logprob: -20.125158309936523
    8. ' ' → logprob: -20.375158309936523
    9. '```' → logprob: -21.125158309936523
    10. '.second' → logprob: -21.375158309936523

Token 767: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.0002043748099822551
    2. 'player' → logprob: -8.625204086303711
    3. 'Player' → logprob: -10.625204086303711
    4. '_PLAYER' → logprob: -14.750204086303711
    5. '-player' → logprob: -16.87520408630371
    6. '_Player' → logprob: -17.50020408630371
    7. ' player' → logprob: -17.75020408630371
    8. '_' → logprob: -18.00020408630371
    9. '<Player' → logprob: -18.50020408630371
    10. '_user' → logprob: -18.62520408630371

Token 768: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4298613667488098
    2. '   ' → logprob: -1.054861307144165
    3. '
' → logprob: -6.929861545562744
    4. '<|end|>' → logprob: -8.929861068725586
    5. 'def' → logprob: -11.304861068725586
    6. '```' → logprob: -11.429861068725586
    7. '    
' → logprob: -11.929861068725586
    8. 'self' → logprob: -12.179861068725586
    9. ',' → logprob: -12.554861068725586
    10. '        
' → logprob: -12.804861068725586

Token 769: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31350263953208923
    2. '       ' → logprob: -1.3135026693344116
    3. 'def' → logprob: -9.063502311706543
    4. 'self' → logprob: -9.438502311706543
    5. '<|end|>' → logprob: -10.813502311706543
    6. '
' → logprob: -11.813502311706543
    7. '```' → logprob: -12.313502311706543
    8. ' self' → logprob: -12.313502311706543
    9. ' def' → logprob: -12.938502311706543
    10. ',' → logprob: -13.938502311706543

Token 770: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028676390647888184
    2. '       ' → logprob: -6.002867698669434
    3. 'def' → logprob: -8.252867698669434
    4. ' self' → logprob: -9.127867698669434
    5. '   ' → logprob: -11.252867698669434
    6. '
' → logprob: -11.752867698669434
    7. '	self' → logprob: -14.502867698669434
    8. '        
' → logprob: -15.002867698669434
    9. 'from' → logprob: -15.502867698669434
    10. '(self' → logprob: -15.752867698669434

Token 771: ' For' (ID: 2214)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.263011578586884e-05
    2. ' self' → logprob: -11.000042915344238
    3. '       ' → logprob: -11.125042915344238
    4. 'from' → logprob: -12.375042915344238
    5. 'def' → logprob: -12.500042915344238
    6. '#' → logprob: -13.750042915344238
    7. '   ' → logprob: -14.000042915344238
    8. 'class' → logprob: -14.875042915344238
    9. '[self' → logprob: -16.000041961669922
    10. '
' → logprob: -16.250041961669922

Token 772: ' now' (ID: 1954)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06423929333686829
    2. ' self' → logprob: -2.814239263534546
    3. ' now' → logprob: -7.689239501953125
    4. ' strategy' → logprob: -7.689239501953125
    5. 'strategy' → logprob: -8.439239501953125
    6. 'now' → logprob: -9.189239501953125
    7. 'the' → logprob: -9.439239501953125
    8. ' the' → logprob: -9.439239501953125
    9. ' testing' → logprob: -9.564239501953125
    10. 'from' → logprob: -9.564239501953125

Token 773: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25943177938461304
    2. 'self' → logprob: -1.5094318389892578
    3. ' self' → logprob: -5.509431838989258
    4. '
' → logprob: -6.009431838989258
    5. '   ' → logprob: -7.509431838989258
    6. '<|end|>' → logprob: -8.259431838989258
    7. ',' → logprob: -9.634431838989258
    8. 'import' → logprob: -10.634431838989258
    9. '        
' → logprob: -11.259431838989258
    10. '	self' → logprob: -11.634431838989258

Token 774: ' use' (ID: 1199)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00045188379590399563
    2. ' self' → logprob: -8.250452041625977
    3. '       ' → logprob: -8.625452041625977
    4. '#' → logprob: -12.000452041625977
    5. 'from' → logprob: -13.750452041625977
    6. '
' → logprob: -14.125452041625977
    7. '   ' → logprob: -14.500452041625977
    8. '...' → logprob: -15.000452041625977
    9. 'class' → logprob: -15.250452041625977
    10. 'import' → logprob: -15.250452041625977

Token 775: ' minim' (ID: 23874)
  Prédit: 'Min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Min' → logprob: -0.003583795391023159
    2. 'self' → logprob: -5.753583908081055
    3. ' Min' → logprob: -7.878583908081055
    4. '       ' → logprob: -10.753583908081055
    5. ' self' → logprob: -13.253583908081055
    6. 'the' → logprob: -13.628583908081055
    7. 'Mini' → logprob: -14.253583908081055
    8. 'Minimal' → logprob: -14.378583908081055
    9. 'min' → logprob: -14.503583908081055
    10. 'a' → logprob: -15.128583908081055

Token 776: 'ax' (ID: 1362)
  Prédit: 'ax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.009076343849301338
    2. 'imax' → logprob: -4.759076118469238
    3. 'max' → logprob: -7.759076118469238
    4. 'a' → logprob: -10.509076118469238
    5. 'amax' → logprob: -12.759076118469238
    6. 'axis' → logprob: -13.384076118469238
    7. 'Max' → logprob: -13.509076118469238
    8. 'ix' → logprob: -14.384076118469238
    9. 'axx' → logprob: -14.884076118469238
    10. 'axed' → logprob: -15.384076118469238

Token 777: ' strategy' (ID: 10772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003031309461221099
    2. 'self' → logprob: -5.878031253814697
    3. '
' → logprob: -9.503031730651855
    4. '   ' → logprob: -9.753031730651855
    5. ' self' → logprob: -9.878031730651855
    6. ',' → logprob: -10.253031730651855
    7. ',
' → logprob: -13.753031730651855
    8. '<|end|>' → logprob: -13.878031730651855
    9. '        
' → logprob: -14.003031730651855
    10. 'def' → logprob: -14.253031730651855

Token 778: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025355906691402197
    2. 'self' → logprob: -6.377535820007324
    3. '
' → logprob: -7.752535820007324
    4. '   ' → logprob: -7.877535820007324
    5. ' self' → logprob: -11.002535820007324
    6. ',' → logprob: -13.127535820007324
    7. '        
' → logprob: -13.252535820007324
    8. '    
' → logprob: -14.002535820007324
    9. ' ' → logprob: -14.502535820007324
    10. '           ' → logprob: -14.627535820007324

Token 779: ' memo' (ID: 46393)
  Prédit: 'Min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Min' → logprob: -0.033835992217063904
    2. 'self' → logprob: -3.4088358879089355
    3. 'min' → logprob: -9.533836364746094
    4. 'the' → logprob: -9.658836364746094
    5. 'first' → logprob: -10.408836364746094
    6. 'Mini' → logprob: -11.658836364746094
    7. ' Min' → logprob: -11.908836364746094
    8. 'strategy' → logprob: -12.658836364746094
    9. '_min' → logprob: -13.533836364746094
    10. 'Max' → logprob: -14.033836364746094

Token 780: 'ization' (ID: 2860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028970264247618616
    2. 'self' → logprob: -8.250289916992188
    3. ' self' → logprob: -11.125289916992188
    4. '
' → logprob: -12.000289916992188
    5. '   ' → logprob: -12.750289916992188
    6. ',' → logprob: -12.875289916992188
    7. '        
' → logprob: -13.625289916992188
    8. '(self' → logprob: -15.875289916992188
    9. '      ' → logprob: -16.000289916992188
    10. '           ' → logprob: -16.125289916992188

Token 781: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006514362758025527
    2. 'self' → logprob: -7.3756513595581055
    3. ' self' → logprob: -11.500651359558105
    4. '   ' → logprob: -11.750651359558105
    5. '
' → logprob: -12.000651359558105
    6. ',' → logprob: -14.750651359558105
    7. '        
' → logprob: -15.750651359558105
    8. '      ' → logprob: -16.625652313232422
    9. ' ' → logprob: -17.000652313232422
    10. '(self' → logprob: -17.000652313232422

Token 782: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014319690875709057
    2. 'self' → logprob: -4.264319896697998
    3. '   ' → logprob: -9.38931941986084
    4. ' self' → logprob: -9.76431941986084
    5. '
' → logprob: -11.13931941986084
    6. '        
' → logprob: -15.63931941986084
    7. '	self' → logprob: -16.264320373535156
    8. ' ' → logprob: -16.264320373535156
    9. '      ' → logprob: -16.514320373535156
    10. '           ' → logprob: -17.014320373535156

Token 783: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012288003927096725
    2. '       ' → logprob: -6.7512288093566895
    3. ' self' → logprob: -9.751228332519531
    4. '   ' → logprob: -14.751228332519531
    5. '
' → logprob: -17.50122833251953
    6. '        
' → logprob: -19.12622833251953
    7. '	self' → logprob: -19.50122833251953
    8. '(self' → logprob: -20.12622833251953
    9. '     ' → logprob: -20.37622833251953
    10. '  ' → logprob: -20.50122833251953

Token 784: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.0003942112671211362
    2. 'strategy' → logprob: -8.000393867492676
    3. '.str' → logprob: -9.750393867492676
    4. '.current' → logprob: -15.750393867492676
    5. '_strategy' → logprob: -16.125394821166992
    6. ' strategy' → logprob: -16.250394821166992
    7. '.' → logprob: -16.750394821166992
    8. 'Strategy' → logprob: -17.625394821166992
    9. ' .' → logprob: -17.750394821166992
    10. '.algorithm' → logprob: -17.875394821166992

Token 785: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. ':' → logprob: -17.398244857788086
    4. '   ' → logprob: -20.398244857788086
    5. '=
' → logprob: -20.648244857788086
    6. '＝' → logprob: -20.648244857788086
    7. '=}' → logprob: -21.273244857788086
    8. '=

' → logprob: -21.398244857788086
    9. '=self' → logprob: -22.148244857788086
    10. ' ' → logprob: -22.273244857788086

Token 786: ' Min' (ID: 4438)
  Prédit: 'Min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Min' → logprob: -9.615255839889869e-05
    2. ' Min' → logprob: -9.250096321105957
    3. 'Mini' → logprob: -19.00009536743164
    4. 'min' → logprob: -19.37509536743164
    5. 'Minimal' → logprob: -20.00009536743164
    6. '   ' → logprob: -20.12509536743164
    7. '_Min' → logprob: -20.25009536743164
    8. 'M' → logprob: -20.62509536743164
    9. 'MIN' → logprob: -21.00009536743164
    10. '.Min' → logprob: -21.37509536743164

Token 787: 'imax' (ID: 125477)
  Prédit: 'imax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imax' → logprob: -0.0007185076246969402
    2. 'ax' → logprob: -7.250718593597412
    3. 'a' → logprob: -13.125718116760254
    4. 'max' → logprob: -13.250718116760254
    5. 'amax' → logprob: -13.375718116760254
    6. 'im' → logprob: -13.375718116760254
    7. 'ix' → logprob: -14.625718116760254
    8. 'imap' → logprob: -14.750718116760254
    9. 'i' → logprob: -14.875718116760254
    10. 'in' → logprob: -14.875718116760254

Token 788: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -7.896309739408025e-07
    2. 'Strateg' → logprob: -14.625000953674316
    3. 'Str' → logprob: -16.75
    4. 'strategy' → logprob: -17.0
    5. 'S' → logprob: -17.25
    6. '_strategy' → logprob: -17.5
    7. ' Strategy' → logprob: -17.75
    8. 'St' → logprob: -18.125
    9. '(' → logprob: -18.375
    10. 'Stra' → logprob: -18.5

Token 789: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.4297163784503937
    2. '(self' → logprob: -1.1797163486480713
    3. '(' → logprob: -3.1797163486480713
    4. '(
' → logprob: -8.179716110229492
    5. '(f' → logprob: -10.304716110229492
    6. 'first' → logprob: -11.304716110229492
    7. 'self' → logprob: -11.304716110229492
    8. '(
' → logprob: -14.054716110229492
    9. ' (' → logprob: -14.179716110229492
    10. '(second' → logprob: -14.804716110229492

Token 790: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -7.362307223957032e-05
    2. 'Player' → logprob: -9.875073432922363
    3. 'player' → logprob: -11.000073432922363
    4. 'self' → logprob: -13.250073432922363
    5. '_' → logprob: -13.500073432922363
    6. '_Player' → logprob: -14.625073432922363
    7. '_PLAYER' → logprob: -14.875073432922363
    8. '_players' → logprob: -15.250073432922363
    9. ',' → logprob: -15.500073432922363
    10. '_p' → logprob: -15.750073432922363

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ',
' → logprob: -12.000011444091797
    3. ' ,' → logprob: -12.750011444091797
    4. ',self' → logprob: -13.500011444091797
    5. ',

' → logprob: -14.875011444091797
    6. '<|end|>' → logprob: -15.375011444091797
    7. ')' → logprob: -15.625011444091797
    8. '=' → logprob: -15.625011444091797
    9. 'second' → logprob: -16.125011444091797
    10. 'self' → logprob: -16.250011444091797

Token 792: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.07889033854007721
    2. ' second' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.953890800476074
    4. '	second' → logprob: -16.703889846801758
    5. '           ' → logprob: -17.203889846801758
    6. '       ' → logprob: -17.203889846801758
    7. '(second' → logprob: -17.453889846801758
    8. '.second' → logprob: -18.953889846801758
    9. ' ' → logprob: -19.078889846801758
    10. '
' → logprob: -19.203889846801758

Token 793: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -1.1279553291387856e-05
    2. 'player' → logprob: -11.500011444091797
    3. '_second' → logprob: -14.000011444091797
    4. 'Player' → logprob: -16.625011444091797
    5. '_PLAYER' → logprob: -17.125011444091797
    6. ')' → logprob: -17.500011444091797
    7. 'second' → logprob: -17.500011444091797
    8. '_' → logprob: -18.000011444091797
    9. 's' → logprob: -18.625011444091797
    10. ' player' → logprob: -19.250011444091797

Token 794: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4272752852994017e-05
    2. ' )' → logprob: -11.50002384185791
    3. '<|end|>' → logprob: -11.87502384185791
    4. '   ' → logprob: -12.37502384185791
    5. ')
' → logprob: -13.37502384185791
    6. ' ' → logprob: -14.37502384185791
    7. '       ' → logprob: -15.00002384185791
    8. '<|end|>' → logprob: -15.75002384185791
    9. ')}' → logprob: -16.375024795532227
    10. '),' → logprob: -16.750024795532227

Token 795: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021266989409923553
    2. 'def' → logprob: -3.8962669372558594
    3. '
' → logprob: -7.646266937255859
    4. '    
' → logprob: -9.14626693725586
    5. ' def' → logprob: -9.39626693725586
    6. '```' → logprob: -10.39626693725586
    7. '<|end|>' → logprob: -10.89626693725586
    8. '  ' → logprob: -13.39626693725586
    9. '        
' → logprob: -13.39626693725586
    10. '	def' → logprob: -13.64626693725586

Token 796: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.1888679839321412e-05
    2. ' def' → logprob: -10.875021934509277
    3. '   ' → logprob: -12.750021934509277
    4. '	def' → logprob: -17.87502098083496
    5. '
' → logprob: -18.00002098083496
    6. 'de' → logprob: -18.37502098083496
    7. '```' → logprob: -20.37502098083496
    8. 'ndef' → logprob: -21.12502098083496
    9. '    
' → logprob: -21.37502098083496
    10. 'd' → logprob: -22.62502098083496

Token 797: ' play' (ID: 2107)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.00846386794000864
    2. ' play' → logprob: -5.1334638595581055
    3. 'get' → logprob: -7.0084638595581055
    4. 'run' → logprob: -7.2584638595581055
    5. 'det' → logprob: -7.5084638595581055
    6. 'start' → logprob: -8.883463859558105
    7. 'next' → logprob: -9.758463859558105
    8. 'dec' → logprob: -10.008463859558105
    9. 'winner' → logprob: -10.258463859558105
    10. 'simulate' → logprob: -10.508463859558105

Token 798: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003142300993204117
    2. '(' → logprob: -6.253142356872559
    3. '()' → logprob: -6.753142356872559
    4. 'self' → logprob: -11.378142356872559
    5. '_' → logprob: -11.503142356872559
    6. '()(' → logprob: -12.253142356872559
    7. '_turn' → logprob: -12.378142356872559
    8. '_game' → logprob: -12.878142356872559
    9. '():' → logprob: -12.878142356872559
    10. '_(' → logprob: -13.003142356872559

Token 799: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3331109881401062
    2. ')' → logprob: -1.958111047744751
    3. '):
' → logprob: -2.458111047744751
    4. 'self' → logprob: -3.333111047744751
    5. '(self' → logprob: -3.958111047744751
    6. ',' → logprob: -7.208110809326172
    7. '):
' → logprob: -8.083110809326172
    8. '   ' → logprob: -8.458110809326172
    9. ')(' → logprob: -8.958110809326172
    10. ')->' → logprob: -8.958110809326172

Token 800: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002326224057469517
    2. 'self' → logprob: -9.750232696533203
    3. '(' → logprob: -9.875232696533203
    4. '   ' → logprob: -9.875232696533203
    5. '       ' → logprob: -9.875232696533203
    6. '():' → logprob: -11.750232696533203
    7. '():
' → logprob: -12.250232696533203
    8. ':' → logprob: -13.125232696533203
    9. '->' → logprob: -13.625232696533203
    10. ' ->' → logprob: -14.375232696533203

Token 801: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -5.1928003813372925e-05
    2. ' Player' → logprob: -10.125051498413086
    3. 'str' → logprob: -11.625051498413086
    4. '	Player' → logprob: -13.000051498413086
    5. 'None' → logprob: -15.250051498413086
    6. 'Tuple' → logprob: -15.375051498413086
    7. '<Player' → logprob: -16.500051498413086
    8. '_Player' → logprob: -17.000051498413086
    9. '(Player' → logprob: -17.750051498413086
    10. '.Player' → logprob: -17.875051498413086

Token 802: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5012640357017517
    2. '(self' → logprob: -1.0012640953063965
    3. ':' → logprob: -4.5012640953063965
    4. '   ' → logprob: -4.8762640953063965
    5. ':
' → logprob: -5.7512640953063965
    6. '(
' → logprob: -6.3762640953063965
    7. '(' → logprob: -6.6262640953063965
    8. '():
' → logprob: -7.1262640953063965
    9. '():' → logprob: -8.251263618469238
    10. '{' → logprob: -9.126263618469238

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1041145626222715e-05
    2. ' current' → logprob: -12.375011444091797
    3. '
' → logprob: -13.500011444091797
    4. '   ' → logprob: -13.875011444091797
    5. 'current' → logprob: -14.000011444091797
    6. '```' → logprob: -14.125011444091797
    7. 'result' → logprob: -14.250011444091797
    8. ' result' → logprob: -14.375011444091797
    9. 'state' → logprob: -14.875011444091797
    10. ' return' → logprob: -15.000011444091797

Token 804: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008845718577504158
    2. '       ' → logprob: -4.758845806121826
    3. ' return' → logprob: -8.508845329284668
    4. 'current' → logprob: -11.383845329284668
    5. 'winner' → logprob: -11.383845329284668
    6. 'result' → logprob: -12.008845329284668
    7. '```' → logprob: -15.258845329284668
    8. 'player' → logprob: -15.758845329284668
    9. ' winner' → logprob: -15.758845329284668
    10. 'next' → logprob: -17.133846282958984

Token 805: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015860427811276168
    2. ' self' → logprob: -8.750158309936523
    3. '(self' → logprob: -16.000158309936523
    4. '       ' → logprob: -17.125158309936523
    5. '=self' → logprob: -18.250158309936523
    6. '	self' → logprob: -18.875158309936523
    7. '[self' → logprob: -19.000158309936523
    8. '
' → logprob: -19.875158309936523
    9. '   ' → logprob: -20.750158309936523
    10. 'Self' → logprob: -21.625158309936523

Token 806: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.001514384988695383
    2. 'strategy' → logprob: -6.501514434814453
    3. '.state' → logprob: -11.626514434814453
    4. '.str' → logprob: -12.876514434814453
    5. ' .' → logprob: -15.626514434814453
    6. '.' → logprob: -15.626514434814453
    7. ' strategy' → logprob: -16.001514434814453
    8. 'strateg' → logprob: -16.876514434814453
    9. '(strategy' → logprob: -16.876514434814453
    10. '
' → logprob: -17.876514434814453

Token 807: '.dec' (ID: 65387)
  Prédit: '.dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dec' → logprob: -0.0001319063303526491
    2. '.' → logprob: -9.750131607055664
    3. 'dec' → logprob: -10.625131607055664
    4. ' .' → logprob: -10.875131607055664
    5. '.choose' → logprob: -11.750131607055664
    6. '.de' → logprob: -11.875131607055664
    7. '.Dec' → logprob: -12.875131607055664
    8. '.decode' → logprob: -13.125131607055664
    9. '.det' → logprob: -13.750131607055664
    10. '.def' → logprob: -13.750131607055664

Token 808: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -3.128163257315464e-07
    2. 'dec' → logprob: -16.125
    3. '
' → logprob: -16.75
    4. 'side' → logprob: -17.75
    5. 'de' → logprob: -17.875
    6. '{
' → logprob: -18.0
    7. 'ision' → logprob: -18.125
    8. 'id' → logprob: -18.25
    9. '_' → logprob: -18.375
    10. 'ise' → logprob: -18.75

Token 809: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -7.896309739408025e-07
    2. 'winner' → logprob: -14.375000953674316
    3. 'Winner' → logprob: -16.25
    4. '(_' → logprob: -17.25
    5. '\' → logprob: -18.5
    6. '```' → logprob: -18.5
    7. '._' → logprob: -18.625
    8. '(self' → logprob: -18.875
    9. ' _' → logprob: -19.0
    10. '_owner' → logprob: -19.125

Token 810: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -4.36574100604048e-06
    2. '_inner' → logprob: -13.125004768371582
    3. 'winner' → logprob: -13.250004768371582
    4. ' inner' → logprob: -16.375003814697266
    5. 'nner' → logprob: -16.500003814697266
    6. 'Winner' → logprob: -16.500003814697266
    7. 'iner' → logprob: -16.750003814697266
    8. '(inner' → logprob: -16.875003814697266
    9. 'Inner' → logprob: -17.000003814697266
    10. 'inn' → logprob: -17.250003814697266

Token 811: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -15.50000286102295
    4. '(this' → logprob: -17.375001907348633
    5. '(
' → logprob: -18.125001907348633
    6. 'self' → logprob: -18.750001907348633
    7. '((' → logprob: -19.250001907348633
    8. '(current' → logprob: -19.500001907348633
    9. '(next' → logprob: -20.000001907348633
    10. ',self' → logprob: -20.375001907348633

Token 812: '.state' (ID: 6696)
  Prédit: '.state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.state' → logprob: -5.512236498361744e-07
    2. 'state' → logprob: -15.000000953674316
    3. ' .' → logprob: -16.375
    4. '.' → logprob: -17.375
    5. '.status' → logprob: -18.625
    6. ',state' → logprob: -18.625
    7. ' state' → logprob: -19.625
    8. ').' → logprob: -19.625
    9. '.states' → logprob: -19.75
    10. '(state' → logprob: -19.75

Token 813: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.375001907348633
    3. ',self' → logprob: -14.750001907348633
    4. ',true' → logprob: -15.625001907348633
    5. '       ' → logprob: -17.250001907348633
    6. ',
' → logprob: -18.250001907348633
    7. 'True' → logprob: -18.375001907348633
    8. '(True' → logprob: -18.500001907348633
    9. 'self' → logprob: -18.750001907348633
    10. ')' → logprob: -19.000001907348633

Token 814: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.024604277219623e-05
    2. ' True' → logprob: -10.250040054321289
    3. 'is' → logprob: -12.250040054321289
    4. '(True' → logprob: -19.00004005432129
    5. '   ' → logprob: -20.62504005432129
    6. 'true' → logprob: -20.87504005432129
    7. '=True' → logprob: -21.25004005432129
    8. '       ' → logprob: -22.50004005432129
    9. '           ' → logprob: -23.37504005432129
    10. ' is' → logprob: -24.12504005432129

Token 815: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.250001907348633
    4. ')return' → logprob: -17.875001907348633
    5. ')

' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '))' → logprob: -18.875001907348633
    8. '       ' → logprob: -19.375001907348633
    9. ')`' → logprob: -19.875001907348633
    10. ')
' → logprob: -19.875001907348633

Token 816: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06294524669647217
    2. '<|end|>' → logprob: -2.9379453659057617
    3. '```' → logprob: -5.062945365905762
    4. '<|end|>' → logprob: -6.812945365905762
    5. 'player' → logprob: -8.812945365905762
    6. '
' → logprob: -9.312945365905762
    7. 'fab' → logprob: -9.562945365905762
    8. '...' → logprob: -9.812945365905762
    9. '###' → logprob: -10.187945365905762
    10. '[player' → logprob: -10.687945365905762

Token 817: ' Input' (ID: 10090)
  Prédit: ' Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Game' → logprob: -0.510722815990448
    2. ' Test' → logprob: -2.6357228755950928
    3. ' Player' → logprob: -2.6357228755950928
    4. ' Tournament' → logprob: -2.6357228755950928
    5. ' Match' → logprob: -3.1357228755950928
    6. ' Play' → logprob: -3.2607228755950928
    7. ' Fab' → logprob: -3.7607228755950928
    8. ' Main' → logprob: -4.010722637176514
    9. ' main' → logprob: -4.635722637176514
    10. ' Tests' → logprob: -4.760722637176514

Token 818: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.24062266945838928
    2. 'Parser' → logprob: -2.6156227588653564
    3. 'Processor' → logprob: -2.7406227588653564
    4. ':' → logprob: -3.7406227588653564
    5. 'Reader' → logprob: -3.8656227588653564
    6. 'Output' → logprob: -4.615622520446777
    7. 'Manager' → logprob: -5.365622520446777
    8. 'Provider' → logprob: -5.490622520446777
    9. ':
' → logprob: -5.865622520446777
    10. 'Data' → logprob: -5.990622520446777

Token 819: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004981054808013141
    2. ':
' → logprob: -7.625498294830322
    3. '():' → logprob: -12.625497817993164
    4. '):' → logprob: -13.000497817993164
    5. ' :' → logprob: -13.125497817993164
    6. '(' → logprob: -14.500497817993164
    7. ':def' → logprob: -14.500497817993164
    8. '<|end|>' → logprob: -14.750497817993164
    9. '(object' → logprob: -14.875497817993164
    10. ':**' → logprob: -15.500497817993164

Token 820: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003272779518738389
    2. ' def' → logprob: -5.753273010253906
    3. 'def' → logprob: -9.628273010253906
    4. '	def' → logprob: -11.003273010253906
    5. '<|end|>' → logprob: -12.753273010253906
    6. ':' → logprob: -13.128273010253906
    7. 'staticmethod' → logprob: -13.628273010253906
    8. ',' → logprob: -13.753273010253906
    9. ' indentation' → logprob: -14.128273010253906
    10. ' class' → logprob: -14.378273010253906

Token 821: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.039987195283174515
    2. ' def' → logprob: -3.289987087249756
    3. '@' → logprob: -6.289987087249756
    4. 'class' → logprob: -10.164987564086914
    5. '   ' → logprob: -10.289987564086914
    6. ' @' → logprob: -11.039987564086914
    7. '```' → logprob: -15.289987564086914
    8. 'staticmethod' → logprob: -16.039987564086914
    9. '@dat' → logprob: -16.414987564086914
    10. '
' → logprob: -17.414987564086914

Token 822: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.13495224714279175
    2. 'def' → logprob: -2.3849523067474365
    3. ' def' → logprob: -3.3849523067474365
    4. 'classmethod' → logprob: -9.134952545166016
    5. ' static' → logprob: -9.634952545166016
    6. 'static' → logprob: -10.134952545166016
    7. 'init' → logprob: -10.759952545166016
    8. 'self' → logprob: -11.759952545166016
    9. ' __' → logprob: -12.134952545166016
    10. 'int' → logprob: -12.259952545166016

Token 823: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'call' → logprob: -16.625
    3. 'staticmethod' → logprob: -17.75
    4. 'new' → logprob: -18.5
    5. 'def' → logprob: -18.625
    6. '_init' → logprob: -18.75
    7. ' init' → logprob: -18.875
    8. '(init' → logprob: -20.25
    9. 'inite' → logprob: -20.5
    10. '.init' → logprob: -20.875

Token 824: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006638871505856514
    2. '(' → logprob: -5.131639003753662
    3. 'self' → logprob: -7.756639003753662
    4. '__(' → logprob: -8.756638526916504
    5. ' (' → logprob: -9.881638526916504
    6. '   ' → logprob: -10.006638526916504
    7. ' self' → logprob: -12.131638526916504
    8. '(
' → logprob: -12.506638526916504
    9. '
' → logprob: -12.631638526916504
    10. ' ' → logprob: -12.756638526916504

Token 825: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.031157969729975e-05
    2. ')' → logprob: -9.375090599060059
    3. '):
' → logprob: -13.000090599060059
    4. ' self' → logprob: -13.250090599060059
    5. '
' → logprob: -14.375090599060059
    6. '   ' → logprob: -14.750090599060059
    7. '(self' → logprob: -15.500090599060059
    8. '       ' → logprob: -16.250089645385742
    9. '	self' → logprob: -16.375089645385742
    10. '):' → logprob: -17.375089645385742

Token 826: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0299993753433228
    2. ',' → logprob: -1.1549993753433228
    3. '):' → logprob: -1.2799993753433228
    4. '):
' → logprob: -3.154999256134033
    5. '   ' → logprob: -5.404999256134033
    6. ')' → logprob: -6.654999256134033
    7. '(self' → logprob: -7.154999256134033
    8. ' self' → logprob: -8.154999732971191
    9. ',self' → logprob: -9.279999732971191
    10. '):
' → logprob: -9.904999732971191

Token 827: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011395572684705257
    2. '       ' → logprob: -4.511395454406738
    3. '   ' → logprob: -8.511395454406738
    4. ' self' → logprob: -9.636395454406738
    5. ')' → logprob: -10.261395454406738
    6. '(self' → logprob: -10.761395454406738
    7. '):
' → logprob: -11.261395454406738
    8. 'def' → logprob: -12.261395454406738
    9. '```' → logprob: -12.761395454406738
    10. '
' → logprob: -13.011395454406738

Token 828: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.07817565649747849
    2. 'self' → logprob: -2.9531755447387695
    3. '       ' → logprob: -3.8281755447387695
    4. ' pass' → logprob: -6.9531755447387695
    5. '   ' → logprob: -8.57817554473877
    6. 'def' → logprob: -9.20317554473877
    7. '	pass' → logprob: -11.45317554473877
    8. ' self' → logprob: -11.57817554473877
    9. '
' → logprob: -12.45317554473877
    10. 'pas' → logprob: -13.20317554473877

Token 829: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030160953756421804
    2. '
' → logprob: -6.253015995025635
    3. 'def' → logprob: -7.253015995025635
    4. ' def' → logprob: -8.128016471862793
    5. '    
' → logprob: -10.128016471862793
    6. '<|end|>' → logprob: -10.378016471862793
    7. '	def' → logprob: -12.753016471862793
    8. ' ' → logprob: -13.378016471862793
    9. 'import' → logprob: -13.503016471862793
    10. '<|end|>' → logprob: -13.628016471862793

Token 830: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001332382787950337
    2. 'def' → logprob: -7.1263322830200195
    3. ' def' → logprob: -7.6263322830200195
    4. '    
' → logprob: -11.12633228302002
    5. '
' → logprob: -11.87633228302002
    6. '<|end|>' → logprob: -12.00133228302002
    7. '  ' → logprob: -12.87633228302002
    8. '	def' → logprob: -13.00133228302002
    9. '```' → logprob: -13.25133228302002
    10. ' ' → logprob: -13.37633228302002

Token 831: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -13.750000953674316
    3. ' def' → logprob: -15.250000953674316
    4. '
' → logprob: -20.750001907348633
    5. 'from' → logprob: -21.500001907348633
    6. 'class' → logprob: -22.625001907348633
    7. 'import' → logprob: -22.750001907348633
    8. '	def' → logprob: -22.750001907348633
    9. '```' → logprob: -23.375001907348633
    10. 'de' → logprob: -23.375001907348633

Token 832: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0009177703177556396
    2. ' parse' → logprob: -7.000917911529541
    3. 'read' → logprob: -12.250917434692383
    4. 'def' → logprob: -13.500917434692383
    5. 'from' → logprob: -17.000917434692383
    6. '	parse' → logprob: -17.500917434692383
    7. '   ' → logprob: -18.375917434692383
    8. 'par' → logprob: -18.625917434692383
    9. 'decode' → logprob: -18.750917434692383
    10. ' read' → logprob: -18.750917434692383

Token 833: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013488641707226634
    2. '(' → logprob: -9.000134468078613
    3. 'self' → logprob: -11.500134468078613
    4. '(s' → logprob: -14.750134468078613
    5. ' (' → logprob: -15.125134468078613
    6. '(
' → logprob: -15.750134468078613
    7. '_number' → logprob: -15.750134468078613
    8. '_input' → logprob: -15.875134468078613
    9. ' self' → logprob: -16.25013542175293
    10. '_line' → logprob: -16.62513542175293

Token 834: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.12500286102295
    3. 'self' → logprob: -14.37500286102295
    4. ' (' → logprob: -16.750001907348633
    5. '(
' → logprob: -17.000001907348633
    6. '(s' → logprob: -19.375001907348633
    7. '(line' → logprob: -19.500001907348633
    8. '[self' → logprob: -20.625001907348633
    9. ' self' → logprob: -20.750001907348633
    10. '(sel' → logprob: -20.750001907348633

Token 835: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13498422503471375
    2. 'self' → logprob: -2.134984254837036
    3. ')' → logprob: -5.009984016418457
    4. '):' → logprob: -7.134984016418457
    5. 's' → logprob: -8.384984016418457
    6. '):
' → logprob: -8.759984016418457
    7. ' ,' → logprob: -10.259984016418457
    8. '   ' → logprob: -10.384984016418457
    9. '(self' → logprob: -10.634984016418457
    10. ' self' → logprob: -11.384984016418457

Token 836: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001434993464499712
    2. 'self' → logprob: -6.751434803009033
    3. '       ' → logprob: -9.626435279846191
    4. '   ' → logprob: -9.876435279846191
    5. ' (' → logprob: -10.001435279846191
    6. '(' → logprob: -10.251435279846191
    7. '->' → logprob: -10.751435279846191
    8. ' self' → logprob: -11.251435279846191
    9. 'def' → logprob: -11.376435279846191
    10. ' ->' → logprob: -11.751435279846191

Token 837: ' List' (ID: 2655)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.06396681815385818
    2. 'Tuple' → logprob: -2.938966751098633
    3. 'Game' → logprob: -4.938966751098633
    4. ' str' → logprob: -7.063966751098633
    5. 'List' → logprob: -7.313966751098633
    6. '[str' → logprob: -9.063966751098633
    7. 'tuple' → logprob: -9.063966751098633
    8. ' Tuple' → logprob: -9.688966751098633
    9. 'int' → logprob: -11.063966751098633
    10. '(str' → logprob: -11.188966751098633

Token 838: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0017822833033278584
    2. '[int' → logprob: -6.376782417297363
    3. '[' → logprob: -9.501782417297363
    4. '[List' → logprob: -12.751782417297363
    5. 'str' → logprob: -13.001782417297363
    6. '(str' → logprob: -16.126781463623047
    7. 'int' → logprob: -17.251781463623047
    8. '[
' → logprob: -17.751781463623047
    9. '[(' → logprob: -17.751781463623047
    10. ':str' → logprob: -18.626781463623047

Token 839: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1629256308078766
    2. '):' → logprob: -2.0379257202148438
    3. ']:
' → logprob: -5.037925720214844
    4. '():
' → logprob: -5.537925720214844
    5. ']:' → logprob: -5.662925720214844
    6. '   ' → logprob: -5.912925720214844
    7. ':
' → logprob: -6.287925720214844
    8. ':' → logprob: -7.412925720214844
    9. '       ' → logprob: -7.537925720214844
    10. '():' → logprob: -8.537925720214844

Token 840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013788063079118729
    2. 'n' → logprob: -6.876379013061523
    3. 'num' → logprob: -9.251379013061523
    4. ' lines' → logprob: -9.501379013061523
    5. 'input' → logprob: -9.626379013061523
    6. 'import' → logprob: -10.876379013061523
    7. 'return' → logprob: -11.001379013061523
    8. 'number' → logprob: -11.126379013061523
    9. ' n' → logprob: -11.501379013061523
    10. '   ' → logprob: -12.126379013061523

Token 841: ' dataset' (ID: 20830)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5725997686386108
    2. '       ' → logprob: -0.9475997686386108
    3. 'n' → logprob: -3.9475998878479004
    4. 'lines' → logprob: -4.4475998878479
    5. 'return' → logprob: -5.1975998878479
    6. ' import' → logprob: -5.3225998878479
    7. ' lines' → logprob: -5.5725998878479
    8. 'input' → logprob: -6.4475998878479
    9. ' n' → logprob: -8.072599411010742
    10. 'num' → logprob: -8.447599411010742

Token 842: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6750438809394836
    2. '=' → logprob: -0.8000438809394836
    3. 's' → logprob: -3.550043821334839
    4. '=[]' → logprob: -4.550044059753418
    5. '_lines' → logprob: -6.925044059753418
    6. '=[]
' → logprob: -7.425044059753418
    7. '()' → logprob: -8.175044059753418
    8. '[]' → logprob: -8.425044059753418
    9. ':' → logprob: -10.550044059753418
    10. 'lines' → logprob: -11.050044059753418

Token 843: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6510726809501648
    2. '()' → logprob: -0.9010726809501648
    3. '=' → logprob: -2.6510727405548096
    4. '()
' → logprob: -6.9010725021362305
    5. '   ' → logprob: -7.9010725021362305
    6. '(' → logprob: -9.40107250213623
    7. '       ' → logprob: -9.40107250213623
    8. '.' → logprob: -10.27607250213623
    9. ' ' → logprob: -10.40107250213623
    10. ')' → logprob: -10.77607250213623

Token 844: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1602243334054947
    2. ' int' → logprob: -1.9102243185043335
    3. '[int' → logprob: -16.16022491455078
    4. '	int' → logprob: -17.41022491455078
    5. ' ' → logprob: -17.66022491455078
    6. '=int' → logprob: -17.91022491455078
    7. '   ' → logprob: -18.03522491455078
    8. '(int' → logprob: -18.03522491455078
    9. '<int' → logprob: -18.78522491455078
    10. '
' → logprob: -19.41022491455078

Token 845: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0007102862582542002
    2. 'input' → logprob: -7.250710487365723
    3. '(' → logprob: -14.875710487365723
    4. '=input' → logprob: -18.500709533691406
    5. ' input' → logprob: -18.875709533691406
    6. '(
' → logprob: -19.625709533691406
    7. ',input' → logprob: -20.750709533691406
    8. '<input' → logprob: -20.875709533691406
    9. '[input' → logprob: -21.625709533691406
    10. '	input' → logprob: -22.000709533691406

Token 846: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009018339216709137
    2. '()' → logprob: -4.759018421173096
    3. '().' → logprob: -8.259017944335938
    4. '())
' → logprob: -9.009017944335938
    5. '(' → logprob: -11.134017944335938
    6. '()
' → logprob: -13.134017944335938
    7. ' ())' → logprob: -13.384017944335938
    8. '("' → logprob: -13.759017944335938
    9. '()))' → logprob: -14.509017944335938
    10. '())

' → logprob: -14.634017944335938

Token 847: '       ' (ID: 309)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6876692175865173
    2. '       ' → logprob: -1.437669277191162
    3. 'inputs' → logprob: -2.062669277191162
    4. 'lines' → logprob: -3.062669277191162
    5. 'data' → logprob: -3.562669277191162
    6. 'result' → logprob: -4.062669277191162
    7. 'datasets' → logprob: -4.437669277191162
    8. 'for' → logprob: -4.562669277191162
    9. ' lines' → logprob: -5.562669277191162
    10. 'input' → logprob: -5.812669277191162

Token 848: ' numbers' (ID: 8663)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.5221125483512878
    2. 'results' → logprob: -1.0221126079559326
    3. 'numbers' (adapté à ' numbers') → logprob: -3.2721126079559326
    4. 'datasets' → logprob: -5.3971123695373535
    5. 'lines' → logprob: -6.1471123695373535
    6. 'data' → logprob: -7.3971123695373535
    7. 'result' → logprob: -7.6471123695373535
    8. 'dataset' → logprob: -7.8971123695373535
    9. ' inputs' → logprob: -8.272112846374512
    10. ' results' → logprob: -9.022112846374512

Token 849: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688772916793823
    2. ' =' → logprob: -1.136887788772583
    3. '=[]' → logprob: -11.136887550354004
    4. '=[]
' → logprob: -13.386887550354004
    5. 's' → logprob: -14.636887550354004
    6. '[]' → logprob: -15.386887550354004
    7. '.' → logprob: -17.13688850402832
    8. ':' → logprob: -17.76188850402832
    9. '_list' → logprob: -17.88688850402832
    10. '=[]
' → logprob: -18.01188850402832

Token 850: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.41527149081230164
    2. '[]
' → logprob: -1.665271520614624
    3. '[' → logprob: -1.915271520614624
    4. '[str' → logprob: -7.165271282196045
    5. '[input' → logprob: -7.165271282196045
    6. '[num' → logprob: -8.665271759033203
    7. '[n' → logprob: -8.790271759033203
    8. '[int' → logprob: -9.040271759033203
    9. '[number' → logprob: -9.040271759033203
    10. '[new' → logprob: -9.165271759033203

Token 851: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3445042669773102
    2. '       ' → logprob: -1.8445042371749878
    3. ' for' → logprob: -2.3445043563842773
    4. '
' → logprob: -3.4695043563842773
    5. '	for' → logprob: -5.344504356384277
    6. '   ' → logprob: -6.719504356384277
    7. '<|end|>' → logprob: -9.094504356384277
    8. '        
' → logprob: -9.469504356384277
    9. '    
' → logprob: -10.969504356384277
    10. '	' → logprob: -10.969504356384277

Token 852: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.127333340875339e-06
    2. ' for' → logprob: -12.750003814697266
    3. '
' → logprob: -13.750003814697266
    4. '       ' → logprob: -17.125003814697266
    5. '	for' → logprob: -18.125003814697266
    6. '```' → logprob: -20.250003814697266
    7. 'while' → logprob: -21.125003814697266
    8. '   ' → logprob: -21.500003814697266
    9. '        
' → logprob: -21.875003814697266
    10. '

' → logprob: -23.875003814697266

Token 853: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00012356207298580557
    2. ' _' → logprob: -9.000123977661133
    3. '_i' → logprob: -16.500123977661133
    4. '_dataset' → logprob: -18.500123977661133
    5. '_

' → logprob: -19.625123977661133
    6. '_
' → logprob: -20.125123977661133
    7. ' ' → logprob: -20.250123977661133
    8. ' in' → logprob: -20.375123977661133
    9. '_=' → logprob: -20.375123977661133
    10. 'i' → logprob: -20.875123977661133

Token 854: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.524924099445343
    2. ' in' → logprob: -1.0249240398406982
    3. 'in' → logprob: -3.0249240398406982
    4. ' range' → logprob: -6.899924278259277
    5. ' ' → logprob: -12.774924278259277
    6. '  ' → logprob: -13.149924278259277
    7. '    ' → logprob: -14.149924278259277
    8. 'dataset' → logprob: -15.274924278259277
    9. '	range' → logprob: -15.524924278259277
    10. '   ' → logprob: -15.649924278259277

Token 855: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2113979209971149e-05
    2. ' range' → logprob: -11.375012397766113
    3. 'dataset' → logprob: -14.375012397766113
    4. '	range' → logprob: -19.000011444091797
    5. '[' → logprob: -19.375011444091797
    6. '(range' → logprob: -19.500011444091797
    7. 'numbers' → logprob: -19.500011444091797
    8. 'ranges' → logprob: -21.125011444091797
    9. 'rang' → logprob: -21.500011444091797
    10. 'data' → logprob: -21.750011444091797

Token 856: '(dataset' (ID: 67333)
  Prédit: '(dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dataset' → logprob: -1.8624639324116288e-06
    2. 'dataset' → logprob: -13.750001907348633
    3. '(' → logprob: -14.125001907348633
    4. ' (' → logprob: -19.250001907348633
    5. ' dataset' → logprob: -19.500001907348633
    6. '(range' → logprob: -21.125001907348633
    7. '(datas' → logprob: -21.750001907348633
    8. '(data' → logprob: -21.875001907348633
    9. '(
' → logprob: -22.375001907348633
    10. '(dat' → logprob: -23.000001907348633

Token 857: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0005825805710628629
    2. 's' → logprob: -8.125582695007324
    3. 'count' → logprob: -8.250582695007324
    4. '):
' → logprob: -11.375582695007324
    5. '
' → logprob: -13.000582695007324
    6. '_c' → logprob: -13.375582695007324
    7. ')' → logprob: -13.375582695007324
    8. '_COUNT' → logprob: -13.500582695007324
    9. '_counts' → logprob: -13.875582695007324
    10. ')_' → logprob: -14.125582695007324

Token 858: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01884600706398487
    2. '):' → logprob: -4.018846035003662
    3. ':
' → logprob: -8.393845558166504
    4. '):
' → logprob: -8.518845558166504
    5. ':' → logprob: -8.893845558166504
    6. '():
' → logprob: -10.018845558166504
    7. ' ):
' → logprob: -10.143845558166504
    8. ')' → logprob: -10.893845558166504
    9. '   ' → logprob: -11.393845558166504
    10. '       ' → logprob: -11.643845558166504

Token 859: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019094774033874273
    2. 'numbers' → logprob: -6.501909255981445
    3. ' numbers' → logprob: -8.001909255981445
    4. 'number' → logprob: -11.001909255981445
    5. '   ' → logprob: -11.376909255981445
    6. 'num' → logprob: -11.501909255981445
    7. 'n' → logprob: -11.626909255981445
    8. '```' → logprob: -12.001909255981445
    9. '(numbers' → logprob: -12.251909255981445
    10. '       ' → logprob: -12.501909255981445

Token 860: ' num' (ID: 2269)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.008192192763090134
    2. 'number' → logprob: -5.00819206237793
    3. ' numbers' → logprob: -6.88319206237793
    4. 'num' (adapté à ' num') → logprob: -7.88319206237793
    5. 'n' → logprob: -10.75819206237793
    6. 'line' → logprob: -10.88319206237793
    7. 's' → logprob: -11.25819206237793
    8. '           ' → logprob: -11.25819206237793
    9. ' number' → logprob: -12.63319206237793
    10. 'nums' → logprob: -13.00819206237793

Token 861: '_str' (ID: 6182)
  Prédit: 'ber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ber' → logprob: -0.004190706182271242
    2. ' =' → logprob: -5.754190921783447
    3. '=' → logprob: -7.004190921783447
    4. 'er' → logprob: -10.254190444946289
    5. 'bers' → logprob: -10.629190444946289
    6. '_str' → logprob: -10.629190444946289
    7. 'str' → logprob: -12.129190444946289
    8. '=str' → logprob: -12.379190444946289
    9. '   ' → logprob: -12.879190444946289
    10. 'be' → logprob: -13.504190444946289

Token 862: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740990400314331
    2. '=' → logprob: -0.9740990400314331
    3. '=input' → logprob: -11.099099159240723
    4. '           ' → logprob: -13.599099159240723
    5. '   ' → logprob: -13.724099159240723
    6. '=line' → logprob: -13.974099159240723
    7. '=
' → logprob: -14.224099159240723
    8. '       ' → logprob: -14.724099159240723
    9. ' =
' → logprob: -14.974099159240723
    10. '        ' → logprob: -14.974099159240723

Token 863: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. '   ' → logprob: -21.000261306762695
    4. '(input' → logprob: -21.500261306762695
    5. '	input' → logprob: -21.625261306762695
    6. '=input' → logprob: -21.875261306762695
    7. '<input' → logprob: -22.375261306762695
    8. 'int' → logprob: -22.875261306762695
    9. '           ' → logprob: -24.375261306762695
    10. ',input' → logprob: -24.875261306762695

Token 864: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25442320108413696
    2. '().' → logprob: -1.5044231414794922
    3. '()
' → logprob: -6.004423141479492
    4. '.strip' → logprob: -11.129423141479492
    5. '())' → logprob: -12.629423141479492
    6. '()

' → logprob: -13.254423141479492
    7. ' ()' → logprob: -14.004423141479492
    8. ')' → logprob: -14.254423141479492
    9. '()
' → logprob: -14.504423141479492
    10. '()\' → logprob: -15.004423141479492

Token 865: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.1472419600977446e-06
    2. 'rstrip' → logprob: -13.750000953674316
    3. ' strip' → logprob: -19.625001907348633
    4. 'str' → logprob: -19.625001907348633
    5. '_strip' → logprob: -20.125001907348633
    6. '.strip' → logprob: -20.625001907348633
    7. '```' → logprob: -21.500001907348633
    8. '(strip' → logprob: -22.250001907348633
    9. '-strip' → logprob: -22.625001907348633
    10. 'stripe' → logprob: -23.250001907348633

Token 866: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011124570854008198
    2. '()
' → logprob: -4.511124610900879
    3. ')' → logprob: -9.761124610900879
    4. '())' → logprob: -11.011124610900879
    5. '()
' → logprob: -13.761124610900879
    6. '())
' → logprob: -15.011124610900879
    7. '()\' → logprob: -15.136124610900879
    8. '()

' → logprob: -15.761124610900879
    9. '()`' → logprob: -15.761124610900879
    10. ')
' → logprob: -15.761124610900879

Token 867: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.184812031686306e-05
    2. '       ' → logprob: -9.875082015991211
    3. 'numbers' → logprob: -10.625082015991211
    4. '               ' → logprob: -13.375082015991211
    5. '(numbers' → logprob: -13.500082015991211
    6. '
' → logprob: -14.125082015991211
    7. '   ' → logprob: -14.375082015991211
    8. ' numbers' → logprob: -14.875082015991211
    9. '<|end|>' → logprob: -14.875082015991211
    10. '	       ' → logprob: -15.125082015991211

Token 868: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' (adapté à ' numbers') → logprob: -9.198043699143454e-05
    2. '           ' → logprob: -9.500091552734375
    3. ' numbers' → logprob: -11.125091552734375
    4. '
' → logprob: -13.250091552734375
    5. '       ' → logprob: -15.125091552734375
    6. '(numbers' → logprob: -16.125091552734375
    7. '   ' → logprob: -17.000091552734375
    8. 'if' → logprob: -17.250091552734375
    9. 'num' → logprob: -17.500091552734375
    10. 'number' → logprob: -17.500091552734375

Token 869: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00040695868665352464
    2. '.' → logprob: -7.875406742095947
    3. 'append' → logprob: -11.250407218933105
    4. '           ' → logprob: -12.250407218933105
    5. ' .' → logprob: -12.875407218933105
    6. '.extend' → logprob: -13.250407218933105
    7. ').' → logprob: -13.625407218933105
    8. '.app' → logprob: -14.500407218933105
    9. '<|end|>' → logprob: -14.500407218933105
    10. '().' → logprob: -14.625407218933105

Token 870: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00671584764495492
    2. 'num' → logprob: -5.006715774536133
    3. ' num' → logprob: -15.256715774536133
    4. '(' → logprob: -15.256715774536133
    5. '	num' → logprob: -19.631715774536133
    6. ',num' → logprob: -19.881715774536133
    7. '[num' → logprob: -20.881715774536133
    8. '$num' → logprob: -20.881715774536133
    9. '=num' → logprob: -21.256715774536133
    10. '<num' → logprob: -21.756715774536133

Token 871: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00011927806917810813
    2. 'str' → logprob: -9.62511920928955
    3. '(num' → logprob: -10.00011920928955
    4. '_num' → logprob: -12.62511920928955
    5. 'Str' → logprob: -13.25011920928955
    6. 'num' → logprob: -13.25011920928955
    7. 's' → logprob: -15.12511920928955
    8. '[num' → logprob: -16.000120162963867
    9. '(str' → logprob: -16.125120162963867
    10. ')' → logprob: -16.375120162963867

Token 872: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05026635900139809
    2. '       ' → logprob: -3.6752662658691406
    3. ')
' → logprob: -3.8002662658691406
    4. ')return' → logprob: -7.175266265869141
    5. '
' → logprob: -8.05026626586914
    6. 'return' → logprob: -9.05026626586914
    7. '<|end|>' → logprob: -9.55026626586914
    8. '   ' → logprob: -11.67526626586914
    9. '")' → logprob: -11.80026626586914
    10. ' return' → logprob: -12.05026626586914

Token 873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006793115753680468
    2. 'return' → logprob: -7.5006794929504395
    3. '   ' → logprob: -10.125679016113281
    4. '
' → logprob: -10.125679016113281
    5. '	' → logprob: -10.250679016113281
    6. ' return' → logprob: -11.875679016113281
    7. '	return' → logprob: -13.625679016113281
    8. '```' → logprob: -13.625679016113281
    9. '           ' → logprob: -14.250679016113281
    10. '      ' → logprob: -15.125679016113281

Token 874: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0069337086752057076
    2. '       ' → logprob: -5.006933689117432
    3. ' return' → logprob: -8.50693416595459
    4. '
' → logprob: -11.50693416595459
    5. '   ' → logprob: -12.13193416595459
    6. '	return' → logprob: -14.75693416595459
    7. '```' → logprob: -15.00693416595459
    8. 'eturn' → logprob: -17.631933212280273
    9. ' ' → logprob: -17.756933212280273
    10. '{return' → logprob: -18.631933212280273

Token 875: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -4.5491004129871726e-05
    2. ' numbers' → logprob: -10.000045776367188
    3. 'number' → logprob: -17.000045776367188
    4. 'num' → logprob: -18.750045776367188
    5. '(numbers' → logprob: -19.000045776367188
    6. '_numbers' → logprob: -21.875045776367188
    7. 'n' → logprob: -22.500045776367188
    8. 'Numbers' → logprob: -22.625045776367188
    9. 'nums' → logprob: -22.750045776367188
    10. 'umbers' → logprob: -23.250045776367188

Token 876: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7456086277961731
    2. '<|end|>' → logprob: -1.1206085681915283
    3. '
' → logprob: -1.6206085681915283
    4. '```' → logprob: -7.620608806610107
    5. '<|end|>' → logprob: -7.995608806610107
    6. '   ' → logprob: -8.12060832977295
    7. 'def' → logprob: -8.62060832977295
    8. '    
' → logprob: -9.62060832977295
    9. '

' → logprob: -10.24560832977295
    10. '  
' → logprob: -10.37060832977295

Token 877: 'class' (ID: 1444)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31430965662002563
    2. 'def' → logprob: -1.3143095970153809
    3. '```' → logprob: -7.814309597015381
    4. 'class' → logprob: -7.939309597015381
    5. '<|end|>' → logprob: -8.564310073852539
    6. 'parser' → logprob: -9.939310073852539
    7. ' if' → logprob: -10.939310073852539
    8. '#' → logprob: -10.939310073852539
    9. '
' → logprob: -12.314310073852539
    10. 'import' → logprob: -12.814310073852539

Token 878: ' Output' (ID: 18315)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.3272120952606201
    2. 'Output' → logprob: -1.5772120952606201
    3. 'Main' → logprob: -3.70221209526062
    4. 'Runner' → logprob: -4.577212333679199
    5. 'Evaluator' → logprob: -4.702212333679199
    6. 'Solution' → logprob: -4.827212333679199
    7. 'Tournament' → logprob: -5.077212333679199
    8. ' Game' → logprob: -5.577212333679199
    9. 'Simulator' → logprob: -5.702212333679199
    10. 'Test' → logprob: -6.202212333679199

Token 879: 'Formatter' (ID: 22956)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.04030052199959755
    2. 'Handler' → logprob: -3.7903006076812744
    3. 'Printer' → logprob: -4.415300369262695
    4. 'Formatter' → logprob: -6.165300369262695
    5. 'ter' → logprob: -6.415300369262695
    6. 'Generator' → logprob: -7.290300369262695
    7. 'Builder' → logprob: -8.915300369262695
    8. 'Manager' → logprob: -9.165300369262695
    9. 'Renderer' → logprob: -9.790300369262695
    10. 'writer' → logprob: -10.915300369262695

Token 880: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01417373027652502
    2. ':
' → logprob: -4.26417350769043
    3. ':

' → logprob: -13.13917350769043
    4. '():' → logprob: -13.26417350769043
    5. ':def' → logprob: -13.38917350769043
    6. '(object' → logprob: -14.13917350769043
    7. '<|end|>' → logprob: -14.13917350769043
    8. '():
' → logprob: -14.26417350769043
    9. '):' → logprob: -14.88917350769043
    10. '(' → logprob: -15.01417350769043

Token 881: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002225198782980442
    2. 'class' → logprob: -6.127225399017334
    3. '```' → logprob: -10.752224922180176
    4. 'def' → logprob: -11.752224922180176
    5. ' class' → logprob: -12.002224922180176
    6. ':' → logprob: -13.752224922180176
    7. '
' → logprob: -14.002224922180176
    8. ' def' → logprob: -14.502224922180176
    9. '    
' → logprob: -14.627224922180176
    10. '<|end|>' → logprob: -15.002224922180176

Token 882: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0038676580879837275
    2. '   ' → logprob: -6.2538676261901855
    3. ' def' → logprob: -6.2538676261901855
    4. 'class' → logprob: -11.253868103027344
    5. '@' → logprob: -14.378868103027344
    6. '```' → logprob: -14.753868103027344
    7. '
' → logprob: -15.753868103027344
    8. '	def' → logprob: -16.503868103027344
    9. ' ' → logprob: -18.128868103027344
    10. 'de' → logprob: -20.503868103027344

Token 883: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012723187915980816
    2. ' def' → logprob: -4.387722969055176
    3. '   ' → logprob: -9.012722969055176
    4. 'staticmethod' → logprob: -9.887722969055176
    5. '```' → logprob: -11.512722969055176
    6. '  ' → logprob: -11.637722969055176
    7. '
' → logprob: -12.012722969055176
    8. '	def' → logprob: -12.887722969055176
    9. 'classmethod' → logprob: -13.012722969055176
    10. 'init' → logprob: -13.262722969055176

Token 884: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0280383548888494e-06
    2. 'def' → logprob: -14.625000953674316
    3. 'staticmethod' → logprob: -15.250000953674316
    4. 'format' → logprob: -15.875000953674316
    5. 'int' → logprob: -16.625001907348633
    6. '__' → logprob: -17.375001907348633
    7. 'call' → logprob: -17.750001907348633
    8. 'write' → logprob: -18.500001907348633
    9. '```' → logprob: -18.750001907348633
    10. ' init' → logprob: -18.750001907348633

Token 885: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00357833388261497
    2. '(' → logprob: -5.878578186035156
    3. '   ' → logprob: -8.003578186035156
    4. '__(' → logprob: -8.753578186035156
    5. ':' → logprob: -9.378578186035156
    6. '(object' → logprob: -10.128578186035156
    7. 'def' → logprob: -10.753578186035156
    8. '():
' → logprob: -10.878578186035156
    9. 'self' → logprob: -10.878578186035156
    10. ' ' → logprob: -11.378578186035156

Token 886: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019666427746415138
    2. ')' → logprob: -4.0196661949157715
    3. '):
' → logprob: -7.0196661949157715
    4. '):' → logprob: -7.7696661949157715
    5. '   ' → logprob: -9.01966667175293
    6. '(self' → logprob: -10.89466667175293
    7. ' self' → logprob: -11.26966667175293
    8. ')(' → logprob: -11.51966667175293
    9. '
' → logprob: -11.76966667175293
    10. ' ' → logprob: -11.89466667175293

Token 887: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6934983730316162
    2. '):' → logprob: -0.6934983730316162
    3. ')' → logprob: -8.193498611450195
    4. '   ' → logprob: -9.943498611450195
    5. '():
' → logprob: -11.818498611450195
    6. '):
' → logprob: -12.318498611450195
    7. '():' → logprob: -12.568498611450195
    8. ' ' → logprob: -12.943498611450195
    9. '):

' → logprob: -12.943498611450195
    10. 'self' → logprob: -13.693498611450195

Token 888: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018471283838152885
    2. ' pass' → logprob: -7.251847267150879
    3. 'def' → logprob: -7.376847267150879
    4. 'pass' → logprob: -7.626847267150879
    5. ' def' → logprob: -11.751847267150879
    6. '	pass' → logprob: -12.126847267150879
    7. '
' → logprob: -12.626847267150879
    8. '       ' → logprob: -12.751847267150879
    9. ')' → logprob: -13.126847267150879
    10. '```' → logprob: -13.876847267150879

Token 889: ' pass' (ID: 1853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.925524890422821
    2. 'pass' (adapté à ' pass') → logprob: -1.1755249500274658
    3. '       ' → logprob: -1.4255249500274658
    4. ' pass' → logprob: -2.925524950027466
    5. 'def' → logprob: -7.550524711608887
    6. '	pass' → logprob: -7.675524711608887
    7. '
' → logprob: -13.050524711608887
    8. ' def' → logprob: -13.050524711608887
    9. '           ' → logprob: -13.550524711608887
    10. 'Pass' → logprob: -13.800524711608887

Token 890: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007531665614806116
    2. '
' → logprob: -7.250753402709961
    3. 'def' → logprob: -10.500753402709961
    4. '    
' → logprob: -11.500753402709961
    5. ' def' → logprob: -12.750753402709961
    6. '```' → logprob: -14.125753402709961
    7. '<|end|>' → logprob: -14.250753402709961
    8. ' ' → logprob: -15.000753402709961
    9. '  ' → logprob: -15.625753402709961
    10. '  
' → logprob: -15.875753402709961

Token 891: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025554499588906765
    2. '
' → logprob: -6.1275553703308105
    3. 'def' → logprob: -8.252555847167969
    4. '    
' → logprob: -9.877555847167969
    5. ' def' → logprob: -10.627555847167969
    6. 'class' → logprob: -11.252555847167969
    7. '```' → logprob: -11.377555847167969
    8. ' ' → logprob: -13.377555847167969
    9. '

' → logprob: -13.627555847167969
    10. 'indent' → logprob: -13.752555847167969

Token 892: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.128163257315464e-07
    2. ' def' → logprob: -15.375
    3. '   ' → logprob: -17.5
    4. 'class' → logprob: -18.5
    5. '
' → logprob: -18.875
    6. 'de' → logprob: -21.5
    7. '	def' → logprob: -21.625
    8. '```' → logprob: -22.75
    9. '@' → logprob: -22.875
    10. '    
' → logprob: -24.125

Token 893: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.014227912761271
    2. 'print' → logprob: -4.264227867126465
    3. 'display' → logprob: -10.514227867126465
    4. 'output' → logprob: -10.764227867126465
    5. 'write' → logprob: -11.389227867126465
    6. 'prepare' → logprob: -14.139227867126465
    7. 'generate' → logprob: -14.264227867126465
    8. 'produce' → logprob: -14.264227867126465
    9. 'def' → logprob: -14.389227867126465
    10. ' format' → logprob: -14.639227867126465

Token 894: '_w' (ID: 3567)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09176149219274521
    2. '_result' → logprob: -2.591761589050293
    3. '_w' → logprob: -4.591761589050293
    4. '_output' → logprob: -6.466761589050293
    5. '_results' → logprob: -7.716761589050293
    6. '(' → logprob: -8.091761589050293
    7. 'result' → logprob: -8.966761589050293
    8. '_out' → logprob: -9.591761589050293
    9. '_win' → logprob: -10.466761589050293
    10. '(w' → logprob: -10.591761589050293

Token 895: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.0010526961414143443
    2. 'inning' → logprob: -7.6260528564453125
    3. 'inners' → logprob: -7.7510528564453125
    4. 'in' → logprob: -9.376052856445312
    5. 'inn' → logprob: -10.876052856445312
    6. 'winner' → logprob: -11.751052856445312
    7. 'ins' → logprob: -11.751052856445312
    8. 'innings' → logprob: -13.001052856445312
    9. 'iner' → logprob: -13.251052856445312
    10. 'riter' → logprob: -13.501052856445312

Token 896: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.62501049041748
    3. 'self' → logprob: -14.25001049041748
    4. '_name' → logprob: -14.25001049041748
    5. ' (' → logprob: -15.75001049041748
    6. '(s' → logprob: -16.625011444091797
    7. '(player' → logprob: -17.000011444091797
    8. 'name' → logprob: -18.000011444091797
    9. '_(' → logprob: -18.375011444091797
    10. '_w' → logprob: -18.500011444091797

Token 897: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008387038484215736
    2. ',' → logprob: -5.133387088775635
    3. 'self' → logprob: -6.133387088775635
    4. ')' → logprob: -9.508386611938477
    5. ')(' → logprob: -9.508386611938477
    6. ' (' → logprob: -9.633386611938477
    7. '(' → logprob: -10.633386611938477
    8. ',self' → logprob: -11.633386611938477
    9. ' self' → logprob: -11.758386611938477
    10. '(player' → logprob: -11.883386611938477

Token 898: ' player' (ID: 5033)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.28229349851608276
    2. 'player' → logprob: -1.4072935581207275
    3. ' winner' → logprob: -7.407293319702148
    4. 'name' → logprob: -8.157293319702148
    5. ' player' → logprob: -8.782293319702148
    6. 'number' → logprob: -9.532293319702148
    7. 'w' → logprob: -11.407293319702148
    8. 'index' → logprob: -12.282293319702148
    9. 'winning' → logprob: -13.532293319702148
    10. 'result' → logprob: -13.782293319702148

Token 899: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00818486139178276
    2. ')' → logprob: -5.008184909820557
    3. '_name' → logprob: -6.633184909820557
    4. 'name' → logprob: -9.258184432983398
    5. '):' → logprob: -10.258184432983398
    6. '):
' → logprob: -12.008184432983398
    7. ' :' → logprob: -12.008184432983398
    8. ',' → logprob: -13.133184432983398
    9. '   ' → logprob: -13.508184432983398
    10. 'Name' → logprob: -13.633184432983398

Token 900: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.0004353181866463274
    2. ' Player' → logprob: -8.125434875488281
    3. ')' → logprob: -9.125434875488281
    4. 'str' → logprob: -10.750434875488281
    5. '(Player' → logprob: -12.625434875488281
    6. '	Player' → logprob: -13.000434875488281
    7. 'name' → logprob: -13.500434875488281
    8. 'player' → logprob: -14.500434875488281
    9. '<Player' → logprob: -14.625434875488281
    10. '_Player' → logprob: -14.875434875488281

Token 901: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02979491837322712
    2. ',' → logprob: -3.529794931411743
    3. '   ' → logprob: -10.779794692993164
    4. ' )' → logprob: -10.779794692993164
    5. ' ,' → logprob: -13.779794692993164
    6. ')->' → logprob: -14.279794692993164
    7. ',)' → logprob: -14.654794692993164
    8. 'self' → logprob: -15.529794692993164
    9. 'player' → logprob: -15.779794692993164
    10. '       ' → logprob: -15.904794692993164

Token 902: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.4635535776615143
    2. '->' → logprob: -1.088553547859192
    3. ')' → logprob: -3.4635536670684814
    4. ')->' → logprob: -5.963553428649902
    5. '       ' → logprob: -8.463553428649902
    6. ',' → logprob: -9.838553428649902
    7. '()->' → logprob: -10.463553428649902
    8. '   ' → logprob: -10.588553428649902
    9. ':' → logprob: -11.213553428649902
    10. '->[' → logprob: -11.588553428649902

Token 903: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00026646157493814826
    2. ' str' → logprob: -8.250266075134277
    3. '[str' → logprob: -12.500266075134277
    4. '   ' → logprob: -14.500266075134277
    5. '
' → logprob: -14.875266075134277
    6. '(str' → logprob: -15.375266075134277
    7. 's' → logprob: -16.125267028808594
    8. ' ' → logprob: -16.750267028808594
    9. 'string' → logprob: -17.000267028808594
    10. 'def' → logprob: -17.250267028808594

Token 904: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04896804317831993
    2. '       ' → logprob: -3.1739680767059326
    3. '(' → logprob: -5.6739678382873535
    4. ':' → logprob: -7.0489678382873535
    5. 'self' → logprob: -7.1739678382873535
    6. '   ' → logprob: -8.048968315124512
    7. ':
' → logprob: -8.173968315124512
    8. 'def' → logprob: -9.673968315124512
    9. '->' → logprob: -9.798968315124512
    10. '(
' → logprob: -10.173968315124512

Token 905: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018257176503539085
    2. 'return' → logprob: -4.018257141113281
    3. ' return' → logprob: -9.143257141113281
    4. '   ' → logprob: -16.26825714111328
    5. '           ' → logprob: -16.64325714111328
    6. 'if' → logprob: -16.64325714111328
    7. 'f' → logprob: -17.14325714111328
    8. '"' → logprob: -17.14325714111328
    9. '{return' → logprob: -17.26825714111328
    10. '```' → logprob: -17.64325714111328

Token 906: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011409135535359383
    2. 'player' → logprob: -4.511409282684326
    3. 'f' → logprob: -8.386408805847168
    4. '       ' → logprob: -9.761408805847168
    5. ' return' → logprob: -9.886408805847168
    6. 'if' → logprob: -11.011408805847168
    7. '   ' → logprob: -12.761408805847168
    8. '"' → logprob: -13.136408805847168
    9. ' player' → logprob: -13.636408805847168
    10. '           ' → logprob: -14.011408805847168

Token 907: ' According' (ID: 16344)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0022122275549918413
    2. 'if' → logprob: -6.252212047576904
    3. '       ' → logprob: -8.377212524414062
    4. ' return' → logprob: -9.877212524414062
    5. '   ' → logprob: -14.252212524414062
    6. '           ' → logprob: -14.502212524414062
    7. '#' → logprob: -15.127212524414062
    8. ' if' → logprob: -15.252212524414062
    9. 'result' → logprob: -15.877212524414062
    10. 'Return' → logprob: -16.502212524414062

Token 908: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.01817956008017063
    2. ' to' → logprob: -4.018179416656494
    3. 'return' → logprob: -11.768179893493652
    4. '   ' → logprob: -12.268179893493652
    5. 'ly' → logprob: -12.643179893493652
    6. '
' → logprob: -12.768179893493652
    7. '_to' → logprob: -12.893179893493652
    8. ' ' → logprob: -13.393179893493652
    9. 't' → logprob: -13.518179893493652
    10. 'player' → logprob: -13.768179893493652

Token 909: ' problem' (ID: 4792)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.22402608394622803
    2. 'the' → logprob: -1.724026083946228
    3. '"' → logprob: -4.724026203155518
    4. 'problem' → logprob: -5.099026203155518
    5. 'f' → logprob: -5.974026203155518
    6. ' player' → logprob: -6.349026203155518
    7. ' the' → logprob: -7.099026203155518
    8. 'name' → logprob: -8.09902572631836
    9. '#' → logprob: -8.09902572631836
    10. 'standard' → logprob: -8.59902572631836

Token 910: ' statement' (ID: 9710)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2766611576080322
    2. ' statement' → logprob: -1.5266611576080322
    3. ' description' → logprob: -1.7766611576080322
    4. 'name' → logprob: -2.9016611576080322
    5. ' return' → logprob: -3.1516611576080322
    6. '       ' → logprob: -3.2766611576080322
    7. 'description' → logprob: -3.5266611576080322
    8. ' logic' → logprob: -3.9016611576080322
    9. 'statement' → logprob: -3.9016611576080322
    10. ',' → logprob: -4.026660919189453

Token 911: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6104000210762024
    2. '       ' → logprob: -0.8604000210762024
    3. ' return' → logprob: -3.4853999614715576
    4. 'if' → logprob: -6.235400199890137
    5. ' if' → logprob: -6.735400199890137
    6. '           ' → logprob: -9.610400199890137
    7. ':' → logprob: -12.610400199890137
    8. '   ' → logprob: -12.610400199890137
    9. '{return' → logprob: -13.110400199890137
    10. '	return' → logprob: -13.735400199890137

Token 912: ' add' (ID: 1147)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0072289202362298965
    2. '       ' → logprob: -5.632228851318359
    3. ' return' → logprob: -5.757228851318359
    4. 'if' → logprob: -7.757228851318359
    5. '#' → logprob: -10.88222885131836
    6. '           ' → logprob: -11.50722885131836
    7. ' if' → logprob: -12.38222885131836
    8. '
' → logprob: -14.63222885131836
    9. '   ' → logprob: -14.75722885131836
    10. '	return' → logprob: -15.38222885131836

Token 913: ' period' (ID: 5265)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.044142723083496094
    2. ' "' → logprob: -3.919142723083496
    3. 'f' → logprob: -4.419142723083496
    4. ' f' → logprob: -5.044142723083496
    5. '":' → logprob: -6.544142723083496
    6. ''' → logprob: -7.669142723083496
    7. ' a' → logprob: -7.919142723083496
    8. 'the' → logprob: -7.919142723083496
    9. 'return' → logprob: -8.044142723083496
    10. '"a' → logprob: -8.044142723083496

Token 914: ' at' (ID: 540)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.721977949142456
    2. '       ' → logprob: -0.721977949142456
    3. 'return' → logprob: -4.096978187561035
    4. '           ' → logprob: -5.721978187561035
    5. '".' → logprob: -5.846978187561035
    6. '.
' → logprob: -6.221978187561035
    7. '"."' → logprob: -7.471978187561035
    8. ' return' → logprob: -7.471978187561035
    9. ' +' → logprob: -7.596978187561035
    10. '"' → logprob: -7.971978187561035

Token 915: ' end' (ID: 1268)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.02271643653512001
    2. ' the' → logprob: -4.022716522216797
    3. 'end' → logprob: -5.397716522216797
    4. ' end' → logprob: -10.522716522216797
    5. 'return' → logprob: -13.647716522216797
    6. 's' → logprob: -15.397716522216797
    7. ''s' → logprob: -15.647716522216797
    8. '<|end|>' → logprob: -15.772716522216797
    9. '.' → logprob: -16.272716522216797
    10. '"' → logprob: -16.647716522216797

Token 916: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4246980547904968
    2. 'return' → logprob: -1.1746981143951416
    3. ' return' → logprob: -3.2996981143951416
    4. '.' → logprob: -9.049697875976562
    5. '           ' → logprob: -10.549697875976562
    6. '   ' → logprob: -11.174697875976562
    7. '{return' → logprob: -11.174697875976562
    8. '.return' → logprob: -11.674697875976562
    9. '	return' → logprob: -11.924697875976562
    10. '{' → logprob: -12.049697875976562

Token 917: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6947490572929382
    2. 'return' → logprob: -0.6947490572929382
    3. ' return' → logprob: -6.444748878479004
    4. '   ' → logprob: -12.944748878479004
    5. '           ' → logprob: -13.194748878479004
    6. '.' → logprob: -13.444748878479004
    7. '```' → logprob: -13.819748878479004
    8. '{return' → logprob: -13.944748878479004
    9. '()' → logprob: -14.069748878479004
    10. '	return' → logprob: -14.069748878479004

Token 918: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006728395354002714
    2. '       ' → logprob: -5.256728172302246
    3. ' return' → logprob: -6.506728172302246
    4. '	return' → logprob: -17.131729125976562
    5. '{return' → logprob: -17.256729125976562
    6. '           ' → logprob: -19.006729125976562
    7. '   ' → logprob: -19.381729125976562
    8. 'eturn' → logprob: -19.631729125976562
    9. '```' → logprob: -20.131729125976562
    10. 'result' → logprob: -21.506729125976562

Token 919: ' f' (ID: 285)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.023933131247758865
    2. 'f' → logprob: -3.773933172225952
    3. ' player' → logprob: -7.398932933807373
    4. ' f' → logprob: -10.023933410644531
    5. '(player' → logprob: -10.648933410644531
    6. 'self' → logprob: -12.273933410644531
    7. '"' → logprob: -14.148933410644531
    8. '[player' → logprob: -14.148933410644531
    9. '	player' → logprob: -14.523933410644531
    10. '   ' → logprob: -15.773933410644531

Token 920: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.002957019954919815
    2. '{' → logprob: -5.877956867218018
    3. ''{' → logprob: -10.002957344055176
    4. '"The' → logprob: -10.377957344055176
    5. '"' → logprob: -10.502957344055176
    6. 'player' → logprob: -10.627957344055176
    7. '(player' → logprob: -10.752957344055176
    8. 'f' → logprob: -14.002957344055176
    9. '("{' → logprob: -14.377957344055176
    10. '[player' → logprob: -14.877957344055176

Token 921: 'player' (ID: 6450)
  Prédit: 'player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -5.512236498361744e-07
    2. ' player' → logprob: -15.125000953674316
    3. 'str' → logprob: -16.375
    4. '{' → logprob: -16.5
    5. '(player' → logprob: -17.0
    6. '[player' → logprob: -17.125
    7. '	player' → logprob: -18.0
    8. 'self' → logprob: -18.0
    9. 'players' → logprob: -18.5
    10. 'user' → logprob: -18.625

Token 922: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.0007263714214786887
    2. '().' → logprob: -7.250726222991943
    3. '.' → logprob: -11.375726699829102
    4. 'name' → logprob: -12.750726699829102
    5. ' .' → logprob: -13.625726699829102
    6. '}.' → logprob: -14.375726699829102
    7. ').' → logprob: -16.2507266998291
    8. '(name' → logprob: -16.5007266998291
    9. '()' → logprob: -17.3757266998291
    10. '   ' → logprob: -18.5007266998291

Token 923: '()}' (ID: 38237)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4299699366092682
    2. '()}' → logprob: -1.0549699068069458
    3. '().' → logprob: -7.554969787597656
    4. '}' → logprob: -7.679969787597656
    5. '()"' → logprob: -8.304969787597656
    6. '()},' → logprob: -11.804969787597656
    7. '}.' → logprob: -11.929969787597656
    8. '()).' → logprob: -12.554969787597656
    9. '()`' → logprob: -13.179969787597656
    10. '())' → logprob: -13.304969787597656

Token 924: ' wins' (ID: 25327)
  Prédit: '."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '."' → logprob: -0.020955348387360573
    2. '().' → logprob: -3.8959553241729736
    3. '.' → logprob: -8.770955085754395
    4. '().'' → logprob: -9.020955085754395
    5. '()"' → logprob: -9.895955085754395
    6. '()' → logprob: -9.895955085754395
    7. '."""' → logprob: -10.770955085754395
    8. '."'' → logprob: -11.895955085754395
    9. '."
' → logprob: -13.395955085754395
    10. '.'"' → logprob: -13.645955085754395

Token 925: '."

' (ID: 6635)
  Prédit: '."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '."' → logprob: -6.2729995988775045e-06
    2. '.' → logprob: -13.250006675720215
    3. '."
' → logprob: -13.375006675720215
    4. '."""' → logprob: -13.625006675720215
    5. '."
' → logprob: -14.500006675720215
    6. '."

' → logprob: -14.875006675720215
    7. '."'' → logprob: -14.875006675720215
    8. '.'"' → logprob: -15.500006675720215
    9. '"' → logprob: -16.5000057220459
    10. '.")' → logprob: -16.6250057220459

Token 926: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 927: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011235743761062622
    2. ' main' → logprob: -4.51123571395874
    3. '_main' → logprob: -9.011236190795898
    4. 'run' → logprob: -10.386236190795898
    5. 'def' → logprob: -10.761236190795898
    6. 'play' → logprob: -12.011236190795898
    7. 'solve' → logprob: -12.511236190795898
    8. '__' → logprob: -13.761236190795898
    9. 'simulate' → logprob: -14.761236190795898
    10. '```' → logprob: -14.761236190795898

Token 928: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001830410328693688
    2. '():
' → logprob: -8.62518310546875
    3. ' ():' → logprob: -13.00018310546875
    4. '()' → logprob: -13.87518310546875
    5. '():
' → logprob: -15.62518310546875
    6. '():

' → logprob: -17.37518310546875
    7. ':' → logprob: -17.50018310546875
    8. '(' → logprob: -17.87518310546875
    9. '().' → logprob: -18.00018310546875
    10. '()>' → logprob: -18.25018310546875

Token 929: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002048197668045759
    2. 'parser' → logprob: -6.252048015594482
    3. ' parser' → logprob: -9.50204849243164
    4. 'input' → logprob: -10.12704849243164
    5. '	parser' → logprob: -12.75204849243164
    6. 'ip' → logprob: -13.87704849243164
    7. '   ' → logprob: -14.87704849243164
    8. ' input' → logprob: -15.75204849243164
    9. '_parser' → logprob: -16.00204849243164
    10. 'parse' → logprob: -16.12704849243164

Token 930: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.11336781829595566
    2. '   ' → logprob: -2.363367795944214
    3. 'input' → logprob: -4.613368034362793
    4. ' parser' → logprob: -5.863368034362793
    5. 'ip' → logprob: -8.613368034362793
    6. 'import' → logprob: -9.988368034362793
    7. 'inputs' → logprob: -10.488368034362793
    8. ' input' → logprob: -11.113368034362793
    9. 'first' → logprob: -11.613368034362793
    10. '	parser' → logprob: -12.113368034362793

Token 931: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.225449338555336
    2. '=' → logprob: -1.6004493236541748
    3. '   ' → logprob: -11.100449562072754
    4. '()' → logprob: -11.100449562072754
    5. ' ' → logprob: -13.100449562072754
    6. '  ' → logprob: -13.475449562072754
    7. '_parser' → logprob: -14.725449562072754
    8. 'parser' → logprob: -14.975449562072754
    9. '().' → logprob: -15.100449562072754
    10. ')' → logprob: -15.225449562072754

Token 932: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.9361264946837764e-07
    2. ' Input' → logprob: -16.0
    3. 'input' → logprob: -23.125
    4. '	Input' → logprob: -23.125
    5. '<Input' → logprob: -24.0
    6. '_input' → logprob: -24.875
    7. '_Input' → logprob: -25.375
    8. 'Output' → logprob: -25.625
    9. '\Input' → logprob: -25.625
    10. ' ' → logprob: -26.125

Token 933: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. 'parser' → logprob: -16.5
    3. '_parser' → logprob: -18.25
    4. '(Parser' → logprob: -19.125
    5. '.Parser' → logprob: -20.0
    6. 'Parse' → logprob: -20.0
    7. ' Parser' → logprob: -21.25
    8. 'Parsed' → logprob: -21.375
    9. 'Processor' → logprob: -21.5
    10. '-parser' → logprob: -21.5

Token 934: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022423548623919487
    2. '
' → logprob: -4.02242374420166
    3. 'numbers' → logprob: -6.27242374420166
    4. '()' → logprob: -6.64742374420166
    5. '()
' → logprob: -7.52242374420166
    6. '    
' → logprob: -8.02242374420166
    7. '(numbers' → logprob: -10.02242374420166
    8. '
' → logprob: -10.14742374420166
    9. ' numbers' → logprob: -10.77242374420166
    10. '  
' → logprob: -10.77242374420166

Token 935: '   ' (ID: 271)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.024165533483028412
    2. '   ' → logprob: -3.774165630340576
    3. ' numbers' → logprob: -7.524165630340576
    4. 'inputs' → logprob: -8.149165153503418
    5. 'nums' → logprob: -9.899165153503418
    6. 'number' → logprob: -10.649165153503418
    7. 'initial' → logprob: -12.274165153503418
    8. 'input' → logprob: -12.899165153503418
    9. '```' → logprob: -12.899165153503418
    10. '
' → logprob: -13.399165153503418

Token 936: ' formatter' (ID: 50323)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.00027575582498684525
    2. 'initial' → logprob: -9.375275611877441
    3. 'nums' → logprob: -9.625275611877441
    4. 'number' → logprob: -9.875275611877441
    5. 'inputs' → logprob: -10.375275611877441
    6. '   ' → logprob: -10.625275611877441
    7. ' numbers' → logprob: -11.250275611877441
    8. 'num' → logprob: -14.000275611877441
    9. 'results' → logprob: -14.125275611877441
    10. 'game' → logprob: -14.250275611877441

Token 937: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759470462799072
    2. ' =' → logprob: -0.8259470462799072
    3. '   ' → logprob: -12.325946807861328
    4. ' ' → logprob: -13.200946807861328
    5. '  ' → logprob: -14.075946807861328
    6. '=n' → logprob: -16.075946807861328
    7. '=format' → logprob: -16.200946807861328
    8. '    ' → logprob: -16.950946807861328
    9. 's' → logprob: -16.950946807861328
    10. ',' → logprob: -16.950946807861328

Token 938: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -3.547789674485102e-05
    2. ' Output' → logprob: -10.250035285949707
    3. '	Output' → logprob: -19.250036239624023
    4. '   ' → logprob: -19.500036239624023
    5. '(Output' → logprob: -22.125036239624023
    6. 'output' → logprob: -22.125036239624023
    7. ' ' → logprob: -22.750036239624023
    8. 'Input' → logprob: -23.125036239624023
    9. '  ' → logprob: -23.250036239624023
    10. 'Out' → logprob: -24.250036239624023

Token 939: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -1.9361264946837764e-07
    2. 'Format' → logprob: -16.5
    3. 'formatter' → logprob: -17.125
    4. 'Parser' → logprob: -19.375
    5. '_formatter' → logprob: -19.5
    6. ' Formatter' → logprob: -19.625
    7. '   ' → logprob: -20.875
    8. 'Form' → logprob: -21.625
    9. 'Validator' → logprob: -22.375
    10. 'Handler' → logprob: -22.375

Token 940: '()
' (ID: 1234)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.2076510787010193
    2. '   ' → logprob: -1.707651138305664
    3. '
' → logprob: -5.707651138305664
    4. ' numbers' → logprob: -6.207651138305664
    5. 'nums' → logprob: -7.832651138305664
    6. 'inputs' → logprob: -8.832651138305664
    7. 'for' → logprob: -8.957651138305664
    8. 'number' → logprob: -9.207651138305664
    9. '    
' → logprob: -10.332651138305664
    10. 'input' → logprob: -10.957651138305664

Token 941: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5792104005813599
    2. 'numbers' → logprob: -0.8292104005813599
    3. ' numbers' → logprob: -6.07921028137207
    4. 'inputs' → logprob: -7.70421028137207
    5. 'nums' → logprob: -8.07921028137207
    6. 'for' → logprob: -9.20421028137207
    7. 'number' → logprob: -10.32921028137207
    8. '
' → logprob: -10.57921028137207
    9. '    
' → logprob: -11.57921028137207
    10. 'input' → logprob: -11.57921028137207

Token 942: ' player' (ID: 5033)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.002025827532634139
    2. '   ' → logprob: -7.127025604248047
    3. 'initial' → logprob: -7.252025604248047
    4. 'nums' → logprob: -8.377025604248047
    5. 'inputs' → logprob: -8.627025604248047
    6. ' numbers' → logprob: -10.002025604248047
    7. 'number' → logprob: -10.252025604248047
    8. 'input' → logprob: -11.627025604248047
    9. 'for' → logprob: -11.752025604248047
    10. 'num' → logprob: -13.877025604248047

Token 943: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1207471489906311
    2. '_one' → logprob: -2.9957470893859863
    3. '_f' → logprob: -3.2457470893859863
    4. '_first' → logprob: -4.620747089385986
    5. 's' → logprob: -4.745747089385986
    6. ' =' → logprob: -5.245747089385986
    7. '_s' → logprob: -8.245747566223145
    8. '=' → logprob: -8.370747566223145
    9. '_a' → logprob: -8.620747566223145
    10. '_' → logprob: -9.370747566223145

Token 944: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011188817210495472
    2. '=' → logprob: -4.511188983917236
    3. ',' → logprob: -8.886188507080078
    4. ' ' → logprob: -13.886188507080078
    5. 's' → logprob: -14.386188507080078
    6. '1' → logprob: -14.636188507080078
    7. ' =
' → logprob: -15.136188507080078
    8. '   ' → logprob: -15.886188507080078
    9. ' ,' → logprob: -16.136188507080078
    10. '  ' → logprob: -16.636188507080078

Token 945: ' Fab' (ID: 44633)
  Prédit: 'Fab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fab' → logprob: -0.0002989968634210527
    2. ' Fab' → logprob: -8.125299453735352
    3. 'Aud' → logprob: -13.000299453735352
    4. 'Fabric' → logprob: -14.875299453735352
    5. 'F' → logprob: -15.750299453735352
    6. '   ' → logprob: -16.62529945373535
    7. 'fab' → logprob: -17.00029945373535
    8. ' ' → logprob: -17.50029945373535
    9. ' fab' → logprob: -17.75029945373535
    10. ' ' → logprob: -18.50029945373535

Token 946: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -6.704273118884885e-07
    2. ' re' → logprob: -15.000000953674316
    3. '	re' → logprob: -16.0
    4. 'ref' → logprob: -16.625
    5. 'ре' → logprob: -17.75
    6. '(re' → logprob: -18.625
    7. 'rel' → logprob: -18.625
    8. 'r' → logprob: -18.625
    9. 'repr' → logprob: -18.875
    10. 'res' → logprob: -19.125

Token 947: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.0486091673374176
    2. '()' → logprob: -3.0486092567443848
    3. '   ' → logprob: -10.798608779907227
    4. '()
' → logprob: -13.798608779907227
    5. '()

' → logprob: -16.048608779907227
    6. 'player' → logprob: -16.173608779907227
    7. ' ()
' → logprob: -16.798608779907227
    8. '()\' → logprob: -17.048608779907227
    9. 'Player' → logprob: -17.798608779907227
    10. '
' → logprob: -18.048608779907227

Token 948: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009991814382374287
    2. 'player' → logprob: -4.634991645812988
    3. ' player' → logprob: -8.384991645812988
    4. '	player' → logprob: -12.759991645812988
    5. '
' → logprob: -13.759991645812988
    6. '(player' → logprob: -13.884991645812988
    7. '    
' → logprob: -14.009991645812988
    8. '[player' → logprob: -14.259991645812988
    9. '```' → logprob: -15.134991645812988
    10. '       ' → logprob: -15.384991645812988

Token 949: ' player' (ID: 5033)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' (adapté à ' player') → logprob: -5.967624019831419e-05
    2. ' player' → logprob: -9.875060081481934
    3. '   ' → logprob: -11.750060081481934
    4. '	player' → logprob: -15.500060081481934
    5. 'Player' → logprob: -17.250059127807617
    6. '(player' → logprob: -18.875059127807617
    7. '    
' → logprob: -19.000059127807617
    8. '.player' → logprob: -19.125059127807617
    9. '[player' → logprob: -19.250059127807617
    10. 'user' → logprob: -19.500059127807617

Token 950: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -13.125003814697266
    3. '   ' → logprob: -13.750003814697266
    4. '=' → logprob: -14.750003814697266
    5. ' =' → logprob: -15.500003814697266
    6. '
' → logprob: -15.875003814697266
    7. 'player' → logprob: -16.500003814697266
    8. '  ' → logprob: -17.000003814697266
    9. 'er' → logprob: -18.000003814697266
    10. '_' → logprob: -18.375003814697266

Token 951: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024574637413025
    2. '=' → logprob: -1.9102457761764526
    3. '(' → logprob: -11.160245895385742
    4. '(A' → logprob: -13.035245895385742
    5. '()' → logprob: -13.035245895385742
    6. '   ' → logprob: -14.035245895385742
    7. '=A' → logprob: -14.035245895385742
    8. 'A' → logprob: -14.660245895385742
    9. ' ' → logprob: -15.035245895385742
    10. ')' → logprob: -15.660245895385742

Token 952: ' Audrey' (ID: 136593)
  Prédit: 'Aud'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Aud' → logprob: -1.0206720617134124e-05
    2. ' Audrey' → logprob: -11.50001049041748
    3. 'Audit' → logprob: -18.000009536743164
    4. 'aud' → logprob: -18.750009536743164
    5. ' Aud' → logprob: -20.000009536743164
    6. 'Aur' → logprob: -20.000009536743164
    7. 'Audi' → logprob: -20.375009536743164
    8. '   ' → logprob: -20.750009536743164
    9. 'AUD' → logprob: -21.625009536743164
    10. 'Fab' → logprob: -21.750009536743164

Token 953: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12436147034168243
    2. '
' → logprob: -2.874361515045166
    3. 'numbers' → logprob: -2.874361515045166
    4. ' numbers' → logprob: -5.874361515045166
    5. '    
' → logprob: -7.249361515045166
    6. 'nums' → logprob: -9.124361038208008
    7. 'number' → logprob: -9.624361038208008
    8. 'inputs' → logprob: -9.749361038208008
    9. 'for' → logprob: -10.249361038208008
    10. '```' → logprob: -10.374361038208008

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2319498509168625
    2. 'numbers' → logprob: -1.606949806213379
    3. '
' → logprob: -5.356949806213379
    4. ' numbers' → logprob: -7.106949806213379
    5. 'inputs' → logprob: -7.856949806213379
    6. 'nums' → logprob: -8.231949806213379
    7. 'for' → logprob: -8.981949806213379
    8. 'number' → logprob: -9.106949806213379
    9. 'input' → logprob: -10.106949806213379
    10. '    
' → logprob: -11.231949806213379

Token 955: ' test' (ID: 1746)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.0008706060471013188
    2. 'inputs' → logprob: -7.875870704650879
    3. 'initial' → logprob: -8.000870704650879
    4. 'number' → logprob: -9.750870704650879
    5. 'nums' → logprob: -10.000870704650879
    6. 'for' → logprob: -10.250870704650879
    7. 'input' → logprob: -11.500870704650879
    8. ' numbers' → logprob: -12.250870704650879
    9. 'dataset' → logprob: -14.875870704650879
    10. 'num' → logprob: -15.375870704650879

Token 956: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.33162322640419006
    2. '_cases' → logprob: -1.3316231966018677
    3. 's' → logprob: -4.456623077392578
    4. '_inputs' → logprob: -5.206623077392578
    5. 'cases' → logprob: -6.956623077392578
    6. '_nums' → logprob: -9.331623077392578
    7. '   ' → logprob: -11.206623077392578
    8. '
' → logprob: -11.206623077392578
    9. '_strings' → logprob: -11.456623077392578
    10. '_data' → logprob: -11.831623077392578

Token 957: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020710527896881
    2. '=' → logprob: -2.3502070903778076
    3. 's' → logprob: -14.600207328796387
    4. ':' → logprob: -17.60020637512207
    5. '   ' → logprob: -17.60020637512207
    6. '  ' → logprob: -18.72520637512207
    7. ' ' → logprob: -19.35020637512207
    8. '=[]' → logprob: -19.47520637512207
    9. ' ' → logprob: -19.47520637512207
    10. '＝' → logprob: -19.72520637512207

Token 958: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.07889000326395035
    2. ' parser' → logprob: -2.578890085220337
    3. '(parser' → logprob: -15.953889846801758
    4. '	parser' → logprob: -16.078889846801758
    5. '   ' → logprob: -18.078889846801758
    6. '.parser' → logprob: -19.953889846801758
    7. 'parse' → logprob: -20.328889846801758
    8. 'Parser' → logprob: -20.828889846801758
    9. ' ' → logprob: -20.828889846801758
    10. 'par' → logprob: -20.953889846801758

Token 959: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -3.03521392197581e-05
    2. '.' → logprob: -10.500030517578125
    3. 'parse' → logprob: -12.875030517578125
    4. '=parse' → logprob: -16.250030517578125
    5. ' .' → logprob: -16.750030517578125
    6. '.Parse' → logprob: -19.250030517578125
    7. '.read' → logprob: -19.875030517578125
    8. '.decode' → logprob: -19.875030517578125
    9. '_parse' → logprob: -20.250030517578125
    10. '   ' → logprob: -20.250030517578125

Token 960: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.7146746763028204e-05
    2. 'input' → logprob: -10.50003719329834
    3. 'Input' → logprob: -11.75003719329834
    4. '()' → logprob: -15.00003719329834
    5. '```' → logprob: -15.25003719329834
    6. '_' → logprob: -15.62503719329834
    7. '_inputs' → logprob: -16.125036239624023
    8. '_output' → logprob: -16.125036239624023
    9. '(_' → logprob: -16.375036239624023
    10. '(input' → logprob: -16.375036239624023

Token 961: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06007281690835953
    2. ' for' → logprob: -3.435072898864746
    3. 'for' → logprob: -3.810072898864746
    4. '
' → logprob: -5.685072898864746
    5. '    
' → logprob: -7.685072898864746
    6. '<|end|>' → logprob: -9.810072898864746
    7. '	for' → logprob: -12.310072898864746
    8. '()
' → logprob: -12.560072898864746
    9. '<|end|>' → logprob: -12.560072898864746
    10. '  
' → logprob: -12.810072898864746

Token 962: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15349581837654114
    2. '   ' → logprob: -2.1534957885742188
    3. ' for' → logprob: -3.6534957885742188
    4. '
' → logprob: -8.528495788574219
    5. 'results' → logprob: -9.278495788574219
    6. '    
' → logprob: -11.028495788574219
    7. '```' → logprob: -12.278495788574219
    8. 'result' → logprob: -13.403495788574219
    9. '	for' → logprob: -13.528495788574219
    10. ' results' → logprob: -14.153495788574219

Token 963: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.9266199160483666e-05
    2. '   ' → logprob: -11.000019073486328
    3. 'strategy' → logprob: -13.500019073486328
    4. ' for' → logprob: -13.750019073486328
    5. 'results' → logprob: -17.250019073486328
    6. '
' → logprob: -17.500019073486328
    7. 'strateg' → logprob: -18.375019073486328
    8. '```' → logprob: -19.000019073486328
    9. '    
' → logprob: -20.375019073486328
    10. '	for' → logprob: -21.000019073486328

Token 964: ' number' (ID: 2086)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4987238645553589
    2. 'number' → logprob: -1.2487238645553589
    3. ' number' → logprob: -2.4987239837646484
    4. ' num' → logprob: -3.7487239837646484
    5. '   ' → logprob: -9.373723983764648
    6. ' ' → logprob: -14.623723983764648
    7. 'n' → logprob: -15.373723983764648
    8. 'initial' → logprob: -15.623723983764648
    9. '       ' → logprob: -15.873723983764648
    10. '  ' → logprob: -15.998723983764648

Token 965: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029765412211418152
    2. 'in' → logprob: -3.5297653675079346
    3. '_in' → logprob: -12.154765129089355
    4. '	in' → logprob: -12.404765129089355
    5. '   ' → logprob: -13.154765129089355
    6. ' ' → logprob: -14.154765129089355
    7. '_' → logprob: -14.279765129089355
    8. ',' → logprob: -14.654765129089355
    9. 's' → logprob: -15.029765129089355
    10. 'In' → logprob: -15.654765129089355

Token 966: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.00020413640595506877
    2. ' test' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.375204086303711
    4. '(test' → logprob: -18.37520408630371
    5. ' ' → logprob: -19.75020408630371
    6. '	test' → logprob: -20.50020408630371
    7. '  ' → logprob: -20.75020408630371
    8. '
' → logprob: -21.50020408630371
    9. '```' → logprob: -21.87520408630371
    10. '[test' → logprob: -22.00020408630371

Token 967: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.250004768371582
    3. '_number' → logprob: -14.875004768371582
    4. '_n' → logprob: -17.6250057220459
    5. '_
' → logprob: -17.7500057220459
    6. 'numbers' → logprob: -18.0000057220459
    7. 's' → logprob: -18.1250057220459
    8. '_:' → logprob: -18.5000057220459
    9. '(numbers' → logprob: -19.3750057220459
    10. ' _' → logprob: -19.7500057220459

Token 968: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16709302365779877
    2. ':
' → logprob: -1.91709303855896
    3. '       ' → logprob: -5.042092800140381
    4. '):
' → logprob: -8.417093276977539
    5. ',' → logprob: -9.542093276977539
    6. '   ' → logprob: -10.417093276977539
    7. '():
' → logprob: -10.667093276977539
    8. '):' → logprob: -11.042093276977539
    9. '<|end|>' → logprob: -12.292093276977539
    10. ':
' → logprob: -12.542093276977539

Token 969: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.911954500945285e-05
    2. 'result' → logprob: -10.500088691711426
    3. 'state' → logprob: -10.750088691711426
    4. ' result' → logprob: -11.000088691711426
    5. ' state' → logprob: -11.625088691711426
    6. '   ' → logprob: -12.375088691711426
    7. '```' → logprob: -12.750088691711426
    8. 'player' → logprob: -13.500088691711426
    9. ' player' → logprob: -13.625088691711426
    10. '
' → logprob: -14.000088691711426

Token 970: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' (adapté à ' game') → logprob: -0.05079801753163338
    2. ' game' → logprob: -3.175797939300537
    3. '       ' → logprob: -5.175797939300537
    4. '   ' → logprob: -6.175797939300537
    5. '	game' → logprob: -10.925798416137695
    6. 'g' → logprob: -11.925798416137695
    7. '```' → logprob: -12.675798416137695
    8. '
' → logprob: -13.050798416137695
    9. '_game' → logprob: -13.050798416137695
    10. 'Game' → logprob: -13.425798416137695

Token 971: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046210684813559055
    2. '=' → logprob: -5.3796210289001465
    3. '   ' → logprob: -14.254621505737305
    4. '    ' → logprob: -16.004621505737305
    5. ' ' → logprob: -16.629621505737305
    6. ' =
' → logprob: -17.254621505737305
    7. '.' → logprob: -17.254621505737305
    8. '        ' → logprob: -17.379621505737305
    9. '	' → logprob: -17.754621505737305
    10. '  ' → logprob: -17.879621505737305

Token 972: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.03804149478673935
    2. ' Game' → logprob: -3.288041591644287
    3. '   ' → logprob: -18.038042068481445
    4. '	Game' → logprob: -18.038042068481445
    5. '(Game' → logprob: -20.038042068481445
    6. '.Game' → logprob: -21.163042068481445
    7. '_Game' → logprob: -21.538042068481445
    8. '<Game' → logprob: -22.163042068481445
    9. '    ' → logprob: -24.288042068481445
    10. ' ' → logprob: -24.288042068481445

Token 973: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.375006675720215
    3. 'number' → logprob: -13.250006675720215
    4. '(game' → logprob: -14.375006675720215
    5. '[number' → logprob: -16.00000762939453
    6. ' (' → logprob: -17.62500762939453
    7. '(Number' → logprob: -17.62500762939453
    8. '(
' → logprob: -18.00000762939453
    9. '(player' → logprob: -18.12500762939453
    10. '   ' → logprob: -18.50000762939453

Token 974: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.292907877039397e-06
    2. ' ,' → logprob: -13.62500286102295
    3. 'player' → logprob: -14.25000286102295
    4. '       ' → logprob: -14.50000286102295
    5. '   ' → logprob: -14.75000286102295
    6. '(player' → logprob: -15.62500286102295
    7. ',
' → logprob: -16.500003814697266
    8. '=' → logprob: -16.625003814697266
    9. ')' → logprob: -16.875003814697266
    10. '           ' → logprob: -17.375003814697266

Token 975: ' player' (ID: 5033)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.0008101018611341715
    2. ' player' → logprob: -7.125810146331787
    3. '   ' → logprob: -12.625809669494629
    4. '	player' → logprob: -14.125809669494629
    5. '(player' → logprob: -14.250809669494629
    6. 'Fab' → logprob: -14.625809669494629
    7. '       ' → logprob: -15.625809669494629
    8. '[player' → logprob: -15.875809669494629
    9. 'fab' → logprob: -16.125810623168945
    10. 'user' → logprob: -17.125810623168945

Token 976: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'player' → logprob: -16.625
    3. ' ' → logprob: -17.375
    4. '=' → logprob: -19.25
    5. '   ' → logprob: -19.5
    6. '
' → logprob: -19.875
    7. ')' → logprob: -20.25
    8. '```' → logprob: -20.375
    9. '１' → logprob: -20.625
    10. '۱' → logprob: -21.1875

Token 977: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.625004768371582
    4. ',
' → logprob: -15.625004768371582
    5. 'player' → logprob: -17.625003814697266
    6. '       ' → logprob: -18.625003814697266
    7. '=' → logprob: -18.750003814697266
    8. ')' → logprob: -19.125003814697266
    9. '[player' → logprob: -19.375003814697266
    10. ',p' → logprob: -19.500003814697266

Token 978: ' player' (ID: 5033)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.00033546582562848926
    2. ' player' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.250335693359375
    4. '       ' → logprob: -18.875335693359375
    5. '	player' → logprob: -19.125335693359375
    6. 'patient' → logprob: -19.250335693359375
    7. ' ' → logprob: -19.750335693359375
    8. '(player' → logprob: -19.875335693359375
    9. '           ' → logprob: -19.875335693359375
    10. '[player' → logprob: -20.125335693359375

Token 979: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.696077227592468e-05
    2. '1' → logprob: -9.625077247619629
    3. ',' → logprob: -11.750077247619629
    4. ')' → logprob: -13.500077247619629
    5. 'er' → logprob: -14.375077247619629
    6. '   ' → logprob: -15.000077247619629
    7. '
' → logprob: -15.750077247619629
    8. ')
' → logprob: -16.000076293945312
    9. '```' → logprob: -16.125076293945312
    10. ' ' → logprob: -16.625076293945312

Token 980: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5516506433486938
    2. ')' → logprob: -1.5516506433486938
    3. '       ' → logprob: -1.5516506433486938
    4. ')
' → logprob: -8.551651000976562
    5. '   ' → logprob: -12.301651000976562
    6. ').' → logprob: -13.301651000976562
    7. ' )
' → logprob: -13.551651000976562
    8. ')

' → logprob: -13.676651000976562
    9. '           ' → logprob: -13.801651000976562
    10. ')`
' → logprob: -14.051651000976562

Token 981: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0501815564930439
    2. 'winner' → logprob: -3.3001816272735596
    3. ' winner' → logprob: -5.1751813888549805
    4. '   ' → logprob: -5.1751813888549805
    5. 'result' → logprob: -7.3001813888549805
    6. 'w' → logprob: -10.17518138885498
    7. ' result' → logprob: -10.80018138885498
    8. '
' → logprob: -11.80018138885498
    9. '```' → logprob: -12.05018138885498
    10. 'print' → logprob: -13.42518138885498

Token 982: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -5.080963092041202e-06
    2. ' winner' → logprob: -12.375004768371582
    3. 'result' → logprob: -14.750004768371582
    4. 'w' → logprob: -15.500004768371582
    5. 'print' → logprob: -16.2500057220459
    6. '   ' → logprob: -17.0000057220459
    7. '       ' → logprob: -17.2500057220459
    8. '    
' → logprob: -17.3750057220459
    9. '        
' → logprob: -17.5000057220459
    10. '
' → logprob: -17.7500057220459

Token 983: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246178403496742
    2. '=' → logprob: -3.7732462882995605
    3. '=w' → logprob: -15.023245811462402
    4. '_name' → logprob: -15.648245811462402
    5. ')' → logprob: -16.27324676513672
    6. '.' → logprob: -16.52324676513672
    7. ' ' → logprob: -17.14824676513672
    8. '   ' → logprob: -17.27324676513672
    9. '_' → logprob: -17.52324676513672
    10. '```' → logprob: -17.77324676513672

Token 984: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' → logprob: -0.00020354038861114532
    2. ' game' → logprob: -8.500203132629395
    3. '	game' → logprob: -18.87520408630371
    4. '(game' → logprob: -20.00020408630371
    5. '   ' → logprob: -20.75020408630371
    6. 'games' → logprob: -21.75020408630371
    7. '.game' → logprob: -22.00020408630371
    8. 'player' → logprob: -22.75020408630371
    9. 'Game' → logprob: -23.62520408630371
    10. ' ' → logprob: -23.62520408630371

Token 985: '.play' (ID: 23389)
  Prédit: '.play'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.play' → logprob: -0.0003146088565699756
    2. '.' → logprob: -8.250314712524414
    3. 'play' → logprob: -9.875314712524414
    4. ' .' → logprob: -13.625314712524414
    5. '	play' → logprob: -15.500314712524414
    6. ' play' → logprob: -16.000314712524414
    7. '.Play' → logprob: -16.750314712524414
    8. '(play' → logprob: -16.875314712524414
    9. '_play' → logprob: -17.875314712524414
    10. '.perform' → logprob: -17.875314712524414

Token 986: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08249938488006592
    2. '
' → logprob: -2.5824995040893555
    3. 'print' → logprob: -5.8324995040893555
    4. ' print' → logprob: -7.7074995040893555
    5. '
' → logprob: -8.832499504089355
    6. '   ' → logprob: -10.957499504089355
    7. '        
' → logprob: -11.582499504089355
    8. ',' → logprob: -11.957499504089355
    9. '<|end|>' → logprob: -12.082499504089355
    10. '```' → logprob: -12.207499504089355

Token 987: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011958249378949404
    2. 'print' → logprob: -6.876195907592773
    3. '   ' → logprob: -8.751195907592773
    4. ' print' → logprob: -12.376195907592773
    5. '           ' → logprob: -15.626195907592773
    6. '```' → logprob: -15.751195907592773
    7. '	print' → logprob: -16.376195907592773
    8. '
' → logprob: -17.251195907592773
    9. '        
' → logprob: -17.251195907592773
    10. '	   ' → logprob: -17.626195907592773

Token 988: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.061054359131958e-06
    2. ' print' → logprob: -11.750007629394531
    3. '       ' → logprob: -15.750007629394531
    4. '   ' → logprob: -17.75000762939453
    5. '	print' → logprob: -19.87500762939453
    6. '           ' → logprob: -21.75000762939453
    7. '
' → logprob: -22.75000762939453
    8. ' ' → logprob: -25.00000762939453
    9. 'output' → logprob: -25.12500762939453
    10. '```' → logprob: -25.62500762939453

Token 989: '(format' (ID: 39668)
  Prédit: '(format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(format' → logprob: -6.2729995988775045e-06
    2. 'formatter' → logprob: -12.000006675720215
    3. 'format' → logprob: -17.1250057220459
    4. '(form' → logprob: -19.5000057220459
    5. '(' → logprob: -19.8750057220459
    6. '(fmt' → logprob: -20.8750057220459
    7. '=format' → logprob: -21.5000057220459
    8. '_formatter' → logprob: -22.0000057220459
    9. ' formatter' → logprob: -22.5000057220459
    10. 'Formatter' → logprob: -22.6250057220459

Token 990: 'ter' (ID: 399)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0008350008283741772
    2. 'ter' → logprob: -7.125834941864014
    3. 'formatter' → logprob: -11.375835418701172
    4. 'r' → logprob: -11.750835418701172
    5. '(format' → logprob: -11.875835418701172
    6. 'atter' → logprob: -12.750835418701172
    7. 'ater' → logprob: -14.625835418701172
    8. 'erm' → logprob: -15.750835418701172
    9. 'w' → logprob: -15.875835418701172
    10. 'format' → logprob: -15.875835418701172

Token 991: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -2.5776860184123507e-06
    2. 'format' → logprob: -13.37500286102295
    3. '.' → logprob: -15.00000286102295
    4. ').' → logprob: -15.12500286102295
    5. '=format' → logprob: -15.75000286102295
    6. ' .' → logprob: -16.125001907348633
    7. '(format' → logprob: -17.375001907348633
    8. '_format' → logprob: -17.375001907348633
    9. '.print' → logprob: -17.750001907348633
    10. '.output' → logprob: -18.250001907348633

Token 992: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -5.512236498361744e-07
    2. 'winner' → logprob: -14.625000953674316
    3. '(w' → logprob: -18.125
    4. 'w' → logprob: -19.375
    5. ' winner' → logprob: -19.5
    6. 'er' → logprob: -19.625
    7. 's' → logprob: -20.375
    8. 'Winner' → logprob: -20.5
    9. '   ' → logprob: -20.625
    10. '_win' → logprob: -20.75

Token 993: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -7.896309739408025e-07
    2. 'winner' → logprob: -14.875000953674316
    3. '_inner' → logprob: -15.625000953674316
    4. '(inner' → logprob: -16.25
    5. 'iner' → logprob: -17.625
    6. 'nner' → logprob: -17.75
    7. 'unner' → logprob: -18.0
    8. ' inner' → logprob: -18.25
    9. 'inn' → logprob: -19.0
    10. 'inne' → logprob: -19.5

Token 994: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.250001907348633
    3. ')' → logprob: -16.125001907348633
    4. 'w' → logprob: -16.750001907348633
    5. '(writer' → logprob: -18.875001907348633
    6. '<w' → logprob: -19.000001907348633
    7. '(win' → logprob: -19.375001907348633
    8. '(f' → logprob: -19.500001907348633
    9. '	w' → logprob: -19.625001907348633
    10. ')(' → logprob: -19.750001907348633

Token 995: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: 0.0
    2. 'nner' → logprob: -17.25
    3. 'Inner' → logprob: -17.875
    4. ' inner' → logprob: -18.125
    5. 'winner' → logprob: -18.375
    6. '(inner' → logprob: -18.625
    7. 'iner' → logprob: -18.75
    8. 'INNER' → logprob: -18.875
    9. 'inn' → logprob: -19.5
    10. '_inner' → logprob: -20.0

Token 996: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04353174939751625
    2. '())' → logprob: -3.543531656265259
    3. '))' → logprob: -4.293531894683838
    4. '()' → logprob: -10.91853141784668
    5. '()))' → logprob: -11.66853141784668
    6. ')))' → logprob: -13.29353141784668
    7. ')")' → logprob: -15.04353141784668
    8. ' )' → logprob: -15.16853141784668
    9. '})' → logprob: -15.29353141784668
    10. ')`' → logprob: -15.41853141784668

Token 997: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.054500666621607e-06
    2. ' if' → logprob: -13.37500286102295
    3. '#' → logprob: -13.75000286102295
    4. '```' → logprob: -14.75000286102295
    5. '
' → logprob: -17.125003814697266
    6. '#if' → logprob: -17.625003814697266
    7. '<|end|>' → logprob: -17.750003814697266
    8. 'If' → logprob: -18.375003814697266
    9. '	if' → logprob: -20.250003814697266
    10. '    
' → logprob: -20.375003814697266

Token 998: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20153720676898956
    2. ' __' → logprob: -1.7015372514724731
    3. '_name' → logprob: -9.326537132263184
    4. '_' → logprob: -10.951537132263184
    5. 'name' → logprob: -11.201537132263184
    6. '___' → logprob: -13.451537132263184
    7. 'if' → logprob: -13.701537132263184
    8. '```' → logprob: -15.076537132263184
    9. '____' → logprob: -15.826537132263184
    10. '_true' → logprob: -15.951537132263184

Token 999: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004329352639615536
    2. '==' → logprob: -5.879329204559326
    3. ' ==' → logprob: -6.629329204559326
    4. ' __' → logprob: -9.379329681396484
    5. '.__' → logprob: -10.254329681396484
    6. 'name' → logprob: -10.504329681396484
    7. 'if' → logprob: -10.754329681396484
    8. '__.__' → logprob: -11.504329681396484
    9. '```' → logprob: -11.754329681396484
    10. '=="' → logprob: -11.879329681396484

Token 1000: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.696889623621246e-06
    2. '__.__' → logprob: -13.37500286102295
    3. '==' → logprob: -13.87500286102295
    4. '__.' → logprob: -16.500001907348633
    5. '____' → logprob: -17.250001907348633
    6. ' ==' → logprob: -17.250001907348633
    7. '__
' → logprob: -17.375001907348633
    8. '___' → logprob: -17.375001907348633
    9. 'name' → logprob: -18.375001907348633
    10. '__('' → logprob: -18.625001907348633

Token 1001: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5923344492912292
    2. '==' → logprob: -0.8423344492912292
    3. '=="' → logprob: -4.717334270477295
    4. ' ==' → logprob: -4.967334270477295
    5. '__.__' → logprob: -8.717334747314453
    6. '=='' → logprob: -8.842334747314453
    7. '.__' → logprob: -10.717334747314453
    8. '===' → logprob: -11.467334747314453
    9. '__["' → logprob: -12.092334747314453
    10. '["' → logprob: -12.717334747314453

Token 1002: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0019382734317332506
    2. ''' → logprob: -6.251938343048096
    3. ' "__' → logprob: -11.876937866210938
    4. '__' → logprob: -12.876937866210938
    5. '"name' → logprob: -17.126937866210938
    6. ' '__' → logprob: -17.251937866210938
    7. '"user' → logprob: -17.501937866210938
    8. '("__' → logprob: -17.626937866210938
    9. '"_' → logprob: -18.876937866210938
    10. '"default' → logprob: -19.501937866210938

Token 1003: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011270393617451191
    2. '__' → logprob: -4.511270523071289
    3. 'name' → logprob: -8.511270523071289
    4. 'python' → logprob: -12.261270523071289
    5. '_main' → logprob: -12.261270523071289
    6. '"' → logprob: -13.136270523071289
    7. ' main' → logprob: -13.511270523071289
    8. 'if' → logprob: -13.511270523071289
    9. 'built' → logprob: -13.511270523071289
    10. '```' → logprob: -13.761270523071289

Token 1004: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.019633809104561806
    2. '__' → logprob: -4.019633769989014
    3. '__':
' → logprob: -6.519633769989014
    4. '__.' → logprob: -12.519634246826172
    5. '__
' → logprob: -13.394634246826172
    6. '__["' → logprob: -13.769634246826172
    7. '__.__' → logprob: -13.894634246826172
    8. '__("' → logprob: -14.144634246826172
    9. '__
' → logprob: -15.144634246826172
    10. '("__' → logprob: -16.394634246826172

Token 1005: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1805330216884613
    2. '__' → logprob: -2.430532932281494
    3. '"' → logprob: -2.805532932281494
    4. ''' → logprob: -4.430532932281494
    5. '   ' → logprob: -5.430532932281494
    6. ' main' → logprob: -8.805533409118652
    7. '__":
' → logprob: -9.305533409118652
    8. '`' → logprob: -10.180533409118652
    9. '	main' → logprob: -10.930533409118652
    10. '    
' → logprob: -10.930533409118652

Token 1006: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.0
    3. '	main' → logprob: -22.625
    4. 'import' → logprob: -23.0
    5. '.main' → logprob: -25.625
    6. '(main' → logprob: -26.125
    7. '_main' → logprob: -26.25
    8. '   ' → logprob: -26.5
    9. '
' → logprob: -28.625
    10. '```' → logprob: -29.375

Token 1007: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1005
Tokens correctement prédits (1ère position, stricte): 451
Tokens correctement prédits (1ère position, avec adaptation): 504
Tokens correctement prédits (top 10): 864
Précision stricte (1ère position): 44.88%
Précision adaptée (1ère position): 50.15%
Précision (top 10): 85.97%
================================================================================
