================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input = sys.stdin.readline

while True:
    N, M, cap = map(int, input().split())
    if N == 0 and M == 0 and cap == 0:
        break
    src, dest = input().split()

    city_id = {}
    def get_id(name):
        if name not in city_id:
            city_id[name] = len(city_id)
        return city_id[name]

    edges = [[] for _ in range(2 * N + 2 * M + 10)]  # enough size
    # Read roads
    for _ in range(N):
        c1, c2, d = input().split()
        d = int(d)
        id1 = get_id(c1)
        id2 = get_id(c2)
        edges[id1].append((id2, d))
        edges[id2].append((id1, d))

    stations = set()
    for _ in range(M):
        s = input().strip()
        stations.add(get_id(s))

    if src not in city_id or dest not in city_id:
        print(-1)
        continue
    start = city_id[src]
    end = city_id[dest]

    # BFS/Dijkstra on state: (city, fuel)
    # Each edge consumes fuel equal to distance. Can refuel to full tank at stations at any time, including start and end.
    # Since capacity ≤ 200, keep fuel from 0 to cap inclusive.
    # Init dist array
    dist = [ [float('inf')] * (cap + 1) for _ in range(len(city_id)) ]
    # Start with full tank at src (tank always full at start)
    dist[start][cap] = 0
    hq = [(0, start, cap)]

    while hq:
        cost, city, fuel = heapq.heappop(hq)
        if city == end:
            print(cost)
            break
        if dist[city][fuel] < cost:
            continue
        # Refuel if city is a station (tank full)
        if city in stations and fuel < cap:
            if dist[city][cap] > cost:
                dist[city][cap] = cost
                heapq.heappush(hq, (cost, city, cap))
        # Move to neighbors if fuel allows
        for nxt, d in edges[city]:
            if d <= fuel:
                nfuel = fuel - d
                ncost = cost + d
                if dist[nxt][nfuel] > ncost:
                    dist[nxt][nfuel] = ncost
                    heapq.heappush(hq, (ncost, nxt, nfuel))
    else:
        # no break -> no path
        print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6409761309623718
    2. '.' → logprob: -0.8909761309623718
    3. 'import' → logprob: -4.0159759521484375
    4. 'newline' → logprob: -4.2659759521484375
    5. '\' → logprob: -4.7659759521484375
    6. '<|end|>' → logprob: -5.0159759521484375
    7. '```' → logprob: -5.3909759521484375
    8. '
' → logprob: -5.6409759521484375
    9. '<|end|>' → logprob: -6.5159759521484375
    10. '' → logprob: -6.5159759521484375

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8444881536415778e-05
    2. '.' → logprob: -10.750028610229492
    3. '#' → logprob: -13.875028610229492
    4. '_' → logprob: -14.000028610229492
    5. 'ify' → logprob: -14.500028610229492
    6. 'space' → logprob: -14.500028610229492
    7. 's' → logprob: -14.750028610229492
    8. ')' → logprob: -14.875028610229492
    9. '

' → logprob: -15.000028610229492
    10. 'queue' → logprob: -15.000028610229492

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2581426799297333
    2. '
' → logprob: -2.7581427097320557
    3. '\' → logprob: -2.8831427097320557
    4. '\n' → logprob: -3.0081427097320557
    5. '<|end|>' → logprob: -3.8831427097320557
    6. '```' → logprob: -4.383142471313477
    7. 'import' → logprob: -5.008142471313477
    8. '

' → logprob: -5.133142471313477
    9. '<|end|>' → logprob: -5.758142471313477
    10. '' → logprob: -5.758142471313477

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7021507620811462
    2. 'def' → logprob: -1.702150821685791
    3. '
' → logprob: -2.327150821685791
    4. '\' → logprob: -3.202150821685791
    5. '```' → logprob: -3.327150821685791
    6. 'class' → logprob: -3.452150821685791
    7. '\n' → logprob: -3.827150821685791
    8. 'import' → logprob: -4.077150821685791
    9. 'from' → logprob: -4.077150821685791
    10. '' → logprob: -4.327150821685791

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005030240397900343
    2. '.' → logprob: -5.380030155181885
    3. ')' → logprob: -8.380030632019043
    4. '()' → logprob: -9.880030632019043
    5. ' (' → logprob: -10.630030632019043
    6. '=' → logprob: -10.880030632019043
    7. '```' → logprob: -11.130030632019043
    8. '(.)' → logprob: -11.380030632019043
    9. '[' → logprob: -11.630030632019043
    10. '(
' → logprob: -11.630030632019043

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.13303305208683014
    2. ' sys' → logprob: -2.133033037185669
    3. 'input' → logprob: -5.133033275604248
    4. ' input' → logprob: -8.75803279876709
    5. '	sys' → logprob: -11.13303279876709
    6. 'lambda' → logprob: -11.50803279876709
    7. '=sys' → logprob: -12.63303279876709
    8. ' lambda' → logprob: -14.13303279876709
    9. '```' → logprob: -14.13303279876709
    10. '(sys' → logprob: -14.25803279876709

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.3192919194698334
    2. '.' → logprob: -1.3192919492721558
    3. ' .' → logprob: -5.694292068481445
    4. '.input' → logprob: -7.069292068481445
    5. '.stdout' → logprob: -7.319292068481445
    6. '.argv' → logprob: -7.694292068481445
    7. '.readline' → logprob: -8.069292068481445
    8. '.import' → logprob: -8.944292068481445
    9. '.path' → logprob: -9.319292068481445
    10. '.std' → logprob: -10.694292068481445

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006864320952445269
    2. '.read' → logprob: -5.381864547729492
    3. '.' → logprob: -6.131864547729492
    4. '.readlines' → logprob: -10.006864547729492
    5. 'read' → logprob: -11.506864547729492
    6. '.buffer' → logprob: -11.631864547729492
    7. '```' → logprob: -13.131864547729492
    8. '.Read' → logprob: -13.881864547729492
    9. ' readline' → logprob: -15.131864547729492
    10. '<|end|>' → logprob: -15.131864547729492

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.59145188331604
    2. '()' → logprob: -0.84145188331604
    3. '(
' → logprob: -4.591451644897461
    4. '()
' → logprob: -5.966451644897461
    5. 'def' → logprob: -7.466451644897461
    6. '()

' → logprob: -7.466451644897461
    7. '
' → logprob: -7.966451644897461
    8. '(

' → logprob: -8.216451644897461
    9. ')' → logprob: -8.591451644897461
    10. '(n' → logprob: -8.966451644897461

Token 13: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3135020434856415
    2. 'def' → logprob: -1.3135020732879639
    3. 'N' → logprob: -8.563502311706543
    4. 'class' → logprob: -10.063502311706543
    5. 'from' → logprob: -13.688502311706543
    6. '\' → logprob: -13.813502311706543
    7. 'd' → logprob: -13.938502311706543
    8. 'for' → logprob: -14.313502311706543
    9. 'data' → logprob: -14.313502311706543
    10. 'num' → logprob: -14.438502311706543

Token 14: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03242374211549759
    2. ' True' → logprob: -3.532423734664917
    3. '  ' → logprob: -7.032423973083496
    4. ' not' → logprob: -7.532423973083496
    5. ' (' → logprob: -7.657423973083496
    6. ' )' → logprob: -8.032423973083496
    7. '<|end|>' → logprob: -9.407423973083496
    8. '(' → logprob: -9.657423973083496
    9. '    ' → logprob: -9.657423973083496
    10. ' space' → logprob: -10.157423973083496

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023667283821851015
    2. '():' → logprob: -6.127366542816162
    3. ' :' → logprob: -9.50236701965332
    4. ':**' → logprob: -10.12736701965332
    5. '(:' → logprob: -10.62736701965332
    6. '   ' → logprob: -11.50236701965332
    7. '):' → logprob: -11.62736701965332
    8. ':
' → logprob: -12.37736701965332
    9. '[:]' → logprob: -13.25236701965332
    10. '```' → logprob: -13.37736701965332

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012224358506500721
    2. '    
' → logprob: -4.762224197387695
    3. 'n' → logprob: -6.762224197387695
    4. ' ' → logprob: -7.137224197387695
    5. ' 
' → logprob: -7.637224197387695
    6. ' )' → logprob: -8.262224197387695
    7. 'a' → logprob: -8.762224197387695
    8. '    ' → logprob: -8.887224197387695
    9. ' line' → logprob: -9.012224197387695
    10. ' n' → logprob: -9.637224197387695

Token 17: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5237990021705627
    2. ' n' → logprob: -1.773798942565918
    3. ' line' → logprob: -2.898798942565918
    4. 'num' → logprob: -3.273798942565918
    5. 'data' → logprob: -3.648798942565918
    6. '   ' → logprob: -3.773798942565918
    7. 'line' → logprob: -3.898798942565918
    8. 'x' → logprob: -3.898798942565918
    9. ' num' → logprob: -4.523798942565918
    10. 'cmd' → logprob: -4.523798942565918

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23288187384605408
    2. ' ==' → logprob: -2.107881784439087
    3. '=' → logprob: -2.607881784439087
    4. ' >' → logprob: -5.357882022857666
    5. ' ' → logprob: -5.607882022857666
    6. '==' → logprob: -6.357882022857666
    7. '>' → logprob: -6.982882022857666
    8. ' <=' → logprob: -7.982882022857666
    9. '  ' → logprob: -8.232881546020508
    10. ' <' → logprob: -8.357881546020508

Token 19: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.6587578058242798
    2. 'M' → logprob: -0.9087578058242798
    3. ' K' → logprob: -3.4087576866149902
    4. 'K' → logprob: -3.7837576866149902
    5. ' ' → logprob: -5.03375768661499
    6. 'm' → logprob: -5.53375768661499
    7. 'space' → logprob: -5.65875768661499
    8. '  ' → logprob: -6.15875768661499
    9. ' =' → logprob: -6.78375768661499
    10. '    ' → logprob: -7.40875768661499

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693630158901215
    2. '=' → logprob: -2.126936197280884
    3. ' ' → logprob: -12.501935958862305
    4. ',' → logprob: -12.876935958862305
    5. ')' → logprob: -13.751935958862305
    6. '=input' → logprob: -15.126935958862305
    7. '    ' → logprob: -15.501935958862305
    8. '   ' → logprob: -16.126935958862305
    9. '=line' → logprob: -16.751935958862305
    10. ' =",' → logprob: -17.251935958862305

Token 21: ' cap' (ID: 2328)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.18072298169136047
    2. 'K' → logprob: -1.930722951889038
    3. ' P' → logprob: -5.180723190307617
    4. ' Q' → logprob: -5.430723190307617
    5. 'Q' → logprob: -6.180723190307617
    6. 'P' → logprob: -6.305723190307617
    7. ' =' → logprob: -6.805723190307617
    8. ' L' → logprob: -7.055723190307617
    9. ' ' → logprob: -7.430723190307617
    10. 'L' → logprob: -7.555723190307617

Token 22: ' =' (ID: 314)
  Prédit: 'acity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acity' → logprob: -0.3670310974121094
    2. ' =' → logprob: -1.3670310974121094
    3. '=' → logprob: -2.9920310974121094
    4. ',' → logprob: -6.492031097412109
    5. 'ACITY' → logprob: -8.49203109741211
    6. 'acit' → logprob: -9.11703109741211
    7. 'ac' → logprob: -9.49203109741211
    8. 'a' → logprob: -9.74203109741211
    9. ' ' → logprob: -10.11703109741211
    10. 's' → logprob: -10.24203109741211

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.08964154869318008
    2. 'map' → logprob: -2.464641571044922
    3. ' input' → logprob: -7.714641571044922
    4. 'input' → logprob: -8.464641571044922
    5. '(map' → logprob: -10.964641571044922
    6. '[' → logprob: -11.714641571044922
    7. ' ' → logprob: -12.214641571044922
    8. ' [' → logprob: -12.339641571044922
    9. '	map' → logprob: -12.589641571044922
    10. '=' → logprob: -13.964641571044922

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.15279905498027802
    2. '(' → logprob: -2.152799129486084
    3. '(input' → logprob: -4.152799129486084
    4. '(str' → logprob: -5.277799129486084
    5. '(lambda' → logprob: -5.402799129486084
    6. ' (' → logprob: -9.902798652648926
    7. '<|end|>' → logprob: -10.027798652648926
    8. ')' → logprob: -10.902798652648926
    9. '(eval' → logprob: -11.152798652648926
    10. '(bool' → logprob: -11.777798652648926

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13076387345790863
    2. ')' → logprob: -2.2557637691497803
    3. ',input' → logprob: -4.880764007568359
    4. 'input' → logprob: -5.005764007568359
    5. ',' → logprob: -6.380764007568359
    6. '(' → logprob: -6.630764007568359
    7. '=input' → logprob: -8.13076400756836
    8. '),' → logprob: -9.75576400756836
    9. '()' → logprob: -10.38076400756836
    10. ' input' → logprob: -10.75576400756836

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931474208831787
    2. ' input' → logprob: -0.6931474208831787
    3. '(input' → logprob: -16.693147659301758
    4. '=input' → logprob: -16.818147659301758
    5. '<input' → logprob: -17.318147659301758
    6. ',input' → logprob: -17.568147659301758
    7. ')' → logprob: -17.693147659301758
    8. '	input' → logprob: -18.193147659301758
    9. '[input' → logprob: -19.568147659301758
    10. '_input' → logprob: -19.568147659301758

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005352786974981427
    2. '()' → logprob: -7.625535488128662
    3. '())' → logprob: -10.125535011291504
    4. '()))' → logprob: -12.500535011291504
    5. ' ().' → logprob: -13.125535011291504
    6. '(' → logprob: -15.000535011291504
    7. '()
' → logprob: -15.125535011291504
    8. ')' → logprob: -15.750535011291504
    9. '()));' → logprob: -15.750535011291504
    10. '());' → logprob: -16.00053596496582

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.030887113884091377
    2. 'strip' → logprob: -3.5308871269226074
    3. 'rstrip' → logprob: -6.780887126922607
    4. '(split' → logprob: -14.78088665008545
    5. ' split' → logprob: -15.40588665008545
    6. 'read' → logprob: -17.405887603759766
    7. ')' → logprob: -17.530887603759766
    8. ' strip' → logprob: -17.905887603759766
    9. 'rs' → logprob: -18.280887603759766
    10. 'plit' → logprob: -18.280887603759766

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032191623002290726
    2. '())' → logprob: -3.532191514968872
    3. '()' → logprob: -6.282191753387451
    4. '))' → logprob: -7.532191753387451
    5. '()))' → logprob: -11.782191276550293
    6. '(' → logprob: -11.782191276550293
    7. ')
' → logprob: -12.157191276550293
    8. '())
' → logprob: -12.657191276550293
    9. '),' → logprob: -12.907191276550293
    10. ' )' → logprob: -14.032191276550293

Token 30: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.0419926643371582
    2. 'N' → logprob: -3.666992664337158
    3. ' not' → logprob: -4.166992664337158
    4. 'not' → logprob: -9.6669921875
    5. ' ' → logprob: -12.4169921875
    6. ' (' → logprob: -13.7919921875
    7. ' cap' → logprob: -13.7919921875
    8. '	N' → logprob: -14.7919921875
    9. '(N' → logprob: -15.0419921875
    10. ' ' → logprob: -15.4169921875

Token 33: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07895763963460922
    2. '==' → logprob: -2.5789575576782227
    3. ')' → logprob: -10.453957557678223
    4. '=' → logprob: -11.203957557678223
    5. ')==' → logprob: -11.703957557678223
    6. ' ' → logprob: -12.078957557678223
    7. '<|end|>' → logprob: -13.328957557678223
    8. ' ' → logprob: -13.453957557678223
    9. ' =' → logprob: -13.453957557678223
    10. ' <=' → logprob: -13.953957557678223

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00975774321705103
    2. ' ' → logprob: -4.6347575187683105
    3. '   ' → logprob: -14.697257995605469
    4. '  ' → logprob: -15.009757995605469
    5. '۰' → logprob: -15.322257995605469
    6. '```' → logprob: -15.947257995605469
    7. '    ' → logprob: -16.19725799560547
    8. 'EOF' → logprob: -16.69725799560547
    9. '_' → logprob: -17.07225799560547
    10. '০' → logprob: -17.44725799560547

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '```' → logprob: -16.62510871887207
    4. '-' → logprob: -17.00010871887207
    5. '۰' → logprob: -17.00010871887207
    6. '  ' → logprob: -17.18760871887207
    7. '   ' → logprob: -17.43760871887207
    8. '    ' → logprob: -18.37510871887207
    9. '０' → logprob: -18.81260871887207
    10. '০' → logprob: -19.06260871887207

Token 36: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06278012692928314
    2. 'and' → logprob: -2.8127801418304443
    3. ':' → logprob: -7.187779903411865
    4. '	and' → logprob: -10.687780380249023
    5. ' ' → logprob: -11.312780380249023
    6. '<|end|>' → logprob: -11.687780380249023
    7. '   ' → logprob: -12.312780380249023
    8. ' a' → logprob: -12.687780380249023
    9. ' ' → logprob: -14.187780380249023
    10. ' an' → logprob: -14.187780380249023

Token 37: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.6326558589935303
    2. 'M' → logprob: -0.7576558589935303
    3. '   ' → logprob: -10.00765609741211
    4. '    ' → logprob: -12.13265609741211
    5. ' ' → logprob: -12.50765609741211
    6. '  ' → logprob: -14.00765609741211
    7. '	M' → logprob: -14.13265609741211
    8. ' ' → logprob: -14.63265609741211
    9. '0' → logprob: -15.94515609741211
    10. '```' → logprob: -16.88265609741211

Token 38: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.039593227207660675
    2. '==' → logprob: -3.28959321975708
    3. '<|end|>' → logprob: -6.53959321975708
    4. ' ' → logprob: -9.914593696594238
    5. '<|end|>' → logprob: -10.664593696594238
    6. ' =' → logprob: -11.664593696594238
    7. ')' → logprob: -12.039593696594238
    8. '=' → logprob: -12.164593696594238
    9. '0' → logprob: -13.039593696594238
    10. ' ' → logprob: -13.039593696594238

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04858918860554695
    2. ' ' → logprob: -3.0485892295837402
    3. '  ' → logprob: -14.423588752746582
    4. '   ' → logprob: -14.673588752746582
    5. ' ' → logprob: -15.173588752746582
    6. '<|end|>' → logprob: -15.423588752746582
    7. '۰' → logprob: -16.0485897064209
    8. '<|end|>' → logprob: -16.2360897064209
    9. '```' → logprob: -17.2360897064209
    10. 'and' → logprob: -17.2985897064209

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '۰' → logprob: -18.125295639038086
    4. '  ' → logprob: -18.750295639038086
    5. '   ' → logprob: -18.875295639038086
    6. '<|end|>' → logprob: -19.250295639038086
    7. '```' → logprob: -19.875295639038086
    8. '০' → logprob: -20.125295639038086
    9. '０' → logprob: -20.375295639038086
    10. '०' → logprob: -20.750295639038086

Token 41: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011540406383574009
    2. 'and' → logprob: -4.886540412902832
    3. ':' → logprob: -5.761540412902832
    4. '   ' → logprob: -7.886540412902832
    5. '<|end|>' → logprob: -8.761540412902832
    6. '<|end|>' → logprob: -9.011540412902832
    7. ' ' → logprob: -9.761540412902832
    8. '	and' → logprob: -10.511540412902832
    9. '0' → logprob: -11.136540412902832
    10. ' ' → logprob: -11.886540412902832

Token 42: ' cap' (ID: 2328)
  Prédit: ' cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cap' → logprob: -0.6885896921157837
    2. 'cap' → logprob: -0.8135896921157837
    3. '0' → logprob: -2.938589572906494
    4. ' ' → logprob: -6.938589572906494
    5. '   ' → logprob: -7.813589572906494
    6. '  ' → logprob: -9.938590049743652
    7. '(cap' → logprob: -10.563590049743652
    8. ' capa' → logprob: -10.938590049743652
    9. '_cap' → logprob: -12.063590049743652
    10. 'c' → logprob: -12.188590049743652

Token 43: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3485269546508789
    2. ' ==' → logprob: -1.223526954650879
    3. '  ' → logprob: -10.473526954650879
    4. ')==' → logprob: -11.223526954650879
    5. '=' → logprob: -11.723526954650879
    6. ' ' → logprob: -11.973526954650879
    7. '   ' → logprob: -12.473526954650879
    8. '0' → logprob: -12.598526954650879
    9. '===' → logprob: -12.848526954650879
    10. '==-' → logprob: -12.848526954650879

Token 44: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028225891292095184
    2. ' ' → logprob: -5.877822399139404
    3. '   ' → logprob: -11.002822875976562
    4. '  ' → logprob: -13.752822875976562
    5. '۰' → logprob: -17.627822875976562
    6. ' ' → logprob: -17.627822875976562
    7. '	' → logprob: -18.377822875976562
    8. '    ' → logprob: -18.440322875976562
    9. '000' → logprob: -18.565322875976562
    10. '<|end|>' → logprob: -18.565322875976562

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '  ' → logprob: -16.25048828125
    4. '   ' → logprob: -16.50048828125
    5. '۰' → logprob: -17.50048828125
    6. ')' → logprob: -18.12548828125
    7. '-' → logprob: -19.37548828125
    8. '০' → logprob: -19.50048828125
    9. '```' → logprob: -19.56298828125
    10. '०' → logprob: -19.75048828125

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000940642727073282
    2. ':
' → logprob: -7.125940799713135
    3. '   ' → logprob: -9.000940322875977
    4. ' :' → logprob: -11.875940322875977
    5. ':return' → logprob: -13.125940322875977
    6. '):' → logprob: -13.250940322875977
    7. '       ' → logprob: -13.625940322875977
    8. '.' → logprob: -15.250940322875977
    9. ' :
' → logprob: -16.000940322875977
    10. ' break' → logprob: -16.000940322875977

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007652180269360542
    2. '   ' → logprob: -4.882652282714844
    3. ' break' → logprob: -10.757652282714844
    4. '	break' → logprob: -11.632652282714844
    5. '	' → logprob: -11.882652282714844
    6. 'break' → logprob: -13.382652282714844
    7. ':' → logprob: -13.882652282714844
    8. '    ' → logprob: -14.132652282714844
    9. '	   ' → logprob: -14.132652282714844
    10. '      ' → logprob: -14.257652282714844

Token 48: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.03977871686220169
    2. 'break' (adapté à ' break') → logprob: -3.289778709411621
    3. '   ' → logprob: -6.664778709411621
    4. '       ' → logprob: -7.914778709411621
    5. '	break' → logprob: -9.289778709411621
    6. '_break' → logprob: -13.789778709411621
    7. '```' → logprob: -13.789778709411621
    8. '-break' → logprob: -15.164778709411621
    9. '           ' → logprob: -15.664778709411621
    10. ' ' → logprob: -15.914778709411621

Token 49: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3604377210140228
    2. '   ' → logprob: -1.6104377508163452
    3. '    
' → logprob: -2.6104376316070557
    4. '<|end|>' → logprob: -4.110437870025635
    5. '\n' → logprob: -5.485437870025635
    6. '  
' → logprob: -5.485437870025635
    7. '```' → logprob: -6.985437870025635
    8. ' 
' → logprob: -6.985437870025635
    9. '   
' → logprob: -7.110437870025635
    10. '<|end|>' → logprob: -7.610437870025635

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6368975639343262
    2. '
' → logprob: -1.2618975639343262
    3. '    
' → logprob: -2.011897563934326
    4. '\n' → logprob: -3.761897563934326
    5. ' 
' → logprob: -4.761897563934326
    6. '```' → logprob: -5.011897563934326
    7. '' → logprob: -5.386897563934326
    8. '  
' → logprob: -5.636897563934326
    9. '   
' → logprob: -6.136897563934326
    10. '\' → logprob: -7.511897563934326

Token 51: ' src' (ID: 4537)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7052452564239502
    2. '    
' → logprob: -2.33024525642395
    3. ' graph' → logprob: -2.45524525642395
    4. ' 
' → logprob: -2.83024525642395
    5. 'distance' → logprob: -3.08024525642395
    6. '   ' → logprob: -3.20524525642395
    7. 'dist' → logprob: -3.33024525642395
    8. '
' → logprob: -3.45524525642395
    9. ' distances' → logprob: -3.70524525642395
    10. 'edges' → logprob: -4.080245018005371

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012605957686901093
    2. '=' → logprob: -4.887606143951416
    3. ' =' → logprob: -5.512606143951416
    4. ' ,' → logprob: -7.012606143951416
    5. ')' → logprob: -11.137605667114258
    6. 's' → logprob: -11.887605667114258
    7. ' ' → logprob: -12.325105667114258
    8. ',s' → logprob: -13.200105667114258
    9. '   ' → logprob: -13.450105667114258
    10. ',node' → logprob: -13.450105667114258

Token 53: ' dest' (ID: 3755)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.12889939546585083
    2. 'dest' → logprob: -2.378899335861206
    3. ' dst' → logprob: -3.753899335861206
    4. ' dest' → logprob: -6.378899574279785
    5. 'des' → logprob: -6.878899574279785
    6. 'sink' → logprob: -7.378899574279785
    7. '	dst' → logprob: -7.878899574279785
    8. '   ' → logprob: -8.253899574279785
    9. 'dist' → logprob: -8.628899574279785
    10. ' ' → logprob: -9.691399574279785

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21175776422023773
    2. '=' → logprob: -1.836757779121399
    3. ',' → logprob: -3.4617576599121094
    4. ' ,' → logprob: -9.71175765991211
    5. ' ' → logprob: -9.96175765991211
    6. '   ' → logprob: -11.21175765991211
    7. '  ' → logprob: -12.96175765991211
    8. ')' → logprob: -13.46175765991211
    9. '    ' → logprob: -13.71175765991211
    10. ' =
' → logprob: -14.64925765991211

Token 55: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16234590113162994
    2. 'map' → logprob: -2.0373458862304688
    3. ' input' → logprob: -4.412345886230469
    4. 'input' → logprob: -5.287345886230469
    5. '0' → logprob: -6.537345886230469
    6. '    ' → logprob: -8.162345886230469
    7. ' ' → logprob: -8.162345886230469
    8. ' [' → logprob: -9.912345886230469
    9. '[' → logprob: -10.537345886230469
    10. ' =' → logprob: -10.662345886230469

Token 56: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018613664724398404
    2. '()' → logprob: -8.7501859664917
    3. '.' → logprob: -11.3751859664917
    4. '.split' → logprob: -11.6251859664917
    5. '.readline' → logprob: -12.2501859664917
    6. ' ().' → logprob: -14.3751859664917
    7. '()).' → logprob: -15.0001859664917
    8. '(' → logprob: -15.0001859664917
    9. ').' → logprob: -15.5001859664917
    10. '   ' → logprob: -15.6251859664917

Token 57: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005376049317419529
    2. 'strip' → logprob: -5.255375862121582
    3. 'rstrip' → logprob: -8.880375862121582
    4. ' split' → logprob: -13.130375862121582
    5. 'spl' → logprob: -14.005375862121582
    6. 'rs' → logprob: -16.6303768157959
    7. '(split' → logprob: -16.8803768157959
    8. 'plit' → logprob: -17.0053768157959
    9. '_split' → logprob: -17.1303768157959
    10. '```' → logprob: -17.2553768157959

Token 58: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.025977328419685364
    2. '(' → logprob: -3.900977373123169
    3. '('' → logprob: -5.27597713470459
    4. '("("' → logprob: -9.40097713470459
    5. '()
' → logprob: -9.77597713470459
    6. '("' → logprob: -10.52597713470459
    7. '   ' → logprob: -10.77597713470459
    8. '(
' → logprob: -11.02597713470459
    9. '(),' → logprob: -11.15097713470459
    10. '(',' → logprob: -11.52597713470459

Token 59: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8776999711990356
    2. '<|end|>' → logprob: -1.3776999711990356
    3. '    
' → logprob: -2.502699851989746
    4. ' 
' → logprob: -2.502699851989746
    5. '   ' → logprob: -3.002699851989746
    6. '
' → logprob: -3.002699851989746
    7. '  
' → logprob: -4.002699851989746
    8. ' ' → logprob: -4.502699851989746
    9. '<|end|>' → logprob: -4.627699851989746
    10. '   
' → logprob: -5.127699851989746

Token 60: ' city' (ID: 5030)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.12639814615249634
    2. 'dist' → logprob: -3.0013980865478516
    3. 'adj' → logprob: -4.126398086547852
    4. 'edges' → logprob: -4.251398086547852
    5. 'distance' → logprob: -4.751398086547852
    6. ' graph' → logprob: -4.876398086547852
    7. '   ' → logprob: -6.001398086547852
    8. 'g' → logprob: -6.251398086547852
    9. 'capac' → logprob: -6.626398086547852
    10. 'nodes' → logprob: -6.751398086547852

Token 61: '_id' (ID: 1537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20829389989376068
    2. '_map' → logprob: -2.833293914794922
    3. '_dist' → logprob: -2.833293914794922
    4. '_' → logprob: -3.083293914794922
    5. 'es' → logprob: -5.333293914794922
    6. '_graph' → logprob: -6.208293914794922
    7. '_idx' → logprob: -6.333293914794922
    8. ' =' → logprob: -6.583293914794922
    9. '_sizes' → logprob: -6.583293914794922
    10. '_indices' → logprob: -6.708293914794922

Token 62: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7966595888137817
    2. ' =' → logprob: -1.0466595888137817
    3. '=' → logprob: -1.6716595888137817
    4. '_map' → logprob: -4.796659469604492
    5. '_' → logprob: -6.421659469604492
    6. '_s' → logprob: -9.671659469604492
    7. ' ' → logprob: -10.296659469604492
    8. '={}' → logprob: -10.421659469604492
    9. '_mapping' → logprob: -10.921659469604492
    10. '[' → logprob: -10.921659469604492

Token 63: ' {}
' (ID: 11421)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.4745764136314392
    2. '{}' → logprob: -0.9745764136314392
    3. 'dict' → logprob: -8.224575996398926
    4. ' dict' → logprob: -9.224575996398926
    5. ' {' → logprob: -9.724575996398926
    6. '{' → logprob: -10.599575996398926
    7. ' ' → logprob: -10.974575996398926
    8. ' defaultdict' → logprob: -11.724575996398926
    9. ' {}
' → logprob: -11.849575996398926
    10. '={}' → logprob: -11.974575996398926

Token 64: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0847572088241577
    2. ' city' → logprob: -2.2097573280334473
    3. 'cnt' → logprob: -2.2097573280334473
    4. 'count' → logprob: -2.4597573280334473
    5. 'city' → logprob: -2.5847573280334473
    6. ' idx' → logprob: -2.7097573280334473
    7. 'id' → logprob: -2.8347573280334473
    8. 'current' → logprob: -3.3347573280334473
    9. 'counter' → logprob: -3.7097573280334473
    10. ' cnt' → logprob: -4.209757328033447

Token 65: ' def' (ID: 1056)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.44587233662605286
    2. 'id' → logprob: -2.0708723068237305
    3. 'count' → logprob: -2.8208723068237305
    4. 'city' → logprob: -3.0708723068237305
    5. 'cnt' → logprob: -3.1958723068237305
    6. 'counter' → logprob: -3.4458723068237305
    7. 'for' → logprob: -4.0708723068237305
    8. ' idx' → logprob: -4.3208723068237305
    9. 'current' → logprob: -4.5708723068237305
    10. 'next' → logprob: -5.9458723068237305

Token 66: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6570892930030823
    2. ' find' → logprob: -1.0320892333984375
    3. 'inition' → logprob: -2.9070892333984375
    4. ' assign' → logprob: -3.2820892333984375
    5. ' city' → logprob: -5.5320892333984375
    6. 'ine' → logprob: -5.9070892333984375
    7. ' dfs' → logprob: -5.9070892333984375
    8. 'ining' → logprob: -6.2820892333984375
    9. 'initions' → logprob: -6.2820892333984375
    10. ' def' → logprob: -6.4070892333984375

Token 67: '_id' (ID: 1537)
  Prédit: '_city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.14474256336688995
    2. '_id' → logprob: -2.019742488861084
    3. '_' → logprob: -6.769742488861084
    4. '_token' → logprob: -7.644742488861084
    5. ' _' → logprob: -8.394742965698242
    6. 'city' → logprob: -9.894742965698242
    7. ' city' → logprob: -9.894742965698242
    8. ' ' → logprob: -10.519742965698242
    9. 'City' → logprob: -11.269742965698242
    10. '_c' → logprob: -11.394742965698242

Token 68: '(name' (ID: 5587)
  Prédit: '(city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(city' → logprob: -0.5073593258857727
    2. '(' → logprob: -1.257359266281128
    3. '(token' → logprob: -2.757359266281128
    4. '(name' → logprob: -3.507359266281128
    5. '(key' → logprob: -4.382359504699707
    6. '(word' → logprob: -5.632359504699707
    7. '(s' → logprob: -7.007359504699707
    8. '(line' → logprob: -7.382359504699707
    9. '(x' → logprob: -7.507359504699707
    10. ' (' → logprob: -7.882359504699707

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00895737949758768
    2. '):
' → logprob: -4.758957386016846
    3. '(name' → logprob: -8.633956909179688
    4. ')' → logprob: -9.508956909179688
    5. '):
' → logprob: -10.008956909179688
    6. '   ' → logprob: -11.258956909179688
    7. '):

' → logprob: -12.008956909179688
    8. ',' → logprob: -12.258956909179688
    9. '_name' → logprob: -12.258956909179688
    10. ' ):' → logprob: -12.633956909179688

Token 70: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8660315871238708
    2. '       ' → logprob: -0.8660315871238708
    3. '<|end|>' → logprob: -2.1160316467285156
    4. '    ' → logprob: -3.6160316467285156
    5. ' ' → logprob: -5.116031646728516
    6. ' return' → logprob: -6.616031646728516
    7. '<|end|>' → logprob: -7.116031646728516
    8. '        ' → logprob: -7.616031646728516
    9. '  ' → logprob: -7.741031646728516
    10. '    
' → logprob: -8.241031646728516

Token 71: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34199124574661255
    2. 'if' (adapté à ' if') → logprob: -1.3419911861419678
    3. '       ' → logprob: -3.9669911861419678
    4. '   ' → logprob: -4.716991424560547
    5. '    ' → logprob: -8.966991424560547
    6. ' i' → logprob: -9.341991424560547
    7. 'i' → logprob: -9.966991424560547
    8. ' non' → logprob: -10.091991424560547
    9. 'return' → logprob: -10.216991424560547
    10. ' return' → logprob: -10.341991424560547

Token 72: ' name' (ID: 1308)
  Prédit: ' name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.03805216774344444
    2. 'name' → logprob: -3.2880520820617676
    3. '	name' → logprob: -11.788052558898926
    4. ' not' → logprob: -13.538052558898926
    5. ' ' → logprob: -13.788052558898926
    6. '(name' → logprob: -15.413052558898926
    7. 'not' → logprob: -15.788052558898926
    8. ' city' → logprob: -16.91305160522461
    9. '   ' → logprob: -17.28805160522461
    10. '"name' → logprob: -17.28805160522461

Token 73: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0063323453068733215
    2. 'not' → logprob: -5.3813323974609375
    3. ' in' → logprob: -6.3813323974609375
    4. '	not' → logprob: -11.881332397460938
    5. ')' → logprob: -12.131332397460938
    6. 'in' → logprob: -12.881332397460938
    7. ']' → logprob: -14.631332397460938
    8. 'n't' → logprob: -14.631332397460938
    9. '<|end|>' → logprob: -14.756332397460938
    10. '<|end|>' → logprob: -15.006332397460938

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5835312604904175
    2. 'in' → logprob: -0.8335312604904175
    3. '<|end|>' → logprob: -4.958531379699707
    4. '<|end|>' → logprob: -7.833531379699707
    5. 'city' → logprob: -10.208531379699707
    6. '   ' → logprob: -10.958531379699707
    7. ' city' → logprob: -11.083531379699707
    8. ')' → logprob: -11.333531379699707
    9. 'to' → logprob: -11.708531379699707
    10. ' ' → logprob: -11.958531379699707

Token 75: ' city' (ID: 5030)
  Prédit: ' city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.03364973142743111
    2. 'city' → logprob: -3.4086496829986572
    3. '_city' → logprob: -13.658649444580078
    4. '(city' → logprob: -14.033649444580078
    5. '.city' → logprob: -14.158649444580078
    6. '<|end|>' → logprob: -14.908649444580078
    7. ' ' → logprob: -15.533649444580078
    8. ' ciudad' → logprob: -15.783649444580078
    9. 'City' → logprob: -16.033649444580078
    10. '```' → logprob: -16.283649444580078

Token 76: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -12.250007629394531
    3. '_ids' → logprob: -14.375007629394531
    4. ' _' → logprob: -14.500007629394531
    5. '   ' → logprob: -14.875007629394531
    6. '```' → logprob: -15.375007629394531
    7. ')' → logprob: -15.875007629394531
    8. '_name' → logprob: -16.25000762939453
    9. ' ' → logprob: -16.25000762939453
    10. '<|end|>' → logprob: -16.25000762939453

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00795296486467123
    2. ':
' → logprob: -4.88295316696167
    3. '):' → logprob: -8.132952690124512
    4. '):
' → logprob: -10.132952690124512
    5. ')' → logprob: -13.132952690124512
    6. '<|end|>' → logprob: -13.132952690124512
    7. '   ' → logprob: -13.507952690124512
    8. '}:' → logprob: -13.757952690124512
    9. ' :' → logprob: -13.757952690124512
    10. '.keys' → logprob: -14.007952690124512

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3499464988708496
    2. '       ' → logprob: -1.3499464988708496
    3. ' city' → logprob: -3.7249464988708496
    4. '<|end|>' → logprob: -4.97494649887085
    5. 'city' → logprob: -6.09994649887085
    6. '   ' → logprob: -6.97494649887085
    7. '```' → logprob: -7.59994649887085
    8. '	       ' → logprob: -8.224946975708008
    9. '	   ' → logprob: -8.724946975708008
    10. '<|end|>' → logprob: -8.849946975708008

Token 79: ' city' (ID: 5030)
  Prédit: ' city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.03499845787882805
    2. 'city' (adapté à ' city') → logprob: -3.4099984169006348
    3. '               ' → logprob: -7.409998416900635
    4. '       ' → logprob: -8.159998893737793
    5. '           ' → logprob: -8.659998893737793
    6. '
' → logprob: -9.284998893737793
    7. ' ' → logprob: -10.409998893737793
    8. '_city' → logprob: -10.409998893737793
    9. '   ' → logprob: -10.534998893737793
    10. ' len' → logprob: -10.909998893737793

Token 80: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -13.750004768371582
    3. '_' → logprob: -13.875004768371582
    4. '_ids' → logprob: -14.250004768371582
    5. '```' → logprob: -14.250004768371582
    6. '   ' → logprob: -14.750004768371582
    7. '<|end|>' → logprob: -14.750004768371582
    8. ']' → logprob: -16.0000057220459
    9. '[id' → logprob: -16.3750057220459
    10. 'id' → logprob: -17.1250057220459

Token 81: '[name' (ID: 23001)
  Prédit: '[name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[name' → logprob: -3.5954712075181305e-05
    2. '[' → logprob: -10.250036239624023
    3. '[user' → logprob: -16.375036239624023
    4. '[class' → logprob: -17.000036239624023
    5. '[size' → logprob: -17.000036239624023
    6. '```' → logprob: -17.125036239624023
    7. '[word' → logprob: -17.125036239624023
    8. '[value' → logprob: -17.250036239624023
    9. ']' → logprob: -17.375036239624023
    10. '][' → logprob: -17.500036239624023

Token 82: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.045823566731997e-05
    2. ']=' → logprob: -11.250020027160645
    3. ' ]' → logprob: -11.875020027160645
    4. ')' → logprob: -15.500020027160645
    5. ' =' → logprob: -16.87502098083496
    6. '=' → logprob: -17.00002098083496
    7. '']' → logprob: -17.12502098083496
    8. '   ' → logprob: -17.25002098083496
    9. '`]' → logprob: -17.75002098083496
    10. ')]' → logprob: -17.87502098083496

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38696083426475525
    2. '=' → logprob: -1.1369608640670776
    3. ']' → logprob: -9.511960983276367
    4. ']=' → logprob: -11.636960983276367
    5. '=len' → logprob: -13.136960983276367
    6. '<|end|>' → logprob: -13.511960983276367
    7. ' =
' → logprob: -13.886960983276367
    8. ')' → logprob: -14.386960983276367
    9. '=
' → logprob: -14.636960983276367
    10. '=int' → logprob: -15.386960983276367

Token 84: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6931505799293518
    2. ' len' → logprob: -0.6931505799293518
    3. '	len' → logprob: -13.068150520324707
    4. '(len' → logprob: -14.693150520324707
    5. '[len' → logprob: -14.818150520324707
    6. '=len' → logprob: -16.068151473999023
    7. '<len' → logprob: -16.693151473999023
    8. ',len' → logprob: -16.943151473999023
    9. '   ' → logprob: -17.193151473999023
    10. 'le' → logprob: -17.818151473999023

Token 85: '(city' (ID: 84604)
  Prédit: '(city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(city' → logprob: -0.02325153350830078
    2. '(' → logprob: -3.773251533508301
    3. '(c' → logprob: -13.1482515335083
    4. 'city' → logprob: -13.5232515335083
    5. '(
' → logprob: -13.6482515335083
    6. '(country' → logprob: -14.7732515335083
    7. '(ci' → logprob: -15.1482515335083
    8. '(company' → logprob: -15.6482515335083
    9. '(cell' → logprob: -16.398250579833984
    10. '(C' → logprob: -16.398250579833984

Token 86: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -6.945094355614856e-05
    2. '_city' → logprob: -10.375069618225098
    3. '_' → logprob: -10.875069618225098
    4. ')' → logprob: -11.375069618225098
    5. '_ids' → logprob: -12.875069618225098
    6. 'd' → logprob: -13.625069618225098
    7. 'city' → logprob: -13.750069618225098
    8. 's' → logprob: -14.250069618225098
    9. '_)' → logprob: -14.500069618225098
    10. 'id' → logprob: -14.750069618225098

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016873658751137555
    2. ')
' → logprob: -9.000168800354004
    3. '<|end|>' → logprob: -11.000168800354004
    4. '   ' → logprob: -11.875168800354004
    5. ' )' → logprob: -12.000168800354004
    6. ')return' → logprob: -12.625168800354004
    7. '<|end|>' → logprob: -13.000168800354004
    8. ')+' → logprob: -13.000168800354004
    9. ')

' → logprob: -13.625168800354004
    10. ' ' → logprob: -13.750168800354004

Token 88: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4299236238002777
    2. '<|end|>' → logprob: -1.5549236536026
    3. ' return' → logprob: -2.6799235343933105
    4. 'return' (adapté à ' return') → logprob: -3.1799235343933105
    5. '
' → logprob: -4.5549235343933105
    6. ')' → logprob: -5.6799235343933105
    7. '	return' → logprob: -5.6799235343933105
    8. ':return' → logprob: -5.8049235343933105
    9. '<|end|>' → logprob: -6.4299235343933105
    10. ' 
' → logprob: -6.6799235343933105

Token 90: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.474078506231308
    2. ' city' → logprob: -0.9740785360336304
    3. '(city' → logprob: -13.724078178405762
    4. '_city' → logprob: -16.474079132080078
    5. 'space' → logprob: -16.849079132080078
    6. ' ' → logprob: -16.849079132080078
    7. ' ' → logprob: -17.349079132080078
    8. 'City' → logprob: -17.349079132080078
    9. 'cit' → logprob: -17.349079132080078
    10. 'c' → logprob: -17.599079132080078

Token 91: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.008169492706656456
    2. 'd' → logprob: -4.883169651031494
    3. '_d' → logprob: -7.508169651031494
    4. '_' → logprob: -12.008169174194336
    5. 'D' → logprob: -13.383169174194336
    6. ' _' → logprob: -13.383169174194336
    7. 'id' → logprob: -13.508169174194336
    8. '_i' → logprob: -13.633169174194336
    9. '[' → logprob: -14.758169174194336
    10. '_city' → logprob: -14.883169174194336

Token 92: '[name' (ID: 23001)
  Prédit: '[name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[name' → logprob: -0.0011711753904819489
    2. '[' → logprob: -6.751171112060547
    3. 'name' → logprob: -15.251171112060547
    4. '[n' → logprob: -15.876171112060547
    5. '[
' → logprob: -16.001171112060547
    6. ' [' → logprob: -16.251171112060547
    7. '{name' → logprob: -16.626171112060547
    8. '[user' → logprob: -17.001171112060547
    9. '[y' → logprob: -17.626171112060547
    10. '[s' → logprob: -17.751171112060547

Token 93: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002226979471743107
    2. '}' → logprob: -6.377226829528809
    3. '<|end|>' → logprob: -7.752226829528809
    4. ')
' → logprob: -9.752226829528809
    5. ']' → logprob: -11.002226829528809
    6. ')}' → logprob: -12.127226829528809
    7. ')return' → logprob: -12.627226829528809
    8. '<|end|>' → logprob: -12.627226829528809
    9. '```' → logprob: -13.627226829528809
    10. '
' → logprob: -13.627226829528809

Token 94: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7087380886077881
    2. 'u' → logprob: -2.208738088607788
    3. 'edges' → logprob: -2.208738088607788
    4. 'src' → logprob: -2.583738088607788
    5. '   ' → logprob: -2.833738088607788
    6. 'for' → logprob: -3.083738088607788
    7. 'g' → logprob: -4.083738327026367
    8. 'n' → logprob: -4.208738327026367
    9. '    
' → logprob: -4.708738327026367
    10. 'G' → logprob: -4.708738327026367

Token 95: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4608035683631897
    2. 'u' → logprob: -1.460803508758545
    3. 'src' → logprob: -2.210803508758545
    4. 'graph' → logprob: -4.460803508758545
    5. 'edges' (adapté à ' edges') → logprob: -5.710803508758545
    6. 's' → logprob: -5.960803508758545
    7. 'start' → logprob: -6.460803508758545
    8. ' for' → logprob: -6.960803508758545
    9. 'n' → logprob: -7.085803508758545
    10. 'adj' → logprob: -7.210803508758545

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011060204356908798
    2. '=' → logprob: -4.5110602378845215
    3. '=[]' → logprob: -12.386059761047363
    4. '[' → logprob: -12.761059761047363
    5. ' ' → logprob: -13.011059761047363
    6. '[]' → logprob: -14.136059761047363
    7. '<|end|>' → logprob: -14.386059761047363
    8. 's' → logprob: -15.011059761047363
    9. ' =
' → logprob: -15.136059761047363
    10. ')' → logprob: -15.636059761047363

Token 97: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4838064908981323
    2. ' []' → logprob: -0.9838064908981323
    3. ' [[]' → logprob: -4.733806610107422
    4. '[' → logprob: -7.233806610107422
    5. ' [' → logprob: -9.483806610107422
    6. ' defaultdict' → logprob: -10.483806610107422
    7. '[][]' → logprob: -10.983806610107422
    8. '{}' → logprob: -11.233806610107422
    9. '[]
' → logprob: -11.483806610107422
    10. '[]}' → logprob: -11.608806610107422

Token 98: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1355467140674591
    2. 'for' → logprob: -2.8855466842651367
    3. ')' → logprob: -3.5105466842651367
    4. ',' → logprob: -4.010546684265137
    5. ' for' → logprob: -4.510546684265137
    6. '<|end|>' → logprob: -4.635546684265137
    7. ' ]' → logprob: -7.510546684265137
    8. ')]' → logprob: -7.635546684265137
    9. '<|end|>' → logprob: -7.885546684265137
    10. '   ' → logprob: -7.885546684265137

Token 99: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006812811829149723
    2. 'range' → logprob: -5.256813049316406
    3. ' range' → logprob: -6.881813049316406
    4. ' in' → logprob: -8.631813049316406
    5. 'in' → logprob: -8.756813049316406
    6. ' _' → logprob: -8.881813049316406
    7. '_range' → logprob: -10.381813049316406
    8. '(range' → logprob: -10.631813049316406
    9. ' ' → logprob: -11.631813049316406
    10. '(' → logprob: -12.381813049316406

Token 100: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14449961483478546
    2. 'in' → logprob: -2.0194995403289795
    3. ' in' → logprob: -7.019499778747559
    4. ' range' → logprob: -7.519499778747559
    5. '(range' → logprob: -8.519499778747559
    6. 'ange' → logprob: -8.769499778747559
    7. 'ran' → logprob: -11.769499778747559
    8. 'i' → logprob: -12.019499778747559
    9. 'x' → logprob: -12.769499778747559
    10. 'rang' → logprob: -13.019499778747559

Token 101: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023423198610544205
    2. ' range' → logprob: -3.773423194885254
    3. '(range' → logprob: -8.648423194885254
    4. '	range' → logprob: -14.648423194885254
    5. '   ' → logprob: -14.773423194885254
    6. 'rang' → logprob: -14.898423194885254
    7. ' ' → logprob: -15.023423194885254
    8. '(' → logprob: -15.648423194885254
    9. 'r' → logprob: -15.898423194885254
    10. 'ran' → logprob: -15.898423194885254

Token 102: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.3226136767771095e-05
    2. '(' → logprob: -10.125042915344238
    3. 'N' → logprob: -13.625042915344238
    4. ' (' → logprob: -14.250042915344238
    5. '(n' → logprob: -15.000042915344238
    6. '(len' → logprob: -15.000042915344238
    7. '](' → logprob: -15.250042915344238
    8. '((' → logprob: -15.875042915344238
    9. ')(' → logprob: -16.250043869018555
    10. '(M' → logprob: -17.250043869018555

Token 103: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00016265720478259027
    2. ' N' → logprob: -8.750163078308105
    3. 'len' → logprob: -13.250163078308105
    4. 'n' → logprob: -14.125163078308105
    5. '   ' → logprob: -14.500163078308105
    6. 'M' → logprob: -15.000163078308105
    7. ' ' → logprob: -15.625163078308105
    8. '(N' → logprob: -15.875163078308105
    9. '	N' → logprob: -16.12516212463379
    10. '0' → logprob: -16.75016212463379

Token 104: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6500389575958252
    2. '*N' → logprob: -1.0250389575958252
    3. '*' → logprob: -2.150038957595825
    4. ' ' → logprob: -6.775038719177246
    5. ')' → logprob: -7.900038719177246
    6. 'N' → logprob: -8.275038719177246
    7. '0' → logprob: -8.400038719177246
    8. '*M' → logprob: -8.400038719177246
    9. ' N' → logprob: -9.400038719177246
    10. ')]' → logprob: -9.525038719177246

Token 105: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012996799312531948
    2. ' N' → logprob: -4.512996673583984
    3. '(N' → logprob: -7.012996673583984
    4. ' (' → logprob: -7.762996673583984
    5. 'M' → logprob: -8.262996673583984
    6. '(' → logprob: -8.512996673583984
    7. ' ' → logprob: -10.137996673583984
    8. '(M' → logprob: -10.512996673583984
    9. 'len' → logprob: -10.637996673583984
    10. '   ' → logprob: -10.887996673583984

Token 106: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009014541283249855
    2. ' )' → logprob: -7.625901222229004
    3. ']' → logprob: -8.125901222229004
    4. ' ]' → logprob: -9.500901222229004
    5. '+' → logprob: -10.875901222229004
    6. ')' → logprob: -10.875901222229004
    7. ' +' → logprob: -13.375901222229004
    8. ')]
' → logprob: -14.625901222229004
    9. '])' → logprob: -15.000901222229004
    10. ' }]' → logprob: -15.000901222229004

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015229643322527409
    2. ' ' → logprob: -4.51522970199585
    3. '2' → logprob: -5.51522970199585
    4. ')' → logprob: -10.015229225158691
    5. ' )' → logprob: -10.765229225158691
    6. ' M' → logprob: -11.015229225158691
    7. '10' → logprob: -11.265229225158691
    8. 'M' → logprob: -11.390229225158691
    9. '3' → logprob: -11.515229225158691
    10. '0' → logprob: -11.640229225158691

Token 108: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02667342871427536
    2. '2' → logprob: -3.7766733169555664
    3. '10' → logprob: -6.651673316955566
    4. ' ' → logprob: -6.776673316955566
    5. '5' → logprob: -7.401673316955566
    6. '3' → logprob: -9.026673316955566
    7. 'M' → logprob: -9.276673316955566
    8. '0' → logprob: -9.526673316955566
    9. '4' → logprob: -10.276673316955566
    10. ' M' → logprob: -11.276673316955566

Token 109: ' *' (ID: 425)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007031376590020955
    2. ']' → logprob: -8.000702857971191
    3. ' )' → logprob: -8.625702857971191
    4. ')' → logprob: -8.750702857971191
    5. ' ]' → logprob: -10.750702857971191
    6. ')]
' → logprob: -12.625702857971191
    7. '])' → logprob: -13.500702857971191
    8. ')]

' → logprob: -14.000702857971191
    9. ' ' → logprob: -14.500702857971191
    10. '   ' → logprob: -14.750702857971191

Token 110: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.40778329968452454
    2. ' M' → logprob: -1.9077832698822021
    3. '1' → logprob: -2.532783269882202
    4. ' ' → logprob: -3.157783269882202
    5. 'N' → logprob: -3.407783269882202
    6. 'cap' → logprob: -4.657783508300781
    7. ' N' → logprob: -4.907783508300781
    8. '2' → logprob: -5.657783508300781
    9. ')' → logprob: -5.907783508300781
    10. ' cap' → logprob: -6.032783508300781

Token 111: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00023154958034865558
    2. ' )' → logprob: -8.625231742858887
    3. '+' → logprob: -10.750231742858887
    4. ')' → logprob: -11.125231742858887
    5. ']' → logprob: -12.125231742858887
    6. ')]
' → logprob: -12.750231742858887
    7. ' ]' → logprob: -13.500231742858887
    8. ' ' → logprob: -13.625231742858887
    9. ')])' → logprob: -13.750231742858887
    10. ')]

' → logprob: -14.125231742858887

Token 112: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.726498544216156
    2. '1' → logprob: -1.3514986038208008
    3. '10' → logprob: -1.8514986038208008
    4. '2' → logprob: -2.351498603820801
    5. '4' → logprob: -6.226498603820801
    6. '5' → logprob: -6.351498603820801
    7. '100' → logprob: -7.226498603820801
    8. '3' → logprob: -8.1014986038208
    9. '0' → logprob: -8.8514986038208
    10. ')' → logprob: -9.7264986038208

Token 113: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6438331604003906
    2. '2' → logprob: -1.3938331604003906
    3. '10' → logprob: -1.7688331604003906
    4. ' ' → logprob: -3.1438331604003906
    5. '4' → logprob: -5.268833160400391
    6. '5' → logprob: -5.518833160400391
    7. '100' → logprob: -6.268833160400391
    8. '3' → logprob: -7.018833160400391
    9. '0' → logprob: -7.768833160400391
    10. '20' → logprob: -9.20633316040039

Token 114: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010199354437645525
    2. ']' → logprob: -9.750102043151855
    3. ' )' → logprob: -10.750102043151855
    4. ')' → logprob: -11.375102043151855
    5. ')]
' → logprob: -12.250102043151855
    6. ' ]' → logprob: -13.000102043151855
    7. '   ' → logprob: -13.875102043151855
    8. ')]

' → logprob: -14.250102043151855
    9. '])' → logprob: -14.625102043151855
    10. ')])' → logprob: -15.000102043151855

Token 115: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42277583479881287
    2. '<|end|>' → logprob: -1.5477758646011353
    3. '   ' → logprob: -2.7977757453918457
    4. 'for' → logprob: -3.0477757453918457
    5. ' for' → logprob: -4.297775745391846
    6. '    
' → logprob: -5.422775745391846
    7. '<|end|>' → logprob: -6.547775745391846
    8. '  
' → logprob: -7.172775745391846
    9. ')' → logprob: -7.422775745391846
    10. '

' → logprob: -7.672775745391846

Token 116: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09404497593641281
    2. 'for' → logprob: -2.5940449237823486
    3. '<|end|>' → logprob: -5.344045162200928
    4. '   ' → logprob: -5.594045162200928
    5. 'def' → logprob: -6.094045162200928
    6. ' for' → logprob: -6.219045162200928
    7. '    
' → logprob: -6.969045162200928
    8. '

' → logprob: -7.594045162200928
    9. '  
' → logprob: -9.09404468536377
    10. ' 
' → logprob: -9.34404468536377

Token 117: ' enough' (ID: 4951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8134649991989136
    2. '<|end|>' → logprob: -1.0634649991989136
    3. ' 
' → logprob: -2.563465118408203
    4. '
' → logprob: -3.063465118408203
    5. 'def' → logprob: -3.813465118408203
    6. '<|end|>' → logprob: -4.063465118408203
    7. '#' → logprob: -4.563465118408203
    8. ' 

' → logprob: -4.813465118408203
    9. '    ' → logprob: -5.438465118408203
    10. ' def' → logprob: -5.563465118408203

Token 118: ' size' (ID: 2349)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19844932854175568
    2. 'for' → logprob: -2.6984493732452393
    3. '<|end|>' → logprob: -2.8234493732452393
    4. ' for' → logprob: -3.4484493732452393
    5. '   ' → logprob: -4.44844913482666
    6. '    
' → logprob: -5.57344913482666
    7. 'def' → logprob: -6.19844913482666
    8. '<|end|>' → logprob: -6.44844913482666
    9. '

' → logprob: -6.82344913482666
    10. '  
' → logprob: -7.94844913482666

Token 120: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9068400859832764
    2. 'for' → logprob: -0.9068400859832764
    3. '   ' → logprob: -2.0318400859832764
    4. ' for' → logprob: -3.7818400859832764
    5. '    
' → logprob: -4.0318403244018555
    6. 'def' → logprob: -4.2818403244018555
    7. '<|end|>' → logprob: -5.2818403244018555
    8. '  
' → logprob: -7.4068403244018555
    9. ' 
' → logprob: -7.6568403244018555
    10. '

' → logprob: -8.281840324401855

Token 121: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41259193420410156
    2. '
' → logprob: -1.9125919342041016
    3. 'def' → logprob: -2.2875919342041016
    4. ' for' → logprob: -2.5375919342041016
    5. '    
' → logprob: -5.662591934204102
    6. ' 
' → logprob: -5.912591934204102
    7. '   ' → logprob: -6.912591934204102
    8. '  
' → logprob: -7.162591934204102
    9. '<|end|>' → logprob: -7.287591934204102
    10. ' def' → logprob: -8.787591934204102

Token 122: ' Read' (ID: 5405)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15435288846492767
    2. 'def' → logprob: -2.279352903366089
    3. ' for' → logprob: -3.279352903366089
    4. '#' → logprob: -7.52935266494751
    5. ' def' → logprob: -7.77935266494751
    6. '<|end|>' → logprob: -7.90435266494751
    7. 'continue' → logprob: -8.404353141784668
    8. '   ' → logprob: -8.654353141784668
    9. 'from' → logprob: -8.904353141784668
    10. 'import' → logprob: -9.154353141784668

Token 123: ' roads' (ID: 30027)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3668590784072876
    2. ' edges' → logprob: -1.3668590784072876
    3. 'for' → logprob: -3.616858959197998
    4. 'edges' → logprob: -4.616858959197998
    5. '<|end|>' → logprob: -4.741858959197998
    6. ' M' → logprob: -6.616858959197998
    7. '<|end|>' → logprob: -6.741858959197998
    8. ' the' → logprob: -6.866858959197998
    9. '_edges' → logprob: -7.116858959197998
    10. 'M' → logprob: -7.491858959197998

Token 124: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6569399833679199
    2. 'for' → logprob: -0.7819399833679199
    3. '<|end|>' → logprob: -4.53193998336792
    4. '   ' → logprob: -5.03193998336792
    5. '
' → logprob: -5.15693998336792
    6. '<|end|>' → logprob: -7.53193998336792
    7. ',' → logprob: -9.531940460205078
    8. '    
' → logprob: -9.656940460205078
    9. ' and' → logprob: -9.781940460205078
    10. '	for' → logprob: -9.906940460205078

Token 125: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12101630121469498
    2. ' for' → logprob: -2.496016263961792
    3. '   ' → logprob: -3.496016263961792
    4. '<|end|>' → logprob: -6.746016502380371
    5. '<|end|>' → logprob: -10.996016502380371
    6. '
' → logprob: -11.246016502380371
    7. '	for' → logprob: -11.371016502380371
    8. '    
' → logprob: -11.496016502380371
    9. ' ' → logprob: -12.121016502380371
    10. ')' → logprob: -12.496016502380371

Token 126: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06222323328256607
    2. ' for' → logprob: -2.812223196029663
    3. '   ' → logprob: -8.312223434448242
    4. '	for' → logprob: -12.062223434448242
    5. '
' → logprob: -12.937223434448242
    6. '<|end|>' → logprob: -14.312223434448242
    7. '    
' → logprob: -14.812223434448242
    8. '```' → logprob: -15.312223434448242
    9. ' ' → logprob: -15.687223434448242
    10. '    ' → logprob: -16.562223434448242

Token 127: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0011841575615108013
    2. '_' → logprob: -6.876183986663818
    3. ' i' → logprob: -8.876184463500977
    4. ' ' → logprob: -11.501184463500977
    5. ' range' → logprob: -14.626184463500977
    6. ' ' → logprob: -14.751184463500977
    7. ' _
' → logprob: -14.876184463500977
    8. 'i' → logprob: -15.626184463500977
    9. ' in' → logprob: -16.626184463500977
    10. ' __' → logprob: -17.376184463500977

Token 128: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6236430406570435
    2. 'range' → logprob: -1.1236430406570435
    3. ' in' → logprob: -1.9986430406570435
    4. ' range' → logprob: -5.748642921447754
    5. ' ' → logprob: -8.623642921447754
    6. '  ' → logprob: -11.498642921447754
    7. '(range' → logprob: -12.373642921447754
    8. 'int' → logprob: -13.373642921447754
    9. ',' → logprob: -13.373642921447754
    10. '    ' → logprob: -13.373642921447754

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011050889268517494
    2. ' range' → logprob: -4.511050701141357
    3. '(range' → logprob: -13.886051177978516
    4. 'rang' → logprob: -14.011051177978516
    5. '	range' → logprob: -14.886051177978516
    6. 'ra' → logprob: -15.636051177978516
    7. 'r' → logprob: -15.761051177978516
    8. '[' → logprob: -16.261051177978516
    9. 'ran' → logprob: -16.261051177978516
    10. ' ' → logprob: -16.511051177978516

Token 130: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0010314998216927052
    2. ' M' → logprob: -7.126031398773193
    3. ' (' → logprob: -8.751031875610352
    4. '(' → logprob: -10.126031875610352
    5. 'M' → logprob: -10.501031875610352
    6. ' ' → logprob: -14.626031875610352
    7. '   ' → logprob: -14.751031875610352
    8. '	M' → logprob: -16.12603187561035
    9. '(N' → logprob: -16.12603187561035
    10. ',M' → logprob: -17.00103187561035

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04429018869996071
    2. '):
' → logprob: -3.16929030418396
    3. ' ):' → logprob: -6.919290065765381
    4. ':' → logprob: -8.919290542602539
    5. ')' → logprob: -10.044290542602539
    6. ' ):
' → logprob: -10.169290542602539
    7. '+' → logprob: -10.669290542602539
    8. '):
' → logprob: -10.919290542602539
    9. '   ' → logprob: -10.919290542602539
    10. ',' → logprob: -12.044290542602539

Token 132: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016348473727703094
    2. '       ' → logprob: -4.516348361968994
    3. '    ' → logprob: -5.891348361968994
    4. ',' → logprob: -6.766348361968994
    5. '    
' → logprob: -8.141348838806152
    6. ')' → logprob: -8.266348838806152
    7. ' ,' → logprob: -8.266348838806152
    8. '<|end|>' → logprob: -8.516348838806152
    9. ' ' → logprob: -10.141348838806152
    10. 'tokens' → logprob: -10.266348838806152

Token 133: ' c' (ID: 274)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6987653970718384
    2. 'u' → logprob: -0.9487653970718384
    3. 'a' → logprob: -2.573765277862549
    4. ' a' → logprob: -3.323765277862549
    5. ' s' → logprob: -7.448765277862549
    6. 's' → logprob: -7.573765277862549
    7. ' city' → logprob: -7.698765277862549
    8. '   ' → logprob: -7.823765277862549
    9. 'from' → logprob: -8.323765754699707
    10. ' line' → logprob: -8.573765754699707

Token 134: '1' (ID: 16)
  Prédit: 'ity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.5256178379058838
    2. ',' → logprob: -1.9006178379058838
    3. '1' → logprob: -1.9006178379058838
    4. 'i' → logprob: -3.275617837905884
    5. 'it' → logprob: -4.150617599487305
    6. 'ities' → logprob: -4.400617599487305
    7. ' =' → logprob: -4.400617599487305
    8. 'h' → logprob: -5.650617599487305
    9. 'from' → logprob: -5.900617599487305
    10. '_,' → logprob: -5.900617599487305

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012004701420664787
    2. ' ,' → logprob: -7.5012006759643555
    3. '1' → logprob: -7.8762006759643555
    4. ',c' → logprob: -9.126200675964355
    5. '=' → logprob: -9.376200675964355
    6. ' =' → logprob: -10.501200675964355
    7. 'name' → logprob: -11.126200675964355
    8. '_name' → logprob: -11.501200675964355
    9. 'a' → logprob: -12.376200675964355
    10. 'c' → logprob: -12.876200675964355

Token 136: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17976275086402893
    2. ' c' → logprob: -1.8047627210617065
    3. ' ' → logprob: -11.554762840270996
    4. '_,' → logprob: -13.179762840270996
    5. ',' → logprob: -13.429762840270996
    6. ',c' → logprob: -13.679762840270996
    7. '   ' → logprob: -14.554762840270996
    8. '  ' → logprob: -14.554762840270996
    9. '_c' → logprob: -15.054762840270996
    10. ' 
' → logprob: -15.179762840270996

Token 137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001347615267150104
    2. '1' → logprob: -6.751347541809082
    3. ',' → logprob: -8.751347541809082
    4. 'c' → logprob: -11.751347541809082
    5. '=' → logprob: -12.876347541809082
    6. '_' → logprob: -13.251347541809082
    7. ' =' → logprob: -13.251347541809082
    8. ' ,' → logprob: -13.376347541809082
    9. ',c' → logprob: -13.876347541809082
    10. ',_' → logprob: -14.501347541809082

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010472200810909271
    2. ' ,' → logprob: -7.501047134399414
    3. '=' → logprob: -7.751047134399414
    4. ' =' → logprob: -9.751047134399414
    5. ',c' → logprob: -12.751047134399414
    6. '   ' → logprob: -14.376047134399414
    7. ' ' → logprob: -14.876047134399414
    8. ',w' → logprob: -14.876047134399414
    9. ',num' → logprob: -15.501047134399414
    10. '  ' → logprob: -15.751047134399414

Token 139: ' d' (ID: 272)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4665917754173279
    2. ' w' → logprob: -1.0915918350219727
    3. 'c' → logprob: -4.966591835021973
    4. 'p' → logprob: -5.091591835021973
    5. ' p' → logprob: -5.591591835021973
    6. 'weight' → logprob: -5.841591835021973
    7. 't' → logprob: -5.966591835021973
    8. ' c' → logprob: -6.216591835021973
    9. 'd' → logprob: -6.591591835021973
    10. 'cost' → logprob: -6.716591835021973

Token 140: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061786603182554245
    2. 'istance' → logprob: -3.561786651611328
    3. '=' → logprob: -4.186786651611328
    4. ' =' → logprob: -4.686786651611328
    5. 'ist' → logprob: -5.061786651611328
    6. ' ,' → logprob: -7.561786651611328
    7. 'elay' → logprob: -9.436786651611328
    8. 'elta' → logprob: -10.061786651611328
    9. 'e' → logprob: -10.936786651611328
    10. 'ista' → logprob: -11.061786651611328

Token 141: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2811796963214874
    2. 'input' → logprob: -1.406179666519165
    3. ' map' → logprob: -11.031179428100586
    4. 'map' → logprob: -11.781179428100586
    5. ' ' → logprob: -12.656179428100586
    6. '	input' → logprob: -14.156179428100586
    7. '(input' → logprob: -14.906179428100586
    8. 'int' → logprob: -15.281179428100586
    9. '   ' → logprob: -15.531179428100586
    10. '=input' → logprob: -15.531179428100586

Token 142: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001035787514410913
    2. '()' → logprob: -6.876035690307617
    3. ' ().' → logprob: -13.001035690307617
    4. '(' → logprob: -15.251035690307617
    5. ')' → logprob: -15.626035690307617
    6. ' ()' → logprob: -15.876035690307617
    7. '())' → logprob: -17.001035690307617
    8. '();' → logprob: -17.001035690307617
    9. '()='' → logprob: -17.376035690307617
    10. '()-' → logprob: -17.751035690307617

Token 143: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016361083544325083
    2. 'strip' → logprob: -8.750164031982422
    3. 'rstrip' → logprob: -12.250164031982422
    4. 'spl' → logprob: -15.375164031982422
    5. ' split' → logprob: -16.250164031982422
    6. '(split' → logprob: -17.125164031982422
    7. 'rs' → logprob: -19.250164031982422
    8. 'sp' → logprob: -19.500164031982422
    9. '_split' → logprob: -20.500164031982422
    10. 'plit' → logprob: -20.625164031982422

Token 144: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32095804810523987
    2. ',' → logprob: -1.3209580183029175
    3. '(' → logprob: -5.945958137512207
    4. '(),' → logprob: -6.195958137512207
    5. '<|end|>' → logprob: -6.445958137512207
    6. ')' → logprob: -7.445958137512207
    7. 'def' → logprob: -8.820958137512207
    8. ' ,' → logprob: -9.195958137512207
    9. '<|end|>' → logprob: -9.320958137512207
    10. '();' → logprob: -9.320958137512207

Token 145: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7674201130867004
    2. '<|end|>' → logprob: -0.8924201130867004
    3. ' ' → logprob: -3.7674200534820557
    4. ',' → logprob: -3.7674200534820557
    5. 'd' → logprob: -4.017420291900635
    6. '    ' → logprob: -4.017420291900635
    7. ')' → logprob: -4.517420291900635
    8. '<|end|>' → logprob: -4.767420291900635
    9. '    
' → logprob: -4.892420291900635
    10. ' d' → logprob: -5.267420291900635

Token 146: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3874173164367676
    2. 'd' (adapté à ' d') → logprob: -1.1374173164367676
    3. ' c' → logprob: -8.13741683959961
    4. 'c' → logprob: -9.26241683959961
    5. ' 
' → logprob: -10.63741683959961
    6. ' ' → logprob: -11.38741683959961
    7. 'n' → logprob: -11.51241683959961
    8. ' space' → logprob: -11.51241683959961
    9. 'distance' → logprob: -11.63741683959961
    10. 'space' → logprob: -11.76241683959961

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2535875737667084
    2. '=' → logprob: -1.5035876035690308
    3. '=int' → logprob: -6.50358772277832
    4. 'd' → logprob: -9.75358772277832
    5. ',' → logprob: -10.50358772277832
    6. ')' → logprob: -10.62858772277832
    7. '   ' → logprob: -11.25358772277832
    8. ' ' → logprob: -11.25358772277832
    9. 'int' → logprob: -12.25358772277832
    10. '=d' → logprob: -12.37858772277832

Token 148: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.048588622361421585
    2. ' int' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.298588752746582
    4. '[int' → logprob: -15.423588752746582
    5. '=int' → logprob: -16.173587799072266
    6. 'float' → logprob: -16.423587799072266
    7. '<int' → logprob: -16.798587799072266
    8. '(int' → logprob: -17.173587799072266
    9. '1' → logprob: -17.298587799072266
    10. '	int' → logprob: -17.423587799072266

Token 149: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0005532711511477828
    2. '(' → logprob: -7.500553131103516
    3. 'd' → logprob: -15.875553131103516
    4. ')d' → logprob: -16.000553131103516
    5. '	d' → logprob: -17.875553131103516
    6. '(
' → logprob: -17.875553131103516
    7. ' d' → logprob: -17.875553131103516
    8. '()' → logprob: -18.375553131103516
    9. '(D' → logprob: -18.625553131103516
    10. ' (' → logprob: -18.625553131103516

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001745775662129745
    2. ')
' → logprob: -9.125174522399902
    3. ' )' → logprob: -9.750174522399902
    4. ')d' → logprob: -13.500174522399902
    5. '<|end|>' → logprob: -13.625174522399902
    6. '   ' → logprob: -13.875174522399902
    7. ')

' → logprob: -14.375174522399902
    8. '[' → logprob: -14.750174522399902
    9. ' ' → logprob: -15.125174522399902
    10. ')#' → logprob: -15.375174522399902

Token 151: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6495227217674255
    2. '       ' → logprob: -1.5245227813720703
    3. '<|end|>' → logprob: -1.5245227813720703
    4. ')' → logprob: -4.02452278137207
    5. '    
' → logprob: -5.39952278137207
    6. ' ' → logprob: -5.39952278137207
    7. ',' → logprob: -5.64952278137207
    8. ' 
' → logprob: -6.14952278137207
    9. '
' → logprob: -6.52452278137207
    10. '    ' → logprob: -6.64952278137207

Token 152: ' id' (ID: 1211)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.049464426934719086
    2. ' u' → logprob: -3.049464464187622
    3. 'c' → logprob: -7.674464225769043
    4. 'id' (adapté à ' id') → logprob: -8.549464225769043
    5. 'a' → logprob: -9.424464225769043
    6. ' c' → logprob: -10.174464225769043
    7. 'from' → logprob: -11.049464225769043
    8. ' id' → logprob: -11.299464225769043
    9. 'v' → logprob: -11.549464225769043
    10. '   ' → logprob: -11.549464225769043

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009556477889418602
    2. '_c' → logprob: -7.250955581665039
    3. '_' → logprob: -8.375955581665039
    4. 'c' → logprob: -11.750955581665039
    5. '_a' → logprob: -12.625955581665039
    6. '_u' → logprob: -13.750955581665039
    7. 'a' → logprob: -13.875955581665039
    8. 's' → logprob: -14.625955581665039
    9. 'd' → logprob: -15.000955581665039
    10. '```' → logprob: -15.000955581665039

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15673914551734924
    2. '=' → logprob: -2.0317392349243164
    3. '1' → logprob: -4.281739234924316
    4. '_' → logprob: -9.656739234924316
    5. ',' → logprob: -9.906739234924316
    6. ' ' → logprob: -11.531739234924316
    7. ')' → logprob: -11.781739234924316
    8. '(' → logprob: -12.656739234924316
    9. '()' → logprob: -12.906739234924316
    10. '=id' → logprob: -13.656739234924316

Token 155: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.4740808606147766
    2. ' get' → logprob: -0.9740808606147766
    3. '(get' → logprob: -13.474081039428711
    4. '[get' → logprob: -14.099081039428711
    5. ')get' → logprob: -14.724081039428711
    6. '	get' → logprob: -14.974081039428711
    7. '=get' → logprob: -15.224081039428711
    8. ' ' → logprob: -15.724081039428711
    9. '@get' → logprob: -16.09908103942871
    10. '.get' → logprob: -16.22408103942871

Token 156: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -9.73446003627032e-05
    2. '_' → logprob: -9.250097274780273
    3. '_c' → logprob: -14.750097274780273
    4. '_i' → logprob: -15.500097274780273
    5. '_city' → logprob: -16.250097274780273
    6. '(id' → logprob: -16.375097274780273
    7. ')' → logprob: -16.375097274780273
    8. '(' → logprob: -16.500097274780273
    9. '(_' → logprob: -16.500097274780273
    10. ' _' → logprob: -16.625097274780273

Token 157: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00043126524542458355
    2. '(' → logprob: -7.750431060791016
    3. ' (' → logprob: -15.250431060791016
    4. '(
' → logprob: -16.000431060791016
    5. '(ci' → logprob: -16.750431060791016
    6. '(d' → logprob: -17.625431060791016
    7. '((' → logprob: -18.375431060791016
    8. ')c' → logprob: -18.500431060791016
    9. '(C' → logprob: -18.625431060791016
    10. 'c' → logprob: -19.125431060791016

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. 'c' → logprob: -12.125005722045898
    3. '(c' → logprob: -15.125005722045898
    4. '2' → logprob: -17.1250057220459
    5. ' c' → logprob: -17.1250057220459
    6. '(' → logprob: -18.1250057220459
    7. 's' → logprob: -19.0000057220459
    8. ')c' → logprob: -19.1250057220459
    9. '[c' → logprob: -19.3125057220459
    10. ')' → logprob: -19.3750057220459

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005211008246988058
    2. ')
' → logprob: -7.750521183013916
    3. ' )' → logprob: -10.250520706176758
    4. ')c' → logprob: -10.750520706176758
    5. '(' → logprob: -11.375520706176758
    6. '(id' → logprob: -11.875520706176758
    7. ')

' → logprob: -11.875520706176758
    8. ')
' → logprob: -13.000520706176758
    9. '(c' → logprob: -14.000520706176758
    10. '),' → logprob: -14.125520706176758

Token 160: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5840116143226624
    2. 'id' → logprob: -1.5840115547180176
    3. '<|end|>' → logprob: -2.5840115547180176
    4. '  
' → logprob: -2.7090115547180176
    5. '    
' → logprob: -3.7090115547180176
    6. '     
' → logprob: -4.459011554718018
    7. '   ' → logprob: -4.584011554718018
    8. '   
' → logprob: -4.584011554718018
    9. '        
' → logprob: -4.834011554718018
    10. ''' → logprob: -5.334011554718018

Token 161: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.00914863683283329
    2. ' id' → logprob: -4.759148597717285
    3. ' ' → logprob: -8.384148597717285
    4. ' 
' → logprob: -8.634148597717285
    5. ''' → logprob: -11.009148597717285
    6. 'space' → logprob: -11.259148597717285
    7. '    
' → logprob: -11.759148597717285
    8. '   ' → logprob: -12.009148597717285
    9. '_id' → logprob: -12.134148597717285
    10. '    ' → logprob: -12.259148597717285

Token 162: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03812779113650322
    2. '1' → logprob: -3.288127899169922
    3. '0' → logprob: -9.538127899169922
    4. '(id' → logprob: -12.288127899169922
    5. '[id' → logprob: -13.038127899169922
    6. '[' → logprob: -13.288127899169922
    7. '=' → logprob: -13.413127899169922
    8. ' ' → logprob: -13.788127899169922
    9. '(' → logprob: -14.038127899169922
    10. ')' → logprob: -14.288127899169922

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3135482966899872
    2. ' =' → logprob: -1.3135483264923096
    3. '(' → logprob: -8.18854808807373
    4. ')' → logprob: -12.31354808807373
    5. ' ' → logprob: -12.68854808807373
    6. ' (' → logprob: -14.81354808807373
    7. ',' → logprob: -15.56354808807373
    8. '=get' → logprob: -15.93854808807373
    9. '=}' → logprob: -16.188549041748047
    10. ')=' → logprob: -16.563549041748047

Token 164: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1602560132741928
    2. ' get' → logprob: -1.910256028175354
    3. '(get' → logprob: -11.035256385803223
    4. '[get' → logprob: -11.785256385803223
    5. '=get' → logprob: -12.785256385803223
    6. ')get' → logprob: -13.660256385803223
    7. '.get' → logprob: -13.785256385803223
    8. '	get' → logprob: -14.035256385803223
    9. '<|end|>' → logprob: -14.035256385803223
    10. '@get' → logprob: -14.535256385803223

Token 165: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0002084277366520837
    2. 'get' → logprob: -9.250208854675293
    3. '_' → logprob: -9.500208854675293
    4. 'id' → logprob: -10.500208854675293
    5. '_get' → logprob: -13.000208854675293
    6. '(get' → logprob: -13.375208854675293
    7. ' _' → logprob: -14.000208854675293
    8. 'd' → logprob: -14.000208854675293
    9. '_city' → logprob: -14.500208854675293
    10. '[id' → logprob: -14.625208854675293

Token 166: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0010678203543648124
    2. '(' → logprob: -6.876067638397217
    3. '(id' → logprob: -10.376068115234375
    4. '(city' → logprob: -13.126068115234375
    5. '(get' → logprob: -14.376068115234375
    6. ' (' → logprob: -14.626068115234375
    7. '(ci' → logprob: -15.251068115234375
    8. '(
' → logprob: -16.001068115234375
    9. '(cid' → logprob: -16.001068115234375
    10. '(cap' → logprob: -16.376068115234375

Token 167: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. 'c' → logprob: -13.125003814697266
    3. ')' → logprob: -14.750003814697266
    4. 's' → logprob: -14.750003814697266
    5. 'd' → logprob: -15.750003814697266
    6. '_' → logprob: -16.375003814697266
    7. ' ' → logprob: -16.625003814697266
    8. 'id' → logprob: -16.750003814697266
    9. '```' → logprob: -17.250003814697266
    10. ' c' → logprob: -17.687503814697266

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002990655368193984
    2. ')
' → logprob: -6.12799072265625
    3. '<|end|>' → logprob: -7.37799072265625
    4. '       ' → logprob: -9.75299072265625
    5. '   ' → logprob: -10.00299072265625
    6. '<|end|>' → logprob: -10.50299072265625
    7. ' )' → logprob: -11.12799072265625
    8. ',' → logprob: -12.12799072265625
    9. ' ' → logprob: -12.50299072265625
    10. ')
' → logprob: -12.75299072265625

Token 169: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3170490562915802
    2. '       ' → logprob: -1.5670490264892578
    3. 'edges' → logprob: -3.067049026489258
    4. '<|end|>' → logprob: -4.942049026489258
    5. ' edges' → logprob: -5.442049026489258
    6. '
' → logprob: -6.817049026489258
    7. ')' → logprob: -6.817049026489258
    8. '    
' → logprob: -7.317049026489258
    9. '        
' → logprob: -8.067049026489258
    10. '    ' → logprob: -8.317049026489258

Token 170: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.28457117080688477
    2. ' edges' → logprob: -1.4095711708068848
    3. '#' → logprob: -7.034571170806885
    4. '   ' → logprob: -7.784571170806885
    5. 'capacity' → logprob: -7.784571170806885
    6. 'cap' → logprob: -8.034570693969727
    7. ' #' → logprob: -8.159570693969727
    8. 'u' → logprob: -8.659570693969727
    9. '(edges' → logprob: -9.159570693969727
    10. 'if' → logprob: -9.284570693969727

Token 171: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.500003814697266
    3. ' [' → logprob: -15.500003814697266
    4. 'id' → logprob: -17.500003814697266
    5. '[i' → logprob: -18.250003814697266
    6. '```' → logprob: -18.875003814697266
    7. '[ip' → logprob: -19.375003814697266
    8. '
' → logprob: -19.625003814697266
    9. '[idx' → logprob: -19.625003814697266
    10. ')[' → logprob: -19.750003814697266

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '2' → logprob: -12.750003814697266
    3. '```' → logprob: -15.875003814697266
    4. '(id' → logprob: -16.000003814697266
    5. ']' → logprob: -16.250003814697266
    6. '[' → logprob: -16.250003814697266
    7. '(' → logprob: -16.625003814697266
    8. ')' → logprob: -16.875003814697266
    9. ' ' → logprob: -17.250003814697266
    10. '[id' → logprob: -17.312503814697266

Token 173: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0014189229113981128
    2. '.append' → logprob: -7.1264190673828125
    3. ']' → logprob: -8.001419067382812
    4. '[' → logprob: -9.251419067382812
    5. '.' → logprob: -9.376419067382812
    6. ' ].' → logprob: -9.376419067382812
    7. '][' → logprob: -12.501419067382812
    8. ').' → logprob: -13.001419067382812
    9. '   ' → logprob: -13.001419067382812
    10. '.setdefault' → logprob: -13.376419067382812

Token 174: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. 'app' → logprob: -14.375000953674316
    3. '.append' → logprob: -15.000000953674316
    4. 'push' → logprob: -17.875001907348633
    5. ' append' → logprob: -17.875001907348633
    6. 'appen' → logprob: -18.250001907348633
    7. '_append' → logprob: -19.625001907348633
    8. 'add' → logprob: -19.750001907348633
    9. 'Append' → logprob: -20.750001907348633
    10. ' ' → logprob: -20.875001907348633

Token 175: '((' (ID: 2054)
  Prédit: '(id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.2846432030200958
    2. '((' → logprob: -1.7846431732177734
    3. '(' → logprob: -2.5346431732177734
    4. ' (' → logprob: -7.659643173217773
    5. '([' → logprob: -10.034643173217773
    6. '(d' → logprob: -11.159643173217773
    7. '(
' → logprob: -11.409643173217773
    8. '(Id' → logprob: -11.784643173217773
    9. '(ids' → logprob: -12.534643173217773
    10. '(int' → logprob: -12.909643173217773

Token 176: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00016098834748845547
    2. ' id' → logprob: -8.750161170959473
    3. '(id' → logprob: -13.875161170959473
    4. 'd' → logprob: -14.375161170959473
    5. '
' → logprob: -15.500161170959473
    6. ',id' → logprob: -15.750161170959473
    7. '[id' → logprob: -16.250160217285156
    8. '	id' → logprob: -16.375160217285156
    9. ' ' → logprob: -16.375160217285156
    10. '"id' → logprob: -16.500160217285156

Token 177: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. ',' → logprob: -17.375
    4. 'id' → logprob: -18.75
    5. '1' → logprob: -18.875
    6. '```' → logprob: -19.3125
    7. '(id' → logprob: -19.5625
    8. '[' → logprob: -20.0
    9. '
' → logprob: -20.0625
    10. '-' → logprob: -20.25

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007232757634483278
    2. ' ,' → logprob: -7.875723361968994
    3. ',d' → logprob: -8.000722885131836
    4. ',
' → logprob: -12.375722885131836
    5. '‌,' → logprob: -14.625722885131836
    6. ' ' → logprob: -14.750722885131836
    7. '),' → logprob: -14.875722885131836
    8. '<|end|>' → logprob: -15.000722885131836
    9. ')' → logprob: -15.125722885131836
    10. ',c' → logprob: -15.375722885131836

Token 179: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14469891786575317
    2. ' d' → logprob: -2.0196988582611084
    3. 'cap' → logprob: -6.7696990966796875
    4. ' cap' → logprob: -8.144699096679688
    5. ' ' → logprob: -8.769699096679688
    6. '1' → logprob: -9.269699096679688
    7. '-cap' → logprob: -10.394699096679688
    8. '-' → logprob: -10.457199096679688
    9. '100' → logprob: -10.769699096679688
    10. '(cap' → logprob: -10.832199096679688

Token 180: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31677624583244324
    2. '))' → logprob: -1.3167762756347656
    3. ' ))' → logprob: -6.441776275634766
    4. ' ,' → logprob: -6.691776275634766
    5. '+' → logprob: -8.191776275634766
    6. ')' → logprob: -8.566776275634766
    7. '),' → logprob: -9.441776275634766
    8. ',
' → logprob: -9.941776275634766
    9. '))
' → logprob: -11.066776275634766
    10. ' )' → logprob: -11.816776275634766

Token 181: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32568708062171936
    2. '       ' → logprob: -2.0756871700286865
    3. '   ' → logprob: -2.4506871700286865
    4. ',' → logprob: -3.3256871700286865
    5. '<|end|>' → logprob: -3.7006871700286865
    6. ')
' → logprob: -6.325686931610107
    7. ' edges' → logprob: -7.450686931610107
    8. ',
' → logprob: -7.700686931610107
    9. 'edges' → logprob: -8.075687408447266
    10. '    ' → logprob: -8.200687408447266

Token 182: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.42978066205978394
    2. 'edges' (adapté à ' edges') → logprob: -1.0547807216644287
    3. '       ' → logprob: -6.92978048324585
    4. '   ' → logprob: -9.929780960083008
    5. '(edges' → logprob: -10.929780960083008
    6. '.edges' → logprob: -11.304780960083008
    7. ' 
' → logprob: -12.929780960083008
    8. ' ' → logprob: -12.929780960083008
    9. ' ' → logprob: -13.179780960083008
    10. '        
' → logprob: -13.179780960083008

Token 183: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -1.4498052223643754e-05
    2. '[' → logprob: -11.625014305114746
    3. 'id' → logprob: -12.250014305114746
    4. ' [' → logprob: -14.875014305114746
    5. '[
' → logprob: -16.000015258789062
    6. '[i' → logprob: -16.500015258789062
    7. 's' → logprob: -16.625015258789062
    8. '```' → logprob: -16.750015258789062
    9. '(id' → logprob: -17.125015258789062
    10. '
' → logprob: -17.250015258789062

Token 184: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01419159211218357
    2. '2' → logprob: -4.264191627502441
    3. '[id' → logprob: -11.139191627502441
    4. '```' → logprob: -12.389191627502441
    5. '[' → logprob: -12.889191627502441
    6. '0' → logprob: -13.639191627502441
    7. 's' → logprob: -13.764191627502441
    8. 'id' → logprob: -14.264191627502441
    9. ' ' → logprob: -14.264191627502441
    10. ']' → logprob: -14.514191627502441

Token 185: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.10383863747119904
    2. ').' → logprob: -2.6038386821746826
    3. ',' → logprob: -4.1038384437561035
    4. '.append' → logprob: -5.1038384437561035
    5. ']' → logprob: -6.9788384437561035
    6. ')' → logprob: -7.2288384437561035
    7. ' ].' → logprob: -9.728838920593262
    8. '.' → logprob: -9.853838920593262
    9. '   ' → logprob: -9.978838920593262
    10. '}.' → logprob: -10.228838920593262

Token 186: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.696889623621246e-06
    2. 'appen' → logprob: -13.37500286102295
    3. ' append' → logprob: -14.62500286102295
    4. '.append' → logprob: -15.00000286102295
    5. 'app' → logprob: -16.375001907348633
    6. '	append' → logprob: -16.625001907348633
    7. '_append' → logprob: -18.000001907348633
    8. '[-' → logprob: -18.000001907348633
    9. 'Append' → logprob: -18.375001907348633
    10. 'appe' → logprob: -18.500001907348633

Token 187: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.12015841156244278
    2. '(id' → logprob: -3.1201584339141846
    3. ' (' → logprob: -3.3701584339141846
    4. '(' → logprob: -3.3701584339141846
    5. ' ((' → logprob: -8.245158195495605
    6. '(
' → logprob: -11.370158195495605
    7. '(ids' → logprob: -11.620158195495605
    8. ')' → logprob: -12.620158195495605
    9. '(Id' → logprob: -12.620158195495605
    10. ',' → logprob: -13.120158195495605

Token 188: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.02154458500444889
    2. '(id' → logprob: -4.146544456481934
    3. ' id' → logprob: -5.271544456481934
    4. ' (' → logprob: -8.146544456481934
    5. '[id' → logprob: -10.646544456481934
    6. ',id' → logprob: -10.646544456481934
    7. '{id' → logprob: -11.146544456481934
    8. '	id' → logprob: -13.646544456481934
    9. '?id' → logprob: -13.771544456481934
    10. '   ' → logprob: -13.771544456481934

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ',' → logprob: -11.75001049041748
    3. ' ' → logprob: -14.75001049041748
    4. 'd' → logprob: -14.87501049041748
    5. ' ,' → logprob: -14.87501049041748
    6. ')' → logprob: -15.00001049041748
    7. '```' → logprob: -15.37501049041748
    8. ']' → logprob: -15.75001049041748
    9. '
' → logprob: -15.87501049041748
    10. '[' → logprob: -15.87501049041748

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010453128488734365
    2. ' ,' → logprob: -7.126045227050781
    3. ',d' → logprob: -8.376045227050781
    4. ')' → logprob: -12.126045227050781
    5. '),' → logprob: -13.501045227050781
    6. ',
' → logprob: -14.876045227050781
    7. '‌,' → logprob: -14.876045227050781
    8. '`,' → logprob: -15.001045227050781
    9. '))' → logprob: -15.251045227050781
    10. ',j' → logprob: -15.376045227050781

Token 191: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06993943452835083
    2. 'd' → logprob: -2.694939374923706
    3. ' ' → logprob: -13.444939613342285
    4. ' ' → logprob: -14.194939613342285
    5. ')d' → logprob: -14.319939613342285
    6. ' 
' → logprob: -15.944939613342285
    7. ')' → logprob: -16.31993865966797
    8. '<|end|>' → logprob: -17.00743865966797
    9. '	d' → logprob: -17.31993865966797
    10. '```' → logprob: -17.31993865966797

Token 192: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07891236990690231
    2. ')' → logprob: -2.5789122581481934
    3. ' ))' → logprob: -11.953912734985352
    4. '))
' → logprob: -12.078912734985352
    5. ' )' → logprob: -12.328912734985352
    6. '),' → logprob: -13.328912734985352
    7. ')))' → logprob: -13.703912734985352
    8. '   ' → logprob: -13.703912734985352
    9. ')
' → logprob: -14.453912734985352
    10. '])' → logprob: -14.828912734985352

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019607624039053917
    2. 'for' → logprob: -4.0196075439453125
    3. '
' → logprob: -7.2696075439453125
    4. ' for' → logprob: -7.6446075439453125
    5. '    
' → logprob: -9.394607543945312
    6. '#' → logprob: -9.644607543945312
    7. '```' → logprob: -9.644607543945312
    8. ' ' → logprob: -11.269607543945312
    9. '<|end|>' → logprob: -11.394607543945312
    10. '       ' → logprob: -11.394607543945312

Token 194: ' stations' (ID: 26061)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029048215597867966
    2. '   ' → logprob: -4.279048442840576
    3. '#' → logprob: -4.654048442840576
    4. ' for' → logprob: -5.279048442840576
    5. '
' → logprob: -10.404047966003418
    6. '    
' → logprob: -10.779047966003418
    7. 'def' → logprob: -11.529047966003418
    8. ' ' → logprob: -11.654047966003418
    9. ')' → logprob: -11.904047966003418
    10. 'distance' → logprob: -11.904047966003418

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18374624848365784
    2. '=' → logprob: -1.8087462186813354
    3. '_' → logprob: -6.183746337890625
    4. '_count' → logprob: -6.433746337890625
    5. 's' → logprob: -10.183746337890625
    6. '_num' → logprob: -10.308746337890625
    7. 'for' → logprob: -10.433746337890625
    8. ',' → logprob: -10.933746337890625
    9. '_ids' → logprob: -10.933746337890625
    10. '   ' → logprob: -11.058746337890625

Token 196: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10289215296506882
    2. '[input' → logprob: -3.7278921604156494
    3. '{}' → logprob: -3.8528921604156494
    4. '[int' → logprob: -4.10289192199707
    5. 'set' → logprob: -4.10289192199707
    6. ' []' → logprob: -4.97789192199707
    7. '[' → logprob: -5.22789192199707
    8. 'list' → logprob: -5.60289192199707
    9. '[list' → logprob: -6.85289192199707
    10. 'input' → logprob: -7.10289192199707

Token 197: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.52788148727268e-05
    2. '()
' → logprob: -10.125064849853516
    3. '([]' → logprob: -11.750064849853516
    4. '(' → logprob: -12.000064849853516
    5. '()

' → logprob: -12.375064849853516
    6. '([' → logprob: -13.125064849853516
    7. '(range' → logprob: -13.625064849853516
    8. '();' → logprob: -13.750064849853516
    9. '()]' → logprob: -14.500064849853516
    10. ' ()' → logprob: -14.500064849853516

Token 198: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3546137809753418
    2. '   ' → logprob: -1.3546137809753418
    3. ' for' → logprob: -3.229613780975342
    4. '
' → logprob: -7.604613780975342
    5. '	for' → logprob: -8.1046142578125
    6. '    
' → logprob: -9.7296142578125
    7. '<|end|>' → logprob: -9.8546142578125
    8. ' ' → logprob: -11.9796142578125
    9. '  
' → logprob: -12.3546142578125
    10. '  ' → logprob: -12.4796142578125

Token 199: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018127481453120708
    2. ' for' → logprob: -6.376812934875488
    3. '   ' → logprob: -9.126812934875488
    4. '	for' → logprob: -13.876812934875488
    5. '
' → logprob: -14.251812934875488
    6. '    
' → logprob: -16.626811981201172
    7. ' ' → logprob: -17.001811981201172
    8. '#' → logprob: -17.376811981201172
    9. ' 
' → logprob: -17.751811981201172
    10. '  ' → logprob: -18.376811981201172

Token 200: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07891159504652023
    2. ' _' → logprob: -2.578911542892456
    3. ' ' → logprob: -11.953911781311035
    4. '_i' → logprob: -12.578911781311035
    5. ' i' → logprob: -13.078911781311035
    6. '__' → logprob: -13.203911781311035
    7. ' in' → logprob: -13.328911781311035
    8. 'i' → logprob: -13.453911781311035
    9. '   ' → logprob: -14.203911781311035
    10. ' ' → logprob: -14.328911781311035

Token 201: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03940551355481148
    2. ' in' → logprob: -3.289405584335327
    3. '_' → logprob: -7.539405345916748
    4. ' ' → logprob: -7.789405345916748
    5. ' _' → logprob: -8.539405822753906
    6. 'range' → logprob: -8.789405822753906
    7. '  ' → logprob: -10.914405822753906
    8. '    ' → logprob: -11.664405822753906
    9. 'i' → logprob: -11.914405822753906
    10. '   ' → logprob: -12.039405822753906

Token 202: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006531051476486027
    2. ' range' → logprob: -7.375653266906738
    3. '(range' → logprob: -11.125653266906738
    4. 'input' → logprob: -12.500653266906738
    5. 'stations' → logprob: -13.375653266906738
    6. '_' → logprob: -13.500653266906738
    7. 'ange' → logprob: -13.750653266906738
    8. 'r' → logprob: -14.375653266906738
    9. '(' → logprob: -14.375653266906738
    10. 'rang' → logprob: -15.250653266906738

Token 203: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00022487416572403163
    2. 'M' → logprob: -8.875225067138672
    3. '(' → logprob: -10.375225067138672
    4. '(cap' → logprob: -10.500225067138672
    5. ' (' → logprob: -11.375225067138672
    6. ' M' → logprob: -11.750225067138672
    7. 'cap' → logprob: -13.000225067138672
    8. '   ' → logprob: -13.875225067138672
    9. '(int' → logprob: -13.875225067138672
    10. '(N' → logprob: -14.250225067138672

Token 204: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03396206349134445
    2. '):' → logprob: -3.4089620113372803
    3. '   ' → logprob: -8.53396224975586
    4. '():
' → logprob: -10.03396224975586
    5. '):
' → logprob: -10.90896224975586
    6. ' ):
' → logprob: -11.15896224975586
    7. ':
' → logprob: -11.28396224975586
    8. ':' → logprob: -11.65896224975586
    9. ')' → logprob: -11.78396224975586
    10. ',' → logprob: -11.90896224975586

Token 205: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005328743252903223
    2. ' c' → logprob: -6.25532865524292
    3. ' ' → logprob: -7.38032865524292
    4. ' s' → logprob: -7.38032865524292
    5. '	c' → logprob: -7.50532865524292
    6. ',' → logprob: -8.755329132080078
    7. 'c' → logprob: -8.880329132080078
    8. '    ' → logprob: -8.880329132080078
    9. '    
' → logprob: -8.880329132080078
    10. '       ' → logprob: -9.005329132080078

Token 206: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.6248679161071777
    2. 'c' → logprob: -1.8748679161071777
    3. 'station' → logprob: -2.4998679161071777
    4. ' s' → logprob: -2.7498679161071777
    5. 'line' → logprob: -3.1248679161071777
    6. ' station' → logprob: -3.3748679161071777
    7. ' line' → logprob: -3.4998679161071777
    8. ' c' → logprob: -4.249867916107178
    9. 'name' → logprob: -4.374867916107178
    10. 'city' → logprob: -4.874867916107178

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26812371611595154
    2. 't' → logprob: -1.643123745918274
    3. ',' → logprob: -3.2681236267089844
    4. '=' → logprob: -6.268123626708984
    5. 'name' → logprob: -7.268123626708984
    6. 'tar' → logprob: -7.768123626708984
    7. '_name' → logprob: -8.518123626708984
    8. ' ,' → logprob: -9.268123626708984
    9. ')' → logprob: -9.393123626708984
    10. 'tr' → logprob: -9.518123626708984

Token 208: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018331145867705345
    2. ' input' → logprob: -4.018331050872803
    3. 'get' → logprob: -8.643331527709961
    4. ' get' → logprob: -12.893331527709961
    5. '(input' → logprob: -14.018331527709961
    6. 'int' → logprob: -15.018331527709961
    7. 'str' → logprob: -15.393331527709961
    8. '=input' → logprob: -15.518331527709961
    9. 'in' → logprob: -15.768331527709961
    10. ' ' → logprob: -15.768331527709961

Token 209: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014165744185447693
    2. '()' → logprob: -4.264165878295898
    3. '(' → logprob: -14.514165878295898
    4. '()
' → logprob: -14.639165878295898
    5. ')' → logprob: -15.014165878295898
    6. '())' → logprob: -15.264165878295898
    7. '.readline' → logprob: -16.0141658782959
    8. ' ().' → logprob: -16.2641658782959
    9. '.strip' → logprob: -16.3891658782959
    10. '()[' → logprob: -16.7641658782959

Token 210: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -8.537868779967539e-06
    2. 'rstrip' → logprob: -11.750008583068848
    3. 'split' → logprob: -14.250008583068848
    4. ' strip' → logprob: -17.75000762939453
    5. '.strip' → logprob: -20.75000762939453
    6. 'str' → logprob: -21.37500762939453
    7. '_strip' → logprob: -21.37500762939453
    8. '(strip' → logprob: -21.37500762939453
    9. 'replace' → logprob: -22.50000762939453
    10. '-strip' → logprob: -23.00000762939453

Token 211: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12697871029376984
    2. '()
' → logprob: -2.126978635787964
    3. '())' → logprob: -10.626978874206543
    4. ')' → logprob: -12.126978874206543
    5. '()

' → logprob: -12.126978874206543
    6. '()
' → logprob: -12.376978874206543
    7. '())
' → logprob: -12.501978874206543
    8. '()\' → logprob: -12.751978874206543
    9. '   ' → logprob: -13.626978874206543
    10. '()`' → logprob: -14.001978874206543

Token 212: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4035818576812744
    2. '	st' → logprob: -1.7785818576812744
    3. '
' → logprob: -2.6535818576812744
    4. '<|end|>' → logprob: -3.0285818576812744
    5. ' stations' → logprob: -4.278581619262695
    6. 'stations' → logprob: -4.403581619262695
    7. '       ' → logprob: -4.528581619262695
    8. '    
' → logprob: -6.528581619262695
    9. '<|end|>' → logprob: -7.153581619262695
    10. 'tokens' → logprob: -7.403581619262695

Token 213: ' stations' (ID: 26061)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' (adapté à ' stations') → logprob: -0.18519774079322815
    2. ' stations' → logprob: -1.8101977109909058
    3. 'id' → logprob: -5.810197830200195
    4. 'station' → logprob: -6.685197830200195
    5. 's' → logprob: -8.060197830200195
    6. 'sid' → logprob: -8.310197830200195
    7. ' station' → logprob: -8.685197830200195
    8. ' id' → logprob: -8.935197830200195
    9. 'st' → logprob: -9.185197830200195
    10. 'u' → logprob: -10.060197830200195

Token 214: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.003196965903043747
    2. '.' → logprob: -5.753197193145752
    3. '().' → logprob: -11.753196716308594
    4. ' .' → logprob: -12.003196716308594
    5. '.update' → logprob: -12.628196716308594
    6. '.setdefault' → logprob: -14.128196716308594
    7. '.append' → logprob: -14.253196716308594
    8. ').' → logprob: -15.003196716308594
    9. 'add' → logprob: -16.753196716308594
    10. ' =' → logprob: -16.753196716308594

Token 215: '(get' (ID: 7119)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.03814786672592163
    2. '(get' → logprob: -3.2881479263305664
    3. '(' → logprob: -9.288147926330566
    4. 's' → logprob: -11.913147926330566
    5. '((' → logprob: -12.038147926330566
    6. 'get' → logprob: -14.288147926330566
    7. ' (' → logprob: -14.788147926330566
    8. '(Get' → logprob: -16.91314697265625
    9. '(
' → logprob: -17.03814697265625
    10. '(st' → logprob: -17.16314697265625

Token 216: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0011951096821576357
    2. 's' → logprob: -7.001194953918457
    3. '_s' → logprob: -8.251194953918457
    4. '_' → logprob: -11.751194953918457
    5. '(s' → logprob: -12.376194953918457
    6. ')' → logprob: -12.501194953918457
    7. '_st' → logprob: -13.001194953918457
    8. 'id' → logprob: -13.251194953918457
    9. ' s' → logprob: -14.501194953918457
    10. ')s' → logprob: -15.126194953918457

Token 217: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -12.750003814697266
    3. ' (' → logprob: -13.875003814697266
    4. 's' → logprob: -15.750003814697266
    5. ')' → logprob: -16.500003814697266
    6. ')(' → logprob: -17.000003814697266
    7. '(
' → logprob: -18.250003814697266
    8. '((' → logprob: -19.250003814697266
    9. '(st' → logprob: -19.500003814697266
    10. ')s' → logprob: -20.250003814697266

Token 218: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.48476263880729675
    2. ')' → logprob: -0.9847626686096191
    3. '())' → logprob: -4.734762668609619
    4. '()))' → logprob: -6.359762668609619
    5. '()' → logprob: -10.359762191772461
    6. '))
' → logprob: -10.734762191772461
    7. ')}' → logprob: -10.734762191772461
    8. ')
' → logprob: -11.484762191772461
    9. ' ))' → logprob: -11.984762191772461
    10. '(' → logprob: -12.359762191772461

Token 219: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14500698447227478
    2. 'def' → logprob: -2.1450068950653076
    3. 'distance' → logprob: -5.145007133483887
    4. 'src' → logprob: -6.020007133483887
    5. '#' → logprob: -6.145007133483887
    6. 'max' → logprob: -6.270007133483887
    7. 'start' → logprob: -7.020007133483887
    8. 'heap' → logprob: -7.270007133483887
    9. 'while' → logprob: -7.395007133483887
    10. 'for' → logprob: -7.770007133483887

Token 221: ' src' (ID: 4537)
  Prédit: ' src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' src' → logprob: -0.623451292514801
    2. 'src' → logprob: -1.6234512329101562
    3. ' dest' → logprob: -2.4984512329101562
    4. ' cap' → logprob: -2.6234512329101562
    5. 'cap' → logprob: -3.1234512329101562
    6. ' len' → logprob: -3.8734512329101562
    7. 'dest' → logprob: -3.9984512329101562
    8. ' city' → logprob: -4.748451232910156
    9. ' (' → logprob: -5.373451232910156
    10. 'len' → logprob: -5.498451232910156

Token 222: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.15913473069667816
    2. ' in' → logprob: -2.78413462638855
    3. 'not' → logprob: -3.65913462638855
    4. '_id' → logprob: -3.65913462638855
    5. '[' → logprob: -4.534134864807129
    6. ')' → logprob: -4.534134864807129
    7. '_' → logprob: -5.909134864807129
    8. ' ==' → logprob: -6.409134864807129
    9. '[id' → logprob: -6.659134864807129
    10. ':' → logprob: -7.159134864807129

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14316515624523163
    2. 'in' → logprob: -2.018165111541748
    3. ')' → logprob: -8.768165588378906
    4. ' ' → logprob: -9.268165588378906
    5. '<|end|>' → logprob: -9.393165588378906
    6. '[' → logprob: -10.768165588378906
    7. '_' → logprob: -10.893165588378906
    8. ' or' → logprob: -10.893165588378906
    9. '_id' → logprob: -11.018165588378906
    10. ':' → logprob: -11.268165588378906

Token 224: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.0019293478690087795
    2. ' city' → logprob: -6.25192928314209
    3. 'station' → logprob: -15.37692928314209
    4. ')' → logprob: -15.75192928314209
    5. '(city' → logprob: -16.501930236816406
    6. '.city' → logprob: -16.751930236816406
    7. 'get' → logprob: -17.001930236816406
    8. 'country' → logprob: -17.251930236816406
    9. 'user' → logprob: -17.376930236816406
    10. ' ' → logprob: -17.626930236816406

Token 225: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -8.41866585687967e-06
    2. '_' → logprob: -11.750008583068848
    3. '_i' → logprob: -15.250008583068848
    4. '_ids' → logprob: -15.875008583068848
    5. ')' → logprob: -17.00000762939453
    6. ':' → logprob: -18.12500762939453
    7. 's' → logprob: -18.75000762939453
    8. '_d' → logprob: -18.87500762939453
    9. '_:' → logprob: -18.87500762939453
    10. '):' → logprob: -19.00000762939453

Token 226: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009778402745723724
    2. ':
' → logprob: -5.0097784996032715
    3. ' or' → logprob: -5.8847784996032715
    4. '   ' → logprob: -9.009778022766113
    5. ':return' → logprob: -9.259778022766113
    6. '.keys' → logprob: -11.009778022766113
    7. '):' → logprob: -11.134778022766113
    8. ' and' → logprob: -11.884778022766113
    9. ')' → logprob: -12.259778022766113
    10. '       ' → logprob: -12.509778022766113

Token 227: ' dest' (ID: 3755)
  Prédit: ' dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dest' → logprob: -0.31326842308044434
    2. 'dest' → logprob: -1.3132684230804443
    3. '(dest' → logprob: -12.938268661499023
    4. '	dest' → logprob: -13.313268661499023
    5. 'src' → logprob: -13.938268661499023
    6. ' ' → logprob: -14.188268661499023
    7. '   ' → logprob: -15.438268661499023
    8. '_dest' → logprob: -15.813268661499023
    9. '.dest' → logprob: -15.938268661499023
    10. 'get' → logprob: -16.188268661499023

Token 228: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20325253903865814
    2. 'not' → logprob: -1.7032525539398193
    3. ')' → logprob: -6.82825231552124
    4. ':' → logprob: -7.45325231552124
    5. '_not' → logprob: -10.328252792358398
    6. '):' → logprob: -10.578252792358398
    7. '[' → logprob: -11.078252792358398
    8. '_id' → logprob: -11.078252792358398
    9. ':not' → logprob: -11.328252792358398
    10. '.get' → logprob: -11.328252792358398

Token 229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3601752817630768
    2. 'in' → logprob: -1.7351752519607544
    3. '(city' → logprob: -2.860175371170044
    4. ' city' → logprob: -2.985175371170044
    5. 'city' → logprob: -4.110175132751465
    6. '   ' → logprob: -7.110175132751465
    7. ')' → logprob: -7.360175132751465
    8. '_city' → logprob: -8.360175132751465
    9. ' ' → logprob: -10.235175132751465
    10. '(' → logprob: -10.235175132751465

Token 230: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.0009132515988312662
    2. ' city' → logprob: -7.000913143157959
    3. 'station' → logprob: -13.875913619995117
    4. 'get' → logprob: -15.750913619995117
    5. ' ' → logprob: -16.000913619995117
    6. 'country' → logprob: -16.000913619995117
    7. '   ' → logprob: -16.625913619995117
    8. '
' → logprob: -16.750913619995117
    9. '(city' → logprob: -17.125913619995117
    10. 'cities' → logprob: -17.875913619995117

Token 231: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -14.125001907348633
    3. 'id' → logprob: -14.250001907348633
    4. ')' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '_i' → logprob: -16.750001907348633
    7. '_ids' → logprob: -17.000001907348633
    8. '```' → logprob: -17.000001907348633
    9. ':' → logprob: -17.125001907348633
    10. '[' → logprob: -17.875001907348633

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062442198395729065
    2. ':
' → logprob: -2.8124423027038574
    3. '   ' → logprob: -8.1874418258667
    4. ' or' → logprob: -8.8124418258667
    5. ':return' → logprob: -10.6874418258667
    6. '       ' → logprob: -11.4374418258667
    7. 'continue' → logprob: -12.9374418258667
    8. ' continue' → logprob: -12.9374418258667
    9. '):' → logprob: -13.4374418258667
    10. ' :' → logprob: -13.5624418258667

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017993886023759842
    2. ':' → logprob: -4.267993927001953
    3. '   ' → logprob: -6.267993927001953
    4. ':
' → logprob: -6.517993927001953
    5. ' continue' → logprob: -8.017993927001953
    6. 'continue' → logprob: -9.642993927001953
    7. '	continue' → logprob: -10.517993927001953
    8. ' continues' → logprob: -11.767993927001953
    9. ',' → logprob: -12.392993927001953
    10. '.' → logprob: -12.642993927001953

Token 234: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045436546206474304
    2. 'continue' → logprob: -4.045436382293701
    3. '       ' → logprob: -4.420436382293701
    4. ' continue' → logprob: -4.545436382293701
    5. 'print' (adapté à ' print') → logprob: -5.670436382293701
    6. ' print' → logprob: -7.170436382293701
    7. '```' → logprob: -10.54543685913086
    8. '	continue' → logprob: -11.04543685913086
    9. ' ' → logprob: -12.29543685913086
    10. '    ' → logprob: -13.04543685913086

Token 235: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9201992154121399
    2. '(-' → logprob: -1.0451991558074951
    3. '("' → logprob: -1.4201991558074951
    4. '('' → logprob: -5.295199394226074
    5. '-' → logprob: -6.670199394226074
    6. '0' → logprob: -7.170199394226074
    7. '("-' → logprob: -7.545199394226074
    8. '(None' → logprob: -8.170199394226074
    9. '(
' → logprob: -8.795199394226074
    10. '   ' → logprob: -9.795199394226074

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -14.000000953674316
    3. ' ' → logprob: -15.687500953674316
    4. ')' → logprob: -16.500001907348633
    5. '9' → logprob: -17.187501907348633
    6. '```' → logprob: -17.437501907348633
    7. '3' → logprob: -17.500001907348633
    8. 'print' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.687501907348633
    10. '99' → logprob: -18.062501907348633

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004626768175512552
    2. ')
' → logprob: -5.379626750946045
    3. '   ' → logprob: -12.754627227783203
    4. ' )' → logprob: -13.254627227783203
    5. ')return' → logprob: -14.379627227783203
    6. ')`' → logprob: -15.504627227783203
    7. ')
' → logprob: -15.629627227783203
    8. '`)' → logprob: -15.879627227783203
    9. '')' → logprob: -16.004627227783203
    10. '       ' → logprob: -16.129627227783203

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10043913871049881
    2. '   ' → logprob: -2.3504390716552734
    3. '	continue' → logprob: -9.350439071655273
    4. 'continue' → logprob: -9.725439071655273
    5. ' continue' → logprob: -9.975439071655273
    6. '    
' → logprob: -10.975439071655273
    7. ')' → logprob: -12.725439071655273
    8. ',' → logprob: -12.975439071655273
    9. '<|end|>' → logprob: -13.100439071655273
    10. '           ' → logprob: -13.225439071655273

Token 239: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22279922664165497
    2. 'continue' (adapté à ' continue') → logprob: -1.9727991819381714
    3. ' continue' → logprob: -3.472799301147461
    4. '       ' → logprob: -4.097799301147461
    5. '	continue' → logprob: -4.347799301147461
    6. '
' → logprob: -10.347799301147461
    7. 'contin' → logprob: -10.847799301147461
    8. '_continue' → logprob: -11.847799301147461
    9. '```' → logprob: -12.347799301147461
    10. '\t' → logprob: -12.722799301147461

Token 240: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13481202721595764
    2. '
' → logprob: -3.009812116622925
    3. '    
' → logprob: -3.384812116622925
    4. ')' → logprob: -3.509812116622925
    5. '```' → logprob: -5.134811878204346
    6. '<|end|>' → logprob: -5.884811878204346
    7. ',' → logprob: -7.134811878204346
    8. '  
' → logprob: -7.884811878204346
    9. ' 
' → logprob: -8.009812355041504
    10. '   
' → logprob: -8.134812355041504

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14774632453918457
    2. 'dist' → logprob: -2.1477463245391846
    3. 'distance' → logprob: -4.5227460861206055
    4. '    
' → logprob: -6.0227460861206055
    5. 'dp' → logprob: -6.3977460861206055
    6. 'heap' → logprob: -6.5227460861206055
    7. 'd' → logprob: -6.8977460861206055
    8. 'pq' → logprob: -7.0227460861206055
    9. '```' → logprob: -7.7727460861206055
    10. '
' → logprob: -8.272746086120605

Token 242: ' start' (ID: 1604)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09375900030136108
    2. 'src' → logprob: -2.843759059906006
    3. 'start' (adapté à ' start') → logprob: -4.593759059906006
    4. 'def' → logprob: -4.718759059906006
    5. 'distance' → logprob: -5.468759059906006
    6. '#' → logprob: -5.968759059906006
    7. '   ' → logprob: -6.343759059906006
    8. '    
' → logprob: -6.968759059906006
    9. 'max' → logprob: -7.468759059906006
    10. 'import' → logprob: -7.968759059906006

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5123209953308105
    2. '_id' → logprob: -1.7623209953308105
    3. '=' → logprob: -1.8873209953308105
    4. '_' → logprob: -2.6373209953308105
    5. ',' → logprob: -5.7623209953308105
    6. ')' → logprob: -6.1373209953308105
    7. '_dist' → logprob: -8.137321472167969
    8. '_idx' → logprob: -8.762321472167969
    9. ']' → logprob: -9.512321472167969
    10. '_=' → logprob: -10.137321472167969

Token 244: ' city' (ID: 5030)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.42051801085472107
    2. 'city' → logprob: -1.1705180406570435
    3. ' get' → logprob: -3.795517921447754
    4. ' city' → logprob: -4.545517921447754
    5. '   ' → logprob: -14.545517921447754
    6. ' ' → logprob: -15.670517921447754
    7. '(city' → logprob: -15.920517921447754
    8. '	get' → logprob: -16.29551887512207
    9. '(get' → logprob: -16.79551887512207
    10. '0' → logprob: -16.79551887512207

Token 245: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.1875571544806007e-05
    2. '[_' → logprob: -12.375011444091797
    3. '[' → logprob: -12.750011444091797
    4. ' _' → logprob: -12.750011444091797
    5. '_' → logprob: -14.250011444091797
    6. 'id' → logprob: -15.750011444091797
    7. '_ids' → logprob: -16.250011444091797
    8. '[start' → logprob: -16.250011444091797
    9. '_city' → logprob: -16.500011444091797
    10. ')' → logprob: -16.625011444091797

Token 246: '[src' (ID: 164384)
  Prédit: '[src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[src' → logprob: -0.002052120165899396
    2. '[' → logprob: -6.252052307128906
    3. '(src' → logprob: -9.002052307128906
    4. '[source' → logprob: -15.252052307128906
    5. '<src' → logprob: -17.127052307128906
    6. 'src' → logprob: -17.127052307128906
    7. '[s' → logprob: -17.877052307128906
    8. '(' → logprob: -18.377052307128906
    9. '```' → logprob: -18.627052307128906
    10. '[
' → logprob: -18.877052307128906

Token 247: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021288490388542414
    2. ']
' → logprob: -6.627129077911377
    3. ' ]' → logprob: -7.877129077911377
    4. ')' → logprob: -8.377128601074219
    5. '<|end|>' → logprob: -8.877128601074219
    6. '<|end|>' → logprob: -10.377128601074219
    7. ']

' → logprob: -12.127128601074219
    8. '   ' → logprob: -12.627128601074219
    9. '}' → logprob: -13.002128601074219
    10. '
' → logprob: -13.252128601074219

Token 248: '   ' (ID: 271)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1659095585346222
    2. ' end' → logprob: -2.9159095287323
    3. 'dist' → logprob: -3.1659095287323
    4. 'dest' → logprob: -3.4159095287323
    5. 'destination' → logprob: -5.290909767150879
    6. 'goal' → logprob: -5.415909767150879
    7. 'distance' → logprob: -5.540909767150879
    8. ' dest' → logprob: -6.290909767150879
    9. ' dist' → logprob: -6.415909767150879
    10. '   ' → logprob: -6.540909767150879

Token 249: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.05192670226097107
    2. 'dest' → logprob: -3.926926612854004
    3. 'goal' → logprob: -4.176926612854004
    4. 'dist' → logprob: -4.801926612854004
    5. 'target' → logprob: -5.301926612854004
    6. 'destination' → logprob: -6.551926612854004
    7. ' end' → logprob: -8.176926612854004
    8. 'finish' → logprob: -8.676926612854004
    9. 'import' → logprob: -9.051926612854004
    10. 'heap' → logprob: -9.676926612854004

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38692352175712585
    2. '=' → logprob: -1.1369235515594482
    3. ' ' → logprob: -10.136923789978027
    4. ')' → logprob: -12.011923789978027
    5. ',' → logprob: -13.136923789978027
    6. '_' → logprob: -13.261923789978027
    7. '.' → logprob: -14.136923789978027
    8. ' =
' → logprob: -14.761923789978027
    9. '  ' → logprob: -14.886923789978027
    10. '[' → logprob: -15.011923789978027

Token 251: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.5759404301643372
    2. ' city' → logprob: -0.8259404301643372
    3. '(city' → logprob: -14.325940132141113
    4. '   ' → logprob: -15.825940132141113
    5. '.city' → logprob: -16.32594108581543
    6. 'get' → logprob: -16.82594108581543
    7. ' ' → logprob: -16.82594108581543
    8. ' get' → logprob: -18.20094108581543
    9. 'c' → logprob: -18.20094108581543
    10. 'City' → logprob: -18.32594108581543

Token 252: '_id' (ID: 1537)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6634819507598877
    2. '_id' → logprob: -0.7884819507598877
    3. '[end' → logprob: -3.9134819507598877
    4. '[start' → logprob: -4.663481712341309
    5. '[
' → logprob: -7.538481712341309
    6. 'dest' → logprob: -9.038481712341309
    7. '[-' → logprob: -9.788481712341309
    8. '```' → logprob: -9.788481712341309
    9. '   ' → logprob: -10.163481712341309
    10. ']' → logprob: -10.538481712341309

Token 253: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013832130935043097
    2. '[end' → logprob: -6.626383304595947
    3. 'dest' → logprob: -10.001382827758789
    4. '[start' → logprob: -12.126382827758789
    5. '[src' → logprob: -13.251382827758789
    6. '(dest' → logprob: -13.876382827758789
    7. '[]' → logprob: -14.501382827758789
    8. '[source' → logprob: -14.876382827758789
    9. 'end' → logprob: -15.001382827758789
    10. '[get' → logprob: -15.126382827758789

Token 254: 'dest' (ID: 28338)
  Prédit: 'dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -1.5048530030981055e-06
    2. ' dest' → logprob: -13.750001907348633
    3. '(dest' → logprob: -15.375001907348633
    4. 'city' → logprob: -16.500001907348633
    5. '[' → logprob: -16.625001907348633
    6. 'end' → logprob: -16.875001907348633
    7. 'dst' → logprob: -17.000001907348633
    8. ']' → logprob: -18.500001907348633
    9. '	dest' → logprob: -18.625001907348633
    10. 'destination' → logprob: -18.750001907348633

Token 255: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12732912600040436
    2. ']' → logprob: -2.127329111099243
    3. '   ' → logprob: -9.252328872680664
    4. ')]' → logprob: -9.252328872680664
    5. ')
' → logprob: -9.752328872680664
    6. '])' → logprob: -10.252328872680664
    7. '<|end|>' → logprob: -10.752328872680664
    8. ' )' → logprob: -11.127328872680664
    9. '+' → logprob: -11.252328872680664
    10. '}' → logprob: -11.377328872680664

Token 256: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005673152860254049
    2. 'import' → logprob: -6.380672931671143
    3. 'distance' → logprob: -6.630672931671143
    4. 'dp' → logprob: -7.505672931671143
    5. 'heap' → logprob: -7.755672931671143
    6. '   ' → logprob: -8.1306734085083
    7. 'def' → logprob: -8.2556734085083
    8. 'queue' → logprob: -8.3806734085083
    9. '```' → logprob: -8.3806734085083
    10. 'max' → logprob: -8.8806734085083

Token 257: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0189164187759161
    2. 'def' → logprob: -4.893916606903076
    3. 'INF' → logprob: -5.768916606903076
    4. 'import' → logprob: -5.768916606903076
    5. 'distance' → logprob: -6.768916606903076
    6. 'dp' → logprob: -7.268916606903076
    7. '#' (adapté à ' #') → logprob: -7.518916606903076
    8. '```' → logprob: -7.893916606903076
    9. 'fuel' → logprob: -7.893916606903076
    10. 'heap' → logprob: -8.018916130065918

Token 258: ' BFS' (ID: 190016)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0629623755812645
    2. 'def' → logprob: -3.062962293624878
    3. 'import' → logprob: -5.062962532043457
    4. '#' → logprob: -5.812962532043457
    5. 'distance' → logprob: -6.687962532043457
    6. 'INF' → logprob: -7.062962532043457
    7. 'dp' → logprob: -7.437962532043457
    8. 'heap' → logprob: -7.687962532043457
    9. '```' → logprob: -8.062962532043457
    10. 'queue' → logprob: -8.312962532043457

Token 259: '/D' (ID: 26018)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3128323256969452
    2. 'queue' → logprob: -2.9378323554992676
    3. ':' → logprob: -3.0628323554992676
    4. '(queue' → logprob: -3.1878323554992676
    5. 'import' → logprob: -3.3128323554992676
    6. ' queue' → logprob: -4.187832355499268
    7. ' from' → logprob: -4.437832355499268
    8. '_queue' → logprob: -4.437832355499268
    9. '
' → logprob: -4.687832355499268
    10. 'dist' → logprob: -4.937832355499268

Token 260: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.11048312485218048
    2. 'FS' → logprob: -2.485483169555664
    3. 'I' → logprob: -5.360483169555664
    4. 'F' → logprob: -5.360483169555664
    5. 'ij' → logprob: -5.485483169555664
    6. '```' → logprob: -6.485483169555664
    7. '   ' → logprob: -6.985483169555664
    8. 'ijk' → logprob: -7.110483169555664
    9. 'S' → logprob: -7.235483169555664
    10. 'P' → logprob: -7.360483169555664

Token 261: ' on' (ID: 402)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15627287328243256
    2. 'heap' → logprob: -3.6562728881835938
    3. 'import' → logprob: -3.6562728881835938
    4. 'distance' → logprob: -3.7812728881835938
    5. '(' → logprob: -4.031272888183594
    6. '   ' → logprob: -4.406272888183594
    7. '
' → logprob: -5.031272888183594
    8. '(heap' → logprob: -5.281272888183594
    9. 'def' → logprob: -5.406272888183594
    10. '(dist' → logprob: -5.531272888183594

Token 262: ' state' (ID: 2608)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.2178215980529785
    2. 'import' → logprob: -1.8428215980529785
    3. 'dist' → logprob: -1.9678215980529785
    4. 'cap' → logprob: -2.0928215980529785
    5. '(cap' → logprob: -2.0928215980529785
    6. ' heap' → logprob: -3.4678215980529785
    7. ' (' → logprob: -3.4678215980529785
    8. 'distance' → logprob: -4.3428215980529785
    9. 'capacity' → logprob: -4.3428215980529785
    10. ' dist' → logprob: -4.4678215980529785

Token 263: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6698379516601562
    2. ' (' → logprob: -1.9198379516601562
    3. 'space' → logprob: -2.0448379516601562
    4. '[' → logprob: -2.4198379516601562
    5. '(' → logprob: -2.6698379516601562
    6. ')' → logprob: -3.0448379516601562
    7. 's' → logprob: -3.2948379516601562
    8. ',' → logprob: -3.4198379516601562
    9. ' ' → logprob: -3.4198379516601562
    10. ' )' → logprob: -3.7948379516601562

Token 264: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5892964005470276
    2. '   ' → logprob: -2.339296340942383
    3. 'import' → logprob: -2.339296340942383
    4. 'from' → logprob: -2.589296340942383
    5. 'heap' → logprob: -3.214296340942383
    6. 'dist' → logprob: -3.464296340942383
    7. '(heap' → logprob: -4.214296340942383
    8. ' heap' → logprob: -4.339296340942383
    9. ' from' → logprob: -4.714296340942383
    10. ' dist' → logprob: -4.964296340942383

Token 265: 'city' (ID: 17500)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.2714260816574097
    2. 'cost' → logprob: -1.6464260816574097
    3. 'start' → logprob: -2.146426200866699
    4. 'cur' → logprob: -2.146426200866699
    5. 'curr' → logprob: -2.521426200866699
    6. 'cap' → logprob: -2.521426200866699
    7. '(start' → logprob: -3.646426200866699
    8. 'capacity' → logprob: -3.896426200866699
    9. '(cap' → logprob: -4.021426200866699
    10. 'distance' → logprob: -4.021426200866699

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009489760850556195
    2. ' ,' → logprob: -7.125948905944824
    3. ')' → logprob: -9.500948905944824
    4. '_,' → logprob: -11.000948905944824
    5. ',
' → logprob: -11.375948905944824
    6. ',state' → logprob: -11.500948905944824
    7. '_id' → logprob: -11.625948905944824
    8. ',)' → logprob: -13.000948905944824
    9. '   ' → logprob: -13.125948905944824
    10. ' )' → logprob: -13.250948905944824

Token 267: ' fuel' (ID: 14827)
  Prédit: 'fuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -0.4509325921535492
    2. 'battery' → logprob: -1.8259326219558716
    3. 'tank' → logprob: -2.575932502746582
    4. ' fuel' → logprob: -3.450932502746582
    5. 'capacity' → logprob: -3.825932502746582
    6. 'charge' → logprob: -4.450932502746582
    7. 'cap' → logprob: -4.450932502746582
    8. ' battery' → logprob: -4.700932502746582
    9. 'gas' → logprob: -5.075932502746582
    10. 'remaining' → logprob: -5.450932502746582

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20299820601940155
    2. ',' → logprob: -1.702998161315918
    3. ' )' → logprob: -7.952998161315918
    4. '_level' → logprob: -8.327998161315918
    5. '_capacity' → logprob: -8.327998161315918
    6. ',)' → logprob: -8.827998161315918
    7. ' ,' → logprob: -9.077998161315918
    8. 'capacity' → logprob: -9.577998161315918
    9. ')_' → logprob: -9.827998161315918
    10. 'level' → logprob: -9.827998161315918

Token 269: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6566174030303955
    2. '   ' → logprob: -1.2816174030303955
    3. ')' → logprob: -2.9066174030303955
    4. 'distance' → logprob: -3.0316174030303955
    5. ':' → logprob: -3.7816174030303955
    6. 'import' → logprob: -4.281617164611816
    7. 'heap' → logprob: -4.406617164611816
    8. 'fuel' → logprob: -4.531617164611816
    9. '
' → logprob: -5.281617164611816
    10. 'd' → logprob: -5.406617164611816

Token 270: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07686223089694977
    2. 'import' → logprob: -3.576862335205078
    3. 'max' → logprob: -4.076862335205078
    4. 'dp' → logprob: -4.826862335205078
    5. 'INF' → logprob: -5.201862335205078
    6. 'fuel' → logprob: -5.326862335205078
    7. '   ' → logprob: -5.826862335205078
    8. 'MAX' → logprob: -6.326862335205078
    9. 'from' → logprob: -6.326862335205078
    10. 'distance' → logprob: -6.826862335205078

Token 271: ' Each' (ID: 11555)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.33222463726997375
    2. 'import' → logprob: -1.9572246074676514
    3. 'max' → logprob: -2.8322246074676514
    4. 'heap' → logprob: -3.7072246074676514
    5. 'INF' → logprob: -4.0822248458862305
    6. 'dp' → logprob: -4.4572248458862305
    7. 'fuel' → logprob: -4.5822248458862305
    8. 'from' → logprob: -5.4572248458862305
    9. 'pq' → logprob: -5.4572248458862305
    10. 'MAX' → logprob: -5.5822248458862305

Token 272: ' edge' (ID: 11165)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.2078818082809448
    2. 'dist' → logprob: -1.3328818082809448
    3. 'distance' → logprob: -1.9578818082809448
    4. ')' → logprob: -2.2078819274902344
    5. ' line' → logprob: -3.8328819274902344
    6. ' dist' → logprob: -4.082881927490234
    7. 'fuel' → logprob: -4.207881927490234
    8. 'line' → logprob: -4.207881927490234
    9. 'token' → logprob: -4.332881927490234
    10. 'import' → logprob: -4.582881927490234

Token 273: ' consumes' (ID: 109297)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6570497751235962
    2. '   ' → logprob: -2.0320496559143066
    3. ')' → logprob: -2.6570496559143066
    4. ' ,' → logprob: -3.0320496559143066
    5. 's' → logprob: -3.6570496559143066
    6. ' ' → logprob: -3.6570496559143066
    7. '  ' → logprob: -3.7820496559143066
    8. '    ' → logprob: -3.7820496559143066
    9. '<|end|>' → logprob: -3.7820496559143066
    10. ' =' → logprob: -3.9070496559143066

Token 274: ' fuel' (ID: 14827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20454886555671692
    2. '1' → logprob: -1.7045488357543945
    3. ' )' → logprob: -7.0795488357543945
    4. ''' → logprob: -7.2045488357543945
    5. 'fuel' → logprob: -7.5795488357543945
    6. '<|end|>' → logprob: -8.579548835754395
    7. ')' → logprob: -9.204548835754395
    8. '[' → logprob: -9.579548835754395
    9. ' fuel' → logprob: -9.954548835754395
    10. ' one' → logprob: -9.954548835754395

Token 275: ' equal' (ID: 12629)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7460431456565857
    2. '
' → logprob: -1.8710432052612305
    3. '   ' → logprob: -2.3710432052612305
    4. ',' → logprob: -2.4960432052612305
    5. ':' → logprob: -2.9960432052612305
    6. '_' → logprob: -3.8710432052612305
    7. ' ' → logprob: -3.8710432052612305
    8. '.' → logprob: -4.1210432052612305
    9. '=' → logprob: -4.3710432052612305
    10. ' 
' → logprob: -4.9960432052612305

Token 276: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.38790515065193176
    2. 'to' → logprob: -1.1379051208496094
    3. ')' → logprob: -8.13790512084961
    4. '   ' → logprob: -8.38790512084961
    5. '  ' → logprob: -9.01290512084961
    6. ' ' → logprob: -9.26290512084961
    7. '    ' → logprob: -9.38790512084961
    8. '=' → logprob: -9.51290512084961
    9. '<|end|>' → logprob: -10.01290512084961
    10. '1' → logprob: -10.88790512084961

Token 277: ' distance' (ID: 9324)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3234257698059082
    2. 'd' → logprob: -1.8234257698059082
    3. ' d' → logprob: -3.198425769805908
    4. ''d' → logprob: -3.323425769805908
    5. '"' → logprob: -3.948425769805908
    6. '1' → logprob: -4.698425769805908
    7. ' '' → logprob: -5.448425769805908
    8. ' ' → logprob: -6.448425769805908
    9. '`' → logprob: -6.698425769805908
    10. ' a' → logprob: -7.198425769805908

Token 278: '.' (ID: 13)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.38509148359298706
    2. '   ' → logprob: -1.5100915431976318
    3. 'max' → logprob: -3.385091543197632
    4. 'dp' → logprob: -3.760091543197632
    5. 'import' → logprob: -4.135091304779053
    6. 'fuel' → logprob: -4.635091304779053
    7. 'distance' → logprob: -4.885091304779053
    8. '
' → logprob: -6.385091304779053
    9. 'INF' → logprob: -6.510091304779053
    10. 'MAX' → logprob: -7.010091304779053

Token 279: ' Can' (ID: 4101)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12747269868850708
    2. 'import' → logprob: -3.1274726390838623
    3. '   ' → logprob: -3.3774726390838623
    4. 'INF' → logprob: -4.502472877502441
    5. 'fuel' → logprob: -4.752472877502441
    6. 'max' → logprob: -5.127472877502441
    7. 'dp' → logprob: -5.127472877502441
    8. 'from' → logprob: -6.002472877502441
    9. '
' → logprob: -6.252472877502441
    10. 'distance' → logprob: -6.752472877502441

Token 280: ' ref' (ID: 2714)
  Prédit: 'ref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ref' → logprob: -0.3231615722179413
    2. ' ref' → logprob: -2.3231616020202637
    3. 'carry' → logprob: -2.5731616020202637
    4. 'go' → logprob: -3.6981616020202637
    5. 'have' → logprob: -4.198161602020264
    6. 'purchase' → logprob: -4.573161602020264
    7. 'use' → logprob: -4.573161602020264
    8. 'buy' → logprob: -4.573161602020264
    9. 'travel' → logprob: -5.323161602020264
    10. 'move' → logprob: -5.573161602020264

Token 281: 'uel' (ID: 4619)
  Prédit: 'uel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.007320747245103121
    2. 'ill' → logprob: -5.007320880889893
    3. 'ueling' → logprob: -8.257320404052734
    4. 'uell' → logprob: -9.257320404052734
    5. 'u' → logprob: -9.507320404052734
    6. 'ull' → logprob: -10.257320404052734
    7. '```' → logprob: -10.382320404052734
    8. 'fill' → logprob: -10.382320404052734
    9. 'ue' → logprob: -10.507320404052734
    10. 'uels' → logprob: -11.132320404052734

Token 282: ' to' (ID: 316)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.2708192467689514
    2. '   ' → logprob: -2.6458191871643066
    3. ' to' → logprob: -2.6458191871643066
    4. ' ' → logprob: -4.145819187164307
    5. ' here' → logprob: -4.145819187164307
    6. ' whenever' → logprob: -5.020819187164307
    7. '    ' → logprob: -5.145819187164307
    8. ' in' → logprob: -5.520819187164307
    9. ' up' → logprob: -5.520819187164307
    10. ' if' → logprob: -5.645819187164307

Token 283: ' full' (ID: 3149)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.15710893273353577
    2. ' cap' → logprob: -2.157109022140503
    3. ' full' → logprob: -3.782109022140503
    4. 'full' → logprob: -5.032108783721924
    5. 'capacity' → logprob: -8.532109260559082
    6. 'max' → logprob: -9.657109260559082
    7. '(cap' → logprob: -10.407109260559082
    8. ' capacity' → logprob: -10.407109260559082
    9. '
' → logprob: -10.782109260559082
    10. ' max' → logprob: -10.907109260559082

Token 284: ' tank' (ID: 16109)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.6390061974525452
    2. 'capacity' → logprob: -1.3890061378479004
    3. ' capacity' → logprob: -2.6390061378479004
    4. '   ' → logprob: -2.7640061378479004
    5. ' at' → logprob: -2.8890061378479004
    6. ' cap' → logprob: -4.0140061378479
    7. '
' → logprob: -6.1390061378479
    8. 'fuel' → logprob: -6.5140061378479
    9. '(cap' → logprob: -6.5140061378479
    10. ' while' → logprob: -6.7640061378479

Token 285: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36644819378852844
    2. '
' → logprob: -1.366448163986206
    3. 'dist' → logprob: -4.366448402404785
    4. 'max' → logprob: -4.741448402404785
    5. '    
' → logprob: -4.991448402404785
    6. 'distance' → logprob: -5.116448402404785
    7. 'import' → logprob: -5.491448402404785
    8. ')' → logprob: -5.866448402404785
    9. 'capacity' → logprob: -6.241448402404785
    10. 'fuel' → logprob: -6.241448402404785

Token 286: ' stations' (ID: 26061)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.8501525521278381
    2. 'any' → logprob: -0.9751525521278381
    3. 'station' → logprob: -1.9751524925231934
    4. 'a' → logprob: -3.3501524925231934
    5. ' any' → logprob: -5.100152492523193
    6. 'fuel' → logprob: -5.225152492523193
    7. ' stations' → logprob: -5.600152492523193
    8. 'each' → logprob: -5.725152492523193
    9. 'gas' → logprob: -7.225152492523193
    10. ' station' → logprob: -7.600152492523193

Token 287: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.712509274482727
    2. 'dist' → logprob: -1.087509274482727
    3. 'dp' → logprob: -2.5875091552734375
    4. 'import' → logprob: -3.0875091552734375
    5. 'max' → logprob: -3.7125091552734375
    6. 'distance' → logprob: -4.4625091552734375
    7. '
' → logprob: -5.0875091552734375
    8. 'INF' → logprob: -5.8375091552734375
    9. '    
' → logprob: -6.8375091552734375
    10. 'from' → logprob: -6.9625091552734375

Token 288: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.029469145461916924
    2. ' any' → logprob: -3.7794692516326904
    3. 'each' → logprob: -5.654469013214111
    4. 'the' → logprob: -6.904469013214111
    5. 'edges' → logprob: -8.02946949005127
    6. 'no' → logprob: -8.27946949005127
    7. 'every' → logprob: -8.40446949005127
    8. 'city' → logprob: -8.52946949005127
    9. 'current' → logprob: -9.40446949005127
    10. ' the' → logprob: -9.77946949005127

Token 289: ' time' (ID: 1058)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.77867192029953
    2. 'time' → logprob: -0.90367192029953
    3. 'state' → logprob: -3.028671979904175
    4. 'moment' → logprob: -4.153671741485596
    5. 'step' → logprob: -4.278671741485596
    6. '
' → logprob: -4.528671741485596
    7. ' time' → logprob: -4.903671741485596
    8. 'cost' → logprob: -5.028671741485596
    9. 'city' → logprob: -5.153671741485596
    10. '```' → logprob: -5.278671741485596

Token 290: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.54823899269104
    2. '   ' → logprob: -1.04823899269104
    3. 'dp' → logprob: -3.67323899269104
    4. '
' → logprob: -4.423238754272461
    5. 'import' → logprob: -4.423238754272461
    6. 'distance' → logprob: -4.798238754272461
    7. 'INF' → logprob: -5.298238754272461
    8. 'max' → logprob: -5.548238754272461
    9. 'fuel' → logprob: -6.173238754272461
    10. '    
' → logprob: -7.298238754272461

Token 291: ' including' (ID: 3463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10431698709726334
    2. 'distance' → logprob: -3.4793169498443604
    3. 'def' → logprob: -4.6043171882629395
    4. 'fuel' → logprob: -4.7293171882629395
    5. '    
' → logprob: -4.8543171882629395
    6. 'heap' → logprob: -4.9793171882629395
    7. 'import' → logprob: -4.9793171882629395
    8. '#' → logprob: -5.2293171882629395
    9. 'max' → logprob: -5.9793171882629395
    10. 'dp' → logprob: -5.9793171882629395

Token 292: ' start' (ID: 1604)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6357948780059814
    2. 'arrival' → logprob: -2.5107948780059814
    3. 'departure' → logprob: -2.6357948780059814
    4. 'edges' → logprob: -3.0107948780059814
    5. 'current' → logprob: -3.2607948780059814
    6. 'before' → logprob: -3.3857948780059814
    7. ' the' → logprob: -3.5107948780059814
    8. 'nodes' → logprob: -3.7607948780059814
    9. 'when' → logprob: -3.8857948780059814
    10. 'city' → logprob: -4.010794639587402

Token 293: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03453826159238815
    2. ')' → logprob: -4.034538269042969
    3. ',' → logprob: -5.159538269042969
    4. '.' → logprob: -5.909538269042969
    5. 'distance' → logprob: -6.034538269042969
    6. 'import' → logprob: -6.409538269042969
    7. 'dist' → logprob: -7.284538269042969
    8. ' and' → logprob: -7.784538269042969
    9. '
' → logprob: -8.159538269042969
    10. '    
' → logprob: -8.284538269042969

Token 294: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1045542061328888
    2. 'the' → logprob: -3.3545541763305664
    3. 'destination' → logprob: -3.8545541763305664
    4. ' end' → logprob: -4.479554176330566
    5. 'arrival' → logprob: -4.854554176330566
    6. 'dest' → logprob: -5.229554176330566
    7. 'after' → logprob: -5.604554176330566
    8. ' the' → logprob: -6.104554176330566
    9. 'during' → logprob: -6.354554176330566
    10. ' at' → logprob: -6.354554176330566

Token 295: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.558429479598999
    2. 'dist' → logprob: -1.433429479598999
    3. 'max' → logprob: -2.183429479598999
    4. 'import' → logprob: -3.683429479598999
    5. 'dp' → logprob: -3.933429479598999
    6. '
' → logprob: -4.808429718017578
    7. 'distance' → logprob: -5.183429718017578
    8. 'fuel' → logprob: -5.808429718017578
    9. 'capacity' → logprob: -5.933429718017578
    10. 'MAX' → logprob: -6.183429718017578

Token 296: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1841190606355667
    2. '   ' → logprob: -2.3091189861297607
    3. 'dp' → logprob: -3.9341189861297607
    4. 'max' → logprob: -3.9341189861297607
    5. 'import' → logprob: -4.18411922454834
    6. 'fuel' → logprob: -5.43411922454834
    7. 'INF' → logprob: -6.05911922454834
    8. 'distance' → logprob: -6.18411922454834
    9. '
' → logprob: -6.55911922454834
    10. '    
' → logprob: -6.80911922454834

Token 297: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20148105919361115
    2. 'dp' → logprob: -2.8264811038970947
    3. 'INF' → logprob: -2.8264811038970947
    4. 'max' → logprob: -3.4514811038970947
    5. 'import' → logprob: -3.9514811038970947
    6. 'MAX' → logprob: -5.576480865478516
    7. 'fuel' → logprob: -5.576480865478516
    8. '   ' → logprob: -6.201480865478516
    9. 'from' → logprob: -6.826480865478516
    10. 'distance' → logprob: -7.451480865478516

Token 298: ' Since' (ID: 12265)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.45495322346687317
    2. 'INF' → logprob: -1.9549531936645508
    3. 'max' → logprob: -2.079953193664551
    4. 'import' → logprob: -3.204953193664551
    5. 'dp' → logprob: -3.704953193664551
    6. 'fuel' → logprob: -4.454953193664551
    7. 'MAX' → logprob: -4.954953193664551
    8. 'def' → logprob: -5.454953193664551
    9. 'from' → logprob: -5.704953193664551
    10. '   ' → logprob: -6.454953193664551

Token 299: ' capacity' (ID: 12241)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.15914438664913177
    2. 'fuel' → logprob: -2.659144401550293
    3. ' cap' → logprob: -3.534144401550293
    4. ' fuel' → logprob: -4.284144401550293
    5. 'the' → logprob: -4.659144401550293
    6. ' the' → logprob: -4.784144401550293
    7. 'M' → logprob: -5.284144401550293
    8. 'capacity' → logprob: -5.534144401550293
    9. ' M' → logprob: -6.534144401550293
    10. '(cap' → logprob: -7.284144401550293

Token 300: ' ≤' (ID: 72554)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.689827024936676
    2. '=' → logprob: -2.0648269653320312
    3. ' >' → logprob: -2.3148269653320312
    4. '>' → logprob: -2.5648269653320312
    5. '_' → logprob: -3.1898269653320312
    6. ')' → logprob: -3.4398269653320312
    7. ',' → logprob: -3.4398269653320312
    8. ' ==' → logprob: -3.8148269653320312
    9. ' =' → logprob: -4.064826965332031
    10. '-' → logprob: -4.939826965332031

Token 301: ' ' (ID: 220)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.6462405323982239
    2. '100' → logprob: -0.8962405323982239
    3. '20' → logprob: -3.146240472793579
    4. '10' → logprob: -4.521240711212158
    5. '200' → logprob: -5.521240711212158
    6. '50' → logprob: -5.896240711212158
    7. '0' → logprob: -6.271240711212158
    8. ' ' → logprob: -6.396240711212158
    9. ' cap' → logprob: -6.896240711212158
    10. '500' → logprob: -7.271240711212158

Token 302: '200' (ID: 1179)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06354482471942902
    2. 'cap' → logprob: -3.438544750213623
    3. '10' → logprob: -4.813544750213623
    4. '50' → logprob: -4.938544750213623
    5. '200' → logprob: -5.313544750213623
    6. '20' → logprob: -5.438544750213623
    7. '0' → logprob: -6.563544750213623
    8. '500' → logprob: -6.938544750213623
    9. '250' → logprob: -7.313544750213623
    10. '300' → logprob: -8.188545227050781

Token 303: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3429158627986908
    2. '   ' → logprob: -2.8429157733917236
    3. ',' → logprob: -2.9679157733917236
    4. 'distance' → logprob: -2.9679157733917236
    5. 'dist' → logprob: -3.7179157733917236
    6. ')' → logprob: -4.092916011810303
    7. 'import' → logprob: -4.217916011810303
    8. 'max' → logprob: -4.217916011810303
    9. ',
' → logprob: -4.467916011810303
    10. ':' → logprob: -4.592916011810303

Token 304: ' keep' (ID: 3357)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7357370257377625
    2. ' dist' → logprob: -1.7357370853424072
    3. 'dp' → logprob: -1.9857370853424072
    4. ' dp' → logprob: -3.1107370853424072
    5. 'import' → logprob: -3.4857370853424072
    6. ' max' → logprob: -3.9857370853424072
    7. ' import' → logprob: -3.9857370853424072
    8. 'max' → logprob: -4.110736846923828
    9. 'from' → logprob: -4.360736846923828
    10. 'def' → logprob: -4.360736846923828

Token 305: ' fuel' (ID: 14827)
  Prédit: 'fuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -0.17371715605258942
    2. 'track' → logprob: -3.0487172603607178
    3. ' track' → logprob: -3.1737172603607178
    4. ' fuel' → logprob: -4.048717021942139
    5. 'the' → logprob: -4.298717021942139
    6. 'cap' → logprob: -4.923717021942139
    7. 'a' → logprob: -5.048717021942139
    8. ' a' → logprob: -5.173717021942139
    9. 'capacity' → logprob: -5.423717021942139
    10. ' the' → logprob: -5.548717021942139

Token 306: ' from' (ID: 591)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.10407617688179016
    2. ' as' → logprob: -3.6040761470794678
    3. ' levels' → logprob: -3.8540761470794678
    4. 'as' → logprob: -3.8540761470794678
    5. 'states' → logprob: -5.104076385498047
    6. 'level' → logprob: -5.104076385498047
    7. '_levels' → logprob: -5.354076385498047
    8. 'state' → logprob: -5.604076385498047
    9. '=' → logprob: -5.854076385498047
    10. 'capacity' → logprob: -6.979076385498047

Token 307: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012701898231171072
    2. ' ' → logprob: -9.750126838684082
    3. 'cap' → logprob: -10.250126838684082
    4. '200' → logprob: -10.375126838684082
    5. '   ' → logprob: -14.500126838684082
    6. '```' → logprob: -14.500126838684082
    7. '
' → logprob: -15.000126838684082
    8. 'capacity' → logprob: -15.125126838684082
    9. ' cap' → logprob: -16.3751277923584
    10. '  ' → logprob: -16.5001277923584

Token 308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008604847243987024
    2. 'cap' → logprob: -7.125860691070557
    3. ' ' → logprob: -10.375860214233398
    4. '200' → logprob: -10.750860214233398
    5. 'capacity' → logprob: -13.500860214233398
    6. ' cap' → logprob: -13.750860214233398
    7. '   ' → logprob: -15.875860214233398
    8. '```' → logprob: -16.2508602142334
    9. 'Cap' → logprob: -16.3758602142334
    10. '(cap' → logprob: -16.3758602142334

Token 309: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6474250555038452
    2. 'to' → logprob: -0.8974250555038452
    3. ' ' → logprob: -3.0224251747131348
    4. ',' → logprob: -4.397425174713135
    5. ' up' → logprob: -5.897425174713135
    6. ')' → logprob: -6.272425174713135
    7. '   ' → logprob: -6.772425174713135
    8. '
' → logprob: -7.522425174713135
    9. '  ' → logprob: -8.147424697875977
    10. '<|end|>' → logprob: -8.397424697875977

Token 310: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.0033239840995520353
    2. ' cap' → logprob: -5.753324031829834
    3. '200' → logprob: -8.878323554992676
    4. 'capacity' → logprob: -13.003323554992676
    5. ' ' → logprob: -13.378323554992676
    6. '(cap' → logprob: -13.503323554992676
    7. '
' → logprob: -14.628323554992676
    8. '   ' → logprob: -15.378323554992676
    9. '201' → logprob: -15.878323554992676
    10. '20' → logprob: -16.128324508666992

Token 311: ' inclusive' (ID: 29482)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9813631176948547
    2. '   ' → logprob: -1.35636305809021
    3. '
' → logprob: -1.60636305809021
    4. 'dp' → logprob: -2.48136305809021
    5. 'distance' → logprob: -2.85636305809021
    6. 'import' → logprob: -4.481363296508789
    7. 'fuel' → logprob: -5.606363296508789
    8. 'max' → logprob: -5.856363296508789
    9. '    
' → logprob: -6.481363296508789
    10. ')' → logprob: -7.231363296508789

Token 312: '.
' (ID: 558)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11076371371746063
    2. 'dp' → logprob: -2.6107637882232666
    3. '   ' → logprob: -3.7357637882232666
    4. 'distance' → logprob: -5.4857635498046875
    5. 'max' → logprob: -6.9857635498046875
    6. '
' → logprob: -7.1107635498046875
    7. 'INF' → logprob: -8.110763549804688
    8. 'import' → logprob: -8.110763549804688
    9. 'fuel' → logprob: -8.110763549804688
    10. 'queue' → logprob: -8.610763549804688

Token 313: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03342241048812866
    2. '   ' → logprob: -3.9084224700927734
    3. 'dp' → logprob: -4.658422470092773
    4. 'import' → logprob: -6.283422470092773
    5. 'distance' → logprob: -7.408422470092773
    6. 'max' → logprob: -8.908422470092773
    7. 'INF' → logprob: -9.033422470092773
    8. 'from' → logprob: -9.283422470092773
    9. '
' → logprob: -9.283422470092773
    10. ' dist' → logprob: -9.533422470092773

Token 314: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.027835683897137642
    2. '   ' → logprob: -4.277835845947266
    3. 'dp' → logprob: -4.527835845947266
    4. 'distance' → logprob: -6.777835845947266
    5. '
' → logprob: -7.777835845947266
    6. 'max' → logprob: -8.277835845947266
    7. ' dist' → logprob: -8.652835845947266
    8. 'import' → logprob: -8.652835845947266
    9. '    
' → logprob: -9.027835845947266
    10. 'fuel' → logprob: -9.027835845947266

Token 315: ' Init' (ID: 30869)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.016913579776883125
    2. 'import' → logprob: -5.266913414001465
    3. 'dp' → logprob: -5.391913414001465
    4. 'INF' → logprob: -5.641913414001465
    5. 'def' → logprob: -6.516913414001465
    6. 'from' → logprob: -6.891913414001465
    7. 'distance' → logprob: -8.016913414001465
    8. 'fuel' → logprob: -8.766913414001465
    9. 'max' → logprob: -8.891913414001465
    10. '
' → logprob: -9.141913414001465

Token 316: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0028412528336048126
    2. ' dist' → logprob: -6.252841472625732
    3. 'import' → logprob: -8.127840995788574
    4. '   ' → logprob: -8.377840995788574
    5. 'dp' → logprob: -8.752840995788574
    6. 'distance' → logprob: -9.377840995788574
    7. '
' → logprob: -9.502840995788574
    8. ' distances' → logprob: -10.877840995788574
    9. 'd' → logprob: -11.377840995788574
    10. 'from' → logprob: -11.627840995788574

Token 317: ' array' (ID: 2644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009856664575636387
    2. '=' → logprob: -4.759856700897217
    3. '   ' → logprob: -7.259856700897217
    4. 'ance' → logprob: -7.884856700897217
    5. '[' → logprob: -9.884856224060059
    6. '=[' → logprob: -10.384856224060059
    7. ' ' → logprob: -10.759856224060059
    8. ',' → logprob: -11.259856224060059
    9. '=[[' → logprob: -11.384856224060059
    10. 'ances' → logprob: -11.759856224060059

Token 318: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5012378096580505
    2. ' =' → logprob: -1.2512378692626953
    3. '   ' → logprob: -2.3762378692626953
    4. ' dist' → logprob: -4.626237869262695
    5. '=' → logprob: -5.751237869262695
    6. '
' → logprob: -7.251237869262695
    7. 'distance' → logprob: -7.751237869262695
    8. '_dist' → logprob: -8.126237869262695
    9. ' =
' → logprob: -8.376237869262695
    10. '(dist' → logprob: -9.251237869262695

Token 319: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.049022872000932693
    2. '   ' → logprob: -3.299022912979126
    3. ' =' → logprob: -5.174022674560547
    4. ' dist' → logprob: -5.424022674560547
    5. '=' → logprob: -8.299022674560547
    6. ':' → logprob: -8.549022674560547
    7. '
' → logprob: -8.549022674560547
    8. 'distance' → logprob: -10.049022674560547
    9. '(dist' → logprob: -10.424022674560547
    10. 'import' → logprob: -10.674022674560547

Token 320: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.013523232191801071
    2. '   ' → logprob: -4.888523101806641
    3. ' dist' → logprob: -5.138523101806641
    4. 'import' → logprob: -11.38852310180664
    5. 'INF' → logprob: -11.63852310180664
    6. 'distance' → logprob: -12.26352310180664
    7. '
' → logprob: -12.88852310180664
    8. '	dist' → logprob: -13.51352310180664
    9. '    
' → logprob: -13.63852310180664
    10. 'dp' → logprob: -14.13852310180664

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143301784992218
    2. ' =' → logprob: -1.7014330625534058
    3. '=[' → logprob: -11.201433181762695
    4. '[' → logprob: -12.951433181762695
    5. '=[[' → logprob: -12.951433181762695
    6. ' =[' → logprob: -14.326433181762695
    7. ',' → logprob: -15.451433181762695
    8. ' ' → logprob: -15.951433181762695
    9. ']' → logprob: -16.076433181762695
    10. '=[]' → logprob: -16.201433181762695

Token 322: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.011782300658524036
    2. '[' → logprob: -4.761782169342041
    3. ' [[' → logprob: -5.761782169342041
    4. ' [' → logprob: -11.6367826461792
    5. '[-' → logprob: -12.1367826461792
    6. '[{' → logprob: -13.3867826461792
    7. '   ' → logprob: -14.7617826461792
    8. '[['' → logprob: -14.8867826461792
    9. '[(' → logprob: -15.2617826461792
    10. '{' → logprob: -16.011781692504883

Token 323: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005919939721934497
    2. '[-' → logprob: -8.125592231750488
    3. '[int' → logprob: -8.625592231750488
    4. ' [' → logprob: -9.625592231750488
    5. '[c' → logprob: -10.375592231750488
    6. '[min' → logprob: -12.250592231750488
    7. '{' → logprob: -12.500592231750488
    8. '[len' → logprob: -13.250592231750488
    9. '[(' → logprob: -13.500592231750488
    10. 'float' → logprob: -13.875592231750488

Token 324: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0019856137223541737
    2. '10' → logprob: -6.251985549926758
    3. 'sys' → logprob: -10.876985549926758
    4. '-' → logprob: -11.376985549926758
    5. 'int' → logprob: -11.501985549926758
    6. '100' → logprob: -12.501985549926758
    7. ' float' → logprob: -12.501985549926758
    8. '1' → logprob: -12.751985549926758
    9. '(float' → logprob: -12.751985549926758
    10. 'False' → logprob: -13.626985549926758

Token 325: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10238558053970337
    2. ''in' → logprob: -2.3523855209350586
    3. ''' → logprob: -6.352385520935059
    4. ''inc' → logprob: -9.352385520935059
    5. ''ins' → logprob: -9.727385520935059
    6. ''s' → logprob: -9.852385520935059
    7. ''op' → logprob: -10.727385520935059
    8. '   ' → logprob: -10.852385520935059
    9. '("' → logprob: -10.852385520935059
    10. ''ex' → logprob: -10.977385520935059

Token 326: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -2.696889623621246e-06
    2. ''' → logprob: -13.25000286102295
    3. ''in' → logprob: -14.37500286102295
    4. 'in' → logprob: -15.12500286102295
    5. 'info' → logprob: -17.500001907348633
    6. 'Inf' → logprob: -18.500001907348633
    7. 'INF' → logprob: -18.625001907348633
    8. 'i' → logprob: -19.500001907348633
    9. ' inf' → logprob: -19.500001907348633
    10. ''s' → logprob: -19.625001907348633

Token 327: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3574482202529907
    2. '')]' → logprob: -1.2324482202529907
    3. ')' → logprob: -4.982448101043701
    4. ']' → logprob: -6.857448101043701
    5. '')' → logprob: -6.982448101043701
    6. '']' → logprob: -10.10744857788086
    7. '")]' → logprob: -10.85744857788086
    8. ''' → logprob: -11.23244857788086
    9. '   ' → logprob: -11.35744857788086
    10. ' )' → logprob: -11.48244857788086

Token 328: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24658295512199402
    2. ']*(' → logprob: -1.9965829849243164
    3. ' for' → logprob: -3.1215829849243164
    4. 'for' → logprob: -3.4965829849243164
    5. ']*' → logprob: -4.996582984924316
    6. '(cap' → logprob: -7.371582984924316
    7. '   ' → logprob: -8.121582984924316
    8. ')' → logprob: -8.246582984924316
    9. '*(' → logprob: -8.746582984924316
    10. ',' → logprob: -9.871582984924316

Token 329: ' (' (ID: 350)
  Prédit: '(cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cap' → logprob: -0.0005968777113594115
    2. '(c' → logprob: -7.62559700012207
    3. ' (' → logprob: -9.25059700012207
    4. '(max' → logprob: -12.50059700012207
    5. '(' → logprob: -12.87559700012207
    6. '   ' → logprob: -13.25059700012207
    7. '(cp' → logprob: -14.37559700012207
    8. '(cnt' → logprob: -14.50059700012207
    9. '(cam' → logprob: -14.50059700012207
    10. '(cat' → logprob: -14.62559700012207

Token 330: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.16034436225891113
    2. '(cap' → logprob: -1.9103443622589111
    3. ' cap' → logprob: -9.410344123840332
    4. ' (' → logprob: -11.035344123840332
    5. '(c' → logprob: -11.535344123840332
    6. '   ' → logprob: -12.035344123840332
    7. '(' → logprob: -12.410344123840332
    8. '
' → logprob: -14.660344123840332
    9. 'caps' → logprob: -14.660344123840332
    10. 'capacity' → logprob: -15.285344123840332

Token 331: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02975662797689438
    2. ' +' → logprob: -3.529756546020508
    3. '+
' → logprob: -12.404756546020508
    4. ' ' → logprob: -14.154756546020508
    5. '   ' → logprob: -14.404756546020508
    6. ' +
' → logprob: -15.529756546020508
    7. ')' → logprob: -15.529756546020508
    8. '
' → logprob: -15.654756546020508
    9. '+)' → logprob: -16.654756546020508
    10. '＋' → logprob: -16.779756546020508

Token 332: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '
' → logprob: -16.500001907348633
    5. '2' → logprob: -18.375001907348633
    6. ')' → logprob: -19.375001907348633
    7. '  ' → logprob: -19.750001907348633
    8. '```' → logprob: -19.812501907348633
    9. '

' → logprob: -19.937501907348633
    10. '    ' → logprob: -21.125001907348633

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. '
' → logprob: -15.250011444091797
    4. '   ' → logprob: -15.375011444091797
    5. '2' → logprob: -15.500011444091797
    6. '

' → logprob: -17.625011444091797
    7. '0' → logprob: -17.750011444091797
    8. '  ' → logprob: -17.875011444091797
    9. '{' → logprob: -18.000011444091797
    10. ')' → logprob: -18.062511444091797

Token 334: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007243475876748562
    2. ']' → logprob: -5.132243633270264
    3. ' )' → logprob: -7.382243633270264
    4. ' for' → logprob: -8.007243156433105
    5. ' ]' → logprob: -8.757243156433105
    6. ')]' → logprob: -8.882243156433105
    7. '   ' → logprob: -10.132243156433105
    8. 'for' → logprob: -11.382243156433105
    9. ' ' → logprob: -12.757243156433105
    10. ')
' → logprob: -12.882243156433105

Token 335: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02634628303349018
    2. 'for' → logprob: -3.651346206665039
    3. '   ' → logprob: -10.526346206665039
    4. '	for' → logprob: -11.776346206665039
    5. ']' → logprob: -12.401346206665039
    6. ' ' → logprob: -12.401346206665039
    7. '
' → logprob: -13.526346206665039
    8. ' ]' → logprob: -13.776346206665039
    9. '    ' → logprob: -15.026346206665039
    10. '  ' → logprob: -15.401346206665039

Token 336: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006724722217768431
    2. ' _' → logprob: -5.006724834442139
    3. '_range' → logprob: -12.25672435760498
    4. ' ' → logprob: -13.13172435760498
    5. ' range' → logprob: -13.88172435760498
    6. '_
' → logprob: -14.88172435760498
    7. '_in' → logprob: -15.63172435760498
    8. 'range' → logprob: -15.75672435760498
    9. '_i' → logprob: -15.75672435760498
    10. '_city' → logprob: -15.88172435760498

Token 337: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47433602809906006
    2. ' in' → logprob: -0.9743360280990601
    3. 'range' → logprob: -8.974335670471191
    4. ' ' → logprob: -9.724335670471191
    5. '_in' → logprob: -10.849335670471191
    6. '_' → logprob: -10.849335670471191
    7. 'i' → logprob: -11.099335670471191
    8. ' range' → logprob: -12.349335670471191
    9. ' _' → logprob: -12.599335670471191
    10. '	in' → logprob: -12.849335670471191

Token 338: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0076233032159507275
    2. ' range' → logprob: -4.882623195648193
    3. '_' → logprob: -11.507623672485352
    4. '_range' → logprob: -13.132623672485352
    5. '(range' → logprob: -13.257623672485352
    6. '	range' → logprob: -13.882623672485352
    7. '
' → logprob: -14.882623672485352
    8. 'in' → logprob: -14.882623672485352
    9. 'rang' → logprob: -15.007623672485352
    10. 'edges' → logprob: -15.132623672485352

Token 339: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3058236837387085
    2. '(' → logprob: -1.9308236837387085
    3. 'range' → logprob: -2.930823802947998
    4. '(range' → logprob: -3.805823802947998
    5. 'len' → logprob: -4.180823802947998
    6. '(N' → logprob: -4.555823802947998
    7. '(id' → logprob: -5.305823802947998
    8. '(city' → logprob: -5.930823802947998
    9. '2' → logprob: -6.055823802947998
    10. ' (' → logprob: -6.430823802947998

Token 340: '(city' (ID: 84604)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.6373792290687561
    2. '(city' → logprob: -0.7623792290687561
    3. 'edges' → logprob: -5.637379169464111
    4. 'city' → logprob: -7.012379169464111
    5. '(edge' → logprob: -9.13737964630127
    6. '(dist' → logprob: -9.51237964630127
    7. '(' → logprob: -10.13737964630127
    8. ' edges' → logprob: -11.13737964630127
    9. ')' → logprob: -11.38737964630127
    10. '(
' → logprob: -12.01237964630127

Token 341: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00040779312257654965
    2. 's' → logprob: -8.250408172607422
    3. 'edges' → logprob: -9.500408172607422
    4. 'id' → logprob: -10.125408172607422
    5. ')' → logprob: -11.875408172607422
    6. '_edges' → logprob: -12.125408172607422
    7. '])' → logprob: -12.250408172607422
    8. ' edges' → logprob: -13.375408172607422
    9. 'es' → logprob: -13.500408172607422
    10. ')]' → logprob: -13.500408172607422

Token 342: '))' (ID: 915)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001409878022968769
    2. ')' → logprob: -6.751410007476807
    3. '))' → logprob: -8.751409530639648
    4. ')])' → logprob: -9.626409530639648
    5. '])]' → logprob: -12.626409530639648
    6. '])' → logprob: -12.751409530639648
    7. ' )' → logprob: -13.001409530639648
    8. ')]
' → logprob: -13.126409530639648
    9. ')}' → logprob: -13.501409530639648
    10. ']' → logprob: -13.501409530639648

Token 343: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0054062847048044205
    2. ' ]' → logprob: -5.255406379699707
    3. '   ' → logprob: -8.755406379699707
    4. ')' → logprob: -12.255406379699707
    5. ')]' → logprob: -12.380406379699707
    6. ']
' → logprob: -12.630406379699707
    7. '
' → logprob: -13.880406379699707
    8. ' ' → logprob: -14.255406379699707
    9. ']

' → logprob: -15.630406379699707
    10. '`]' → logprob: -15.880406379699707

Token 344: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0038704967591911554
    2. '
' → logprob: -6.128870487213135
    3. '   ' → logprob: -7.003870487213135
    4. ' dist' → logprob: -7.378870487213135
    5. '	dist' → logprob: -10.253870964050293
    6. '    
' → logprob: -10.378870964050293
    7. ')' → logprob: -10.628870964050293
    8. '<|end|>' → logprob: -10.878870964050293
    9. '  
' → logprob: -11.503870964050293
    10. ' 
' → logprob: -11.503870964050293

Token 345: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0008014073828235269
    2. ' dist' → logprob: -7.7508015632629395
    3. '   ' → logprob: -8.000801086425781
    4. 'for' → logprob: -10.500801086425781
    5. '
' → logprob: -12.875801086425781
    6. '    
' → logprob: -13.500801086425781
    7. '	dist' → logprob: -13.750801086425781
    8. ' for' → logprob: -14.125801086425781
    9. 'import' → logprob: -14.125801086425781
    10. '_dist' → logprob: -14.875801086425781

Token 346: ' Start' (ID: 7972)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02010851539671421
    2. 'import' → logprob: -4.020108699798584
    3. 'for' → logprob: -7.020108699798584
    4. 'heap' → logprob: -7.145108699798584
    5. 'from' → logprob: -8.770108222961426
    6. 'pq' → logprob: -10.270108222961426
    7. 'hq' → logprob: -10.395108222961426
    8. '   ' → logprob: -10.520108222961426
    9. 'queue' → logprob: -11.895108222961426
    10. ' dist' → logprob: -12.145108222961426

Token 347: ' with' (ID: 483)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1915312260389328
    2. '[start' → logprob: -2.191531181335449
    3. '[' → logprob: -3.191531181335449
    4. '_dist' → logprob: -4.066531181335449
    5. ' dist' → logprob: -5.816531181335449
    6. '   ' → logprob: -7.566531181335449
    7. '[end' → logprob: -8.19153118133545
    8. '[state' → logprob: -9.44153118133545
    9. ' [' → logprob: -9.69153118133545
    10. '[(' → logprob: -9.81653118133545

Token 348: ' full' (ID: 3149)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04282766208052635
    2. 'cap' → logprob: -3.542827606201172
    3. ' dist' → logprob: -5.917827606201172
    4. '(cap' → logprob: -5.917827606201172
    5. 'start' → logprob: -6.042827606201172
    6. 'full' → logprob: -6.292827606201172
    7. '0' → logprob: -6.667827606201172
    8. '[(' → logprob: -7.542827606201172
    9. '   ' → logprob: -7.917827606201172
    10. '(' → logprob: -8.417827606201172

Token 349: ' tank' (ID: 16109)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.513636827468872
    2. '_cap' → logprob: -1.513636827468872
    3. 'cap' → logprob: -1.763636827468872
    4. '_dist' → logprob: -1.888636827468872
    5. 'tank' → logprob: -2.388636827468872
    6. 'fuel' → logprob: -3.263636827468872
    7. ')' → logprob: -3.888636827468872
    8. ']' → logprob: -4.388636589050293
    9. '_t' → logprob: -4.513636589050293
    10. ' ' → logprob: -4.888636589050293

Token 350: ' at' (ID: 540)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005484540946781635
    2. '   ' → logprob: -5.380484580993652
    3. '[' → logprob: -7.755484580993652
    4. '[start' → logprob: -8.255484580993652
    5. ' dist' → logprob: -9.005484580993652
    6. '
' → logprob: -11.130484580993652
    7. '    
' → logprob: -11.380484580993652
    8. '_dist' → logprob: -11.380484580993652
    9. '[
' → logprob: -12.755484580993652
    10. '][' → logprob: -13.255484580993652

Token 351: ' src' (ID: 4537)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00600629486143589
    2. ' start' → logprob: -5.131006240844727
    3. '[start' → logprob: -9.881006240844727
    4. '
' → logprob: -11.631006240844727
    5. 'the' → logprob: -11.881006240844727
    6. '[' → logprob: -13.256006240844727
    7. '   ' → logprob: -13.631006240844727
    8. 'dist' → logprob: -13.881006240844727
    9. 'state' → logprob: -13.881006240844727
    10. ' the' → logprob: -14.131006240844727

Token 352: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006294445134699345
    2. '   ' → logprob: -5.131294250488281
    3. ' dist' → logprob: -8.381294250488281
    4. '
' → logprob: -9.631294250488281
    5. '[start' → logprob: -10.381294250488281
    6. '    
' → logprob: -11.256294250488281
    7. '[' → logprob: -11.881294250488281
    8. '_dist' → logprob: -12.256294250488281
    9. '	dist' → logprob: -12.881294250488281
    10. 'start' → logprob: -13.006294250488281

Token 353: 'tank' (ID: 187649)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.02614550106227398
    2. 'start' → logprob: -4.7761454582214355
    3. ')' → logprob: -5.0261454582214355
    4. ' cap' → logprob: -6.1511454582214355
    5. '   ' → logprob: -6.4011454582214355
    6. '0' → logprob: -6.4011454582214355
    7. 'dist' → logprob: -6.5261454582214355
    8. ',' → logprob: -7.1511454582214355
    9. ')
' → logprob: -7.4011454582214355
    10. '),' → logprob: -7.7761454582214355

Token 354: ' always' (ID: 3324)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41547295451164246
    2. ')' → logprob: -2.165472984313965
    3. 'cap' → logprob: -2.290472984313965
    4. '[' → logprob: -3.665472984313965
    5. 'capacity' → logprob: -3.665472984313965
    6. ' =' → logprob: -3.790472984313965
    7. '][' → logprob: -4.415472984313965
    8. ' capacity' → logprob: -5.165472984313965
    9. ')
' → logprob: -5.540472984313965
    10. '])' → logprob: -5.790472984313965

Token 355: ' full' (ID: 3149)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -1.23554527759552
    2. '=' → logprob: -1.36054527759552
    3. 'full' → logprob: -1.86054527759552
    4. 'capacity' → logprob: -2.1105451583862305
    5. ')' → logprob: -3.2355451583862305
    6. ' full' → logprob: -3.6105451583862305
    7. ' at' → logprob: -4.1105451583862305
    8. '[' → logprob: -4.2355451583862305
    9. 'at' → logprob: -4.3605451583862305
    10. ' capacity' → logprob: -4.6105451583862305

Token 356: ' at' (ID: 540)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002340565901249647
    2. ' )' → logprob: -7.002340793609619
    3. ')
' → logprob: -7.127340793609619
    4. '   ' → logprob: -8.627340316772461
    5. '),' → logprob: -9.752340316772461
    6. ']' → logprob: -9.752340316772461
    7. ',' → logprob: -10.002340316772461
    8. '):' → logprob: -10.377340316772461
    9. '):
' → logprob: -10.502340316772461
    10. ').' → logprob: -10.502340316772461

Token 357: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.19802530109882355
    2. 'src' → logprob: -2.5730252265930176
    3. 'cap' → logprob: -3.1980252265930176
    4. 'capacity' → logprob: -3.3230252265930176
    5. ' start' → logprob: -5.073025226593018
    6. 'full' → logprob: -5.573025226593018
    7. 'source' → logprob: -5.698025226593018
    8. 'the' → logprob: -5.698025226593018
    9. '0' → logprob: -6.198025226593018
    10. ')' → logprob: -6.323025226593018

Token 358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001556759118102491
    2. ',' → logprob: -7.501556873321533
    3. ')
' → logprob: -7.501556873321533
    4. ' )' → logprob: -9.126556396484375
    5. '   ' → logprob: -9.501556396484375
    6. ').' → logprob: -9.876556396484375
    7. '),' → logprob: -9.876556396484375
    8. '):' → logprob: -10.251556396484375
    9. '[' → logprob: -10.501556396484375
    10. '+' → logprob: -10.626556396484375

Token 359: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07972230017185211
    2. '   ' → logprob: -2.5797224044799805
    3. ' dist' → logprob: -7.3297224044799805
    4. 'heap' → logprob: -9.57972240447998
    5. '    
' → logprob: -10.20472240447998
    6. '
' → logprob: -10.32972240447998
    7. '	dist' → logprob: -10.95472240447998
    8. '_dist' → logprob: -12.57972240447998
    9. ',' → logprob: -12.95472240447998
    10. '.dist' → logprob: -13.07972240447998

Token 360: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -8.85235276655294e-05
    2. 'heap' → logprob: -10.125088691711426
    3. '   ' → logprob: -10.375088691711426
    4. ' dist' → logprob: -11.250088691711426
    5. 'import' → logprob: -13.500088691711426
    6. 'for' → logprob: -13.875088691711426
    7. '
' → logprob: -14.000088691711426
    8. 'pq' → logprob: -15.000088691711426
    9. 'queue' → logprob: -15.125088691711426
    10. '```' → logprob: -16.12508773803711

Token 361: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00014859484508633614
    2. '[' → logprob: -8.87514877319336
    3. 'start' → logprob: -12.87514877319336
    4. '[src' → logprob: -12.87514877319336
    5. '[source' → logprob: -14.00014877319336
    6. ' [' → logprob: -14.50014877319336
    7. '[state' → logprob: -14.75014877319336
    8. '[end' → logprob: -15.12514877319336
    9. '   ' → logprob: -15.37514877319336
    10. '][' → logprob: -15.37514877319336

Token 362: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00019018957391381264
    2. ']' → logprob: -9.250189781188965
    3. ' ][' → logprob: -9.375189781188965
    4. '[' → logprob: -11.875189781188965
    5. '(cap' → logprob: -15.125189781188965
    6. 'cap' → logprob: -15.125189781188965
    7. ',' → logprob: -15.125189781188965
    8. '   ' → logprob: -15.375189781188965
    9. ']
' → logprob: -15.625189781188965
    10. ')][' → logprob: -15.750189781188965

Token 363: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.375000953674316
    3. ' cap' → logprob: -15.500000953674316
    4. 'capacity' → logprob: -16.875
    5. 'capac' → logprob: -17.375
    6. '(cap' → logprob: -17.625
    7. 'caps' → logprob: -18.0
    8. '0' → logprob: -18.125
    9. 'kap' → logprob: -18.75
    10. 'cat' → logprob: -19.0

Token 364: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003434488025959581
    2. ' ]' → logprob: -8.125343322753906
    3. ']=' → logprob: -10.000343322753906
    4. '=' → logprob: -13.250343322753906
    5. ' =' → logprob: -15.750343322753906
    6. ')' → logprob: -17.250343322753906
    7. '`]' → logprob: -18.000343322753906
    8. ']
' → logprob: -18.125343322753906
    9. '']' → logprob: -18.625343322753906
    10. '   ' → logprob: -18.875343322753906

Token 365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858839511871338
    2. ' =' → logprob: -3.048588275909424
    3. ',' → logprob: -14.048588752746582
    4. ']=' → logprob: -16.548587799072266
    5. ')=' → logprob: -16.923587799072266
    6. '=
' → logprob: -17.423587799072266
    7. '=

' → logprob: -17.548587799072266
    8. '   ' → logprob: -17.798587799072266
    9. ')' → logprob: -17.923587799072266
    10. ' ' → logprob: -18.048587799072266

Token 366: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '1' → logprob: -16.125001907348633
    4. 'cap' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.062501907348633
    6. '(' → logprob: -18.125001907348633
    7. '۰' → logprob: -18.250001907348633
    8. 'd' → logprob: -18.375001907348633
    9. '```' → logprob: -18.500001907348633
    10. '-' → logprob: -18.750001907348633

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -15.250000953674316
    4. 'cap' → logprob: -16.312501907348633
    5. '(' → logprob: -17.687501907348633
    6. '200' → logprob: -17.687501907348633
    7. '   ' → logprob: -17.875001907348633
    8. 'd' → logprob: -17.937501907348633
    9. '۰' → logprob: -18.062501907348633
    10. '```' → logprob: -18.312501907348633

Token 368: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4392610490322113
    2. 'pq' → logprob: -1.6892610788345337
    3. 'heap' → logprob: -1.8142610788345337
    4. 'queue' → logprob: -5.939260959625244
    5. 'import' → logprob: -5.939260959625244
    6. 'hq' → logprob: -6.189260959625244
    7. 'priority' → logprob: -8.814261436462402
    8. ' heap' → logprob: -9.314261436462402
    9. 'q' → logprob: -9.314261436462402
    10. '
' → logprob: -9.814261436462402

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14836859703063965
    2. 'pq' → logprob: -2.6483685970306396
    3. 'heap' → logprob: -2.8983685970306396
    4. '
' → logprob: -4.648368835449219
    5. 'queue' → logprob: -6.523368835449219
    6. 'import' → logprob: -8.273368835449219
    7. 'hq' → logprob: -8.398368835449219
    8. '    
' → logprob: -8.523368835449219
    9. 'q' → logprob: -9.148368835449219
    10. ' heap' → logprob: -9.523368835449219

Token 370: ' h' (ID: 312)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.29095223546028137
    2. 'pq' → logprob: -1.540952205657959
    3. 'hq' → logprob: -3.540952205657959
    4. 'queue' → logprob: -4.790952205657959
    5. 'import' → logprob: -7.290952205657959
    6. 'h' (adapté à ' h') → logprob: -8.790952682495117
    7. 'q' → logprob: -9.040952682495117
    8. '   ' → logprob: -11.415952682495117
    9. 'que' → logprob: -11.665952682495117
    10. ' heap' → logprob: -12.040952682495117

Token 371: 'q' (ID: 80)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4846882224082947
    2. 'q' → logprob: -1.3596882820129395
    3. 'e' → logprob: -2.2346882820129395
    4. '=' → logprob: -4.3596882820129395
    5. 'p' → logprob: -5.2346882820129395
    6. ' ' → logprob: -6.9846882820129395
    7. '=[]' → logprob: -7.8596882820129395
    8. ',' → logprob: -7.9846882820129395
    9. 'heap' → logprob: -8.484687805175781
    10. '   ' → logprob: -9.859687805175781

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.050457365810871124
    2. '=' → logprob: -3.05045747756958
    3. '=[]' → logprob: -6.30045747756958
    4. '=[' → logprob: -12.050457000732422
    5. '.' → logprob: -12.175457000732422
    6. ',' → logprob: -12.675457000732422
    7. ' ' → logprob: -12.925457000732422
    8. ')' → logprob: -13.050457000732422
    9. '=[]
' → logprob: -13.050457000732422
    10. '.push' → logprob: -13.050457000732422

Token 373: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.723352049040841e-06
    2. '[]' → logprob: -13.000004768371582
    3. ' [(' → logprob: -13.000004768371582
    4. '[' → logprob: -16.000003814697266
    5. '[((' → logprob: -18.000003814697266
    6. '[]
' → logprob: -18.250003814697266
    7. '([(' → logprob: -21.375003814697266
    8. '[]

' → logprob: -22.250003814697266
    9. 'heap' → logprob: -22.625003814697266
    10. ' []' → logprob: -24.250003814697266

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. 'dist' → logprob: -12.37501049041748
    3. '(' → logprob: -12.50001049041748
    4. ' ' → logprob: -13.50001049041748
    5. '   ' → logprob: -14.25001049041748
    6. '(dist' → logprob: -14.87501049041748
    7. 'start' → logprob: -15.37501049041748
    8. '(start' → logprob: -16.625011444091797
    9. ')' → logprob: -16.750011444091797
    10. '(cap' → logprob: -17.250011444091797

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2762428822461516e-05
    2. ',start' → logprob: -10.375052452087402
    3. ' ,' → logprob: -10.875052452087402
    4. ')' → logprob: -14.250052452087402
    5. ',)' → logprob: -14.625052452087402
    6. ',
' → logprob: -15.000052452087402
    7. ',int' → logprob: -15.875052452087402
    8. ',end' → logprob: -15.875052452087402
    9. ')]' → logprob: -16.37505340576172
    10. ',,' → logprob: -16.37505340576172

Token 376: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0004889304982498288
    2. ' start' → logprob: -7.625488758087158
    3. '0' → logprob: -15.000489234924316
    4. '(start' → logprob: -15.250489234924316
    5. ')' → logprob: -16.00048828125
    6. '[start' → logprob: -16.50048828125
    7. 'star' → logprob: -17.00048828125
    8. ' ' → logprob: -17.12548828125
    9. '=start' → logprob: -18.00048828125
    10. ',start' → logprob: -18.12548828125

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.2729995988775045e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ',
' → logprob: -15.000006675720215
    4. ')' → logprob: -15.250006675720215
    5. ')]' → logprob: -16.7500057220459
    6. ',int' → logprob: -17.2500057220459
    7. ',c' → logprob: -17.7500057220459
    8. '<|end|>' → logprob: -17.7500057220459
    9. ',

' → logprob: -17.8750057220459
    10. '‌,' → logprob: -18.0000057220459

Token 378: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -1.1637164789135568e-05
    2. ' cap' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.375011444091797
    4. '(cap' → logprob: -17.625011444091797
    5. ' ' → logprob: -18.250011444091797
    6. 'capac' → logprob: -18.875011444091797
    7. '-cap' → logprob: -19.375011444091797
    8. '
' → logprob: -19.500011444091797
    9. 'capacity' → logprob: -19.750011444091797
    10. '200' → logprob: -20.000011444091797

Token 379: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.016058770939707756
    2. ')' → logprob: -4.141058921813965
    3. ')]
' → logprob: -12.016058921813965
    4. ' )' → logprob: -12.391058921813965
    5. '),' → logprob: -12.391058921813965
    6. ']' → logprob: -12.891058921813965
    7. ')
' → logprob: -13.141058921813965
    8. '))' → logprob: -13.641058921813965
    9. ')][' → logprob: -13.891058921813965
    10. ')])' → logprob: -14.016058921813965

Token 380: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09420207142829895
    2. '   ' → logprob: -2.9692020416259766
    3. 'while' → logprob: -3.3442020416259766
    4. ' while' → logprob: -6.344202041625977
    5. ',' → logprob: -7.719202041625977
    6. ' )' → logprob: -8.219202041625977
    7. ']' → logprob: -8.594202041625977
    8. ' ' → logprob: -8.594202041625977
    9. ')
' → logprob: -9.844202041625977
    10. '  
' → logprob: -9.844202041625977

Token 381: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01132449321448803
    2. ')' → logprob: -4.511324405670166
    3. ' while' → logprob: -8.886324882507324
    4. '   ' → logprob: -9.136324882507324
    5. 'heap' → logprob: -10.886324882507324
    6. 'While' → logprob: -12.761324882507324
    7. '```' → logprob: -13.136324882507324
    8. 'import' → logprob: -13.636324882507324
    9. '0' → logprob: -13.886324882507324
    10. ']' → logprob: -14.261324882507324

Token 382: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.006075856741517782
    2. 'h' → logprob: -5.256075859069824
    3. 'hq' → logprob: -7.256075859069824
    4. '	h' → logprob: -10.006075859069824
    5. '(h' → logprob: -10.256075859069824
    6. '   ' → logprob: -10.631075859069824
    7. ' ' → logprob: -11.131075859069824
    8. '  ' → logprob: -12.631075859069824
    9. '    ' → logprob: -12.631075859069824
    10. '```' → logprob: -13.131075859069824

Token 383: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00018732868193183094
    2. 'Q' → logprob: -9.375186920166016
    3. '[' → logprob: -9.375186920166016
    4. 'e' → logprob: -12.375186920166016
    5. '(' → logprob: -13.125186920166016
    6. 'c' → logprob: -13.375186920166016
    7. 'cq' → logprob: -14.250186920166016
    8. 'p' → logprob: -14.500186920166016
    9. '[
' → logprob: -14.750186920166016
    10. '(q' → logprob: -14.750186920166016

Token 384: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19304092228412628
    2. ':
' → logprob: -1.8180409669876099
    3. '[' → logprob: -5.31804084777832
    4. '):
' → logprob: -5.69304084777832
    5. '):' → logprob: -6.56804084777832
    6. ',' → logprob: -6.69304084777832
    7. 'and' → logprob: -7.19304084777832
    8. '.pop' → logprob: -7.94304084777832
    9. ' and' → logprob: -8.31804084777832
    10. '>:' → logprob: -8.69304084777832

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07293879985809326
    2. ',' → logprob: -3.447938919067383
    3. '   ' → logprob: -3.447938919067383
    4. '0' → logprob: -5.697938919067383
    5. '    ' → logprob: -6.822938919067383
    6. ' ,' → logprob: -6.947938919067383
    7. '     ' → logprob: -7.822938919067383
    8. '```' → logprob: -8.572938919067383
    9. '        
' → logprob: -8.822938919067383
    10. '	' → logprob: -9.697938919067383

Token 386: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.17036810517311096
    2. 'd' → logprob: -2.545368194580078
    3. 'dist' → logprob: -3.420368194580078
    4. 'time' → logprob: -3.795368194580078
    5. 'cur' → logprob: -4.170368194580078
    6. 'c' → logprob: -6.170368194580078
    7. 't' → logprob: -6.420368194580078
    8. 'curr' → logprob: -7.045368194580078
    9. '   ' → logprob: -7.045368194580078
    10. '0' → logprob: -7.295368194580078

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3856492842023727e-06
    2. ' ,' → logprob: -14.000000953674316
    3. ',
' → logprob: -15.125000953674316
    4. '‌,' → logprob: -16.625001907348633
    5. '=' → logprob: -17.125001907348633
    6. '_,' → logprob: -17.375001907348633
    7. ',next' → logprob: -17.875001907348633
    8. ',n' → logprob: -18.000001907348633
    9. ',c' → logprob: -18.000001907348633
    10. ',user' → logprob: -18.125001907348633

Token 388: ' city' (ID: 5030)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01540983747690916
    2. 'cur' → logprob: -4.64040994644165
    3. 'city' → logprob: -5.89040994644165
    4. ' u' → logprob: -6.14040994644165
    5. 'v' → logprob: -8.390409469604492
    6. 'curr' → logprob: -8.515409469604492
    7. 'node' → logprob: -9.265409469604492
    8. 'pos' → logprob: -9.390409469604492
    9. ' city' → logprob: -10.515409469604492
    10. 'here' → logprob: -10.515409469604492

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445127372804563e-05
    2. ' ,' → logprob: -12.00001049041748
    3. '_,' → logprob: -12.62501049041748
    4. ',
' → logprob: -15.50001049041748
    5. 's' → logprob: -15.75001049041748
    6. 'u' → logprob: -16.000009536743164
    7. '=' → logprob: -16.625009536743164
    8. '‌,' → logprob: -16.750009536743164
    9. ',next' → logprob: -16.875009536743164
    10. '_id' → logprob: -17.125009536743164

Token 390: ' fuel' (ID: 14827)
  Prédit: 'fuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -0.00048644188791513443
    2. ' fuel' → logprob: -8.125486373901367
    3. 'fu' → logprob: -9.125486373901367
    4. 'f' → logprob: -9.500486373901367
    5. 'tank' → logprob: -13.125486373901367
    6. 'Fuel' → logprob: -13.500486373901367
    7. '
' → logprob: -14.000486373901367
    8. 'gas' → logprob: -14.750486373901367
    9. 'fur' → logprob: -15.250486373901367
    10. 'cur' → logprob: -15.500486373901367

Token 391: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859009385108948
    2. ' =' → logprob: -3.0485901832580566
    3. ')' → logprob: -13.548589706420898
    4. '   ' → logprob: -13.923589706420898
    5. ')=' → logprob: -15.923589706420898
    6. ' ' → logprob: -16.4235897064209
    7. ',' → logprob: -16.5485897064209
    8. '    ' → logprob: -17.7985897064209
    9. '=

' → logprob: -17.7985897064209
    10. '  ' → logprob: -18.1735897064209

Token 392: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.575950026512146
    2. ' heap' → logprob: -0.825950026512146
    3. 'he' → logprob: -12.075949668884277
    4. ' he' → logprob: -12.825949668884277
    5. '   ' → logprob: -13.325949668884277
    6. '(heap' → logprob: -15.325949668884277
    7. ' ' → logprob: -15.575949668884277
    8. '    ' → logprob: -16.450950622558594
    9. '
' → logprob: -17.200950622558594
    10. '.heap' → logprob: -17.325950622558594

Token 393: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.3856492842023727e-06
    2. 'p' → logprob: -14.625000953674316
    3. '
' → logprob: -15.125000953674316
    4. '[' → logprob: -15.625000953674316
    5. '

' → logprob: -16.125001907348633
    6. '```' → logprob: -16.375001907348633
    7. 'ify' → logprob: -16.500001907348633
    8. ')' → logprob: -16.750001907348633
    9. ',' → logprob: -17.250001907348633
    10. 'h' → logprob: -17.625001907348633

Token 394: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0005903251585550606
    2. 'q' → logprob: -7.6255903244018555
    3. '.' → logprob: -9.375590324401855
    4. 'he' → logprob: -12.500590324401855
    5. '.pop' → logprob: -12.500590324401855
    6. '.q' → logprob: -12.500590324401855
    7. '.heap' → logprob: -13.250590324401855
    8. ' .' → logprob: -13.750590324401855
    9. ' he' → logprob: -14.000590324401855
    10. ').' → logprob: -14.125590324401855

Token 395: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.511406809295295e-06
    2. 'pp' → logprob: -12.375006675720215
    3. 'ap' → logprob: -13.125006675720215
    4. 'q' → logprob: -16.1250057220459
    5. '[' → logprob: -17.2500057220459
    6. '```' → logprob: -17.7500057220459
    7. 'pop' → logprob: -17.8750057220459
    8. ' app' → logprob: -18.2500057220459
    9. 'qp' → logprob: -18.2500057220459
    10. 'appe' → logprob: -18.7500057220459

Token 396: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.2080366015434265
    2. 'app' → logprob: -2.2080366611480713
    3. 'ush' → logprob: -3.2080366611480713
    4. 'q' → logprob: -4.208036422729492
    5. 'pp' → logprob: -4.333036422729492
    6. 'ap' → logprob: -5.083036422729492
    7. 'p' → logprob: -5.958036422729492
    8. 'pop' → logprob: -8.583036422729492
    9. 'ip' → logprob: -9.708036422729492
    10. 'ort' → logprob: -9.958036422729492

Token 397: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.250015258789062
    3. '(q' → logprob: -13.500015258789062
    4. '(
' → logprob: -15.000015258789062
    5. 'h' → logprob: -15.125015258789062
    6. '(heap' → logprob: -15.625015258789062
    7. ',h' → logprob: -17.125015258789062
    8. '(n' → logprob: -18.125015258789062
    9. ' (' → logprob: -18.250015258789062
    10. '[h' → logprob: -18.625015258789062

Token 398: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8624639324116288e-06
    2. ')' → logprob: -13.500001907348633
    3. 'Q' → logprob: -15.125001907348633
    4. '_q' → logprob: -17.750001907348633
    5. ')
' → logprob: -17.750001907348633
    6. 'p' → logprob: -18.125001907348633
    7. 'c' → logprob: -18.375001907348633
    8. '[' → logprob: -18.875001907348633
    9. ',' → logprob: -18.875001907348633
    10. '	q' → logprob: -18.875001907348633

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0040874239057302475
    2. ')
' → logprob: -5.504087448120117
    3. '       ' → logprob: -11.879087448120117
    4. ')
' → logprob: -13.629087448120117
    5. '   ' → logprob: -14.504087448120117
    6. ')

' → logprob: -15.129087448120117
    7. '),' → logprob: -17.129087448120117
    8. ' )' → logprob: -17.254087448120117
    9. ')`' → logprob: -17.754087448120117
    10. ')`
' → logprob: -18.879087448120117

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008257346227765083
    2. '   ' → logprob: -6.0082573890686035
    3. ' if' → logprob: -6.0082573890686035
    4. ')' → logprob: -6.7582573890686035
    5. 'if' → logprob: -6.8832573890686035
    6. '        
' → logprob: -7.7582573890686035
    7. '<|end|>' → logprob: -8.258256912231445
    8. '    ' → logprob: -9.008256912231445
    9. '```' → logprob: -10.008256912231445
    10. '        ' → logprob: -10.008256912231445

Token 401: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5789880156517029
    2. '       ' → logprob: -0.8289880156517029
    3. ' if' → logprob: -5.828988075256348
    4. '        
' → logprob: -9.828988075256348
    5. '	if' → logprob: -10.453988075256348
    6. '   ' → logprob: -12.078988075256348
    7. '	' → logprob: -12.203988075256348
    8. ';if' → logprob: -12.828988075256348
    9. ',' → logprob: -13.453988075256348
    10. '           ' → logprob: -13.828988075256348

Token 402: ' city' (ID: 5030)
  Prédit: ' city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.5063948631286621
    2. 'city' → logprob: -1.506394863128662
    3. ' dist' → logprob: -2.381394863128662
    4. ' cost' → logprob: -3.256394863128662
    5. 'cost' → logprob: -3.756394863128662
    6. 'dist' → logprob: -3.881394863128662
    7. '(city' → logprob: -7.631394863128662
    8. ' ' → logprob: -9.75639533996582
    9. '(cost' → logprob: -10.13139533996582
    10. ' (' → logprob: -10.63139533996582

Token 403: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048590436577796936
    2. '==' → logprob: -3.0485904216766357
    3. '=' → logprob: -14.048590660095215
    4. ']==' → logprob: -14.298590660095215
    5. ')==' → logprob: -14.423590660095215
    6. ')' → logprob: -14.548590660095215
    7. ' =' → logprob: -15.048590660095215
    8. '==
' → logprob: -15.798590660095215
    9. '()==' → logprob: -16.7985897064209
    10. ' ' → logprob: -17.2985897064209

Token 404: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0380416102707386
    2. ' end' → logprob: -3.288041591644287
    3. '=end' → logprob: -16.663042068481445
    4. '(end' → logprob: -17.288042068481445
    5. '[end' → logprob: -18.913042068481445
    6. '	end' → logprob: -19.163042068481445
    7. '   ' → logprob: -19.288042068481445
    8. ' ' → logprob: -19.538042068481445
    9. ''end' → logprob: -19.663042068481445
    10. 'END' → logprob: -20.538042068481445

Token 405: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38728031516075134
    2. 'and' → logprob: -1.1372803449630737
    3. ':' → logprob: -8.262280464172363
    4. '   ' → logprob: -9.262280464172363
    5. '       ' → logprob: -10.512280464172363
    6. '           ' → logprob: -10.887280464172363
    7. ':
' → logprob: -12.762280464172363
    8. '	and' → logprob: -13.012280464172363
    9. '    ' → logprob: -13.512280464172363
    10. '<|end|>' → logprob: -14.012280464172363

Token 406: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003012649482116103
    2. '       ' → logprob: -6.503012657165527
    3. '
' → logprob: -7.253012657165527
    4. 'break' → logprob: -8.378012657165527
    5. ' break' → logprob: -8.503012657165527
    6. '\n' → logprob: -8.628012657165527
    7. '               ' → logprob: -9.753012657165527
    8. 'print' → logprob: -10.253012657165527
    9. '   ' → logprob: -11.003012657165527
    10. '\' → logprob: -11.253012657165527

Token 407: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011832444579340518
    2. ' print' → logprob: -10.125118255615234
    3. 'break' → logprob: -10.500118255615234
    4. '       ' → logprob: -10.625118255615234
    5. '           ' → logprob: -10.625118255615234
    6. '```' → logprob: -14.000118255615234
    7. '
' → logprob: -15.000118255615234
    8. '   ' → logprob: -15.250118255615234
    9. '#print' → logprob: -15.625118255615234
    10. 'return' → logprob: -16.000118255615234

Token 408: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.012536142021417618
    2. 'cost' → logprob: -4.51253604888916
    3. ' cost' → logprob: -6.51253604888916
    4. '(' → logprob: -13.01253604888916
    5. ' (' → logprob: -15.38753604888916
    6. 'Cost' → logprob: -17.512537002563477
    7. '_cost' → logprob: -18.012537002563477
    8. '(c' → logprob: -18.012537002563477
    9. '0' → logprob: -18.262537002563477
    10. '.cost' → logprob: -18.637537002563477

Token 409: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1002303957939148
    2. ')' → logprob: -2.3502304553985596
    3. ')
' → logprob: -11.10023021697998
    4. '       ' → logprob: -11.97523021697998
    5. '           ' → logprob: -14.22523021697998
    6. '   ' → logprob: -14.85023021697998
    7. ')return' → logprob: -14.97523021697998
    8. ' )
' → logprob: -15.22523021697998
    9. ')`
' → logprob: -15.22523021697998
    10. '               ' → logprob: -15.85023021697998

Token 410: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007717601023614407
    2. '<|end|>' → logprob: -5.382717609405518
    3. '           ' → logprob: -6.007717609405518
    4. '   ' → logprob: -8.88271713256836
    5. ')' → logprob: -9.25771713256836
    6. '\' → logprob: -9.88271713256836
    7. '<|end|>' → logprob: -10.00771713256836
    8. '               ' → logprob: -10.00771713256836
    9. '
' → logprob: -10.13271713256836
    10. '```' → logprob: -10.25771713256836

Token 411: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0633004680275917
    2. 'break' (adapté à ' break') → logprob: -2.813300371170044
    3. ' break' → logprob: -7.313300609588623
    4. '       ' → logprob: -7.438300609588623
    5. '
' → logprob: -10.563300132751465
    6. '	break' → logprob: -10.563300132751465
    7. 'return' → logprob: -12.063300132751465
    8. '               ' → logprob: -12.188300132751465
    9. '   ' → logprob: -12.438300132751465
    10. '		' → logprob: -12.438300132751465

Token 412: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005921131814830005
    2. '   ' → logprob: -8.250592231750488
    3. '        
' → logprob: -8.500592231750488
    4. '	' → logprob: -10.625592231750488
    5. '  
' → logprob: -10.625592231750488
    6. '    
' → logprob: -10.750592231750488
    7. '
' → logprob: -11.250592231750488
    8. ' 
' → logprob: -11.875592231750488
    9. '           ' → logprob: -12.125592231750488
    10. '      ' → logprob: -12.250592231750488

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022116461768746376
    2. '   ' → logprob: -3.8971164226531982
    3. 'if' → logprob: -7.147116661071777
    4. ' if' → logprob: -7.522116661071777
    5. '        
' → logprob: -10.022116661071777
    6. '    ' → logprob: -10.147116661071777
    7. '      ' → logprob: -10.272116661071777
    8. '    
' → logprob: -10.522116661071777
    9. '	if' → logprob: -10.897116661071777
    10. '	' → logprob: -11.272116661071777

Token 414: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10242140293121338
    2. '       ' → logprob: -2.352421283721924
    3. ' if' → logprob: -6.227421283721924
    4. '        
' → logprob: -8.727421760559082
    5. '   ' → logprob: -9.977421760559082
    6. 'for' → logprob: -11.352421760559082
    7. '	if' → logprob: -11.852421760559082
    8. '    
' → logprob: -13.352421760559082
    9. '      ' → logprob: -13.727421760559082
    10. ' ' → logprob: -13.852421760559082

Token 415: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18861941993236542
    2. ' dist' → logprob: -1.9386193752288818
    3. 'cost' → logprob: -3.688619375228882
    4. ' cost' → logprob: -5.813619613647461
    5. '	dist' → logprob: -13.563619613647461
    6. ' ' → logprob: -14.563619613647461
    7. '(dist' → logprob: -14.813619613647461
    8. '   ' → logprob: -15.063619613647461
    9. '(cost' → logprob: -16.06361961364746
    10. '  ' → logprob: -16.81361961364746

Token 416: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '][' → logprob: -13.625001907348633
    3. 'city' → logprob: -15.250001907348633
    4. ' [' → logprob: -16.750001907348633
    5. '```' → logprob: -16.875001907348633
    6. ']' → logprob: -18.500001907348633
    7. '}[' → logprob: -19.125001907348633
    8. '[
' → logprob: -19.125001907348633
    9. ')[' → logprob: -19.250001907348633
    10. '[c' → logprob: -19.375001907348633

Token 417: 'city' (ID: 17500)
  Prédit: 'city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.250006675720215
    3. ' city' → logprob: -13.500006675720215
    4. '(city' → logprob: -14.625006675720215
    5. '.city' → logprob: -17.00000762939453
    6. '_city' → logprob: -19.00000762939453
    7. '   ' → logprob: -19.37500762939453
    8. ' ' → logprob: -19.50000762939453
    9. 'CITY' → logprob: -19.87500762939453
    10. '```' → logprob: -19.87500762939453

Token 418: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2162032425403595
    2. '[' → logprob: -1.841203212738037
    3. '[f' → logprob: -3.341203212738037
    4. '[c' → logprob: -8.841203689575195
    5. ']' → logprob: -9.341203689575195
    6. ')[' → logprob: -10.091203689575195
    7. ' ][' → logprob: -11.216203689575195
    8. '[cur' → logprob: -11.216203689575195
    9. '[current' → logprob: -11.841203689575195
    10. '   ' → logprob: -11.966203689575195

Token 419: 'fuel' (ID: 114430)
  Prédit: 'fuel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -5.512236498361744e-07
    2. ' fuel' → logprob: -14.750000953674316
    3. 'fu' → logprob: -17.625
    4. 'fur' → logprob: -19.5
    5. 'Fuel' → logprob: -19.625
    6. 'fluid' → logprob: -20.0
    7. 'fleet' → logprob: -20.5
    8. 'f' → logprob: -21.0
    9. 'food' → logprob: -21.5
    10. '```' → logprob: -21.5

Token 420: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.012979269027709961
    2. ' <' → logprob: -4.887979507446289
    3. ']' → logprob: -5.762979507446289
    4. ']<' → logprob: -6.262979507446289
    5. '>' → logprob: -8.762979507446289
    6. '<m' → logprob: -10.762979507446289
    7. '<v' → logprob: -11.012979507446289
    8. '<int' → logprob: -11.387979507446289
    9. '<c' → logprob: -11.387979507446289
    10. '<ll' → logprob: -11.762979507446289

Token 421: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.008638677187263966
    2. ' <' → logprob: -4.758638858795166
    3. '<c' → logprob: -12.883638381958008
    4. '!=' → logprob: -13.008638381958008
    5. '<n' → logprob: -13.008638381958008
    6. '<int' → logprob: -13.383638381958008
    7. '<v' → logprob: -13.383638381958008
    8. '<len' → logprob: -13.383638381958008
    9. '<w' → logprob: -13.508638381958008
    10. '<m' → logprob: -13.633638381958008

Token 422: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -7.493430894101039e-05
    2. ' cost' → logprob: -9.500075340270996
    3. '(cost' → logprob: -22.00007438659668
    4. '_cost' → logprob: -23.37507438659668
    5. 'code' → logprob: -23.62507438659668
    6. '-cost' → logprob: -23.75007438659668
    7. 'cos' → logprob: -24.00007438659668
    8. ' ' → logprob: -24.50007438659668
    9. '   ' → logprob: -25.25007438659668
    10. '.cost' → logprob: -25.50007438659668

Token 423: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03724932670593262
    2. ':
' → logprob: -3.4122493267059326
    3. 'continue' → logprob: -6.287249565124512
    4. ' continue' → logprob: -7.162249565124512
    5. '       ' → logprob: -7.537249565124512
    6. '	continue' → logprob: -8.787249565124512
    7. '           ' → logprob: -9.162249565124512
    8. '   ' → logprob: -9.412249565124512
    9. '_continue' → logprob: -10.662249565124512
    10. '):' → logprob: -10.787249565124512

Token 424: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10046469420194626
    2. ' continue' → logprob: -3.2254645824432373
    3. 'continue' → logprob: -3.3504645824432373
    4. '           ' → logprob: -3.9754645824432373
    5. '	continue' → logprob: -6.600464820861816
    6. '   ' → logprob: -7.600464820861816
    7. '_continue' → logprob: -10.100464820861816
    8. '	   ' → logprob: -10.225464820861816
    9. '	       ' → logprob: -10.975464820861816
    10. ' continues' → logprob: -11.350464820861816

Token 425: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.16045545041561127
    2. ' continue' → logprob: -1.9104554653167725
    3. '	continue' → logprob: -9.035455703735352
    4. '   ' → logprob: -10.035455703735352
    5. '       ' → logprob: -10.035455703735352
    6. '           ' → logprob: -10.785455703735352
    7. '_continue' → logprob: -13.035455703735352
    8. 'contin' → logprob: -13.660455703735352
    9. 'continu' → logprob: -15.410455703735352
    10. '```' → logprob: -16.66045570373535

Token 426: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03263744339346886
    2. '   ' → logprob: -4.032637596130371
    3. '<|end|>' → logprob: -4.907637596130371
    4. ' for' → logprob: -5.907637596130371
    5. '        
' → logprob: -6.407637596130371
    6. ')' → logprob: -6.782637596130371
    7. ',' → logprob: -8.407637596130371
    8. '    ' → logprob: -8.657637596130371
    9. '    
' → logprob: -8.782637596130371
    10. '  
' → logprob: -9.032637596130371

Token 427: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.225394368171692
    2. ' for' → logprob: -1.225394368171692
    3. '       ' → logprob: -1.475394368171692
    4. 'for' → logprob: -1.725394368171692
    5. '	for' → logprob: -5.850394248962402
    6. '<|end|>' → logprob: -6.225394248962402
    7. ')' → logprob: -7.600394248962402
    8. '```' → logprob: -9.100394248962402
    9. '    
' → logprob: -9.225394248962402
    10. '        
' → logprob: -9.225394248962402

Token 428: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03498418629169464
    2. ' for' → logprob: -3.7849841117858887
    3. '       ' → logprob: -4.534984111785889
    4. '   ' → logprob: -7.284984111785889
    5. '	for' → logprob: -8.284984588623047
    6. '        
' → logprob: -13.159984588623047
    7. ')' → logprob: -14.409984588623047
    8. '#' (adapté à ' #') → logprob: -14.909984588623047
    9. '```' → logprob: -14.909984588623047
    10. '    
' → logprob: -15.034984588623047

Token 429: ' Ref' (ID: 14132)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011948712635785341
    2. ' for' → logprob: -6.751194953918457
    3. '   ' → logprob: -10.626194953918457
    4. '       ' → logprob: -15.376194953918457
    5. '	for' → logprob: -15.876194953918457
    6. '    
' → logprob: -18.37619400024414
    7. ' ' → logprob: -18.87619400024414
    8. '```' → logprob: -18.87619400024414
    9. '        
' → logprob: -19.37619400024414
    10. '#' → logprob: -19.62619400024414

Token 430: 'uel' (ID: 4619)
  Prédit: 'uel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.0028829758521169424
    2. 'ill' → logprob: -5.877882957458496
    3. 'ueling' → logprob: -9.752882957458496
    4. 'uels' → logprob: -11.877882957458496
    5. 'uell' → logprob: -12.627882957458496
    6. 'illing' → logprob: -13.002882957458496
    7. 'u' → logprob: -13.252882957458496
    8. 'ull' → logprob: -13.877882957458496
    9. '   ' → logprob: -14.127882957458496
    10. 'UEL' → logprob: -14.752882957458496

Token 431: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007785954512655735
    2. ' if' → logprob: -5.257785797119141
    3. 'if' → logprob: -6.007785797119141
    4. '   ' → logprob: -9.50778579711914
    5. ',' → logprob: -12.63278579711914
    6. '           ' → logprob: -12.75778579711914
    7. ':' → logprob: -13.50778579711914
    8. '	if' → logprob: -13.75778579711914
    9. '        
' → logprob: -13.75778579711914
    10. '      ' → logprob: -14.00778579711914

Token 432: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.04117824509739876
    2. ' city' → logprob: -3.2911782264709473
    3. '(city' → logprob: -6.416178226470947
    4. 'fuel' → logprob: -6.541178226470947
    5. ' fuel' → logprob: -11.416178703308105
    6. '(' → logprob: -11.541178703308105
    7. ' (' → logprob: -11.541178703308105
    8. 'station' → logprob: -12.291178703308105
    9. ' ' → logprob: -12.666178703308105
    10. '   ' → logprob: -13.103678703308105

Token 433: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0430658720433712
    2. 'in' → logprob: -3.1680657863616943
    3. ' ' → logprob: -10.293066024780273
    4. ')' → logprob: -11.293066024780273
    5. '   ' → logprob: -12.168066024780273
    6. '	in' → logprob: -12.418066024780273
    7. '  ' → logprob: -12.793066024780273
    8. ' i' → logprob: -13.543066024780273
    9. '    ' → logprob: -13.793066024780273
    10. '[' → logprob: -14.418066024780273

Token 434: ' a' (ID: 261)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11932886391878128
    2. ' in' → logprob: -2.6193289756774902
    3. 'stations' → logprob: -4.11932897567749
    4. 'city' → logprob: -4.49432897567749
    5. 'station' → logprob: -4.49432897567749
    6. ' city' → logprob: -7.99432897567749
    7. ' stations' → logprob: -7.99432897567749
    8. ' station' → logprob: -9.244328498840332
    9. '<|end|>' → logprob: -9.869328498840332
    10. 'cities' → logprob: -10.119328498840332

Token 435: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.02454632893204689
    2. 't' → logprob: -4.524546146392822
    3. ' station' → logprob: -4.774546146392822
    4. 'stations' → logprob: -5.524546146392822
    5. 'n' → logprob: -7.649546146392822
    6. '_station' → logprob: -8.89954662322998
    7. 's' → logprob: -9.27454662322998
    8. ' in' → logprob: -9.77454662322998
    9. 'in' → logprob: -9.89954662322998
    10. 'st' → logprob: -10.27454662322998

Token 436: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010423363419249654
    2. '   ' → logprob: -7.501042366027832
    3. ' if' → logprob: -9.001042366027832
    4. '<|end|>' → logprob: -9.126042366027832
    5. '        
' → logprob: -9.751042366027832
    6. ',' → logprob: -9.876042366027832
    7. ':' → logprob: -10.001042366027832
    8. '           ' → logprob: -10.626042366027832
    9. '    
' → logprob: -11.251042366027832
    10. ':
' → logprob: -11.876042366027832

Token 437: 'tank' (ID: 187649)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03766121342778206
    2. ')' → logprob: -4.412661075592041
    3. 'and' → logprob: -4.537661075592041
    4. ' city' → logprob: -5.037661075592041
    5. 'city' → logprob: -6.037661075592041
    6. '       ' → logprob: -6.287661075592041
    7. '   ' → logprob: -6.912661075592041
    8. ' )' → logprob: -7.412661075592041
    9. ' if' → logprob: -7.412661075592041
    10. 'if' → logprob: -8.5376615524292

Token 438: ' full' (ID: 3149)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10442062467336655
    2. ' <' → logprob: -2.3544206619262695
    3. '!=' → logprob: -6.7294206619262695
    4. '==' → logprob: -7.1044206619262695
    5. '   ' → logprob: -7.6044206619262695
    6. ')' → logprob: -7.6044206619262695
    7. ' !=' → logprob: -8.10442066192627
    8. ' not' → logprob: -8.72942066192627
    9. 'and' → logprob: -8.72942066192627
    10. ' and' → logprob: -9.10442066192627

Token 439: ')
' (ID: 446)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8876287341117859
    2. '):' → logprob: -1.8876287937164307
    3. '):
' → logprob: -1.8876287937164307
    4. ' and' → logprob: -2.0126287937164307
    5. ')' → logprob: -2.1376287937164307
    6. '   ' → logprob: -4.637628555297852
    7. ')
' → logprob: -4.887628555297852
    8. '):

' → logprob: -5.387628555297852
    9. ' at' → logprob: -5.762628555297852
    10. '),' → logprob: -5.762628555297852

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022825391963124275
    2. '   ' → logprob: -4.272825241088867
    3. '<|end|>' → logprob: -5.647825241088867
    4. '        
' → logprob: -5.897825241088867
    5. '    
' → logprob: -6.772825241088867
    6. '
' → logprob: -7.897825241088867
    7. '  
' → logprob: -8.272825241088867
    8. '	' → logprob: -9.522825241088867
    9. ' 
' → logprob: -9.772825241088867
    10. ',' → logprob: -10.147825241088867

Token 441: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02155217155814171
    2. ' if' → logprob: -4.396552085876465
    3. 'if' (adapté à ' if') → logprob: -4.771552085876465
    4. '   ' → logprob: -7.771552085876465
    5. '	' → logprob: -10.021552085876465
    6. '	if' → logprob: -10.646552085876465
    7. '           ' → logprob: -11.146552085876465
    8. '	   ' → logprob: -11.771552085876465
    9. '        
' → logprob: -12.271552085876465
    10. '    ' → logprob: -12.271552085876465

Token 442: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.04938375577330589
    2. ' city' → logprob: -3.0493836402893066
    3. 'fuel' → logprob: -7.174383640289307
    4. '(city' → logprob: -11.424384117126465
    5. ' fuel' → logprob: -11.549384117126465
    6. 'f' → logprob: -13.174384117126465
    7. '   ' → logprob: -13.174384117126465
    8. 'cit' → logprob: -13.424384117126465
    9. ' ' → logprob: -13.674384117126465
    10. 'cities' → logprob: -14.174384117126465

Token 443: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020617567002773285
    2. 'in' → logprob: -3.8956174850463867
    3. ' ' → logprob: -9.645617485046387
    4. ' not' → logprob: -12.395617485046387
    5. 'not' → logprob: -13.270617485046387
    6. '	in' → logprob: -13.270617485046387
    7. '   ' → logprob: -14.270617485046387
    8. '  ' → logprob: -14.645617485046387
    9. ')' → logprob: -14.645617485046387
    10. '_in' → logprob: -15.145617485046387

Token 444: ' stations' (ID: 26061)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.0005532711511477828
    2. ' stations' → logprob: -7.500553131103516
    3. 'station' → logprob: -15.500553131103516
    4. 'st' → logprob: -16.625553131103516
    5. 'sta' → logprob: -19.375553131103516
    6. 'stars' → logprob: -19.500553131103516
    7. '   ' → logprob: -20.000553131103516
    8. ' ' → logprob: -20.625553131103516
    9. 'states' → logprob: -20.625553131103516
    10. 'Stations' → logprob: -20.625553131103516

Token 445: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007930849678814411
    2. 'and' → logprob: -5.132930755615234
    3. ':' → logprob: -6.882930755615234
    4. ':
' → logprob: -7.257930755615234
    5. '           ' → logprob: -8.507930755615234
    6. '       ' → logprob: -10.132930755615234
    7. '   ' → logprob: -10.757930755615234
    8. '	and' → logprob: -12.757930755615234
    9. ' ' → logprob: -13.882930755615234
    10. ',' → logprob: -14.132930755615234

Token 446: ' fuel' (ID: 14827)
  Prédit: 'fuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -0.004749795887619257
    2. ' fuel' → logprob: -5.379749774932861
    3. 'f' → logprob: -9.37975025177002
    4. 'fu' → logprob: -10.50475025177002
    5. 'dist' → logprob: -11.12975025177002
    6. '   ' → logprob: -14.00475025177002
    7. '       ' → logprob: -14.50475025177002
    8. '     ' → logprob: -14.75475025177002
    9. '
' → logprob: -15.87975025177002
    10. ' dist' → logprob: -16.004749298095703

Token 447: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.043028879910707474
    2. ' <' → logprob: -3.1680288314819336
    3. '!=' → logprob: -10.918028831481934
    4. ' !=' → logprob: -11.918028831481934
    5. ' ' → logprob: -12.543028831481934
    6. '<len' → logprob: -15.543028831481934
    7. ' ' → logprob: -15.793028831481934
    8. ')' → logprob: -15.918028831481934
    9. '<int' → logprob: -16.04302978515625
    10. '<size' → logprob: -16.29302978515625

Token 448: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.00029637437546625733
    2. ' cap' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.750296592712402
    4. ' ' → logprob: -16.625295639038086
    5. '(cap' → logprob: -18.000295639038086
    6. '
' → logprob: -18.125295639038086
    7. 'capacity' → logprob: -18.375295639038086
    8. '  ' → logprob: -19.625295639038086
    9. 'capac' → logprob: -19.750295639038086
    10. '-cap' → logprob: -20.125295639038086

Token 449: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5269993543624878
    2. ':' → logprob: -0.9019993543624878
    3. '           ' → logprob: -6.026999473571777
    4. '       ' → logprob: -6.776999473571777
    5. ':
' → logprob: -8.776999473571777
    6. '):
' → logprob: -9.526999473571777
    7. ' and' → logprob: -10.151999473571777
    8. '   ' → logprob: -11.151999473571777
    9. ',' → logprob: -11.526999473571777
    10. ':

' → logprob: -12.151999473571777

Token 450: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002221391536295414
    2. '       ' → logprob: -7.627221584320068
    3. '               ' → logprob: -8.00222110748291
    4. ':
' → logprob: -8.00222110748291
    5. ',' → logprob: -8.25222110748291
    6. ':' → logprob: -8.62722110748291
    7. '            
' → logprob: -9.00222110748291
    8. '):
' → logprob: -9.37722110748291
    9. '```' → logprob: -9.37722110748291
    10. '	       ' → logprob: -9.62722110748291

Token 451: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23027303814888
    2. 'if' (adapté à ' if') → logprob: -2.3552730083465576
    3. '           ' → logprob: -3.1052730083465576
    4. 'heap' → logprob: -3.4802730083465576
    5. 'fuel' → logprob: -4.480273246765137
    6. '       ' → logprob: -4.605273246765137
    7. 'new' → logprob: -4.855273246765137
    8. ' dist' → logprob: -6.230273246765137
    9. 'cost' → logprob: -6.480273246765137
    10. ' if' → logprob: -6.730273246765137

Token 452: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013017160817980766
    2. ' dist' → logprob: -4.388017177581787
    3. '   ' → logprob: -8.388016700744629
    4. '           ' → logprob: -8.388016700744629
    5. '       ' → logprob: -11.263016700744629
    6. '	dist' → logprob: -11.638016700744629
    7. 'cost' → logprob: -11.888016700744629
    8. '0' → logprob: -12.263016700744629
    9. '               ' → logprob: -12.513016700744629
    10. 'cap' → logprob: -12.513016700744629

Token 453: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. 'city' → logprob: -15.875000953674316
    3. '][' → logprob: -16.0
    4. '```' → logprob: -16.125
    5. '[
' → logprob: -16.5
    6. ' [' → logprob: -17.375
    7. '(city' → logprob: -18.125
    8. '   ' → logprob: -18.375
    9. ')[' → logprob: -18.875
    10. '[][' → logprob: -19.125

Token 454: 'city' (ID: 17500)
  Prédit: 'city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -6.027225754223764e-05
    2. '[' → logprob: -9.750060081481934
    3. ' city' → logprob: -13.375060081481934
    4. '(city' → logprob: -15.500060081481934
    5. '   ' → logprob: -17.12506103515625
    6. '.city' → logprob: -18.12506103515625
    7. '][' → logprob: -18.50006103515625
    8. ' ' → logprob: -19.00006103515625
    9. '_city' → logprob: -19.75006103515625
    10. '```' → logprob: -19.75006103515625

Token 455: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.38703110814094543
    2. '[' → logprob: -1.137031078338623
    3. ']' → logprob: -10.137031555175781
    4. '[c' → logprob: -10.137031555175781
    5. '[cur' → logprob: -10.512031555175781
    6. ' [' → logprob: -11.137031555175781
    7. '[
' → logprob: -11.762031555175781
    8. ' ][' → logprob: -12.012031555175781
    9. '   ' → logprob: -12.762031555175781
    10. ')[' → logprob: -13.137031555175781

Token 456: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -1.5048530030981055e-06
    2. ' cap' → logprob: -14.500001907348633
    3. '[' → logprob: -14.750001907348633
    4. '(cap' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '
' → logprob: -16.750001907348633
    7. ' ' → logprob: -17.500001907348633
    8. '```' → logprob: -17.750001907348633
    9. 'capacity' → logprob: -18.000001907348633
    10. 'caps' → logprob: -18.000001907348633

Token 457: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034873560070991516
    2. ']>' → logprob: -3.5348734855651855
    3. '>' → logprob: -5.2848734855651855
    4. ' ]' → logprob: -11.409873962402344
    5. ']==' → logprob: -11.784873962402344
    6. '[' → logprob: -11.909873962402344
    7. ' >' → logprob: -12.034873962402344
    8. '>]' → logprob: -12.784873962402344
    9. '   ' → logprob: -13.284873962402344
    10. '+' → logprob: -14.034873962402344

Token 458: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0059304554015398026
    2. ' >' → logprob: -5.130930423736572
    3. '   ' → logprob: -14.88093090057373
    4. '>b' → logprob: -15.75593090057373
    5. ' ' → logprob: -16.005929946899414
    6. ']>' → logprob: -16.130929946899414
    7. '>No' → logprob: -16.130929946899414
    8. '()>' → logprob: -16.255929946899414
    9. '>`' → logprob: -16.505929946899414
    10. '>a' → logprob: -16.630929946899414

Token 459: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.008615042082965374
    2. ' cost' → logprob: -4.758615016937256
    3. '(cost' → logprob: -14.883615493774414
    4. 'dist' → logprob: -15.883615493774414
    5. 'Cost' → logprob: -18.258615493774414
    6. '   ' → logprob: -18.758615493774414
    7. '_cost' → logprob: -18.883615493774414
    8. ' ' → logprob: -19.258615493774414
    9. '.cost' → logprob: -19.383615493774414
    10. ' kost' → logprob: -19.633615493774414

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11542920768260956
    2. ':
' → logprob: -2.240429162979126
    3. '):' → logprob: -7.365429401397705
    4. '):
' → logprob: -7.365429401397705
    5. '           ' → logprob: -7.615429401397705
    6. '               ' → logprob: -8.490428924560547
    7. ',' → logprob: -8.615428924560547
    8. '       ' → logprob: -9.365428924560547
    9. ')' → logprob: -9.615428924560547
    10. '=' → logprob: -10.115428924560547

Token 461: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017708084487821907
    2. '<|end|>' → logprob: -9.500177383422852
    3. '           ' → logprob: -9.875177383422852
    4. 'dist' → logprob: -11.375177383422852
    5. '```' → logprob: -11.750177383422852
    6. ',' → logprob: -12.000177383422852
    7. '                
' → logprob: -12.125177383422852
    8. '                   ' → logprob: -12.375177383422852
    9. '	           ' → logprob: -12.625177383422852
    10. '              ' → logprob: -13.250177383422852

Token 462: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.28008803725242615
    2. ' dist' → logprob: -2.030087947845459
    3. '               ' → logprob: -2.530087947845459
    4. '                   ' → logprob: -3.405087947845459
    5. '	dist' → logprob: -10.155088424682617
    6. '                       ' → logprob: -10.655088424682617
    7. '           ' → logprob: -10.905088424682617
    8. '   ' → logprob: -11.280088424682617
    9. '```' → logprob: -12.280088424682617
    10. '_dist' → logprob: -14.030088424682617

Token 463: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.25
    3. '][' → logprob: -16.625
    4. 'city' → logprob: -17.125
    5. ' [' → logprob: -17.75
    6. '[
' → logprob: -18.125
    7. '   ' → logprob: -18.125
    8. ')[' → logprob: -18.75
    9. '\[' → logprob: -19.25
    10. '[cur' → logprob: -19.75

Token 464: 'city' (ID: 17500)
  Prédit: 'city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -1.0683535037969705e-05
    2. '[' → logprob: -11.62501049041748
    3. ' city' → logprob: -13.37501049041748
    4. '   ' → logprob: -17.500011444091797
    5. '(city' → logprob: -17.500011444091797
    6. '.city' → logprob: -18.000011444091797
    7. 'cit' → logprob: -18.250011444091797
    8. '-city' → logprob: -18.250011444091797
    9. '_city' → logprob: -18.625011444091797
    10. 'City' → logprob: -19.125011444091797

Token 465: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5231754183769226
    2. '[' → logprob: -0.8981754183769226
    3. ']' → logprob: -10.523175239562988
    4. ')[' → logprob: -11.398175239562988
    5. '"][' → logprob: -12.773175239562988
    6. ' ][' → logprob: -13.023175239562988
    7. '   ' → logprob: -13.273175239562988
    8. ' [' → logprob: -14.148175239562988
    9. '[][' → logprob: -14.273175239562988
    10. '>[' → logprob: -14.273175239562988

Token 466: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.00010580805974313989
    2. 'cost' → logprob: -9.250105857849121
    3. 'city' → logprob: -11.875105857849121
    4. ' cap' → logprob: -13.500105857849121
    5. 'fuel' → logprob: -13.750105857849121
    6. 'capacity' → logprob: -16.750104904174805
    7. '(cap' → logprob: -16.875104904174805
    8. 'c' → logprob: -17.500104904174805
    9. '[' → logprob: -17.625104904174805
    10. '   ' → logprob: -17.625104904174805

Token 467: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9235289692878723
    2. '=' → logprob: -1.0485289096832275
    3. ' =' → logprob: -1.4235289096832275
    4. ']=' → logprob: -4.548529148101807
    5. ' ]' → logprob: -7.673529148101807
    6. ')' → logprob: -7.673529148101807
    7. '               ' → logprob: -10.923528671264648
    8. '           ' → logprob: -11.423528671264648
    9. ')=' → logprob: -11.548528671264648
    10. ',' → logprob: -12.048528671264648

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141392946243286
    2. ' =' → logprob: -1.701413869857788
    3. ',' → logprob: -15.951414108276367
    4. '           ' → logprob: -16.201414108276367
    5. '=
' → logprob: -16.201414108276367
    6. '               ' → logprob: -16.451414108276367
    7. ']=' → logprob: -16.826414108276367
    8. '[' → logprob: -17.076414108276367
    9. '=

' → logprob: -17.076414108276367
    10. '＝' → logprob: -17.326414108276367

Token 469: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.001170225441455841
    2. ' cost' → logprob: -6.7511701583862305
    3. '_cost' → logprob: -20.376171112060547
    4. '(cost' → logprob: -20.376171112060547
    5. 'Cost' → logprob: -21.126171112060547
    6. 'code' → logprob: -21.501171112060547
    7. '   ' → logprob: -21.751171112060547
    8. '0' → logprob: -22.876171112060547
    9. '               ' → logprob: -22.876171112060547
    10. '           ' → logprob: -23.251171112060547

Token 470: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015943869948387146
    2. ',' → logprob: -9.12515926361084
    3. '           ' → logprob: -11.12515926361084
    4. '<|end|>' → logprob: -11.25015926361084
    5. '                   ' → logprob: -12.12515926361084
    6. '              ' → logprob: -12.37515926361084
    7. '			' → logprob: -13.00015926361084
    8. ',
' → logprob: -13.12515926361084
    9. '                
' → logprob: -13.12515926361084
    10. '                ' → logprob: -13.37515926361084

Token 471: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004428243264555931
    2. ',' → logprob: -8.500442504882812
    3. 'heap' → logprob: -8.750442504882812
    4. ' heap' → logprob: -11.000442504882812
    5. '```' → logprob: -11.250442504882812
    6. '                
' → logprob: -11.375442504882812
    7. '			' → logprob: -11.500442504882812
    8. '(heap' → logprob: -11.875442504882812
    9. '              ' → logprob: -12.250442504882812
    10. '<|end|>' → logprob: -12.625442504882812

Token 472: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.009184197522699833
    2. '               ' → logprob: -5.00918436050415
    3. ' heap' → logprob: -6.00918436050415
    4. '                   ' → logprob: -12.134183883666992
    5. '           ' → logprob: -13.509183883666992
    6. '```' → logprob: -13.884183883666992
    7. '(heap' → logprob: -14.509183883666992
    8. 'he' → logprob: -15.009183883666992
    9. '   ' → logprob: -15.134183883666992
    10. '.heap' → logprob: -15.384183883666992

Token 473: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.5577775128767826e-06
    2. 'p' → logprob: -13.250005722045898
    3. 'push' → logprob: -13.250005722045898
    4. '.he' → logprob: -13.750005722045898
    5. '.push' → logprob: -14.625005722045898
    6. '```' → logprob: -15.375005722045898
    7. '_push' → logprob: -16.5000057220459
    8. 'app' → logprob: -16.6250057220459
    9. 'h' → logprob: -17.1250057220459
    10. 'he' → logprob: -17.3750057220459

Token 474: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.025566406548023224
    2. 'q' → logprob: -3.900566339492798
    3. 'p' → logprob: -6.025566577911377
    4. 'push' → logprob: -6.525566577911377
    5. 'he' → logprob: -7.275566577911377
    6. '.push' → logprob: -8.775566101074219
    7. 'app' → logprob: -9.150566101074219
    8. 'ush' → logprob: -9.525566101074219
    9. '```' → logprob: -10.025566101074219
    10. 'h' → logprob: -11.150566101074219

Token 475: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.79811754100956e-05
    2. 'ap' → logprob: -10.375038146972656
    3. 'pp' → logprob: -12.125038146972656
    4. 'p' → logprob: -14.375038146972656
    5. 'q' → logprob: -14.500038146972656
    6. 'op' → logprob: -15.875038146972656
    7. 'push' → logprob: -16.875038146972656
    8. 'a' → logprob: -17.875038146972656
    9. 'appe' → logprob: -18.000038146972656
    10. 'appen' → logprob: -18.250038146972656

Token 476: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.029796656221151352
    2. 'op' → logprob: -3.529796600341797
    3. 'p' → logprob: -11.029796600341797
    4. 'q' → logprob: -11.904796600341797
    5. 'push' → logprob: -11.904796600341797
    6. 'ap' → logprob: -12.154796600341797
    7. 'sh' → logprob: -12.779796600341797
    8. 'app' → logprob: -13.779796600341797
    9. 'up' → logprob: -14.029796600341797
    10. 'h' → logprob: -14.279796600341797

Token 477: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. '((' → logprob: -16.625003814697266
    4. 'h' → logprob: -18.500003814697266
    5. '(heap' → logprob: -19.250003814697266
    6. '(
' → logprob: -19.875003814697266
    7. '(q' → logprob: -20.250003814697266
    8. ' (' → logprob: -20.875003814697266
    9. '(edges' → logprob: -21.375003814697266
    10. '(t' → logprob: -21.375003814697266

Token 478: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.339278580620885e-06
    2. '(h' → logprob: -13.875001907348633
    3. '(q' → logprob: -14.625001907348633
    4. 'qh' → logprob: -15.375001907348633
    5. 'c' → logprob: -15.875001907348633
    6. 'hq' → logprob: -16.375001907348633
    7. 'h' → logprob: -16.500001907348633
    8. 'p' → logprob: -16.500001907348633
    9. '(' → logprob: -16.750001907348633
    10. ')' → logprob: -17.000001907348633

Token 479: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.009549242444336414
    2. '(' → logprob: -5.009549140930176
    3. '((' → logprob: -6.009549140930176
    4. '(heap' → logprob: -8.509549140930176
    5. '(q' → logprob: -9.759549140930176
    6. ')' → logprob: -10.384549140930176
    7. ',' → logprob: -10.759549140930176
    8. '   ' → logprob: -10.884549140930176
    9. ' (' → logprob: -11.134549140930176
    10. '(
' → logprob: -12.009549140930176

Token 480: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6938254237174988
    2. '(cost' → logprob: -0.6938254237174988
    3. ' (' → logprob: -7.6938252449035645
    4. '(c' → logprob: -8.443825721740723
    5. '(ci' → logprob: -12.943825721740723
    6. '(co' → logprob: -13.443825721740723
    7. '   ' → logprob: -14.193825721740723
    8. '(cpu' → logprob: -14.318825721740723
    9. '(ct' → logprob: -15.193825721740723
    10. ' ' → logprob: -15.318825721740723

Token 481: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -6.301394023466855e-05
    2. '(cost' → logprob: -10.250062942504883
    3. ' cost' → logprob: -10.500062942504883
    4. '   ' → logprob: -18.500062942504883
    5. '0' → logprob: -20.375062942504883
    6. '_cost' → logprob: -21.250062942504883
    7. 'code' → logprob: -22.625062942504883
    8. '(' → logprob: -22.750062942504883
    9. 'cos' → logprob: -22.750062942504883
    10. 'Cost' → logprob: -22.750062942504883

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',
' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '       ' → logprob: -18.500001907348633
    6. '‌,' → logprob: -19.250001907348633
    7. ',c' → logprob: -19.375001907348633
    8. ',

' → logprob: -19.875001907348633
    9. ')' → logprob: -19.875001907348633
    10. '           ' → logprob: -20.125001907348633

Token 483: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.0040785204619169235
    2. ' city' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.629077911376953
    4. ' ' → logprob: -17.879077911376953
    5. '(city' → logprob: -18.504077911376953
    6. 'cit' → logprob: -20.004077911376953
    7. '.city' → logprob: -20.504077911376953
    8. 'ci' → logprob: -20.879077911376953
    9. '  ' → logprob: -20.879077911376953
    10. 'City' → logprob: -21.004077911376953

Token 484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.320199877838604e-07
    2. ' ,' → logprob: -15.375
    3. 'cap' → logprob: -16.5
    4. '(cap' → logprob: -16.875
    5. ',
' → logprob: -17.5
    6. ',c' → logprob: -20.125
    7. '_cap' → logprob: -20.375
    8. ' cap' → logprob: -20.375
    9. '‌,' → logprob: -20.5
    10. '```' → logprob: -21.0

Token 485: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.00012368128227535635
    2. ' cap' → logprob: -9.000123977661133
    3. ' ' → logprob: -16.375123977661133
    4. '   ' → logprob: -16.875123977661133
    5. '  ' → logprob: -17.875123977661133
    6. '(cap' → logprob: -18.000123977661133
    7. 'capac' → logprob: -19.375123977661133
    8. '_cap' → logprob: -19.750123977661133
    9. 'Cap' → logprob: -20.125123977661133
    10. '-cap' → logprob: -20.375123977661133

Token 486: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.9266199160483666e-05
    2. '))
' → logprob: -11.125019073486328
    3. ')' → logprob: -12.625019073486328
    4. ' ))' → logprob: -14.125019073486328
    5. ')))' → logprob: -14.750019073486328
    6. '))

' → logprob: -16.500019073486328
    7. '   ' → logprob: -17.625019073486328
    8. '));' → logprob: -18.250019073486328
    9. '))
' → logprob: -18.625019073486328
    10. '       ' → logprob: -19.250019073486328

Token 487: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37084129452705383
    2. '       ' → logprob: -1.7458412647247314
    3. ' for' → logprob: -3.1208412647247314
    4. 'for' → logprob: -3.2458412647247314
    5. '```' → logprob: -3.7458412647247314
    6. '<|end|>' → logprob: -4.2458415031433105
    7. '	for' → logprob: -4.9958415031433105
    8. ')' → logprob: -5.3708415031433105
    9. ',' → logprob: -6.8708415031433105
    10. '...' → logprob: -7.9958415031433105

Token 488: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013060812838375568
    2. ' for' → logprob: -4.513061046600342
    3. '       ' → logprob: -6.263061046600342
    4. '   ' → logprob: -9.513060569763184
    5. '	for' → logprob: -10.388060569763184
    6. '```' → logprob: -14.888060569763184
    7. ')' → logprob: -15.388060569763184
    8. '        
' → logprob: -16.0130615234375
    9. '<|end|>' → logprob: -17.2630615234375
    10. '_for' → logprob: -17.6380615234375

Token 489: ' Move' (ID: 25485)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.492120155598968e-05
    2. ' for' → logprob: -9.750064849853516
    3. '   ' → logprob: -12.000064849853516
    4. '       ' → logprob: -15.000064849853516
    5. '	for' → logprob: -17.250064849853516
    6. '    
' → logprob: -17.250064849853516
    7. '        
' → logprob: -17.500064849853516
    8. '```' → logprob: -17.750064849853516
    9. 'For' → logprob: -17.875064849853516
    10. '#' → logprob: -19.125064849853516

Token 490: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1293744146823883
    2. ' for' → logprob: -2.1293745040893555
    3. '   ' → logprob: -6.1293745040893555
    4. '       ' → logprob: -8.379374504089355
    5. '	for' → logprob: -10.379374504089355
    6. '  ' → logprob: -13.629374504089355
    7. ',' → logprob: -14.004374504089355
    8. '    ' → logprob: -14.629374504089355
    9. 'from' → logprob: -14.879374504089355
    10. ' ' → logprob: -15.254374504089355

Token 491: ' neighbors' (ID: 31655)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.05297271907329559
    2. 'next' → logprob: -4.052972793579102
    3. 'for' → logprob: -4.177972793579102
    4. 'adj' → logprob: -4.927972793579102
    5. 'neighbors' → logprob: -5.427972793579102
    6. 'nei' → logprob: -5.802972793579102
    7. ' neighbor' → logprob: -6.552972793579102
    8. 'ne' → logprob: -7.427972793579102
    9. 'nbr' → logprob: -7.552972793579102
    10. ' for' → logprob: -7.677972793579102

Token 492: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6623467803001404
    2. '       ' → logprob: -1.0373468399047852
    3. ' for' → logprob: -2.412346839904785
    4. '<|end|>' → logprob: -4.037346839904785
    5. 'for' → logprob: -5.162346839904785
    6. '	for' → logprob: -5.287346839904785
    7. '        
' → logprob: -5.537346839904785
    8. '    
' → logprob: -6.537346839904785
    9. '```' → logprob: -7.162346839904785
    10. ':' → logprob: -7.162346839904785

Token 493: ' fuel' (ID: 14827)
  Prédit: 'fuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -0.0019933474250137806
    2. ' fuel' → logprob: -6.251993179321289
    3. 'edges' → logprob: -10.501993179321289
    4. 'neighbors' → logprob: -11.001993179321289
    5. 'neighbor' → logprob: -11.751993179321289
    6. '   ' → logprob: -12.876993179321289
    7. ' edges' → logprob: -13.001993179321289
    8. '```' → logprob: -13.626993179321289
    9. 'fu' → logprob: -14.001993179321289
    10. ' ' → logprob: -14.126993179321289

Token 494: ' allows' (ID: 7927)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.45258358120918274
    2. '>=' → logprob: -1.5775835514068604
    3. ' >=' → logprob: -2.3275835514068604
    4. ' >' → logprob: -2.8275835514068604
    5. '   ' → logprob: -7.7025837898254395
    6. '-' → logprob: -8.077583312988281
    7. '≥' → logprob: -10.452583312988281
    8. ' -' → logprob: -11.702583312988281
    9. ' ' → logprob: -11.952583312988281
    10. '       ' → logprob: -12.202583312988281

Token 495: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04459052160382271
    2. ' for' → logprob: -3.794590473175049
    3. '   ' → logprob: -4.169590473175049
    4. '<|end|>' → logprob: -6.294590473175049
    5. '	for' → logprob: -6.794590473175049
    6. '        
' → logprob: -7.044590473175049
    7. 'for' → logprob: -7.419590473175049
    8. '	' → logprob: -8.294590950012207
    9. '	   ' → logprob: -9.294590950012207
    10. ',' → logprob: -9.419590950012207

Token 496: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9258511662483215
    2. ' for' → logprob: -0.9258511662483215
    3. '       ' → logprob: -1.9258511066436768
    4. '<|end|>' → logprob: -3.5508511066436768
    5. 'for' → logprob: -4.175851345062256
    6. '```' → logprob: -4.925851345062256
    7. ')' → logprob: -6.050851345062256
    8. ' 
' → logprob: -6.800851345062256
    9. '	for' → logprob: -7.175851345062256
    10. '        
' → logprob: -7.425851345062256

Token 497: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3178803324699402
    2. ' for' → logprob: -1.317880392074585
    3. '   ' → logprob: -6.067880153656006
    4. '       ' → logprob: -6.192880153656006
    5. '	for' → logprob: -8.317880630493164
    6. '```' → logprob: -12.817880630493164
    7. '        
' → logprob: -15.192880630493164
    8. '    ' → logprob: -15.442880630493164
    9. '    
' → logprob: -15.567880630493164
    10. '<|end|>' → logprob: -15.942880630493164

Token 498: ' nxt' (ID: 160200)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.6636105179786682
    2. 'nid' → logprob: -1.4136104583740234
    3. 'nei' → logprob: -1.6636104583740234
    4. 'nbr' → logprob: -3.7886104583740234
    5. '(ne' → logprob: -4.538610458374023
    6. 'n' → logprob: -5.038610458374023
    7. 'ne' → logprob: -5.538610458374023
    8. 'next' → logprob: -5.663610458374023
    9. 'to' → logprob: -6.288610458374023
    10. '(n' → logprob: -7.038610458374023

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037263904232531786
    2. '_,' → logprob: -8.125372886657715
    3. '_city' → logprob: -10.875372886657715
    4. ' ,' → logprob: -11.125372886657715
    5. ',n' → logprob: -11.250372886657715
    6. ',_' → logprob: -11.750372886657715
    7. 'n' → logprob: -12.250372886657715
    8. ',(' → logprob: -12.375372886657715
    9. '_id' → logprob: -12.625372886657715
    10. 'city' → logprob: -12.750372886657715

Token 500: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0018961521564051509
    2. ' d' → logprob: -6.626896381378174
    3. 'dist' → logprob: -8.126895904541016
    4. 'distance' → logprob: -8.251895904541016
    5. 'w' → logprob: -12.126895904541016
    6. 'cost' → logprob: -12.876895904541016
    7. 'weight' → logprob: -14.126895904541016
    8. ' dist' → logprob: -14.251895904541016
    9. '	d' → logprob: -14.376895904541016
    10. ')d' → logprob: -14.501895904541016

Token 501: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003624308155849576
    2. 'in' → logprob: -5.628624439239502
    3. 'istance' → logprob: -11.753623962402344
    4. ' ' → logprob: -12.378623962402344
    5. ',' → logprob: -13.628623962402344
    6. 'd' → logprob: -13.628623962402344
    7. '<|end|>' → logprob: -13.628623962402344
    8. ')' → logprob: -14.128623962402344
    9. '	in' → logprob: -14.128623962402344
    10. '```' → logprob: -14.253623962402344

Token 502: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.251935213804245
    2. ' edges' → logprob: -1.5019352436065674
    3. '(edges' → logprob: -12.501935005187988
    4. '_edges' → logprob: -14.001935005187988
    5. '.edges' → logprob: -14.251935005187988
    6. ' ' → logprob: -14.376935005187988
    7. '   ' → logprob: -16.501935958862305
    8. '
' → logprob: -16.876935958862305
    9. '```' → logprob: -17.001935958862305
    10. 'spaces' → logprob: -17.126935958862305

Token 503: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. 'city' → logprob: -14.750000953674316
    3. '(city' → logprob: -17.125
    4. '[n' → logprob: -17.25
    5. '[c' → logprob: -17.75
    6. ' [' → logprob: -17.75
    7. '[
' → logprob: -18.375
    8. '```' → logprob: -18.75
    9. 'n' → logprob: -18.875
    10. '   ' → logprob: -19.5

Token 504: 'city' (ID: 17500)
  Prédit: 'city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -1.1160349458805285e-05
    2. ' city' → logprob: -11.625011444091797
    3. '[' → logprob: -13.500011444091797
    4. '(city' → logprob: -14.500011444091797
    5. '   ' → logprob: -16.250011444091797
    6. '.city' → logprob: -16.625011444091797
    7. '
' → logprob: -17.875011444091797
    8. '_city' → logprob: -18.000011444091797
    9. ' ' → logprob: -18.250011444091797
    10. '```' → logprob: -18.500011444091797

Token 505: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3835328221321106
    2. '):' → logprob: -1.5085327625274658
    3. ']:
' → logprob: -3.383532762527466
    4. ':' → logprob: -3.508532762527466
    5. '):
' → logprob: -3.883532762527466
    6. '       ' → logprob: -4.633533000946045
    7. ']' → logprob: -6.883533000946045
    8. '   ' → logprob: -7.258533000946045
    9. ':
' → logprob: -7.633533000946045
    10. '}:' → logprob: -8.383532524108887

Token 506: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4233984053134918
    2. '           ' → logprob: -1.6733983755111694
    3. 'if' (adapté à ' if') → logprob: -2.298398494720459
    4. '       ' → logprob: -3.673398494720459
    5. ' ' → logprob: -4.548398494720459
    6. '<|end|>' → logprob: -5.173398494720459
    7. ' 
' → logprob: -5.673398494720459
    8. '        ' → logprob: -6.048398494720459
    9. '               ' → logprob: -6.048398494720459
    10. '    ' → logprob: -6.673398494720459

Token 508: ' d' (ID: 272)
  Prédit: 'fuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -0.3159900903701782
    2. ' fuel' → logprob: -1.3159900903701782
    3. 'd' → logprob: -6.190989971160889
    4. ' d' → logprob: -7.440989971160889
    5. 'f' → logprob: -10.190990447998047
    6. 'fu' → logprob: -11.065990447998047
    7. ' ' → logprob: -11.440990447998047
    8. ' ' → logprob: -11.565990447998047
    9. '   ' → logprob: -12.315990447998047
    10. 'Fuel' → logprob: -12.815990447998047

Token 509: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.28115665912628174
    2. '<=' → logprob: -1.4061566591262817
    3. '+' → logprob: -13.656156539916992
    4. ')<=' → logprob: -14.031156539916992
    5. '[' → logprob: -14.281156539916992
    6. '=' → logprob: -14.531156539916992
    7. ']<=' → logprob: -14.656156539916992
    8. '<' → logprob: -14.906156539916992
    9. ' ≤' → logprob: -15.031156539916992
    10. '≤' → logprob: -15.031156539916992

Token 510: ' fuel' (ID: 14827)
  Prédit: 'fuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -0.16023002564907074
    2. ' fuel' → logprob: -1.910230040550232
    3. 'f' → logprob: -12.910229682922363
    4. 'fu' → logprob: -13.285229682922363
    5. ' ' → logprob: -14.535229682922363
    6. 'Fuel' → logprob: -14.785229682922363
    7. ' ' → logprob: -14.785229682922363
    8. '	f' → logprob: -16.66023063659668
    9. '```' → logprob: -16.66023063659668
    10. '0' → logprob: -17.28523063659668

Token 511: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1777191311120987
    2. ' and' → logprob: -1.9277191162109375
    3. ':
' → logprob: -4.3027191162109375
    4. '           ' → logprob: -6.1777191162109375
    5. '               ' → logprob: -7.3027191162109375
    6. ',' → logprob: -7.3027191162109375
    7. 'and' → logprob: -9.177719116210938
    8. ' :' → logprob: -9.802719116210938
    9. '):' → logprob: -9.927719116210938
    10. '<|end|>' → logprob: -10.427719116210938

Token 512: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006854369770735502
    2. '           ' → logprob: -5.63185453414917
    3. '<|end|>' → logprob: -6.63185453414917
    4. ':' → logprob: -7.38185453414917
    5. ',' → logprob: -7.75685453414917
    6. ' ' → logprob: -8.881854057312012
    7. '                
' → logprob: -8.881854057312012
    8. ')' → logprob: -9.631854057312012
    9. ' ' → logprob: -9.631854057312012
    10. '              ' → logprob: -9.881854057312012

Token 513: ' nf' (ID: 89636)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11398110538721085
    2. 'n' → logprob: -2.738981008529663
    3. ' new' → logprob: -3.738981008529663
    4. 'if' → logprob: -4.738981246948242
    5. 'next' → logprob: -5.863981246948242
    6. 'nd' → logprob: -6.238981246948242
    7. 'nc' → logprob: -6.363981246948242
    8. ' n' → logprob: -6.613981246948242
    9. ' if' → logprob: -6.863981246948242
    10. ' nd' → logprob: -6.863981246948242

Token 514: 'uel' (ID: 4619)
  Prédit: 'uel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.0005610156804323196
    2. '=' → logprob: -8.250560760498047
    3. ' =' → logprob: -8.750560760498047
    4. 'u' → logprob: -9.750560760498047
    5. 'ue' → logprob: -10.000560760498047
    6. ',' → logprob: -11.000560760498047
    7. 'fuel' → logprob: -12.000560760498047
    8. '-' → logprob: -12.875560760498047
    9. '   ' → logprob: -13.750560760498047
    10. '	' → logprob: -14.125560760498047

Token 515: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31342002749443054
    2. ' =' → logprob: -1.313420057296753
    3. ' -' → logprob: -9.188420295715332
    4. '-' → logprob: -10.063420295715332
    5. '=f' → logprob: -11.813420295715332
    6. ' ' → logprob: -12.438420295715332
    7. '=n' → logprob: -14.813420295715332
    8. '＝' → logprob: -15.063420295715332
    9. '[' → logprob: -15.313420295715332
    10. ',' → logprob: -15.313420295715332

Token 516: ' fuel' (ID: 14827)
  Prédit: 'fuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -0.03805101290345192
    2. ' fuel' → logprob: -3.288051128387451
    3. 'f' → logprob: -12.038050651550293
    4. 'fu' → logprob: -13.538050651550293
    5. '   ' → logprob: -13.663050651550293
    6. 'Fuel' → logprob: -14.663050651550293
    7. ' ' → logprob: -15.038050651550293
    8. 'food' → logprob: -16.66305160522461
    9. '	f' → logprob: -16.78805160522461
    10. 'fleet' → logprob: -16.91305160522461

Token 517: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6933375597000122
    2. ' -' → logprob: -0.6933375597000122
    3. '-d' → logprob: -8.568337440490723
    4. ' ' → logprob: -15.693337440490723
    5. '   ' → logprob: -16.81833839416504
    6. '-D' → logprob: -16.81833839416504
    7. ' ' → logprob: -17.69333839416504
    8. '-t' → logprob: -18.06833839416504
    9. '-u' → logprob: -18.06833839416504
    10. '−' → logprob: -18.19333839416504

Token 518: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0024756586644798517
    2. ' d' → logprob: -6.002475738525391
    3. ' ' → logprob: -18.75247573852539
    4. '	d' → logprob: -18.75247573852539
    5. '   ' → logprob: -19.25247573852539
    6. '_d' → logprob: -21.00247573852539
    7. '  ' → logprob: -21.62747573852539
    8. '```' → logprob: -21.75247573852539
    9. ')d' → logprob: -21.75247573852539
    10. '    ' → logprob: -21.87747573852539

Token 519: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03599987179040909
    2. ')' → logprob: -3.5359997749328613
    3. '           ' → logprob: -6.410999774932861
    4. '<|end|>' → logprob: -6.535999774932861
    5. '                ' → logprob: -7.410999774932861
    6. ',' → logprob: -7.535999774932861
    7. '                
' → logprob: -7.785999774932861
    8. '                   ' → logprob: -7.785999774932861
    9. '       ' → logprob: -7.910999774932861
    10. '              ' → logprob: -8.91100025177002

Token 520: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09300512075424194
    2. '<|end|>' → logprob: -2.8430051803588867
    3. ')' → logprob: -4.968005180358887
    4. '                
' → logprob: -5.343005180358887
    5. ',' → logprob: -5.468005180358887
    6. '
' → logprob: -5.593005180358887
    7. '<|end|>' → logprob: -6.343005180358887
    8. '                ' → logprob: -6.468005180358887
    9. ' 
' → logprob: -6.718005180358887
    10. '                   ' → logprob: -6.843005180358887

Token 521: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38297125697135925
    2. 'n' (adapté à ' n') → logprob: -1.6329712867736816
    3. 'new' → logprob: -2.3829712867736816
    4. 'nd' → logprob: -3.7579712867736816
    5. 'nc' → logprob: -5.507971286773682
    6. 'nt' → logprob: -6.757971286773682
    7. '               ' → logprob: -7.507971286773682
    8. ' if' → logprob: -7.882971286773682
    9. '           ' → logprob: -8.632970809936523
    10. '       ' → logprob: -8.757970809936523

Token 522: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.04503653198480606
    2. 'dist' → logprob: -3.420036554336548
    3. '_cost' → logprob: -4.920036315917969
    4. 'ext' → logprob: -6.795036315917969
    5. '_dist' → logprob: -7.170036315917969
    6. 'ew' → logprob: -7.170036315917969
    7. 'c' → logprob: -7.670036315917969
    8. '=' → logprob: -8.795036315917969
    9. 'city' → logprob: -9.045036315917969
    10. 'e' → logprob: -9.420036315917969

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07912386208772659
    2. '=' → logprob: -2.5791239738464355
    3. ',' → logprob: -8.579123497009277
    4. '+' → logprob: -10.954123497009277
    5. ' +' → logprob: -11.329123497009277
    6. ' ' → logprob: -11.454123497009277
    7. ')' → logprob: -13.204123497009277
    8. ' =
' → logprob: -13.829123497009277
    9. ' ,' → logprob: -14.454123497009277
    10. ' ' → logprob: -14.704123497009277

Token 524: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.023245595395565033
    2. ' cost' → logprob: -3.7732455730438232
    3. '   ' → logprob: -16.523244857788086
    4. '(cost' → logprob: -16.523244857788086
    5. ' ' → logprob: -17.773244857788086
    6. '_cost' → logprob: -19.023244857788086
    7. 'code' → logprob: -19.273244857788086
    8. '.cost' → logprob: -19.398244857788086
    9. 'Cost' → logprob: -20.023244857788086
    10. '    ' → logprob: -20.398244857788086

Token 525: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.161840558052063
    2. ' +' → logprob: -1.911840558052063
    3. '+n' → logprob: -6.536840438842773
    4. '+d' → logprob: -9.786840438842773
    5. '+
' → logprob: -9.786840438842773
    6. '<|end|>' → logprob: -10.911840438842773
    7. ' +
' → logprob: -11.911840438842773
    8. '   ' → logprob: -12.536840438842773
    9. '+c' → logprob: -13.036840438842773
    10. ')' → logprob: -13.036840438842773

Token 526: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004435105249285698
    2. '1' → logprob: -6.004435062408447
    3. ' d' → logprob: -6.254435062408447
    4. ' ' → logprob: -11.504435539245605
    5. '0' → logprob: -12.004435539245605
    6. 'n' → logprob: -12.504435539245605
    7. '10' → logprob: -13.129435539245605
    8. 'dist' → logprob: -13.129435539245605
    9. '100' → logprob: -13.254435539245605
    10. '(d' → logprob: -13.379435539245605

Token 527: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00034595211036503315
    2. ')' → logprob: -9.000346183776855
    3. '           ' → logprob: -9.625346183776855
    4. '<|end|>' → logprob: -10.375346183776855
    5. '                
' → logprob: -10.375346183776855
    6. '       ' → logprob: -10.625346183776855
    7. '
' → logprob: -10.750346183776855
    8. '              ' → logprob: -11.375346183776855
    9. '                ' → logprob: -12.250346183776855
    10. '                   ' → logprob: -12.500346183776855

Token 528: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00035631912760436535
    2. ' if' → logprob: -9.250356674194336
    3. '<|end|>' → logprob: -9.250356674194336
    4. '                
' → logprob: -9.625356674194336
    5. '           ' → logprob: -10.750356674194336
    6. ')' → logprob: -11.125356674194336
    7. 'if' → logprob: -11.500356674194336
    8. '              ' → logprob: -11.500356674194336
    9. '       ' → logprob: -11.500356674194336
    10. '```' → logprob: -11.750356674194336

Token 529: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004997378680855036
    2. ' if' → logprob: -5.504997253417969
    3. '               ' → logprob: -7.004997253417969
    4. '           ' → logprob: -11.504997253417969
    5. '       ' → logprob: -14.004997253417969
    6. '	if' → logprob: -15.879997253417969
    7. '                   ' → logprob: -16.62999725341797
    8. '   ' → logprob: -16.75499725341797
    9. '              ' → logprob: -17.00499725341797
    10. '```' → logprob: -17.12999725341797

Token 530: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6420391201972961
    2. 'dist' → logprob: -0.7670391201972961
    3. ' n' → logprob: -5.3920392990112305
    4. 'n' → logprob: -5.3920392990112305
    5. 'nc' → logprob: -9.01703929901123
    6. '	dist' → logprob: -9.64203929901123
    7. '   ' → logprob: -10.26703929901123
    8. ' nc' → logprob: -10.89203929901123
    9. '(dist' → logprob: -11.76703929901123
    10. ' ' → logprob: -12.01703929901123

Token 531: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001319063303526491
    2. '[n' → logprob: -9.000131607055664
    3. 'n' → logprob: -12.125131607055664
    4. 'city' → logprob: -13.125131607055664
    5. '[next' → logprob: -14.250131607055664
    6. '```' → logprob: -17.000131607055664
    7. '[
' → logprob: -17.250131607055664
    8. ' [' → logprob: -17.375131607055664
    9. '(city' → logprob: -17.500131607055664
    10. '[now' → logprob: -17.750131607055664

Token 532: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.10793699324131012
    2. 'x' → logprob: -2.4829370975494385
    3. '[' → logprob: -4.232936859130859
    4. 'ext' → logprob: -5.857936859130859
    5. 't' → logprob: -6.857936859130859
    6. 'city' → logprob: -8.98293685913086
    7. '[next' → logprob: -9.35793685913086
    8. '```' → logprob: -9.85793685913086
    9. '[n' → logprob: -9.98293685913086
    10. 'ft' → logprob: -10.85793685913086

Token 533: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.14281447231769562
    2. '][' → logprob: -2.0178143978118896
    3. '[' → logprob: -9.142814636230469
    4. ']' → logprob: -11.017814636230469
    5. 'n' → logprob: -13.142814636230469
    6. '"][' → logprob: -13.142814636230469
    7. '```' → logprob: -13.267814636230469
    8. '>[' → logprob: -13.642814636230469
    9. ']][' → logprob: -13.642814636230469
    10. '	n' → logprob: -13.767814636230469

Token 534: 'nf' (ID: 51054)
  Prédit: 'nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -1.259079363080673e-05
    2. 'n' → logprob: -11.875012397766113
    3. ' nf' → logprob: -12.250012397766113
    4. '_nf' → logprob: -14.875012397766113
    5. '[n' → logprob: -16.00001335144043
    6. 'fuel' → logprob: -16.75001335144043
    7. 'nof' → logprob: -17.25001335144043
    8. '   ' → logprob: -17.25001335144043
    9. '
' → logprob: -17.37501335144043
    10. '```' → logprob: -17.50001335144043

Token 535: 'uel' (ID: 4619)
  Prédit: 'uel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.00202880403958261
    2. 'fuel' → logprob: -6.377028942108154
    3. 'el' → logprob: -8.877028465270996
    4. '```' → logprob: -9.502028465270996
    5. 'u' → logprob: -10.002028465270996
    6. 'ul' → logprob: -12.002028465270996
    7. '[' → logprob: -12.127028465270996
    8. '   ' → logprob: -12.377028465270996
    9. '#' → logprob: -12.689528465270996
    10. 'iel' → logprob: -13.002028465270996

Token 536: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8410581946372986
    2. '>' → logprob: -1.0910582542419434
    3. ']' → logprob: -1.4660582542419434
    4. ']>' → logprob: -6.341058254241943
    5. ' ]' → logprob: -8.341057777404785
    6. '[' → logprob: -10.591057777404785
    7. ' ' → logprob: -11.216057777404785
    8. '">' → logprob: -12.341057777404785
    9. '   ' → logprob: -13.091057777404785
    10. '>]' → logprob: -13.216057777404785

Token 537: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2813226580619812
    2. ' >' → logprob: -1.406322717666626
    3. '[' → logprob: -8.781322479248047
    4. ' ' → logprob: -12.406322479248047
    5. '   ' → logprob: -12.531322479248047
    6. '">' → logprob: -13.156322479248047
    7. '[n' → logprob: -13.406322479248047
    8. '>[' → logprob: -13.531322479248047
    9. ']' → logprob: -13.656322479248047
    10. ']>' → logprob: -14.406322479248047

Token 538: ' n' (ID: 297)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.002286098897457123
    2. ' n' → logprob: -6.127285957336426
    3. 'n' → logprob: -9.377285957336426
    4. ' nc' → logprob: -11.127285957336426
    5. 'cost' → logprob: -14.252285957336426
    6. '
' → logprob: -15.377285957336426
    7. 'ncmp' → logprob: -15.877285957336426
    8. '   ' → logprob: -16.002286911010742
    9. '	n' → logprob: -16.377286911010742
    10. '```' → logprob: -16.502286911010742

Token 539: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -4.620622712536715e-05
    2. '_cost' → logprob: -10.750045776367188
    3. ' cost' → logprob: -11.000045776367188
    4. 'Cost' → logprob: -13.500045776367188
    5. '-cost' → logprob: -13.750045776367188
    6. '(cost' → logprob: -13.750045776367188
    7. 'dist' → logprob: -14.000045776367188
    8. '.cost' → logprob: -14.375045776367188
    9. 'cast' → logprob: -15.125045776367188
    10. '```' → logprob: -15.125045776367188

Token 540: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01303363312035799
    2. ':
' → logprob: -4.638033866882324
    3. '):' → logprob: -6.513033866882324
    4. '               ' → logprob: -7.013033866882324
    5. '                   ' → logprob: -8.513033866882324
    6. ')' → logprob: -8.513033866882324
    7. '):
' → logprob: -8.763033866882324
    8. '<|end|>' → logprob: -9.388033866882324
    9. '                           ' → logprob: -9.888033866882324
    10. '           ' → logprob: -10.263033866882324

Token 541: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06770646572113037
    2. '               ' → logprob: -2.81770658493042
    3. '                       ' → logprob: -6.06770658493042
    4. '                           ' → logprob: -6.31770658493042
    5. '                               ' → logprob: -7.69270658493042
    6. '           ' → logprob: -8.067706108093262
    7. '<|end|>' → logprob: -8.067706108093262
    8. '                ' → logprob: -9.317706108093262
    9. '```' → logprob: -9.942706108093262
    10. '                  ' → logprob: -10.192706108093262

Token 542: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.16271400451660156
    2. 'dist' (adapté à ' dist') → logprob: -1.9127140045166016
    3. '                   ' → logprob: -6.287714004516602
    4. '                       ' → logprob: -7.412714004516602
    5. '```' → logprob: -12.162714004516602
    6. '               ' → logprob: -12.287714004516602
    7. '                    ' → logprob: -12.412714004516602
    8. '                           ' → logprob: -12.662714004516602
    9. '                               ' → logprob: -12.787714004516602
    10. '	dist' → logprob: -13.412714004516602

Token 543: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.12500286102295
    3. 'n' → logprob: -15.62500286102295
    4. '][' → logprob: -16.500001907348633
    5. '```' → logprob: -16.750001907348633
    6. '[next' → logprob: -17.000001907348633
    7. ' [' → logprob: -17.375001907348633
    8. '[
' → logprob: -17.750001907348633
    9. '[x' → logprob: -18.250001907348633
    10. '[node' → logprob: -18.500001907348633

Token 544: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0023227219935506582
    2. '[n' → logprob: -6.127322673797607
    3. 'x' → logprob: -9.002323150634766
    4. 'n' → logprob: -12.502323150634766
    5. '```' → logprob: -12.627323150634766
    6. '[x' → logprob: -12.752323150634766
    7. '[' → logprob: -13.002323150634766
    8. '   ' → logprob: -14.252323150634766
    9. '][' → logprob: -14.752323150634766
    10. 'xn' → logprob: -14.877323150634766

Token 545: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.002925183391198516
    2. '][' → logprob: -5.877925395965576
    3. '[' → logprob: -9.127924919128418
    4. ']' → logprob: -13.127924919128418
    5. '[next' → logprob: -13.377924919128418
    6. '```' → logprob: -13.502924919128418
    7. '[][' → logprob: -13.627924919128418
    8. 'n' → logprob: -14.127924919128418
    9. '   ' → logprob: -14.377924919128418
    10. '           ' → logprob: -15.002924919128418

Token 546: 'nf' (ID: 51054)
  Prédit: 'nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.002324744826182723
    2. 'n' → logprob: -6.12732458114624
    3. '[n' → logprob: -9.127325057983398
    4. 'fuel' → logprob: -11.127325057983398
    5. ' nf' → logprob: -11.877325057983398
    6. '(n' → logprob: -13.002325057983398
    7. 'nx' → logprob: -13.752325057983398
    8. 'dist' → logprob: -14.002325057983398
    9. '   ' → logprob: -14.002325057983398
    10. '_nf' → logprob: -14.627325057983398

Token 547: 'uel' (ID: 4619)
  Prédit: 'uel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.053644634783267975
    2. 'el' → logprob: -3.6786446571350098
    3. '[n' → logprob: -4.92864465713501
    4. 'fuel' → logprob: -4.92864465713501
    5. 'ul' → logprob: -5.55364465713501
    6. 'elf' → logprob: -6.05364465713501
    7. 'uf' → logprob: -6.30364465713501
    8. '[' → logprob: -6.55364465713501
    9. 'f' → logprob: -7.55364465713501
    10. '```' → logprob: -8.178644180297852

Token 548: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6417534351348877
    2. '=' → logprob: -1.1417534351348877
    3. ' =' → logprob: -2.1417534351348877
    4. ']=' → logprob: -3.5167534351348877
    5. '[n' → logprob: -5.141753196716309
    6. '[' → logprob: -7.016753196716309
    7. '                   ' → logprob: -8.641753196716309
    8. '=n' → logprob: -8.891753196716309
    9. ' ]' → logprob: -9.391753196716309
    10. '                       ' → logprob: -11.141753196716309

Token 549: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858794063329697
    2. ' =' → logprob: -3.0485880374908447
    3. '=n' → logprob: -15.548587799072266
    4. '＝' → logprob: -15.923587799072266
    5. '[' → logprob: -16.423587799072266
    6. ']=' → logprob: -16.423587799072266
    7. '=
' → logprob: -16.673587799072266
    8. '=

' → logprob: -18.048587799072266
    9. '.=' → logprob: -18.673587799072266
    10. ')=' → logprob: -18.923587799072266

Token 550: ' n' (ID: 297)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.1129724457859993
    2. ' n' → logprob: -2.2379724979400635
    3. ' nc' → logprob: -9.487972259521484
    4. 'n' → logprob: -9.612972259521484
    5. 'cost' → logprob: -12.862972259521484
    6. 'nb' → logprob: -13.737972259521484
    7. 'NC' → logprob: -14.362972259521484
    8. '	n' → logprob: -14.362972259521484
    9. 'nk' → logprob: -14.612972259521484
    10. 'ns' → logprob: -14.987972259521484

Token 551: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.1008713702030946e-06
    2. ' cost' → logprob: -13.625001907348633
    3. '_cost' → logprob: -14.500001907348633
    4. 'c' → logprob: -15.750001907348633
    5. 'cos' → logprob: -16.375001907348633
    6. 'Cost' → logprob: -16.750001907348633
    7. 'ost' → logprob: -16.875001907348633
    8. '-cost' → logprob: -18.125001907348633
    9. 'cot' → logprob: -18.500001907348633
    10. '.cost' → logprob: -19.500001907348633

Token 552: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0032197798136621714
    2. '               ' → logprob: -6.1282196044921875
    3. '```' → logprob: -8.003219604492188
    4. '           ' → logprob: -9.003219604492188
    5. '                    
' → logprob: -9.378219604492188
    6. '<|end|>' → logprob: -9.503219604492188
    7. ')' → logprob: -9.753219604492188
    8. '       ' → logprob: -9.753219604492188
    9. '                  ' → logprob: -10.003219604492188
    10. '                       ' → logprob: -10.003219604492188

Token 553: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01118068490177393
    2. '               ' → logprob: -5.136180877685547
    3. '```' → logprob: -6.261180877685547
    4. '                    
' → logprob: -6.761180877685547
    5. '                       ' → logprob: -7.511180877685547
    6. '                    ' → logprob: -8.386180877685547
    7. 'heap' → logprob: -8.386180877685547
    8. '           ' → logprob: -9.011180877685547
    9. '                  ' → logprob: -9.136180877685547
    10. '(heap' → logprob: -9.136180877685547

Token 554: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -6.704273118884885e-07
    2. ' heap' → logprob: -14.500000953674316
    3. 'he' → logprob: -17.0
    4. '                   ' → logprob: -20.375
    5. 'heat' → logprob: -22.25
    6. '               ' → logprob: -23.0
    7. '(heap' → logprob: -23.0
    8. '```' → logprob: -23.125
    9. '           ' → logprob: -23.375
    10. '.heap' → logprob: -23.625

Token 555: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8444881536415778e-05
    2. 'p' → logprob: -10.500028610229492
    3. 'app' → logprob: -15.000028610229492
    4. 'h' → logprob: -16.375028610229492
    5. 'ush' → logprob: -16.375028610229492
    6. 'push' → logprob: -16.625028610229492
    7. 'u' → logprob: -16.750028610229492
    8. 'qu' → logprob: -17.125028610229492
    9. 'qq' → logprob: -17.500028610229492
    10. '[' → logprob: -18.000028610229492

Token 556: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.06547406315803528
    2. 'he' → logprob: -3.065474033355713
    3. 'ush' → logprob: -4.315474033355713
    4. 'q' → logprob: -5.940474033355713
    5. 'app' → logprob: -7.565474033355713
    6. 'push' → logprob: -9.190474510192871
    7. '_he' → logprob: -10.315474510192871
    8. 'p' → logprob: -10.815474510192871
    9. 'h' → logprob: -10.815474510192871
    10. 'heap' → logprob: -11.065474510192871

Token 557: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.007812097202986479
    2. 'pp' → logprob: -4.882812023162842
    3. 'ush' → logprob: -9.1328125
    4. 'push' → logprob: -10.2578125
    5. 'p' → logprob: -10.3828125
    6. 'q' → logprob: -11.1328125
    7. 'ap' → logprob: -11.8828125
    8. 'e' → logprob: -12.6328125
    9. 'he' → logprob: -13.1328125
    10. '[' → logprob: -13.7578125

Token 558: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00011212585377506912
    2. 'app' → logprob: -10.000112533569336
    3. 'op' → logprob: -10.500112533569336
    4. 'push' → logprob: -10.875112533569336
    5. 'p' → logprob: -11.625112533569336
    6. 'pp' → logprob: -12.125112533569336
    7. 'q' → logprob: -12.625112533569336
    8. 'sh' → logprob: -13.500112533569336
    9. 'e' → logprob: -15.250112533569336
    10. 'u' → logprob: -15.250112533569336

Token 559: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.320199877838604e-07
    2. 'h' → logprob: -15.5
    3. '(' → logprob: -15.75
    4. '(n' → logprob: -17.375
    5. '(q' → logprob: -17.625
    6. '(
' → logprob: -18.0
    7. '```' → logprob: -19.5
    8. '[h' → logprob: -19.75
    9. ' (' → logprob: -19.75
    10. ',h' → logprob: -19.875

Token 560: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0004842962371185422
    2. '(h' → logprob: -7.750484466552734
    3. 'hq' → logprob: -10.250484466552734
    4. '(q' → logprob: -11.875484466552734
    5. 'qh' → logprob: -12.125484466552734
    6. 'h' → logprob: -12.375484466552734
    7. 'sq' → logprob: -15.375484466552734
    8. 'qs' → logprob: -15.500484466552734
    9. '[h' → logprob: -15.875484466552734
    10. 'ql' → logprob: -16.375484466552734

Token 561: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.027225754223764e-05
    2. '(n' → logprob: -10.000060081481934
    3. ',h' → logprob: -12.000060081481934
    4. 'h' → logprob: -12.125060081481934
    5. '(' → logprob: -13.750060081481934
    6. '(q' → logprob: -14.625060081481934
    7. ',' → logprob: -14.625060081481934
    8. 'hq' → logprob: -15.250060081481934
    9. ' (' → logprob: -15.375060081481934
    10. ')' → logprob: -15.625060081481934

Token 562: ' (' (ID: 350)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.5762028694152832
    2. '(h' → logprob: -0.8262028694152832
    3. '(n' → logprob: -8.701202392578125
    4. ' (' → logprob: -9.701202392578125
    5. ' h' → logprob: -11.076202392578125
    6. 'hc' → logprob: -11.451202392578125
    7. 'h' → logprob: -12.451202392578125
    8. '(q' → logprob: -12.951202392578125
    9. '(' → logprob: -13.576202392578125
    10. '   ' → logprob: -14.326202392578125

Token 563: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.0371013842523098
    2. 'hc' → logprob: -4.4121012687683105
    3. '(n' → logprob: -4.5371012687683105
    4. 'hq' → logprob: -4.5371012687683105
    5. 'n' → logprob: -6.0371012687683105
    6. 'cost' → logprob: -8.412101745605469
    7. '(h' → logprob: -8.537101745605469
    8. '(cost' → logprob: -10.537101745605469
    9. 'qc' → logprob: -11.412101745605469
    10. '(' → logprob: -11.787101745605469

Token 564: 'ost' (ID: 564)
  Prédit: 'xt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.05349966138601303
    2. 't' → logprob: -3.553499698638916
    3. 'st' → logprob: -4.053499698638916
    4. 'n' → logprob: -6.053499698638916
    5. '(n' → logprob: -7.178499698638916
    6. 'tx' → logprob: -7.303499698638916
    7. 'ht' → logprob: -7.428499698638916
    8. '[n' → logprob: -8.053499221801758
    9. 'cost' → logprob: -8.178499221801758
    10. 'xn' → logprob: -8.303499221801758

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001941726659424603
    2. ',n' → logprob: -6.251941680908203
    3. '(n' → logprob: -11.501941680908203
    4. ' ,' → logprob: -13.501941680908203
    5. 'n' → logprob: -14.126941680908203
    6. ')' → logprob: -15.376941680908203
    7. ',
' → logprob: -15.376941680908203
    8. '),' → logprob: -16.501941680908203
    9. '‌,' → logprob: -16.751941680908203
    10. '(' → logprob: -17.251941680908203

Token 566: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25194355845451355
    2. ' nxt' → logprob: -1.501943588256836
    3. 'nx' → logprob: -12.376943588256836
    4. ' n' → logprob: -12.626943588256836
    5. '[n' → logprob: -12.751943588256836
    6. ' ' → logprob: -14.001943588256836
    7. '	n' → logprob: -14.001943588256836
    8. '(n' → logprob: -14.751943588256836
    9. ' nx' → logprob: -15.001943588256836
    10. '   ' → logprob: -15.251943588256836

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019331586081534624
    2. ',n' → logprob: -6.2519330978393555
    3. ' ,' → logprob: -12.751933097839355
    4. ',f' → logprob: -13.626933097839355
    5. '(n' → logprob: -15.626933097839355
    6. ',
' → logprob: -15.751933097839355
    7. '‌,' → logprob: -17.251934051513672
    8. ')' → logprob: -17.376934051513672
    9. 'n' → logprob: -17.501934051513672
    10. ',node' → logprob: -18.501934051513672

Token 568: ' nf' (ID: 89636)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.005238260608166456
    2. ' nf' → logprob: -5.255238056182861
    3. 'n' → logprob: -12.75523853302002
    4. '_nf' → logprob: -13.75523853302002
    5. ' ' → logprob: -15.63023853302002
    6. 'nm' → logprob: -16.380237579345703
    7. '   ' → logprob: -16.505237579345703
    8. 'nv' → logprob: -16.880237579345703
    9. 'nk' → logprob: -17.755237579345703
    10. 'nof' → logprob: -17.755237579345703

Token 569: 'uel' (ID: 4619)
  Prédit: 'uel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.0036997238639742136
    2. 'el' → logprob: -5.753699779510498
    3. 'u' → logprob: -8.37869930267334
    4. 'ul' → logprob: -8.62869930267334
    5. 'fuel' → logprob: -9.37869930267334
    6. '```' → logprob: -11.37869930267334
    7. '   ' → logprob: -13.25369930267334
    8. '`' → logprob: -13.50369930267334
    9. 'l' → logprob: -13.87869930267334
    10. '``' → logprob: -13.87869930267334

Token 570: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002181987656513229
    2. ')' → logprob: -8.875218391418457
    3. '))
' → logprob: -9.500218391418457
    4. ' ))' → logprob: -13.875218391418457
    5. ')))' → logprob: -14.000218391418457
    6. '                   ' → logprob: -14.250218391418457
    7. '               ' → logprob: -14.750218391418457
    8. '           ' → logprob: -15.625218391418457
    9. '   ' → logprob: -15.625218391418457
    10. '       ' → logprob: -16.12521743774414

Token 571: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0008005765848793089
    2. ' else' → logprob: -8.000800132751465
    3. '   ' → logprob: -8.250800132751465
    4. '```' → logprob: -8.625800132751465
    5. '<|end|>' → logprob: -11.125800132751465
    6. '	else' → logprob: -12.875800132751465
    7. '
' → logprob: -13.625800132751465
    8. 'elif' → logprob: -14.000800132751465
    9. '[' → logprob: -14.125800132751465
    10. '``' → logprob: -14.375800132751465

Token 572: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -5.7530574849806726e-05
    2. '   ' → logprob: -10.250057220458984
    3. ' else' → logprob: -10.750057220458984
    4. '```' → logprob: -15.000057220458984
    5. '	else' → logprob: -15.250057220458984
    6. '#else' → logprob: -17.625057220458984
    7. '_else' → logprob: -17.750057220458984
    8. 'elif' → logprob: -17.875057220458984
    9. 'continue' → logprob: -18.750057220458984
    10. 'Else' → logprob: -18.875057220458984

Token 573: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07291807979345322
    2. ':
' → logprob: -2.697918176651001
    3. '   ' → logprob: -5.947917938232422
    4. '       ' → logprob: -7.947917938232422
    5. '[' → logprob: -12.322917938232422
    6. '(' → logprob: -13.697917938232422
    7. ':

' → logprob: -13.822917938232422
    8. '=' → logprob: -14.322917938232422
    9. '():
' → logprob: -14.447917938232422
    10. '>' → logprob: -14.822917938232422

Token 574: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26059776544570923
    2. 'print' → logprob: -1.5105977058410645
    3. '       ' → logprob: -4.7605977058410645
    4. '```' → logprob: -10.510598182678223
    5. ' print' → logprob: -10.635598182678223
    6. '	print' → logprob: -11.135598182678223
    7. '           ' → logprob: -13.260598182678223
    8. '    
' → logprob: -14.510598182678223
    9. '<|end|>' → logprob: -14.885598182678223
    10. '        
' → logprob: -15.135598182678223

Token 575: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00027218335890211165
    2. '   ' → logprob: -8.250271797180176
    3. ' print' → logprob: -11.500271797180176
    4. '       ' → logprob: -14.500271797180176
    5. '	print' → logprob: -15.750271797180176
    6. '```' → logprob: -16.875272750854492
    7. ' ' → logprob: -19.125272750854492
    8. '    
' → logprob: -19.375272750854492
    9. '  ' → logprob: -19.875272750854492
    10. 'printf' → logprob: -20.000272750854492

Token 576: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005687602679245174
    2. '   ' → logprob: -7.500568866729736
    3. ' print' → logprob: -11.125568389892578
    4. '       ' → logprob: -14.625568389892578
    5. '	print' → logprob: -15.000568389892578
    6. '```' → logprob: -15.125568389892578
    7. ' ' → logprob: -18.625568389892578
    8. '#print' → logprob: -18.750568389892578
    9. 'printf' → logprob: -19.125568389892578
    10. '  ' → logprob: -19.375568389892578

Token 577: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.047704197466373444
    2. '   ' → logprob: -3.4227042198181152
    3. ' print' → logprob: -4.422704219818115
    4. '       ' → logprob: -7.047704219818115
    5. 't' → logprob: -7.297704219818115
    6. 'r' → logprob: -8.672703742980957
    7. 'n' → logprob: -9.797703742980957
    8. '  ' → logprob: -10.047703742980957
    9. '    ' → logprob: -10.922703742980957
    10. ' ' → logprob: -10.922703742980957

Token 578: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6190633773803711
    2. 'print' → logprob: -0.8690633773803711
    3. '       ' → logprob: -3.744063377380371
    4. '(' → logprob: -4.244063377380371
    5. '(print' → logprob: -6.119063377380371
    6. '(-' → logprob: -6.494063377380371
    7. '           ' → logprob: -8.869063377380371
    8. '```' → logprob: -9.369063377380371
    9. '    
' → logprob: -9.494063377380371
    10. ' print' → logprob: -9.744063377380371

Token 579: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025441132485866547
    2. '   ' → logprob: -3.7754411697387695
    3. ' print' → logprob: -6.1504411697387695
    4. '       ' → logprob: -9.90044116973877
    5. '```' → logprob: -11.77544116973877
    6. '	print' → logprob: -13.15044116973877
    7. ' ' → logprob: -14.90044116973877
    8. '           ' → logprob: -15.90044116973877
    9. '  ' → logprob: -15.90044116973877
    10. '``' → logprob: -16.025440216064453

Token 580: ' path' (ID: 3104)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.041289087384939194
    2. '-' → logprob: -4.41628885269165
    3. ' print' → logprob: -4.54128885269165
    4. '   ' → logprob: -4.79128885269165
    5. 'solution' → logprob: -5.16628885269165
    6. ' solution' → logprob: -6.91628885269165
    7. 'answer' → logprob: -7.16628885269165
    8. '-print' → logprob: -7.29128885269165
    9. ' -' → logprob: -7.66628885269165
    10. '    
' → logprob: -8.416289329528809

Token 581: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02106647379696369
    2. 'print' → logprob: -4.396066665649414
    3. '       ' → logprob: -4.771066665649414
    4. '-' → logprob: -10.771066665649414
    5. ' print' → logprob: -11.396066665649414
    6. '```' → logprob: -12.146066665649414
    7. '           ' → logprob: -12.396066665649414
    8. '    
' → logprob: -12.896066665649414
    9. '        
' → logprob: -14.021066665649414
    10. '	print' → logprob: -14.146066665649414

Token 582: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16118857264518738
    2. 'print' → logprob: -1.9111886024475098
    3. '```' → logprob: -7.28618860244751
    4. '       ' → logprob: -8.286188125610352
    5. ' print' → logprob: -11.036188125610352
    6. '	print' → logprob: -12.286188125610352
    7. '``' → logprob: -12.411188125610352
    8. '(print' → logprob: -14.036188125610352
    9. '           ' → logprob: -14.911188125610352
    10. '-' → logprob: -15.161188125610352

Token 583: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00021772195759695023
    2. '   ' → logprob: -8.50021743774414
    3. ' print' → logprob: -11.25021743774414
    4. '```' → logprob: -14.37521743774414
    5. '       ' → logprob: -14.50021743774414
    6. '	print' → logprob: -16.12521743774414
    7. '``' → logprob: -19.00021743774414
    8. ' ' → logprob: -19.37521743774414
    9. 'printf' → logprob: -19.62521743774414
    10. '           ' → logprob: -19.75021743774414

Token 584: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0001875671005109325
    2. '-' → logprob: -8.625187873840332
    3. '(' → logprob: -11.750187873840332
    4. ' (-' → logprob: -17.625186920166016
    5. ' -' → logprob: -17.750186920166016
    6. '("-' → logprob: -18.125186920166016
    7. '()-' → logprob: -18.125186920166016
    8. '(
' → logprob: -18.500186920166016
    9. '   ' → logprob: -19.000186920166016
    10. '('-' → logprob: -19.250186920166016

Token 585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.125
    3. ' -' → logprob: -18.75
    4. ' ' → logprob: -19.125
    5. '"' → logprob: -20.25
    6. '2' → logprob: -20.625
    7. ')' → logprob: -21.25
    8. 'inf' → logprob: -21.25
    9. '`' → logprob: -21.375
    10. 'float' → logprob: -21.5

Token 586: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -14.375001907348633
    3. '())' → logprob: -15.125001907348633
    4. ')}' → logprob: -15.625001907348633
    5. ' )' → logprob: -15.625001907348633
    6. '))' → logprob: -16.000001907348633
    7. ')`' → logprob: -16.250001907348633
    8. '   ' → logprob: -16.875001907348633
    9. '()' → logprob: -17.000001907348633
    10. ')}}' → logprob: -17.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 584
Tokens correctement prédits (1ère position, stricte): 226
Tokens correctement prédits (1ère position, avec adaptation): 248
Tokens correctement prédits (top 10): 469
Précision stricte (1ère position): 38.70%
Précision adaptée (1ère position): 42.47%
Précision (top 10): 80.31%
================================================================================
