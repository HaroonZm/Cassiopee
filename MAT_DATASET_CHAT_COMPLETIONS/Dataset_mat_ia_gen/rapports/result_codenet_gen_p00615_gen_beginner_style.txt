================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    if line == '':
        break
    n, m = map(int, line.split())
    if n == 0 and m == 0:
        break
    tl = list(map(int, input().split()))
    tr = list(map(int, input().split()))

    times = tl + tr
    times.sort()

    end_time = max(times)
    max_gap = times[0]  # gap from 0 to first passing time
    for i in range(1, len(times)):
        gap = times[i] - times[i-1]
        if gap > max_gap:
            max_gap = gap
    # gap from last passing time to end_time is zero, because end_time = max(times)
    print(max_gap)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19949382543563843
    2. '=' → logprob: -1.8244938850402832
    3. 's' → logprob: -4.699493885040283
    4. '.' → logprob: -5.824493885040283
    5. '.startswith' → logprob: -6.324493885040283
    6. '_' → logprob: -6.699493885040283
    7. '[' → logprob: -7.449493885040283
    8. '.readline' → logprob: -7.449493885040283
    9. '[:]' → logprob: -7.449493885040283
    10. '   ' → logprob: -7.574493885040283

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08899911493062973
    2. 'input' → logprob: -2.463999032974243
    3. ' ' → logprob: -10.963998794555664
    4. ' f' → logprob: -10.963998794555664
    5. ' file' → logprob: -11.588998794555664
    6. ' readline' → logprob: -12.213998794555664
    7. '=input' → logprob: -12.963998794555664
    8. 'file' → logprob: -12.963998794555664
    9. '(input' → logprob: -14.088998794555664
    10. 'f' → logprob: -14.338998794555664

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003016214817762375
    2. '('' → logprob: -6.378015995025635
    3. '()' → logprob: -7.003015995025635
    4. '("("' → logprob: -8.378016471862793
    5. ''' → logprob: -9.753016471862793
    6. '```' → logprob: -10.128016471862793
    7. ')' → logprob: -11.003016471862793
    8. '("")' → logprob: -11.628016471862793
    9. ''s' → logprob: -11.753016471862793
    10. '(
' → logprob: -12.253016471862793

Token 8: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5768733024597168
    2. ' ' → logprob: -1.7018733024597168
    3. '\n' → logprob: -2.201873302459717
    4. 'if' (adapté à ' if') → logprob: -2.701873302459717
    5. '   ' → logprob: -3.451873302459717
    6. '\r' → logprob: -4.076873302459717
    7. '    ' → logprob: -4.826873302459717
    8. '<|end|>' → logprob: -5.076873302459717
    9. '.' → logprob: -5.326873302459717
    10. '\' → logprob: -5.951873302459717

Token 10: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05100409686565399
    2. ' line' → logprob: -3.05100417137146
    3. ' ' → logprob: -6.551003932952881
    4. 'not' → logprob: -7.051003932952881
    5. 'line' → logprob: -9.426004409790039
    6. ' len' → logprob: -11.176004409790039
    7. '  ' → logprob: -11.676004409790039
    8. '<|end|>' → logprob: -12.301004409790039
    9. '    ' → logprob: -13.051004409790039
    10. ' lines' → logprob: -13.801004409790039

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11603689193725586
    2. '.startswith' → logprob: -3.116036891937256
    3. '.' → logprob: -3.616036891937256
    4. '==' → logprob: -3.866036891937256
    5. '.strip' → logprob: -4.116036891937256
    6. ' .' → logprob: -7.866036891937256
    7. '.endswith' → logprob: -8.866037368774414
    8. '.rstrip' → logprob: -9.241037368774414
    9. ' ' → logprob: -9.366037368774414
    10. '    ' → logprob: -9.366037368774414

Token 12: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6066620945930481
    2. '""' → logprob: -1.2316620349884033
    3. ''' → logprob: -2.2316620349884033
    4. '''' → logprob: -3.2316620349884033
    5. ' ""' → logprob: -4.606662273406982
    6. ' "' → logprob: -5.731662273406982
    7. ' ''' → logprob: -6.481662273406982
    8. ' '' → logprob: -7.231662273406982
    9. '"":' → logprob: -7.981662273406982
    10. ' ' → logprob: -9.106661796569824

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055797407403588295
    2. ' break' → logprob: -5.880579948425293
    3. '   ' → logprob: -6.380579948425293
    4. '    ' → logprob: -8.005579948425293
    5. '\n' → logprob: -8.130579948425293
    6. ':' → logprob: -9.505579948425293
    7. '        
' → logprob: -10.005579948425293
    8. ' ' → logprob: -10.130579948425293
    9. '      ' → logprob: -10.255579948425293
    10. '<|end|>' → logprob: -10.255579948425293

Token 14: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.07261449098587036
    2. '       ' → logprob: -3.3226144313812256
    3. 'break' (adapté à ' break') → logprob: -3.4476144313812256
    4. '   ' → logprob: -6.572614669799805
    5. '	break' → logprob: -7.697614669799805
    6. '\n' → logprob: -9.072614669799805
    7. '           ' → logprob: -9.697614669799805
    8. '_break' → logprob: -9.822614669799805
    9. 'Break' → logprob: -10.697614669799805
    10. ' ' → logprob: -10.822614669799805

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03491419181227684
    2. '    
' → logprob: -3.659914255142212
    3. '
' → logprob: -5.409914016723633
    4. 'print' → logprob: -7.034914016723633
    5. '       ' → logprob: -7.159914016723633
    6. '\n' → logprob: -7.159914016723633
    7. '        
' → logprob: -8.034914016723633
    8. '  
' → logprob: -8.284914016723633
    9. ')' → logprob: -8.659914016723633
    10. '```' → logprob: -8.909914016723633

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011047814972698689
    2. 'print' → logprob: -5.136047840118408
    3. '    
' → logprob: -6.136047840118408
    4. ' ' → logprob: -6.761047840118408
    5. '    ' → logprob: -7.636047840118408
    6. '\n' → logprob: -7.761047840118408
    7. ' print' → logprob: -8.51104736328125
    8. '  ' → logprob: -9.13604736328125
    9. ')' → logprob: -9.38604736328125
    10. '#' → logprob: -9.76104736328125

Token 17: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08425033092498779
    2. 'print' → logprob: -2.5842504501342773
    3. ' print' → logprob: -5.334250450134277
    4. '       ' → logprob: -8.209250450134277
    5. 'try' → logprob: -9.334250450134277
    6. '    ' → logprob: -10.334250450134277
    7. '```' → logprob: -10.459250450134277
    8. ' try' → logprob: -10.709250450134277
    9. ' if' → logprob: -11.084250450134277
    10. ' ' → logprob: -11.584250450134277

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38711243867874146
    2. '=' → logprob: -2.0121123790740967
    3. 'um' → logprob: -2.1371123790740967
    4. 'umber' → logprob: -3.0121123790740967
    5. '=int' → logprob: -4.762112617492676
    6. 'umbers' → logprob: -5.387112617492676
    7. ',' → logprob: -6.512112617492676
    8. ' ' → logprob: -7.137112617492676
    9. '   ' → logprob: -7.262112617492676
    10. '+' → logprob: -7.387112617492676

Token 19: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.0655635595321655
    2. 'm' → logprob: -1.6905635595321655
    3. ' line' → logprob: -1.8155635595321655
    4. ' ' → logprob: -2.690563678741455
    5. 's' → logprob: -2.690563678741455
    6. ' s' → logprob: -3.315563678741455
    7. ' =' → logprob: -3.565563678741455
    8. '=' → logprob: -3.690563678741455
    9. 'line' → logprob: -3.690563678741455
    10. ' k' → logprob: -4.065563678741455

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.035433828830718994
    2. '=' → logprob: -3.410433769226074
    3. ',' → logprob: -6.410433769226074
    4. ' ,' → logprob: -9.410433769226074
    5. ' ' → logprob: -10.035433769226074
    6. ')' → logprob: -11.535433769226074
    7. '  ' → logprob: -13.285433769226074
    8. ' =
' → logprob: -13.785433769226074
    9. '<|end|>' → logprob: -14.035433769226074
    10. '    ' → logprob: -14.660433769226074

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.09229817241430283
    2. ' line' → logprob: -2.4672982692718506
    3. 'map' → logprob: -5.9672980308532715
    4. 'line' → logprob: -7.3422980308532715
    5. ' [' → logprob: -9.84229850769043
    6. ' ' → logprob: -10.09229850769043
    7. ' list' → logprob: -11.34229850769043
    8. '[' → logprob: -11.84229850769043
    9. ' input' → logprob: -12.34229850769043
    10. ' m' → logprob: -12.59229850769043

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003962993621826172
    2. '(' → logprob: -5.753962993621826
    3. '(str' → logprob: -7.253962993621826
    4. '(lambda' → logprob: -9.878963470458984
    5. 'int' → logprob: -10.878963470458984
    6. '<int' → logprob: -13.003963470458984
    7. '[int' → logprob: -13.753963470458984
    8. '(input' → logprob: -13.878963470458984
    9. '(eval' → logprob: -14.378963470458984
    10. 'str' → logprob: -14.378963470458984

Token 23: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.11266201734542847
    2. ')' → logprob: -2.9876620769500732
    3. ',' → logprob: -3.1126620769500732
    4. '(' → logprob: -4.987661838531494
    5. '(input' → logprob: -5.737661838531494
    6. ',line' → logprob: -6.737661838531494
    7. ' line' → logprob: -8.862662315368652
    8. ',input' → logprob: -9.862662315368652
    9. '(n' → logprob: -9.987662315368652
    10. '=line' → logprob: -10.612662315368652

Token 24: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.12703940272331238
    2. 'line' → logprob: -2.1270394325256348
    3. ' input' → logprob: -10.002038955688477
    4. ')' → logprob: -10.627038955688477
    5. 'input' → logprob: -10.627038955688477
    6. '(line' → logprob: -11.377038955688477
    7. '	line' → logprob: -13.377038955688477
    8. ' ' → logprob: -13.877038955688477
    9. '[line' → logprob: -13.877038955688477
    10. ' )' → logprob: -14.252038955688477

Token 25: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.022308021783828735
    2. ')' → logprob: -4.397307872772217
    3. '.strip' → logprob: -4.897307872772217
    4. '.' → logprob: -6.897307872772217
    5. '.readline' → logprob: -7.272307872772217
    6. '().' → logprob: -8.147308349609375
    7. '.rstrip' → logprob: -8.897308349609375
    8. '   ' → logprob: -9.647308349609375
    9. ' .' → logprob: -10.397308349609375
    10. ').' → logprob: -11.272308349609375

Token 26: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5854732990264893
    2. '('' → logprob: -0.8354732990264893
    3. '()' → logprob: -4.71047306060791
    4. '(' → logprob: -8.71047306060791
    5. '()))' → logprob: -9.21047306060791
    6. ')' → logprob: -9.33547306060791
    7. '(','' → logprob: -9.58547306060791
    8. '("' → logprob: -10.96047306060791
    9. ' ())' → logprob: -10.96047306060791
    10. '())
' → logprob: -11.21047306060791

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09002871066331863
    2. '\n' → logprob: -3.965028762817383
    3. '<|end|>' → logprob: -4.590028762817383
    4. '    
' → logprob: -4.715028762817383
    5. ')' → logprob: -4.840028762817383
    6. ' ' → logprob: -4.840028762817383
    7. '[' → logprob: -5.340028762817383
    8. ':' → logprob: -5.340028762817383
    9. '\' → logprob: -5.840028762817383
    10. ',' → logprob: -5.965028762817383

Token 28: ' if' (ID: 538)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3192410469055176
    2. '   ' → logprob: -1.5692410469055176
    3. 'a' → logprob: -2.9442410469055176
    4. 'graph' → logprob: -3.4442410469055176
    5. 'data' → logprob: -3.5692410469055176
    6. '    
' → logprob: -3.6942410469055176
    7. ' ' → logprob: -3.6942410469055176
    8. 'dp' → logprob: -3.6942410469055176
    9. 'matrix' → logprob: -3.8192410469055176
    10. 'array' → logprob: -4.069241046905518

Token 29: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0015694992616772652
    2. ' m' → logprob: -7.1265692710876465
    3. 'n' → logprob: -7.2515692710876465
    4. ' ' → logprob: -10.751569747924805
    5. ' not' → logprob: -11.251569747924805
    6. ' ' → logprob: -11.751569747924805
    7. ' (' → logprob: -11.751569747924805
    8. 'm' → logprob: -13.251569747924805
    9. '(n' → logprob: -13.376569747924805
    10. ' nm' → logprob: -14.501569747924805

Token 30: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3579007387161255
    2. ' <' → logprob: -2.482900619506836
    3. ' ==' → logprob: -2.482900619506836
    4. ' ' → logprob: -3.357900619506836
    5. ' <=' → logprob: -3.482900619506836
    6. ' >=' → logprob: -3.607900619506836
    7. '>' → logprob: -3.982900619506836
    8. ' %' → logprob: -4.857900619506836
    9. '%' → logprob: -5.232900619506836
    10. '==' → logprob: -5.607900619506836

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08621247112751007
    2. ' ' → logprob: -2.586212396621704
    3. 'm' → logprob: -5.336212635040283
    4. ' m' → logprob: -6.086212635040283
    5. '1' → logprob: -8.586212158203125
    6. '   ' → logprob: -12.836212158203125
    7. '2' → logprob: -13.211212158203125
    8. '  ' → logprob: -13.211212158203125
    9. '-' → logprob: -13.273712158203125
    10. '10' → logprob: -13.836212158203125

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017222605645656586
    2. ' ' → logprob: -4.5172224044799805
    3. 'm' → logprob: -5.1422224044799805
    4. ' m' → logprob: -8.64222240447998
    5. '-' → logprob: -9.26722240447998
    6. '1' → logprob: -10.89222240447998
    7. ' -' → logprob: -11.76722240447998
    8. '   ' → logprob: -13.32972240447998
    9. '  ' → logprob: -13.39222240447998
    10. 'n' → logprob: -13.76722240447998

Token 33: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6507149934768677
    2. ' or' → logprob: -0.7757149934768677
    3. ':' → logprob: -4.525714874267578
    4. 'and' → logprob: -5.025714874267578
    5. ' ' → logprob: -7.900714874267578
    6. '<|end|>' → logprob: -9.775714874267578
    7. '   ' → logprob: -10.150714874267578
    8. 'or' → logprob: -10.275714874267578
    9. '    ' → logprob: -10.650714874267578
    10. '	and' → logprob: -11.900714874267578

Token 34: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.00593235157430172
    2. 'm' → logprob: -5.130932331085205
    3. ' ' → logprob: -13.630932807922363
    4. '    ' → logprob: -14.130932807922363
    5. '   ' → logprob: -14.505932807922363
    6. ' ' → logprob: -14.630932807922363
    7. '	m' → logprob: -14.630932807922363
    8. '&m' → logprob: -16.380931854248047
    9. '<|end|>' → logprob: -16.505931854248047
    10. '  ' → logprob: -16.818431854248047

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012689759023487568
    2. '==' → logprob: -5.387689590454102
    3. '<|end|>' → logprob: -5.512689590454102
    4. ' ' → logprob: -5.637689590454102
    5. '<|end|>' → logprob: -8.387689590454102
    6. '0' → logprob: -9.262689590454102
    7. '  ' → logprob: -10.137689590454102
    8. ' =' → logprob: -11.012689590454102
    9. ' ' → logprob: -11.137689590454102
    10. ')' → logprob: -11.262689590454102

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03364904224872589
    2. '0' → logprob: -3.40864896774292
    3. '<|end|>' → logprob: -13.283649444580078
    4. '  ' → logprob: -14.158649444580078
    5. ' ' → logprob: -14.846149444580078
    6. '<|end|>' → logprob: -15.096149444580078
    7. 's' → logprob: -16.721149444580078
    8. '=' → logprob: -16.783649444580078
    9. '   ' → logprob: -17.033649444580078
    10. '۰' → logprob: -17.783649444580078

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017031522002071142
    2. ' ' → logprob: -6.376703262329102
    3. '1' → logprob: -15.439203262329102
    4. '  ' → logprob: -15.501703262329102
    5. '   ' → logprob: -16.1267032623291
    6. ' ' → logprob: -16.3767032623291
    7. '۰' → logprob: -16.5642032623291
    8. '```' → logprob: -17.0017032623291
    9. ')' → logprob: -17.1892032623291
    10. 'o' → logprob: -17.6267032623291

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004460428317543119
    2. ':
' → logprob: -7.75044584274292
    3. '   ' → logprob: -11.500446319580078
    4. '       ' → logprob: -12.625446319580078
    5. ' :' → logprob: -13.875446319580078
    6. ':return' → logprob: -14.625446319580078
    7. '.' → logprob: -15.875446319580078
    8. '	break' → logprob: -16.750446319580078
    9. '):' → logprob: -17.000446319580078
    10. ',' → logprob: -17.250446319580078

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024307258427143097
    2. ':' → logprob: -3.7743072509765625
    3. '   ' → logprob: -7.3993072509765625
    4. ':
' → logprob: -7.8993072509765625
    5. '\n' → logprob: -11.024307250976562
    6. '	' → logprob: -11.274307250976562
    7. '\' → logprob: -12.399307250976562
    8. '    ' → logprob: -12.524307250976562
    9. '     ' → logprob: -12.524307250976562
    10. ' :' → logprob: -12.649307250976562

Token 40: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3142085671424866
    2. ' break' → logprob: -1.3142085075378418
    3. '   ' → logprob: -7.439208507537842
    4. 'break' (adapté à ' break') → logprob: -8.314208984375
    5. '	break' → logprob: -9.564208984375
    6. '           ' → logprob: -11.439208984375
    7. ' ' → logprob: -11.564208984375
    8. '    ' → logprob: -12.314208984375
    9. ' ' → logprob: -12.439208984375
    10. '\n' → logprob: -13.064208984375

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10383819788694382
    2. '    
' → logprob: -2.7288382053375244
    3. '\n' → logprob: -3.7288382053375244
    4. '
' → logprob: -5.228837966918945
    5. '\' → logprob: -6.353837966918945
    6. '```' → logprob: -7.478837966918945
    7. '   
' → logprob: -8.103837966918945
    8. '  
' → logprob: -8.353837966918945
    9. 'n' → logprob: -8.603837966918945
    10. ' 
' → logprob: -8.728837966918945

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014204525388777256
    2. '    
' → logprob: -5.014204502105713
    3. '\n' → logprob: -5.639204502105713
    4. '\' → logprob: -6.889204502105713
    5. '
' → logprob: -7.514204502105713
    6. '```' → logprob: -7.514204502105713
    7. '<|end|>' → logprob: -7.889204502105713
    8. '#' → logprob: -8.514204978942871
    9. '       ' → logprob: -8.639204978942871
    10. ':' → logprob: -8.764204978942871

Token 43: ' tl' (ID: 14348)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2121575027704239
    2. '[' → logprob: -2.5871574878692627
    3. ' ' → logprob: -2.9621574878692627
    4. '    ' → logprob: -4.337157726287842
    5. 'n' → logprob: -4.587157726287842
    6. '    
' → logprob: -4.837157726287842
    7. '\n' → logprob: -4.962157726287842
    8. ':' → logprob: -5.212157726287842
    9. '\' → logprob: -5.962157726287842
    10. '#' → logprob: -6.087157726287842

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.050449252128601
    2. 'ines' → logprob: -2.3004493713378906
    3. 'ine' → logprob: -2.3004493713378906
    4. '=' → logprob: -2.4254493713378906
    5. '=[]' → logprob: -2.5504493713378906
    6. 'e' → logprob: -2.9254493713378906
    7. 'i' → logprob: -3.1754493713378906
    8. 'ist' → logprob: -3.5504493713378906
    9. 'is' → logprob: -3.6754493713378906
    10. 'en' → logprob: -3.8004493713378906

Token 45: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.277933806180954
    2. '[]' → logprob: -2.0279338359832764
    3. ' [' → logprob: -2.5279338359832764
    4. ' list' → logprob: -4.027933597564697
    5. 'list' → logprob: -5.152933597564697
    6. '[' → logprob: -5.402933597564697
    7. '[list' → logprob: -7.027933597564697
    8. ' [[]' → logprob: -7.027933597564697
    9. '[n' → logprob: -7.527933597564697
    10. '[input' → logprob: -9.277934074401855

Token 46: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006082137580960989
    2. '(map' → logprob: -5.256082057952881
    3. '(range' → logprob: -7.506082057952881
    4. '(int' → logprob: -8.631082534790039
    5. '(
' → logprob: -10.256082534790039
    6. '(input' → logprob: -10.506082534790039
    7. '()' → logprob: -11.631082534790039
    8. '(list' → logprob: -11.631082534790039
    9. '(filter' → logprob: -12.131082534790039
    10. '([' → logprob: -12.631082534790039

Token 47: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023292647674679756
    2. '(' → logprob: -3.7732925415039062
    3. '(
' → logprob: -11.023292541503906
    4. 'int' → logprob: -11.523292541503906
    5. '<int' → logprob: -11.898292541503906
    6. '(lambda' → logprob: -12.273292541503906
    7. '[int' → logprob: -12.523292541503906
    8. ')' → logprob: -13.523292541503906
    9. ',int' → logprob: -13.773292541503906
    10. ' (' → logprob: -14.023292541503906

Token 48: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.29176658391952515
    2. '(' → logprob: -1.66676664352417
    3. ',input' → logprob: -3.04176664352417
    4. ',' → logprob: -4.16676664352417
    5. '(line' → logprob: -7.79176664352417
    6. '(
' → logprob: -8.666766166687012
    7. ')' → logprob: -9.166766166687012
    8. 'input' → logprob: -9.291766166687012
    9. '(),' → logprob: -9.666766166687012
    10. ' ,' → logprob: -10.541766166687012

Token 49: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5232794880867004
    2. 'input' → logprob: -0.8982794880867004
    3. ')' → logprob: -9.773279190063477
    4. '(input' → logprob: -10.023279190063477
    5. ',input' → logprob: -11.148279190063477
    6. '=input' → logprob: -11.773279190063477
    7. '[input' → logprob: -11.773279190063477
    8. 'line' → logprob: -12.273279190063477
    9. '	input' → logprob: -12.523279190063477
    10. 'range' → logprob: -12.898279190063477

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020580526324920356
    2. '()' → logprob: -8.500205993652344
    3. '()))' → logprob: -13.750205993652344
    4. '(' → logprob: -14.875205993652344
    5. '()
' → logprob: -15.125205993652344
    6. ' ().' → logprob: -15.375205993652344
    7. '())' → logprob: -15.500205993652344
    8. '()));' → logprob: -16.625205993652344
    9. '())))' → logprob: -17.000205993652344
    10. ')' → logprob: -17.375205993652344

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003221150254830718
    2. 'strip' → logprob: -8.125322341918945
    3. ' split' → logprob: -10.875322341918945
    4. 'rstrip' → logprob: -12.250322341918945
    5. '(split' → logprob: -13.125322341918945
    6. ')' → logprob: -15.625322341918945
    7. 's' → logprob: -16.250322341918945
    8. 'spl' → logprob: -16.375322341918945
    9. '.split' → logprob: -17.375322341918945
    10. '().' → logprob: -18.125322341918945

Token 52: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5004618763923645
    2. '())' → logprob: -1.0004618167877197
    3. '()' → logprob: -3.7504618167877197
    4. '))' → logprob: -6.750462055206299
    5. ')' → logprob: -6.875462055206299
    6. '(' → logprob: -8.75046157836914
    7. '()))
' → logprob: -9.87546157836914
    8. '()));' → logprob: -10.00046157836914
    9. '(),' → logprob: -11.12546157836914
    10. '())))' → logprob: -11.25046157836914

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057210229337215424
    2. '<|end|>' → logprob: -3.8072102069854736
    3. 'tl' → logprob: -4.682210445404053
    4. '[' → logprob: -5.182210445404053
    5. '    
' → logprob: -5.307210445404053
    6. 'tm' → logprob: -6.807210445404053
    7. 's' → logprob: -6.932210445404053
    8. 't' → logprob: -6.932210445404053
    9. '[]' → logprob: -6.932210445404053
    10. ')' → logprob: -7.557210445404053

Token 54: ' tr' (ID: 498)
  Prédit: 'tl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tl' → logprob: -1.057356357574463
    2. 'tr' (adapté à ' tr') → logprob: -2.807356357574463
    3. 'result' → logprob: -3.057356357574463
    4. 'if' → logprob: -3.057356357574463
    5. 't' → logprob: -3.182356357574463
    6. 'for' → logprob: -3.307356357574463
    7. 'cl' → logprob: -3.307356357574463
    8. 'dp' → logprob: -3.432356357574463
    9. 'tm' → logprob: -3.557356357574463
    10. 'sum' → logprob: -3.932356357574463

Token 55: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.482127845287323
    2. ' =' → logprob: -0.982127845287323
    3. 'l' → logprob: -4.857127666473389
    4. 'ight' → logprob: -9.857128143310547
    5. 'el' → logprob: -10.107128143310547
    6. ' ' → logprob: -11.232128143310547
    7. 'ange' → logprob: -11.232128143310547
    8. '=[]' → logprob: -11.482128143310547
    9. 'f' → logprob: -11.607128143310547
    10. 'i' → logprob: -11.857128143310547

Token 56: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0892067402601242
    2. 'list' → logprob: -2.7142066955566406
    3. '(list' → logprob: -3.9642066955566406
    4. '(' → logprob: -9.58920669555664
    5. '=list' → logprob: -11.21420669555664
    6. ' (' → logprob: -11.96420669555664
    7. ':list' → logprob: -12.46420669555664
    8. ' map' → logprob: -12.71420669555664
    9. 'ist' → logprob: -13.21420669555664
    10. 'int' → logprob: -13.21420669555664

Token 57: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038423521909862757
    2. '(map' → logprob: -5.628842353820801
    3. '(int' → logprob: -8.5038423538208
    4. '(
' → logprob: -10.6288423538208
    5. '(list' → logprob: -11.6288423538208
    6. ' (' → logprob: -12.6288423538208
    7. '(

' → logprob: -13.3788423538208
    8. '(lambda' → logprob: -14.1288423538208
    9. '(m' → logprob: -15.2538423538208
    10. '(
' → logprob: -16.378841400146484

Token 58: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00019662656995933503
    2. '(' → logprob: -8.87519645690918
    3. '<int' → logprob: -10.25019645690918
    4. '=int' → logprob: -11.50019645690918
    5. 'int' → logprob: -12.50019645690918
    6. '[int' → logprob: -12.87519645690918
    7. ',int' → logprob: -13.50019645690918
    8. ']int' → logprob: -13.62519645690918
    9. ' (' → logprob: -13.87519645690918
    10. '<|end|>' → logprob: -14.37519645690918

Token 59: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003750671399757266
    2. ',int' → logprob: -5.753750801086426
    3. ',' → logprob: -8.253750801086426
    4. '(' → logprob: -8.503750801086426
    5. '=int' → logprob: -10.503750801086426
    6. '[int' → logprob: -10.628750801086426
    7. 'int' → logprob: -10.753750801086426
    8. ')' → logprob: -11.253750801086426
    9. '<int' → logprob: -11.378750801086426
    10. '(input' → logprob: -12.503750801086426

Token 60: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.027630560100078583
    2. 'input' → logprob: -3.652630567550659
    3. ' int' → logprob: -7.02763032913208
    4. ' input' → logprob: -7.77763032913208
    5. '(int' → logprob: -11.152630805969238
    6. '[int' → logprob: -12.402630805969238
    7. '<int' → logprob: -13.152630805969238
    8. '(input' → logprob: -14.527630805969238
    9. ']int' → logprob: -14.652630805969238
    10. '   ' → logprob: -14.902630805969238

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -12.250004768371582
    3. ' ().' → logprob: -16.0000057220459
    4. '(' → logprob: -18.8750057220459
    5. '.' → logprob: -19.2500057220459
    6. '()).' → logprob: -19.5000057220459
    7. '()-' → logprob: -19.6250057220459
    8. '()[' → logprob: -19.6250057220459
    9. '())' → logprob: -20.0000057220459
    10. '().__' → logprob: -20.0000057220459

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'strip' → logprob: -15.125000953674316
    3. ')' → logprob: -15.250000953674316
    4. '(split' → logprob: -15.375000953674316
    5. 'spl' → logprob: -15.625000953674316
    6. 'plit' → logprob: -15.625000953674316
    7. ' split' → logprob: -16.625001907348633
    8. '.split' → logprob: -17.875001907348633
    9. 'rstrip' → logprob: -17.875001907348633
    10. 'skip' → logprob: -18.125001907348633

Token 63: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.14063523709774017
    2. '())' → logprob: -2.6406352519989014
    3. '()' → logprob: -2.8906352519989014
    4. '))' → logprob: -5.765635013580322
    5. ')' → logprob: -6.890635013580322
    6. '(' → logprob: -9.51563549041748
    7. '()))
' → logprob: -9.89063549041748
    8. '()));' → logprob: -10.26563549041748
    9. '())
' → logprob: -12.51563549041748
    10. '())).' → logprob: -12.51563549041748

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024699397385120392
    2. '
' → logprob: -4.1496992111206055
    3. '```' → logprob: -6.1496992111206055
    4. 'dp' → logprob: -6.5246992111206055
    5. '    
' → logprob: -7.3996992111206055
    6. 'result' → logprob: -7.5246992111206055
    7. 'for' → logprob: -7.8996992111206055
    8. 't' → logprob: -8.024699211120605
    9. 'indices' → logprob: -8.149699211120605
    10. 'i' → logprob: -8.524699211120605

Token 65: ' times' (ID: 4238)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06889121979475021
    2. 'if' → logprob: -4.8188910484313965
    3. 'd' → logprob: -5.0688910484313965
    4. 'for' → logprob: -5.1938910484313965
    5. 'result' → logprob: -5.1938910484313965
    6. 'ans' → logprob: -5.4438910484313965
    7. 'res' → logprob: -5.4438910484313965
    8. 'count' → logprob: -5.4438910484313965
    9. '   ' → logprob: -5.6938910484313965
    10. 'i' → logprob: -6.1938910484313965

Token 66: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.878878653049469
    2. ' =' → logprob: -0.878878653049469
    3. '=' → logprob: -1.8788785934448242
    4. '[' → logprob: -5.253878593444824
    5. 's' → logprob: -6.378878593444824
    6. '_needed' → logprob: -6.878878593444824
    7. '_taken' → logprob: -7.003878593444824
    8. '[:]' → logprob: -7.128878593444824
    9. '_used' → logprob: -7.253878593444824
    10. '.' → logprob: -7.503878593444824

Token 67: ' tl' (ID: 14348)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7224372029304504
    2. ' []' → logprob: -1.7224371433258057
    3. '[' → logprob: -1.9724371433258057
    4. ' [' → logprob: -1.9724371433258057
    5. '0' → logprob: -3.3474371433258057
    6. '[n' → logprob: -4.722437381744385
    7. ' ' → logprob: -5.472437381744385
    8. '[min' → logprob: -5.597437381744385
    9. '[len' → logprob: -6.847437381744385
    10. '[max' → logprob: -7.222437381744385

Token 68: ' +' (ID: 659)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.6843696236610413
    2. '+' → logprob: -1.4343695640563965
    3. ' +' → logprob: -1.5593695640563965
    4. '[' → logprob: -3.9343695640563965
    5. '[::-' → logprob: -4.4343695640563965
    6. '.sort' → logprob: -5.1843695640563965
    7. '.copy' → logprob: -5.5593695640563965
    8. '[:' → logprob: -5.8093695640563965
    9. '.' → logprob: -7.0593695640563965
    10. '-' → logprob: -7.8093695640563965

Token 69: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.25521984696388245
    2. ' tr' → logprob: -1.50521981716156
    3. '[' → logprob: -5.75521993637085
    4. ' [' → logprob: -10.255219459533691
    5. '   ' → logprob: -10.505219459533691
    6. '['' → logprob: -11.255219459533691
    7. 'trl' → logprob: -11.755219459533691
    8. '	tr' → logprob: -12.005219459533691
    9. '["' → logprob: -12.130219459533691
    10. ' ' → logprob: -12.630219459533691

Token 70: '
' (ID: 198)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.05633048340678215
    2. '.' → logprob: -2.931330442428589
    3. '   ' → logprob: -7.306330680847168
    4. '_sorted' → logprob: -8.056330680847168
    5. '.sorted' → logprob: -9.181330680847168
    6. '.s' → logprob: -10.056330680847168
    7. ' .' → logprob: -10.306330680847168
    8. '.count' → logprob: -10.431330680847168
    9. '
' → logprob: -10.556330680847168
    10. '_' → logprob: -10.681330680847168

Token 71: '   ' (ID: 271)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.06224999204277992
    2. '   ' → logprob: -3.1872498989105225
    3. '
' → logprob: -4.687250137329102
    4. '.' → logprob: -5.062250137329102
    5. 'times' → logprob: -7.187250137329102
    6. '    
' → logprob: -7.437250137329102
    7. '<|end|>' → logprob: -7.687250137329102
    8. 'sort' → logprob: -8.312250137329102
    9. ' times' → logprob: -8.437250137329102
    10. '_times' → logprob: -8.937250137329102

Token 72: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.03337018936872482
    2. ' times' → logprob: -3.53337025642395
    3. '   ' → logprob: -5.783370018005371
    4. 'time' → logprob: -8.533370018005371
    5. '
' → logprob: -8.908370018005371
    6. 't' → logprob: -10.408370018005371
    7. '```' → logprob: -10.533370018005371
    8. 'from' → logprob: -10.908370018005371
    9. 'if' → logprob: -11.220870018005371
    10. 'tim' → logprob: -11.408370018005371

Token 73: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.07899520546197891
    2. '.' → logprob: -2.5789952278137207
    3. '=' → logprob: -9.828994750976562
    4. 'sort' → logprob: -10.828994750976562
    5. '.count' → logprob: -11.453994750976562
    6. ' =' → logprob: -11.828994750976562
    7. '_sorted' → logprob: -12.328994750976562
    8. ')' → logprob: -13.328994750976562
    9. '.remove' → logprob: -13.828994750976562
    10. '.append' → logprob: -14.078994750976562

Token 74: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016706773021724075
    2. '(' → logprob: -8.750166893005371
    3. '()
' → logprob: -12.125166893005371
    4. '()`' → logprob: -14.625166893005371
    5. ' ()' → logprob: -14.750166893005371
    6. '();' → logprob: -14.875166893005371
    7. '()

' → logprob: -15.000166893005371
    8. '())' → logprob: -15.625166893005371
    9. '()>' → logprob: -15.625166893005371
    10. '()<' → logprob: -15.750166893005371

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7889736890792847
    2. 'for' → logprob: -1.6639736890792847
    3. 'print' → logprob: -1.6639736890792847
    4. 'i' → logprob: -3.413973808288574
    5. 'if' → logprob: -3.413973808288574
    6. 'count' → logprob: -3.538973808288574
    7. 'total' → logprob: -3.663973808288574
    8. ' for' → logprob: -4.788973808288574
    9. 'result' → logprob: -5.663973808288574
    10. 'sum' → logprob: -5.788973808288574

Token 76: ' end' (ID: 1268)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.4191340208053589
    2. 'i' → logprob: -2.1691341400146484
    3. 'for' → logprob: -2.2941341400146484
    4. 'if' → logprob: -2.5441341400146484
    5. 'diff' → logprob: -3.0441341400146484
    6. 'total' → logprob: -3.1691341400146484
    7. 'result' → logprob: -3.2941341400146484
    8. 'cnt' → logprob: -3.2941341400146484
    9. 'ans' → logprob: -3.5441341400146484
    10. 'print' → logprob: -3.5441341400146484

Token 77: '_time' (ID: 6425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28119856119155884
    2. ' =' → logprob: -2.406198501586914
    3. '=' → logprob: -2.531198501586914
    4. '_time' → logprob: -3.281198501586914
    5. 's' → logprob: -3.781198501586914
    6. 'time' → logprob: -5.031198501586914
    7. '_index' → logprob: -6.531198501586914
    8. '_idx' → logprob: -6.781198501586914
    9. 'ed' → logprob: -7.156198501586914
    10. '_times' → logprob: -7.531198501586914

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01674560084939003
    2. 's' → logprob: -4.516745567321777
    3. '=' → logprob: -5.266745567321777
    4. '_' → logprob: -8.266745567321777
    5. '_index' → logprob: -8.766745567321777
    6. ' ' → logprob: -10.141745567321777
    7. '_idx' → logprob: -10.391745567321777
    8. ',' → logprob: -11.266745567321777
    9. '_time' → logprob: -12.141745567321777
    10. ' ==' → logprob: -13.204245567321777

Token 79: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15224729478359222
    2. '-' → logprob: -2.527247190475464
    3. 'times' → logprob: -2.902247190475464
    4. 'max' → logprob: -5.777247428894043
    5. ' times' → logprob: -6.652247428894043
    6. ' ' → logprob: -7.277247428894043
    7. '-times' → logprob: -8.402247428894043
    8. ' -' → logprob: -8.527247428894043
    9. 'tr' → logprob: -8.902247428894043
    10. 'float' → logprob: -9.027247428894043

Token 80: '(times' (ID: 135653)
  Prédit: '(times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(times' → logprob: -0.1324257254600525
    2. '(' → logprob: -2.1324257850646973
    3. '(t' → logprob: -5.257425785064697
    4. '(end' → logprob: -9.007425308227539
    5. '(time' → logprob: -9.632425308227539
    6. '(tr' → logprob: -9.757425308227539
    7. '(max' → logprob: -11.007425308227539
    8. '()' → logprob: -12.757425308227539
    9. '((' → logprob: -13.632425308227539
    10. '(
' → logprob: -13.882425308227539

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005173869896680117
    2. ' )' → logprob: -5.505173683166504
    3. ')+' → logprob: -8.130173683166504
    4. ' +' → logprob: -8.255173683166504
    5. ')
' → logprob: -8.380173683166504
    6. ' ' → logprob: -9.005173683166504
    7. '+' → logprob: -9.755173683166504
    8. '   ' → logprob: -10.380173683166504
    9. ',' → logprob: -10.380173683166504
    10. '[' → logprob: -11.255173683166504

Token 82: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33994877338409424
    2. '   ' → logprob: -1.7149487733840942
    3. '<|end|>' → logprob: -2.4649486541748047
    4. '    
' → logprob: -3.9649486541748047
    5. ')' → logprob: -7.339948654174805
    6. '```' → logprob: -7.589948654174805
    7. '  
' → logprob: -7.839948654174805
    8. ' 
' → logprob: -7.964948654174805
    9. '<|end|>' → logprob: -8.339948654174805
    10. 'print' → logprob: -8.839948654174805

Token 83: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2412738800048828
    2. 'count' → logprob: -3.366273880004883
    3. 'result' → logprob: -3.616273880004883
    4. 'print' → logprob: -4.241273880004883
    5. ' dp' → logprob: -4.241273880004883
    6. '   ' → logprob: -4.366273880004883
    7. 'for' → logprob: -4.616273880004883
    8. 'free' → logprob: -4.866273880004883
    9. 'answer' → logprob: -5.116273880004883
    10. 'start' → logprob: -5.616273880004883

Token 84: '_gap' (ID: 131234)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.7277542948722839
    2. '_' → logprob: -1.2277543544769287
    3. '_gap' → logprob: -2.7277543544769287
    4. '_count' → logprob: -3.6027543544769287
    5. '_end' → logprob: -3.7277543544769287
    6. '_wait' → logprob: -4.22775411605835
    7. '_length' → logprob: -4.22775411605835
    8. '_diff' → logprob: -4.47775411605835
    9. '_len' → logprob: -4.47775411605835
    10. '_sum' → logprob: -4.97775411605835

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054574340581894
    2. '=' → logprob: -3.895545721054077
    3. ' ' → logprob: -13.145545959472656
    4. '_' → logprob: -14.270545959472656
    5. 's' → logprob: -14.895545959472656
    6. ',' → logprob: -15.145545959472656
    7. '  ' → logprob: -15.270545959472656
    8. ' =
' → logprob: -15.520545959472656
    9. '   ' → logprob: -16.270545959472656
    10. ')' → logprob: -18.145545959472656

Token 86: ' times' (ID: 4238)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2256462723016739
    2. '0' → logprob: -1.6006462574005127
    3. ' times' → logprob: -8.850646018981934
    4. ' -' → logprob: -10.975646018981934
    5. 'times' → logprob: -10.975646018981934
    6. ' end' → logprob: -11.225646018981934
    7. ' max' → logprob: -11.475646018981934
    8. 'end' → logprob: -11.725646018981934
    9. '   ' → logprob: -11.975646018981934
    10. '1' → logprob: -12.100646018981934

Token 87: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014340846799314022
    2. '[-' → logprob: -4.264340877532959
    3. '.index' → logprob: -8.7643404006958
    4. '[len' → logprob: -11.8893404006958
    5. '.' → logprob: -13.0143404006958
    6. '[:]' → logprob: -13.2643404006958
    7. 'index' → logprob: -13.5143404006958
    8. '[:-' → logprob: -13.6393404006958
    9. '[
' → logprob: -13.7643404006958
    10. '-' → logprob: -13.8893404006958

Token 88: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5166438221931458
    2. '0' → logprob: -1.016643762588501
    3. '-' → logprob: -3.391643762588501
    4. ' ' → logprob: -4.89164400100708
    5. ' -' → logprob: -8.016643524169922
    6. ']' → logprob: -9.266643524169922
    7. '+' → logprob: -10.391643524169922
    8. '   ' → logprob: -10.891643524169922
    9. '  ' → logprob: -11.516643524169922
    10. ')' → logprob: -11.891643524169922

Token 89: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024572385475039482
    2. '<|end|>' → logprob: -4.399572372436523
    3. ' ]' → logprob: -5.524572372436523
    4. '-' → logprob: -5.524572372436523
    5. ' -' → logprob: -6.024572372436523
    6. '<|end|>' → logprob: -7.399572372436523
    7. ')' → logprob: -7.899572372436523
    8. '
' → logprob: -8.774572372436523
    9. ']int' → logprob: -9.149572372436523
    10. ']-' → logprob: -9.399572372436523

Token 90: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' gap' (ID: 19953)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.256294846534729
    2. ' ' → logprob: -1.506294846534729
    3. 'start' → logprob: -5.7562947273254395
    4. ' start' → logprob: -6.8812947273254395
    5. ' midnight' → logprob: -9.756295204162598
    6. ' the' → logprob: -10.631295204162598
    7. '00' → logprob: -10.631295204162598
    8. 'time' → logprob: -11.381295204162598
    9. 'the' → logprob: -11.381295204162598
    10. ' times' → logprob: -12.381295204162598

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004139072261750698
    2. 'start' → logprob: -5.504138946533203
    3. 'mid' → logprob: -10.879138946533203
    4. '00' → logprob: -11.129138946533203
    5. ' ' → logprob: -11.629138946533203
    6. 'times' → logprob: -11.629138946533203
    7. 'begin' → logprob: -12.879138946533203
    8. 'time' → logprob: -13.129138946533203
    9. 'the' → logprob: -13.379138946533203
    10. 'zero' → logprob: -14.504138946533203

Token 96: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2185707837343216
    2. 'to' → logprob: -1.7185708284378052
    3. '<|end|>' → logprob: -4.343570709228516
    4. ' ' → logprob: -6.218570709228516
    5. '<|end|>' → logprob: -7.718570709228516
    6. ',' → logprob: -7.968570709228516
    7. 'time' → logprob: -8.593570709228516
    8. 'for' → logprob: -8.968570709228516
    9. ' for' → logprob: -8.968570709228516
    10. 't' → logprob: -9.343570709228516

Token 97: ' first' (ID: 1577)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.0487346388399601
    2. 'times' → logprob: -3.548734664916992
    3. ' the' → logprob: -4.173734664916992
    4. ' first' → logprob: -5.798734664916992
    5. 'the' → logprob: -8.173734664916992
    6. 'first' → logprob: -9.548734664916992
    7. ' ' → logprob: -11.548734664916992
    8. 't' → logprob: -12.298734664916992
    9. ' time' → logprob: -12.548734664916992
    10. ' t' → logprob: -13.423734664916992

Token 98: ' passing' (ID: 21178)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.9593542218208313
    2. '_' → logprob: -1.5843541622161865
    3. '_time' → logprob: -1.7093541622161865
    4. ' time' → logprob: -1.8343541622161865
    5. ' ' → logprob: -2.9593541622161865
    6. '   ' → logprob: -5.584354400634766
    7. '  ' → logprob: -5.709354400634766
    8. '<|end|>' → logprob: -6.209354400634766
    9. '_times' → logprob: -6.709354400634766
    10. ' _' → logprob: -6.709354400634766

Token 99: ' time' (ID: 1058)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8219395279884338
    2. 'time' → logprob: -1.321939468383789
    3. '_time' → logprob: -2.321939468383789
    4. ' ' → logprob: -3.196939468383789
    5. '  ' → logprob: -3.571939468383789
    6. '-' → logprob: -3.696939468383789
    7. '_' → logprob: -4.196939468383789
    8. ')' → logprob: -4.196939468383789
    9. 'for' → logprob: -4.196939468383789
    10. ' time' → logprob: -4.821939468383789

Token 100: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4418807327747345
    2. ' for' → logprob: -1.066880702972412
    3. '   ' → logprob: -4.566880702972412
    4. '
' → logprob: -6.066880702972412
    5. 'prev' → logprob: -8.81688117980957
    6. '```' → logprob: -10.31688117980957
    7. '    
' → logprob: -10.44188117980957
    8. 'previous' → logprob: -10.69188117980957
    9. '<|end|>' → logprob: -10.94188117980957
    10. ' ' → logprob: -11.06688117980957

Token 101: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1813409924507141
    2. ' for' → logprob: -2.1813409328460693
    3. '   ' → logprob: -3.3063409328460693
    4. '
' → logprob: -4.181341171264648
    5. '<|end|>' → logprob: -8.181341171264648
    6. '```' → logprob: -8.306341171264648
    7. '    
' → logprob: -8.431341171264648
    8. ' ' → logprob: -10.181341171264648
    9. '  ' → logprob: -10.181341171264648
    10. 'n' → logprob: -10.306341171264648

Token 102: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002014167606830597
    2. ' for' → logprob: -6.25201416015625
    3. '   ' → logprob: -9.50201416015625
    4. '
' → logprob: -11.62701416015625
    5. '	for' → logprob: -14.00201416015625
    6. '    
' → logprob: -15.12701416015625
    7. ')' → logprob: -15.25201416015625
    8. '```' → logprob: -15.50201416015625
    9. 'prev' → logprob: -15.75201416015625
    10. '  ' → logprob: -16.37701416015625

Token 103: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2014446258544922
    2. 'i' → logprob: -1.7014446258544922
    3. ' ' → logprob: -10.826444625854492
    4. '	i' → logprob: -11.576444625854492
    5. '   ' → logprob: -13.951444625854492
    6. '  ' → logprob: -14.701444625854492
    7. 'index' → logprob: -15.576444625854492
    8. ' ' → logprob: -15.826444625854492
    9. ' idx' → logprob: -15.951444625854492
    10. 'idx' → logprob: -16.326444625854492

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020687397569417953
    2. 'in' → logprob: -3.8956873416900635
    3. ' ' → logprob: -9.020687103271484
    4. '  ' → logprob: -11.645687103271484
    5. '	in' → logprob: -11.895687103271484
    6. '   ' → logprob: -12.895687103271484
    7. ',' → logprob: -13.145687103271484
    8. 'range' → logprob: -13.645687103271484
    9. 'n' → logprob: -13.770687103271484
    10. ' i' → logprob: -14.270687103271484

Token 105: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0013675002846866846
    2. 'range' → logprob: -6.626367568969727
    3. ' ' → logprob: -10.126367568969727
    4. '	range' → logprob: -14.626367568969727
    5. '  ' → logprob: -14.751367568969727
    6. '   ' → logprob: -14.876367568969727
    7. ' xrange' → logprob: -15.626367568969727
    8. '(range' → logprob: -15.751367568969727
    9. ' ran' → logprob: -18.751367568969727
    10. ' rang' → logprob: -19.251367568969727

Token 106: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027933192905038595
    2. '(len' → logprob: -8.250279426574707
    3. '1' → logprob: -11.000279426574707
    4. ' (' → logprob: -14.250279426574707
    5. '   ' → logprob: -14.625279426574707
    6. 'len' → logprob: -15.625279426574707
    7. ' ' → logprob: -16.75027847290039
    8. ' len' → logprob: -19.37527847290039
    9. '(
' → logprob: -20.50027847290039
    10. '  ' → logprob: -20.50027847290039

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016109559684991837
    2. 'len' → logprob: -4.141109466552734
    3. '   ' → logprob: -10.016109466552734
    4. ' ' → logprob: -10.891109466552734
    5. ' len' → logprob: -11.641109466552734
    6. '(len' → logprob: -13.266109466552734
    7. '0' → logprob: -15.016109466552734
    8. '2' → logprob: -15.016109466552734
    9. '  ' → logprob: -15.516109466552734
    10. '(' → logprob: -16.266109466552734

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002584220143035054
    2. ',len' → logprob: -6.002584457397461
    3. '(len' → logprob: -9.752584457397461
    4. 'len' → logprob: -10.502584457397461
    5. ' ,' → logprob: -11.252584457397461
    6. '   ' → logprob: -12.502584457397461
    7. ' ' → logprob: -13.002584457397461
    8. '<len' → logprob: -13.127584457397461
    9. ' len' → logprob: -13.752584457397461
    10. '=len' → logprob: -15.127584457397461

Token 109: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11387591063976288
    2. ' len' → logprob: -2.2388758659362793
    3. '   ' → logprob: -7.738875865936279
    4. 'n' → logprob: -8.113876342773438
    5. ' n' → logprob: -8.363876342773438
    6. ' ' → logprob: -9.988876342773438
    7. '(len' → logprob: -11.113876342773438
    8. '  ' → logprob: -12.113876342773438
    9. '    ' → logprob: -12.113876342773438
    10. '	len' → logprob: -12.113876342773438

Token 110: '(times' (ID: 135653)
  Prédit: '(times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(times' → logprob: -2.7968066206085496e-05
    2. 'times' → logprob: -10.625027656555176
    3. '(' → logprob: -12.750027656555176
    4. ' times' → logprob: -14.875027656555176
    5. ' (' → logprob: -15.500027656555176
    6. '(types' → logprob: -17.750028610229492
    7. '.times' → logprob: -17.875028610229492
    8. '(time' → logprob: -18.250028610229492
    9. ')' → logprob: -18.250028610229492
    10. '(tokens' → logprob: -18.375028610229492

Token 111: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20162013173103333
    2. '):' → logprob: -1.701620101928711
    3. ' ):
' → logprob: -8.951620101928711
    4. ' ):' → logprob: -9.826620101928711
    5. '   ' → logprob: -11.326620101928711
    6. '):
' → logprob: -11.951620101928711
    7. ')' → logprob: -13.576620101928711
    8. ')):
' → logprob: -13.701620101928711
    9. ' ' → logprob: -14.326620101928711
    10. '):

' → logprob: -14.451620101928711

Token 112: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25025179982185364
    2. ' max' → logprob: -2.0002517700195312
    3. '       ' → logprob: -2.6252517700195312
    4. '<|end|>' → logprob: -5.750251770019531
    5. 'max' → logprob: -6.250251770019531
    6. ' gap' → logprob: -6.250251770019531
    7. ' ' → logprob: -6.500251770019531
    8. '	max' → logprob: -6.750251770019531
    9. '```' → logprob: -6.875251770019531
    10. '    ' → logprob: -7.250251770019531

Token 113: ' gap' (ID: 19953)
  Prédit: ' gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.12045012414455414
    2. '   ' → logprob: -2.870450019836426
    3. ' max' → logprob: -3.495450019836426
    4. 'gap' (adapté à ' gap') → logprob: -4.495450019836426
    5. '       ' → logprob: -4.870450019836426
    6. '
' → logprob: -5.620450019836426
    7. ' if' → logprob: -6.245450019836426
    8. ' 
' → logprob: -7.495450019836426
    9. ' current' → logprob: -7.745450019836426
    10. '    
' → logprob: -7.870450019836426

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023270871490240097
    2. '=' → logprob: -3.773270845413208
    3. ' ' → logprob: -11.273270606994629
    4. 's' → logprob: -12.023270606994629
    5. '_' → logprob: -12.273270606994629
    6. '   ' → logprob: -14.273270606994629
    7. ')' → logprob: -15.023270606994629
    8. '	' → logprob: -15.148270606994629
    9. ' -=' → logprob: -15.773270606994629
    10. '_=' → logprob: -15.898270606994629

Token 115: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.054898761212825775
    2. 'times' → logprob: -2.929898738861084
    3. '   ' → logprob: -11.304899215698242
    4. '(times' → logprob: -12.804899215698242
    5. '    ' → logprob: -14.554899215698242
    6. ' ' → logprob: -14.804899215698242
    7. '_times' → logprob: -15.554899215698242
    8. '.times' → logprob: -15.804899215698242
    9. '       ' → logprob: -16.804899215698242
    10. ' timings' → logprob: -16.929899215698242

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. ' [' → logprob: -18.375
    4. 'i' → logprob: -19.875
    5. '   ' → logprob: -20.125
    6. '[j' → logprob: -21.25
    7. '[
' → logprob: -21.75
    8. '	' → logprob: -22.25
    9. '[index' → logprob: -22.25
    10. ' ' → logprob: -22.25

Token 117: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028539856895804405
    2. '-' → logprob: -4.403539657592773
    3. ' -' → logprob: -4.403539657592773
    4. ']-' → logprob: -5.653539657592773
    5. ')' → logprob: -9.403539657592773
    6. '[' → logprob: -10.028539657592773
    7. ' ]' → logprob: -10.528539657592773
    8. '   ' → logprob: -12.403539657592773
    9. '}' → logprob: -13.653539657592773
    10. ')-' → logprob: -13.778539657592773

Token 118: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132975101470947
    2. '-' → logprob: -1.3132975101470947
    3. '   ' → logprob: -10.688297271728516
    4. '-times' → logprob: -11.563297271728516
    5. ' ' → logprob: -12.938297271728516
    6. '-t' → logprob: -14.813297271728516
    7. '    ' → logprob: -15.813297271728516
    8. '-time' → logprob: -16.313297271728516
    9. '  ' → logprob: -16.438297271728516
    10. '	' → logprob: -16.563297271728516

Token 119: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.05492730811238289
    2. ' times' → logprob: -2.929927349090576
    3. '   ' → logprob: -10.179926872253418
    4. '       ' → logprob: -12.554926872253418
    5. ' ' → logprob: -13.304926872253418
    6. '    ' → logprob: -14.679926872253418
    7. '  ' → logprob: -14.804926872253418
    8. '(times' → logprob: -14.804926872253418
    9. '           ' → logprob: -15.054926872253418
    10. 'imes' → logprob: -16.179927825927734

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -20.375
    3. '[' → logprob: -21.25
    4. '```' → logprob: -21.375
    5. '   ' → logprob: -21.5
    6. ' [' → logprob: -21.625
    7. '{i' → logprob: -22.0
    8. '[I' → logprob: -22.25
    9. '[j' → logprob: -22.5
    10. '(i' → logprob: -22.75

Token 121: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00045033416245132685
    2. ' -' → logprob: -7.750450134277344
    3. '[i' → logprob: -11.125450134277344
    4. '1' → logprob: -13.000450134277344
    5. '[' → logprob: -13.750450134277344
    6. 'i' → logprob: -14.000450134277344
    7. ' ' → logprob: -15.125450134277344
    8. '   ' → logprob: -15.750450134277344
    9. ']' → logprob: -15.875450134277344
    10. '(i' → logprob: -15.875450134277344

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.000007629394531
    3. ']' → logprob: -13.875007629394531
    4. '   ' → logprob: -15.500007629394531
    5. '```' → logprob: -16.37500762939453
    6. ')' → logprob: -16.87500762939453
    7. '-' → logprob: -17.81250762939453
    8. '  ' → logprob: -17.93750762939453
    9. '])' → logprob: -18.12500762939453
    10. '    ' → logprob: -19.00000762939453

Token 123: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04364940896630287
    2. ')
' → logprob: -3.293649435043335
    3. '   ' → logprob: -5.293649196624756
    4. '       ' → logprob: -7.668649196624756
    5. ']' → logprob: -10.293649673461914
    6. '<|end|>' → logprob: -10.418649673461914
    7. '
' → logprob: -11.668649673461914
    8. ' )' → logprob: -12.043649673461914
    9. ')
' → logprob: -12.543649673461914
    10. ' )
' → logprob: -13.418649673461914

Token 124: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6984870433807373
    2. '       ' → logprob: -0.8234870433807373
    3. ' if' → logprob: -2.8234870433807373
    4. '
' → logprob: -6.198487281799316
    5. 'if' → logprob: -6.323487281799316
    6. '	if' → logprob: -8.823487281799316
    7. '<|end|>' → logprob: -8.948487281799316
    8. '    
' → logprob: -9.448487281799316
    9. '  
' → logprob: -10.198487281799316
    10. '        
' → logprob: -10.323487281799316

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02069954015314579
    2. 'if' (adapté à ' if') → logprob: -4.145699501037598
    3. '       ' → logprob: -5.770699501037598
    4. '   ' → logprob: -6.645699501037598
    5. ' max' → logprob: -8.645699501037598
    6. 'max' → logprob: -9.895699501037598
    7. '	if' → logprob: -12.520699501037598
    8. '
' → logprob: -13.145699501037598
    9. ' ' → logprob: -13.270699501037598
    10. '    ' → logprob: -13.645699501037598

Token 126: ' gap' (ID: 19953)
  Prédit: ' gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.0052342405542731285
    2. 'gap' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.255233764648438
    4. ' ' → logprob: -16.255233764648438
    5. '_gap' → logprob: -17.255233764648438
    6. ' max' → logprob: -17.630233764648438
    7. ' ' → logprob: -18.880233764648438
    8. 'max' → logprob: -18.880233764648438
    9. '```' → logprob: -18.880233764648438
    10. '
' → logprob: -19.005233764648438

Token 127: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05491241440176964
    2. '>' → logprob: -2.9299123287200928
    3. '   ' → logprob: -11.179912567138672
    4. ' ' → logprob: -11.179912567138672
    5. '  ' → logprob: -14.804912567138672
    6. ' ' → logprob: -14.804912567138672
    7. '    ' → logprob: -15.054912567138672
    8. ')' → logprob: -15.179912567138672
    9. ' >
' → logprob: -15.679912567138672
    10. '	' → logprob: -15.804912567138672

Token 128: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6326057314872742
    2. ' max' → logprob: -0.7576057314872742
    3. '	max' → logprob: -12.75760555267334
    4. ' ' → logprob: -13.00760555267334
    5. '(max' → logprob: -14.63260555267334
    6. '=max' → logprob: -15.25760555267334
    7. '   ' → logprob: -15.75760555267334
    8. 'gap' → logprob: -15.88260555267334
    9. '_max' → logprob: -16.007606506347656
    10. '[max' → logprob: -16.820106506347656

Token 129: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.500000953674316
    3. ' _' → logprob: -15.500000953674316
    4. '_max' → logprob: -15.750000953674316
    5. 'gap' → logprob: -17.500001907348633
    6. '
' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '  ' → logprob: -18.875001907348633
    9. '_g' → logprob: -18.875001907348633
    10. ')_' → logprob: -19.000001907348633

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01610826887190342
    2. ':
' → logprob: -4.14110803604126
    3. ' :' → logprob: -10.516108512878418
    4. '       ' → logprob: -11.016108512878418
    5. '           ' → logprob: -11.516108512878418
    6. ' :
' → logprob: -11.891108512878418
    7. ':max' → logprob: -12.641108512878418
    8. '):
' → logprob: -13.016108512878418
    9. '<|end|>' → logprob: -13.141108512878418
    10. '   ' → logprob: -13.391108512878418

Token 131: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06553301960229874
    2. '           ' → logprob: -3.190532922744751
    3. ' max' → logprob: -4.31553316116333
    4. 'max' → logprob: -5.06553316116333
    5. '
' → logprob: -6.06553316116333
    6. '   ' → logprob: -8.690532684326172
    7. '	max' → logprob: -10.565532684326172
    8. ':
' → logprob: -10.815532684326172
    9. '        
' → logprob: -11.440532684326172
    10. '(max' → logprob: -11.440532684326172

Token 132: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.04867536947131157
    2. 'max' (adapté à ' max') → logprob: -3.048675298690796
    3. '           ' → logprob: -9.673675537109375
    4. '       ' → logprob: -11.798675537109375
    5. '_max' → logprob: -11.923675537109375
    6. '               ' → logprob: -12.548675537109375
    7. '   ' → logprob: -12.548675537109375
    8. '	max' → logprob: -13.548675537109375
    9. '(max' → logprob: -14.423675537109375
    10. '
' → logprob: -14.673675537109375

Token 133: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.250000953674316
    3. 'gap' → logprob: -15.375000953674316
    4. '_max' → logprob: -17.25
    5. '```' → logprob: -17.75
    6. ' gap' → logprob: -17.875
    7. ' _' → logprob: -18.25
    8. '\' → logprob: -19.0
    9. 'Gap' → logprob: -19.875
    10. '
' → logprob: -19.875

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150296062231064
    2. '=' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.893150329589844
    4. ' =
' → logprob: -18.518150329589844
    5. '＝' → logprob: -19.018150329589844
    6. ',' → logprob: -19.018150329589844
    7. '            ' → logprob: -19.643150329589844
    8. ')' → logprob: -19.768150329589844
    9. ' =)' → logprob: -19.893150329589844
    10. '    ' → logprob: -20.143150329589844

Token 135: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.3132624924182892
    2. ' gap' → logprob: -1.3132624626159668
    3. '_gap' → logprob: -14.938262939453125
    4. 'g' → logprob: -15.313262939453125
    5. '-gap' → logprob: -16.813262939453125
    6. '   ' → logprob: -17.688262939453125
    7. ' ' → logprob: -17.688262939453125
    8. '
' → logprob: -17.688262939453125
    9. ' gaps' → logprob: -18.313262939453125
    10. 'Gap' → logprob: -18.313262939453125

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5373178124427795
    2. '
' → logprob: -0.9123178124427795
    3. '<|end|>' → logprob: -5.162317752838135
    4. 'print' → logprob: -5.662317752838135
    5. '    
' → logprob: -6.037317752838135
    6. '

' → logprob: -7.412317752838135
    7. '```' → logprob: -7.662317752838135
    8. 'max' → logprob: -8.537318229675293
    9. '<|end|>' → logprob: -8.537318229675293
    10. ',' → logprob: -8.787318229675293

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3720152676105499
    2. '
' → logprob: -1.4970152378082275
    3. 'print' → logprob: -2.6220152378082275
    4. ' print' → logprob: -5.872015476226807
    5. '<|end|>' → logprob: -5.872015476226807
    6. '```' → logprob: -5.997015476226807
    7. 'max' → logprob: -6.122015476226807
    8. '    
' → logprob: -6.622015476226807
    9. ' max' → logprob: -7.372015476226807
    10. ')' → logprob: -7.872015476226807

Token 138: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04944990575313568
    2. '
' → logprob: -3.424449920654297
    3. '   ' → logprob: -4.424449920654297
    4. ' print' → logprob: -7.049449920654297
    5. 'if' → logprob: -7.174449920654297
    6. 'max' → logprob: -7.174449920654297
    7. '    
' → logprob: -7.299449920654297
    8. '

' → logprob: -9.174449920654297
    9. ' if' → logprob: -9.924449920654297
    10. '```' → logprob: -10.049449920654297

Token 139: ' gap' (ID: 19953)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42589402198791504
    2. ' print' → logprob: -1.425894021987915
    3. ' if' → logprob: -2.800894021987915
    4. 'if' → logprob: -3.550894021987915
    5. 'max' → logprob: -5.550893783569336
    6. ' max' → logprob: -6.425893783569336
    7. 'result' → logprob: -6.550893783569336
    8. '   ' → logprob: -6.550893783569336
    9. ' result' → logprob: -6.925893783569336
    10. 'answer' → logprob: -6.925893783569336

Token 140: ' from' (ID: 591)
  Prédit: '_between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_between' → logprob: -1.4279820919036865
    2. '_before' → logprob: -2.1779820919036865
    3. ' =' → logprob: -2.3029820919036865
    4. '_end' → logprob: -2.3029820919036865
    5. '_from' → logprob: -2.5529820919036865
    6. '=' → logprob: -2.5529820919036865
    7. 'from' → logprob: -2.6779820919036865
    8. '//' → logprob: -2.9279820919036865
    9. 's' → logprob: -3.0529820919036865
    10. ' //' → logprob: -3.9279820919036865

Token 141: ' last' (ID: 2174)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.02465590089559555
    2. 'times' → logprob: -4.149655818939209
    3. ' end' → logprob: -5.024655818939209
    4. 'max' → logprob: -6.649655818939209
    5. ' times' → logprob: -8.024656295776367
    6. '0' → logprob: -8.899656295776367
    7. '24' → logprob: -9.649656295776367
    8. '(end' → logprob: -10.024656295776367
    9. '100' → logprob: -10.149656295776367
    10. ' ' → logprob: -11.024656295776367

Token 142: ' passing' (ID: 21178)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.20185717940330505
    2. 'to' → logprob: -3.076857089996338
    3. 'time' → logprob: -3.326857089996338
    4. ' to' → logprob: -3.451857089996338
    5. ' end' → logprob: -3.826857089996338
    6. 'max' → logprob: -3.951857089996338
    7. '   ' → logprob: -5.451857089996338
    8. 'pass' → logprob: -5.576857089996338
    9. 'times' → logprob: -5.576857089996338
    10. ' time' → logprob: -5.701857089996338

Token 143: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.10303711891174316
    2. 'to' → logprob: -2.353037118911743
    3. ' to' → logprob: -6.978036880493164
    4. '_time' → logprob: -7.353036880493164
    5. 'times' → logprob: -7.728036880493164
    6. 'end' → logprob: -7.978036880493164
    7. ' time' → logprob: -8.103036880493164
    8. '   ' → logprob: -9.728036880493164
    9. 't' → logprob: -10.603036880493164
    10. ' ' → logprob: -10.978036880493164

Token 144: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2631147801876068
    2. ' to' → logprob: -2.2631146907806396
    3. '=' → logprob: -2.3881146907806396
    4. 'max' → logprob: -4.388114929199219
    5. '   ' → logprob: -4.763114929199219
    6. ' =' → logprob: -5.013114929199219
    7. 'end' → logprob: -6.388114929199219
    8. ',' → logprob: -6.388114929199219
    9. 's' → logprob: -7.763114929199219
    10. '+' → logprob: -7.888114929199219

Token 145: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0011271213879808784
    2. ' end' → logprob: -7.001127243041992
    3. '24' → logprob: -9.251127243041992
    4. '   ' → logprob: -10.001127243041992
    5. '100' → logprob: -11.251127243041992
    6. '60' → logprob: -11.501127243041992
    7. '360' → logprob: -11.626127243041992
    8. '(end' → logprob: -11.751127243041992
    9. '=end' → logprob: -12.376127243041992
    10. ' ' → logprob: -12.376127243041992

Token 146: '_time' (ID: 6425)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5731053948402405
    2. ' if' → logprob: -1.5731053352355957
    3. '   ' → logprob: -2.3231053352355957
    4. 'max' → logprob: -2.4481053352355957
    5. 'gap' → logprob: -3.6981053352355957
    6. 'time' → logprob: -5.198105335235596
    7. '
' → logprob: -5.823105335235596
    8. '+' → logprob: -6.198105335235596
    9. ',' → logprob: -6.823105335235596
    10. ')' → logprob: -6.948105335235596

Token 147: ' is' (ID: 382)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5677391290664673
    2. 'if' → logprob: -1.6927391290664673
    3. 'gap' → logprob: -2.4427390098571777
    4. '   ' → logprob: -2.5677390098571777
    5. '
' → logprob: -3.0677390098571777
    6. '+' → logprob: -3.9427390098571777
    7. ' gap' → logprob: -4.817739009857178
    8. 'max' → logprob: -5.567739009857178
    9. '    
' → logprob: -6.692739009857178
    10. '-gap' → logprob: -6.817739009857178

Token 148: ' zero' (ID: 12421)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2853790819644928
    2. ' end' → logprob: -2.28537917137146
    3. 'max' → logprob: -2.53537917137146
    4. ' max' → logprob: -3.41037917137146
    5. '   ' → logprob: -4.035378932952881
    6. '0' → logprob: -4.785378932952881
    7. 'times' → logprob: -6.410378932952881
    8. ' ' → logprob: -6.785378932952881
    9. ' times' → logprob: -6.785378932952881
    10. 'n' → logprob: -7.035378932952881

Token 149: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39100342988967896
    2. '
' → logprob: -1.3910033702850342
    3. '<|end|>' → logprob: -2.891003370285034
    4. 'print' → logprob: -4.766003608703613
    5. '    
' → logprob: -4.766003608703613
    6. ')' → logprob: -7.016003608703613
    7. '  
' → logprob: -8.141003608703613
    8. '<|end|>' → logprob: -8.391003608703613
    9. ' if' → logprob: -8.891003608703613
    10. '```' → logprob: -9.141003608703613

Token 150: ' because' (ID: 2236)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026317020878195763
    2. ')' → logprob: -4.276317119598389
    3. '#' → logprob: -6.026317119598389
    4. '    
' → logprob: -6.026317119598389
    5. '<|end|>' → logprob: -6.026317119598389
    6. '
' → logprob: -6.401317119598389
    7. ' so' → logprob: -7.776317119598389
    8. '```' → logprob: -7.901317119598389
    9. 'since' → logprob: -8.02631664276123
    10. '...' → logprob: -8.15131664276123

Token 151: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10682087391614914
    2. ' end' → logprob: -2.356820821762085
    3. 'times' → logprob: -5.481821060180664
    4. ' times' → logprob: -6.481821060180664
    5. 'tr' → logprob: -8.231821060180664
    6. 'the' → logprob: -8.731821060180664
    7. ' the' → logprob: -9.106821060180664
    8. '   ' → logprob: -9.481821060180664
    9. 'max' → logprob: -9.606821060180664
    10. '(end' → logprob: -10.731821060180664

Token 152: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.069664333248511e-05
    2. '   ' → logprob: -11.375020980834961
    3. 'time' → logprob: -12.750020980834961
    4. '_t' → logprob: -13.000020980834961
    5. '_' → logprob: -13.250020980834961
    6. '_times' → logprob: -13.750020980834961
    7. 'Time' → logprob: -14.625020980834961
    8. ' ' → logprob: -15.625020980834961
    9. '  ' → logprob: -15.750020980834961
    10. '_tim' → logprob: -15.750020980834961

Token 153: ' =' (ID: 314)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4684797525405884
    2. 'is' → logprob: -1.9684797525405884
    3. ' -' → logprob: -2.718479633331299
    4. ' is' → logprob: -2.968479633331299
    5. '==' → logprob: -3.468479633331299
    6. '=' → logprob: -3.468479633331299
    7. '<|end|>' → logprob: -3.468479633331299
    8. ' ==' → logprob: -4.718479633331299
    9. 'equals' → logprob: -5.218479633331299
    10. ' equals' → logprob: -6.218479633331299

Token 154: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5287869572639465
    2. 'times' → logprob: -0.9037869572639465
    3. ' max' → logprob: -5.778787136077881
    4. ' times' → logprob: -6.278787136077881
    5. 'end' → logprob: -7.403787136077881
    6. 'tr' → logprob: -10.278786659240723
    7. 'tim' → logprob: -12.278786659240723
    8. '(max' → logprob: -12.528786659240723
    9. 'time' → logprob: -12.528786659240723
    10. ' end' → logprob: -12.653786659240723

Token 155: '(times' (ID: 135653)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13771793246269226
    2. '
' → logprob: -2.7627179622650146
    3. 'print' → logprob: -3.8877179622650146
    4. '<|end|>' → logprob: -4.1377177238464355
    5. ' print' → logprob: -4.7627177238464355
    6. ' if' → logprob: -5.6377177238464355
    7. '+' → logprob: -5.8877177238464355
    8. '    
' → logprob: -5.8877177238464355
    9. '```' → logprob: -6.0127177238464355
    10. ' for' → logprob: -6.7627177238464355

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0071754250675439835
    2. '   ' → logprob: -5.632175445556641
    3. ')
' → logprob: -5.882175445556641
    4. '<|end|>' → logprob: -7.507175445556641
    5. ')

' → logprob: -9.13217544555664
    6. '
' → logprob: -10.13217544555664
    7. '<|end|>' → logprob: -11.13217544555664
    8. ' )' → logprob: -11.13217544555664
    9. '+' → logprob: -11.63217544555664
    10. '),' → logprob: -12.13217544555664

Token 157: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.53648841381073
    2. '   ' → logprob: -0.91148841381073
    3. '<|end|>' → logprob: -5.5364885330200195
    4. ' print' → logprob: -5.7864885330200195
    5. '
' → logprob: -5.9114885330200195
    6. '    
' → logprob: -6.5364885330200195
    7. 'max' → logprob: -7.5364885330200195
    8. 'if' → logprob: -8.41148853302002
    9. '```' → logprob: -8.53648853302002
    10. ')' → logprob: -8.53648853302002

Token 158: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0584831237792969
    2. '
' → logprob: -1.1834831237792969
    3. 'print' (adapté à ' print') → logprob: -1.3084831237792969
    4. '<|end|>' → logprob: -3.058483123779297
    5. 'max' → logprob: -4.308483123779297
    6. 'if' → logprob: -5.308483123779297
    7. '    
' → logprob: -5.808483123779297
    8. '```' → logprob: -6.558483123779297
    9. ' if' → logprob: -6.933483123779297
    10. ' print' → logprob: -7.308483123779297

Token 159: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.07795602083206177
    2. '(' → logprob: -2.702955961227417
    3. '(f' → logprob: -5.452956199645996
    4. '('' → logprob: -6.077956199645996
    5. '("' → logprob: -6.827956199645996
    6. '()' → logprob: -8.577956199645996
    7. ' (' → logprob: -10.077956199645996
    8. 'max' → logprob: -10.327956199645996
    9. '((' → logprob: -10.702956199645996
    10. '(end' → logprob: -11.952956199645996

Token 160: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -4.320199877838604e-07
    2. 'gap' → logprob: -15.375
    3. '(max' → logprob: -16.5
    4. '_max' → logprob: -18.0
    5. ')' → logprob: -18.375
    6. '_' → logprob: -18.5
    7. 'Gap' → logprob: -18.5
    8. ' gap' → logprob: -19.0
    9. '(' → logprob: -19.125
    10. '(_' → logprob: -19.125

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010366239439463243
    2. ' )' → logprob: -9.375103950500488
    3. '+' → logprob: -11.875103950500488
    4. ')
' → logprob: -12.375103950500488
    5. '*' → logprob: -12.875103950500488
    6. ' +' → logprob: -13.500103950500488
    7. '   ' → logprob: -13.875103950500488
    8. '))' → logprob: -14.500103950500488
    9. ')}' → logprob: -14.875103950500488
    10. ',' → logprob: -15.250103950500488


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 159
Tokens correctement prédits (1ère position, stricte): 72
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 128
Précision stricte (1ère position): 45.28%
Précision adaptée (1ère position): 46.54%
Précision (top 10): 80.50%
================================================================================
