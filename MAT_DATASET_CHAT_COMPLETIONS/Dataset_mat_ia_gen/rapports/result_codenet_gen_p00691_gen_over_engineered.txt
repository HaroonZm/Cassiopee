================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import Iterator, Tuple, Optional


class InputReader(ABC):
    @abstractmethod
    def read_next(self) -> Optional[int]:
        pass


class StdInputReader(InputReader):
    def read_next(self) -> Optional[int]:
        while True:
            line = input()
            line = line.strip()
            if not line.isdigit():
                continue
            n = int(line)
            if n == 0:
                return None
            return n


class FermatLastTheoremVerifier(ABC):
    @abstractmethod
    def verify(self, z: int) -> int:
        pass


class CubicSumMaximizer(FermatLastTheoremVerifier):
    def __init__(self, power: int):
        self.power = power
        self._cache = {}

    def verify(self, z: int) -> int:
        # Check cache
        if z in self._cache:
            return self._cache[z]

        z_pow = z ** self.power

        # Since n=3, brute force with clever limiting:
        max_sum = 0
        limit = z  # All x,y in (1..z)
        # To speed up, we take advantage that x^3 + y^3 <= z^3 and sort search order

        # Precompute cubes
        cubes = [i ** self.power for i in range(limit + 1)]

        # Use two pointers approach to find max of x^3 + y^3 <= z^3
        # Iterate over x ascending and y descending to approach limit efficiently
        x = 1
        y = limit
        while x <= limit and y >= 1:
            s = cubes[x] + cubes[y]
            if s <= z_pow:
                if s > max_sum:
                    max_sum = s
                x += 1
            else:
                y -= 1

        diff = z_pow - max_sum
        self._cache[z] = diff
        return diff


class OutputWriter(ABC):
    @abstractmethod
    def write(self, result: int) -> None:
        pass


class StdOutputWriter(OutputWriter):
    def write(self, result: int) -> None:
        print(result)


class FermatLastTheoremApp:
    def __init__(
        self,
        input_reader: InputReader,
        verifier: FermatLastTheoremVerifier,
        output_writer: OutputWriter,
    ):
        self.input_reader = input_reader
        self.verifier = verifier
        self.output_writer = output_writer

    def run(self):
        while True:
            z = self.input_reader.read_next()
            if z is None:
                break
            res = self.verifier.verify(z)
            self.output_writer.write(res)


if __name__ == "__main__":
    reader = StdInputReader()
    verifier = CubicSumMaximizer(power=3)
    writer = StdOutputWriter()
    app = FermatLastTheoremApp(reader, verifier, writer)
    app.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.07508495450019836
    2. 'ABC' → logprob: -2.700084924697876
    3. ' ' → logprob: -5.950085163116455
    4. ' A' → logprob: -7.075085163116455
    5. ' ' → logprob: -7.325085163116455
    6. 'import' → logprob: -8.700084686279297
    7. ' Abstract' → logprob: -8.825084686279297
    8. 'ABCDE' → logprob: -9.075084686279297
    9. ' abc' → logprob: -9.325084686279297
    10. 'Abstract' → logprob: -9.575084686279297

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48344433307647705
    2. '.' → logprob: -0.983444333076477
    3. 'import' → logprob: -5.3584442138671875
    4. '```' → logprob: -6.6084442138671875
    5. ':' → logprob: -7.1084442138671875
    6. ' ,' → logprob: -7.3584442138671875
    7. '<|end|>' → logprob: -7.6084442138671875
    8. ' import' → logprob: -8.608444213867188
    9. ' .' → logprob: -8.858444213867188
    10. '\' → logprob: -9.108444213867188

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.5760502219200134
    2. ' abstract' → logprob: -0.8260502219200134
    3. 'Abstract' → logprob: -9.2010498046875
    4. ' ' → logprob: -12.5760498046875
    5. '.abstract' → logprob: -13.0760498046875
    6. ' Abstract' → logprob: -13.4510498046875
    7. ' ABC' → logprob: -14.5760498046875
    8. ' A' → logprob: -14.9510498046875
    9. 'abc' → logprob: -14.9510498046875
    10. '123' → logprob: -15.2010498046875

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -9.805981972021982e-05
    2. 'classmethod' → logprob: -10.00009822845459
    3. 'm' → logprob: -11.00009822845459
    4. '_method' → logprob: -12.00009822845459
    5. 'meth' → logprob: -12.00009822845459
    6. 'staticmethod' → logprob: -12.25009822845459
    7. ' method' → logprob: -12.50009822845459
    8. 'abstract' → logprob: -12.75009822845459
    9. 'import' → logprob: -13.37509822845459
    10. 'ethod' → logprob: -13.37509822845459

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4269544184207916
    2. '```' → logprob: -1.4269543886184692
    3. 'class' → logprob: -2.801954507827759
    4. '

' → logprob: -4.05195426940918
    5. '\n' → logprob: -5.05195426940918
    6. '' → logprob: -5.05195426940918
    7. '<|end|>' → logprob: -5.17695426940918
    8. '
' → logprob: -5.80195426940918
    9. '``' → logprob: -5.92695426940918
    10. '\' → logprob: -6.42695426940918

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1726326197385788
    2. '

' → logprob: -2.1726326942443848
    3. '```' → logprob: -3.5476326942443848
    4. 'class' → logprob: -4.422632694244385
    5. '' → logprob: -7.047632694244385
    6. '
' → logprob: -7.047632694244385
    7. '\n' → logprob: -7.672632694244385
    8. '``' → logprob: -7.672632694244385
    9. ' 

' → logprob: -8.297632217407227
    10. '
 
' → logprob: -8.672632217407227

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04837283492088318
    2. 'import' → logprob: -3.173372745513916
    3. '<|end|>' → logprob: -5.923372745513916
    4. '.' → logprob: -6.423372745513916
    5. ' ' → logprob: -7.423372745513916
    6. '<|end|>' → logprob: -9.423373222351074
    7. ' as' → logprob: -9.548373222351074
    8. '[' → logprob: -9.673373222351074
    9. '```' → logprob: -10.173373222351074
    10. ' .' → logprob: -10.298373222351074

Token 11: ' Iterator' (ID: 41994)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.3196485638618469
    2. ' List' → logprob: -1.5696485042572021
    3. ' Union' → logprob: -3.319648504257202
    4. 'Any' → logprob: -4.444648742675781
    5. ' Callable' → logprob: -4.569648742675781
    6. ' Optional' → logprob: -5.944648742675781
    7. ' Protocol' → logprob: -6.444648742675781
    8. ' Iterable' → logprob: -6.694648742675781
    9. 'List' → logprob: -7.944648742675781
    10. ' Generator' → logprob: -8.069648742675781

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.09823141992092133
    2. '
' → logprob: -2.848231315612793
    3. 'class' → logprob: -3.473231315612793
    4. '


' → logprob: -6.473231315612793
    5. '```' → logprob: -6.473231315612793
    6. '\n' → logprob: -7.473231315612793
    7. ' class' → logprob: -8.723231315612793
    8. ',' → logprob: -8.848231315612793
    9. '
' → logprob: -9.098231315612793
    10. '<class' → logprob: -9.473231315612793

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Iterable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Iterable' → logprob: -0.4732338786125183
    2. ' List' → logprob: -1.473233938217163
    3. 'Iterable' → logprob: -2.223233938217163
    4. ' Optional' → logprob: -4.723233699798584
    5. ' Generator' → logprob: -4.973233699798584
    6. 'List' → logprob: -5.098233699798584
    7. ' Any' → logprob: -5.598233699798584
    8. ' Union' → logprob: -5.598233699798584
    9. ' Async' → logprob: -5.973233699798584
    10. ' Sequence' → logprob: -6.598233699798584

Token 14: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.604252815246582
    2. 'class' → logprob: -1.354252815246582
    3. '

' → logprob: -1.854252815246582
    4. '```' → logprob: -3.354252815246582
    5. '\n' → logprob: -6.729252815246582
    6. '


' → logprob: -6.979252815246582
    7. ' class' → logprob: -7.479252815246582
    8. '``' → logprob: -8.104252815246582
    9. '<class' → logprob: -8.604252815246582
    10. '
' → logprob: -8.854252815246582

Token 15: ' Optional' (ID: 19351)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -1.0230648517608643
    2. 'Any' → logprob: -1.3980648517608643
    3. 'Iterable' → logprob: -1.8980648517608643
    4. ' List' → logprob: -2.5230648517608643
    5. 'Optional' → logprob: -2.8980648517608643
    6. 'Union' → logprob: -3.3980648517608643
    7. 'Callable' → logprob: -4.148064613342285
    8. ' Any' → logprob: -4.398064613342285
    9. ' Union' → logprob: -4.523064613342285
    10. ' Optional' → logprob: -4.773064613342285

Token 16: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3826838731765747
    2. '
' → logprob: -1.7576838731765747
    3. '

' → logprob: -2.132683753967285
    4. '```' → logprob: -3.882683753967285
    5. '\n' → logprob: -5.257683753967285
    6. ' class' → logprob: -7.882683753967285
    7. '<class' → logprob: -8.382683753967285
    8. '``' → logprob: -8.507683753967285
    9. '
' → logprob: -9.007683753967285
    10. '


' → logprob: -9.257683753967285

Token 17: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.2664456789934775e-06
    2. ' class' → logprob: -14.125000953674316
    3. '```' → logprob: -15.375000953674316
    4. '
' → logprob: -16.250001907348633
    5. '"class' → logprob: -16.500001907348633
    6. 'clas' → logprob: -17.125001907348633
    7. '<class' → logprob: -17.875001907348633
    8. 'cla' → logprob: -18.250001907348633
    9. '-class' → logprob: -18.750001907348633
    10. 'cl' → logprob: -18.875001907348633

Token 18: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5416141748428345
    2. ' Abstract' → logprob: -1.4166141748428345
    3. ' Serializer' → logprob: -3.041614055633545
    4. ' Parser' → logprob: -3.416614055633545
    5. ' Iterable' → logprob: -3.916614055633545
    6. ' Token' → logprob: -4.291614055633545
    7. ' Base' → logprob: -5.041614055633545
    8. ' Shape' → logprob: -5.041614055633545
    9. ' ABC' → logprob: -5.291614055633545
    10. ' Iterator' → logprob: -5.666614055633545

Token 19: 'Reader' (ID: 7171)
  Prédit: 'Device'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Device' → logprob: -0.9232163429260254
    2. 'Stream' → logprob: -1.2982163429260254
    3. 'Source' → logprob: -1.4232163429260254
    4. 'Iterator' → logprob: -4.048216342926025
    5. '(' → logprob: -4.173216342926025
    6. 'Handler' → logprob: -4.173216342926025
    7. 'Processor' → logprob: -4.548216342926025
    8. 'Data' → logprob: -4.923216342926025
    9. 'Layer' → logprob: -5.298216342926025
    10. 'Reader' → logprob: -5.423216342926025

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008085522567853332
    2. ':' → logprob: -7.2508087158203125
    3. '(Abstract' → logprob: -9.250808715820312
    4. '():' → logprob: -13.750808715820312
    5. '```' → logprob: -14.750808715820312
    6. ' (' → logprob: -15.000808715820312
    7. '):' → logprob: -15.625808715820312
    8. '(I' → logprob: -16.250808715820312
    9. '(
' → logprob: -16.375808715820312
    10. ':
' → logprob: -16.500808715820312

Token 21: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.5231790542602539
    2. ' ABC' → logprob: -0.8981790542602539
    3. 'abc' → logprob: -11.398179054260254
    4. ')' → logprob: -11.648179054260254
    5. ' ' → logprob: -11.898179054260254
    6. '   ' → logprob: -11.898179054260254
    7. 'AB' → logprob: -12.273179054260254
    8. 'Abstract' → logprob: -12.273179054260254
    9. 'ABCDE' → logprob: -12.523179054260254
    10. 'Iterator' → logprob: -13.398179054260254

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007480407948605716
    2. ')' → logprob: -7.375748157501221
    3. ':' → logprob: -9.750747680664062
    4. '):
' → logprob: -10.000747680664062
    5. ',' → logprob: -11.500747680664062
    6. ' ):' → logprob: -13.125747680664062
    7. '):
' → logprob: -13.750747680664062
    8. '```' → logprob: -13.875747680664062
    9. '):

' → logprob: -14.125747680664062
    10. '>):' → logprob: -14.625747680664062

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05416547507047653
    2. ':' → logprob: -3.0541653633117676
    3. '    
' → logprob: -6.179165363311768
    4. '```' → logprob: -6.679165363311768
    5. '<|end|>' → logprob: -7.429165363311768
    6. '
' → logprob: -7.554165363311768
    7. '<|end|>' → logprob: -8.429165840148926
    8. ' indentation' → logprob: -8.804165840148926
    9. '    ' → logprob: -8.929165840148926
    10. 'def' → logprob: -9.054165840148926

Token 24: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20830406248569489
    2. '    
' → logprob: -2.7083041667938232
    3. ' def' → logprob: -3.3333041667938232
    4. '    ' → logprob: -3.3333041667938232
    5. '
' → logprob: -4.208303928375244
    6. ' 
' → logprob: -4.458303928375244
    7. 'def' → logprob: -4.583303928375244
    8. '@' (adapté à ' @') → logprob: -5.458303928375244
    9. ' ' → logprob: -6.083303928375244
    10. '\n' → logprob: -6.458303928375244

Token 25: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -8.537868779967539e-06
    2. 'ab' → logprob: -13.000008583068848
    3. 'property' → logprob: -13.000008583068848
    4. 'abs' → logprob: -13.750008583068848
    5. 'staticmethod' → logprob: -14.000008583068848
    6. 'abc' → logprob: -14.000008583068848
    7. ' abstract' → logprob: -14.125008583068848
    8. 'classmethod' → logprob: -15.000008583068848
    9. '.abstract' → logprob: -16.50000762939453
    10. 'a' → logprob: -17.75000762939453

Token 26: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00014525714504998177
    2. '_method' → logprob: -8.875144958496094
    3. 'classmethod' → logprob: -12.750144958496094
    4. '	method' → logprob: -14.375144958496094
    5. 'staticmethod' → logprob: -14.625144958496094
    6. ' method' → logprob: -14.625144958496094
    7. 'meth' → logprob: -15.000144958496094
    8. 'ethod' → logprob: -15.500144958496094
    9. '   ' → logprob: -16.375144958496094
    10. ' ' → logprob: -16.500144958496094

Token 27: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32759732007980347
    2. ' def' → logprob: -1.9525973796844482
    3. '(' → logprob: -2.2025973796844482
    4. '
' → logprob: -4.327597141265869
    5. '<|end|>' → logprob: -6.077597141265869
    6. 'method' → logprob: -6.327597141265869
    7. '(
' → logprob: -6.577597141265869
    8. '('' → logprob: -6.827597141265869
    9. ')' → logprob: -6.827597141265869
    10. '(def' → logprob: -6.952597141265869

Token 28: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5145900845527649
    2. '(' → logprob: -1.2645900249481201
    3. ' def' → logprob: -2.38959002494812
    4. '(
' → logprob: -5.514590263366699
    5. '
' → logprob: -5.639590263366699
    6. '<|end|>' → logprob: -5.639590263366699
    7. '('' → logprob: -5.764590263366699
    8. '   ' → logprob: -6.764590263366699
    9. '()' → logprob: -6.764590263366699
    10. '\' → logprob: -6.889590263366699

Token 29: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.061975300312042236
    2. ' def' → logprob: -2.8119752407073975
    3. '
' → logprob: -11.936975479125977
    4. 'async' → logprob: -14.686975479125977
    5. '```' → logprob: -15.811975479125977
    6. 'method' → logprob: -16.686975479125977
    7. 'classmethod' → logprob: -16.686975479125977
    8. 'define' → logprob: -17.061975479125977
    9. ' ' → logprob: -17.186975479125977
    10. '	def' → logprob: -17.561975479125977

Token 30: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.02253195084631443
    2. ' def' → logprob: -4.022531986236572
    3. ' iterate' → logprob: -6.772531986236572
    4. 'read' → logprob: -7.022531986236572
    5. ' iter' → logprob: -7.397531986236572
    6. ' readline' → logprob: -7.647531986236572
    7. ' input' → logprob: -7.772531986236572
    8. ' get' → logprob: -8.272531509399414
    9. ' next' → logprob: -8.522531509399414
    10. ' reads' → logprob: -8.647531509399414

Token 31: '_next' (ID: 25436)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04001777619123459
    2. '_line' → logprob: -3.91501784324646
    3. '(' → logprob: -4.040017604827881
    4. '()' → logprob: -7.915017604827881
    5. '_' → logprob: -8.040018081665039
    6. '_input' → logprob: -8.290018081665039
    7. '_token' → logprob: -8.790018081665039
    8. 'line' → logprob: -9.040018081665039
    9. 'self' → logprob: -9.290018081665039
    10. '_next' → logprob: -9.290018081665039

Token 32: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20094871520996094
    2. '_token' → logprob: -2.450948715209961
    3. '(' → logprob: -2.825948715209961
    4. '_line' → logprob: -3.450948715209961
    5. '_character' → logprob: -6.575948715209961
    6. ' ' → logprob: -7.700948715209961
    7. '_' → logprob: -7.825948715209961
    8. ' (' → logprob: -7.950948715209961
    9. 'token' → logprob: -8.075948715209961
    10. '()' → logprob: -8.075948715209961

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005031302571296692
    2. ',' → logprob: -5.880031108856201
    3. ':' → logprob: -6.630031108856201
    4. ' )' → logprob: -7.505031108856201
    5. '_token' → logprob: -9.25503158569336
    6. ')->' → logprob: -9.63003158569336
    7. '):' → logprob: -9.75503158569336
    8. '_line' → logprob: -11.13003158569336
    9. ' ->' → logprob: -11.25503158569336
    10. ',)' → logprob: -11.25503158569336

Token 34: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08499956130981445
    2. '(' → logprob: -2.7099995613098145
    3. ' ->' → logprob: -4.9599995613098145
    4. '()' → logprob: -5.7099995613098145
    5. ')' → logprob: -6.3349995613098145
    6. '->' → logprob: -6.4599995613098145
    7. 'self' → logprob: -8.084999084472656
    8. '   ' → logprob: -8.334999084472656
    9. '       ' → logprob: -8.584999084472656
    10. ':' → logprob: -9.084999084472656

Token 35: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.005898934323340654
    2. 'Optional' → logprob: -5.255898952484131
    3. ' Tuple' → logprob: -7.380898952484131
    4. ' ' → logprob: -10.755898475646973
    5. '	Optional' → logprob: -11.630898475646973
    6. 'Tuple' → logprob: -12.630898475646973
    7. ' None' → logprob: -12.755898475646973
    8. ' str' → logprob: -12.880898475646973
    9. '(Optional' → logprob: -14.255898475646973
    10. ' int' → logprob: -14.380898475646973

Token 36: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006068629212677479
    2. '[str' → logprob: -5.131068706512451
    3. '[int' → logprob: -9.006068229675293
    4. '[T' → logprob: -11.756068229675293
    5. '[
' → logprob: -12.131068229675293
    6. ' [' → logprob: -13.631068229675293
    7. ' ' → logprob: -14.006068229675293
    8. 'str' → logprob: -14.881068229675293
    9. '['' → logprob: -15.006068229675293
    10. '   ' → logprob: -15.506068229675293

Token 37: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02582155168056488
    2. '):' → logprob: -3.7758214473724365
    3. ':' → logprob: -6.025821685791016
    4. '>:' → logprob: -9.275821685791016
    5. ']' → logprob: -11.025821685791016
    6. '}:' → logprob: -11.525821685791016
    7. '']:' → logprob: -11.775821685791016
    8. '"]:' → logprob: -12.025821685791016
    9. '():' → logprob: -12.150821685791016
    10. '   ' → logprob: -12.525821685791016

Token 38: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.414783239364624
    2. '...' → logprob: -1.789783239364624
    3. ' pass' → logprob: -1.789783239364624
    4. '       ' → logprob: -5.539783477783203
    5. '<|end|>' → logprob: -6.789783477783203
    6. 'raise' → logprob: -9.289783477783203
    7. '   ' → logprob: -9.289783477783203
    8. '...
' → logprob: -9.289783477783203
    9. '	pass' → logprob: -9.789783477783203
    10. 'return' → logprob: -10.789783477783203

Token 40: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.18246568739414215
    2. '
' → logprob: -1.807465672492981
    3. '

' → logprob: -6.057465553283691
    4. ' class' → logprob: -8.307465553283691
    5. '


' → logprob: -9.932465553283691
    6. '    
' → logprob: -11.307465553283691
    7. '```' → logprob: -11.307465553283691
    8. '<|end|>' → logprob: -11.432465553283691
    9. '
' → logprob: -11.807465553283691
    10. '\n' → logprob: -11.807465553283691

Token 42: ' Std' (ID: 74505)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.3683702051639557
    2. ' File' → logprob: -1.6183701753616333
    3. ' Input' → logprob: -2.493370294570923
    4. ' Iterator' → logprob: -5.368370056152344
    5. ' Array' → logprob: -5.618370056152344
    6. 'File' → logprob: -5.618370056152344
    7. 'List' → logprob: -5.743370056152344
    8. ' String' → logprob: -5.993370056152344
    9. ' Iterable' → logprob: -6.243370056152344
    10. ' Buffered' → logprob: -6.368370056152344

Token 43: 'Input' (ID: 3275)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00278681144118309
    2. 'Input' → logprob: -6.377786636352539
    3. 'input' → logprob: -7.252786636352539
    4. 'In' → logprob: -8.002786636352539
    5. 'out' → logprob: -10.252786636352539
    6. '```' → logprob: -14.002786636352539
    7. 'inp' → logprob: -14.252786636352539
    8. '   ' → logprob: -14.252786636352539
    9. 'IN' → logprob: -14.377786636352539
    10. 'int' → logprob: -14.502786636352539

Token 44: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -4.024604277219623e-05
    2. 'put' → logprob: -11.000040054321289
    3. 'reader' → logprob: -11.000040054321289
    4. 'Stream' → logprob: -13.250040054321289
    5. '_reader' → logprob: -13.250040054321289
    6. 'Input' → logprob: -14.375040054321289
    7. 'er' → logprob: -14.500040054321289
    8. ' Reader' → logprob: -14.500040054321289
    9. '.Reader' → logprob: -15.125040054321289
    10. 'ut' → logprob: -15.125040054321289

Token 45: '(Input' (ID: 52522)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012541553005576134
    2. '(' → logprob: -5.137541770935059
    3. '(Input' → logprob: -5.262541770935059
    4. '():' → logprob: -7.012541770935059
    5. ' :' → logprob: -8.387541770935059
    6. '):' → logprob: -8.762541770935059
    7. '(I' → logprob: -10.262541770935059
    8. '   ' → logprob: -11.637541770935059
    9. '```' → logprob: -11.762541770935059
    10. '(:' → logprob: -11.887541770935059

Token 46: 'Reader' (ID: 7171)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0006722823018208146
    2. 'Reader' → logprob: -7.750672340393066
    3. 'put' → logprob: -9.250672340393066
    4. 'ut' → logprob: -9.625672340393066
    5. 'In' → logprob: -10.125672340393066
    6. 'I' → logprob: -11.375672340393066
    7. '   ' → logprob: -11.750672340393066
    8. '```' → logprob: -12.250672340393066
    9. 'User' → logprob: -12.375672340393066
    10. ')' → logprob: -13.375672340393066

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006472678505815566
    2. '):
' → logprob: -7.375647068023682
    3. ')' → logprob: -11.25064754486084
    4. ':' → logprob: -12.62564754486084
    5. '):
' → logprob: -13.50064754486084
    6. ' ):' → logprob: -13.50064754486084
    7. '():' → logprob: -14.00064754486084
    8. '   ' → logprob: -14.62564754486084
    9. ']:' → logprob: -16.000646591186523
    10. '):

' → logprob: -16.500646591186523

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06392455101013184
    2. '    ' → logprob: -3.938924551010132
    3. '
' → logprob: -4.063924789428711
    4. '    
' → logprob: -4.313924789428711
    5. ' def' → logprob: -4.938924789428711
    6. 'def' → logprob: -6.313924789428711
    7. ' ' → logprob: -7.438924789428711
    8. '```' → logprob: -7.688924789428711
    9. '<|end|>' → logprob: -7.813924789428711
    10. ' 
' → logprob: -7.813924789428711

Token 49: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.023395370692014694
    2. 'def' (adapté à ' def') → logprob: -3.773395299911499
    3. '   ' → logprob: -8.898395538330078
    4. '    ' → logprob: -12.023395538330078
    5. ' import' → logprob: -12.898395538330078
    6. '	def' → logprob: -13.523395538330078
    7. 'import' → logprob: -13.648395538330078
    8. ' ' → logprob: -13.648395538330078
    9. ' 
' → logprob: -15.773395538330078
    10. '```' → logprob: -16.023395538330078

Token 50: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0031578729394823313
    2. ' __' → logprob: -5.878158092498779
    3. ' def' → logprob: -8.503157615661621
    4. 'read' → logprob: -8.878157615661621
    5. '__' → logprob: -12.128157615661621
    6. '_read' → logprob: -12.878157615661621
    7. ' _' → logprob: -13.878157615661621
    8. ' init' → logprob: -14.378157615661621
    9. ' readline' → logprob: -14.628157615661621
    10. ' ' → logprob: -15.378157615661621

Token 51: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -4.739826181321405e-05
    2. '_' → logprob: -10.50004768371582
    3. '_n' → logprob: -11.00004768371582
    4. ' _' → logprob: -13.12504768371582
    5. ')_' → logprob: -15.00004768371582
    6. '_NEXT' → logprob: -15.87504768371582
    7. '```' → logprob: -16.12504768371582
    8. '_new' → logprob: -16.37504768371582
    9. '_self' → logprob: -16.50004768371582
    10. '__' → logprob: -16.62504768371582

Token 52: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.9875325708417222e-05
    2. '(' → logprob: -10.625029563903809
    3. ' (' → logprob: -12.750029563903809
    4. 'self' → logprob: -13.250029563903809
    5. '()' → logprob: -14.625029563903809
    6. '   ' → logprob: -15.625029563903809
    7. ' ' → logprob: -16.000030517578125
    8. '       ' → logprob: -16.750030517578125
    9. '_line' → logprob: -17.125030517578125
    10. '```' → logprob: -17.250030517578125

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00080188421998173
    2. 'self' → logprob: -7.375802040100098
    3. '):' → logprob: -9.125802040100098
    4. '   ' → logprob: -10.625802040100098
    5. ' )' → logprob: -10.625802040100098
    6. '       ' → logprob: -12.375802040100098
    7. '(self' → logprob: -12.500802040100098
    8. ')->' → logprob: -12.750802040100098
    9. ' ' → logprob: -13.125802040100098
    10. ',' → logprob: -14.375802040100098

Token 54: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001685293740592897
    2. '       ' → logprob: -7.12668514251709
    3. ' ->' → logprob: -8.25168514251709
    4. 'self' → logprob: -8.62668514251709
    5. '->' → logprob: -8.75168514251709
    6. '(' → logprob: -9.00168514251709
    7. ')' → logprob: -9.37668514251709
    8. ':' → logprob: -10.37668514251709
    9. '   ' → logprob: -10.62668514251709
    10. '):' → logprob: -12.00168514251709

Token 55: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.0352354422211647
    2. ' int' → logprob: -3.7852354049682617
    3. 'Optional' → logprob: -4.660235404968262
    4. 'int' → logprob: -6.035235404968262
    5. ' ' → logprob: -9.910235404968262
    6. ' None' → logprob: -12.160235404968262
    7. '(Optional' → logprob: -12.660235404968262
    8. ' optional' → logprob: -14.035235404968262
    9. '   ' → logprob: -14.285235404968262
    10. '	Optional' → logprob: -14.785235404968262

Token 56: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.000000953674316
    3. '[Int' → logprob: -15.750000953674316
    4. '[in' → logprob: -17.250001907348633
    5. 'int' → logprob: -17.875001907348633
    6. ' [' → logprob: -18.125001907348633
    7. '<int' → logprob: -18.125001907348633
    8. '[str' → logprob: -18.375001907348633
    9. '[
' → logprob: -19.125001907348633
    10. '[i' → logprob: -19.500001907348633

Token 57: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002477200934663415
    2. ':' → logprob: -6.377477169036865
    3. '):
' → logprob: -7.377477169036865
    4. '   ' → logprob: -10.377477645874023
    5. '():' → logprob: -10.377477645874023
    6. '):
' → logprob: -10.377477645874023
    7. ']:' → logprob: -10.877477645874023
    8. '}:' → logprob: -11.377477645874023
    9. '>:' → logprob: -11.627477645874023
    10. '       ' → logprob: -11.752477645874023

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024396030232310295
    2. 'try' → logprob: -3.8993959426879883
    3. ' try' → logprob: -5.649395942687988
    4. '   ' → logprob: -9.274395942687988
    5. 'import' → logprob: -9.524395942687988
    6. '```' → logprob: -10.149395942687988
    7. ' line' → logprob: -11.149395942687988
    8. '           ' → logprob: -11.274395942687988
    9. 'n' → logprob: -11.274395942687988
    10. '    ' → logprob: -11.399395942687988

Token 59: ' while' (ID: 2049)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.025315262377262115
    2. ' try' → logprob: -3.775315284729004
    3. 'import' → logprob: -6.775315284729004
    4. '   ' → logprob: -7.275315284729004
    5. 'line' → logprob: -8.900315284729004
    6. ' line' → logprob: -10.525315284729004
    7. '       ' → logprob: -11.275315284729004
    8. '```' → logprob: -11.275315284729004
    9. 'return' → logprob: -11.400315284729004
    10. 'value' → logprob: -12.150315284729004

Token 60: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.011069637723267078
    2. 'True' → logprob: -4.5110697746276855
    3. '(True' → logprob: -10.761069297790527
    4. ' ' → logprob: -15.511069297790527
    5. '=True' → logprob: -16.011070251464844
    6. ' line' → logprob: -16.261070251464844
    7. ' Tru' → logprob: -16.886070251464844
    8. '  ' → logprob: -17.136070251464844
    9. '   ' → logprob: -17.136070251464844
    10. '1' → logprob: -18.136070251464844

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031131880823522806
    2. '           ' → logprob: -6.378113269805908
    3. ':
' → logprob: -7.878113269805908
    4. ',' → logprob: -7.878113269805908
    5. '       ' → logprob: -8.12811279296875
    6. '():' → logprob: -8.87811279296875
    7. '):' → logprob: -9.00311279296875
    8. ' :' → logprob: -9.62811279296875
    9. '   ' → logprob: -11.37811279296875
    10. ':**' → logprob: -12.62811279296875

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011168892495334148
    2. ' try' → logprob: -4.761168956756592
    3. 'try' → logprob: -6.261168956756592
    4. '       ' → logprob: -7.761168956756592
    5. '   ' → logprob: -9.636168479919434
    6. ' line' → logprob: -10.386168479919434
    7. '          ' → logprob: -10.511168479919434
    8. 'input' → logprob: -10.886168479919434
    9. ' input' → logprob: -11.511168479919434
    10. '```' → logprob: -11.636168479919434

Token 63: ' line' (ID: 2543)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.24769285321235657
    2. ' try' → logprob: -2.247692823410034
    3. 'line' (adapté à ' line') → logprob: -2.872692823410034
    4. '           ' → logprob: -3.372692823410034
    5. ' line' → logprob: -4.497693061828613
    6. 'user' → logprob: -5.372693061828613
    7. 'input' → logprob: -6.247693061828613
    8. '   ' → logprob: -6.497693061828613
    9. 'char' → logprob: -6.997693061828613
    10. 'inp' → logprob: -6.997693061828613

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010369796073064208
    2. '=' → logprob: -6.876037120819092
    3. 's' → logprob: -13.251036643981934
    4. '   ' → logprob: -14.376036643981934
    5. ' ' → logprob: -14.626036643981934
    6. '=line' → logprob: -14.751036643981934
    7. '=input' → logprob: -14.876036643981934
    8. ':' → logprob: -15.501036643981934
    9. '_input' → logprob: -15.876036643981934
    10. '           ' → logprob: -17.00103759765625

Token 65: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06196891888976097
    2. 'input' → logprob: -2.8119688034057617
    3. '=input' → logprob: -15.061968803405762
    4. ' ' → logprob: -15.311968803405762
    5. '	input' → logprob: -15.436968803405762
    6. '```' → logprob: -15.561968803405762
    7. ' self' → logprob: -16.186969757080078
    8. '   ' → logprob: -16.311969757080078
    9. '(input' → logprob: -16.811969757080078
    10. 'import' → logprob: -16.936969757080078

Token 66: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002263494301587343
    2. '().' → logprob: -6.12726354598999
    3. '())' → logprob: -10.252263069152832
    4. '(' → logprob: -10.377263069152832
    5. ' ()' → logprob: -12.627263069152832
    6. '()
' → logprob: -12.877263069152832
    7. '()`' → logprob: -13.377263069152832
    8. '（）' → logprob: -13.877263069152832
    9. '()

' → logprob: -14.252263069152832
    10. '()]' → logprob: -14.502263069152832

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010173913091421127
    2. '.strip' → logprob: -5.260173797607422
    3. '            
' → logprob: -6.885173797607422
    4. '       ' → logprob: -7.010173797607422
    5. '            ' → logprob: -7.260173797607422
    6. ' if' → logprob: -7.385173797607422
    7. '               ' → logprob: -7.510173797607422
    8. '        ' → logprob: -7.885173797607422
    9. '<|end|>' → logprob: -8.635173797607422
    10. '.rstrip' → logprob: -9.510173797607422

Token 68: ' line' (ID: 2543)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33612895011901855
    2. 'if' → logprob: -1.5861289501190186
    3. '           ' → logprob: -2.5861289501190186
    4. 'try' → logprob: -5.836129188537598
    5. ' try' → logprob: -6.211129188537598
    6. 'line' (adapté à ' line') → logprob: -8.586129188537598
    7. ' line' → logprob: -8.711129188537598
    8. ' stripped' → logprob: -9.586129188537598
    9. 'strip' → logprob: -10.086129188537598
    10. '               ' → logprob: -10.836129188537598

Token 69: ' =' (ID: 314)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.1619408279657364
    2. '.' → logprob: -1.9119408130645752
    3. ' =' → logprob: -7.536941051483154
    4. ' .' → logprob: -7.661941051483154
    5. '=' → logprob: -7.911941051483154
    6. 'strip' → logprob: -8.786940574645996
    7. '<|end|>' → logprob: -10.161940574645996
    8. '<|end|>' → logprob: -10.161940574645996
    9. '.rstrip' → logprob: -10.536940574645996
    10. 's' → logprob: -10.911940574645996

Token 70: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.575939953327179
    2. ' line' → logprob: -0.825939953327179
    3. '	line' → logprob: -15.325940132141113
    4. '=line' → logprob: -16.200939178466797
    5. ' lin' → logprob: -16.825939178466797
    6. '(line' → logprob: -17.075939178466797
    7. ' ' → logprob: -17.200939178466797
    8. '#line' → logprob: -17.450939178466797
    9. 'lin' → logprob: -18.200939178466797
    10. 'strip' → logprob: -18.700939178466797

Token 71: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0015222413931041956
    2. '.' → logprob: -6.501522064208984
    3. '.rstrip' → logprob: -11.126522064208984
    4. '.trim' → logprob: -12.751522064208984
    5. ' .' → logprob: -13.376522064208984
    6. 'strip' → logprob: -14.251522064208984
    7. '.replace' → logprob: -17.876522064208984
    8. '.lower' → logprob: -18.001522064208984
    9. '.l' → logprob: -18.376522064208984
    10. '.split' → logprob: -18.626522064208984

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.87501049041748
    3. '().' → logprob: -13.87501049041748
    4. '())' → logprob: -14.62501049041748
    5. ' ()' → logprob: -14.75001049041748
    6. '()
' → logprob: -14.87501049041748
    7. '()`' → logprob: -15.25001049041748
    8. '()

' → logprob: -15.62501049041748
    9. '()"' → logprob: -16.125009536743164
    10. '()\' → logprob: -16.125009536743164

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28308364748954773
    2. ' if' → logprob: -2.03308367729187
    3. 'if' → logprob: -2.28308367729187
    4. '               ' → logprob: -5.533083438873291
    5. '<|end|>' → logprob: -5.533083438873291
    6. '            ' → logprob: -7.033083438873291
    7. ')' → logprob: -7.158083438873291
    8. '            
' → logprob: -7.283083438873291
    9. '<|end|>' → logprob: -7.283083438873291
    10. ':' → logprob: -7.658083438873291

Token 74: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007409038953483105
    2. ' if' → logprob: -5.25740909576416
    3. '           ' → logprob: -6.13240909576416
    4. 'try' → logprob: -14.38240909576416
    5. '```' → logprob: -14.63240909576416
    6. '               ' → logprob: -15.38240909576416
    7. 'If' → logprob: -16.632408142089844
    8. '   ' → logprob: -17.757408142089844
    9. ';if' → logprob: -18.007408142089844
    10. '	if' → logprob: -18.007408142089844

Token 75: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7572681307792664
    2. ' line' → logprob: -0.8822681307792664
    3. 'line' → logprob: -2.257268190383911
    4. 'not' → logprob: -4.382267951965332
    5. ' ' → logprob: -10.257267951965332
    6. ' len' → logprob: -11.132267951965332
    7. 'len' → logprob: -11.882267951965332
    8. '(line' → logprob: -12.757267951965332
    9. ' lin' → logprob: -12.757267951965332
    10. '	line' → logprob: -12.757267951965332

Token 76: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4287070333957672
    2. 'line' → logprob: -1.0537070035934448
    3. '	line' → logprob: -13.178707122802734
    4. ' ' → logprob: -13.428707122802734
    5. '(line' → logprob: -14.053707122802734
    6. ' lin' → logprob: -14.928707122802734
    7. '#line' → logprob: -15.303707122802734
    8. 'lines' → logprob: -15.428707122802734
    9. '[line' → logprob: -15.553707122802734
    10. 'Line' → logprob: -15.678707122802734

Token 77: '.is' (ID: 3109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008571469807066023
    2. ' :' → logprob: -7.375857353210449
    3. ':
' → logprob: -9.50085735321045
    4. '<|end|>' → logprob: -9.87585735321045
    5. ':return' → logprob: -10.12585735321045
    6. ' or' → logprob: -10.12585735321045
    7. '):' → logprob: -12.12585735321045
    8. '.startswith' → logprob: -12.12585735321045
    9. '<|end|>' → logprob: -12.62585735321045
    10. '.is' → logprob: -12.87585735321045

Token 78: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0014924844726920128
    2. 'decimal' → logprob: -6.751492500305176
    3. 'numeric' → logprob: -8.126492500305176
    4. 'empty' → logprob: -10.626492500305176
    5. ' digit' → logprob: -14.126492500305176
    6. 'alpha' → logprob: -14.251492500305176
    7. 'al' → logprob: -14.501492500305176
    8. 'digits' → logprob: -15.876492500305176
    9. 'digital' → logprob: -16.12649154663086
    10. 'ascii' → logprob: -16.37649154663086

Token 79: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00017982252757064998
    2. '()' → logprob: -8.7501802444458
    3. '():
' → logprob: -10.8751802444458
    4. ' ():' → logprob: -13.3751802444458
    5. '(' → logprob: -14.2501802444458
    6. '():
' → logprob: -16.875179290771484
    7. '():

' → logprob: -17.375179290771484
    8. ':' → logprob: -17.750179290771484
    9. '().' → logprob: -18.500179290771484
    10. '(":' → logprob: -19.625179290771484

Token 80: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005031120381318033
    2. ' continue' → logprob: -8.250503540039062
    3. ':' → logprob: -9.375503540039062
    4. ' return' → logprob: -10.000503540039062
    5. '           ' → logprob: -10.500503540039062
    6. ' or' → logprob: -10.875503540039062
    7. ':return' → logprob: -10.875503540039062
    8. 'continue' → logprob: -11.250503540039062
    9. ':
' → logprob: -11.500503540039062
    10. 'return' → logprob: -12.125503540039062

Token 81: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12166672199964523
    2. 'return' → logprob: -3.496666669845581
    3. ' continue' → logprob: -3.621666669845581
    4. 'continue' (adapté à ' continue') → logprob: -3.746666669845581
    5. ' return' → logprob: -4.12166690826416
    6. '                   ' → logprob: -4.49666690826416
    7. 'break' → logprob: -5.74666690826416
    8. ' break' → logprob: -5.74666690826416
    9. '           ' → logprob: -9.37166690826416
    10. '   ' → logprob: -10.49666690826416

Token 82: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004928105045109987
    2. '            
' → logprob: -5.379928112030029
    3. '<|end|>' → logprob: -9.504927635192871
    4. 'return' → logprob: -9.754927635192871
    5. '\n' → logprob: -10.754927635192871
    6. ' 
' → logprob: -10.879927635192871
    7. '```' → logprob: -10.879927635192871
    8. '  
' → logprob: -11.129927635192871
    9. ' return' → logprob: -11.254927635192871
    10. '           
' → logprob: -11.379927635192871

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025680975522845984
    2. 'return' → logprob: -8.875256538391113
    3. '            
' → logprob: -9.500256538391113
    4. ' return' → logprob: -11.000256538391113
    5. '               ' → logprob: -12.000256538391113
    6. '       ' → logprob: -12.125256538391113
    7. '```' → logprob: -12.500256538391113
    8. '
' → logprob: -12.875256538391113
    9. '          ' → logprob: -13.500256538391113
    10. 'else' → logprob: -13.875256538391113

Token 84: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5286158323287964
    2. 'return' → logprob: -1.2786158323287964
    3. ' return' → logprob: -2.278615951538086
    4. '       ' → logprob: -3.528615951538086
    5. '               ' → logprob: -8.653615951538086
    6. '            
' → logprob: -9.278615951538086
    7. '   ' → logprob: -10.778615951538086
    8. '
' → logprob: -10.778615951538086
    9. '```' → logprob: -11.653615951538086
    10. '	return' → logprob: -11.778615951538086

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09358782321214676
    2. '=' → logprob: -2.593587875366211
    3. 'um' → logprob: -4.593587875366211
    4. '_' → logprob: -6.093587875366211
    5. 'umber' → logprob: -6.218587875366211
    6. '=int' → logprob: -8.968587875366211
    7. 'ext' → logprob: -10.343587875366211
    8. 'u' → logprob: -11.468587875366211
    9. '_ext' → logprob: -11.843587875366211
    10. 'e' → logprob: -11.843587875366211

Token 86: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04858759790658951
    2. ' int' → logprob: -3.0485875606536865
    3. '[int' → logprob: -16.048587799072266
    4. '(int' → logprob: -16.923587799072266
    5. '<int' → logprob: -17.423587799072266
    6. '=int' → logprob: -17.548587799072266
    7. '	int' → logprob: -19.173587799072266
    8. ':int' → logprob: -19.673587799072266
    9. '```' → logprob: -20.798587799072266
    10. ']int' → logprob: -20.923587799072266

Token 87: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.008615161292254925
    2. '(' → logprob: -4.758615016937256
    3. '(
' → logprob: -15.883615493774414
    4. '(lines' → logprob: -16.008615493774414
    5. ' (' → logprob: -16.258615493774414
    6. '(

' → logprob: -16.508615493774414
    7. '#line' → logprob: -16.758615493774414
    8. '(n' → logprob: -16.883615493774414
    9. '=line' → logprob: -17.133615493774414
    10. '(Line' → logprob: -17.883615493774414

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00320433103479445
    2. ')
' → logprob: -5.753204345703125
    3. '           ' → logprob: -11.003204345703125
    4. ')
' → logprob: -12.378204345703125
    5. ' )' → logprob: -12.753204345703125
    6. ')return' → logprob: -13.003204345703125
    7. '               ' → logprob: -15.378204345703125
    8. ')`' → logprob: -16.128204345703125
    9. '       ' → logprob: -16.628204345703125
    10. ')

' → logprob: -16.753204345703125

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.927930654550437e-05
    2. '               ' → logprob: -11.375029563903809
    3. 'return' → logprob: -11.625029563903809
    4. ' return' → logprob: -11.875029563903809
    5. '       ' → logprob: -13.750029563903809
    6. '            
' → logprob: -15.375029563903809
    7. '   ' → logprob: -15.750029563903809
    8. '```' → logprob: -16.125028610229492
    9. '		' → logprob: -16.625028610229492
    10. '          ' → logprob: -17.250028610229492

Token 90: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6383031010627747
    2. '           ' → logprob: -1.1383030414581299
    3. ' return' → logprob: -1.8883030414581299
    4. ' if' → logprob: -9.76330280303955
    5. 'if' (adapté à ' if') → logprob: -9.88830280303955
    6. '               ' → logprob: -12.38830280303955
    7. '   ' → logprob: -12.51330280303955
    8. '       ' → logprob: -12.63830280303955
    9. '          ' → logprob: -14.63830280303955
    10. ' ' → logprob: -14.76330280303955

Token 91: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.002813909435644746
    2. 'n' → logprob: -5.877813816070557
    3. '0' → logprob: -12.127814292907715
    4. ' ' → logprob: -12.877814292907715
    5. ' ' → logprob: -14.377814292907715
    6. '	n' → logprob: -16.0028133392334
    7. '1' → logprob: -16.8778133392334
    8. ' not' → logprob: -16.8778133392334
    9. '(n' → logprob: -17.0028133392334
    10. '<|end|>' → logprob: -17.3778133392334

Token 92: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7395759224891663
    2. ' >' → logprob: -1.6145758628845215
    3. ' <=' → logprob: -2.2395758628845215
    4. '>=' → logprob: -2.4895758628845215
    5. ' <' → logprob: -2.6145758628845215
    6. '>' → logprob: -3.6145758628845215
    7. ' ==' → logprob: -4.2395758628845215
    8. '<=' → logprob: -4.4895758628845215
    9. '<' → logprob: -4.9895758628845215
    10. '==' → logprob: -6.7395758628845215

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04071080684661865
    2. ' ' → logprob: -3.540710926055908
    3. '-' → logprob: -4.540710926055908
    4. ' -' → logprob: -8.41571044921875
    5. '42' → logprob: -12.41571044921875
    6. '   ' → logprob: -12.91571044921875
    7. '1' → logprob: -13.29071044921875
    8. '  ' → logprob: -14.04071044921875
    9. '99' → logprob: -14.72821044921875
    10. '999' → logprob: -15.04071044921875

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00541102746501565
    2. '-' → logprob: -5.255411148071289
    3. ' ' → logprob: -8.880411148071289
    4. '42' → logprob: -10.880411148071289
    5. ' -' → logprob: -11.880411148071289
    6. '1' → logprob: -12.255411148071289
    7. '   ' → logprob: -14.192911148071289
    8. '7' → logprob: -14.192911148071289
    9. '999' → logprob: -14.380411148071289
    10. '4' → logprob: -14.567911148071289

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03820455074310303
    2. ':
' → logprob: -3.2882046699523926
    3. ':return' → logprob: -9.413204193115234
    4. '           ' → logprob: -10.413204193115234
    5. '               ' → logprob: -10.538204193115234
    6. ':
' → logprob: -11.538204193115234
    7. ' :' → logprob: -11.663204193115234
    8. '   ' → logprob: -12.538204193115234
    9. ' :
' → logprob: -14.163204193115234
    10. ':

' → logprob: -14.288204193115234

Token 96: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005199087900109589
    2. '           ' → logprob: -7.625519752502441
    3. ' return' → logprob: -11.125519752502441
    4. 'return' → logprob: -12.375519752502441
    5. ':return' → logprob: -12.375519752502441
    6. '                
' → logprob: -13.000519752502441
    7. '              ' → logprob: -13.375519752502441
    8. '                   ' → logprob: -13.500519752502441
    9. '   ' → logprob: -13.750519752502441
    10. ':' → logprob: -14.500519752502441

Token 97: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6709901690483093
    2. 'return' (adapté à ' return') → logprob: -0.9209901690483093
    3. '               ' → logprob: -2.545990228652954
    4. ' break' → logprob: -4.795989990234375
    5. 'break' → logprob: -5.670989990234375
    6. '           ' → logprob: -8.545989990234375
    7. '                ' → logprob: -8.670989990234375
    8. ':return' → logprob: -9.545989990234375
    9. '                   ' → logprob: -9.795989990234375
    10. '	return' → logprob: -10.920989990234375

Token 98: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06196869537234306
    2. ' None' → logprob: -2.8119688034057617
    3. ',None' → logprob: -14.686968803405762
    4. '(None' → logprob: -15.186968803405762
    5. '_None' → logprob: -15.561968803405762
    6. '=None' → logprob: -16.686967849731445
    7. '.None' → logprob: -17.436967849731445
    8. 'none' → logprob: -18.186967849731445
    9. '_none' → logprob: -18.311967849731445
    10. '0' → logprob: -18.811967849731445

Token 99: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.570319702499546e-05
    2. 'return' → logprob: -11.625025749206543
    3. '       ' → logprob: -11.750025749206543
    4. '          ' → logprob: -12.500025749206543
    5. '            
' → logprob: -13.250025749206543
    6. '		' → logprob: -13.375025749206543
    7. '   ' → logprob: -15.250025749206543
    8. '               ' → logprob: -15.375025749206543
    9. ' return' → logprob: -15.375025749206543
    10. 'else' → logprob: -15.750025749206543

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.438573680294212e-06
    2. '            
' → logprob: -13.000005722045898
    3. '          ' → logprob: -14.000005722045898
    4. '       ' → logprob: -14.125005722045898
    5. 'return' → logprob: -14.250005722045898
    6. '
' → logprob: -14.875005722045898
    7. '		' → logprob: -15.500005722045898
    8. '               ' → logprob: -16.0000057220459
    9. '<|end|>' → logprob: -16.3750057220459
    10. '   ' → logprob: -16.8750057220459

Token 101: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03592110797762871
    2. 'return' (adapté à ' return') → logprob: -3.410921096801758
    3. ' return' → logprob: -6.785921096801758
    4. '       ' → logprob: -6.785921096801758
    5. '          ' → logprob: -11.910921096801758
    6. '   ' → logprob: -13.035921096801758
    7. '               ' → logprob: -13.410921096801758
    8. '         ' → logprob: -14.285921096801758
    9. '```' → logprob: -14.410921096801758
    10. '        ' → logprob: -14.535921096801758

Token 102: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.029751067981123924
    2. 'n' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.52975082397461
    4. '	n' → logprob: -16.65475082397461
    5. ' ' → logprob: -19.15475082397461
    6. '_n' → logprob: -21.15475082397461
    7. '    ' → logprob: -21.52975082397461
    8. ')n' → logprob: -21.65475082397461
    9. ' ' → logprob: -21.77975082397461
    10. '(n' → logprob: -21.90475082397461

Token 103: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.043748341500759125
    2. 'c' → logprob: -4.293748378753662
    3. '#' → logprob: -4.543748378753662
    4. '<|end|>' → logprob: -5.043748378753662
    5. '```' → logprob: -5.043748378753662
    6. ' class' → logprob: -6.293748378753662
    7. '
' → logprob: -6.793748378753662
    8. ' ' → logprob: -7.293748378753662
    9. '   ' → logprob: -8.043747901916504
    10. 'n' → logprob: -8.543747901916504

Token 105: ' Ferm' (ID: 156422)
  Prédit: ' File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' File' → logprob: -0.29264140129089355
    2. ' List' → logprob: -1.5426414012908936
    3. 'File' → logprob: -4.917641639709473
    4. ' Tuple' → logprob: -5.292641639709473
    5. ' Matrix' → logprob: -5.792641639709473
    6. ' Array' → logprob: -5.792641639709473
    7. ' String' → logprob: -5.917641639709473
    8. 'List' → logprob: -6.167641639709473
    9. ' Input' → logprob: -6.292641639709473
    10. ' Output' → logprob: -6.417641639709473

Token 106: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0006727590807713568
    2. 'i' → logprob: -7.375672817230225
    3. 'ion' → logprob: -10.750672340393066
    4. '```' → logprob: -12.250672340393066
    5. 'a' → logprob: -12.375672340393066
    6. 'iat' → logprob: -12.500672340393066
    7. '`' → logprob: -13.000672340393066
    8. '   ' → logprob: -13.250672340393066
    9. 'ate' → logprob: -13.750672340393066
    10. 'it' → logprob: -14.000672340393066

Token 107: 'Last' (ID: 6949)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -1.0999430418014526
    2. 'Number' → logprob: -1.4749430418014526
    3. 'Solver' → logprob: -1.7249430418014526
    4. 'Test' → logprob: -1.9749430418014526
    5. 'Prime' → logprob: -2.849943161010742
    6. 'Tester' → logprob: -3.849943161010742
    7. 'Pr' → logprob: -4.724943161010742
    8. 'Input' → logprob: -4.974943161010742
    9. 'Checker' → logprob: -5.224943161010742
    10. 'Problem' → logprob: -5.474943161010742

Token 108: 'The' (ID: 976)
  Prédit: 'The'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -0.006809157319366932
    2. 'the' → logprob: -6.256809234619141
    3. 'class' → logprob: -7.256809234619141
    4. 'Writer' → logprob: -7.256809234619141
    5. 'Solver' → logprob: -7.881809234619141
    6. 'Helper' → logprob: -7.881809234619141
    7. 'Problem' → logprob: -8.13180923461914
    8. 'Input' → logprob: -8.38180923461914
    9. 'Step' → logprob: -8.50680923461914
    10. 'Theory' → logprob: -8.63180923461914

Token 109: 'orem' (ID: 21468)
  Prédit: 'orem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orem' → logprob: -0.00027087211492471397
    2. 'or' → logprob: -9.37527084350586
    3. 'ore' → logprob: -9.37527084350586
    4. 'orm' → logprob: -9.87527084350586
    5. 'orum' → logprob: -10.37527084350586
    6. 'o' → logprob: -12.00027084350586
    7. 'ory' → logprob: -12.37527084350586
    8. '```' → logprob: -13.25027084350586
    9. 'The' → logprob: -13.37527084350586
    10. '`' → logprob: -14.12527084350586

Token 110: 'Verifier' (ID: 91764)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.5577114224433899
    2. ':' → logprob: -1.3077113628387451
    3. '(Input' → logprob: -2.932711362838745
    4. '(' → logprob: -2.932711362838745
    5. 'Checker' → logprob: -3.557711362838745
    6. 'Verifier' → logprob: -4.682711601257324
    7. 'Tester' → logprob: -5.557711601257324
    8. 'Input' → logprob: -5.932711601257324
    9. 'Proof' → logprob: -6.057711601257324
    10. 'Test' → logprob: -6.807711601257324

Token 111: '(' (ID: 7)
  Prédit: '(Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Input' → logprob: -0.17639410495758057
    2. '(' → logprob: -1.9263941049575806
    3. ':' → logprob: -4.176393985748291
    4. '(Abstract' → logprob: -7.426393985748291
    5. '(Output' → logprob: -10.80139446258545
    6. '(I' → logprob: -10.92639446258545
    7. ' :' → logprob: -11.80139446258545
    8. ':
' → logprob: -12.30139446258545
    9. ' (' → logprob: -12.55139446258545
    10. '(INPUT' → logprob: -12.55139446258545

Token 112: 'ABC' (ID: 44197)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.04015154764056206
    2. 'ABC' → logprob: -3.290151596069336
    3. ')' → logprob: -6.915151596069336
    4. '):' → logprob: -7.040151596069336
    5. '):
' → logprob: -9.040151596069336
    6. 'object' → logprob: -9.790151596069336
    7. ':' → logprob: -10.665151596069336
    8. 'Abstract' → logprob: -11.540151596069336
    9. ' Input' → logprob: -11.790151596069336
    10. ':
' → logprob: -12.040151596069336

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011178798973560333
    2. '):
' → logprob: -4.511178970336914
    3. ':' → logprob: -9.761178970336914
    4. '   ' → logprob: -10.761178970336914
    5. ',' → logprob: -11.261178970336914
    6. ' ):' → logprob: -11.386178970336914
    7. '):
' → logprob: -11.386178970336914
    8. ')' → logprob: -11.511178970336914
    9. '):

' → logprob: -12.511178970336914
    10. '(' → logprob: -14.386178970336914

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033153212280012667
    2. ':' → logprob: -8.75033187866211
    3. ' def' → logprob: -9.25033187866211
    4. 'def' → logprob: -10.12533187866211
    5. '(' → logprob: -11.25033187866211
    6. '   ' → logprob: -12.37533187866211
    7. ')' → logprob: -12.50033187866211
    8. ' indentation' → logprob: -12.62533187866211
    9. '	def' → logprob: -13.12533187866211
    10. ',' → logprob: -13.50033187866211

Token 115: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39200925827026367
    2. '@' (adapté à ' @') → logprob: -1.1420092582702637
    3. ' @' → logprob: -5.517009258270264
    4. 'def' → logprob: -6.892009258270264
    5. ' def' → logprob: -9.767009735107422
    6. 'class' → logprob: -10.642009735107422
    7. 'from' → logprob: -12.267009735107422
    8. '    
' → logprob: -13.017009735107422
    9. '  ' → logprob: -13.767009735107422
    10. ' ' → logprob: -14.642009735107422

Token 116: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.5094070477061905e-05
    2. 'property' → logprob: -11.375015258789062
    3. 'ab' → logprob: -13.500015258789062
    4. 'staticmethod' → logprob: -14.000015258789062
    5. 'abc' → logprob: -14.500015258789062
    6. ' abstract' → logprob: -14.875015258789062
    7. 'classmethod' → logprob: -14.875015258789062
    8. 'abs' → logprob: -16.000015258789062
    9. '.abstract' → logprob: -17.875015258789062
    10. 'class' → logprob: -18.000015258789062

Token 117: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0009146820520982146
    2. '_method' → logprob: -7.000914573669434
    3. 'def' → logprob: -13.375914573669434
    4. 'classmethod' → logprob: -13.500914573669434
    5. 'meth' → logprob: -16.50091552734375
    6. 'ethod' → logprob: -17.12591552734375
    7. 'staticmethod' → logprob: -17.12591552734375
    8. '__' → logprob: -17.25091552734375
    9. '	method' → logprob: -18.00091552734375
    10. '.method' → logprob: -18.00091552734375

Token 118: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1699763536453247
    2. ' def' → logprob: -2.169976234436035
    3. '   ' → logprob: -3.169976234436035
    4. '
' → logprob: -9.169976234436035
    5. '	def' → logprob: -10.669976234436035
    6. '  ' → logprob: -13.544976234436035
    7. '    ' → logprob: -14.419976234436035
    8. ' ' → logprob: -14.544976234436035
    9. '    
' → logprob: -15.919976234436035
    10. '
' → logprob: -15.919976234436035

Token 119: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08693966269493103
    2. '   ' → logprob: -2.586939573287964
    3. '
' → logprob: -5.461939811706543
    4. ' def' → logprob: -5.586939811706543
    5. '	def' → logprob: -11.211939811706543
    6. '  ' → logprob: -12.711939811706543
    7. '    
' → logprob: -12.836939811706543
    8. '```' → logprob: -13.211939811706543
    9. ' ' → logprob: -13.961939811706543
    10. '
' → logprob: -14.211939811706543

Token 120: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016146517009474337
    2. ' def' → logprob: -9.125161170959473
    3. '
' → logprob: -10.750161170959473
    4. '   ' → logprob: -11.750161170959473
    5. 'classmethod' → logprob: -11.875161170959473
    6. 'staticmethod' → logprob: -12.125161170959473
    7. 'property' → logprob: -12.375161170959473
    8. 'abstract' → logprob: -12.875161170959473
    9. 'method' → logprob: -13.000161170959473
    10. 'class' → logprob: -13.750161170959473

Token 121: ' verify' (ID: 14866)
  Prédit: ' verify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' verify' → logprob: -0.13420575857162476
    2. 'verify' → logprob: -2.1342058181762695
    3. 'def' → logprob: -5.3842058181762695
    4. ' def' → logprob: -6.0092058181762695
    5. ' check' → logprob: -9.50920581817627
    6. 'check' → logprob: -10.75920581817627
    7. ' validate' → logprob: -11.00920581817627
    8. '	verify' → logprob: -11.00920581817627
    9. 'validate' → logprob: -11.25920581817627
    10. ' verifies' → logprob: -11.50920581817627

Token 122: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030752286314964294
    2. '(' → logprob: -3.530752182006836
    3. '_next' → logprob: -7.405752182006836
    4. '(
' → logprob: -8.030752182006836
    5. 'self' → logprob: -10.405752182006836
    6. '_' → logprob: -10.905752182006836
    7. ' (' → logprob: -11.905752182006836
    8. '   ' → logprob: -13.155752182006836
    9. '_(' → logprob: -13.530752182006836
    10. ' self' → logprob: -13.655752182006836

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23668059706687927
    2. ' ,' → logprob: -1.7366806268692017
    3. '_next' → logprob: -3.736680507659912
    4. ')' → logprob: -4.861680507659912
    5. 'self' → logprob: -6.861680507659912
    6. '_,' → logprob: -7.611680507659912
    7. ',
' → logprob: -7.736680507659912
    8. '   ' → logprob: -8.73668098449707
    9. ',next' → logprob: -9.11168098449707
    10. ' next' → logprob: -9.11168098449707

Token 124: ' z' (ID: 579)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.082597516477108
    2. ' a' → logprob: -2.582597494125366
    3. ')' → logprob: -6.082597732543945
    4. 'x' → logprob: -7.332597732543945
    5. 'n' → logprob: -8.832597732543945
    6. ' x' → logprob: -9.207597732543945
    7. ' )' → logprob: -9.520097732543945
    8. '   ' → logprob: -10.020097732543945
    9. '```' → logprob: -10.145097732543945
    10. 'p' → logprob: -10.207597732543945

Token 125: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024269787594676018
    2. ',' → logprob: -3.8992698192596436
    3. ':int' → logprob: -5.6492695808410645
    4. ' :' → logprob: -8.899270057678223
    5. ')' → logprob: -10.524270057678223
    6. ' ,' → logprob: -10.899270057678223
    7. '   ' → logprob: -12.149270057678223
    8. '):' → logprob: -12.524270057678223
    9. ' )' → logprob: -13.774270057678223
    10. '  ' → logprob: -13.899270057678223

Token 126: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07921913266181946
    2. ' int' → logprob: -2.579219102859497
    3. ')' → logprob: -9.079218864440918
    4. '   ' → logprob: -9.579218864440918
    5. ':int' → logprob: -9.579218864440918
    6. ',' → logprob: -11.079218864440918
    7. '[int' → logprob: -11.204218864440918
    8. ':' → logprob: -11.579218864440918
    9. ' ' → logprob: -11.579218864440918
    10. '  ' → logprob: -12.079218864440918

Token 127: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04897326976060867
    2. ')' → logprob: -3.048973321914673
    3. ' ,' → logprob: -8.173973083496094
    4. ',
' → logprob: -10.173973083496094
    5. ' )' → logprob: -10.173973083496094
    6. '   ' → logprob: -11.048973083496094
    7. ',)' → logprob: -13.173973083496094
    8. '       ' → logprob: -13.548973083496094
    9. '):' → logprob: -13.673973083496094
    10. ',
' → logprob: -13.798973083496094

Token 128: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.7299439311027527
    2. ')' → logprob: -0.8549439311027527
    3. '->' → logprob: -2.8549439907073975
    4. ',' → logprob: -3.3549439907073975
    5. ')->' → logprob: -8.854944229125977
    6. '   ' → logprob: -9.104944229125977
    7. ' )' → logprob: -11.604944229125977
    8. ':' → logprob: -11.729944229125977
    9. '       ' → logprob: -12.104944229125977
    10. ' ' → logprob: -12.604944229125977

Token 129: ' int' (ID: 677)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.07662034034729004
    2. 'Optional' → logprob: -3.32662034034729
    3. 'Iterator' → logprob: -3.95162034034729
    4. ' bool' → logprob: -4.076620101928711
    5. ' Optional' → logprob: -7.076620101928711
    6. 'None' → logprob: -8.326620101928711
    7. ' Iterator' → logprob: -8.451620101928711
    8. 'Tuple' → logprob: -8.576620101928711
    9. 'int' → logprob: -9.451620101928711
    10. 'str' → logprob: -10.826620101928711

Token 130: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7963023781776428
    2. ':' → logprob: -0.9213023781776428
    3. ')' → logprob: -2.171302318572998
    4. '   ' → logprob: -3.671302318572998
    5. '       ' → logprob: -5.171302318572998
    6. ' ->' → logprob: -5.921302318572998
    7. '):' → logprob: -6.671302318572998
    8. ':
' → logprob: -7.046302318572998
    9. '<|end|>' → logprob: -8.296302795410156
    10. '    ' → logprob: -9.171302795410156

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5415582060813904
    2. '<|end|>' → logprob: -0.9165582060813904
    3. ' pass' → logprob: -4.166558265686035
    4. '<|end|>' → logprob: -7.041558265686035
    5. ' ' → logprob: -7.166558265686035
    6. '   ' → logprob: -7.666558265686035
    7. '    ' → logprob: -8.416558265686035
    8. 'pass' → logprob: -9.166558265686035
    9. ')' → logprob: -9.791558265686035
    10. '      ' → logprob: -9.791558265686035

Token 132: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.401687890291214
    2. ' pass' → logprob: -1.1516878604888916
    3. '       ' → logprob: -4.276688098907471
    4. '...' → logprob: -7.526688098907471
    5. '   ' → logprob: -8.526687622070312
    6. '	pass' → logprob: -10.026687622070312
    7. '    ' → logprob: -11.276687622070312
    8. '  ' → logprob: -12.026687622070312
    9. '<|end|>' → logprob: -12.151687622070312
    10. '        ' → logprob: -12.776687622070312

Token 133: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00605298625305295
    2. '
' → logprob: -5.1310529708862305
    3. '

' → logprob: -9.25605297088623
    4. '<|end|>' → logprob: -11.50605297088623
    5. ' class' → logprob: -11.75605297088623
    6. '


' → logprob: -12.50605297088623
    7. ' 
' → logprob: -12.88105297088623
    8. '  
' → logprob: -14.13105297088623
    9. '```' → logprob: -14.13105297088623
    10. 'newline' → logprob: -14.38105297088623

Token 135: ' Cub' (ID: 42140)
  Prédit: 'Simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Simple' → logprob: -0.631462037563324
    2. 'F' → logprob: -1.5064620971679688
    3. ' Ferm' → logprob: -2.2564620971679688
    4. 'P' → logprob: -3.5064620971679688
    5. 'Sum' → logprob: -3.6314620971679688
    6. ' Simple' → logprob: -4.006462097167969
    7. 'Concrete' → logprob: -4.756462097167969
    8. 'S' → logprob: -5.006462097167969
    9. 'Na' → logprob: -5.256462097167969
    10. 'Dummy' → logprob: -5.756462097167969

Token 136: 'ic' (ID: 291)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05654207244515419
    2. 'ic' → logprob: -2.931542158126831
    3. 'class' → logprob: -6.556541919708252
    4. 'it' → logprob: -9.43154239654541
    5. 'er' → logprob: -9.43154239654541
    6. 'ist' → logprob: -11.18154239654541
    7. 'i' → logprob: -11.30654239654541
    8. 'ical' → logprob: -11.80654239654541
    9. 'a' → logprob: -12.30654239654541
    10. 'import' → logprob: -12.68154239654541

Token 137: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.7263482213020325
    2. 'F' → logprob: -1.6013481616973877
    3. 'Verifier' → logprob: -1.6013481616973877
    4. 'Root' → logprob: -3.6013481616973877
    5. 'S' → logprob: -3.7263481616973877
    6. 'Solver' → logprob: -3.8513481616973877
    7. 'Equation' → logprob: -4.476348400115967
    8. 'Input' → logprob: -4.601348400115967
    9. 'Power' → logprob: -4.976348400115967
    10. 'Roots' → logprob: -5.851348400115967

Token 138: 'Max' (ID: 6499)
  Prédit: 'Verifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Verifier' → logprob: -0.011430335231125355
    2. 'Checker' → logprob: -5.761430263519287
    3. 'De' → logprob: -6.511430263519287
    4. 'F' → logprob: -6.511430263519287
    5. 'Sum' → logprob: -6.886430263519287
    6. 'The' → logprob: -7.136430263519287
    7. 'Solver' → logprob: -7.136430263519287
    8. '(F' → logprob: -7.386430263519287
    9. '(' → logprob: -7.636430263519287
    10. 'Of' → logprob: -7.886430263519287

Token 139: 'im' (ID: 321)
  Prédit: 'Verifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Verifier' → logprob: -0.610584557056427
    2. 'Finder' → logprob: -1.6105844974517822
    3. 'Checker' → logprob: -1.7355844974517822
    4. 'im' → logprob: -3.1105844974517822
    5. 'er' → logprob: -4.860584735870361
    6. 'Calculator' → logprob: -5.485584735870361
    7. 'imum' → logprob: -5.610584735870361
    8. 'imal' → logprob: -5.735584735870361
    9. 'Solver' → logprob: -5.860584735870361
    10. 'Analyzer' → logprob: -6.610584735870361

Token 140: 'izer' (ID: 4492)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.5422177910804749
    2. 'izer' → logprob: -0.9172177910804749
    3. 'al' → logprob: -4.04221773147583
    4. 'ize' → logprob: -8.042218208312988
    5. 'izing' → logprob: -8.292218208312988
    6. 'umer' → logprob: -8.667218208312988
    7. 'ized' → logprob: -8.917218208312988
    8. 'ization' → logprob: -9.542218208312988
    9. '   ' → logprob: -9.542218208312988
    10. '```' → logprob: -10.167218208312988

Token 141: '(F' (ID: 12044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5119275450706482
    2. '(F' → logprob: -1.011927604675293
    3. ':' → logprob: -3.386927604675293
    4. '(Abstract' → logprob: -5.886927604675293
    5. '(Input' → logprob: -7.761927604675293
    6. '(C' → logprob: -9.761927604675293
    7. ':
' → logprob: -10.261927604675293
    8. '(S' → logprob: -11.636927604675293
    9. ':F' → logprob: -11.886927604675293
    10. ' :' → logprob: -12.261927604675293

Token 142: 'erm' (ID: 1180)
  Prédit: 'erm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erm' → logprob: -0.0030762290116399527
    2. 'er' → logprob: -6.253076076507568
    3. 'ermit' → logprob: -7.503076076507568
    4. 'ermut' → logprob: -7.878076076507568
    5. 'ermi' → logprob: -9.628076553344727
    6. '```' → logprob: -10.503076553344727
    7. '(' → logprob: -10.878076553344727
    8. 'ermo' → logprob: -10.878076553344727
    9. 'e' → logprob: -11.003076553344727
    10. 'ermont' → logprob: -11.753076553344727

Token 143: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -5.200166469876422e-06
    2. 'ат' → logprob: -13.125004768371582
    3. ' at' → logprob: -13.750004768371582
    4. '   ' → logprob: -14.500004768371582
    5. '<|end|>' → logprob: -15.500004768371582
    6. '	at' → logprob: -15.625004768371582
    7. 'a' → logprob: -16.0000057220459
    8. '```' → logprob: -16.1250057220459
    9. 'ats' → logprob: -16.2500057220459
    10. '...' → logprob: -16.3750057220459

Token 144: 'Last' (ID: 6949)
  Prédit: 'Last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -1.6240566083070007e-06
    2. '_Last' → logprob: -14.500001907348633
    3. '	Last' → logprob: -14.625001907348633
    4. ' Last' → logprob: -14.875001907348633
    5. ')' → logprob: -16.750001907348633
    6. '.Last' → logprob: -17.125001907348633
    7. 'Las' → logprob: -17.500001907348633
    8. 'Next' → logprob: -17.625001907348633
    9. '_last' → logprob: -17.875001907348633
    10. 'L' → logprob: -18.125001907348633

Token 145: 'The' (ID: 976)
  Prédit: 'The'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -1.1279553291387856e-05
    2. 'the' → logprob: -11.875011444091797
    3. '_the' → logprob: -13.875011444091797
    4. ' theorem' → logprob: -14.000011444091797
    5. ' The' → logprob: -14.250011444091797
    6. '-The' → logprob: -14.625011444091797
    7. '-the' → logprob: -15.125011444091797
    8. '-' → logprob: -15.375011444091797
    9. 'Theory' → logprob: -15.375011444091797
    10. 'Ther' → logprob: -15.625011444091797

Token 146: 'orem' (ID: 21468)
  Prédit: 'orem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orem' → logprob: -0.43857255578041077
    2. 'The' → logprob: -1.0635725259780884
    3. ' theorem' → logprob: -5.313572406768799
    4. 'the' → logprob: -6.313572406768799
    5. 'orum' → logprob: -6.438572406768799
    6. 'o' → logprob: -7.438572406768799
    7. 'or' → logprob: -7.938572406768799
    8. 'ore' → logprob: -8.688572883605957
    9. '```' → logprob: -9.938572883605957
    10. 'orm' → logprob: -9.938572883605957

Token 147: 'Verifier' (ID: 91764)
  Prédit: 'Verifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Verifier' → logprob: -9.849109119386412e-06
    2. ')' → logprob: -12.375009536743164
    3. 'ver' → logprob: -13.125009536743164
    4. 'Ver' → logprob: -14.250009536743164
    5. ',' → logprob: -14.250009536743164
    6. ' verifier' → logprob: -15.250009536743164
    7. '   ' → logprob: -15.625009536743164
    8. ' )' → logprob: -15.625009536743164
    9. '_Ver' → logprob: -15.625009536743164
    10. '

' → logprob: -16.125009536743164

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002203547628596425
    2. '):
' → logprob: -6.127203464508057
    3. ' ):' → logprob: -11.627203941345215
    4. ')' → logprob: -12.252203941345215
    5. '):

' → logprob: -13.377203941345215
    6. '   ' → logprob: -13.377203941345215
    7. '):
' → logprob: -13.627203941345215
    8. ':' → logprob: -15.752203941345215
    9. ',' → logprob: -16.0022029876709
    10. '  ' → logprob: -17.0022029876709

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06076674535870552
    2. ':' → logprob: -3.0607666969299316
    3. ':
' → logprob: -4.685766696929932
    4. '):
' → logprob: -6.685766696929932
    5. '):' → logprob: -7.185766696929932
    6. ' def' → logprob: -7.560766696929932
    7. 'def' → logprob: -8.18576717376709
    8. ')' → logprob: -10.43576717376709
    9. ',' → logprob: -10.68576717376709
    10. '	def' → logprob: -11.81076717376709

Token 150: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11435279250144958
    2. 'def' (adapté à ' def') → logprob: -2.2393527030944824
    3. '   ' → logprob: -6.489352703094482
    4. ' ' → logprob: -12.11435317993164
    5. '	def' → logprob: -13.86435317993164
    6. '  ' → logprob: -14.23935317993164
    7. 'from' → logprob: -14.23935317993164
    8. '    ' → logprob: -14.61435317993164
    9. 'import' → logprob: -15.30185317993164
    10. 'class' → logprob: -15.73935317993164

Token 151: ' __' (ID: 2516)
  Prédit: ' verify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' verify' → logprob: -0.016441943123936653
    2. ' def' → logprob: -4.141441822052002
    3. 'verify' → logprob: -8.14144229888916
    4. ' __' → logprob: -10.14144229888916
    5. ' ver' → logprob: -10.51644229888916
    6. 'def' → logprob: -10.76644229888916
    7. ' ' → logprob: -11.26644229888916
    8. '_verify' → logprob: -12.26644229888916
    9. ' define' → logprob: -12.51644229888916
    10. '	verify' → logprob: -12.76644229888916

Token 152: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. ' init' → logprob: -15.5
    3. 'def' → logprob: -16.625
    4. 'ini' → logprob: -17.25
    5. '   ' → logprob: -17.5
    6. '_init' → logprob: -17.625
    7. 'int' → logprob: -17.875
    8. '```' → logprob: -17.875
    9. 'next' → logprob: -18.75
    10. '_' → logprob: -19.0

Token 153: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6344015002250671
    2. '(self' → logprob: -0.7594015002250671
    3. '(' → logprob: -6.509401321411133
    4. 'self' → logprob: -9.259401321411133
    5. ' (' → logprob: -9.509401321411133
    6. '__' → logprob: -9.884401321411133
    7. '__(
' → logprob: -10.259401321411133
    8. ')(' → logprob: -11.134401321411133
    9. '<>(' → logprob: -11.884401321411133
    10. '_(' → logprob: -12.009401321411133

Token 154: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007327937055379152
    2. ' self' → logprob: -7.250732898712158
    3. '   ' → logprob: -11.375732421875
    4. ')' → logprob: -11.875732421875
    5. '
' → logprob: -12.750732421875
    6. '(self' → logprob: -14.750732421875
    7. ' ' → logprob: -14.750732421875
    8. ',' → logprob: -15.500732421875
    9. '       ' → logprob: -15.500732421875
    10. '):
' → logprob: -15.875732421875

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030260423198342323
    2. 'self' → logprob: -3.5302603244781494
    3. '   ' → logprob: -8.90526008605957
    4. ' self' → logprob: -9.28026008605957
    5. '):
' → logprob: -9.28026008605957
    6. ' ,' → logprob: -9.65526008605957
    7. '(self' → logprob: -10.15526008605957
    8. '):' → logprob: -10.40526008605957
    9. ',self' → logprob: -10.65526008605957
    10. ')' → logprob: -11.53026008605957

Token 156: ' power' (ID: 3470)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.912942111492157
    2. 'max' → logprob: -1.1629421710968018
    3. 'n' → logprob: -2.4129421710968018
    4. 'z' → logprob: -2.7879421710968018
    5. 'limit' → logprob: -2.9129421710968018
    6. ' self' → logprob: -4.162941932678223
    7. ' max' → logprob: -4.162941932678223
    8. ' n' → logprob: -4.912941932678223
    9. ' limit' → logprob: -4.912941932678223
    10. 'N' → logprob: -5.412941932678223

Token 157: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6308231353759766
    2. '=' → logprob: -0.8808231353759766
    3. '):' → logprob: -3.2558231353759766
    4. ',' → logprob: -5.005823135375977
    5. ')' → logprob: -5.380823135375977
    6. 's' → logprob: -6.755823135375977
    7. ':int' → logprob: -7.255823135375977
    8. ' ):' → logprob: -7.880823135375977
    9. '1' → logprob: -8.130823135375977
    10. ' =' → logprob: -9.005823135375977

Token 158: ' int' (ID: 677)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0018824731232598424
    2. ' ' → logprob: -6.501882553100586
    3. 'int' → logprob: -8.376882553100586
    4. '   ' → logprob: -10.126882553100586
    5. ')' → logprob: -10.251882553100586
    6. 'self' → logprob: -10.876882553100586
    7. '=' → logprob: -11.376882553100586
    8. ' int' → logprob: -11.501882553100586
    9. ',' → logprob: -12.001882553100586
    10. '2' → logprob: -12.251882553100586

Token 159: '):
' (ID: 1883)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5286052227020264
    2. '):' → logprob: -1.5286052227020264
    3. ':' → logprob: -1.7786052227020264
    4. ')' → logprob: -3.7786052227020264
    5. ' =' → logprob: -6.4036054611206055
    6. ' ):' → logprob: -9.028605461120605
    7. '):
' → logprob: -9.153605461120605
    8. ',' → logprob: -9.653605461120605
    9. ' ' → logprob: -10.528605461120605
    10. ' )' → logprob: -11.153605461120605

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008789466228336096
    2. '   ' → logprob: -8.000879287719727
    3. ')' → logprob: -8.875879287719727
    4. '0' → logprob: -9.750879287719727
    5. '1' → logprob: -10.000879287719727
    6. '4' → logprob: -10.125879287719727
    7. ':' → logprob: -10.250879287719727
    8. '):
' → logprob: -10.250879287719727
    9. ' ' → logprob: -10.500879287719727
    10. 'self' → logprob: -10.500879287719727

Token 161: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7210059762001038
    2. 'self' (adapté à ' self') → logprob: -0.8460059762001038
    3. '       ' → logprob: -2.471005916595459
    4. '   ' → logprob: -9.846006393432617
    5. ' super' → logprob: -10.971006393432617
    6. 'super' → logprob: -11.096006393432617
    7. '	self' → logprob: -11.346006393432617
    8. ' ' → logprob: -11.596006393432617
    9. '0' → logprob: -13.846006393432617
    10. '           ' → logprob: -13.971006393432617

Token 162: '.power' (ID: 81878)
  Prédit: '.power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.power' → logprob: -0.02333049848675728
    2. '.' → logprob: -3.7733304500579834
    3. ' .' → logprob: -10.398330688476562
    4. 'power' → logprob: -10.773330688476562
    5. '.p' → logprob: -11.648330688476562
    6. '._' → logprob: -12.023330688476562
    7. ' ' → logprob: -12.148330688476562
    8. '.pow' → logprob: -12.148330688476562
    9. ' power' → logprob: -13.273330688476562
    10. '   ' → logprob: -13.773330688476562

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143496990203857
    2. '=' → logprob: -1.7014349699020386
    3. ' ' → logprob: -10.826435089111328
    4. '   ' → logprob: -14.826435089111328
    5. ',' → logprob: -14.951435089111328
    6. ' +=' → logprob: -14.951435089111328
    7. '=int' → logprob: -14.951435089111328
    8. '    ' → logprob: -15.451435089111328
    9. ')' → logprob: -16.951435089111328
    10. ' -=' → logprob: -17.201435089111328

Token 164: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.06287942826747894
    2. ' power' → logprob: -2.8128793239593506
    3. '3' → logprob: -7.06287956237793
    4. ' ' → logprob: -10.93787956237793
    5. 'pow' → logprob: -11.06287956237793
    6. '4' → logprob: -11.68787956237793
    7. '2' → logprob: -11.68787956237793
    8. '   ' → logprob: -13.81287956237793
    9. '  ' → logprob: -14.06287956237793
    10. '(power' → logprob: -14.06287956237793

Token 165: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1652974784374237
    2. '   ' → logprob: -2.290297508239746
    3. 'def' → logprob: -3.915297508239746
    4. '    
' → logprob: -4.415297508239746
    5. '<|end|>' → logprob: -4.415297508239746
    6. '<|end|>' → logprob: -5.915297508239746
    7. ' def' → logprob: -6.415297508239746
    8. '  
' → logprob: -6.665297508239746
    9. ' 
' → logprob: -7.665297508239746
    10. ')' → logprob: -8.415297508239746

Token 167: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011971610598266125
    2. '
' → logprob: -5.886971473693848
    3. ' def' → logprob: -6.011971473693848
    4. 'self' (adapté à ' self') → logprob: -6.261971473693848
    5. '   ' → logprob: -6.386971473693848
    6. 'import' → logprob: -6.886971473693848
    7. 'from' → logprob: -7.011971473693848
    8. '       ' → logprob: -8.136971473693848
    9. '0' → logprob: -8.136971473693848
    10. 'pass' → logprob: -8.636971473693848

Token 168: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.015842080116272
    2. '_max' → logprob: -1.765842080116272
    3. 'max' → logprob: -2.0158419609069824
    4. '.' → logprob: -2.3908419609069824
    5. '_cache' → logprob: -2.5158419609069824
    6. '_limit' → logprob: -4.015841960906982
    7. '_values' → logprob: -4.140841960906982
    8. '_results' → logprob: -4.640841960906982
    9. '_c' → logprob: -4.765841960906982
    10. '_' → logprob: -4.765841960906982

Token 169: 'cache' (ID: 18949)
  Prédit: 'cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.600468635559082
    2. 'max' → logprob: -0.850468635559082
    3. 'memo' → logprob: -4.225468635559082
    4. 'c' → logprob: -5.225468635559082
    5. 'pre' → logprob: -7.225468635559082
    6. 'limit' → logprob: -7.475468635559082
    7. 'results' → logprob: -7.725468635559082
    8. 'cached' → logprob: -7.850468635559082
    9. 'lookup' → logprob: -8.600468635559082
    10. 'pow' → logprob: -8.600468635559082

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935045719146729
    2. ' =' → logprob: -0.6935045719146729
    3. ':' → logprob: -7.943504333496094
    4. ' ' → logprob: -13.568504333496094
    5. '={}' → logprob: -15.318504333496094
    6. '[' → logprob: -15.443504333496094
    7. '=[]' → logprob: -15.693504333496094
    8. ')' → logprob: -16.068504333496094
    9. '   ' → logprob: -16.318504333496094
    10. ' :' → logprob: -16.693504333496094

Token 171: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00021605310030281544
    2. ' {}' → logprob: -8.500216484069824
    3. 'dict' → logprob: -11.375216484069824
    4. '[]' → logprob: -14.625216484069824
    5. '{}
' → logprob: -15.500216484069824
    6. ' dict' → logprob: -15.500216484069824
    7. '{},' → logprob: -16.250215530395508
    8. '={}' → logprob: -16.750215530395508
    9. '{})' → logprob: -17.500215530395508
    10. '{' → logprob: -17.625215530395508

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47085562348365784
    2. '
' → logprob: -1.2208555936813354
    3. '<|end|>' → logprob: -2.970855712890625
    4. '    
' → logprob: -3.720855712890625
    5. '<|end|>' → logprob: -6.220855712890625
    6. 'def' → logprob: -6.345855712890625
    7. '  
' → logprob: -7.220855712890625
    8. ' def' → logprob: -8.845855712890625
    9. '

' → logprob: -9.095855712890625
    10. '        
' → logprob: -9.345855712890625

Token 173: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016207880107685924
    2. '   ' → logprob: -7.001620769500732
    3. ' def' → logprob: -7.251620769500732
    4. '	def' → logprob: -17.12662124633789
    5. ' ' → logprob: -17.50162124633789
    6. '    
' → logprob: -18.87662124633789
    7. '  ' → logprob: -19.12662124633789
    8. ')' → logprob: -19.62662124633789
    9. '<|end|>' → logprob: -20.25162124633789
    10. '       ' → logprob: -20.87662124633789

Token 174: ' verify' (ID: 14866)
  Prédit: ' verify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' verify' → logprob: -0.20143672823905945
    2. 'verify' → logprob: -1.7014367580413818
    3. '_verify' → logprob: -11.326436996459961
    4. '	verify' → logprob: -12.951436996459961
    5. ' def' → logprob: -13.076436996459961
    6. ' maximize' → logprob: -13.076436996459961
    7. 'def' → logprob: -13.701436996459961
    8. '.verify' → logprob: -13.826436996459961
    9. 'maximize' → logprob: -14.576436996459961
    10. 'max' → logprob: -14.826436996459961

Token 175: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012487331696320325
    2. '(' → logprob: -9.00012493133545
    3. '(
' → logprob: -13.87512493133545
    4. ' (' → logprob: -14.87512493133545
    5. 'self' → logprob: -16.875123977661133
    6. ' self' → logprob: -19.000123977661133
    7. '   ' → logprob: -19.375123977661133
    8. '(s' → logprob: -19.875123977661133
    9. '(

' → logprob: -20.375123977661133
    10. '(Self' → logprob: -20.375123977661133

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016265720478259027
    2. ' ,' → logprob: -9.375163078308105
    3. 'self' → logprob: -9.500163078308105
    4. ',self' → logprob: -13.625163078308105
    5. '(self' → logprob: -13.875163078308105
    6. '   ' → logprob: -15.000163078308105
    7. ',
' → logprob: -15.375163078308105
    8. ')' → logprob: -16.12516212463379
    9. '       ' → logprob: -16.87516212463379
    10. ' self' → logprob: -17.50016212463379

Token 177: ' z' (ID: 579)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3367617130279541
    2. 'self' → logprob: -1.336761713027954
    3. ' z' → logprob: -3.836761713027954
    4. 'z' → logprob: -6.461761474609375
    5. '       ' → logprob: -10.086761474609375
    6. '   ' → logprob: -10.836761474609375
    7. ')' → logprob: -11.336761474609375
    8. '(self' → logprob: -12.211761474609375
    9. '0' → logprob: -12.461761474609375
    10. ' ' → logprob: -12.586761474609375

Token 178: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024233493953943253
    2. '):' → logprob: -4.024233341217041
    3. ')' → logprob: -5.149233341217041
    4. ' ):' → logprob: -9.0242338180542
    5. '):
' → logprob: -9.8992338180542
    6. ' )' → logprob: -10.1492338180542
    7. ' :' → logprob: -10.2742338180542
    8. ':int' → logprob: -11.2742338180542
    9. '   ' → logprob: -13.1492338180542
    10. '):
' → logprob: -14.5242338180542

Token 179: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.048594869673252106
    2. ' int' → logprob: -3.0485949516296387
    3. ')' → logprob: -12.42359447479248
    4. '   ' → logprob: -14.29859447479248
    5. 'Optional' → logprob: -14.42359447479248
    6. '[int' → logprob: -14.42359447479248
    7. ':int' → logprob: -14.42359447479248
    8. ' ' → logprob: -14.79859447479248
    9. ' Optional' → logprob: -15.17359447479248
    10. '(int' → logprob: -15.17359447479248

Token 180: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025978617486543953
    2. ' )' → logprob: -8.500259399414062
    3. '):' → logprob: -9.875259399414062
    4. '):
' → logprob: -13.000259399414062
    5. ':' → logprob: -13.750259399414062
    6. '   ' → logprob: -14.125259399414062
    7. '):
' → logprob: -14.750259399414062
    8. ' ):' → logprob: -15.250259399414062
    9. ' ' → logprob: -17.000259399414062
    10. ')->' → logprob: -17.125259399414062

Token 181: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004845346265938133
    2. ' ->' → logprob: -8.375484466552734
    3. '->' → logprob: -9.125484466552734
    4. ':
' → logprob: -9.500484466552734
    5. ')' → logprob: -9.750484466552734
    6. '   ' → logprob: -12.375484466552734
    7. '):' → logprob: -13.000484466552734
    8. '       ' → logprob: -13.375484466552734
    9. ' :' → logprob: -13.375484466552734
    10. ':int' → logprob: -13.875484466552734

Token 182: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5492162108421326
    2. ' int' → logprob: -0.9242162108421326
    3. ' Tuple' → logprob: -4.674216270446777
    4. ' Optional' → logprob: -4.799216270446777
    5. 'Optional' → logprob: -5.299216270446777
    6. 'Tuple' → logprob: -5.924216270446777
    7. ' tuple' → logprob: -8.799216270446777
    8. ' None' → logprob: -9.049216270446777
    9. 'None' → logprob: -9.674216270446777
    10. 'tuple' → logprob: -9.799216270446777

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020581480115652084
    2. ':
' → logprob: -3.8955814838409424
    3. '       ' → logprob: -10.645581245422363
    4. '):
' → logprob: -12.020581245422363
    5. '):' → logprob: -12.770581245422363
    6. ' :' → logprob: -12.895581245422363
    7. ':
' → logprob: -13.395581245422363
    8. ' :
' → logprob: -13.895581245422363
    9. '   ' → logprob: -14.020581245422363
    10. ',' → logprob: -15.020581245422363

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015744947595521808
    2. ' max' → logprob: -7.626574516296387
    3. 'max' → logprob: -7.626574516296387
    4. 'n' → logprob: -8.001574516296387
    5. ' for' → logprob: -9.626574516296387
    6. ' n' → logprob: -9.751574516296387
    7. ' if' → logprob: -10.751574516296387
    8. 'for' → logprob: -11.376574516296387
    9. ' x' → logprob: -11.501574516296387
    10. 'if' → logprob: -11.501574516296387

Token 185: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7237545847892761
    2. 'if' → logprob: -1.098754644393921
    3. '       ' → logprob: -1.848754644393921
    4. ' if' → logprob: -4.223754405975342
    5. ' max' → logprob: -5.098754405975342
    6. 'result' → logprob: -6.348754405975342
    7. 'import' → logprob: -7.223754405975342
    8. 'n' → logprob: -8.0987548828125
    9. 'for' → logprob: -9.2237548828125
    10. 'best' → logprob: -9.3487548828125

Token 186: ' Check' (ID: 6208)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17580214142799377
    2. ' max' → logprob: -2.300802230834961
    3. 'if' → logprob: -3.425802230834961
    4. 'result' → logprob: -4.800802230834961
    5. ' if' → logprob: -4.925802230834961
    6. 'best' → logprob: -5.800802230834961
    7. '       ' → logprob: -6.300802230834961
    8. ' result' → logprob: -6.550802230834961
    9. 'import' → logprob: -6.550802230834961
    10. ' best' → logprob: -6.675802230834961

Token 187: ' cache' (ID: 11956)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1614474654197693
    2. 'if' → logprob: -1.911447525024414
    3. 'self' → logprob: -7.536447525024414
    4. ' self' → logprob: -7.786447525024414
    5. ' z' → logprob: -8.411447525024414
    6. '       ' → logprob: -10.411447525024414
    7. 'for' → logprob: -11.911447525024414
    8. ' for' → logprob: -12.036447525024414
    9. '   ' → logprob: -12.411447525024414
    10. 'z' → logprob: -12.786447525024414

Token 188: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2886158227920532
    2. ' if' → logprob: -1.4136158227920532
    3. 'if' → logprob: -5.538615703582764
    4. ',' → logprob: -6.913615703582764
    5. ' =' → logprob: -7.413615703582764
    6. ':' → logprob: -7.913615703582764
    7. '.setdefault' → logprob: -8.163616180419922
    8. '.get' → logprob: -8.288616180419922
    9. '<|end|>' → logprob: -8.663616180419922
    10. '        ' → logprob: -8.913616180419922

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0074704475700855255
    2. ' if' → logprob: -5.382470607757568
    3. 'if' → logprob: -5.882470607757568
    4. '<|end|>' → logprob: -10.75747013092041
    5. ',' → logprob: -11.25747013092041
    6. ' =' → logprob: -13.13247013092041
    7. '           ' → logprob: -13.25747013092041
    8. ':' → logprob: -13.25747013092041
    9. '      ' → logprob: -13.25747013092041
    10. '   ' → logprob: -13.25747013092041

Token 190: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8302655220031738
    2. ' if' → logprob: -1.2052655220031738
    3. 'if' (adapté à ' if') → logprob: -1.3302655220031738
    4. '<|end|>' → logprob: -10.705265045166016
    5. 'result' → logprob: -11.830265045166016
    6. '	if' → logprob: -12.080265045166016
    7. 'value' → logprob: -13.330265045166016
    8. '```' → logprob: -13.580265045166016
    9. 'return' → logprob: -13.955265045166016
    10. '        
' → logprob: -14.080265045166016

Token 191: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.004078639671206474
    2. 'z' → logprob: -5.5040788650512695
    3. '(z' → logprob: -16.504077911376953
    4. '       ' → logprob: -17.754077911376953
    5. '	z' → logprob: -18.129077911376953
    6. ' (' → logprob: -18.379077911376953
    7. '        ' → logprob: -18.754077911376953
    8. ' ' → logprob: -18.879077911376953
    9. '_z' → logprob: -19.004077911376953
    10. '    ' → logprob: -19.129077911376953

Token 192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014212275855243206
    2. 'in' → logprob: -4.264212131500244
    3. ' ' → logprob: -10.514212608337402
    4. ' not' → logprob: -11.639212608337402
    5. ')' → logprob: -12.139212608337402
    6. ']' → logprob: -13.514212608337402
    7. 'not' → logprob: -13.514212608337402
    8. ' )' → logprob: -14.264212608337402
    9. '0' → logprob: -14.639212608337402
    10. '[' → logprob: -14.764212608337402

Token 193: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6326080560684204
    2. 'self' → logprob: -0.7576080560684204
    3. '(self' → logprob: -13.132608413696289
    4. '       ' → logprob: -13.382608413696289
    5. '	self' → logprob: -14.007608413696289
    6. '_self' → logprob: -14.007608413696289
    7. '[self' → logprob: -14.132608413696289
    8. '=self' → logprob: -14.257608413696289
    9. ' ' → logprob: -14.632608413696289
    10. ')' → logprob: -14.882608413696289

Token 194: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.64839569455944e-05
    2. '_cache' → logprob: -9.500076293945312
    3. '.' → logprob: -14.375076293945312
    4. '.cache' → logprob: -14.500076293945312
    5. ' .' → logprob: -15.375076293945312
    6. '_cached' → logprob: -15.750076293945312
    7. '_power' → logprob: -17.000076293945312
    8. ' _' → logprob: -18.375076293945312
    9. ']._' → logprob: -18.375076293945312
    10. '.__' → logprob: -18.500076293945312

Token 195: 'cache' (ID: 18949)
  Prédit: 'cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.00015872348740231246
    2. '_cache' → logprob: -8.750158309936523
    3. '.cache' → logprob: -16.375158309936523
    4. ' cache' → logprob: -16.375158309936523
    5. '	cache' → logprob: -18.000158309936523
    6. '-cache' → logprob: -18.500158309936523
    7. 'cached' → logprob: -19.125158309936523
    8. 'c' → logprob: -19.125158309936523
    9. 'Cache' → logprob: -21.125158309936523
    10. ' ' → logprob: -21.250158309936523

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2521696984767914
    2. ':
' → logprob: -1.5021697282791138
    3. ':return' → logprob: -8.752169609069824
    4. '):
' → logprob: -9.877169609069824
    5. '       ' → logprob: -10.877169609069824
    6. '           ' → logprob: -12.627169609069824
    7. '):' → logprob: -12.752169609069824
    8. ' :' → logprob: -13.127169609069824
    9. '   ' → logprob: -14.002169609069824
    10. ' :
' → logprob: -14.002169609069824

Token 197: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7491301894187927
    2. '           ' → logprob: -0.8741301894187927
    3. ':
' → logprob: -2.2491302490234375
    4. '       ' → logprob: -5.6241302490234375
    5. ':return' → logprob: -7.2491302490234375
    6. '):
' → logprob: -9.374130249023438
    7. ' return' → logprob: -10.499130249023438
    8. 'return' → logprob: -11.249130249023438
    9. ',' → logprob: -11.874130249023438
    10. '):' → logprob: -12.124130249023438

Token 198: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16550622880458832
    2. 'return' (adapté à ' return') → logprob: -2.16550612449646
    3. ' return' → logprob: -3.29050612449646
    4. ':return' → logprob: -8.165506362915039
    5. '               ' → logprob: -8.290506362915039
    6. '       ' → logprob: -10.290506362915039
    7. '
' → logprob: -11.790506362915039
    8. '{return' → logprob: -12.165506362915039
    9. '	return' → logprob: -12.165506362915039
    10. '   ' → logprob: -12.290506362915039

Token 199: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007607339881360531
    2. ' self' → logprob: -4.882607460021973
    3. '       ' → logprob: -15.007607460021973
    4. '0' → logprob: -15.632607460021973
    5. '[self' → logprob: -15.632607460021973
    6. '(self' → logprob: -15.757607460021973
    7. '
' → logprob: -15.882607460021973
    8. '	self' → logprob: -16.007606506347656
    9. '1' → logprob: -16.882606506347656
    10. '```' → logprob: -17.132606506347656

Token 200: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.9862216504407115e-05
    2. '_cache' → logprob: -11.000020027160645
    3. '.' → logprob: -13.250020027160645
    4. '.cache' → logprob: -14.125020027160645
    5. ']._' → logprob: -15.500020027160645
    6. ' .' → logprob: -16.375019073486328
    7. '_' → logprob: -16.750019073486328
    8. '_cached' → logprob: -16.750019073486328
    9. ')._' → logprob: -17.375019073486328
    10. '."_' → logprob: -17.625019073486328

Token 201: 'cache' (ID: 18949)
  Prédit: 'cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -1.1398757123970427e-05
    2. '_cache' → logprob: -11.500011444091797
    3. '.cache' → logprob: -14.500011444091797
    4. 'z' → logprob: -15.125011444091797
    5. '	cache' → logprob: -16.000011444091797
    6. 'c' → logprob: -16.750011444091797
    7. '-cache' → logprob: -16.875011444091797
    8. ' cache' → logprob: -17.000011444091797
    9. 'cached' → logprob: -17.000011444091797
    10. '[' → logprob: -17.250011444091797

Token 202: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. 'z' → logprob: -17.625
    4. '[
' → logprob: -18.75
    5. '```' → logprob: -19.375
    6. '

' → logprob: -19.375
    7. '(z' → logprob: -20.125
    8. ' [' → logprob: -20.625
    9. '
' → logprob: -20.75
    10. '[n' → logprob: -21.0

Token 203: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001868306309916079
    2. ']
' → logprob: -6.37686824798584
    3. ']

' → logprob: -8.75186824798584
    4. ')' → logprob: -12.25186824798584
    5. ' ]' → logprob: -13.00186824798584
    6. ')]' → logprob: -15.12686824798584
    7. '])' → logprob: -15.37686824798584
    8. ']
' → logprob: -15.87686824798584
    9. '],' → logprob: -16.501869201660156
    10. '']' → logprob: -16.876869201660156

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003763382090255618
    2. 'n' → logprob: -6.253763198852539
    3. '
' → logprob: -7.128763198852539
    4. '        
' → logprob: -8.003763198852539
    5. 'max' → logprob: -8.128763198852539
    6. ' max' → logprob: -9.128763198852539
    7. '```' → logprob: -10.378763198852539
    8. '<|end|>' → logprob: -10.628763198852539
    9. ' n' → logprob: -10.753763198852539
    10. 'count' → logprob: -10.753763198852539

Token 205: ' z' (ID: 579)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.017042264342308044
    2. '       ' → logprob: -5.39204216003418
    3. 'result' → logprob: -5.39204216003418
    4. ' max' → logprob: -5.51704216003418
    5. 'import' → logprob: -6.51704216003418
    6. 'best' → logprob: -6.76704216003418
    7. 'limit' → logprob: -7.51704216003418
    8. 'for' → logprob: -8.76704216003418
    9. 'from' → logprob: -9.39204216003418
    10. 'count' → logprob: -9.51704216003418

Token 206: '_pow' (ID: 160965)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.8781879544258118
    2. '_c' → logprob: -1.628187894821167
    3. '_pow' → logprob: -2.503187894821167
    4. '_power' → logprob: -2.753187894821167
    5. '3' → logprob: -2.753187894821167
    6. 'max' → logprob: -2.878187894821167
    7. '_p' → logprob: -3.378187894821167
    8. '_root' → logprob: -4.003188133239746
    9. '_' → logprob: -4.128188133239746
    10. '**' → logprob: -4.378188133239746

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0394515991210938
    2. '=' → logprob: -1.1644515991210938
    3. 'ered' → logprob: -1.1644515991210938
    4. 'er' → logprob: -4.289451599121094
    5. 'ed' → logprob: -6.414451599121094
    6. '4' → logprob: -6.539451599121094
    7. 'pow' → logprob: -6.664451599121094
    8. '3' → logprob: -6.914451599121094
    9. '_pow' → logprob: -7.164451599121094
    10. '   ' → logprob: -7.789451599121094

Token 208: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0015414038207381964
    2. ' z' → logprob: -6.876541614532471
    3. 'pow' → logprob: -7.626541614532471
    4. 'self' → logprob: -10.876541137695312
    5. ' pow' → logprob: -13.876541137695312
    6. '[z' → logprob: -14.501541137695312
    7. '(z' → logprob: -15.126541137695312
    8. '**' → logprob: -16.001541137695312
    9. ' self' → logprob: -16.126541137695312
    10. '	z' → logprob: -16.376541137695312

Token 209: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.014167149551212788
    2. ' **' → logprob: -4.264167308807373
    3. 'self' → logprob: -13.639166831970215
    4. '
' → logprob: -13.764166831970215
    5. ' ' → logprob: -14.889166831970215
    6. '*self' → logprob: -15.514166831970215
    7. '   ' → logprob: -15.764166831970215
    8. '
' → logprob: -16.13916778564453
    9. '*' → logprob: -16.26416778564453
    10. '```' → logprob: -16.63916778564453

Token 210: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06212330237030983
    2. '3' → logprob: -2.8121232986450195
    3. ' self' → logprob: -9.68712329864502
    4. '(' → logprob: -9.81212329864502
    5. '(self' → logprob: -10.31212329864502
    6. '6' → logprob: -14.31212329864502
    7. '2' → logprob: -14.56212329864502
    8. ' ' → logprob: -14.62462329864502
    9. '   ' → logprob: -14.68712329864502
    10. '4' → logprob: -14.81212329864502

Token 211: '.power' (ID: 81878)
  Prédit: '.power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.power' → logprob: -0.00047214110963977873
    2. 'power' → logprob: -8.375472068786621
    3. '.' → logprob: -8.875472068786621
    4. '.pow' → logprob: -9.750472068786621
    5. 'self' → logprob: -10.625472068786621
    6. '3' → logprob: -11.375472068786621
    7. '_power' → logprob: -13.375472068786621
    8. ' power' → logprob: -13.750472068786621
    9. '-power' → logprob: -14.125472068786621
    10. '.self' → logprob: -14.250472068786621

Token 212: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18855109810829163
    2. '
' → logprob: -1.8135510683059692
    3. ',' → logprob: -6.06355094909668
    4. 'max' → logprob: -6.81355094909668
    5. '**' → logprob: -6.93855094909668
    6. '        
' → logprob: -6.93855094909668
    7. 'import' → logprob: -7.06355094909668
    8. 'for' → logprob: -7.56355094909668
    9. 'result' → logprob: -7.81355094909668
    10. '-' → logprob: -8.18855094909668

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031443238258361816
    2. 'max' → logprob: -6.003144264221191
    3. ' max' → logprob: -8.128144264221191
    4. ',' → logprob: -9.378144264221191
    5. 'for' → logprob: -9.503144264221191
    6. ' for' → logprob: -9.878144264221191
    7. ')' → logprob: -10.753144264221191
    8. 'n' → logprob: -11.003144264221191
    9. '   ' → logprob: -11.003144264221191
    10. '        
' → logprob: -11.503144264221191

Token 214: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00640566973015666
    2. 'result' → logprob: -5.756405830383301
    3. 'best' → logprob: -6.256405830383301
    4. '       ' → logprob: -7.756405830383301
    5. 'import' → logprob: -8.0064058303833
    6. 'for' → logprob: -8.5064058303833
    7. 'res' → logprob: -8.8814058303833
    8. 'count' → logprob: -9.8814058303833
    9. 'left' → logprob: -10.1314058303833
    10. 'answer' → logprob: -10.5064058303833

Token 215: ' Since' (ID: 12265)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06743593513965607
    2. 'result' → logprob: -3.3174359798431396
    3. ' max' → logprob: -3.8174359798431396
    4. '       ' → logprob: -6.5674357414245605
    5. 'for' → logprob: -6.5674357414245605
    6. 'best' → logprob: -6.5674357414245605
    7. ' result' → logprob: -6.8174357414245605
    8. '   ' → logprob: -7.8174357414245605
    9. 'count' → logprob: -8.067436218261719
    10. 'answer' → logprob: -8.317436218261719

Token 216: ' n' (ID: 297)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3119249939918518
    2. ' z' → logprob: -1.936924934387207
    3. 'for' → logprob: -3.686924934387207
    4. ' for' → logprob: -3.686924934387207
    5. 'i' → logprob: -3.811924934387207
    6. 'a' → logprob: -4.061924934387207
    7. ' i' → logprob: -5.061924934387207
    8. 'import' → logprob: -5.436924934387207
    9. '0' → logprob: -5.686924934387207
    10. 'int' → logprob: -5.936924934387207

Token 217: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05543563514947891
    2. '=' → logprob: -3.0554356575012207
    3. '//' → logprob: -5.930435657501221
    4. 'max' → logprob: -6.805435657501221
    5. '_max' → logprob: -6.930435657501221
    6. '=int' → logprob: -7.930435657501221
    7. 'z' → logprob: -8.305435180664062
    8. ' ' → logprob: -8.305435180664062
    9. '   ' → logprob: -8.680435180664062
    10. '**' → logprob: -9.055435180664062

Token 218: '3' (ID: 18)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.199161097407341
    2. '1' → logprob: -2.5741610527038574
    3. 'int' → logprob: -2.6991610527038574
    4. '0' → logprob: -4.324161052703857
    5. ' z' → logprob: -5.199161052703857
    6. 'self' → logprob: -5.324161052703857
    7. ' int' → logprob: -5.574161052703857
    8. '(z' → logprob: -5.699161052703857
    9. '2' → logprob: -6.199161052703857
    10. '(' → logprob: -7.199161052703857

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26105043292045593
    2. '       ' → logprob: -1.6360504627227783
    3. 'for' → logprob: -4.511050224304199
    4. ' for' → logprob: -4.761050224304199
    5. '
' → logprob: -5.386050224304199
    6. '   ' → logprob: -6.136050224304199
    7. '           ' → logprob: -6.511050224304199
    8. 'import' → logprob: -7.011050224304199
    9. '**' → logprob: -7.136050224304199
    10. ')' → logprob: -7.136050224304199

Token 220: ' brute' (ID: 128602)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4578808546066284
    2. ' max' → logprob: -1.3328808546066284
    3. '       ' → logprob: -2.832880973815918
    4. 'limit' → logprob: -4.082880973815918
    5. 'for' → logprob: -4.957880973815918
    6. ' for' → logprob: -5.207880973815918
    7. 'result' → logprob: -5.332880973815918
    8. ' limit' → logprob: -5.332880973815918
    9. 'import' → logprob: -6.332880973815918
    10. ' result' → logprob: -6.832880973815918

Token 221: ' force' (ID: 9578)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5054236054420471
    2. ' force' → logprob: -2.0054235458374023
    3. '       ' → logprob: -2.1304235458374023
    4. 'force' → logprob: -2.5054235458374023
    5. '           ' → logprob: -3.7554235458374023
    6. '   ' → logprob: -4.255423545837402
    7. '_force' → logprob: -4.880423545837402
    8. '-force' → logprob: -4.880423545837402
    9. ' for' → logprob: -5.255423545837402
    10. 'forcing' → logprob: -7.130423545837402

Token 222: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3262602686882019
    2. 'max' → logprob: -1.9512603282928467
    3. ' max' → logprob: -2.5762603282928467
    4. ' for' → logprob: -3.0762603282928467
    5. 'for' → logprob: -5.451260089874268
    6. 'result' → logprob: -6.201260089874268
    7. ',' → logprob: -6.201260089874268
    8. '
' → logprob: -6.576260089874268
    9. ' result' → logprob: -7.076260089874268
    10. 'n' → logprob: -7.576260089874268

Token 223: ' clever' (ID: 42218)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5780702829360962
    2. 'z' → logprob: -1.3280702829360962
    3. 'x' → logprob: -3.5780701637268066
    4. ' int' → logprob: -3.8280701637268066
    5. 'i' → logprob: -3.9530701637268066
    6. 'range' → logprob: -3.9530701637268066
    7. ' z' → logprob: -4.203070163726807
    8. 'a' → logprob: -4.328070163726807
    9. 'two' → logprob: -4.328070163726807
    10. ' two' → logprob: -4.578070163726807

Token 224: ' limiting' (ID: 58810)
  Prédit: ' pruning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pruning' → logprob: -0.45707663893699646
    2. ' upper' → logprob: -2.7070765495300293
    3. ' bounds' → logprob: -2.7070765495300293
    4. ' optimization' → logprob: -2.8320765495300293
    5. ' optim' → logprob: -3.0820765495300293
    6. 'bounds' → logprob: -3.5820765495300293
    7. ' cutoff' → logprob: -4.207076549530029
    8. 'upper' → logprob: -4.332076549530029
    9. 'optim' → logprob: -4.582076549530029
    10. 'optimization' → logprob: -4.582076549530029

Token 225: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40021559596061707
    2. 'max' → logprob: -2.0252156257629395
    3. 'n' → logprob: -3.0252156257629395
    4. 'import' → logprob: -3.2752156257629395
    5. 'limit' → logprob: -3.5252156257629395
    6. ' max' → logprob: -3.6502156257629395
    7. ' for' → logprob: -4.2752156257629395
    8. '
' → logprob: -4.4002156257629395
    9. 'for' → logprob: -4.9002156257629395
    10. ' limit' → logprob: -5.0252156257629395

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42681261897087097
    2. 'max' → logprob: -1.1768126487731934
    3. ' max' → logprob: -3.5518126487731934
    4. 'import' → logprob: -5.176812648773193
    5. 'limit' → logprob: -5.926812648773193
    6. 'result' → logprob: -7.051812648773193
    7. ' limit' → logprob: -8.176812171936035
    8. 'for' → logprob: -8.301812171936035
    9. 'n' → logprob: -8.426812171936035
    10. ' import' → logprob: -9.051812171936035

Token 227: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.008837570436298847
    2. 'import' → logprob: -5.758837699890137
    3. 'limit' → logprob: -6.008837699890137
    4. ' max' → logprob: -6.133837699890137
    5. '       ' → logprob: -7.133837699890137
    6. 'result' → logprob: -9.258837699890137
    7. 'best' → logprob: -9.758837699890137
    8. 'from' → logprob: -10.758837699890137
    9. '   ' → logprob: -11.883837699890137
    10. ' import' → logprob: -12.133837699890137

Token 228: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.06957699358463287
    2. '_val' → logprob: -3.5695769786834717
    3. '_value' → logprob: -4.319577217102051
    4. 'sum' → logprob: -4.694577217102051
    5. '_count' → logprob: -5.444577217102051
    6. '_c' → logprob: -5.444577217102051
    7. '_' → logprob: -6.319577217102051
    8. '_a' → logprob: -6.444577217102051
    9. '_n' → logprob: -7.319577217102051
    10. '_i' → logprob: -7.444577217102051

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519415020942688
    2. ' =' → logprob: -1.501941442489624
    3. ',' → logprob: -11.501941680908203
    4. ' ' → logprob: -14.126941680908203
    5. '_' → logprob: -15.001941680908203
    6. '=int' → logprob: -15.376941680908203
    7. '_=' → logprob: -15.376941680908203
    8. ':' → logprob: -15.751941680908203
    9. ' ' → logprob: -15.751941680908203
    10. '   ' → logprob: -16.126941680908203

Token 230: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12773144245147705
    2. '-' → logprob: -2.1277313232421875
    3. ' ' → logprob: -7.6277313232421875
    4. ' -' → logprob: -8.252731323242188
    5. 'float' → logprob: -11.377731323242188
    6. 'z' → logprob: -11.877731323242188
    7. 'None' → logprob: -12.002731323242188
    8. '   ' → logprob: -12.127731323242188
    9. '(' → logprob: -12.252731323242188
    10. '-z' → logprob: -12.502731323242188

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12744247913360596
    2. '-' → logprob: -2.1274423599243164
    3. '(' → logprob: -8.752442359924316
    4. 'float' → logprob: -9.127442359924316
    5. '(-' → logprob: -9.502442359924316
    6. '-z' → logprob: -10.377442359924316
    7. 'z' → logprob: -10.377442359924316
    8. 'None' → logprob: -10.627442359924316
    9. '1' → logprob: -10.877442359924316
    10. '2' → logprob: -11.252442359924316

Token 232: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010056373663246632
    2. ' for' → logprob: -5.260056495666504
    3. '
' → logprob: -5.885056495666504
    4. ',' → logprob: -6.635056495666504
    5. '        
' → logprob: -8.135056495666504
    6. 'for' → logprob: -8.385056495666504
    7. ',
' → logprob: -9.885056495666504
    8. '  
' → logprob: -10.885056495666504
    9. '   ' → logprob: -11.135056495666504
    10. ' 
' → logprob: -11.385056495666504

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00879809819161892
    2. ' for' → logprob: -5.133798122406006
    3. 'for' → logprob: -5.883798122406006
    4. 'x' → logprob: -10.258797645568848
    5. '   ' → logprob: -11.133797645568848
    6. ',' → logprob: -11.508797645568848
    7. ' x' → logprob: -11.883797645568848
    8. 'n' → logprob: -11.883797645568848
    9. 'import' → logprob: -13.883797645568848
    10. 'i' → logprob: -14.008797645568848

Token 234: ' limit' (ID: 5967)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6014997959136963
    2. 'limit' (adapté à ' limit') → logprob: -0.8514997959136963
    3. 'max' → logprob: -3.9764997959136963
    4. 'import' → logprob: -6.101499557495117
    5. '       ' → logprob: -6.351499557495117
    6. 'root' → logprob: -6.851499557495117
    7. 'bound' → logprob: -8.351499557495117
    8. 'z' → logprob: -8.351499557495117
    9. 'upper' → logprob: -8.476499557495117
    10. 'x' → logprob: -8.851499557495117

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324652671813965
    2. '=' → logprob: -3.7732465267181396
    3. '=int' → logprob: -13.898246765136719
    4. 'import' → logprob: -17.39824676513672
    5. ' ' → logprob: -17.52324676513672
    6. '   ' → logprob: -18.14824676513672
    7. 'int' → logprob: -18.27324676513672
    8. ' ' → logprob: -18.39824676513672
    9. 's' → logprob: -18.52324676513672
    10. ':' → logprob: -19.14824676513672

Token 236: ' z' (ID: 579)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4751577079296112
    2. 'z' → logprob: -0.9751577377319336
    3. ' int' → logprob: -7.225157737731934
    4. 'round' → logprob: -8.600157737731934
    5. ' z' → logprob: -9.350157737731934
    6. 'pow' → logprob: -9.975157737731934
    7. '(int' → logprob: -10.850157737731934
    8. '(z' → logprob: -12.475157737731934
    9. '```' → logprob: -13.912657737731934
    10. 'abs' → logprob: -13.975157737731934

Token 237: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23964041471481323
    2. ' -' → logprob: -1.614640474319458
    3. '+' → logprob: -4.739640235900879
    4. ' +' → logprob: -5.989640235900879
    5. '
' → logprob: -6.739640235900879
    6. '//' → logprob: -7.489640235900879
    7. '**' → logprob: -7.989640235900879
    8. '<|end|>' → logprob: -8.239640235900879
    9. ' ' → logprob: -8.364640235900879
    10. ' //' → logprob: -8.989640235900879

Token 238: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019498437643051147
    2. '-' → logprob: -5.144498348236084
    3. ' +' → logprob: -5.144498348236084
    4. '
' → logprob: -5.394498348236084
    5. 'for' → logprob: -6.269498348236084
    6. '       ' → logprob: -7.019498348236084
    7. '**' → logprob: -8.519498825073242
    8. ' -' → logprob: -9.644498825073242
    9. ' for' → logprob: -10.769498825073242
    10. '#' → logprob: -11.394498825073242

Token 239: ' All' (ID: 2545)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06343227624893188
    2. ' for' → logprob: -3.438432216644287
    3. '       ' → logprob: -3.563432216644287
    4. '+' → logprob: -7.563432216644287
    5. 'i' → logprob: -8.813432693481445
    6. 'import' → logprob: -10.063432693481445
    7. 'x' → logprob: -10.063432693481445
    8. ' +' → logprob: -10.188432693481445
    9. '   ' → logprob: -10.188432693481445
    10. 'range' → logprob: -10.188432693481445

Token 240: ' x' (ID: 1215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7102082967758179
    2. '+' → logprob: -0.9602082967758179
    3. 'i' → logprob: -3.3352084159851074
    4. ' for' → logprob: -3.4602084159851074
    5. 'x' → logprob: -3.8352084159851074
    6. 'range' → logprob: -4.335208415985107
    7. ' +' → logprob: -4.835208415985107
    8. 'a' → logprob: -4.960208415985107
    9. ' range' → logprob: -6.960208415985107
    10. ')' → logprob: -7.085208415985107

Token 241: ',y' (ID: 16103)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08632871508598328
    2. 'in' → logprob: -2.7113287448883057
    3. ',' → logprob: -5.211328506469727
    4. ' and' → logprob: -5.461328506469727
    5. 's' → logprob: -6.711328506469727
    6. '+' → logprob: -7.211328506469727
    7. 'from' → logprob: -7.336328506469727
    8. ' =' → logprob: -7.336328506469727
    9. ' ranges' → logprob: -7.336328506469727
    10. ' from' → logprob: -7.711328506469727

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22041906416416168
    2. 'in' → logprob: -1.7204190492630005
    3. ' values' → logprob: -5.220418930053711
    4. 's' → logprob: -5.845418930053711
    5. ' will' → logprob: -6.720418930053711
    6. ' range' → logprob: -6.845418930053711
    7. 'values' → logprob: -6.845418930053711
    8. 'range' → logprob: -6.845418930053711
    9. ' up' → logprob: -7.220418930053711
    10. ',' → logprob: -7.470418930053711

Token 243: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029838191345334053
    2. ' range' → logprob: -3.5298380851745605
    3. '[' → logprob: -9.779838562011719
    4. '	range' → logprob: -11.779838562011719
    5. '   ' → logprob: -11.904838562011719
    6. '(range' → logprob: -12.404838562011719
    7. '0' → logprob: -12.529838562011719
    8. ' ' → logprob: -13.279838562011719
    9. '
' → logprob: -13.779838562011719
    10. '{' → logprob: -13.779838562011719

Token 244: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19859348237514496
    2. ' range' → logprob: -2.3235933780670166
    3. '1' → logprob: -2.9485933780670166
    4. '0' → logprob: -3.9485933780670166
    5. 'z' → logprob: -5.698593616485596
    6. ')' → logprob: -5.698593616485596
    7. 'x' → logprob: -6.573593616485596
    8. ' ' → logprob: -7.573593616485596
    9. ' z' → logprob: -7.823593616485596
    10. '[' → logprob: -7.823593616485596

Token 245: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04693002998828888
    2. '+' → logprob: -3.6719300746917725
    3. ' ,' → logprob: -4.671929836273193
    4. ')' → logprob: -5.671929836273193
    5. '..' → logprob: -5.921929836273193
    6. ' +' → logprob: -6.421929836273193
    7. ',z' → logprob: -6.421929836273193
    8. '...' → logprob: -7.171929836273193
    9. '   ' → logprob: -9.171930313110352
    10. ')+' → logprob: -9.421930313110352

Token 246: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03216104581952095
    2. ' z' → logprob: -3.532160997390747
    3. 'limit' → logprob: -6.157161235809326
    4. ' limit' → logprob: -8.282160758972168
    5. ')' → logprob: -10.907160758972168
    6. '(z' → logprob: -12.532160758972168
    7. ',z' → logprob: -12.532160758972168
    8. '   ' → logprob: -13.907160758972168
    9. ',' → logprob: -13.907160758972168
    10. '	z' → logprob: -14.157160758972168

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07356961816549301
    2. '+' → logprob: -2.9485695362091064
    3. ' +' → logprob: -4.8235697746276855
    4. ')
' → logprob: -5.4485697746276855
    5. '       ' → logprob: -5.8235697746276855
    6. '-' → logprob: -6.5735697746276855
    7. ' )' → logprob: -7.0735697746276855
    8. ' -' → logprob: -7.8235697746276855
    9. ')+' → logprob: -8.823569297790527
    10. '):
' → logprob: -9.573569297790527

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005766665562987328
    2. ' for' → logprob: -5.255766868591309
    3. 'for' → logprob: -7.630766868591309
    4. '   ' → logprob: -11.130766868591309
    5. ',' → logprob: -11.255766868591309
    6. '	for' → logprob: -12.130766868591309
    7. '        
' → logprob: -12.255766868591309
    8. '<|end|>' → logprob: -12.755766868591309
    9. ')' → logprob: -13.130766868591309
    10. '	' → logprob: -13.505766868591309

Token 249: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.037095751613378525
    2. ' for' → logprob: -3.787095785140991
    3. '       ' → logprob: -4.287095546722412
    4. '
' → logprob: -12.41209602355957
    5. '```' → logprob: -13.16209602355957
    6. '   ' → logprob: -13.66209602355957
    7. 'import' → logprob: -14.28709602355957
    8. '	for' → logprob: -14.66209602355957
    9. '        
' → logprob: -14.78709602355957
    10. 'x' → logprob: -14.91209602355957

Token 250: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032524545677006245
    2. '       ' → logprob: -5.8782525062561035
    3. ' for' → logprob: -7.7532525062561035
    4. '```' → logprob: -11.378252029418945
    5. 'import' → logprob: -12.628252029418945
    6. '   ' → logprob: -13.753252029418945
    7. '
' → logprob: -14.253252029418945
    8. 'from' → logprob: -14.628252029418945
    9. 'result' → logprob: -14.753252029418945
    10. 'x' → logprob: -14.753252029418945

Token 251: ' speed' (ID: 7733)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.054758936166763306
    2. 'range' → logprob: -3.4297590255737305
    3. ' for' → logprob: -4.8047590255737305
    4. ' in' → logprob: -5.4297590255737305
    5. ' x' → logprob: -5.5547590255737305
    6. 'for' → logprob: -6.9297590255737305
    7. ' limit' → logprob: -7.3047590255737305
    8. 'x' → logprob: -7.3047590255737305
    9. ' xrange' → logprob: -7.8047590255737305
    10. ' y' → logprob: -8.05475902557373

Token 252: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29034847021102905
    2. ' up' → logprob: -1.9153485298156738
    3. 'up' → logprob: -2.540348529815674
    4. '           ' → logprob: -4.290348529815674
    5. 'for' → logprob: -4.915348529815674
    6. ' for' → logprob: -6.290348529815674
    7. '   ' → logprob: -6.665348529815674
    8. '        ' → logprob: -7.540348529815674
    9. '               ' → logprob: -8.165348052978516
    10. ' ' → logprob: -8.290348052978516

Token 253: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5585100650787354
    2. ' for' → logprob: -1.5585100650787354
    3. 'range' → logprob: -2.4335100650787354
    4. ' the' → logprob: -2.8085100650787354
    5. ' range' → logprob: -3.3085100650787354
    6. 'the' → logprob: -4.308509826660156
    7. 'x' → logprob: -5.183509826660156
    8. ' computation' → logprob: -6.183509826660156
    9. ' this' → logprob: -6.683509826660156
    10. ' x' → logprob: -6.808509826660156

Token 254: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0864553302526474
    2. ' for' → logprob: -2.8364553451538086
    3. 'import' → logprob: -4.086455345153809
    4. '       ' → logprob: -5.586455345153809
    5. 'from' → logprob: -5.836455345153809
    6. ' import' → logprob: -8.336455345153809
    7. 'x' → logprob: -8.586455345153809
    8. 'max' → logprob: -9.336455345153809
    9. 'limit' → logprob: -10.086455345153809
    10. ' from' → logprob: -10.461455345153809

Token 255: ' take' (ID: 2304)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.398461252450943
    2. ' for' → logprob: -1.2734612226486206
    3. 'for' → logprob: -4.27346134185791
    4. ' will' → logprob: -5.27346134185791
    5. ' use' → logprob: -5.52346134185791
    6. '   ' → logprob: -5.52346134185791
    7. 'can' → logprob: -5.52346134185791
    8. '       ' → logprob: -5.64846134185791
    9. ' could' → logprob: -6.02346134185791
    10. ' ' → logprob: -6.64846134185791

Token 256: ' advantage' (ID: 12579)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0793853998184204
    2. 'range' → logprob: -1.3293853998184204
    3. 'limit' → logprob: -1.4543853998184204
    4. ' limit' → logprob: -2.704385280609131
    5. ' int' → logprob: -3.579385280609131
    6. ' range' → logprob: -3.704385280609131
    7. 'x' → logprob: -3.954385280609131
    8. 'import' → logprob: -4.704385280609131
    9. 'for' → logprob: -5.329385280609131
    10. ' x' → logprob: -5.954385280609131

Token 257: ' that' (ID: 484)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.19847698509693146
    2. 'of' → logprob: -2.198477029800415
    3. '       ' → logprob: -2.698477029800415
    4. '           ' → logprob: -7.073476791381836
    5. '   ' → logprob: -8.073476791381836
    6. '        ' → logprob: -8.198476791381836
    7. '    ' → logprob: -9.948476791381836
    8. '	of' → logprob: -9.948476791381836
    9. 'import' → logprob: -10.073476791381836
    10. '      ' → logprob: -10.573476791381836

Token 258: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24176815152168274
    2. 'for' → logprob: -1.7417681217193604
    3. ' for' → logprob: -3.6167681217193604
    4. ' x' → logprob: -5.2417683601379395
    5. 'y' → logprob: -5.3667683601379395
    6. 'range' → logprob: -6.8667683601379395
    7. 'import' → logprob: -6.9917683601379395
    8. '
' → logprob: -8.616767883300781
    9. ' y' → logprob: -8.616767883300781
    10. 'z' → logprob: -9.366767883300781

Token 259: '^' (ID: 61)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7300685048103333
    2. ' =' → logprob: -1.9800684452056885
    3. ' ranges' → logprob: -2.3550684452056885
    4. 'range' → logprob: -2.8550684452056885
    5. 'in' → logprob: -3.1050684452056885
    6. '<|end|>' → logprob: -3.2300684452056885
    7. '=' → logprob: -3.3550684452056885
    8. '_range' → logprob: -3.9800684452056885
    9. ' and' → logprob: -4.230068683624268
    10. ' range' → logprob: -4.230068683624268

Token 260: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04894455522298813
    2. 'self' → logprob: -3.0489444732666016
    3. 'power' → logprob: -8.298944473266602
    4. '```' → logprob: -10.673944473266602
    5. 'C' → logprob: -10.923944473266602
    6. 'pow' → logprob: -11.048944473266602
    7. ' self' → logprob: -11.048944473266602
    8. ' ' → logprob: -11.673944473266602
    9. '(self' → logprob: -12.173944473266602
    10. '2' → logprob: -13.111444473266602

Token 261: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8238140344619751
    2. '+' → logprob: -1.823814034461975
    3. ' <=' → logprob: -1.823814034461975
    4. ' and' → logprob: -2.0738139152526855
    5. '<=' → logprob: -3.0738139152526855
    6. 'and' → logprob: -3.4488139152526855
    7. '   ' → logprob: -4.6988139152526855
    8. ' ' → logprob: -5.6988139152526855
    9. ' ranges' → logprob: -5.8238139152526855
    10. 'for' → logprob: -6.4488139152526855

Token 262: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03529205918312073
    2. ' y' → logprob: -3.410292148590088
    3. 'limit' → logprob: -6.910292148590088
    4. ' limit' → logprob: -8.91029167175293
    5. 'x' → logprob: -8.91029167175293
    6. '(limit' → logprob: -9.28529167175293
    7. '(' → logprob: -9.53529167175293
    8. 'z' → logprob: -9.66029167175293
    9. '(y' → logprob: -10.28529167175293
    10. 'max' → logprob: -10.66029167175293

Token 263: '^' (ID: 61)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.438573680294212e-06
    2. '```' → logprob: -12.625005722045898
    3. 'power' → logprob: -14.500005722045898
    4. ' ' → logprob: -15.000005722045898
    5. '(' → logprob: -15.000005722045898
    6. 'pow' → logprob: -15.625005722045898
    7. '
' → logprob: -16.0000057220459
    8. '{' → logprob: -16.2500057220459
    9. '³' → logprob: -16.5000057220459
    10. 'C' → logprob: -16.6875057220459

Token 265: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4613059759140015
    2. '=' → logprob: -1.8363059759140015
    3. ' =' → logprob: -1.9613059759140015
    4. '<|end|>' → logprob: -1.9613059759140015
    5. ' is' → logprob: -2.336306095123291
    6. ' <=' → logprob: -2.836306095123291
    7. ' can' → logprob: -3.086306095123291
    8. '<=' → logprob: -3.461306095123291
    9. '<|end|>' → logprob: -3.836306095123291
    10. 'for' → logprob: -4.086306095123291

Token 266: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.007015740964561701
    2. '2' → logprob: -5.007015705108643
    3. ' z' → logprob: -8.3820161819458
    4. '(z' → logprob: -10.3820161819458
    5. 'limit' → logprob: -10.8820161819458
    6. '(' → logprob: -11.2570161819458
    7. ' ' → logprob: -12.6320161819458
    8. '3' → logprob: -14.0070161819458
    9. '```' → logprob: -14.2570161819458
    10. '   ' → logprob: -14.6320161819458

Token 267: '^' (ID: 61)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.18103526532649994
    2. '**' → logprob: -1.8060352802276611
    3. ' **' → logprob: -7.556035041809082
    4. 'pow' → logprob: -7.806035041809082
    5. '_power' → logprob: -9.056035041809082
    6. '
' → logprob: -10.431035041809082
    7. '_py' → logprob: -10.431035041809082
    8. '```' → logprob: -10.431035041809082
    9. '***' → logprob: -10.931035041809082
    10. ' ' → logprob: -11.181035041809082

Token 268: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6499390006065369
    2. 'self' → logprob: -1.2749390602111816
    3. 'power' → logprob: -2.0249390602111816
    4. 'pow' → logprob: -2.7749390602111816
    5. '_pow' → logprob: -7.024939060211182
    6. '```' → logprob: -7.274939060211182
    7. '(self' → logprob: -7.399939060211182
    8. '_power' → logprob: -7.649939060211182
    9. '{' → logprob: -8.024938583374023
    10. '(' → logprob: -8.024938583374023

Token 269: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026826607063412666
    2. ' for' → logprob: -7.127682685852051
    3. ',' → logprob: -7.377682685852051
    4. '<|end|>' → logprob: -7.627682685852051
    5. ')' → logprob: -8.75268268585205
    6. 'for' → logprob: -9.00268268585205
    7. '<|end|>' → logprob: -9.37768268585205
    8. ' and' → logprob: -9.62768268585205
    9. '
' → logprob: -9.87768268585205
    10. '        
' → logprob: -10.00268268585205

Token 270: ' sort' (ID: 4506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3109631538391113
    2. 'x' → logprob: -1.6859631538391113
    3. ' for' → logprob: -1.8109631538391113
    4. '       ' → logprob: -1.9359631538391113
    5. 'import' → logprob: -2.9359631538391113
    6. 'range' → logprob: -2.9359631538391113
    7. ' x' → logprob: -3.8109631538391113
    8. 'y' → logprob: -4.060963153839111
    9. 'limit' → logprob: -4.310963153839111
    10. '
' → logprob: -4.310963153839111

Token 271: ' search' (ID: 3684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24801895022392273
    2. 'range' → logprob: -2.623018980026245
    3. 'for' → logprob: -2.748018980026245
    4. ' for' → logprob: -3.873018980026245
    5. '(range' → logprob: -3.998018980026245
    6. ' =' → logprob: -4.623018741607666
    7. '=' → logprob: -5.248018741607666
    8. ' range' → logprob: -5.498018741607666
    9. '           ' → logprob: -5.623018741607666
    10. '   ' → logprob: -5.748018741607666

Token 272: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24454455077648163
    2. 'range' → logprob: -2.494544506072998
    3. 'space' → logprob: -3.744544506072998
    4. ' space' → logprob: -3.994544506072998
    5. '_range' → logprob: -4.244544506072998
    6. ' range' → logprob: -4.244544506072998
    7. 'limit' → logprob: -4.744544506072998
    8. '_limit' → logprob: -4.994544506072998
    9. '_space' → logprob: -5.119544506072998
    10. '()' → logprob: -5.119544506072998

Token 273: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0527786947786808
    2. ' for' → logprob: -3.302778720855713
    3. 'for' → logprob: -4.802778720855713
    4. '
' → logprob: -5.802778720855713
    5. ',' → logprob: -6.427778720855713
    6. '        
' → logprob: -7.552778720855713
    7. '<|end|>' → logprob: -8.552778244018555
    8. 'x' → logprob: -9.052778244018555
    9. '   ' → logprob: -9.302778244018555
    10. ':' → logprob: -9.427778244018555

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018345076590776443
    2. ' for' → logprob: -4.143344879150391
    3. 'for' → logprob: -6.143344879150391
    4. '   ' → logprob: -10.01834487915039
    5. ',' → logprob: -10.14334487915039
    6. '        
' → logprob: -10.89334487915039
    7. ')' → logprob: -11.39334487915039
    8. 'x' → logprob: -11.64334487915039
    9. ' x' → logprob: -12.14334487915039
    10. ' ' → logprob: -12.14334487915039

Token 275: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015469115227460861
    2. ' for' → logprob: -4.640469074249268
    3. '       ' → logprob: -5.640469074249268
    4. 'result' → logprob: -6.265469074249268
    5. 'max' → logprob: -8.515469551086426
    6. 'x' → logprob: -10.640469551086426
    7. ' result' → logprob: -12.015469551086426
    8. 'best' → logprob: -12.515469551086426
    9. 'results' → logprob: -13.515469551086426
    10. 'i' → logprob: -13.515469551086426

Token 276: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007462600478902459
    2. ' for' → logprob: -7.500746250152588
    3. '       ' → logprob: -9.125746726989746
    4. 'result' → logprob: -9.500746726989746
    5. 'max' → logprob: -12.500746726989746
    6. 'x' → logprob: -13.375746726989746
    7. '   ' → logprob: -13.750746726989746
    8. 'from' → logprob: -14.000746726989746
    9. 'import' → logprob: -14.375746726989746
    10. '
' → logprob: -14.625746726989746

Token 277: 'compute' (ID: 54521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3255211114883423
    2. '       ' → logprob: -1.5755211114883423
    3. 'sum' → logprob: -1.9505211114883423
    4. 'vious' → logprob: -2.0755209922790527
    5. 'compute' → logprob: -2.4505209922790527
    6. 'v' → logprob: -2.9505209922790527
    7. 'dict' → logprob: -3.2005209922790527
    8. 'computed' → logprob: -3.8255209922790527
    9. 'import' → logprob: -4.075520992279053
    10. 'viously' → logprob: -4.075520992279053

Token 278: ' cubes' (ID: 88455)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6328223943710327
    2. 'c' → logprob: -1.6328223943710327
    3. 'powers' → logprob: -2.1328225135803223
    4. ' cubes' → logprob: -2.2578225135803223
    5. 'self' → logprob: -4.007822513580322
    6. 'cube' → logprob: -4.757822513580322
    7. 'pow' → logprob: -4.757822513580322
    8. 'values' → logprob: -5.132822513580322
    9. '   ' → logprob: -5.632822513580322
    10. ' x' → logprob: -6.507822513580322

Token 279: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1009645089507103
    2. ' =' → logprob: -2.4759645462036133
    3. '=' → logprob: -4.850964546203613
    4. 'c' → logprob: -5.975964546203613
    5. 'self' → logprob: -7.350964546203613
    6. 'cube' → logprob: -7.725964546203613
    7. '   ' → logprob: -8.725964546203613
    8. 'x' → logprob: -9.350964546203613
    9. ' cubes' → logprob: -10.350964546203613
    10. 'cub' → logprob: -10.350964546203613

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027758704964071512
    2. 'self' → logprob: -6.1277756690979
    3. ' =' → logprob: -8.502776145935059
    4. '=' → logprob: -9.002776145935059
    5. 'for' → logprob: -10.002776145935059
    6. 'c' → logprob: -10.127776145935059
    7. '   ' → logprob: -10.127776145935059
    8. ',' → logprob: -10.502776145935059
    9. 'cube' → logprob: -10.627776145935059
    10. ' self' → logprob: -11.002776145935059

Token 281: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018610138446092606
    2. 'self' → logprob: -4.268610000610352
    3. '       ' → logprob: -5.518610000610352
    4. ' cubes' → logprob: -8.518610000610352
    5. 'cube' → logprob: -9.143610000610352
    6. 'powers' → logprob: -10.268610000610352
    7. 'cub' → logprob: -10.393610000610352
    8. '   ' → logprob: -10.393610000610352
    9. ' self' → logprob: -11.893610000610352
    10. 'pow' → logprob: -12.143610000610352

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. '[' → logprob: -17.77975082397461
    4. '=[' → logprob: -17.90475082397461
    5. ' ' → logprob: -19.40475082397461
    6. '＝' → logprob: -19.77975082397461
    7. '=[]' → logprob: -20.02975082397461
    8. '={' → logprob: -20.02975082397461
    9. ':' → logprob: -20.27975082397461
    10. '   ' → logprob: -20.40475082397461

Token 283: ' [' (ID: 723)
  Prédit: '{i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{i' → logprob: -0.6997290253639221
    2. '[i' → logprob: -1.1997289657592773
    3. '{x' → logprob: -1.9497289657592773
    4. '{' → logprob: -3.4497289657592773
    5. '[x' → logprob: -3.6997289657592773
    6. ' [' → logprob: -6.449728965759277
    7. '[' → logprob: -6.949728965759277
    8. ' {' → logprob: -8.449728965759277
    9. '[j' → logprob: -8.949728965759277
    10. '{k' → logprob: -9.449728965759277

Token 284: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.049184154719114304
    2. 'x' → logprob: -3.0491840839385986
    3. '(i' → logprob: -7.549184322357178
    4. 'k' → logprob: -10.17418384552002
    5. 'n' → logprob: -11.67418384552002
    6. '0' → logprob: -11.79918384552002
    7. ' i' → logprob: -12.04918384552002
    8. '(x' → logprob: -12.54918384552002
    9. '(' → logprob: -12.67418384552002
    10. 'pow' → logprob: -13.67418384552002

Token 285: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.012581583112478256
    2. ' **' → logprob: -4.3875813484191895
    3. '*i' → logprob: -9.637581825256348
    4. ']' → logprob: -12.512581825256348
    5. ' ' → logprob: -13.637581825256348
    6. '   ' → logprob: -15.012581825256348
    7. '=i' → logprob: -15.012581825256348
    8. '  ' → logprob: -15.262581825256348
    9. '***' → logprob: -15.887581825256348
    10. '```' → logprob: -15.887581825256348

Token 286: ' self' (ID: 1051)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5760151147842407
    2. 'self' → logprob: -0.8260151147842407
    3. ' self' → logprob: -9.70101547241211
    4. ' ' → logprob: -12.45101547241211
    5. '(self' → logprob: -12.82601547241211
    6. '```' → logprob: -12.95101547241211
    7. '   ' → logprob: -13.20101547241211
    8. '	self' → logprob: -14.45101547241211
    9. '[self' → logprob: -14.57601547241211
    10. '  ' → logprob: -14.57601547241211

Token 287: '.power' (ID: 81878)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.5770552158355713
    2. '.power' → logprob: -0.8270552158355713
    3. '3' → logprob: -6.827054977416992
    4. ' power' → logprob: -11.202054977416992
    5. '.' → logprob: -12.327054977416992
    6. '```' → logprob: -12.952054977416992
    7. ' ' → logprob: -13.202054977416992
    8. '(power' → logprob: -13.452054977416992
    9. '_power' → logprob: -13.577054977416992
    10. '.pow' → logprob: -14.077054977416992

Token 288: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3133368194103241
    2. 'for' → logprob: -1.3133368492126465
    3. ' ' → logprob: -9.688336372375488
    4. '   ' → logprob: -11.438336372375488
    5. '	for' → logprob: -13.563336372375488
    6. '  ' → logprob: -14.938336372375488
    7. '    ' → logprob: -15.313336372375488
    8. '       ' → logprob: -15.938336372375488
    9. 'if' → logprob: -16.188337326049805
    10. ' if' → logprob: -16.438337326049805

Token 289: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13063792884349823
    2. ' i' → logprob: -2.1306378841400146
    3. ' range' → logprob: -5.880638122558594
    4. 'range' → logprob: -7.005638122558594
    5. ' in' → logprob: -13.255638122558594
    6. '	i' → logprob: -14.380638122558594
    7. 'in' → logprob: -14.755638122558594
    8. ' ' → logprob: -15.255638122558594
    9. ' ' → logprob: -16.880638122558594
    10. ' xrange' → logprob: -17.130638122558594

Token 290: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036086246836930513
    2. 'in' → logprob: -5.628608703613281
    3. 'range' → logprob: -12.003608703613281
    4. ' ' → logprob: -13.378608703613281
    5. 'i' → logprob: -14.753608703613281
    6. ' range' → logprob: -15.253608703613281
    7. ' i' → logprob: -15.878608703613281
    8. ']' → logprob: -17.25360870361328
    9. '  ' → logprob: -17.50360870361328
    10. 's' → logprob: -18.00360870361328

Token 291: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196869537234306
    2. ' range' → logprob: -2.8119688034057617
    3. '(range' → logprob: -14.686968803405762
    4. '	range' → logprob: -15.061968803405762
    5. ' ' → logprob: -15.686968803405762
    6. '   ' → logprob: -16.311967849731445
    7. '  ' → logprob: -17.686967849731445
    8. ' xrange' → logprob: -18.686967849731445
    9. '`' → logprob: -18.936967849731445
    10. 'r' → logprob: -19.936967849731445

Token 292: '(limit' (ID: 112473)
  Prédit: '(limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.002030707662925124
    2. '(z' → logprob: -6.377030849456787
    3. '(' → logprob: -8.127030372619629
    4. 'limit' → logprob: -10.377030372619629
    5. ' limit' → logprob: -14.377030372619629
    6. 'z' → logprob: -15.127030372619629
    7. '(l' → logprob: -15.252030372619629
    8. ' (' → logprob: -15.377030372619629
    9. '(len' → logprob: -15.502030372619629
    10. '0' → logprob: -15.627030372619629

Token 293: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2531074285507202
    2. '+' → logprob: -1.5031074285507202
    3. ')]' → logprob: -6.75310754776001
    4. '1' → logprob: -12.378107070922852
    5. '(' → logprob: -12.753107070922852
    6. ' ' → logprob: -14.253107070922852
    7. ')' → logprob: -14.253107070922852
    8. ')])' → logprob: -14.503107070922852
    9. '   ' → logprob: -14.753107070922852
    10. ')]
' → logprob: -15.378107070922852

Token 294: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013265528250485659
    2. ' ' → logprob: -6.626326560974121
    3. '2' → logprob: -15.376326560974121
    4. '(' → logprob: -15.751326560974121
    5. '   ' → logprob: -16.376325607299805
    6. '0' → logprob: -17.251325607299805
    7. '  ' → logprob: -18.063825607299805
    8. ')' → logprob: -18.126325607299805
    9. '
' → logprob: -18.251325607299805
    10. '           ' → logprob: -18.938825607299805

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '2' → logprob: -16.250009536743164
    4. '(' → logprob: -17.750009536743164
    5. '0' → logprob: -17.875009536743164
    6. '+' → logprob: -18.687509536743164
    7. '   ' → logprob: -18.812509536743164
    8. '１' → logprob: -19.437509536743164
    9. '
' → logprob: -19.500009536743164
    10. ')' → logprob: -19.750009536743164

Token 296: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008197537390515208
    2. ']' → logprob: -7.125819683074951
    3. ')' → logprob: -11.87582015991211
    4. ' ]' → logprob: -12.37582015991211
    5. '}]' → logprob: -13.75082015991211
    6. ')]
' → logprob: -13.87582015991211
    7. ' )' → logprob: -13.87582015991211
    8. ']]' → logprob: -15.37582015991211
    9. '')]' → logprob: -15.75082015991211
    10. '>]' → logprob: -16.00082015991211

Token 297: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4916175901889801
    2. '       ' → logprob: -1.2416175603866577
    3. ' for' → logprob: -2.3666176795959473
    4. 'result' → logprob: -5.241617679595947
    5. '
' → logprob: -9.366617202758789
    6. ' result' → logprob: -9.491617202758789
    7. '   ' → logprob: -9.616617202758789
    8. 'x' → logprob: -9.866617202758789
    9. 'max' → logprob: -10.241617202758789
    10. '```' → logprob: -11.366617202758789

Token 298: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020414821803569794
    2. 'max' → logprob: -4.39541482925415
    3. 'result' → logprob: -5.52041482925415
    4. '       ' → logprob: -5.64541482925415
    5. ' for' → logprob: -8.145414352416992
    6. 'best' → logprob: -10.395414352416992
    7. 'x' → logprob: -12.520414352416992
    8. '```' → logprob: -12.895414352416992
    9. 'answer' → logprob: -13.395414352416992
    10. ' max' → logprob: -13.520414352416992

Token 299: ' Use' (ID: 7649)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009836013428866863
    2. 'result' → logprob: -5.259836196899414
    3. 'max' → logprob: -5.509836196899414
    4. ' for' → logprob: -7.634836196899414
    5. '   ' → logprob: -10.634836196899414
    6. 'best' → logprob: -11.384836196899414
    7. '       ' → logprob: -11.634836196899414
    8. 'answer' → logprob: -12.384836196899414
    9. ' result' → logprob: -12.884836196899414
    10. ' max' → logprob: -13.134836196899414

Token 300: ' two' (ID: 1920)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2043989598751068
    2. 'for' → logprob: -2.3293988704681396
    3. ' max' → logprob: -3.4543988704681396
    4. ' x' → logprob: -3.4543988704681396
    5. 'x' → logprob: -4.954399108886719
    6. 'max' → logprob: -5.079399108886719
    7. ' ' → logprob: -5.454399108886719
    8. ' range' → logprob: -6.204399108886719
    9. 'range' → logprob: -6.579399108886719
    10. '0' → logprob: -6.829399108886719

Token 301: ' pointers' (ID: 58762)
  Prédit: ' pointers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pointers' → logprob: -0.1310003250837326
    2. 'p' → logprob: -2.381000280380249
    3. 'for' → logprob: -3.756000280380249
    4. 'pointer' → logprob: -5.881000518798828
    5. '   ' → logprob: -6.756000518798828
    6. '-pointer' → logprob: -6.756000518798828
    7. ' nested' → logprob: -7.381000518798828
    8. 'nested' → logprob: -7.756000518798828
    9. ' for' → logprob: -8.381000518798828
    10. '
' → logprob: -8.381000518798828

Token 302: ' approach' (ID: 7139)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7743724584579468
    2. '       ' → logprob: -1.2743724584579468
    3. 'x' → logprob: -1.8993724584579468
    4. ':' → logprob: -3.2743725776672363
    5. ' =' → logprob: -3.8993725776672363
    6. ',' → logprob: -4.024372577667236
    7. ' x' → logprob: -4.774372577667236
    8. '=' → logprob: -5.149372577667236
    9. 'i' → logprob: -5.649372577667236
    10. '        
' → logprob: -5.774372577667236

Token 303: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039025500882416964
    2. 'x' → logprob: -6.003902435302734
    3. 'i' → logprob: -7.753902435302734
    4. '
' → logprob: -7.878902435302734
    5. ' x' → logprob: -8.128902435302734
    6. ' i' → logprob: -9.253902435302734
    7. ',' → logprob: -9.378902435302734
    8. '        
' → logprob: -10.253902435302734
    9. '```' → logprob: -10.378902435302734
    10. '   ' → logprob: -10.753902435302734

Token 304: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5977640748023987
    2. ' ' → logprob: -2.097764015197754
    3. '
' → logprob: -2.472764015197754
    4. '0' → logprob: -2.472764015197754
    5. 'find' → logprob: -3.472764015197754
    6. ' maximize' → logprob: -3.472764015197754
    7. ' max' → logprob: -3.722764015197754
    8. ' x' → logprob: -3.972764015197754
    9. 'max' → logprob: -4.222764015197754
    10. 'x' → logprob: -4.472764015197754

Token 305: ' max' (ID: 2999)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04308071732521057
    2. 'max' → logprob: -3.2930808067321777
    3. ' x' → logprob: -5.793080806732178
    4. 'left' → logprob: -7.543080806732178
    5. ' max' → logprob: -7.793080806732178
    6. 'the' → logprob: -7.918080806732178
    7. 'pairs' → logprob: -8.41808032989502
    8. 'i' → logprob: -8.79308032989502
    9. ' the' → logprob: -9.41808032989502
    10. ' pairs' → logprob: -9.79308032989502

Token 306: ' of' (ID: 328)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9005786776542664
    2. '_sum' → logprob: -0.9005786776542664
    3. 'sum' → logprob: -2.400578737258911
    4. ' x' → logprob: -3.650578737258911
    5. 'max' → logprob: -3.775578737258911
    6. '_' → logprob: -4.275578498840332
    7. ' ' → logprob: -5.150578498840332
    8. ' _' → logprob: -5.400578498840332
    9. '_x' → logprob: -5.400578498840332
    10. '
' → logprob: -5.775578498840332

Token 307: ' x' (ID: 1215)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38748425245285034
    2. 'x' → logprob: -1.2624843120574951
    3. ' cubes' → logprob: -3.762484312057495
    4. '0' → logprob: -5.512484073638916
    5. 'i' → logprob: -5.887484073638916
    6. 'sum' → logprob: -6.262484073638916
    7. ' x' → logprob: -7.012484073638916
    8. '(x' → logprob: -7.137484073638916
    9. ' ' → logprob: -7.762484073638916
    10. 'a' → logprob: -7.887484073638916

Token 308: '^' (ID: 61)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07040674239397049
    2. ',y' → logprob: -3.445406675338745
    3. ' ,' → logprob: -4.695406913757324
    4. '+' → logprob: -4.945406913757324
    5. ' +' → logprob: -5.445406913757324
    6. ' and' → logprob: -5.570406913757324
    7. '^' → logprob: -5.695406913757324
    8. '**' → logprob: -6.070406913757324
    9. 'and' → logprob: -6.445406913757324
    10. ' ' → logprob: -6.820406913757324

Token 309: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00017600801947992295
    2. '2' → logprob: -9.625176429748535
    3. ' ' → logprob: -10.500176429748535
    4. '³' → logprob: -10.875176429748535
    5. ',' → logprob: -11.000176429748535
    6. '+' → logprob: -11.125176429748535
    7. 'cube' → logprob: -12.937676429748535
    8. '```' → logprob: -13.062676429748535
    9. '1' → logprob: -13.500176429748535
    10. 'c' → logprob: -13.562676429748535

Token 310: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.027573853731155396
    2. '+' → logprob: -3.902573823928833
    3. ' ' → logprob: -6.152574062347412
    4. ',' → logprob: -6.152574062347412
    5. ' ,' → logprob: -6.152574062347412
    6. '+y' → logprob: -8.152573585510254
    7. ' and' → logprob: -8.402573585510254
    8. ' plus' → logprob: -10.277573585510254
    9. '```' → logprob: -10.527573585510254
    10. ' ' → logprob: -11.902573585510254

Token 311: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3486863970756531
    2. ' y' → logprob: -1.2236864566802979
    3. ' cubes' → logprob: -8.598686218261719
    4. ' ' → logprob: -10.723686218261719
    5. 'c' → logprob: -11.098686218261719
    6. '	y' → logprob: -12.848686218261719
    7. '   ' → logprob: -13.223686218261719
    8. '```' → logprob: -13.473686218261719
    9. 'y's' → logprob: -13.598686218261719
    10. ''y' → logprob: -13.598686218261719

Token 312: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.11708082258701324
    2. '**' → logprob: -2.9920809268951416
    3. '3' → logprob: -3.7420809268951416
    4. '³' → logprob: -4.2420806884765625
    5. '_pow' → logprob: -4.7420806884765625
    6. '```' → logprob: -5.6170806884765625
    7. ' ' → logprob: -6.3670806884765625
    8. ')' → logprob: -6.6170806884765625
    9. '_' → logprob: -7.1170806884765625
    10. ' **' → logprob: -7.2420806884765625

Token 313: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00019364648323971778
    2. '(' → logprob: -9.00019359588623
    3. ' ' → logprob: -10.25019359588623
    4. 'c' → logprob: -12.25019359588623
    5. 'power' → logprob: -12.50019359588623
    6. ' (' → logprob: -12.75019359588623
    7. '```' → logprob: -12.75019359588623
    8. '
' → logprob: -12.87519359588623
    9. '{' → logprob: -12.93769359588623
    10. ')' → logprob: -13.06269359588623

Token 314: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5455494523048401
    2. '
' → logprob: -0.9205494523048401
    3. ',' → logprob: -4.295549392700195
    4. ':' → logprob: -6.170549392700195
    5. ',
' → logprob: -6.795549392700195
    6. 'x' → logprob: -6.920549392700195
    7. '        
' → logprob: -7.170549392700195
    8. ' x' → logprob: -7.170549392700195
    9. ' =' → logprob: -7.420549392700195
    10. '
' → logprob: -8.170549392700195

Token 315: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.018152287229895592
    2. ' z' → logprob: -4.018152236938477
    3. '	z' → logprob: -13.518152236938477
    4. '   ' → logprob: -15.643152236938477
    5. ' ' → logprob: -15.643152236938477
    6. '(z' → logprob: -15.893152236938477
    7. '```' → logprob: -16.393152236938477
    8. '[z' → logprob: -16.518152236938477
    9. ' ' → logprob: -16.580652236938477
    10. '`' → logprob: -16.768152236938477

Token 316: '^' (ID: 61)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.03802908957004547
    2. '       ' → logprob: -4.788029193878174
    3. '**' → logprob: -4.913029193878174
    4. 'pow' → logprob: -5.163029193878174
    5. ',' → logprob: -5.413029193878174
    6. '   ' → logprob: -5.913029193878174
    7. '3' → logprob: -6.288029193878174
    8. '
' → logprob: -6.413029193878174
    9. '_power' → logprob: -6.913029193878174
    10. '^' → logprob: -7.038029193878174

Token 317: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5275670289993286
    2. '_pow' → logprob: -1.4025670289993286
    3. 'pow' → logprob: -1.9025670289993286
    4. 'power' → logprob: -4.652566909790039
    5. '_power' → logprob: -5.902566909790039
    6. '**' → logprob: -6.652566909790039
    7. '³' → logprob: -8.152566909790039
    8. ' ' → logprob: -8.277566909790039
    9. '^' → logprob: -8.652566909790039
    10. '.pow' → logprob: -8.902566909790039

Token 318: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2897155284881592
    2. '
' → logprob: -1.4147155284881592
    3. ',' → logprob: -5.289715766906738
    4. 'x' → logprob: -6.289715766906738
    5. ' x' → logprob: -7.539715766906738
    6. '
' → logprob: -8.414715766906738
    7. 'i' → logprob: -8.664715766906738
    8. ' i' → logprob: -8.789715766906738
    9. ',
' → logprob: -9.039715766906738
    10. '   ' → logprob: -9.539715766906738

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5902215242385864
    2. '
' → logprob: -0.8402215242385864
    3. ',' → logprob: -4.965221405029297
    4. 'x' → logprob: -5.715221405029297
    5. 'i' → logprob: -7.465221405029297
    6. '        
' → logprob: -7.465221405029297
    7. '
' → logprob: -7.590221405029297
    8. 'n' → logprob: -8.090221405029297
    9. '\n' → logprob: -8.215221405029297
    10. ' x' → logprob: -8.215221405029297

Token 320: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020169274881482124
    2. 'max' → logprob: -4.395169258117676
    3. 'result' → logprob: -5.270169258117676
    4. 'left' → logprob: -6.520169258117676
    5. '       ' → logprob: -7.270169258117676
    6. '   ' → logprob: -8.520169258117676
    7. 'i' → logprob: -10.020169258117676
    8. ' x' → logprob: -10.520169258117676
    9. 'res' → logprob: -11.270169258117676
    10. 'def' → logprob: -11.395169258117676

Token 321: ' Iterate' (ID: 129410)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.055645715445280075
    2. 'left' → logprob: -3.805645704269409
    3. 'result' → logprob: -4.305645942687988
    4. '       ' → logprob: -4.555645942687988
    5. 'max' → logprob: -4.930645942687988
    6. '   ' → logprob: -7.805645942687988
    7. 'def' → logprob: -9.180645942687988
    8. 'i' → logprob: -9.805645942687988
    9. 'results' → logprob: -10.555645942687988
    10. ' x' → logprob: -10.930645942687988

Token 322: ' over' (ID: 1072)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14808572828769684
    2. '       ' → logprob: -2.523085832595825
    3. ' x' → logprob: -2.898085832595825
    4. '   ' → logprob: -7.523085594177246
    5. ' over' → logprob: -7.523085594177246
    6. 'left' → logprob: -7.648085594177246
    7. 'i' → logprob: -8.648085594177246
    8. 'over' → logprob: -9.023085594177246
    9. ' ' → logprob: -9.398085594177246
    10. ' i' → logprob: -9.523085594177246

Token 323: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00031055594445206225
    2. ' x' → logprob: -8.500310897827148
    3. 'range' → logprob: -9.375310897827148
    4. '   ' → logprob: -12.000310897827148
    5. 'i' → logprob: -12.250310897827148
    6. 'y' → logprob: -12.250310897827148
    7. 'left' → logprob: -13.000310897827148
    8. ' range' → logprob: -13.125310897827148
    9. '```' → logprob: -14.000310897827148
    10. 'for' → logprob: -15.125310897827148

Token 324: ' ascending' (ID: 75564)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43179139494895935
    2. '=' → logprob: -1.8067914247512817
    3. ' in' → logprob: -2.431791305541992
    4. 'for' → logprob: -2.806791305541992
    5. ' for' → logprob: -3.806791305541992
    6. 'in' → logprob: -4.806791305541992
    7. 'x' → logprob: -5.806791305541992
    8. '       ' → logprob: -6.056791305541992
    9. 'from' → logprob: -7.181791305541992
    10. ',' → logprob: -7.431791305541992

Token 325: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35851481556892395
    2. ',' → logprob: -1.6085147857666016
    3. 'for' → logprob: -3.2335147857666016
    4. ' for' → logprob: -3.8585147857666016
    5. 'x' → logprob: -4.233514785766602
    6. 'y' → logprob: -4.358514785766602
    7. '
' → logprob: -5.608514785766602
    8. ' and' → logprob: -5.608514785766602
    9. 'left' → logprob: -6.733514785766602
    10. ',y' → logprob: -6.858514785766602

Token 326: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.47483283281326294
    2. 'y' → logprob: -0.9748328328132629
    3. 'for' → logprob: -8.224832534790039
    4. ' for' → logprob: -8.599832534790039
    5. ' ' → logprob: -9.349832534790039
    6. '   ' → logprob: -9.849832534790039
    7. '    ' → logprob: -10.099832534790039
    8. 'x' → logprob: -10.724832534790039
    9. '  ' → logprob: -11.099832534790039
    10. 'range' → logprob: -11.224832534790039

Token 327: ' descending' (ID: 89489)
  Prédit: 'descending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'descending' → logprob: -1.1430891752243042
    2. '=' → logprob: -1.2680891752243042
    3. ' descending' → logprob: -1.2680891752243042
    4. ' =' → logprob: -2.1430892944335938
    5. 'desc' → logprob: -8.393089294433594
    6. 'down' → logprob: -8.893089294433594
    7. 'Descending' → logprob: -9.143089294433594
    8. 'from' → logprob: -9.393089294433594
    9. 'de' → logprob: -9.768089294433594
    10. ' in' → logprob: -9.893089294433594

Token 328: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3938981890678406
    2. '       ' → logprob: -1.1438982486724854
    3. '        
' → logprob: -5.643898010253906
    4. ',' → logprob: -6.893898010253906
    5. '   ' → logprob: -7.768898010253906
    6. '    
' → logprob: -8.143898010253906
    7. ':' → logprob: -8.268898010253906
    8. '
' → logprob: -8.643898010253906
    9. ',
' → logprob: -8.768898010253906
    10. '  
' → logprob: -9.018898010253906

Token 329: ' approach' (ID: 7139)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.1579039096832275
    2. 'range' → logprob: -1.2829039096832275
    3. ' range' → logprob: -1.2829039096832275
    4. 'find' → logprob: -2.6579039096832275
    5. ' maximize' → logprob: -3.9079039096832275
    6. 'maximize' → logprob: -4.532903671264648
    7. 'max' → logprob: -4.907903671264648
    8. '0' → logprob: -5.407903671264648
    9. ' ' → logprob: -5.532903671264648
    10. ' optimize' → logprob: -6.032903671264648

Token 330: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.619064211845398
    2. 'limit' → logprob: -0.869064211845398
    3. ' the' → logprob: -4.3690643310546875
    4. 'from' → logprob: -4.8690643310546875
    5. ' z' → logprob: -5.1190643310546875
    6. ' from' → logprob: -5.7440643310546875
    7. 'z' → logprob: -5.8690643310546875
    8. '       ' → logprob: -5.9940643310546875
    9. 'max' → logprob: -6.4940643310546875
    10. 'the' → logprob: -6.4940643310546875

Token 331: ' efficiently' (ID: 34229)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32403281331062317
    2. '       ' → logprob: -1.3240327835083008
    3. ',' → logprob: -5.324032783508301
    4. 'y' → logprob: -6.574032783508301
    5. '        
' → logprob: -7.074032783508301
    6. '
' → logprob: -7.449032783508301
    7. ' y' → logprob: -8.0740327835083
    8. ':' → logprob: -8.0740327835083
    9. ' =' → logprob: -8.0740327835083
    10. '```' → logprob: -8.0740327835083

Token 332: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05112405866384506
    2. '
' → logprob: -3.051124095916748
    3. '        
' → logprob: -7.051124095916748
    4. 'y' → logprob: -7.426124095916748
    5. ',' → logprob: -8.17612361907959
    6. '```' → logprob: -8.80112361907959
    7. 'x' → logprob: -9.30112361907959
    8. '   ' → logprob: -9.30112361907959
    9. 'n' → logprob: -9.55112361907959
    10. ' y' → logprob: -9.67612361907959

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013833323027938604
    2. 'x' → logprob: -7.126383304595947
    3. ' x' → logprob: -8.626383781433105
    4. 'y' → logprob: -9.251383781433105
    5. '   ' → logprob: -9.251383781433105
    6. ',' → logprob: -9.376383781433105
    7. ' y' → logprob: -9.751383781433105
    8. '```' → logprob: -11.001383781433105
    9. '
' → logprob: -11.876383781433105
    10. '        
' → logprob: -12.001383781433105

Token 334: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4533253014087677
    2. 'x' (adapté à ' x') → logprob: -1.0783252716064453
    3. ' x' → logprob: -4.328325271606445
    4. 'y' → logprob: -4.953325271606445
    5. 'result' → logprob: -6.453325271606445
    6. ' y' → logprob: -6.828325271606445
    7. '   ' → logprob: -7.453325271606445
    8. 'max' → logprob: -7.828325271606445
    9. ' result' → logprob: -8.953325271606445
    10. '```' → logprob: -9.453325271606445

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4788249731063843
    2. ' =' → logprob: -0.9788249731063843
    3. ',' → logprob: -5.353825092315674
    4. 's' → logprob: -12.603824615478516
    5. ')' → logprob: -14.228824615478516
    6. ' ,' → logprob: -14.353824615478516
    7. ' ' → logprob: -14.353824615478516
    8. 'y' → logprob: -14.978824615478516
    9. 'x' → logprob: -15.103824615478516
    10. ',y' → logprob: -15.728824615478516

Token 336: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759947299957275
    2. '1' → logprob: -0.8259947299957275
    3. ' ' → logprob: -9.825994491577148
    4. 'limit' → logprob: -13.700994491577148
    5. '   ' → logprob: -17.82599449157715
    6. '=' → logprob: -18.32599449157715
    7. '[' → logprob: -18.57599449157715
    8. '```' → logprob: -18.70099449157715
    9. '`' → logprob: -19.45099449157715
    10. 'lim' → logprob: -19.45099449157715

Token 337: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016264621168375015
    2. '1' → logprob: -4.14126443862915
    3. 'limit' → logprob: -8.391264915466309
    4. ' ' → logprob: -13.516264915466309
    5. 'z' → logprob: -13.641264915466309
    6. 'lim' → logprob: -14.766264915466309
    7. ' limit' → logprob: -15.766264915466309
    8. '(limit' → logprob: -16.766263961791992
    9. '۰' → logprob: -17.078763961791992
    10. 'max' → logprob: -17.516263961791992

Token 338: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0031765217427164316
    2. 'y' → logprob: -5.878176689147949
    3. ' y' → logprob: -8.75317668914795
    4. ' 
' → logprob: -9.62817668914795
    5. '
' → logprob: -9.75317668914795
    6. ',y' → logprob: -10.50317668914795
    7. '	y' → logprob: -11.25317668914795
    8. '	
' → logprob: -11.62817668914795
    9. ',' → logprob: -11.75317668914795
    10. '       ' → logprob: -12.25317668914795

Token 339: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0022845494095236063
    2. 'y' → logprob: -6.877284526824951
    3. ' 
' → logprob: -7.127284526824951
    4. '<|end|>' → logprob: -8.25228500366211
    5. ' y' → logprob: -10.12728500366211
    6. '
' → logprob: -10.37728500366211
    7. ',' → logprob: -10.50228500366211
    8. ',y' → logprob: -11.00228500366211
    9. ',
' → logprob: -11.00228500366211
    10. '       ' → logprob: -11.25228500366211

Token 340: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0007362506585195661
    2. ' y' → logprob: -7.250736236572266
    3. '
' → logprob: -11.375736236572266
    4. 'limit' → logprob: -11.500736236572266
    5. 'while' → logprob: -13.625736236572266
    6. ',y' → logprob: -14.000736236572266
    7. '=' → logprob: -14.125736236572266
    8. '       ' → logprob: -14.500736236572266
    9. ' =' → logprob: -15.375736236572266
    10. ',' → logprob: -15.625736236572266

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048588622361421585
    2. ' =' → logprob: -3.048588514328003
    3. '=
' → logprob: -13.798588752746582
    4. 'limit' → logprob: -15.423588752746582
    5. ' =
' → logprob: -17.673587799072266
    6. '=z' → logprob: -18.673587799072266
    7. '=

' → logprob: -19.423587799072266
    8. '=cut' → logprob: -19.923587799072266
    9. '=line' → logprob: -20.423587799072266
    10. ' limit' → logprob: -20.673587799072266

Token 342: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.015077115036547184
    2. 'z' → logprob: -4.390077114105225
    3. ' limit' → logprob: -6.015077114105225
    4. ' z' → logprob: -9.015077590942383
    5. 'lim' → logprob: -15.015077590942383
    6. '(limit' → logprob: -16.015077590942383
    7. '_limit' → logprob: -16.765077590942383
    8. '   ' → logprob: -16.890077590942383
    9. ' ' → logprob: -16.890077590942383
    10. 'len' → logprob: -17.077577590942383

Token 343: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8590445518493652
    2. '<|end|>' → logprob: -0.8590445518493652
    3. '<|end|>' → logprob: -2.4840445518493652
    4. '       ' → logprob: -3.2340445518493652
    5. '  
' → logprob: -4.859044551849365
    6. 'while' → logprob: -5.359044551849365
    7. ' 
' → logprob: -5.734044551849365
    8. '        
' → logprob: -5.734044551849365
    9. ' while' → logprob: -6.109044551849365
    10. '    
' → logprob: -6.359044551849365

Token 344: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14808346331119537
    2. '       ' → logprob: -3.273083448410034
    3. 'while' → logprob: -3.398083448410034
    4. '<|end|>' → logprob: -3.648083448410034
    5. ' while' → logprob: -4.023083686828613
    6. '\n' → logprob: -5.023083686828613
    7. ')' → logprob: -5.648083686828613
    8. ',' → logprob: -6.273083686828613
    9. '    
' → logprob: -6.523083686828613
    10. '   ' → logprob: -6.523083686828613

Token 345: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.21631500124931335
    2. 'max' → logprob: -2.2163150310516357
    3. '       ' → logprob: -2.8413150310516357
    4. ' while' → logprob: -4.091314792633057
    5. 'result' → logprob: -5.341314792633057
    6. '
' → logprob: -5.716314792633057
    7. '   ' → logprob: -6.966314792633057
    8. ' max' → logprob: -7.091314792633057
    9. '        
' → logprob: -9.091315269470215
    10. '    
' → logprob: -9.841315269470215

Token 346: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25322097539901733
    2. ' x' → logprob: -1.503221035003662
    3. ' y' → logprob: -7.003221035003662
    4. 'y' → logprob: -7.878221035003662
    5. '   ' → logprob: -13.503220558166504
    6. '(x' → logprob: -13.753220558166504
    7. ' ' → logprob: -15.003220558166504
    8. '	x' → logprob: -15.628220558166504
    9. '1' → logprob: -15.878220558166504
    10. '_x' → logprob: -16.37822151184082

Token 347: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2014184147119522
    2. ' <=' → logprob: -1.701418399810791
    3. 'y' → logprob: -13.32641887664795
    4. '<' → logprob: -14.45141887664795
    5. 'le' → logprob: -14.57641887664795
    6. '0' → logprob: -15.20141887664795
    7. '=' → logprob: -15.20141887664795
    8. ' ' → logprob: -15.20141887664795
    9. 'x' → logprob: -15.32641887664795
    10. ')<=' → logprob: -15.32641887664795

Token 348: ' limit' (ID: 5967)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01123090460896492
    2. ' y' → logprob: -4.886230945587158
    3. 'limit' → logprob: -6.011230945587158
    4. 'z' → logprob: -6.886230945587158
    5. ' limit' → logprob: -8.88623046875
    6. ' z' → logprob: -12.01123046875
    7. ' ' → logprob: -15.76123046875
    8. '	y' → logprob: -15.88623046875
    9. 'lim' → logprob: -16.01123046875
    10. '   ' → logprob: -16.57373046875

Token 349: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16336116194725037
    2. ':
' → logprob: -2.288361072540283
    3. ':' → logprob: -3.038361072540283
    4. 'and' → logprob: -7.038361072540283
    5. '       ' → logprob: -8.538361549377441
    6. '           ' → logprob: -9.038361549377441
    7. '   ' → logprob: -9.663361549377441
    8. ' ' → logprob: -10.413361549377441
    9. ' :
' → logprob: -10.663361549377441
    10. '):
' → logprob: -11.038361549377441

Token 350: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01815006136894226
    2. ' y' → logprob: -4.0181498527526855
    3. 'x' → logprob: -15.893150329589844
    4. '	y' → logprob: -18.268150329589844
    5. '1' → logprob: -19.268150329589844
    6. '   ' → logprob: -20.268150329589844
    7. ' ' → logprob: -20.268150329589844
    8. '
' → logprob: -21.268150329589844
    9. ' ' → logprob: -21.268150329589844
    10. ''y' → logprob: -21.268150329589844

Token 351: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.21886323392391205
    2. ' >=' → logprob: -1.8438632488250732
    3. '>' → logprob: -3.3438632488250732
    4. ' >' → logprob: -5.843863010406494
    5. '1' → logprob: -9.343863487243652
    6. '0' → logprob: -10.343863487243652
    7. ' ' → logprob: -11.218863487243652
    8. '=' → logprob: -11.468863487243652
    9. '≥' → logprob: -11.968863487243652
    10. 'x' → logprob: -12.593863487243652

Token 352: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024358915106859058
    2. '0' → logprob: -8.500243186950684
    3. ' ' → logprob: -10.125243186950684
    4. '   ' → logprob: -17.875244140625
    5. 'x' → logprob: -18.875244140625
    6. '  ' → logprob: -19.437744140625
    7. '```' → logprob: -20.437744140625
    8. '１' → logprob: -20.562744140625
    9. '۱' → logprob: -20.687744140625
    10. '=' → logprob: -20.750244140625

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002545448951423168
    2. '0' → logprob: -8.75025463104248
    3. ' ' → logprob: -9.25025463104248
    4. '   ' → logprob: -17.375253677368164
    5. 'x' → logprob: -18.250253677368164
    6. '  ' → logprob: -19.437753677368164
    7. '１' → logprob: -20.125253677368164
    8. '```' → logprob: -20.875253677368164
    9. '=' → logprob: -20.937753677368164
    10. '۱' → logprob: -21.062753677368164

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026467151939868927
    2. ':
' → logprob: -3.6514670848846436
    3. ' and' → logprob: -9.776467323303223
    4. '       ' → logprob: -10.026467323303223
    5. '):' → logprob: -11.401467323303223
    6. ' :' → logprob: -11.401467323303223
    7. ',' → logprob: -11.651467323303223
    8. '):
' → logprob: -11.651467323303223
    9. '<|end|>' → logprob: -11.651467323303223
    10. ':

' → logprob: -12.526467323303223

Token 355: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02808978036046028
    2. '       ' → logprob: -4.778090000152588
    3. ' ' → logprob: -5.153090000152588
    4. ':' → logprob: -5.528090000152588
    5. '<|end|>' → logprob: -5.903090000152588
    6. ':
' → logprob: -6.403090000152588
    7. ' if' → logprob: -7.028090000152588
    8. '            ' → logprob: -7.528090000152588
    9. ' 
' → logprob: -7.653090000152588
    10. '        ' → logprob: -7.778090000152588

Token 356: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8830570578575134
    2. ' current' → logprob: -1.7580571174621582
    3. 'current' → logprob: -2.258057117462158
    4. 'sum' → logprob: -2.508057117462158
    5. 'total' → logprob: -2.758057117462158
    6. ' s' → logprob: -2.758057117462158
    7. ' total' → logprob: -3.258057117462158
    8. 's' (adapté à ' s') → logprob: -3.508057117462158
    9. ' sum' → logprob: -4.508057117462158
    10. ' curr' → logprob: -5.258057117462158

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47450122237205505
    2. ' =' → logprob: -0.9745012521743774
    3. 'um' → logprob: -8.099501609802246
    4. '=c' → logprob: -9.349501609802246
    5. 'c' → logprob: -10.599501609802246
    6. 'ums' → logprob: -13.724501609802246
    7. 'u' → logprob: -13.974501609802246
    8. ' ' → logprob: -13.974501609802246
    9. 'm' → logprob: -14.099501609802246
    10. 'x' → logprob: -14.099501609802246

Token 358: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00038145645521581173
    2. ' cubes' → logprob: -7.8753814697265625
    3. '   ' → logprob: -14.125381469726562
    4. ' c' → logprob: -15.625381469726562
    5. '       ' → logprob: -16.250381469726562
    6. ' ' → logprob: -16.375381469726562
    7. '	c' → logprob: -16.375381469726562
    8. '           ' → logprob: -17.250381469726562
    9. 'cups' → logprob: -17.500381469726562
    10. '(c' → logprob: -17.625381469726562

Token 359: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.130576806142926e-05
    2. 'x' → logprob: -10.375031471252441
    3. '```' → logprob: -17.250030517578125
    4. '[' → logprob: -17.375030517578125
    5. '\[' → logprob: -18.625030517578125
    6. '[
' → logprob: -18.625030517578125
    7. ' x' → logprob: -19.375030517578125
    8. ' [' → logprob: -19.750030517578125
    9. '	x' → logprob: -19.875030517578125
    10. '<x' → logprob: -20.000030517578125

Token 360: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020592445798683912
    2. ']+' → logprob: -8.500205993652344
    3. ' ]' → logprob: -13.000205993652344
    4. ']
' → logprob: -16.750205993652344
    5. '']' → logprob: -18.125205993652344
    6. '`]' → logprob: -18.625205993652344
    7. '+]' → logprob: -18.750205993652344
    8. '+' → logprob: -19.000205993652344
    9. '"]' → logprob: -19.000205993652344
    10. ']+=' → logprob: -19.125205993652344

Token 361: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4076205790042877
    2. '+' → logprob: -1.4076205492019653
    3. '+c' → logprob: -2.407620668411255
    4. '+s' → logprob: -11.907620429992676
    5. 'c' → logprob: -12.532620429992676
    6. '+
' → logprob: -13.782620429992676
    7. '+C' → logprob: -14.407620429992676
    8. ' plus' → logprob: -14.407620429992676
    9. ' ' → logprob: -14.532620429992676
    10. '+y' → logprob: -15.157620429992676

Token 362: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.547789674485102e-05
    2. ' cubes' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.375036239624023
    4. 'cub' → logprob: -17.625036239624023
    5. '       ' → logprob: -18.375036239624023
    6. '	c' → logprob: -18.625036239624023
    7. ' c' → logprob: -19.125036239624023
    8. '
' → logprob: -19.125036239624023
    9. '[c' → logprob: -19.250036239624023
    10. 'cups' → logprob: -19.375036239624023

Token 363: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.704273118884885e-07
    2. 'y' → logprob: -14.375000953674316
    3. '[' → logprob: -17.25
    4. ' [' → logprob: -20.375
    5. '```' → logprob: -20.625
    6. '[s' → logprob: -21.75
    7. '	y' → logprob: -22.25
    8. '[
' → logprob: -22.25
    9. '[j' → logprob: -22.375
    10. '   ' → logprob: -22.375

Token 364: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16057422757148743
    2. ']
' → logprob: -1.910574197769165
    3. ' ]' → logprob: -8.910573959350586
    4. '           ' → logprob: -9.410573959350586
    5. '       ' → logprob: -10.035573959350586
    6. ']
' → logprob: -10.285573959350586
    7. ']

' → logprob: -10.535573959350586
    8. ' ]
' → logprob: -11.410573959350586
    9. '<|end|>' → logprob: -12.410573959350586
    10. ')' → logprob: -13.035573959350586

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17904719710350037
    2. '<|end|>' → logprob: -2.429047107696533
    3. ' <=' → logprob: -3.054047107696533
    4. '
' → logprob: -5.054047107696533
    5. '<=' → logprob: -5.429047107696533
    6. ' if' → logprob: -5.429047107696533
    7. ' 
' → logprob: -5.679047107696533
    8. ' ' → logprob: -5.929047107696533
    9. '<|end|>' → logprob: -6.429047107696533
    10. '  
' → logprob: -6.679047107696533

Token 366: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5499404668807983
    2. '           ' → logprob: -1.1749404668807983
    3. 'if' (adapté à ' if') → logprob: -2.174940586090088
    4. ' ' → logprob: -7.924940586090088
    5. '		' → logprob: -9.17494010925293
    6. 'If' → logprob: -11.54994010925293
    7. '	if' → logprob: -11.67494010925293
    8. '	       ' → logprob: -11.79994010925293
    9. '```' → logprob: -11.92494010925293
    10. ' ' → logprob: -11.92494010925293

Token 367: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004078639671206474
    2. ' s' → logprob: -5.5040788650512695
    3. ' ' → logprob: -16.754077911376953
    4. '   ' → logprob: -16.879077911376953
    5. '           ' → logprob: -17.004077911376953
    6. '	s' → logprob: -17.129077911376953
    7. '  ' → logprob: -18.129077911376953
    8. '`s' → logprob: -18.629077911376953
    9. '               ' → logprob: -19.254077911376953
    10. '_s' → logprob: -19.379077911376953

Token 368: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.11293070763349533
    2. ' <=' → logprob: -2.2379307746887207
    3. '>' → logprob: -9.362930297851562
    4. '==' → logprob: -11.112930297851562
    5. ' >' → logprob: -12.487930297851562
    6. ')<=' → logprob: -13.987930297851562
    7. ']<=' → logprob: -14.237930297851562
    8. '=' → logprob: -14.237930297851562
    9. ' ==' → logprob: -14.612930297851562
    10. ' ' → logprob: -15.237930297851562

Token 369: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.4974866644479334e-05
    2. ' z' → logprob: -11.125015258789062
    3. '	z' → logprob: -17.250015258789062
    4. '   ' → logprob: -17.875015258789062
    5. 'c' → logprob: -18.000015258789062
    6. '(z' → logprob: -18.625015258789062
    7. ' ' → logprob: -18.875015258789062
    8. '           ' → logprob: -19.250015258789062
    9. '       ' → logprob: -19.375015258789062
    10. '_z' → logprob: -19.750015258789062

Token 370: '_pow' (ID: 160965)
  Prédit: '_pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -1.5048530030981055e-06
    2. 'pow' → logprob: -13.625001907348633
    3. '**' → logprob: -15.250001907348633
    4. '_pw' → logprob: -17.500001907348633
    5. '.pow' → logprob: -17.875001907348633
    6. '_' → logprob: -18.375001907348633
    7. '```' → logprob: -18.500001907348633
    8. '`' → logprob: -19.125001907348633
    9. '(pow' → logprob: -19.500001907348633
    10. '\' → logprob: -19.500001907348633

Token 371: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38700512051582336
    2. ':
' → logprob: -1.137005090713501
    3. ' and' → logprob: -9.387004852294922
    4. ':
' → logprob: -10.637004852294922
    5. ':

' → logprob: -11.762004852294922
    6. '           ' → logprob: -12.012004852294922
    7. '):
' → logprob: -12.262004852294922
    8. ' :
' → logprob: -12.887004852294922
    9. ' :' → logprob: -13.137004852294922
    10. '       ' → logprob: -13.512004852294922

Token 372: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17247602343559265
    2. ':
' → logprob: -1.922476053237915
    3. '           ' → logprob: -5.422475814819336
    4. ':' → logprob: -5.422475814819336
    5. ' and' → logprob: -6.547475814819336
    6. ' if' → logprob: -7.172475814819336
    7. 'max' → logprob: -7.922475814819336
    8. '):
' → logprob: -8.297475814819336
    9. ' max' → logprob: -8.547475814819336
    10. 'if' → logprob: -8.922475814819336

Token 373: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5972014665603638
    2. 'if' (adapté à ' if') → logprob: -1.4722014665603638
    3. '               ' → logprob: -1.5972014665603638
    4. 'max' → logprob: -4.472201347351074
    5. '           ' → logprob: -5.597201347351074
    6. ' max' → logprob: -6.597201347351074
    7. '                   ' → logprob: -6.972201347351074
    8. '   ' → logprob: -8.847201347351074
    9. '	if' → logprob: -10.097201347351074
    10. '
' → logprob: -10.597201347351074

Token 374: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08924064040184021
    2. ' s' → logprob: -2.464240550994873
    3. '               ' → logprob: -8.589241027832031
    4. '                   ' → logprob: -9.839241027832031
    5. 'max' → logprob: -10.214241027832031
    6. ' max' → logprob: -11.964241027832031
    7. '           ' → logprob: -11.964241027832031
    8. '	s' → logprob: -12.839241027832031
    9. '   ' → logprob: -13.214241027832031
    10. '                ' → logprob: -13.964241027832031

Token 375: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10020828247070312
    2. ' >' → logprob: -2.350208282470703
    3. ' ' → logprob: -13.850208282470703
    4. '   ' → logprob: -15.850208282470703
    5. '>

' → logprob: -16.100208282470703
    6. '>
' → logprob: -16.350208282470703
    7. 'and' → logprob: -16.600208282470703
    8. '.' → logprob: -17.100208282470703
    9. '">' → logprob: -17.100208282470703
    10. ':' → logprob: -17.475208282470703

Token 376: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -6.2729995988775045e-06
    2. ' max' → logprob: -12.000006675720215
    3. '           ' → logprob: -19.3750057220459
    4. '               ' → logprob: -20.2500057220459
    5. '	max' → logprob: -20.8750057220459
    6. '   ' → logprob: -22.5000057220459
    7. '[max' → logprob: -22.8750057220459
    8. '_max' → logprob: -22.8750057220459
    9. '(max' → logprob: -23.3750057220459
    10. '                   ' → logprob: -23.5000057220459

Token 377: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.704273118884885e-07
    2. 'sum' → logprob: -14.625000953674316
    3. '_max' → logprob: -16.375
    4. '_s' → logprob: -20.25
    5. '_' → logprob: -20.75
    6. 'max' → logprob: -20.875
    7. '_SUM' → logprob: -22.125
    8. ' sum' → logprob: -22.125
    9. '\' → logprob: -22.75
    10. 's' → logprob: -23.0

Token 378: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10811644047498703
    2. ':' → logprob: -2.483116388320923
    3. '                   ' → logprob: -3.983116388320923
    4. '               ' → logprob: -8.108116149902344
    5. '           ' → logprob: -10.858116149902344
    6. '):
' → logprob: -11.483116149902344
    7. ' and' → logprob: -11.858116149902344
    8. '                       ' → logprob: -11.983116149902344
    9. ':
' → logprob: -11.983116149902344
    10. ',' → logprob: -13.108116149902344

Token 379: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0771830826997757
    2. '               ' → logprob: -3.0771830081939697
    3. ' max' → logprob: -3.9521830081939697
    4. 'max' → logprob: -4.827183246612549
    5. '                       ' → logprob: -7.827183246612549
    6. '           ' → logprob: -8.07718276977539
    7. '
' → logprob: -9.82718276977539
    8. '[max' → logprob: -10.07718276977539
    9. '                    
' → logprob: -10.20218276977539
    10. '                  ' → logprob: -10.70218276977539

Token 380: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.03805262967944145
    2. ' max' → logprob: -3.288052558898926
    3. '                   ' → logprob: -11.538052558898926
    4. '               ' → logprob: -14.163052558898926
    5. '                       ' → logprob: -15.288052558898926
    6. '	max' → logprob: -15.413052558898926
    7. '           ' → logprob: -16.663053512573242
    8. '[max' → logprob: -16.913053512573242
    9. ',max' → logprob: -17.538053512573242
    10. '(max' → logprob: -17.788053512573242

Token 381: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.704273118884885e-07
    2. 'sum' → logprob: -14.500000953674316
    3. '_s' → logprob: -15.875000953674316
    4. '_max' → logprob: -17.75
    5. '_' → logprob: -18.25
    6. '```' → logprob: -19.375
    7. '_SUM' → logprob: -19.625
    8. '\' → logprob: -19.75
    9. '_code' → logprob: -19.875
    10. 's' → logprob: -20.0

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889727503061295
    2. ' =' → logprob: -2.57889723777771
    3. '=s' → logprob: -12.203897476196289
    4. '                   ' → logprob: -13.828897476196289
    5. '<|end|>' → logprob: -15.203897476196289
    6. '=
' → logprob: -15.453897476196289
    7. '=max' → logprob: -15.828897476196289
    8. '＝' → logprob: -15.953897476196289
    9. '                    ' → logprob: -16.20389747619629
    10. '=

' → logprob: -16.20389747619629

Token 383: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.313262403011322
    2. ' s' → logprob: -1.3132624626159668
    3. '                   ' → logprob: -14.688261985778809
    4. '               ' → logprob: -16.063262939453125
    5. '	s' → logprob: -16.563262939453125
    6. '{s' → logprob: -16.813262939453125
    7. '_s' → logprob: -17.188262939453125
    8. '<s' → logprob: -17.813262939453125
    9. '           ' → logprob: -18.813262939453125
    10. '=s' → logprob: -19.063262939453125

Token 384: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009300184436142445
    2. '                   ' → logprob: -4.759300231933594
    3. '                
' → logprob: -8.134300231933594
    4. ',' → logprob: -8.634300231933594
    5. '
' → logprob: -9.259300231933594
    6. '                    
' → logprob: -9.384300231933594
    7. 'x' → logprob: -11.634300231933594
    8. 'y' → logprob: -11.884300231933594
    9. '           ' → logprob: -12.259300231933594
    10. '                ' → logprob: -13.384300231933594

Token 385: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005174091784283519
    2. '                
' → logprob: -8.000517845153809
    3. '                   ' → logprob: -9.000517845153809
    4. '
' → logprob: -10.500517845153809
    5. '                    
' → logprob: -11.125517845153809
    6. '           ' → logprob: -12.125517845153809
    7. ' x' → logprob: -13.000517845153809
    8. 'x' → logprob: -13.500517845153809
    9. '                ' → logprob: -13.625517845153809
    10. ',' → logprob: -14.000517845153809

Token 386: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.19490303099155426
    2. ' x' → logprob: -1.944903016090393
    3. '           ' → logprob: -3.4449031352996826
    4. '               ' → logprob: -6.1949028968811035
    5. '                   ' → logprob: -9.944903373718262
    6. '   ' → logprob: -10.069903373718262
    7. '
' → logprob: -11.069903373718262
    8. '	x' → logprob: -11.069903373718262
    9. '       ' → logprob: -12.694903373718262
    10. ',' → logprob: -12.944903373718262

Token 387: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02325141802430153
    2. ' +=' → logprob: -3.773251533508301
    3. ']+=' → logprob: -12.3982515335083
    4. '=' → logprob: -13.7732515335083
    5. '+' → logprob: -14.5232515335083
    6. '```' → logprob: -17.523250579833984
    7. 'increment' → logprob: -17.648250579833984
    8. ')' → logprob: -17.898250579833984
    9. '+='' → logprob: -18.023250579833984
    10. '1' → logprob: -18.273250579833984

Token 388: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '<|end|>' → logprob: -19.500001907348633
    4. '```' → logprob: -19.750001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '۱' → logprob: -21.000001907348633
    7. '１' → logprob: -21.875001907348633
    8. '१' → logprob: -22.500001907348633
    9. '  ' → logprob: -22.625001907348633
    10. '১' → logprob: -22.625001907348633

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -18.375001907348633
    4. '```' → logprob: -19.000001907348633
    5. '۱' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.500001907348633
    7. '１' → logprob: -21.000001907348633
    8. '१' → logprob: -21.062501907348633
    9. '0' → logprob: -21.125001907348633
    10. '<|end|>' → logprob: -21.250001907348633

Token 390: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037056582514196634
    2. 'else' → logprob: -5.8787055015563965
    3. ' else' → logprob: -7.1287055015563965
    4. 'y' → logprob: -10.003705978393555
    5. '            
' → logprob: -10.878705978393555
    6. 'elif' → logprob: -11.253705978393555
    7. ' y' → logprob: -12.378705978393555
    8. '               ' → logprob: -12.503705978393555
    9. '    
' → logprob: -12.503705978393555
    10. '
' → logprob: -13.253705978393555

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06912877410650253
    2. 'else' → logprob: -2.8191287517547607
    3. ' else' → logprob: -4.94412899017334
    4. 'y' → logprob: -12.56912899017334
    5. '       ' → logprob: -13.06912899017334
    6. 'elif' → logprob: -13.69412899017334
    7. ' y' → logprob: -14.31912899017334
    8. '               ' → logprob: -14.31912899017334
    9. '	       ' → logprob: -14.31912899017334
    10. '          ' → logprob: -14.94412899017334

Token 392: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.18189142644405365
    2. '           ' → logprob: -2.181891441345215
    3. ' else' → logprob: -2.931891441345215
    4. '       ' → logprob: -8.681891441345215
    5. 'elif' → logprob: -11.431891441345215
    6. '          ' → logprob: -14.056891441345215
    7. '   ' → logprob: -14.181891441345215
    8. '	else' → logprob: -14.306891441345215
    9. '         ' → logprob: -14.931891441345215
    10. ' elif' → logprob: -15.306891441345215

Token 393: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15520362555980682
    2. ':' → logprob: -2.0302035808563232
    3. '               ' → logprob: -5.030203819274902
    4. '           ' → logprob: -5.155203819274902
    5. 'y' → logprob: -10.655203819274902
    6. ':
' → logprob: -10.655203819274902
    7. '):
' → logprob: -10.905203819274902
    8. '   ' → logprob: -11.030203819274902
    9. '                   ' → logprob: -11.405203819274902
    10. '```' → logprob: -11.655203819274902

Token 394: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8498485684394836
    2. ' y' → logprob: -1.3498485088348389
    3. 'y' → logprob: -1.4748485088348389
    4. '               ' → logprob: -2.474848508834839
    5. '   ' → logprob: -8.974848747253418
    6. ' ' → logprob: -9.349848747253418
    7. '	y' → logprob: -11.724848747253418
    8. '	       ' → logprob: -12.224848747253418
    9. '       ' → logprob: -12.224848747253418
    10. ' ' → logprob: -12.349848747253418

Token 395: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.003224890911951661
    2. ' y' → logprob: -5.753224849700928
    3. '               ' → logprob: -10.128225326538086
    4. '           ' → logprob: -12.378225326538086
    5. '	y' → logprob: -12.878225326538086
    6. '                   ' → logprob: -15.503225326538086
    7. '   ' → logprob: -15.628225326538086
    8. ' ' → logprob: -18.503225326538086
    9. '       ' → logprob: -18.753225326538086
    10. ''y' → logprob: -19.003225326538086

Token 396: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0025342830922454596
    2. ' -=' → logprob: -6.50253438949585
    3. '-' → logprob: -6.87753438949585
    4. '=' → logprob: -14.502533912658691
    5. '+=' → logprob: -15.502533912658691
    6. '   ' → logprob: -16.252534866333008
    7. ' -' → logprob: -17.377534866333008
    8. '```' → logprob: -18.002534866333008
    9. '           ' → logprob: -18.252534866333008
    10. ' ' → logprob: -18.877534866333008

Token 397: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. ' ' → logprob: -18.000553131103516
    4. '<|end|>' → logprob: -18.375553131103516
    5. '```' → logprob: -18.500553131103516
    6. '   ' → logprob: -19.375553131103516
    7. '１' → logprob: -19.625553131103516
    8. '	' → logprob: -19.625553131103516
    9. '۱' → logprob: -19.875553131103516
    10. '=' → logprob: -20.813053131103516

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -21.625
    4. '   ' → logprob: -22.0
    5. '<|end|>' → logprob: -22.125
    6. '۱' → logprob: -22.875
    7. '１' → logprob: -23.875
    8. '0' → logprob: -23.9375
    9. '  ' → logprob: -24.25
    10. ' ' → logprob: -24.3125

Token 399: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027293406426906586
    2. '
' → logprob: -3.6522934436798096
    3. '<|end|>' → logprob: -8.02729320526123
    4. '        
' → logprob: -8.27729320526123
    5. 'return' → logprob: -9.02729320526123
    6. ' return' → logprob: -9.27729320526123
    7. '
' → logprob: -9.52729320526123
    8. ',' → logprob: -10.40229320526123
    9. '        ' → logprob: -11.15229320526123
    10. '

' → logprob: -11.27729320526123

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031762905418872833
    2. 'return' → logprob: -6.753176212310791
    3. ' return' → logprob: -7.003176212310791
    4. '
' → logprob: -7.128176212310791
    5. 'self' → logprob: -9.00317668914795
    6. '        
' → logprob: -9.75317668914795
    7. '<|end|>' → logprob: -10.00317668914795
    8. ' self' → logprob: -10.37817668914795
    9. '```' → logprob: -11.62817668914795
    10. '	return' → logprob: -12.00317668914795

Token 401: ' diff' (ID: 8868)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39656391739845276
    2. 'self' → logprob: -1.1465638875961304
    3. ' self' → logprob: -4.77156400680542
    4. 'return' → logprob: -6.77156400680542
    5. ' return' → logprob: -11.521563529968262
    6. '   ' → logprob: -11.521563529968262
    7. '        
' → logprob: -12.396563529968262
    8. ' ' → logprob: -12.896563529968262
    9. '
' → logprob: -13.271563529968262
    10. '	self' → logprob: -13.521563529968262

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004745772108435631
    2. '=' → logprob: -5.379745960235596
    3. '_' → logprob: -9.879745483398438
    4. 's' → logprob: -10.129745483398438
    5. 'er' → logprob: -11.879745483398438
    6. ':' → logprob: -12.254745483398438
    7. ',' → logprob: -12.504745483398438
    8. '_max' → logprob: -12.629745483398438
    9. '   ' → logprob: -12.879745483398438
    10. ' ' → logprob: -13.504745483398438

Token 403: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.11941761523485184
    2. ' z' → logprob: -2.244417667388916
    3. 'abs' → logprob: -5.244417667388916
    4. ' abs' → logprob: -7.744417667388916
    5. '       ' → logprob: -7.869417667388916
    6. '   ' → logprob: -8.619417190551758
    7. ' ' → logprob: -9.869417190551758
    8. 'self' → logprob: -9.994417190551758
    9. '        ' → logprob: -10.369417190551758
    10. '    ' → logprob: -10.744417190551758

Token 404: '_pow' (ID: 160965)
  Prédit: '_pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.0019938242621719837
    2. '**' → logprob: -6.251993656158447
    3. 'pow' → logprob: -10.001994132995605
    4. ' -' → logprob: -11.626994132995605
    5. ' **' → logprob: -12.626994132995605
    6. '.pow' → logprob: -13.251994132995605
    7. '_power' → logprob: -13.751994132995605
    8. ' ' → logprob: -13.751994132995605
    9. '***' → logprob: -14.251994132995605
    10. '-' → logprob: -14.501994132995605

Token 405: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20151790976524353
    2. ' -' → logprob: -1.701517939567566
    3. '-max' → logprob: -9.201518058776855
    4. ' max' → logprob: -13.326518058776855
    5. 'max' → logprob: -13.826518058776855
    6. '   ' → logprob: -14.951518058776855
    7. ' ' → logprob: -15.076518058776855
    8. '-
' → logprob: -15.701518058776855
    9. '
' → logprob: -16.07651710510254
    10. '-d' → logprob: -16.95151710510254

Token 406: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02324547804892063
    2. ' max' → logprob: -3.7732455730438232
    3. '	max' → logprob: -19.523244857788086
    4. '(max' → logprob: -19.648244857788086
    5. ' ' → logprob: -20.148244857788086
    6. '[max' → logprob: -20.398244857788086
    7. '   ' → logprob: -20.648244857788086
    8. '
' → logprob: -21.398244857788086
    9. '_max' → logprob: -21.898244857788086
    10. '=max' → logprob: -22.023244857788086

Token 407: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00020354038861114532
    2. 'sum' → logprob: -8.500203132629395
    3. ' sum' → logprob: -18.62520408630371
    4. 'Sum' → logprob: -18.62520408630371
    5. 's' → logprob: -18.75020408630371
    6. '_SUM' → logprob: -18.87520408630371
    7. '_s' → logprob: -20.37520408630371
    8. '.sum' → logprob: -20.37520408630371
    9. '_' → logprob: -20.37520408630371
    10. 'psum' → logprob: -20.75020408630371

Token 408: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6962847709655762
    2. '       ' → logprob: -0.6962847709655762
    3. 'return' → logprob: -6.321284770965576
    4. '<|end|>' → logprob: -7.696284770965576
    5. '
' → logprob: -8.196285247802734
    6. 'self' → logprob: -8.571285247802734
    7. ' return' → logprob: -8.571285247802734
    8. '        
' → logprob: -10.321285247802734
    9. ',' → logprob: -10.446285247802734
    10. ')
' → logprob: -10.696285247802734

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11530706286430359
    2. 'self' → logprob: -2.365307092666626
    3. 'return' → logprob: -4.365306854248047
    4. ' self' → logprob: -6.240306854248047
    5. ' return' → logprob: -8.365306854248047
    6. '
' → logprob: -9.990306854248047
    7. 'if' → logprob: -10.365306854248047
    8. ' if' → logprob: -11.865306854248047
    9. '   ' → logprob: -12.615306854248047
    10. '        
' → logprob: -13.490306854248047

Token 410: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004416467156261206
    2. '       ' → logprob: -5.504416465759277
    3. 'return' → logprob: -8.379416465759277
    4. ' self' → logprob: -9.379416465759277
    5. 'if' → logprob: -10.754416465759277
    6. 'result' → logprob: -13.879416465759277
    7. '   ' → logprob: -14.379416465759277
    8. '
' → logprob: -14.629416465759277
    9. '	self' → logprob: -15.504416465759277
    10. '        
' → logprob: -16.754417419433594

Token 411: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.939851037808694e-05
    2. '.' → logprob: -10.750029563903809
    3. '       ' → logprob: -13.250029563903809
    4. ')._' → logprob: -13.250029563903809
    5. ']._' → logprob: -13.375029563903809
    6. '   ' → logprob: -14.125029563903809
    7. ' .' → logprob: -14.500029563903809
    8. '->_' → logprob: -15.375029563903809
    9. '_' → logprob: -15.625029563903809
    10. '.__' → logprob: -15.750029563903809

Token 412: 'cache' (ID: 18949)
  Prédit: 'cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: 0.0
    2. ' cache' → logprob: -18.25
    3. '_cache' → logprob: -19.125
    4. '	cache' → logprob: -20.125
    5. '.cache' → logprob: -20.25
    6. 'c' → logprob: -20.5
    7. 'cached' → logprob: -22.625
    8. 'cash' → logprob: -23.0
    9. '(cache' → logprob: -23.125
    10. 'Cache' → logprob: -23.375

Token 413: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.500003814697266
    3. ' [' → logprob: -17.750003814697266
    4. 'z' → logprob: -19.625003814697266
    5. '\[' → logprob: -19.750003814697266
    6. '[...]' → logprob: -19.875003814697266
    7. '=z' → logprob: -20.125003814697266
    8. '```' → logprob: -20.250003814697266
    9. '[
' → logprob: -20.625003814697266
    10. '	z' → logprob: -21.000003814697266

Token 414: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.512236498361744e-07
    2. ']=' → logprob: -15.375000953674316
    3. ' ]' → logprob: -15.375000953674316
    4. '=' → logprob: -21.25
    5. ']
' → logprob: -21.875
    6. '']' → logprob: -22.5
    7. '"]' → logprob: -22.875
    8. ']

' → logprob: -22.875
    9. '}' → logprob: -23.0
    10. ' =' → logprob: -23.5

Token 415: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. ']' → logprob: -18.77975082397461
    4. '=}' → logprob: -19.27975082397461
    5. '＝' → logprob: -19.40475082397461
    6. '=

' → logprob: -19.77975082397461
    7. ']=' → logprob: -19.90475082397461
    8. '=
' → logprob: -20.77975082397461
    9. ' ' → logprob: -20.77975082397461
    10. ',' → logprob: -20.90475082397461

Token 416: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.001326433615759015
    2. ' diff' → logprob: -6.626326560974121
    3. '(diff' → logprob: -15.251326560974121
    4. '	diff' → logprob: -15.501326560974121
    5. 'difference' → logprob: -17.001325607299805
    6. 'dif' → logprob: -17.626325607299805
    7. '   ' → logprob: -18.001325607299805
    8. 'int' → logprob: -18.376325607299805
    9. 'd' → logprob: -18.876325607299805
    10. '0' → logprob: -19.251325607299805

Token 417: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0054195658303797245
    2. 'return' → logprob: -5.255419731140137
    3. ' return' → logprob: -8.880419731140137
    4. '
' → logprob: -10.380419731140137
    5. '   ' → logprob: -12.130419731140137
    6. '	return' → logprob: -12.505419731140137
    7. '	' → logprob: -12.505419731140137
    8. '        
' → logprob: -14.380419731140137
    9. '<|end|>' → logprob: -14.630419731140137
    10. ':return' → logprob: -15.005419731140137

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01170253474265337
    2. 'return' → logprob: -4.636702537536621
    3. '
' → logprob: -7.136702537536621
    4. '	' → logprob: -7.511702537536621
    5. ' return' → logprob: -8.011702537536621
    6. '	return' → logprob: -8.386702537536621
    7. '        
' → logprob: -11.386702537536621
    8. '<|end|>' → logprob: -12.011702537536621
    9. '   ' → logprob: -12.261702537536621
    10. '{return' → logprob: -12.636702537536621

Token 419: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47528648376464844
    2. '       ' → logprob: -0.9752864837646484
    3. ' return' → logprob: -6.725286483764648
    4. '	return' → logprob: -12.225286483764648
    5. '   ' → logprob: -13.475286483764648
    6. '	' → logprob: -14.350286483764648
    7. ':return' → logprob: -14.475286483764648
    8. '
' → logprob: -14.725286483764648
    9. '{return' → logprob: -15.475286483764648
    10. '```' → logprob: -15.975286483764648

Token 420: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.061967913061380386
    2. ' diff' → logprob: -2.8119678497314453
    3. '	diff' → logprob: -15.561967849731445
    4. '   ' → logprob: -17.061967849731445
    5. 'dif' → logprob: -18.936967849731445
    6. '(diff' → logprob: -19.061967849731445
    7. 'difference' → logprob: -19.686967849731445
    8. 'd' → logprob: -20.061967849731445
    9. 'self' → logprob: -20.186967849731445
    10. '       ' → logprob: -20.186967849731445

Token 421: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15325437486171722
    2. '```' → logprob: -2.528254270553589
    3. '#' → logprob: -2.903254270553589
    4. '<|end|>' → logprob: -5.278254508972168
    5. 'if' → logprob: -6.528254508972168
    6. '[' → logprob: -8.528254508972168
    7. 'class' → logprob: -8.778254508972168
    8. 'reader' → logprob: -9.778254508972168
    9. 'for' → logprob: -9.778254508972168
    10. 'n' → logprob: -9.778254508972168

Token 423: ' Output' (ID: 18315)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.3019726276397705
    2. 'Solution' → logprob: -1.6769726276397705
    3. 'Main' → logprob: -2.1769726276397705
    4. 'F' → logprob: -2.3019726276397705
    5. 'Solver' → logprob: -2.9269726276397705
    6. ' Input' → logprob: -3.1769726276397705
    7. 'Sum' → logprob: -3.1769726276397705
    8. 'Verifier' → logprob: -3.9269726276397705
    9. ' Solution' → logprob: -4.176972389221191
    10. 'Runner' → logprob: -4.426972389221191

Token 424: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.00019257364328950644
    2. 'Handler' → logprob: -9.000192642211914
    3. 'Printer' → logprob: -10.500192642211914
    4. 'Reader' → logprob: -11.125192642211914
    5. 'Generator' → logprob: -11.875192642211914
    6. 'Builder' → logprob: -12.000192642211914
    7. '_writer' → logprob: -12.875192642211914
    8. 'Formatter' → logprob: -13.000192642211914
    9. 'Streamer' → logprob: -13.375192642211914
    10. 'Renderer' → logprob: -13.375192642211914

Token 425: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003956343978643417
    2. ':
' → logprob: -5.628956317901611
    3. '(Output' → logprob: -8.50395679473877
    4. '):' → logprob: -9.62895679473877
    5. '(' → logprob: -9.75395679473877
    6. '(Input' → logprob: -12.00395679473877
    7. '():' → logprob: -12.37895679473877
    8. ':

' → logprob: -12.50395679473877
    9. '(Abstract' → logprob: -12.62895679473877
    10. '<|end|>' → logprob: -12.62895679473877

Token 426: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.00019245444855187088
    2. ')' → logprob: -9.375192642211914
    3. '):' → logprob: -9.375192642211914
    4. '):
' → logprob: -11.375192642211914
    5. ' ABC' → logprob: -12.000192642211914
    6. 'Output' → logprob: -13.375192642211914
    7. 'AB' → logprob: -14.125192642211914
    8. 'Input' → logprob: -14.375192642211914
    9. 'Abstract' → logprob: -14.500192642211914
    10. 'object' → logprob: -14.750192642211914

Token 427: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001083778915926814
    2. ':' → logprob: -7.251083850860596
    3. '):
' → logprob: -8.001083374023438
    4. ')' → logprob: -10.376083374023438
    5. '(' → logprob: -12.251083374023438
    6. '():' → logprob: -14.001083374023438
    7. '):

' → logprob: -14.751083374023438
    8. ',' → logprob: -15.251083374023438
    9. '```' → logprob: -15.251083374023438
    10. '):
' → logprob: -15.376083374023438

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004342291038483381
    2. ':' → logprob: -6.754342079162598
    3. '@' → logprob: -6.879342079162598
    4. '):' → logprob: -7.129342079162598
    5. '(' → logprob: -7.754342079162598
    6. ')' → logprob: -8.129342079162598
    7. '):
' → logprob: -8.379342079162598
    8. '(Abstract' → logprob: -8.879342079162598
    9. 'def' → logprob: -9.504342079162598
    10. 'ABC' → logprob: -10.129342079162598

Token 429: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0031901898328214884
    2. '   ' → logprob: -5.753190040588379
    3. ' @' → logprob: -11.628190040588379
    4. 'def' → logprob: -12.753190040588379
    5. 'from' → logprob: -14.628190040588379
    6. 'abstract' → logprob: -16.003190994262695
    7. 'class' → logprob: -16.878190994262695
    8. '@property' → logprob: -17.628190994262695
    9. '  ' → logprob: -18.378190994262695
    10. '...' → logprob: -18.878190994262695

Token 430: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -5.512236498361744e-07
    2. 'abc' → logprob: -15.125000953674316
    3. 'staticmethod' → logprob: -16.125
    4. ' abstract' → logprob: -16.5
    5. 'ab' → logprob: -19.0
    6. 'property' → logprob: -19.625
    7. 'abs' → logprob: -20.125
    8. 'classmethod' → logprob: -20.125
    9. '.abstract' → logprob: -21.125
    10. '```' → logprob: -22.375

Token 431: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.002614659257233143
    2. '_method' → logprob: -6.002614498138428
    3. 'def' → logprob: -9.127614974975586
    4. 'classmethod' → logprob: -10.627614974975586
    5. 'staticmethod' → logprob: -13.502614974975586
    6. '   ' → logprob: -13.752614974975586
    7. '	method' → logprob: -13.877614974975586
    8. ' method' → logprob: -14.002614974975586
    9. '.method' → logprob: -14.252614974975586
    10. 'ethod' → logprob: -15.502614974975586

Token 432: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05797266587615013
    2. '   ' → logprob: -3.0579726696014404
    3. '
' → logprob: -4.682972431182861
    4. ' def' → logprob: -10.18297290802002
    5. '    
' → logprob: -10.55797290802002
    6. '	def' → logprob: -11.80797290802002
    7. 'method' → logprob: -12.05797290802002
    8. '  ' → logprob: -12.18297290802002
    9. '```' → logprob: -12.80797290802002
    10. 'classmethod' → logprob: -13.80797290802002

Token 433: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10693538188934326
    2. '   ' → logprob: -2.606935501098633
    3. 'method' → logprob: -3.606935501098633
    4. 'classmethod' → logprob: -7.856935501098633
    5. '
' → logprob: -10.231935501098633
    6. 'staticmethod' → logprob: -10.356935501098633
    7. 'class' → logprob: -10.856935501098633
    8. '	def' → logprob: -11.231935501098633
    9. '    
' → logprob: -11.481935501098633
    10. ' def' → logprob: -12.231935501098633

Token 434: ' def' (ID: 1056)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.12732303142547607
    2. 'def' (adapté à ' def') → logprob: -2.2523231506347656
    3. 'abstract' → logprob: -4.627323150634766
    4. 'classmethod' → logprob: -6.377323150634766
    5. 'staticmethod' → logprob: -6.627323150634766
    6. 'property' → logprob: -6.752323150634766
    7. '
' → logprob: -8.502323150634766
    8. '   ' → logprob: -8.627323150634766
    9. '  ' → logprob: -11.127323150634766
    10. ' ' → logprob: -12.627323150634766

Token 435: ' write' (ID: 5067)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.25202062726020813
    2. ' write' → logprob: -1.5020205974578857
    3. 'print' → logprob: -9.502020835876465
    4. ' writ' → logprob: -12.627020835876465
    5. ' print' → logprob: -12.627020835876465
    6. 'w' → logprob: -12.752020835876465
    7. 'output' → logprob: -13.502020835876465
    8. '	write' → logprob: -13.627020835876465
    9. '.write' → logprob: -13.627020835876465
    10. ' output' → logprob: -13.627020835876465

Token 436: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011643990874290466
    2. '_next' → logprob: -4.511643886566162
    3. '(' → logprob: -7.511643886566162
    4. 'self' → logprob: -10.51164436340332
    5. ' (' → logprob: -11.88664436340332
    6. 's' → logprob: -12.88664436340332
    7. 'Next' → logprob: -13.01164436340332
    8. '   ' → logprob: -13.63664436340332
    9. '(next' → logprob: -13.76164436340332
    10. 'next' → logprob: -13.88664436340332

Token 437: ',' (ID: 11)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.49233266711235046
    2. '(self' → logprob: -1.6173326969146729
    3. ')' → logprob: -2.117332696914673
    4. 'self' → logprob: -3.492332696914673
    5. ')(' → logprob: -3.992332696914673
    6. '):' → logprob: -4.867332458496094
    7. ')_' → logprob: -5.242332458496094
    8. ',' → logprob: -5.867332458496094
    9. '   ' → logprob: -6.242332458496094
    10. '_' → logprob: -7.117332458496094

Token 438: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0250394344329834
    2. 'self' → logprob: -1.4000394344329834
    3. 'value' → logprob: -2.0250394344329834
    4. 'output' → logprob: -2.0250394344329834
    5. ' result' → logprob: -3.4000394344329834
    6. ' value' → logprob: -3.9000394344329834
    7. 'diff' → logprob: -3.9000394344329834
    8. ' self' → logprob: -4.2750396728515625
    9. ' output' → logprob: -4.7750396728515625
    10. 'message' → logprob: -4.9000396728515625

Token 439: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02292618900537491
    2. ')' → logprob: -4.272926330566406
    3. 'self' → logprob: -5.397926330566406
    4. '):' → logprob: -5.897926330566406
    5. '   ' → logprob: -6.772926330566406
    6. '(self' → logprob: -9.022926330566406
    7. '       ' → logprob: -9.272926330566406
    8. ' self' → logprob: -10.647926330566406
    9. ',' → logprob: -10.897926330566406
    10. '```' → logprob: -11.647926330566406

Token 440: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0049642897211015224
    2. ' int' → logprob: -5.379964351654053
    3. ')' → logprob: -8.129963874816895
    4. 'Optional' → logprob: -10.129963874816895
    5. 'str' → logprob: -11.879963874816895
    6. ' Optional' → logprob: -13.504963874816895
    7. ' )' → logprob: -15.504963874816895
    8. ' str' → logprob: -15.754963874816895
    9. '(int' → logprob: -15.879963874816895
    10. '[int' → logprob: -15.879963874816895

Token 441: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.623244553338736e-05
    2. '   ' → logprob: -9.875065803527832
    3. '):' → logprob: -11.375065803527832
    4. ' )' → logprob: -13.625065803527832
    5. '):
' → logprob: -13.750065803527832
    6. ')->' → logprob: -14.125065803527832
    7. '       ' → logprob: -15.625065803527832
    8. ' ' → logprob: -16.87506675720215
    9. '  ' → logprob: -16.87506675720215
    10. ':' → logprob: -17.50006675720215

Token 442: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4022574722766876
    2. '       ' → logprob: -2.5272574424743652
    3. '   ' → logprob: -2.6522574424743652
    4. ')' → logprob: -2.7772574424743652
    5. '):' → logprob: -2.7772574424743652
    6. ':
' → logprob: -3.9022574424743652
    7. '(self' → logprob: -4.277257442474365
    8. '):
' → logprob: -4.902257442474365
    9. 'self' → logprob: -5.902257442474365
    10. ')->' → logprob: -6.027257442474365

Token 443: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018150413408875465
    2. ' None' → logprob: -4.018150329589844
    3. '   ' → logprob: -14.518150329589844
    4. 'str' → logprob: -17.143150329589844
    5. ' ' → logprob: -18.018150329589844
    6. '  ' → logprob: -18.518150329589844
    7. 'int' → logprob: -18.768150329589844
    8. '(None' → logprob: -18.768150329589844
    9. 'none' → logprob: -19.893150329589844
    10. '_None' → logprob: -19.893150329589844

Token 444: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20033100247383118
    2. ':
' → logprob: -2.700330972671509
    3. '):' → logprob: -2.950330972671509
    4. '       ' → logprob: -3.700330972671509
    5. '   ' → logprob: -4.325331211090088
    6. '):
' → logprob: -4.450331211090088
    7. '<|end|>' → logprob: -4.825331211090088
    8. '(self' → logprob: -6.700331211090088
    9. ')' → logprob: -7.450331211090088
    10. '():
' → logprob: -7.575331211090088

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5804718136787415
    2. '   ' → logprob: -0.8304718136787415
    3. 'pass' → logprob: -6.205471992492676
    4. ' pass' → logprob: -6.330471992492676
    5. '<|end|>' → logprob: -7.830471992492676
    6. '
' → logprob: -8.830471992492676
    7. '    
' → logprob: -9.080471992492676
    8. '```' → logprob: -10.705471992492676
    9. '        
' → logprob: -11.455471992492676
    10. '	pass' → logprob: -11.580471992492676

Token 446: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25442883372306824
    2. 'pass' (adapté à ' pass') → logprob: -1.5044288635253906
    3. ' pass' → logprob: -6.004428863525391
    4. '...' → logprob: -11.12942886352539
    5. '   ' → logprob: -11.50442886352539
    6. '	pass' → logprob: -12.87942886352539
    7. '```' → logprob: -14.25442886352539
    8. '      ' → logprob: -14.87942886352539
    9. '     ' → logprob: -16.12942886352539
    10. 'raise' → logprob: -16.62942886352539

Token 447: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011466396041214466
    2. '
' → logprob: -4.5114665031433105
    3. '<|end|>' → logprob: -8.386466026306152
    4. '

' → logprob: -8.636466026306152
    5. ' class' → logprob: -12.261466026306152
    6. '<class' → logprob: -12.761466026306152
    7. '```' → logprob: -14.136466026306152
    8. '


' → logprob: -14.136466026306152
    9. 'newline' → logprob: -14.136466026306152
    10. '    
' → logprob: -14.386466026306152

Token 448: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.796184723294573e-06
    2. '```' → logprob: -12.625005722045898
    3. 'import' → logprob: -13.875005722045898
    4. ' class' → logprob: -14.500005722045898
    5. '
' → logprob: -14.500005722045898
    6. '  
' → logprob: -15.625005722045898
    7. 'def' → logprob: -16.5000057220459
    8. 'from' → logprob: -17.0000057220459
    9. '<class' → logprob: -17.0000057220459
    10. '"class' → logprob: -17.5000057220459

Token 449: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.03817758709192276
    2. 'Console' → logprob: -3.288177490234375
    3. ' Std' → logprob: -9.288177490234375
    4. 'Print' → logprob: -10.538177490234375
    5. 'Simple' → logprob: -11.663177490234375
    6. ' Console' → logprob: -12.538177490234375
    7. 'Standard' → logprob: -12.538177490234375
    8. 'Printer' → logprob: -14.413177490234375
    9. 'Plain' → logprob: -14.663177490234375
    10. 'Terminal' → logprob: -16.538177490234375

Token 450: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -3.5597102396423e-05
    2. 'Input' → logprob: -10.250035285949707
    3. 'output' → logprob: -16.250036239624023
    4. 'Print' → logprob: -17.000036239624023
    5. 'Out' → logprob: -17.125036239624023
    6. 'O' → logprob: -17.875036239624023
    7. ' Output' → logprob: -19.375036239624023
    8. '```' → logprob: -19.375036239624023
    9. '_output' → logprob: -19.875036239624023
    10. 'Put' → logprob: -20.250036239624023

Token 451: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -1.747814349073451e-05
    2. 'Output' → logprob: -11.000017166137695
    3. 'writer' → logprob: -14.375017166137695
    4. 'Reader' → logprob: -15.875017166137695
    5. 'Write' → logprob: -16.875017166137695
    6. '_writer' → logprob: -17.125017166137695
    7. 'Printer' → logprob: -20.875017166137695
    8. '.Writer' → logprob: -21.000017166137695
    9. ' writer' → logprob: -21.625017166137695
    10. '```' → logprob: -21.750017166137695

Token 452: '(Output' (ID: 132866)
  Prédit: '(Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Output' → logprob: -0.0004800048773176968
    2. '(' → logprob: -8.000479698181152
    3. ':' → logprob: -9.000479698181152
    4. '(Input' → logprob: -11.000479698181152
    5. '(Standard' → logprob: -13.000479698181152
    6. '(Abstract' → logprob: -13.500479698181152
    7. ':
' → logprob: -15.625479698181152
    8. ' (' → logprob: -15.750479698181152
    9. '(output' → logprob: -16.25048065185547
    10. '(Open' → logprob: -16.37548065185547

Token 453: 'Writer' (ID: 9561)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.1602867692708969
    2. 'Writer' → logprob: -1.910286784172058
    3. 'Input' → logprob: -10.285286903381348
    4. 'writer' → logprob: -10.785286903381348
    5. 'Write' → logprob: -12.410286903381348
    6. 'Reader' → logprob: -13.535286903381348
    7. '   ' → logprob: -14.785286903381348
    8. 'output' → logprob: -15.035286903381348
    9. '```' → logprob: -15.035286903381348
    10. 'Method' → logprob: -15.160286903381348

Token 454: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2528126835823059
    2. '):' → logprob: -1.5028126239776611
    3. '   ' → logprob: -7.12781286239624
    4. '):
' → logprob: -9.627812385559082
    5. ':' → logprob: -11.502812385559082
    6. ':
' → logprob: -13.377812385559082
    7. '):

' → logprob: -13.502812385559082
    8. ')' → logprob: -15.002812385559082
    9. '```' → logprob: -15.127812385559082
    10. '  ' → logprob: -15.377812385559082

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.384836888173595e-05
    2. ' def' → logprob: -10.3750638961792
    3. ':' → logprob: -10.8750638961792
    4. ':
' → logprob: -11.6250638961792
    5. 'def' → logprob: -12.8750638961792
    6. '):
' → logprob: -13.2500638961792
    7. '```' → logprob: -15.6250638961792
    8. '    
' → logprob: -16.875062942504883
    9. '   ' → logprob: -16.875062942504883
    10. ':def' → logprob: -17.250062942504883

Token 456: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04911423847079277
    2. ' def' → logprob: -3.049114227294922
    3. '   ' → logprob: -7.549114227294922
    4. '	def' → logprob: -16.299114227294922
    5. ' ' → logprob: -19.299114227294922
    6. '  ' → logprob: -20.174114227294922
    7. '```' → logprob: -20.174114227294922
    8. ':def' → logprob: -21.049114227294922
    9. '
' → logprob: -21.299114227294922
    10. 'class' → logprob: -21.799114227294922

Token 457: ' write' (ID: 5067)
  Prédit: ' write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' write' → logprob: -0.16318204998970032
    2. 'write' → logprob: -1.913182020187378
    3. 'def' → logprob: -6.413182258605957
    4. ' def' → logprob: -6.663182258605957
    5. '.write' → logprob: -10.663182258605957
    6. 'init' → logprob: -12.413182258605957
    7. '   ' → logprob: -13.038182258605957
    8. ' writ' → logprob: -13.663182258605957
    9. '	write' → logprob: -13.788182258605957
    10. '_write' → logprob: -13.913182258605957

Token 458: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.000000953674316
    3. ' (' → logprob: -15.375000953674316
    4. 'self' → logprob: -17.875
    5. '   ' → logprob: -19.625
    6. 'def' → logprob: -19.75
    7. ' self' → logprob: -20.875
    8. '       ' → logprob: -21.375
    9. '```' → logprob: -21.75
    10. '	self' → logprob: -22.25

Token 459: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3634490370750427
    2. ',' → logprob: -1.3634490966796875
    3. 'self' → logprob: -3.3634490966796875
    4. '   ' → logprob: -5.2384490966796875
    5. '       ' → logprob: -5.6134490966796875
    6. ')' → logprob: -5.9884490966796875
    7. ' (' → logprob: -6.6134490966796875
    8. ')(' → logprob: -6.9884490966796875
    9. ' self' → logprob: -7.8634490966796875
    10. ',self' → logprob: -9.613449096679688

Token 460: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.8162639141082764
    2. 'result' → logprob: -0.9412639141082764
    3. 'self' → logprob: -2.0662639141082764
    4. ' self' → logprob: -3.1912639141082764
    5. '   ' → logprob: -12.691264152526855
    6. ' ' → logprob: -13.316264152526855
    7. '(self' → logprob: -14.691264152526855
    8. ')' → logprob: -14.691264152526855
    9. '	result' → logprob: -14.941264152526855
    10. 'res' → logprob: -15.441264152526855

Token 461: ':' (ID: 25)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6629806756973267
    2. ',' → logprob: -1.6629806756973267
    3. ' self' → logprob: -2.037980556488037
    4. '   ' → logprob: -2.787980556488037
    5. '(self' → logprob: -2.787980556488037
    6. ')' → logprob: -3.287980556488037
    7. '       ' → logprob: -5.912980556488037
    8. ' (' → logprob: -7.162980556488037
    9. ':' → logprob: -8.162981033325195
    10. '```' → logprob: -8.412981033325195

Token 462: ' int' (ID: 677)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.40209537744522095
    2. ' self' → logprob: -1.7770953178405762
    3. 'int' → logprob: -2.277095317840576
    4. ' int' → logprob: -3.777095317840576
    5. ' result' → logprob: -4.027095317840576
    6. 'result' → logprob: -4.527095317840576
    7. ')' → logprob: -4.902095317840576
    8. ' ' → logprob: -8.902095794677734
    9. '   ' → logprob: -9.027095794677734
    10. '1' → logprob: -9.402095794677734

Token 463: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06563841551542282
    2. '   ' → logprob: -3.690638303756714
    3. ',' → logprob: -3.940638303756714
    4. '):' → logprob: -4.565638542175293
    5. ':' → logprob: -5.440638542175293
    6. '       ' → logprob: -6.315638542175293
    7. 'self' → logprob: -7.315638542175293
    8. ' )' → logprob: -7.315638542175293
    9. '):
' → logprob: -7.565638542175293
    10. ' self' → logprob: -8.565638542175293

Token 464: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.995894730091095
    2. '       ' → logprob: -1.6208946704864502
    3. '):
' → logprob: -1.9958946704864502
    4. ':' → logprob: -2.12089467048645
    5. '(self' → logprob: -2.62089467048645
    6. ':
' → logprob: -2.99589467048645
    7. ')' → logprob: -3.62089467048645
    8. '):' → logprob: -4.495894908905029
    9. '    ' → logprob: -5.120894908905029
    10. 'def' → logprob: -6.120894908905029

Token 465: ' None' (ID: 4662)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04995613545179367
    2. 'None' → logprob: -3.0499560832977295
    3. ' None' → logprob: -6.799956321716309
    4. ' print' → logprob: -8.799956321716309
    5. '   ' → logprob: -9.424956321716309
    6. 'int' → logprob: -10.924956321716309
    7. ' ' → logprob: -12.674956321716309
    8. '  ' → logprob: -14.049956321716309
    9. 'str' → logprob: -14.924956321716309
    10. ')' → logprob: -15.549956321716309

Token 466: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00723235122859478
    2. ':' → logprob: -5.757232189178467
    3. ':
' → logprob: -6.007232189178467
    4. '):
' → logprob: -7.132232189178467
    5. '   ' → logprob: -8.007232666015625
    6. ',' → logprob: -8.757232666015625
    7. ')' → logprob: -9.882232666015625
    8. '```' → logprob: -9.882232666015625
    9. '):' → logprob: -10.257232666015625
    10. 'print' → logprob: -10.382232666015625

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009424308082088828
    2. 'print' → logprob: -7.250942230224609
    3. ' print' → logprob: -8.37594223022461
    4. '```' → logprob: -13.62594223022461
    5. '   ' → logprob: -14.37594223022461
    6. '           ' → logprob: -15.37594223022461
    7. '               ' → logprob: -17.12594223022461
    8. '	' → logprob: -17.75094223022461
    9. '	print' → logprob: -18.12594223022461
    10. '      ' → logprob: -18.87594223022461

Token 468: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.040425434708595276
    2. ' print' → logprob: -3.2904255390167236
    3. '       ' → logprob: -6.0404253005981445
    4. '```' → logprob: -14.540425300598145
    5. '   ' → logprob: -17.16542625427246
    6. '	print' → logprob: -18.41542625427246
    7. '           ' → logprob: -19.91542625427246
    8. '``' → logprob: -20.04042625427246
    9. ' ' → logprob: -20.54042625427246
    10. '               ' → logprob: -20.79042625427246

Token 469: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -8.41866585687967e-06
    2. '(f' → logprob: -12.625008583068848
    3. 'result' → logprob: -12.625008583068848
    4. '(' → logprob: -13.250008583068848
    5. '()' → logprob: -17.62500762939453
    6. '((' → logprob: -18.12500762939453
    7. '(res' → logprob: -19.25000762939453
    8. '(results' → logprob: -19.50000762939453
    9. '=result' → logprob: -19.62500762939453
    10. ',result' → logprob: -20.25000762939453

Token 470: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -16.125
    4. ')`' → logprob: -17.875
    5. '))' → logprob: -18.25
    6. ')}' → logprob: -19.5
    7. '()' → logprob: -20.0
    8. '   ' → logprob: -20.0
    9. '())' → logprob: -20.25
    10. '),' → logprob: -20.375

Token 471: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.7610454708337784e-05
    2. 'if' → logprob: -10.500027656555176
    3. 'reader' → logprob: -16.87502670288086
    4. 'class' → logprob: -17.75002670288086
    5. '```' → logprob: -18.75002670288086
    6. ' def' → logprob: -20.37502670288086
    7. 'from' → logprob: -21.12502670288086
    8. '    
' → logprob: -21.25002670288086
    9. 'input' → logprob: -21.75002670288086
    10. '
' → logprob: -22.00002670288086

Token 472: ' Ferm' (ID: 156422)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.8554943203926086
    2. 'Main' → logprob: -1.2304942607879639
    3. 'Solver' → logprob: -1.9804942607879639
    4. 'Application' → logprob: -2.980494260787964
    5. 'Runner' → logprob: -2.980494260787964
    6. 'Processor' → logprob: -4.105494499206543
    7. 'Program' → logprob: -5.355494499206543
    8. 'main' → logprob: -5.480494499206543
    9. 'F' → logprob: -5.605494499206543
    10. 'Problem' → logprob: -5.605494499206543

Token 473: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -6.704273118884885e-07
    2. 'At' → logprob: -15.625000953674316
    3. '(at' → logprob: -16.0
    4. ' at' → logprob: -16.625
    5. 'rat' → logprob: -16.875
    6. 'ent' → logprob: -17.25
    7. 'ats' → logprob: -17.5
    8. ''at' → logprob: -17.875
    9. 'ат' → logprob: -18.0
    10. '	at' → logprob: -18.0

Token 474: 'Last' (ID: 6949)
  Prédit: 'Last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -0.09741860628128052
    2. 'Input' → logprob: -3.2224185466766357
    3. 'Solver' → logprob: -4.472418785095215
    4. 'Sum' → logprob: -4.972418785095215
    5. 'Runner' → logprob: -4.972418785095215
    6. 'Checker' → logprob: -5.097418785095215
    7. 'Verifier' → logprob: -5.347418785095215
    8. 'Solution' → logprob: -6.097418785095215
    9. 'C' → logprob: -6.097418785095215
    10. 'Test' → logprob: -6.347418785095215

Token 475: 'The' (ID: 976)
  Prédit: 'The'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -0.0017118285177275538
    2. 'C' → logprob: -6.876711845397949
    3. ' theorem' → logprob: -7.876711845397949
    4. 'the' → logprob: -10.12671184539795
    5. 'Problem' → logprob: -10.12671184539795
    6. 'W' → logprob: -10.25171184539795
    7. 'Theory' → logprob: -10.75171184539795
    8. 'Proof' → logprob: -10.75171184539795
    9. 'Last' → logprob: -10.87671184539795
    10. '```' → logprob: -11.25171184539795

Token 476: 'orem' (ID: 21468)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -0.6977522969245911
    2. 'orem' → logprob: -0.6977522969245911
    3. 'orum' → logprob: -6.822752475738525
    4. 'or' → logprob: -7.197752475738525
    5. 'o' → logprob: -7.322752475738525
    6. 'e' → logprob: -7.447752475738525
    7. 'Problem' → logprob: -7.947752475738525
    8. 'ore' → logprob: -8.572751998901367
    9. 'the' → logprob: -8.697751998901367
    10. 'orm' → logprob: -9.072751998901367

Token 477: 'App' (ID: 2563)
  Prédit: 'Verifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Verifier' → logprob: -0.06360869854688644
    2. 'Checker' → logprob: -3.5636086463928223
    3. 'Solver' → logprob: -3.5636086463928223
    4. 'Input' → logprob: -6.813608646392822
    5. 'Tester' → logprob: -6.938608646392822
    6. 'C' → logprob: -7.688608646392822
    7. 'Runner' → logprob: -8.18860912322998
    8. 'Application' → logprob: -8.18860912322998
    9. 'Case' → logprob: -8.31360912322998
    10. 'Counter' → logprob: -8.31360912322998

Token 478: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019311357755213976
    2. ':
' → logprob: -6.251931190490723
    3. '):' → logprob: -13.876931190490723
    4. '():' → logprob: -14.501931190490723
    5. ':

' → logprob: -15.376931190490723
    6. ' :' → logprob: -15.376931190490723
    7. ':
' → logprob: -15.876931190490723
    8. ':def' → logprob: -16.001930236816406
    9. '(' → logprob: -16.126930236816406
    10. ':**' → logprob: -16.376930236816406

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006314247148111463
    2. 'def' → logprob: -7.500631332397461
    3. ' def' → logprob: -9.500631332397461
    4. '```' → logprob: -12.625631332397461
    5. '   ' → logprob: -15.875631332397461
    6. '	def' → logprob: -16.12563133239746
    7. '    
' → logprob: -17.75063133239746
    8. ')' → logprob: -17.87563133239746
    9. 'class' → logprob: -17.87563133239746
    10. ':def' → logprob: -17.87563133239746

Token 480: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00020473242329899222
    2. ' def' → logprob: -8.500205039978027
    3. '   ' → logprob: -13.750205039978027
    4. '```' → logprob: -15.875205039978027
    5. '	def' → logprob: -20.12520408630371
    6. 'class' → logprob: -20.50020408630371
    7. 'from' → logprob: -21.25020408630371
    8. '``' → logprob: -21.37520408630371
    9. ' ' → logprob: -21.62520408630371
    10. ':def' → logprob: -21.62520408630371

Token 481: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4752809405326843
    2. 'init' → logprob: -1.475281000137329
    3. ' __' → logprob: -1.975281000137329
    4. 'def' → logprob: -5.35028076171875
    5. ' def' → logprob: -5.35028076171875
    6. '_init' → logprob: -7.47528076171875
    7. ' init' → logprob: -7.60028076171875
    8. '```' → logprob: -8.35028076171875
    9. '___' → logprob: -11.10028076171875
    10. '   ' → logprob: -11.10028076171875

Token 482: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.558399319241289e-05
    2. 'def' → logprob: -10.750025749206543
    3. ' init' → logprob: -13.250025749206543
    4. '   ' → logprob: -14.000025749206543
    5. 'it' → logprob: -14.250025749206543
    6. 'class' → logprob: -14.875025749206543
    7. '```' → logprob: -15.750025749206543
    8. 'int' → logprob: -15.875025749206543
    9. 'iter' → logprob: -16.000024795532227
    10. '__' → logprob: -17.125024795532227

Token 483: '__(
' (ID: 136250)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05579487606883049
    2. '(self' → logprob: -2.9307949542999268
    3. '__' → logprob: -7.805794715881348
    4. '__(
' → logprob: -8.305794715881348
    5. '(' → logprob: -8.930794715881348
    6. ' (' → logprob: -10.180794715881348
    7. '   ' → logprob: -10.305794715881348
    8. '_(' → logprob: -11.055794715881348
    9. 'self' → logprob: -11.180794715881348
    10. '```' → logprob: -11.805794715881348

Token 484: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0016539981588721275
    2. '       ' → logprob: -6.751654148101807
    3. ' self' → logprob: -7.876654148101807
    4. '
' → logprob: -9.626653671264648
    5. '   ' → logprob: -10.376653671264648
    6. '(self' → logprob: -12.376653671264648
    7. '        
' → logprob: -13.876653671264648
    8. ',' → logprob: -14.501653671264648
    9. '           ' → logprob: -15.001653671264648
    10. '	self' → logprob: -15.626653671264648

Token 485: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.339278580620885e-06
    2. '       ' → logprob: -13.750001907348633
    3. ' self' → logprob: -14.375001907348633
    4. '
' → logprob: -14.500001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '(self' → logprob: -17.375001907348633
    7. '        
' → logprob: -18.250001907348633
    8. 'reader' → logprob: -19.125001907348633
    9. 'Self' → logprob: -19.250001907348633
    10. '           ' → logprob: -19.375001907348633

Token 486: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002356856595724821
    2. 'self' → logprob: -6.502357006072998
    3. ',
' → logprob: -7.252357006072998
    4. '       ' → logprob: -9.00235652923584
    5. ',self' → logprob: -11.12735652923584
    6. ' ,' → logprob: -13.12735652923584
    7. '   ' → logprob: -13.12735652923584
    8. ' self' → logprob: -13.87735652923584
    9. ')' → logprob: -14.12735652923584
    10. ',
' → logprob: -14.50235652923584

Token 487: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6178275346755981
    2. 'reader' → logprob: -0.9928275346755981
    3. 'input' → logprob: -2.4928274154663086
    4. '       ' → logprob: -4.992827415466309
    5. 'power' → logprob: -7.367827415466309
    6. ' reader' → logprob: -8.992827415466309
    7. '           ' → logprob: -10.367827415466309
    8. '   ' → logprob: -10.867827415466309
    9. 'read' → logprob: -10.867827415466309
    10. 'stdin' → logprob: -10.992827415466309

Token 488: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.3868931531906128
    2. 'reader' → logprob: -1.1368931531906128
    3. ' reader' → logprob: -11.261893272399902
    4. ' input' → logprob: -12.136893272399902
    5. 'stdin' → logprob: -13.636893272399902
    6. 'ver' → logprob: -14.886893272399902
    7. '   ' → logprob: -14.886893272399902
    8. '_reader' → logprob: -15.011893272399902
    9. '_input' → logprob: -15.136893272399902
    10. '	reader' → logprob: -15.261893272399902

Token 489: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -7.107425062713446e-06
    2. 'Reader' → logprob: -12.375006675720215
    3. 'reader' → logprob: -13.625006675720215
    4. '_source' → logprob: -14.000006675720215
    5. ':' → logprob: -14.625006675720215
    6. '_writer' → logprob: -16.00000762939453
    7. '   ' → logprob: -16.12500762939453
    8. '_provider' → logprob: -18.00000762939453
    9. '_handler' → logprob: -18.12500762939453
    10. '=' → logprob: -18.25000762939453

Token 490: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00878451019525528
    2. ',' → logprob: -4.758784294128418
    3. '=' → logprob: -9.383784294128418
    4. '   ' → logprob: -9.883784294128418
    5. ' :' → logprob: -11.133784294128418
    6. '=None' → logprob: -11.383784294128418
    7. '       ' → logprob: -12.508784294128418
    8. ',
' → logprob: -13.383784294128418
    9. '):' → logprob: -13.508784294128418
    10. ' ,' → logprob: -14.508784294128418

Token 491: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.00012523093027994037
    2. ' Input' → logprob: -9.00012493133545
    3. 'Std' → logprob: -13.50012493133545
    4. 'input' → logprob: -16.250125885009766
    5. 'Optional' → logprob: -16.250125885009766
    6. '   ' → logprob: -16.375125885009766
    7. '	Input' → logprob: -17.125125885009766
    8. ' ' → logprob: -17.750125885009766
    9. 'std' → logprob: -17.875125885009766
    10. 'Inp' → logprob: -18.500125885009766

Token 492: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.06196846812963486
    2. '_reader' → logprob: -2.8119685649871826
    3. '.Reader' → logprob: -15.311968803405762
    4. 'reader' → logprob: -15.561968803405762
    5. '_read' → logprob: -15.561968803405762
    6. ' Reader' → logprob: -16.061967849731445
    7. 'Writer' → logprob: -17.061967849731445
    8. '_' → logprob: -17.436967849731445
    9. '-reader' → logprob: -17.561967849731445
    10. ')' → logprob: -17.686967849731445

Token 493: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024801772087812424
    2. ',
' → logprob: -6.0024800300598145
    3. '       ' → logprob: -13.127480506896973
    4. ',
' → logprob: -13.127480506896973
    5. '   ' → logprob: -15.377480506896973
    6. ',

' → logprob: -15.627480506896973
    7. ' ,' → logprob: -15.877480506896973
    8. ',input' → logprob: -17.252479553222656
    9. ')' → logprob: -17.752479553222656
    10. ':' → logprob: -18.502479553222656

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038940344005823135
    2. 'output' → logprob: -3.2889404296875
    3. ' output' → logprob: -7.0389404296875
    4. '           ' → logprob: -11.2889404296875
    5. '   ' → logprob: -13.6639404296875
    6. 'fer' → logprob: -13.9139404296875
    7. '        ' → logprob: -13.9139404296875
    8. '               ' → logprob: -14.0389404296875
    9. '```' → logprob: -14.1639404296875
    10. 'ver' → logprob: -14.4139404296875

Token 495: ' verifier' (ID: 175562)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0025415359996259212
    2. 'ver' → logprob: -6.502541542053223
    3. ' output' → logprob: -6.877541542053223
    4. ' verifier' → logprob: -13.377541542053223
    5. 'verify' → logprob: -13.502541542053223
    6. '       ' → logprob: -13.877541542053223
    7. '   ' → logprob: -14.002541542053223
    8. 'fer' → logprob: -14.377541542053223
    9. 'result' → logprob: -14.377541542053223
    10. '           ' → logprob: -14.377541542053223

Token 496: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.313314952421933e-05
    2. '   ' → logprob: -10.375062942504883
    3. '       ' → logprob: -11.250062942504883
    4. ',' → logprob: -11.250062942504883
    5. 'F' → logprob: -12.625062942504883
    6. ' :' → logprob: -13.625062942504883
    7. ':F' → logprob: -14.750062942504883
    8. '):' → logprob: -15.375062942504883
    9. ')' → logprob: -15.750062942504883
    10. '```' → logprob: -16.250062942504883

Token 497: ' Ferm' (ID: 156422)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.12731485068798065
    2. ' Ferm' → logprob: -2.127314805984497
    3. 'C' → logprob: -8.002314567565918
    4. '   ' → logprob: -10.377314567565918
    5. ' ' → logprob: -11.752314567565918
    6. '  ' → logprob: -13.002314567565918
    7. '       ' → logprob: -13.127314567565918
    8. '    ' → logprob: -13.252314567565918
    9. '           ' → logprob: -13.627314567565918
    10. '     ' → logprob: -13.752314567565918

Token 498: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.005251899361610413
    2. 'rat' → logprob: -5.255251884460449
    3. 'mat' → logprob: -11.25525188446045
    4. 'er' → logprob: -13.38025188446045
    5. '   ' → logprob: -13.88025188446045
    6. 'At' → logprob: -15.38025188446045
    7. 'act' → logprob: -15.38025188446045
    8. 'F' → logprob: -15.38025188446045
    9. 'eat' → logprob: -15.50525188446045
    10. 'ат' → logprob: -15.63025188446045

Token 499: 'Last' (ID: 6949)
  Prédit: 'Last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -5.512236498361744e-07
    2. 'last' → logprob: -15.500000953674316
    3. '	Last' → logprob: -16.5
    4. '_last' → logprob: -16.75
    5. '_Last' → logprob: -17.375
    6. ' Last' → logprob: -17.5
    7. 'Las' → logprob: -17.875
    8. 'Late' → logprob: -18.0
    9. '   ' → logprob: -18.0
    10. '...' → logprob: -18.0

Token 500: 'The' (ID: 976)
  Prédit: 'The'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -1.676292231422849e-05
    2. 'the' → logprob: -11.750017166137695
    3. '_the' → logprob: -12.250017166137695
    4. 'Theory' → logprob: -13.125017166137695
    5. 'Ther' → logprob: -13.500017166137695
    6. ' theorem' → logprob: -14.750017166137695
    7. 'Last' → logprob: -16.250017166137695
    8. 'Theo' → logprob: -17.250017166137695
    9. ' The' → logprob: -17.250017166137695
    10. '-the' → logprob: -17.375017166137695

Token 501: 'orem' (ID: 21468)
  Prédit: 'orem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orem' → logprob: -0.19322684407234192
    2. 'The' → logprob: -1.9432268142700195
    3. 'the' → logprob: -3.8182268142700195
    4. 'orum' → logprob: -5.4432268142700195
    5. ' theorem' → logprob: -5.8182268142700195
    6. 'e' → logprob: -6.6932268142700195
    7. 'ore' → logprob: -7.0682268142700195
    8. 'he' → logprob: -7.6932268142700195
    9. 'o' → logprob: -8.06822681427002
    10. 'or' → logprob: -9.19322681427002

Token 502: 'Verifier' (ID: 91764)
  Prédit: 'Verifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Verifier' → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.875000953674316
    3. ',' → logprob: -15.375000953674316
    4. '       ' → logprob: -16.625
    5. 'Notifier' → logprob: -17.125
    6. 'ver' → logprob: -17.375
    7. ')' → logprob: -17.75
    8. 'Ver' → logprob: -18.125
    9. 'Verify' → logprob: -18.375
    10. ' verifier' → logprob: -18.625

Token 503: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4761398732662201
    2. ',
' → logprob: -0.9761399030685425
    3. '       ' → logprob: -6.351140022277832
    4. '   ' → logprob: -8.226140022277832
    5. ')' → logprob: -10.476140022277832
    6. ',
' → logprob: -10.976140022277832
    7. ',

' → logprob: -13.476140022277832
    8. '):
' → logprob: -14.851140022277832
    9. ' ,' → logprob: -15.601140022277832
    10. '      ' → logprob: -15.601140022277832

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02336287684738636
    2. 'output' → logprob: -3.773362874984741
    3. ' output' → logprob: -9.27336311340332
    4. 'input' → logprob: -10.89836311340332
    5. '   ' → logprob: -12.27336311340332
    6. '           ' → logprob: -15.52336311340332
    7. ')' → logprob: -16.27336311340332
    8. ' input' → logprob: -17.02336311340332
    9. '	output' → logprob: -17.14836311340332
    10. '      ' → logprob: -17.52336311340332

Token 505: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.0004342453321442008
    2. ' output' → logprob: -7.750434398651123
    3. '       ' → logprob: -12.750433921813965
    4. '           ' → logprob: -15.250433921813965
    5. '   ' → logprob: -15.625433921813965
    6. '	output' → logprob: -16.37543487548828
    7. 'input' → logprob: -16.62543487548828
    8. 'Output' → logprob: -17.37543487548828
    9. '_output' → logprob: -17.62543487548828
    10. '(output' → logprob: -18.12543487548828

Token 506: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -2.45848218582978e-06
    2. '_reader' → logprob: -13.37500286102295
    3. '_w' → logprob: -15.25000286102295
    4. '_write' → logprob: -15.37500286102295
    5. '   ' → logprob: -15.87500286102295
    6. 'writer' → logprob: -16.625001907348633
    7. '_output' → logprob: -17.375001907348633
    8. ')_' → logprob: -17.875001907348633
    9. 'Writer' → logprob: -18.125001907348633
    10. '_' → logprob: -18.375001907348633

Token 507: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5213274309644476e-05
    2. '):' → logprob: -11.750015258789062
    3. ')' → logprob: -12.250015258789062
    4. '   ' → logprob: -13.250015258789062
    5. ' :' → logprob: -14.500015258789062
    6. '):
' → logprob: -16.125015258789062
    7. '       ' → logprob: -16.375015258789062
    8. '=' → logprob: -17.875015258789062
    9. ' ):' → logprob: -17.875015258789062
    10. ' )' → logprob: -18.125015258789062

Token 508: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.0067156096920371056
    2. ' Output' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.881715774536133
    4. 'Optional' → logprob: -16.006715774536133
    5. ' ' → logprob: -17.506715774536133
    6. '	Output' → logprob: -17.506715774536133
    7. 'output' → logprob: -18.256715774536133
    8. '  ' → logprob: -19.006715774536133
    9. ' output' → logprob: -19.256715774536133
    10. '       ' → logprob: -20.256715774536133

Token 509: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.1602446287870407
    2. '_writer' → logprob: -1.9102445840835571
    3. 'Output' → logprob: -11.535244941711426
    4. '   ' → logprob: -12.910244941711426
    5. 'Reader' → logprob: -12.910244941711426
    6. '_w' → logprob: -13.160244941711426
    7. ')' → logprob: -13.660244941711426
    8. '       ' → logprob: -14.410244941711426
    9. '.Writer' → logprob: -14.660244941711426
    10. '_reader' → logprob: -14.910244941711426

Token 510: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05189172923564911
    2. '):
' → logprob: -3.426891803741455
    3. '):' → logprob: -4.301891803741455
    4. ')' → logprob: -5.426891803741455
    5. '
' → logprob: -9.551891326904297
    6. ',' → logprob: -10.176891326904297
    7. ',
' → logprob: -11.551891326904297
    8. '       ' → logprob: -11.676891326904297
    9. '  ' → logprob: -12.801891326904297
    10. '```' → logprob: -12.926891326904297

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8789383830153383e-05
    2. ')' → logprob: -11.125019073486328
    3. '):
' → logprob: -12.625019073486328
    4. '       ' → logprob: -15.125019073486328
    5. ' )' → logprob: -15.625019073486328
    6. '):' → logprob: -15.750019073486328
    7. '
' → logprob: -17.125019073486328
    8. '```' → logprob: -17.125019073486328
    9. ' ):
' → logprob: -17.625019073486328
    10. '  ' → logprob: -18.750019073486328

Token 512: ' ):
' (ID: 48169)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17441919445991516
    2. '):
' (adapté à ' ):
') → logprob: -1.9244191646575928
    3. ')' → logprob: -4.549419403076172
    4. '):' → logprob: -5.674419403076172
    5. '       ' → logprob: -9.674419403076172
    6. '
' → logprob: -11.674419403076172
    7. '):
' → logprob: -12.549419403076172
    8. ' ):
' → logprob: -12.674419403076172
    9. '```' → logprob: -12.924419403076172
    10. '  ' → logprob: -12.924419403076172

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5903362035751343
    2. '   ' → logprob: -0.8403362035751343
    3. 'def' → logprob: -4.340336322784424
    4. ' def' → logprob: -7.465336322784424
    5. 'self' → logprob: -7.715336322784424
    6. ' self' → logprob: -8.965335845947266
    7. ')' → logprob: -9.590335845947266
    8. '```' → logprob: -11.340335845947266
    9. '
' → logprob: -11.465335845947266
    10. ' ' → logprob: -11.965335845947266

Token 514: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.029919182881712914
    2. '       ' → logprob: -3.529919147491455
    3. ' self' → logprob: -8.779919624328613
    4. '   ' → logprob: -11.154919624328613
    5. '	self' → logprob: -14.904919624328613
    6. ' ' → logprob: -15.779919624328613
    7. '     ' → logprob: -16.904918670654297
    8. '      ' → logprob: -17.279918670654297
    9. '	' → logprob: -17.904918670654297
    10. '           ' → logprob: -18.029918670654297

Token 515: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -4.246537173457909e-06
    2. '.' → logprob: -12.875003814697266
    3. '._' → logprob: -13.625003814697266
    4. '.output' → logprob: -15.750003814697266
    5. '.inputs' → logprob: -16.500003814697266
    6. 'input' → logprob: -16.750003814697266
    7. '.INPUT' → logprob: -16.750003814697266
    8. '.Input' → logprob: -17.750003814697266
    9. ' .' → logprob: -17.750003814697266
    10. '.data' → logprob: -18.125003814697266

Token 516: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -5.676981345459353e-06
    2. '_writer' → logprob: -12.875005722045898
    3. 'reader' → logprob: -13.500005722045898
    4. '   ' → logprob: -14.375005722045898
    5. '       ' → logprob: -14.875005722045898
    6. '_read' → logprob: -15.125005722045898
    7. 'Reader' → logprob: -15.250005722045898
    8. '=' → logprob: -17.3750057220459
    9. 's' → logprob: -17.5000057220459
    10. '=_' → logprob: -17.6250057220459

Token 517: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38692420721054077
    2. ' =' → logprob: -1.1369242668151855
    3. '   ' → logprob: -10.011923789978027
    4. '       ' → logprob: -12.136923789978027
    5. '=input' → logprob: -13.886923789978027
    6. '_reader' → logprob: -14.636923789978027
    7. ',' → logprob: -14.761923789978027
    8. ' ' → logprob: -14.886923789978027
    9. '    ' → logprob: -15.136923789978027
    10. ':' → logprob: -15.761923789978027

Token 518: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011703446507453918
    2. ' input' → logprob: -6.7511701583862305
    3. '       ' → logprob: -16.501171112060547
    4. '_input' → logprob: -19.251171112060547
    5. '	input' → logprob: -19.376171112060547
    6. '   ' → logprob: -19.501171112060547
    7. 'output' → logprob: -19.751171112060547
    8. 'Input' → logprob: -20.001171112060547
    9. '=input' → logprob: -20.501171112060547
    10. '<input' → logprob: -20.626171112060547

Token 519: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -4.668304245569743e-05
    2. '_writer' → logprob: -10.000046730041504
    3. 'reader' → logprob: -14.125046730041504
    4. '_read' → logprob: -15.000046730041504
    5. '_' → logprob: -17.125045776367188
    6. '._' → logprob: -17.625045776367188
    7. 'Reader' → logprob: -18.875045776367188
    8. ' _' → logprob: -19.125045776367188
    9. '_re' → logprob: -19.125045776367188
    10. '-reader' → logprob: -20.000045776367188

Token 520: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024715426843613386
    2. '   ' → logprob: -9.12524700164795
    3. 'self' → logprob: -9.50024700164795
    4. '
' → logprob: -10.12524700164795
    5. '<|end|>' → logprob: -11.00024700164795
    6. ' self' → logprob: -12.62524700164795
    7. 'def' → logprob: -14.00024700164795
    8. ',' → logprob: -14.50024700164795
    9. '      ' → logprob: -14.62524700164795
    10. ' ' → logprob: -15.50024700164795

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030132034793496132
    2. 'self' → logprob: -3.5301320552825928
    3. ' self' → logprob: -7.905131816864014
    4. '   ' → logprob: -11.405132293701172
    5. '	self' → logprob: -13.780132293701172
    6. 'def' → logprob: -16.030132293701172
    7. '
' → logprob: -16.280132293701172
    8. '      ' → logprob: -16.405132293701172
    9. '           ' → logprob: -16.655132293701172
    10. '(self' → logprob: -16.905132293701172

Token 522: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.147740689106286e-05
    2. ' self' → logprob: -10.12507152557373
    3. '       ' → logprob: -10.37507152557373
    4. '   ' → logprob: -15.62507152557373
    5. '
' → logprob: -18.875070571899414
    6. '	self' → logprob: -19.125070571899414
    7. '           ' → logprob: -19.500070571899414
    8. ' ' → logprob: -19.500070571899414
    9. '     ' → logprob: -19.500070571899414
    10. '      ' → logprob: -20.250070571899414

Token 523: '.ver' (ID: 91872)
  Prédit: '.ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ver' → logprob: -0.0005834150360897183
    2. '.output' → logprob: -7.500583648681641
    3. '.' → logprob: -11.25058364868164
    4. '.writer' → logprob: -11.62558364868164
    5. 'ver' → logprob: -12.87558364868164
    6. '.verify' → logprob: -13.37558364868164
    7. '.input' → logprob: -13.50058364868164
    8. '.Ver' → logprob: -13.87558364868164
    9. 'output' → logprob: -14.37558364868164
    10. '.reader' → logprob: -15.00058364868164

Token 524: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.007452806923538446
    2. 'er' → logprob: -5.382452964782715
    3. 'ify' → logprob: -7.007452964782715
    4. 'ifer' → logprob: -7.007452964782715
    5. 'iter' → logprob: -7.632452964782715
    6. 'if' → logprob: -8.632452964782715
    7. '   ' → logprob: -9.507452964782715
    8. 'riter' → logprob: -10.257452964782715
    9. 'f' → logprob: -10.257452964782715
    10. 'e' → logprob: -10.507452964782715

Token 525: ' =' (ID: 314)
  Prédit: '.verify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.verify' → logprob: -0.21635350584983826
    2. '.' → logprob: -2.341353416442871
    3. '.read' → logprob: -2.716353416442871
    4. '.write' → logprob: -4.091353416442871
    5. '.ver' → logprob: -5.716353416442871
    6. ',' → logprob: -5.966353416442871
    7. '       ' → logprob: -5.966353416442871
    8. ')' → logprob: -6.466353416442871
    9. 'verify' → logprob: -6.841353416442871
    10. '   ' → logprob: -6.966353416442871

Token 526: ' verifier' (ID: 175562)
  Prédit: 'ver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.0013348824577406049
    2. ' verifier' → logprob: -6.7513346672058105
    3. 'output' → logprob: -9.376335144042969
    4. ' ver' → logprob: -9.501335144042969
    5. ' output' → logprob: -13.001335144042969
    6. '       ' → logprob: -14.001335144042969
    7. 'verification' → logprob: -14.251335144042969
    8. 'verify' → logprob: -14.876335144042969
    9. '(ver' → logprob: -15.001335144042969
    10. 'Verifier' → logprob: -15.376335144042969

Token 527: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015683086588978767
    2. 'self' → logprob: -4.265683174133301
    3. '   ' → logprob: -6.640683174133301
    4. ' self' → logprob: -8.5156831741333
    5. 'def' → logprob: -12.3906831741333
    6. '
' → logprob: -12.5156831741333
    7. '	self' → logprob: -13.5156831741333
    8. '           ' → logprob: -14.1406831741333
    9. ',' → logprob: -14.7656831741333
    10. ' ' → logprob: -14.7656831741333

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006756697781383991
    2. 'self' → logprob: -5.006756782531738
    3. ' self' → logprob: -10.131756782531738
    4. '   ' → logprob: -13.631756782531738
    5. '	self' → logprob: -15.506756782531738
    6. '           ' → logprob: -16.631755828857422
    7. '(self' → logprob: -17.506755828857422
    8. '```' → logprob: -17.631755828857422
    9. '      ' → logprob: -17.756755828857422
    10. '[self' → logprob: -18.256755828857422

Token 529: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002390594017924741
    2. '       ' → logprob: -8.625239372253418
    3. ' self' → logprob: -9.750239372253418
    4. '   ' → logprob: -13.750239372253418
    5. '	self' → logprob: -16.7502384185791
    6. ' ' → logprob: -17.5002384185791
    7. '           ' → logprob: -17.8752384185791
    8. '
' → logprob: -18.1252384185791
    9. '  ' → logprob: -18.2502384185791
    10. '     ' → logprob: -18.8752384185791

Token 530: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -1.8670179997570813e-05
    2. '.input' → logprob: -11.875019073486328
    3. 'output' → logprob: -12.000019073486328
    4. '.' → logprob: -12.125019073486328
    5. ' .' → logprob: -16.875019073486328
    6. '.outputs' → logprob: -18.750019073486328
    7. '.out' → logprob: -18.875019073486328
    8. '$output' → logprob: -19.125019073486328
    9. '.result' → logprob: -19.375019073486328
    10. ' output' → logprob: -19.375019073486328

Token 531: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -5.860340752406046e-05
    2. '_reader' → logprob: -9.7500581741333
    3. '_write' → logprob: -16.000059127807617
    4. '_w' → logprob: -16.125059127807617
    5. 'writer' → logprob: -18.500059127807617
    6. '_output' → logprob: -19.250059127807617
    7. 'Writer' → logprob: -19.875059127807617
    8. '_runner' → logprob: -20.875059127807617
    9. '\' → logprob: -21.125059127807617
    10. '_logger' → logprob: -21.375059127807617

Token 532: ' =' (ID: 314)
  Prédit: '.write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.25706037878990173
    2. '=' → logprob: -2.1320602893829346
    3. ' =' → logprob: -2.7570602893829346
    4. '.' → logprob: -3.1320602893829346
    5. '   ' → logprob: -7.257060527801514
    6. ' ' → logprob: -9.257060050964355
    7. '.=' → logprob: -9.382060050964355
    8. ' .' → logprob: -10.757060050964355
    9. '.read' → logprob: -11.007060050964355
    10. 'write' → logprob: -11.257060050964355

Token 533: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.16022443771362305
    2. ' output' → logprob: -1.910224437713623
    3. '(output' → logprob: -16.53522491455078
    4. 'input' → logprob: -16.91022491455078
    5. '	output' → logprob: -17.03522491455078
    6. '$output' → logprob: -18.28522491455078
    7. '_output' → logprob: -18.41022491455078
    8. '       ' → logprob: -19.03522491455078
    9. '.output' → logprob: -19.41022491455078
    10. ' input' → logprob: -19.53522491455078

Token 534: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -1.688212614681106e-05
    2. '_reader' → logprob: -11.000017166137695
    3. 'writer' → logprob: -16.625017166137695
    4. '_write' → logprob: -17.750017166137695
    5. '_w' → logprob: -18.500017166137695
    6. 'Writer' → logprob: -18.500017166137695
    7. '_output' → logprob: -18.750017166137695
    8. '   ' → logprob: -21.000017166137695
    9. '.Writer' → logprob: -21.625017166137695
    10. '_wr' → logprob: -21.750017166137695

Token 535: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034092976711690426
    2. '
' → logprob: -5.878409385681152
    3. '    
' → logprob: -7.753409385681152
    4. 'def' → logprob: -9.128409385681152
    5. '```' → logprob: -10.753409385681152
    6. '<|end|>' → logprob: -10.753409385681152
    7. '        
' → logprob: -11.378409385681152
    8. '  
' → logprob: -12.503409385681152
    9. ' def' → logprob: -12.878409385681152
    10. '

' → logprob: -13.253409385681152

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014189599081873894
    2. 'def' → logprob: -4.264189720153809
    3. ' def' → logprob: -11.389189720153809
    4. '```' → logprob: -11.639189720153809
    5. '    
' → logprob: -12.139189720153809
    6. '
' → logprob: -15.514189720153809
    7. '	def' → logprob: -15.514189720153809
    8. '        
' → logprob: -16.639188766479492
    9. ' ' → logprob: -17.139188766479492
    10. '  ' → logprob: -17.264188766479492

Token 537: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010103991371579468
    2. '   ' → logprob: -9.250101089477539
    3. ' def' → logprob: -12.250101089477539
    4. '```' → logprob: -16.12510108947754
    5. '	def' → logprob: -18.75010108947754
    6. '  ' → logprob: -21.25010108947754
    7. '
' → logprob: -21.87510108947754
    8. ' ' → logprob: -22.00010108947754
    9. '``' → logprob: -22.37510108947754
    10. '       ' → logprob: -22.75010108947754

Token 538: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.1003376841545105
    2. ' run' → logprob: -2.3503377437591553
    3. 'def' → logprob: -9.100337982177734
    4. ' def' → logprob: -10.975337982177734
    5. '   ' → logprob: -14.100337982177734
    6. '_run' → logprob: -14.225337982177734
    7. ' ' → logprob: -14.975337982177734
    8. '.run' → logprob: -15.100337982177734
    9. '	run' → logprob: -16.100337982177734
    10. 'start' → logprob: -16.350337982177734

Token 539: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005577972042374313
    2. '(' → logprob: -7.500557899475098
    3. '(
' → logprob: -12.875557899475098
    4. 'self' → logprob: -13.250557899475098
    5. '   ' → logprob: -15.000557899475098
    6. ' (' → logprob: -16.37555694580078
    7. '()' → logprob: -16.37555694580078
    8. '       ' → logprob: -16.87555694580078
    9. ' self' → logprob: -17.62555694580078
    10. '(Self' → logprob: -17.62555694580078

Token 540: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12842269241809845
    2. 'self' → logprob: -2.753422737121582
    3. '):
' → logprob: -3.378422737121582
    4. ')' → logprob: -4.128422737121582
    5. '(self' → logprob: -5.378422737121582
    6. '   ' → logprob: -6.753422737121582
    7. '       ' → logprob: -7.253422737121582
    8. ' self' → logprob: -10.628422737121582
    9. '):
' → logprob: -10.628422737121582
    10. ')->' → logprob: -11.003422737121582

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017350474081467837
    2. '```' → logprob: -8.875173568725586
    3. 'while' → logprob: -10.875173568725586
    4. ' while' → logprob: -11.250173568725586
    5. '   ' → logprob: -14.000173568725586
    6. '
' → logprob: -15.625173568725586
    7. '``' → logprob: -15.875173568725586
    8. '           ' → logprob: -16.375173568725586
    9. 'n' → logprob: -16.375173568725586
    10. '      ' → logprob: -16.875173568725586

Token 542: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0807366818189621
    2. 'while' (adapté à ' while') → logprob: -2.5807366371154785
    3. ' while' → logprob: -6.3307366371154785
    4. 'n' → logprob: -10.830737113952637
    5. '```' → logprob: -10.955737113952637
    6. 'z' → logprob: -11.080737113952637
    7. '   ' → logprob: -11.955737113952637
    8. '           ' → logprob: -12.330737113952637
    9. '	while' → logprob: -14.955737113952637
    10. ' n' → logprob: -15.705737113952637

Token 543: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00468858378008008
    2. ' True' → logprob: -5.754688739776611
    3. '(True' → logprob: -6.504688739776611
    4. '   ' → logprob: -11.254688262939453
    5. '(' → logprob: -16.004688262939453
    6. '       ' → logprob: -16.879688262939453
    7. ' ' → logprob: -17.129688262939453
    8. 'true' → logprob: -17.254688262939453
    9. ' (' → logprob: -17.754688262939453
    10. '  ' → logprob: -17.879688262939453

Token 544: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2751421332359314
    2. '           ' → logprob: -1.9001421928405762
    3. ':
' → logprob: -2.400142192840576
    4. '<|end|>' → logprob: -10.025141716003418
    5. '():
' → logprob: -10.275141716003418
    6. '<|end|>' → logprob: -10.400141716003418
    7. '):
' → logprob: -10.400141716003418
    8. ' =' → logprob: -10.650141716003418
    9. ',' → logprob: -10.775141716003418
    10. ':
' → logprob: -11.025141716003418

Token 545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013370281085371971
    2. 'n' → logprob: -6.626337051391602
    3. 'z' → logprob: -12.126337051391602
    4. '```' → logprob: -12.876337051391602
    5. 'next' → logprob: -13.376337051391602
    6. ' n' → logprob: -14.751337051391602
    7. 'input' → logprob: -15.501337051391602
    8. '		' → logprob: -15.626337051391602
    9. '          ' → logprob: -16.0013370513916
    10. '
' → logprob: -16.5013370513916

Token 546: ' z' (ID: 579)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12371331453323364
    2. 'z' (adapté à ' z') → logprob: -2.373713254928589
    3. '           ' → logprob: -3.873713254928589
    4. ' n' → logprob: -6.248713493347168
    5. ' z' → logprob: -8.248713493347168
    6. 'value' → logprob: -8.998713493347168
    7. 'num' → logprob: -9.498713493347168
    8. '               ' → logprob: -10.623713493347168
    9. 'input' → logprob: -11.373713493347168
    10. 'number' → logprob: -11.498713493347168

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038044363260269165
    2. '=' → logprob: -3.2880444526672363
    3. ':' → logprob: -13.038043975830078
    4. ':=' → logprob: -15.038043975830078
    5. ' :=' → logprob: -15.163043975830078
    6. '           ' → logprob: -16.038043975830078
    7. '   ' → logprob: -17.288043975830078
    8. ' ' → logprob: -17.413043975830078
    9. '_optional' → logprob: -17.913043975830078
    10. '    ' → logprob: -19.038043975830078

Token 548: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002485884353518486
    2. ' self' → logprob: -6.002485752105713
    3. '           ' → logprob: -11.502486228942871
    4. '               ' → logprob: -16.377485275268555
    5. '(self' → logprob: -19.127485275268555
    6. '            ' → logprob: -19.752485275268555
    7. '                   ' → logprob: -20.127485275268555
    8. '=self' → logprob: -20.377485275268555
    9. '	self' → logprob: -20.502485275268555
    10. '   ' → logprob: -21.502485275268555

Token 549: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -9.627176768844947e-05
    2. 'input' → logprob: -9.250096321105957
    3. '.' → logprob: -16.00009536743164
    4. ' input' → logprob: -18.87509536743164
    5. ' .' → logprob: -20.62509536743164
    6. '_input' → logprob: -20.75009536743164
    7. '	input' → logprob: -21.00009536743164
    8. '=input' → logprob: -21.00009536743164
    9. '<input' → logprob: -21.12509536743164
    10. '.output' → logprob: -22.00009536743164

Token 550: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -3.4121114822482923e-06
    2. '_read' → logprob: -13.125003814697266
    3. '_writer' → logprob: -14.375003814697266
    4. 'reader' → logprob: -14.500003814697266
    5. '._' → logprob: -16.750003814697266
    6. 'Reader' → logprob: -16.750003814697266
    7. '.readline' → logprob: -17.000003814697266
    8. '.reader' → logprob: -17.125003814697266
    9. '-reader' → logprob: -17.500003814697266
    10. '_parser' → logprob: -17.875003814697266

Token 551: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -13.25000286102295
    3. 'read' → logprob: -13.50000286102295
    4. ' .' → logprob: -16.625003814697266
    5. '.readline' → logprob: -18.250003814697266
    6. ' read' → logprob: -21.000003814697266
    7. '   ' → logprob: -22.000003814697266
    8. '.Read' → logprob: -22.500003814697266
    9. '_read' → logprob: -22.875003814697266
    10. '	read' → logprob: -23.000003814697266

Token 552: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: 0.0
    2. '_new' → logprob: -17.875
    3. ' _' → logprob: -18.0
    4. '_' → logprob: -18.125
    5. ')_' → logprob: -18.25
    6. '```' → logprob: -18.625
    7. '()' → logprob: -18.875
    8. '_NEXT' → logprob: -19.375
    9. '_now' → logprob: -19.875
    10. '_n' → logprob: -20.0

Token 553: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.869639476761222e-05
    2. '<|end|>' → logprob: -11.500039100646973
    3. '          ' → logprob: -12.125039100646973
    4. '            
' → logprob: -12.250039100646973
    5. '            ' → logprob: -12.375039100646973
    6. '       ' → logprob: -12.750039100646973
    7. '<|end|>' → logprob: -13.000039100646973
    8. '               ' → logprob: -13.375039100646973
    9. '()' → logprob: -13.625039100646973
    10. '(None' → logprob: -14.000039100646973

Token 554: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.9153885558771435e-06
    2. 'if' → logprob: -12.750005722045898
    3. '       ' → logprob: -13.000005722045898
    4. '   ' → logprob: -15.125005722045898
    5. '		' → logprob: -15.875005722045898
    6. ' if' → logprob: -16.3750057220459
    7. '          ' → logprob: -16.6250057220459
    8. '               ' → logprob: -17.1250057220459
    9. '```' → logprob: -17.5000057220459
    10. '            
' → logprob: -17.8750057220459

Token 555: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1610172986984253
    2. '           ' → logprob: -1.9110172986984253
    3. ' if' → logprob: -7.161017417907715
    4. '   ' → logprob: -11.786017417907715
    5. '       ' → logprob: -12.161017417907715
    6. '
' → logprob: -12.661017417907715
    7. '```' → logprob: -15.286017417907715
    8. '	if' → logprob: -16.2860164642334
    9. '               ' → logprob: -16.2860164642334
    10. '          ' → logprob: -16.5360164642334

Token 556: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.011049824766814709
    2. ' z' → logprob: -4.511049747467041
    3. '           ' → logprob: -13.1360502243042
    4. '	z' → logprob: -17.636049270629883
    5. '            ' → logprob: -19.261049270629883
    6. '               ' → logprob: -19.261049270629883
    7. 'None' → logprob: -20.011049270629883
    8. '_z' → logprob: -20.261049270629883
    9. ' ' → logprob: -20.261049270629883
    10. '                   ' → logprob: -20.636049270629883

Token 557: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10020678490400314
    2. 'is' → logprob: -2.3502068519592285
    3. '	is' → logprob: -17.22520637512207
    4. '==' → logprob: -17.97520637512207
    5. 'in' → logprob: -18.60020637512207
    6. ')is' → logprob: -18.97520637512207
    7. ')' → logprob: -19.35020637512207
    8. '```' → logprob: -19.72520637512207
    9. ' ' → logprob: -19.85020637512207
    10. ' ' → logprob: -21.10020637512207

Token 558: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.002476135268807411
    2. ' None' → logprob: -6.002476215362549
    3. '           ' → logprob: -14.75247573852539
    4. '_None' → logprob: -16.75247573852539
    5. '=None' → logprob: -18.00247573852539
    6. '   ' → logprob: -18.37747573852539
    7. '(None' → logprob: -18.37747573852539
    8. '               ' → logprob: -18.87747573852539
    9. '0' → logprob: -19.12747573852539
    10. '                   ' → logprob: -19.87747573852539

Token 559: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.49206027388572693
    2. ':' → logprob: -1.2420603036880493
    3. '               ' → logprob: -2.3670601844787598
    4. '           ' → logprob: -5.11706018447876
    5. '):
' → logprob: -10.242060661315918
    6. ':
' → logprob: -11.242060661315918
    7. '                   ' → logprob: -11.617060661315918
    8. ' or' → logprob: -11.992060661315918
    9. ':return' → logprob: -11.992060661315918
    10. '():
' → logprob: -12.117060661315918

Token 560: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.061054359131958e-06
    2. '           ' → logprob: -12.500007629394531
    3. '	           ' → logprob: -13.125007629394531
    4. '                   ' → logprob: -14.000007629394531
    5. '   ' → logprob: -14.500007629394531
    6. '              ' → logprob: -15.000007629394531
    7. 'break' → logprob: -15.250007629394531
    8. '			' → logprob: -16.37500762939453
    9. '                ' → logprob: -16.62500762939453
    10. '		       ' → logprob: -17.00000762939453

Token 561: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5769025087356567
    2. 'break' (adapté à ' break') → logprob: -0.8269025087356567
    3. ' break' → logprob: -7.076902389526367
    4. '           ' → logprob: -9.951902389526367
    5. '                   ' → logprob: -10.451902389526367
    6. '	break' → logprob: -10.451902389526367
    7. 'return' → logprob: -11.701902389526367
    8. '   ' → logprob: -13.076902389526367
    9. '	           ' → logprob: -14.076902389526367
    10. '_break' → logprob: -14.076902389526367

Token 562: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006742373108863831
    2. '
' → logprob: -5.006742477416992
    3. '            
' → logprob: -10.756742477416992
    4. 'self' → logprob: -13.631742477416992
    5. '       ' → logprob: -13.881742477416992
    6. '
' → logprob: -14.006742477416992
    7. '		' → logprob: -14.631742477416992
    8. '          ' → logprob: -15.006742477416992
    9. '    
' → logprob: -15.006742477416992
    10. '               ' → logprob: -15.006742477416992

Token 563: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.277553620748222e-05
    2. '
' → logprob: -10.000062942504883
    3. 'self' → logprob: -11.250062942504883
    4. '       ' → logprob: -13.000062942504883
    5. '            
' → logprob: -14.375062942504883
    6. '               ' → logprob: -14.750062942504883
    7. '          ' → logprob: -15.125062942504883
    8. ' self' → logprob: -15.500062942504883
    9. '```' → logprob: -15.625062942504883
    10. 'result' → logprob: -16.125062942504883

Token 564: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.050463248044252396
    2. '           ' → logprob: -3.5504631996154785
    3. 'diff' → logprob: -4.4254631996154785
    4. ' result' → logprob: -4.8004631996154785
    5. 'res' (adapté à ' res') → logprob: -8.800463676452637
    6. ' diff' → logprob: -9.925463676452637
    7. 'self' → logprob: -10.050463676452637
    8. 'difference' → logprob: -10.175463676452637
    9. 'd' → logprob: -11.300463676452637
    10. '               ' → logprob: -12.800463676452637

Token 565: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.04492460936307907
    2. ' =' → logprob: -3.29492449760437
    3. '           ' → logprob: -5.419924736022949
    4. '=' → logprob: -6.169924736022949
    5. '               ' → logprob: -8.66992473602295
    6. 'ultat' → logprob: -9.16992473602295
    7. 'ults' → logprob: -11.16992473602295
    8. '            ' → logprob: -11.29492473602295
    9. '   ' → logprob: -12.04492473602295
    10. '=result' → logprob: -12.04492473602295

Token 566: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01104935072362423
    2. ' self' → logprob: -4.511049270629883
    3. '           ' → logprob: -13.386049270629883
    4. '(self' → logprob: -17.636049270629883
    5. '               ' → logprob: -18.011049270629883
    6. '	self' → logprob: -20.386049270629883
    7. '=self' → logprob: -20.386049270629883
    8. '[self' → logprob: -22.136049270629883
    9. '```' → logprob: -22.761049270629883
    10. '       ' → logprob: -22.886049270629883

Token 567: '.ver' (ID: 91872)
  Prédit: '.ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ver' → logprob: -2.5776860184123507e-06
    2. 'ver' → logprob: -13.00000286102295
    3. '.' → logprob: -15.75000286102295
    4. '.verify' → logprob: -16.500001907348633
    5. ' .' → logprob: -18.500001907348633
    6. '.Ver' → logprob: -18.875001907348633
    7. '_ver' → logprob: -19.625001907348633
    8. '   ' → logprob: -19.750001907348633
    9. 'Verifier' → logprob: -20.750001907348633
    10. '```' → logprob: -20.750001907348633

Token 568: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.06347043067216873
    2. 'ify' → logprob: -2.9384703636169434
    3. 'if' → logprob: -4.938470363616943
    4. 'er' → logprob: -7.063470363616943
    5. 'ifer' → logprob: -8.938470840454102
    6. 'ir' → logprob: -9.188470840454102
    7. '   ' → logprob: -9.438470840454102
    8. 'ified' → logprob: -9.563470840454102
    9. 'r' → logprob: -11.063470840454102
    10. 'ifie' → logprob: -11.188470840454102

Token 569: '.verify' (ID: 44192)
  Prédit: '.verify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.verify' → logprob: -4.4849443838757e-06
    2. '.' → logprob: -12.500004768371582
    3. ' .' → logprob: -14.875004768371582
    4. 'verify' → logprob: -15.250004768371582
    5. '.validate' → logprob: -17.250003814697266
    6. '	verify' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.000003814697266
    8. '.Verify' → logprob: -18.500003814697266
    9. '.ver' → logprob: -18.625003814697266
    10. '  ' → logprob: -20.625003814697266

Token 570: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. 'z' → logprob: -17.375
    4. ' (' → logprob: -17.875
    5. '(
' → logprob: -18.625
    6. '(q' → logprob: -20.375
    7. '(y' → logprob: -20.625
    8. '   ' → logprob: -20.875
    9. '(res' → logprob: -20.875
    10. '(i' → logprob: -21.125

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16390308737754822
    2. ')
' → logprob: -1.9139031171798706
    3. '           ' → logprob: -5.66390323638916
    4. ')
' → logprob: -8.53890323638916
    5. '       ' → logprob: -12.53890323638916
    6. ')`
' → logprob: -13.41390323638916
    7. ')

' → logprob: -14.41390323638916
    8. '   ' → logprob: -14.53890323638916
    9. '          ' → logprob: -14.91390323638916
    10. ')`' → logprob: -15.16390323638916

Token 572: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004014172591269016
    2. 'self' → logprob: -5.754014015197754
    3. '
' → logprob: -7.129014015197754
    4. ' self' → logprob: -10.754014015197754
    5. '       ' → logprob: -11.504014015197754
    6. '```' → logprob: -13.879014015197754
    7. '
' → logprob: -14.129014015197754
    8. '            
' → logprob: -14.629014015197754
    9. '   ' → logprob: -15.004014015197754
    10. '		' → logprob: -15.254014015197754

Token 573: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31507450342178345
    2. 'self' (adapté à ' self') → logprob: -1.3150744438171387
    3. ' self' → logprob: -6.315074443817139
    4. '       ' → logprob: -14.065074920654297
    5. '   ' → logprob: -14.190074920654297
    6. '               ' → logprob: -15.440074920654297
    7. '		' → logprob: -15.940074920654297
    8. '
' → logprob: -16.190074920654297
    9. '          ' → logprob: -16.315074920654297
    10. '	self' → logprob: -16.565074920654297

Token 574: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -1.3856492842023727e-06
    2. 'output' → logprob: -13.750000953674316
    3. '.input' → logprob: -15.375000953674316
    4. '.' → logprob: -16.750001907348633
    5. '_output' → logprob: -17.375001907348633
    6. ' .' → logprob: -18.750001907348633
    7. '	output' → logprob: -18.875001907348633
    8. '_.' → logprob: -19.875001907348633
    9. '._' → logprob: -20.375001907348633
    10. '   ' → logprob: -20.750001907348633

Token 575: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -5.512236498361744e-07
    2. '_output' → logprob: -15.000000953674316
    3. '_write' → logprob: -16.25
    4. '_reader' → logprob: -17.375
    5. '_w' → logprob: -20.0
    6. 'Writer' → logprob: -20.75
    7. 'writer' → logprob: -20.875
    8. '_written' → logprob: -22.5
    9. '_wrapper' → logprob: -22.625
    10. '_logger' → logprob: -23.25

Token 576: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -14.75
    3. ' .' → logprob: -18.25
    4. '.print' → logprob: -18.75
    5. 'write' → logprob: -19.125
    6. '.Write' → logprob: -22.125
    7. '   ' → logprob: -22.25
    8. '.send' → logprob: -22.75
    9. '.show' → logprob: -23.0
    10. '.save' → logprob: -23.375

Token 577: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.000006675720215
    3. 'res' → logprob: -15.875006675720215
    4. ' (' → logprob: -16.1250057220459
    5. ' res' → logprob: -18.2500057220459
    6. '(result' → logprob: -18.8750057220459
    7. '(f' → logprob: -19.0000057220459
    8. '(results' → logprob: -20.6250057220459
    9. '	res' → logprob: -20.6250057220459
    10. '=res' → logprob: -20.6250057220459

Token 578: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012642296496778727
    2. '())' → logprob: -9.375126838684082
    3. ')
' → logprob: -10.375126838684082
    4. '()' → logprob: -11.625126838684082
    5. '       ' → logprob: -15.250126838684082
    6. '()
' → logprob: -15.375126838684082
    7. ' )' → logprob: -15.500126838684082
    8. '           ' → logprob: -15.875126838684082
    9. '<|end|>' → logprob: -16.000125885009766
    10. '```' → logprob: -16.125125885009766

Token 579: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.082895273109898e-05
    2. '```' → logprob: -10.625030517578125
    3. 'def' → logprob: -12.500030517578125
    4. ' if' → logprob: -13.000030517578125
    5. '#' → logprob: -15.250030517578125
    6. 'input' → logprob: -16.500030517578125
    7. 'import' → logprob: -16.875030517578125
    8. '#if' → logprob: -17.250030517578125
    9. 'from' → logprob: -17.500030517578125
    10. '
' → logprob: -17.625030517578125

Token 580: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20145533978939056
    2. '__' → logprob: -1.7014553546905518
    3. '_' → logprob: -11.076455116271973
    4. '___' → logprob: -11.576455116271973
    5. 'name' → logprob: -11.701455116271973
    6. '_name' → logprob: -11.826455116271973
    7. ' ' → logprob: -14.576455116271973
    8. ' ' → logprob: -14.701455116271973
    9. '```' → logprob: -15.326455116271973
    10. ' ___' → logprob: -15.826455116271973

Token 581: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009085441939532757
    2. ' __' → logprob: -5.384085655212402
    3. ' ==' → logprob: -5.509085655212402
    4. '==' → logprob: -8.509085655212402
    5. 'name' → logprob: -8.884085655212402
    6. 'if' → logprob: -10.884085655212402
    7. '.__' → logprob: -11.384085655212402
    8. '__.__' → logprob: -11.384085655212402
    9. '__.' → logprob: -12.259085655212402
    10. '_' → logprob: -12.634085655212402

Token 582: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.128163257315464e-07
    2. '__.__' → logprob: -16.625
    3. 'name' → logprob: -17.0
    4. '==' → logprob: -17.0
    5. ' ==' → logprob: -18.125
    6. '__.' → logprob: -18.25
    7. '__
' → logprob: -18.5
    8. '___' → logprob: -19.375
    9. '____' → logprob: -19.625
    10. '__('' → logprob: -20.125

Token 583: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10028495639562607
    2. '==' → logprob: -2.725285053253174
    3. ' ==' → logprob: -3.600285053253174
    4. '=="' → logprob: -5.975285053253174
    5. '=='' → logprob: -10.725284576416016
    6. '__.__' → logprob: -12.225284576416016
    7. '"' → logprob: -12.225284576416016
    8. '===' → logprob: -14.225284576416016
    9. '=' → logprob: -14.475284576416016
    10. '__":
' → logprob: -14.725284576416016

Token 584: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0052808308973908424
    2. ''' → logprob: -5.2552809715271
    3. ' "__' → logprob: -10.005280494689941
    4. '__' → logprob: -13.380280494689941
    5. ' '__' → logprob: -15.005280494689941
    6. '"name' → logprob: -17.130281448364258
    7. '("__' → logprob: -17.505281448364258
    8. ''"' → logprob: -17.505281448364258
    9. ' ' → logprob: -18.255281448364258
    10. '   ' → logprob: -18.380281448364258

Token 585: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00027420982951298356
    2. '__' → logprob: -8.250274658203125
    3. 'name' → logprob: -11.375274658203125
    4. '_main' → logprob: -14.250274658203125
    5. 'py' → logprob: -15.250274658203125
    6. ' main' → logprob: -15.375274658203125
    7. 'ma' → logprob: -16.375274658203125
    8. 'm' → logprob: -16.375274658203125
    9. 'python' → logprob: -16.375274658203125
    10. '```' → logprob: -17.375274658203125

Token 586: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0009203928639180958
    2. '__' → logprob: -7.000920295715332
    3. '__':
' → logprob: -11.625920295715332
    4. '":
' → logprob: -18.50092124938965
    5. '__:' → logprob: -19.87592124938965
    6. '_' → logprob: -20.75092124938965
    7. '__
' → logprob: -21.12592124938965
    8. '__["' → logprob: -21.62592124938965
    9. '```' → logprob: -21.62592124938965
    10. '"' → logprob: -21.62592124938965

Token 587: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2352385965641588e-05
    2. '   ' → logprob: -12.375012397766113
    3. 'app' → logprob: -13.125012397766113
    4. 'input' → logprob: -13.125012397766113
    5. ' app' → logprob: -13.625012397766113
    6. 'import' → logprob: -13.750012397766113
    7. '```' → logprob: -14.375012397766113
    8. ' input' → logprob: -14.750012397766113
    9. '    
' → logprob: -15.500012397766113
    10. '	app' → logprob: -15.625012397766113

Token 588: ' reader' (ID: 10958)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.10728850215673447
    2. ' app' → logprob: -2.6072885990142822
    3. '   ' → logprob: -4.357288360595703
    4. 'import' → logprob: -4.357288360595703
    5. 'input' → logprob: -6.357288360595703
    6. 'reader' (adapté à ' reader') → logprob: -8.357288360595703
    7. ' import' → logprob: -8.482288360595703
    8. ' input' → logprob: -8.982288360595703
    9. ' reader' → logprob: -10.607288360595703
    10. 'from' → logprob: -10.857288360595703

Token 589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519293427467346
    2. ' =' → logprob: -1.5019292831420898
    3. ',' → logprob: -16.001930236816406
    4. '   ' → logprob: -16.251930236816406
    5. ')' → logprob: -17.001930236816406
    6. '=}' → logprob: -17.126930236816406
    7. '＝' → logprob: -17.626930236816406
    8. '=
' → logprob: -17.876930236816406
    9. ' =)' → logprob: -18.126930236816406
    10. '=

' → logprob: -18.251930236816406

Token 590: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.0001584850688232109
    2. ' Std' → logprob: -8.750158309936523
    3. 'std' → logprob: -18.625158309936523
    4. 'Standard' → logprob: -18.750158309936523
    5. ' ' → logprob: -18.875158309936523
    6. 'St' → logprob: -19.250158309936523
    7. '.Std' → logprob: -19.875158309936523
    8. 'Sys' → logprob: -20.125158309936523
    9. '   ' → logprob: -20.125158309936523
    10. 'STD' → logprob: -21.125158309936523

Token 591: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. 'In' → logprob: -22.625
    3. 'input' → logprob: -23.125
    4. '	Input' → logprob: -23.5
    5. '_input' → logprob: -24.125
    6. ' Input' → logprob: -24.375
    7. '```' → logprob: -24.375
    8. 'Inp' → logprob: -24.75
    9. 'Output' → logprob: -25.0
    10. '_Input' → logprob: -25.125

Token 592: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -1.8624639324116288e-06
    2. 'reader' → logprob: -13.250001907348633
    3. '_reader' → logprob: -17.250001907348633
    4. '.Reader' → logprob: -18.125001907348633
    5. 'Input' → logprob: -18.750001907348633
    6. '-reader' → logprob: -20.125001907348633
    7. 'Readers' → logprob: -20.625001907348633
    8. 'Writer' → logprob: -20.875001907348633
    9. 'Read' → logprob: -21.000001907348633
    10. ' reader' → logprob: -22.125001907348633

Token 593: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17589913308620453
    2. '
' → logprob: -1.9258991479873657
    3. '    
' → logprob: -5.425899028778076
    4. ')' → logprob: -6.175899028778076
    5. '(
' → logprob: -6.175899028778076
    6. '()
' → logprob: -6.425899028778076
    7. 'writer' → logprob: -6.425899028778076
    8. 'ver' → logprob: -6.800899028778076
    9. 'output' → logprob: -7.175899028778076
    10. ')
' → logprob: -8.175899505615234

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03855891898274422
    2. 'ver' → logprob: -3.2885589599609375
    3. ' verifier' → logprob: -7.7885589599609375
    4. 'writer' → logprob: -9.288558959960938
    5. ' ver' → logprob: -12.413558959960938
    6. ' writer' → logprob: -13.038558959960938
    7. '  ' → logprob: -13.288558959960938
    8. '```' → logprob: -14.038558959960938
    9. ' ' → logprob: -14.538558959960938
    10. '    ' → logprob: -15.538558959960938

Token 595: ' verifier' (ID: 175562)
  Prédit: 'ver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.00028660334646701813
    2. ' verifier' → logprob: -8.250287055969238
    3. '   ' → logprob: -10.875287055969238
    4. 'writer' → logprob: -12.250287055969238
    5. 'max' → logprob: -14.000287055969238
    6. 'app' → logprob: -15.750287055969238
    7. 'verify' → logprob: -16.125286102294922
    8. 'Verifier' → logprob: -16.125286102294922
    9. '```' → logprob: -16.625286102294922
    10. ' ver' → logprob: -17.125286102294922

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029757659882307053
    2. '=' → logprob: -3.5297577381134033
    3. '=C' → logprob: -12.029757499694824
    4. '   ' → logprob: -14.529757499694824
    5. '(' → logprob: -14.654757499694824
    6. 'C' → logprob: -15.279757499694824
    7. '(C' → logprob: -16.77975845336914
    8. ' ' → logprob: -17.15475845336914
    9. ')' → logprob: -17.40475845336914
    10. ' =
' → logprob: -18.40475845336914

Token 597: ' Cub' (ID: 42140)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.020546091720461845
    2. ' Cub' → logprob: -3.8955461978912354
    3. ' ' → logprob: -13.395545959472656
    4. ' cubic' → logprob: -13.770545959472656
    5. '   ' → logprob: -13.895545959472656
    6. 'c' → logprob: -15.395545959472656
    7. 'Cub' → logprob: -15.520545959472656
    8. '	C' → logprob: -15.895545959472656
    9. ' C' → logprob: -17.145545959472656
    10. ' ' → logprob: -17.270545959472656

Token 598: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: 0.0
    2. 'IC' → logprob: -20.125
    3. 'tic' → logprob: -21.5
    4. 'icc' → logprob: -21.75
    5. '_ic' → logprob: -22.25
    6. '#' → logprob: -22.25
    7. '\' → logprob: -22.75
    8. '```' → logprob: -22.875
    9. 'bic' → logprob: -23.0
    10. 'i' → logprob: -23.25

Token 599: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -1.6240566083070007e-06
    2. 'sum' → logprob: -13.375001907348633
    3. '_sum' → logprob: -17.250001907348633
    4. ' Sum' → logprob: -18.000001907348633
    5. 'um' → logprob: -18.375001907348633
    6. 'S' → logprob: -19.000001907348633
    7. 'SUM' → logprob: -19.000001907348633
    8. 'Max' → logprob: -19.375001907348633
    9. ' sum' → logprob: -19.500001907348633
    10. 'Summ' → logprob: -19.750001907348633

Token 600: 'Max' (ID: 6499)
  Prédit: 'Max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Max' → logprob: 0.0
    2. '_Max' → logprob: -20.5
    3. '-Max' → logprob: -20.75
    4. '	Max' → logprob: -21.25
    5. ' Max' → logprob: -21.75
    6. 'max' → logprob: -22.0
    7. '_max' → logprob: -22.25
    8. '(Max' → logprob: -22.625
    9. 'Min' → logprob: -23.0
    10. '.Max' → logprob: -23.25

Token 601: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.039084114134311676
    2. 'izer' → logprob: -3.2890841960906982
    3. 'max' → logprob: -7.539083957672119
    4. 'ar' → logprob: -8.789084434509277
    5. 'm' → logprob: -8.914084434509277
    6. 'er' → logprob: -10.164084434509277
    7. 'optimizer' → logprob: -10.414084434509277
    8. 'an' → logprob: -10.914084434509277
    9. 'iz' → logprob: -11.039084434509277
    10. 'import' → logprob: -11.289084434509277

Token 602: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -8.77627644513268e-06
    2. 'zer' → logprob: -11.875008583068848
    3. 'ixer' → logprob: -14.375008583068848
    4. 'azer' → logprob: -14.500008583068848
    5. 'IZER' → logprob: -14.625008583068848
    6. 'a' → logprob: -16.250009536743164
    7. 'zier' → logprob: -17.250009536743164
    8. 'm' → logprob: -18.250009536743164
    9. 'xer' → logprob: -18.750009536743164
    10. 'izers' → logprob: -18.875009536743164

Token 603: '(power' (ID: 168790)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15463809669017792
    2. '(power' → logprob: -2.4046380519866943
    3. '   ' → logprob: -3.0296380519866943
    4. 'power' → logprob: -6.029638290405273
    5. '(
' → logprob: -6.404638290405273
    6. '3' → logprob: -7.779638290405273
    7. '(output' → logprob: -10.029638290405273
    8. '(pow' → logprob: -10.654638290405273
    9. '(writer' → logprob: -11.154638290405273
    10. '1' → logprob: -11.654638290405273

Token 604: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9361264946837764e-07
    2. '3' → logprob: -16.5
    3. ' =' → logprob: -17.5
    4. ')' → logprob: -20.75
    5. '(' → logprob: -22.0
    6. ')=' → logprob: -22.75
    7. '=}' → logprob: -22.875
    8. '   ' → logprob: -23.5
    9. '```' → logprob: -23.625
    10. '1' → logprob: -23.625

Token 605: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.875001907348633
    4. ')' → logprob: -19.875001907348633
    5. '```' → logprob: -20.875001907348633
    6. '３' → logprob: -21.625001907348633
    7. '۳' → logprob: -21.875001907348633
    8. '³' → logprob: -22.250001907348633
    9. '  ' → logprob: -22.250001907348633
    10. '           ' → logprob: -22.500001907348633

Token 606: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005543439765460789
    2. ')
' → logprob: -7.50055456161499
    3. '   ' → logprob: -13.750554084777832
    4. ')
' → logprob: -15.500554084777832
    5. ' )' → logprob: -16.75055503845215
    6. ')

' → logprob: -18.87555503845215
    7. '),' → logprob: -19.25055503845215
    8. ').' → logprob: -20.62555503845215
    9. '))' → logprob: -21.00055503845215
    10. ')`' → logprob: -21.12555503845215

Token 607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004124588333070278
    2. 'writer' → logprob: -5.504124641418457
    3. 'output' → logprob: -10.629124641418457
    4. ' writer' → logprob: -10.754124641418457
    5. '_writer' → logprob: -15.004124641418457
    6. '	writer' → logprob: -15.504124641418457
    7. ' output' → logprob: -17.12912368774414
    8. '```' → logprob: -17.25412368774414
    9. 'w' → logprob: -17.37912368774414
    10. '   ' → logprob: -18.25412368774414

Token 608: ' writer' (ID: 10645)
  Prédit: 'writer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'writer' (adapté à ' writer') → logprob: -0.0005667338264174759
    2. 'output' → logprob: -8.000566482543945
    3. '   ' → logprob: -8.500566482543945
    4. ' writer' → logprob: -10.500566482543945
    5. '	writer' → logprob: -15.625566482543945
    6. '_writer' → logprob: -16.000566482543945
    7. 'Writer' → logprob: -18.250566482543945
    8. '
' → logprob: -18.250566482543945
    9. 'w' → logprob: -18.500566482543945
    10. 'write' → logprob: -18.500566482543945

Token 609: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022422909736633
    2. '=' → logprob: -1.910224199295044
    3. ' ' → logprob: -16.78522491455078
    4. '   ' → logprob: -17.28522491455078
    5. '  ' → logprob: -18.91022491455078
    6. ' =
' → logprob: -19.53522491455078
    7. ')' → logprob: -20.03522491455078
    8. '.' → logprob: -20.66022491455078
    9. '＝' → logprob: -20.78522491455078
    10. '	' → logprob: -20.78522491455078

Token 610: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.07889088988304138
    2. ' Std' → logprob: -2.578890800476074
    3. '.Std' → logprob: -14.578890800476074
    4. ' ' → logprob: -15.578890800476074
    5. '   ' → logprob: -15.828890800476074
    6. ' std' → logprob: -16.20389175415039
    7. 'Standard' → logprob: -16.20389175415039
    8. ' ' → logprob: -17.20389175415039
    9. 'std' → logprob: -17.20389175415039
    10. 'STD' → logprob: -17.45389175415039

Token 611: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 'output' → logprob: -18.875
    3. 'Input' → logprob: -20.125
    4. 'Out' → logprob: -20.75
    5. 'O' → logprob: -21.5
    6. ' Output' → logprob: -22.0
    7. '_output' → logprob: -22.375
    8. '	Output' → logprob: -22.875
    9. 'Ou' → logprob: -23.625
    10. 'OUTPUT' → logprob: -24.375

Token 612: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -3.128163257315464e-07
    2. 'Output' → logprob: -15.875
    3. 'Reader' → logprob: -17.0
    4. '_writer' → logprob: -17.375
    5. 'writer' → logprob: -17.625
    6. 'Write' → logprob: -19.25
    7. '.Writer' → logprob: -22.625
    8. '   ' → logprob: -23.0
    9. '	writer' → logprob: -23.25
    10. ' writer' → logprob: -23.625

Token 613: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019527795957401395
    2. 'app' → logprob: -6.251952648162842
    3. '
' → logprob: -11.626953125
    4. '    
' → logprob: -12.001953125
    5. '(app' → logprob: -12.501953125
    6. '	app' → logprob: -13.126953125
    7. ' app' → logprob: -13.251953125
    8. '_app' → logprob: -13.626953125
    9. ')' → logprob: -15.251953125
    10. 'fer' → logprob: -16.876953125

Token 614: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.474131315946579
    2. 'app' → logprob: -0.9741313457489014
    3. ' app' → logprob: -9.97413158416748
    4. '	app' → logprob: -12.72413158416748
    5. '    
' → logprob: -13.09913158416748
    6. '```' → logprob: -13.72413158416748
    7. '
' → logprob: -14.72413158416748
    8. 'F' → logprob: -14.97413158416748
    9. 'App' → logprob: -15.09913158416748
    10. 'fer' → logprob: -15.72413158416748

Token 615: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -6.44443862256594e-05
    2. 'F' → logprob: -10.375064849853516
    3. ' app' → logprob: -10.625064849853516
    4. '   ' → logprob: -11.875064849853516
    5. 'App' → logprob: -13.375064849853516
    6. '(app' → logprob: -16.500064849853516
    7. '    
' → logprob: -16.625064849853516
    8. '```' → logprob: -16.625064849853516
    9. '	app' → logprob: -16.750064849853516
    10. 'application' → logprob: -17.500064849853516

Token 616: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20962266623973846
    2. '.run' → logprob: -1.7096226215362549
    3. ' =' → logprob: -5.084622859954834
    4. '.app' → logprob: -6.834622859954834
    5. '=' → logprob: -7.084622859954834
    6. '.=' → logprob: -9.959622383117676
    7. '.mainloop' → logprob: -12.209622383117676
    8. '.execute' → logprob: -12.709622383117676
    9. '.py' → logprob: -12.959622383117676
    10. ' .' → logprob: -13.209622383117676

Token 617: ' Ferm' (ID: 156422)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.07889275997877121
    2. ' Ferm' → logprob: -2.578892707824707
    3. 'Fer' → logprob: -13.828892707824707
    4. '_F' → logprob: -14.078892707824707
    5. ' F' → logprob: -15.078892707824707
    6. '	F' → logprob: -15.578892707824707
    7. ' Fer' → logprob: -15.828892707824707
    8. ' Fern' → logprob: -15.828892707824707
    9. '   ' → logprob: -15.828892707824707
    10. ' Ferd' → logprob: -16.203893661499023

Token 618: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.9361264946837764e-07
    2. 'rat' → logprob: -16.5
    3. '   ' → logprob: -17.5
    4. 'ат' → logprob: -17.625
    5. 'F' → logprob: -18.875
    6. 'mat' → logprob: -19.0
    7. 'At' → logprob: -19.375
    8. 'att' → logprob: -20.0
    9. 'AT' → logprob: -20.25
    10. ' at' → logprob: -20.25

Token 619: 'Last' (ID: 6949)
  Prédit: 'Last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -1.9361264946837764e-07
    2. 'last' → logprob: -16.625
    3. ' Last' → logprob: -18.0
    4. '	Last' → logprob: -18.0
    5. '_Last' → logprob: -18.875
    6. '_last' → logprob: -19.25
    7. '.Last' → logprob: -19.875
    8. '_LAST' → logprob: -21.25
    9. ' last' → logprob: -21.5
    10. 'LAST' → logprob: -22.75

Token 620: 'The' (ID: 976)
  Prédit: 'Last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -0.20143301784992218
    2. 'The' → logprob: -1.7014330625534058
    3. 'Theory' → logprob: -12.201433181762695
    4. ' theorem' → logprob: -12.201433181762695
    5. 'the' → logprob: -12.326433181762695
    6. '_the' → logprob: -13.826433181762695
    7. 'Then' → logprob: -13.951433181762695
    8. '_last' → logprob: -14.576433181762695
    9. 'Theo' → logprob: -14.826433181762695
    10. '_Last' → logprob: -14.951433181762695

Token 621: 'orem' (ID: 21468)
  Prédit: 'orem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orem' → logprob: -0.0041579375974833965
    2. 'The' → logprob: -5.879158020019531
    3. 'orum' → logprob: -6.879158020019531
    4. ' theorem' → logprob: -8.379158020019531
    5. 'ore' → logprob: -10.004158020019531
    6. 'or' → logprob: -11.129158020019531
    7. 'rem' → logprob: -11.629158020019531
    8. 'the' → logprob: -12.004158020019531
    9. 'o' → logprob: -12.379158020019531
    10. 'Rem' → logprob: -13.129158020019531

Token 622: 'App' (ID: 2563)
  Prédit: 'App'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'App' → logprob: 0.0
    2. ' App' → logprob: -17.5
    3. 'app' → logprob: -18.375
    4. '	App' → logprob: -18.75
    5. 'Ap' → logprob: -19.875
    6. '<App' → logprob: -20.375
    7. '\App' → logprob: -20.375
    8. '_app' → logprob: -20.375
    9. '_App' → logprob: -21.0
    10. 'Appender' → logprob: -21.125

Token 623: '(reader' (ID: 49220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10750435292720795
    2. '(reader' → logprob: -2.357504367828369
    3. '(
' → logprob: -4.982504367828369
    4. '(input' → logprob: -7.857504367828369
    5. '(

' → logprob: -10.982503890991211
    6. '(
' → logprob: -11.857503890991211
    7. '(read' → logprob: -13.732503890991211
    8. 'reader' → logprob: -14.232503890991211
    9. '(stdin' → logprob: -15.482503890991211
    10. '   ' → logprob: -15.607503890991211

Token 624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ',
' → logprob: -13.625001907348633
    3. ' ,' → logprob: -14.375001907348633
    4. '   ' → logprob: -15.625001907348633
    5. ')' → logprob: -18.250001907348633
    6. ',v' → logprob: -18.250001907348633
    7. '=' → logprob: -19.375001907348633
    8. ',

' → logprob: -19.750001907348633
    9. 'reader' → logprob: -20.000001907348633
    10. '(reader' → logprob: -20.125001907348633

Token 625: ' verifier' (ID: 175562)
  Prédit: 'ver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.0380479171872139
    2. ' verifier' → logprob: -3.288048028945923
    3. ' ver' → logprob: -13.038047790527344
    4. 'Verifier' → logprob: -13.663047790527344
    5. 'verify' → logprob: -14.163047790527344
    6. 'verification' → logprob: -14.288047790527344
    7. '(ver' → logprob: -14.663047790527344
    8. '   ' → logprob: -15.038047790527344
    9. 'writer' → logprob: -15.288047790527344
    10. '_ver' → logprob: -15.788047790527344

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.250000953674316
    3. ',
' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.625
    5. ',w' → logprob: -18.5
    6. ')' → logprob: -19.25
    7. ',

' → logprob: -21.0
    8. 'writer' → logprob: -21.125
    9. '‌,' → logprob: -21.625
    10. '(writer' → logprob: -21.75

Token 627: ' writer' (ID: 10645)
  Prédit: ' writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' writer' → logprob: -0.023247340694069862
    2. 'writer' → logprob: -3.773247241973877
    3. '	writer' → logprob: -13.898247718811035
    4. '(writer' → logprob: -14.023247718811035
    5. '.writer' → logprob: -16.14824676513672
    6. '_writer' → logprob: -17.14824676513672
    7. '   ' → logprob: -17.39824676513672
    8. 'Writer' → logprob: -19.27324676513672
    9. '```' → logprob: -19.39824676513672
    10. '    ' → logprob: -20.64824676513672

Token 628: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3135910630226135
    2. ')' → logprob: -1.3135910034179688
    3. '   ' → logprob: -8.063591003417969
    4. ')
' → logprob: -11.313591003417969
    5. ' )
' → logprob: -13.813591003417969
    6. ').' → logprob: -14.688591003417969
    7. ' ' → logprob: -15.188591003417969
    8. ' )' → logprob: -15.438591003417969
    9. ')`
' → logprob: -15.938591003417969
    10. ')

' → logprob: -16.18859100341797

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16028231382369995
    2. 'app' → logprob: -1.9102823734283447
    3. ' app' → logprob: -10.285282135009766
    4. '	app' → logprob: -10.785282135009766
    5. '(app' → logprob: -13.660282135009766
    6. '
' → logprob: -14.160282135009766
    7. '    
' → logprob: -14.285282135009766
    8. '.app' → logprob: -14.660282135009766
    9. '_app' → logprob: -15.410282135009766
    10. '```' → logprob: -16.410282135009766

Token 630: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -2.093505099765025e-05
    2. '   ' → logprob: -11.250020980834961
    3. ' app' → logprob: -11.750020980834961
    4. '	app' → logprob: -19.12502098083496
    5. '.app' → logprob: -21.50002098083496
    6. '_app' → logprob: -22.00002098083496
    7. '  ' → logprob: -22.25002098083496
    8. '(app' → logprob: -22.50002098083496
    9. '    
' → logprob: -24.00002098083496
    10. '$app' → logprob: -24.50002098083496

Token 631: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -4.56102097814437e-05
    2. '.' → logprob: -10.000045776367188
    3. ' .' → logprob: -16.500045776367188
    4. '.Run' → logprob: -20.250045776367188
    5. '.
' → logprob: -20.375045776367188
    6. '.start' → logprob: -20.375045776367188
    7. 'run' → logprob: -21.000045776367188
    8. '.mainloop' → logprob: -21.250045776367188
    9. ' run' → logprob: -21.375045776367188
    10. '   ' → logprob: -22.000045776367188

Token 632: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 630
Tokens correctement prédits (1ère position, stricte): 275
Tokens correctement prédits (1ère position, avec adaptation): 305
Tokens correctement prédits (top 10): 539
Précision stricte (1ère position): 43.65%
Précision adaptée (1ère position): 48.41%
Précision (top 10): 85.56%
================================================================================
