================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq
input = sys.stdin.readline

N,M,K = map(int,input().split())
edges = [[] for _ in range(N+1)]
for _ in range(M):
    a,b,l = map(int,input().split())
    edges[a].append((b,l))
    edges[b].append((a,l))
malls = [int(input()) for _ in range(K)]

INF = 10**15
dist = [INF]*(N+1)
hq = []
for m in malls:
    dist[m] = 0
    heapq.heappush(hq,(0,m))

while hq:
    cd, cv = heapq.heappop(hq)
    if dist[cv]<cd:
        continue
    for nv,nl in edges[cv]:
        nd = cd + nl
        if nd<dist[nv]:
            dist[nv]=nd
            heapq.heappush(hq,(nd,nv))

ans = 0.0
for a in range(1,N+1):
    for b,l in edges[a]:
        if a < b:
            d1 = dist[a]
            d2 = dist[b]
            diff= abs(d1-d2)
            mx = max(d1,d2)
            if diff < l:
                cand = mx + (l - diff)/2
            else:
                cand = mx
            if cand > ans:
                ans = cand

print(round(ans))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.433769166469574
    2. '.' → logprob: -1.1837692260742188
    3. 'import' → logprob: -4.183769226074219
    4. '\' → logprob: -4.433769226074219
    5. 'newline' → logprob: -5.183769226074219
    6. '<|end|>' → logprob: -5.558769226074219
    7. '
' → logprob: -5.933769226074219
    8. '```' → logprob: -6.558769226074219
    9. '' → logprob: -7.058769226074219
    10. '<|end|>' → logprob: -7.308769226074219

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9385402993066236e-05
    2. '#' → logprob: -11.500019073486328
    3. '.' → logprob: -12.375019073486328
    4. '_' → logprob: -13.875019073486328
    5. '=' → logprob: -14.250019073486328
    6. 'ify' → logprob: -14.500019073486328
    7. ')' → logprob: -15.000019073486328
    8. 'i' → logprob: -15.125019073486328
    9. 'u' → logprob: -15.250019073486328
    10. 'p' → logprob: -15.500019073486328

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5876707434654236
    2. '
' → logprob: -1.4626708030700684
    3. '\n' → logprob: -2.0876708030700684
    4. '\' → logprob: -3.0876708030700684
    5. '<|end|>' → logprob: -4.337670803070068
    6. '

' → logprob: -4.962670803070068
    7. '```' → logprob: -5.587670803070068
    8. 'import' → logprob: -5.587670803070068
    9. '.
' → logprob: -5.587670803070068
    10. '' → logprob: -5.587670803070068

Token 7: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2674379050731659
    2. '
' → logprob: -2.1424379348754883
    3. '\' → logprob: -2.5174379348754883
    4. '' → logprob: -4.892437934875488
    5. '

' → logprob: -5.142437934875488
    6. '```' → logprob: -5.142437934875488
    7. '.' → logprob: -5.267437934875488
    8. 'def' → logprob: -5.642437934875488
    9. 'import' → logprob: -6.142437934875488
    10. '<|end|>' → logprob: -6.392437934875488

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005128088407218456
    2. '.' → logprob: -5.380127906799316
    3. ' (' → logprob: -9.255127906799316
    4. '()' → logprob: -9.255127906799316
    5. '```' → logprob: -9.630127906799316
    6. ')' → logprob: -9.755127906799316
    7. '=' → logprob: -10.005127906799316
    8. '[' → logprob: -10.505127906799316
    9. '(
' → logprob: -10.755127906799316
    10. ' =' → logprob: -11.005127906799316

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6935389041900635
    2. 'sys' → logprob: -0.6935389041900635
    3. 'input' → logprob: -8.068538665771484
    4. ' input' → logprob: -9.818538665771484
    5. '	sys' → logprob: -11.193538665771484
    6. '=sys' → logprob: -11.818538665771484
    7. '(sys' → logprob: -13.068538665771484
    8. 'lambda' → logprob: -15.818538665771484
    9. '_sys' → logprob: -15.943538665771484
    10. '```' → logprob: -16.193538665771484

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5873874425888062
    2. '.stdin' → logprob: -0.8373874425888062
    3. ' .' → logprob: -4.962387561798096
    4. '.stdout' → logprob: -6.212387561798096
    5. '.argv' → logprob: -6.962387561798096
    6. '.readline' → logprob: -7.212387561798096
    7. '.input' → logprob: -8.337387084960938
    8. '.path' → logprob: -8.962387084960938
    9. '.import' → logprob: -9.462387084960938
    10. '.exit' → logprob: -10.087387084960938

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004620122257620096
    2. '.read' → logprob: -5.62962007522583
    3. '.' → logprob: -7.00462007522583
    4. '.buffer' → logprob: -9.504620552062988
    5. '.readlines' → logprob: -10.629620552062988
    6. 'read' → logprob: -11.879620552062988
    7. '```' → logprob: -13.129620552062988
    8. 'buffer' → logprob: -13.879620552062988
    9. ' .' → logprob: -14.379620552062988
    10. '.Read' → logprob: -14.504620552062988

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6588048338890076
    2. '(' → logprob: -0.7838048338890076
    3. '(
' → logprob: -4.408804893493652
    4. '()
' → logprob: -5.158804893493652
    5. '()\' → logprob: -6.033804893493652
    6. '()

' → logprob: -6.783804893493652
    7. '
' → logprob: -7.033804893493652
    8. ')' → logprob: -7.533804893493652
    9. 'def' → logprob: -7.658804893493652
    10. '(n' → logprob: -7.783804893493652

Token 13: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5480471849441528
    2. 'def' → logprob: -1.2980471849441528
    3. 'n' → logprob: -2.6730470657348633
    4. '(n' → logprob: -3.1730470657348633
    5. '()' → logprob: -3.5480470657348633
    6. 'd' → logprob: -6.548047065734863
    7. '(
' → logprob: -6.673047065734863
    8. 'k' → logprob: -6.798047065734863
    9. 'for' → logprob: -6.798047065734863
    10. 's' → logprob: -7.173047065734863

Token 14: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9228391051292419
    2. ' ' → logprob: -1.0478391647338867
    3. ',' → logprob: -1.9228391647338867
    4. '=' → logprob: -2.4228391647338867
    5. '<|end|>' → logprob: -5.297839164733887
    6. ')' → logprob: -5.422839164733887
    7. ' ,' → logprob: -5.422839164733887
    8. '[' → logprob: -7.172839164733887
    9. '  ' → logprob: -7.422839164733887
    10. ' )' → logprob: -7.547839164733887

Token 15: ',K' (ID: 107147)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05609225109219551
    2. '=' → logprob: -3.0560922622680664
    3. ' ' → logprob: -5.306092262268066
    4. ' ,' → logprob: -6.681092262268066
    5. ',' → logprob: -6.806092262268066
    6. ' =
' → logprob: -8.931092262268066
    7. ')' → logprob: -12.306092262268066
    8. ' =",' → logprob: -12.806092262268066
    9. ' ='' → logprob: -13.181092262268066
    10. ' =[' → logprob: -13.306092262268066

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17998641729354858
    2. '=' → logprob: -1.8049864768981934
    3. ',' → logprob: -9.054986000061035
    4. ' =
' → logprob: -9.429986000061035
    5. ' ' → logprob: -10.304986000061035
    6. ' ,' → logprob: -12.179986000061035
    7. ' =[' → logprob: -13.304986000061035
    8. '=
' → logprob: -14.054986000061035
    9. '=

' → logprob: -14.054986000061035
    10. ' =
' → logprob: -14.304986000061035

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008633122779428959
    2. 'map' → logprob: -4.758633136749268
    3. ' list' → logprob: -11.00863265991211
    4. ' ' → logprob: -14.13363265991211
    5. 'list' → logprob: -14.63363265991211
    6. ' tuple' → logprob: -15.50863265991211
    7. '	map' → logprob: -15.50863265991211
    8. '0' → logprob: -15.75863265991211
    9. ' input' → logprob: -15.88363265991211
    10. '(map' → logprob: -16.50863265991211

Token 18: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5096525549888611
    2. '(int' → logprob: -1.0096526145935059
    3. '(lambda' → logprob: -3.509652614593506
    4. '(str' → logprob: -5.509652614593506
    5. '(input' → logprob: -7.634652614593506
    6. '(len' → logprob: -8.884652137756348
    7. '(tuple' → logprob: -9.384652137756348
    8. '(eval' → logprob: -10.384652137756348
    9. '(`' → logprob: -10.509652137756348
    10. '(
' → logprob: -10.634652137756348

Token 19: ',input' (ID: 123014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7149233818054199
    2. ',' → logprob: -0.7149233818054199
    3. ')' → logprob: -4.33992338180542
    4. '(input' → logprob: -5.96492338180542
    5. ',input' → logprob: -6.21492338180542
    6. '(int' → logprob: -6.33992338180542
    7. ',int' → logprob: -6.96492338180542
    8. '(sys' → logprob: -8.089923858642578
    9. ' ,' → logprob: -9.089923858642578
    10. '),' → logprob: -9.464923858642578

Token 20: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4837430715560913
    2. '()' → logprob: -1.1087430715560913
    3. '().' → logprob: -3.108743190765381
    4. '(' → logprob: -5.608743190765381
    5. ')' → logprob: -6.233743190765381
    6. '()))' → logprob: -6.733743190765381
    7. '('' → logprob: -6.983743190765381
    8. '(),' → logprob: -7.983743190765381
    9. '()),' → logprob: -8.358742713928223
    10. '());' → logprob: -8.733742713928223

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000455340719781816
    2. 'strip' → logprob: -7.750455379486084
    3. 'rstrip' → logprob: -10.625454902648926
    4. ' split' → logprob: -15.500454902648926
    5. '(split' → logprob: -16.000455856323242
    6. ')' → logprob: -17.750455856323242
    7. 'spl' → logprob: -18.250455856323242
    8. 'read' → logprob: -18.750455856323242
    9. '_split' → logprob: -19.250455856323242
    10. '```' → logprob: -19.375455856323242

Token 22: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013333676906768233
    2. '))' → logprob: -9.875133514404297
    3. '())' → logprob: -10.250133514404297
    4. '()' → logprob: -10.500133514404297
    5. '(' → logprob: -11.250133514404297
    6. '),' → logprob: -13.375133514404297
    7. ')`' → logprob: -13.750133514404297
    8. '`)' → logprob: -14.125133514404297
    9. '')' → logprob: -14.250133514404297
    10. ' )' → logprob: -15.000133514404297

Token 23: 'edges' (ID: 39127)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.004781723022461
    2. 'graph' → logprob: -1.129781723022461
    3. 'dist' → logprob: -2.004781723022461
    4. ' 
' → logprob: -2.379781723022461
    5. 'distance' → logprob: -3.629781723022461
    6. ' graph' → logprob: -4.504781723022461
    7. '  
' → logprob: -4.754781723022461
    8. '
' → logprob: -4.879781723022461
    9. 'edges' → logprob: -5.504781723022461
    10. 'd' → logprob: -5.629781723022461

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022703970316797495
    2. '=' → logprob: -6.252270221710205
    3. '[' → logprob: -8.252270698547363
    4. ' ' → logprob: -11.127270698547363
    5. '[]' → logprob: -11.252270698547363
    6. ',' → logprob: -11.502270698547363
    7. '[:]' → logprob: -11.502270698547363
    8. '.' → logprob: -11.627270698547363
    9. '=[]' → logprob: -12.252270698547363
    10. ')' → logprob: -12.252270698547363

Token 25: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20185942947864532
    2. '[' → logprob: -1.701859474182129
    3. ' [[]' → logprob: -8.451859474182129
    4. ' []' → logprob: -9.576859474182129
    5. 'default' → logprob: -9.701859474182129
    6. '{}' → logprob: -9.826859474182129
    7. '[][]' → logprob: -11.076859474182129
    8. '{' → logprob: -11.576859474182129
    9. '[]
' → logprob: -12.076859474182129
    10. '[int' → logprob: -12.326859474182129

Token 26: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005769872572273016
    2. '()' → logprob: -5.755769729614258
    3. 'for' → logprob: -7.630769729614258
    4. ']' → logprob: -7.755769729614258
    5. '(N' → logprob: -7.755769729614258
    6. '(
' → logprob: -7.880769729614258
    7. ' for' → logprob: -7.880769729614258
    8. ')' → logprob: -8.505769729614258
    9. ' (' → logprob: -9.755769729614258
    10. ',' → logprob: -10.005769729614258

Token 27: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14721627533435822
    2. ' range' → logprob: -2.397216320037842
    3. ' _' → logprob: -3.147216320037842
    4. 'range' → logprob: -6.647216320037842
    5. ' ' → logprob: -6.897216320037842
    6. ' i' → logprob: -7.772216320037842
    7. ' in' → logprob: -9.522215843200684
    8. '_range' → logprob: -10.022215843200684
    9. '(' → logprob: -10.272215843200684
    10. '(range' → logprob: -10.522215843200684

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28337594866752625
    2. 'in' → logprob: -1.4083759784698486
    3. 'range' → logprob: -6.1583757400512695
    4. ' range' → logprob: -9.90837574005127
    5. '(N' → logprob: -11.03337574005127
    6. '(' → logprob: -11.90837574005127
    7. '(n' → logprob: -12.28337574005127
    8. '0' → logprob: -12.28337574005127
    9. 'N' → logprob: -12.65837574005127
    10. 'i' → logprob: -12.65837574005127

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859248176217079
    2. ' range' → logprob: -3.0485925674438477
    3. '(range' → logprob: -12.173592567443848
    4. '	range' → logprob: -17.92359161376953
    5. ' ' → logprob: -20.54859161376953
    6. '   ' → logprob: -20.67359161376953
    7. '(N' → logprob: -21.04859161376953
    8. '_range' → logprob: -21.29859161376953
    9. '.range' → logprob: -21.29859161376953
    10. 'rang' → logprob: -21.54859161376953

Token 30: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -10.62502670288086
    3. '(n' → logprob: -13.87502670288086
    4. '(M' → logprob: -14.75002670288086
    5. 'N' → logprob: -14.87502670288086
    6. '(K' → logprob: -15.75002670288086
    7. '((' → logprob: -16.50002670288086
    8. ' (' → logprob: -17.75002670288086
    9. ')(' → logprob: -19.12502670288086
    10. ')' → logprob: -19.25002670288086

Token 31: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.9743012671824545e-05
    2. ')' → logprob: -11.000020027160645
    3. ']' → logprob: -14.000020027160645
    4. ' )' → logprob: -14.125020027160645
    5. ')])' → logprob: -15.125020027160645
    6. ')],' → logprob: -15.125020027160645
    7. '+' → logprob: -15.250020027160645
    8. ')]
' → logprob: -15.500020027160645
    9. '')]' → logprob: -16.250019073486328
    10. '))' → logprob: -16.375019073486328

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -15.12500286102295
    4. '```' → logprob: -17.625003814697266
    5. 'M' → logprob: -19.500003814697266
    6. '(' → logprob: -19.500003814697266
    7. '7' → logprob: -19.875003814697266
    8. '0' → logprob: -19.875003814697266
    9. '   ' → logprob: -20.125003814697266
    10. '3' → logprob: -20.125003814697266

Token 33: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.08701572567224503
    2. ']' → logprob: -2.5870156288146973
    3. ')' → logprob: -4.837015628814697
    4. '])' → logprob: -8.837016105651855
    5. '])]' → logprob: -11.587016105651855
    6. ')])' → logprob: -12.337016105651855
    7. ')],' → logprob: -13.587016105651855
    8. ' ]' → logprob: -14.712016105651855
    9. '`]' → logprob: -15.587016105651855
    10. ']
' → logprob: -15.587016105651855

Token 34: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012821101699955761
    2. ' for' → logprob: -9.000127792358398
    3. '
' → logprob: -12.625127792358398
    4. '```' → logprob: -13.500127792358398
    5. 'For' → logprob: -17.0001277923584
    6. '	for' → logprob: -17.2501277923584
    7. '\n' → logprob: -17.5001277923584
    8. '
' → logprob: -18.0001277923584
    9. '' → logprob: -18.2501277923584
    10. '\' → logprob: -18.2501277923584

Token 35: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12775631248950958
    2. '_' → logprob: -2.127756357192993
    3. ' i' → logprob: -7.127756118774414
    4. ' ' → logprob: -11.502756118774414
    5. ' range' → logprob: -11.627756118774414
    6. '_i' → logprob: -13.377756118774414
    7. ' ' → logprob: -13.627756118774414
    8. 'i' → logprob: -13.752756118774414
    9. ' ‌' → logprob: -13.752756118774414
    10. ' ▁' → logprob: -14.377756118774414

Token 36: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6331031322479248
    2. ' in' → logprob: -0.7581031322479248
    3. 'n' → logprob: -8.508103370666504
    4. 'i' → logprob: -9.133103370666504
    5. '_' → logprob: -9.383103370666504
    6. ' ' → logprob: -9.508103370666504
    7. ' i' → logprob: -11.508103370666504
    8. ',' → logprob: -12.383103370666504
    9. 'range' → logprob: -12.758103370666504
    10. '	in' → logprob: -13.133103370666504

Token 37: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014171505346894264
    2. ' range' → logprob: -4.264171600341797
    3. '(range' → logprob: -11.764171600341797
    4. '	range' → logprob: -15.764171600341797
    5. '```' → logprob: -17.139171600341797
    6. 'input' → logprob: -17.639171600341797
    7. 'ange' → logprob: -18.014171600341797
    8. ' xrange' → logprob: -18.264171600341797
    9. 'int' → logprob: -18.514171600341797
    10. ')' → logprob: -18.514171600341797

Token 38: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.1839265674352646
    2. '(' → logprob: -1.8089265823364258
    3. ' (' → logprob: -5.558926582336426
    4. ' M' → logprob: -8.933926582336426
    5. '(int' → logprob: -9.683926582336426
    6. '(N' → logprob: -9.933926582336426
    7. '(K' → logprob: -10.558926582336426
    8. '(
' → logprob: -10.933926582336426
    9. 'M' → logprob: -11.308926582336426
    10. '()' → logprob: -11.683926582336426

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000609271228313446
    2. '):
' → logprob: -7.750609397888184
    3. ' ):' → logprob: -8.875609397888184
    4. ')' → logprob: -10.250609397888184
    5. ':' → logprob: -13.125609397888184
    6. '):
' → logprob: -14.500609397888184
    7. ',' → logprob: -15.250609397888184
    8. '):

' → logprob: -16.375608444213867
    9. ' ):
' → logprob: -16.500608444213867
    10. ' )' → logprob: -16.875608444213867

Token 40: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.4010898768901825
    2. '   ' → logprob: -1.6510899066925049
    3. ' 
' → logprob: -2.901089906692505
    4. '```' → logprob: -3.401089906692505
    5. 'u' → logprob: -3.526089906692505
    6. 'a' → logprob: -5.276089668273926
    7. '    
' → logprob: -5.526089668273926
    8. ' a' → logprob: -5.776089668273926
    9. ' ```' → logprob: -6.526089668273926
    10. ' s' → logprob: -6.526089668273926

Token 41: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12913566827774048
    2. 'a' (adapté à ' a') → logprob: -2.1291356086730957
    3. ' u' → logprob: -6.379135608673096
    4. 's' → logprob: -8.129136085510254
    5. 'U' → logprob: -9.379136085510254
    6. ' a' → logprob: -9.629136085510254
    7. 'x' → logprob: -10.754136085510254
    8. 'A' → logprob: -11.004136085510254
    9. 'f' → logprob: -11.754136085510254
    10. '```' → logprob: -11.754136085510254

Token 42: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3954901695251465
    2. ',b' → logprob: -1.1454901695251465
    3. ' ,' → logprob: -4.7704901695251465
    4. 'b' → logprob: -9.770490646362305
    5. ' b' → logprob: -10.270490646362305
    6. ',_' → logprob: -12.895490646362305
    7. ',d' → logprob: -13.020490646362305
    8. ',int' → logprob: -13.895490646362305
    9. ',B' → logprob: -14.020490646362305
    10. ',input' → logprob: -14.020490646362305

Token 43: ',l' (ID: 45198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00998945627361536
    2. '=' → logprob: -5.509989261627197
    3. ' ,' → logprob: -6.509989261627197
    4. ',input' → logprob: -6.634989261627197
    5. ' =' → logprob: -6.884989261627197
    6. ',v' → logprob: -7.884989261627197
    7. ',a' → logprob: -8.509989738464355
    8. ',int' → logprob: -8.634989738464355
    9. ',value' → logprob: -8.884989738464355
    10. ',k' → logprob: -9.009989738464355

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009349246975034475
    2. ' =' → logprob: -7.000935077667236
    3. '=input' → logprob: -11.250934600830078
    4. ',' → logprob: -12.750934600830078
    5. '=int' → logprob: -12.750934600830078
    6. '=line' → logprob: -13.625934600830078
    7. '=edge' → logprob: -14.000934600830078
    8. 'ength' → logprob: -14.250934600830078
    9. '=len' → logprob: -15.375934600830078
    10. '=end' → logprob: -15.500934600830078

Token 45: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.061973292380571365
    2. 'map' → logprob: -2.8119733333587646
    3. '	map' → logprob: -12.811973571777344
    4. ' ' → logprob: -13.061973571777344
    5. '(map' → logprob: -15.686973571777344
    6. ' ' → logprob: -15.811973571777344
    7. '```' → logprob: -15.936973571777344
    8. 'm' → logprob: -15.936973571777344
    9. '   ' → logprob: -16.311973571777344
    10. ' list' → logprob: -16.686973571777344

Token 46: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.632542913896032e-05
    2. '(' → logprob: -10.375046730041504
    3. '(lambda' → logprob: -11.875046730041504
    4. '(str' → logprob: -12.875046730041504
    5. '<int' → logprob: -13.125046730041504
    6. '[int' → logprob: -13.625046730041504
    7. '=int' → logprob: -13.875046730041504
    8. 'int' → logprob: -14.625046730041504
    9. ',int' → logprob: -15.250046730041504
    10. ' (' → logprob: -15.250046730041504

Token 47: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.011950762942433357
    2. ',' → logprob: -4.511950969696045
    3. ',int' → logprob: -7.261950969696045
    4. '(input' → logprob: -8.886950492858887
    5. '(' → logprob: -10.386950492858887
    6. ',line' → logprob: -11.636950492858887
    7. 'input' → logprob: -11.761950492858887
    8. ',(' → logprob: -12.636950492858887
    9. ' ,' → logprob: -13.261950492858887
    10. ',float' → logprob: -13.636950492858887

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '()' → logprob: -13.50000286102295
    3. '.' → logprob: -14.25000286102295
    4. ')' → logprob: -15.37500286102295
    5. '.readline' → logprob: -15.50000286102295
    6. ' ().' → logprob: -17.125001907348633
    7. '.split' → logprob: -18.375001907348633
    8. ').' → logprob: -18.500001907348633
    9. '()-' → logprob: -18.750001907348633
    10. '(' → logprob: -18.750001907348633

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. 'strip' → logprob: -17.125
    3. 'spl' → logprob: -17.375
    4. ' split' → logprob: -17.75
    5. '(split' → logprob: -18.625
    6. 'plit' → logprob: -19.375
    7. 'rstrip' → logprob: -19.625
    8. ')' → logprob: -20.875
    9. 'sp' → logprob: -21.375
    10. '.split' → logprob: -21.5

Token 50: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022296691895462573
    2. ')
' → logprob: -8.500223159790039
    3. '))' → logprob: -12.250223159790039
    4. '()' → logprob: -12.375223159790039
    5. '`)' → logprob: -12.375223159790039
    6. '())' → logprob: -13.125223159790039
    7. ' )' → logprob: -13.250223159790039
    8. '')' → logprob: -14.250223159790039
    9. '   ' → logprob: -14.875223159790039
    10. ')`' → logprob: -15.125223159790039

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6918722987174988
    2. 'edges' → logprob: -0.8168722987174988
    3. ' edges' → logprob: -3.1918723583221436
    4. '<|end|>' → logprob: -4.8168721199035645
    5. '
' → logprob: -5.9418721199035645
    6. '(edges' → logprob: -6.3168721199035645
    7. '```' → logprob: -6.8168721199035645
    8. '.edges' → logprob: -7.4418721199035645
    9. '_edges' → logprob: -7.4418721199035645
    10. '    
' → logprob: -7.5668721199035645

Token 52: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.12718626856803894
    2. ' edges' → logprob: -2.1271862983703613
    3. '.edges' → logprob: -9.252185821533203
    4. '(edges' → logprob: -9.377185821533203
    5. '_edges' → logprob: -10.377185821533203
    6. '   ' → logprob: -10.752185821533203
    7. '
' → logprob: -12.127185821533203
    8. '```' → logprob: -12.127185821533203
    9. ')
' → logprob: -13.127185821533203
    10. 'Edges' → logprob: -13.252185821533203

Token 53: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.7697225252486533e-06
    2. '[b' → logprob: -12.750003814697266
    3. '[' → logprob: -14.250003814697266
    4. 'a' → logprob: -16.250003814697266
    5. ' [' → logprob: -17.125003814697266
    6. '```' → logprob: -18.500003814697266
    7. '[A' → logprob: -19.750003814697266
    8. '\[' → logprob: -19.750003814697266
    9. '   ' → logprob: -20.625003814697266
    10. '[u' → logprob: -20.875003814697266

Token 54: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05348169431090355
    2. '.append' → logprob: -3.6784815788269043
    3. ').' → logprob: -4.053481578826904
    4. '.' → logprob: -4.678481578826904
    5. '[' → logprob: -9.678482055664062
    6. ']' → logprob: -11.178482055664062
    7. '   ' → logprob: -11.178482055664062
    8. ' ].' → logprob: -11.303482055664062
    9. '.app' → logprob: -11.303482055664062
    10. ' .' → logprob: -11.428482055664062

Token 55: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. 'push' → logprob: -15.125000953674316
    3. '.append' → logprob: -15.750000953674316
    4. 'app' → logprob: -16.125
    5. ' append' → logprob: -17.0
    6. 'appen' → logprob: -17.5
    7. ' ' → logprob: -18.375
    8. 'add' → logprob: -19.625
    9. 'heap' → logprob: -20.0
    10. 'appe' → logprob: -20.25

Token 56: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01917596347630024
    2. '(' → logprob: -4.019176006317139
    3. '(b' → logprob: -6.894176006317139
    4. '(B' → logprob: -11.89417552947998
    5. ' (' → logprob: -13.01917552947998
    6. '([' → logprob: -13.39417552947998
    7. '(
' → logprob: -14.64417552947998
    8. '(('' → logprob: -15.76917552947998
    9. '```' → logprob: -16.269176483154297
    10. '(a' → logprob: -16.519176483154297

Token 57: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019289902411401272
    2. ' b' → logprob: -6.251928806304932
    3. ')b' → logprob: -15.25192928314209
    4. 'l' → logprob: -15.75192928314209
    5. ' ' → logprob: -17.626928329467773
    6. '   ' → logprob: -18.376928329467773
    7. ',b' → logprob: -18.626928329467773
    8. '	b' → logprob: -18.751928329467773
    9. '```' → logprob: -18.751928329467773
    10. ' l' → logprob: -19.126928329467773

Token 58: ',l' (ID: 45198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5771750211715698
    2. ',l' → logprob: -0.8271750211715698
    3. ' ,' → logprob: -6.702175140380859
    4. ',ll' → logprob: -13.07717514038086
    5. ',length' → logprob: -14.07717514038086
    6. 'l' → logprob: -14.20217514038086
    7. ',len' → logprob: -14.57717514038086
    8. ',n' → logprob: -14.70217514038086
    9. ',L' → logprob: -15.07717514038086
    10. ' l' → logprob: -15.32717514038086

Token 59: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008287250995635986
    2. ',' → logprob: -4.88328742980957
    3. ' ))' → logprob: -8.00828742980957
    4. ')' → logprob: -8.13328742980957
    5. '))
' → logprob: -10.88328742980957
    6. '),' → logprob: -11.00828742980957
    7. ')))' → logprob: -12.00828742980957
    8. ' ,' → logprob: -12.63328742980957
    9. ')),' → logprob: -13.00828742980957
    10. '   ' → logprob: -13.25828742980957

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5195630192756653
    2. '<|end|>' → logprob: -1.1445629596710205
    3. 'edges' → logprob: -2.6445629596710205
    4. ' edges' → logprob: -4.6445631980896
    5. '<|end|>' → logprob: -6.3945631980896
    6. '```' → logprob: -7.0195631980896
    7. ')' → logprob: -7.0195631980896
    8. '(edges' → logprob: -7.2695631980896
    9. ',' → logprob: -7.5195631980896
    10. '
' → logprob: -7.6445631980896

Token 61: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.01776367612183094
    2. ' edges' → logprob: -4.517763614654541
    3. '   ' → logprob: -5.017763614654541
    4. '(edges' → logprob: -10.5177640914917
    5. '<|end|>' → logprob: -10.6427640914917
    6. '.edges' → logprob: -11.3927640914917
    7. ' ' → logprob: -12.8927640914917
    8. '_edges' → logprob: -13.1427640914917
    9. '  ' → logprob: -13.1427640914917
    10. 'Edges' → logprob: -13.8927640914917

Token 62: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.4259644558478612e-05
    2. '[a' → logprob: -11.500014305114746
    3. '[' → logprob: -12.875014305114746
    4. 'b' → logprob: -13.875014305114746
    5. ' [' → logprob: -15.250014305114746
    6. '[s' → logprob: -16.37501335144043
    7. '[B' → logprob: -16.62501335144043
    8. '[c' → logprob: -17.62501335144043
    9. '```' → logprob: -17.75001335144043
    10. '}[' → logprob: -18.25001335144043

Token 63: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.10187152028083801
    2. '].' → logprob: -2.6018714904785156
    3. '.append' → logprob: -3.9768714904785156
    4. '.' → logprob: -5.601871490478516
    5. '}.' → logprob: -8.851871490478516
    6. ' .' → logprob: -10.601871490478516
    7. '   ' → logprob: -10.726871490478516
    8. ' ).' → logprob: -10.726871490478516
    9. '.setdefault' → logprob: -10.976871490478516
    10. ')' → logprob: -11.476871490478516

Token 64: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.1008713702030946e-06
    2. '.append' → logprob: -14.000001907348633
    3. 'appen' → logprob: -14.000001907348633
    4. ' append' → logprob: -15.500001907348633
    5. '	append' → logprob: -16.375001907348633
    6. '_append' → logprob: -17.500001907348633
    7. 'app' → logprob: -17.875001907348633
    8. '```' → logprob: -18.875001907348633
    9. 'prepend' → logprob: -19.000001907348633
    10. 'Append' → logprob: -19.000001907348633

Token 65: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.56233171664644e-05
    2. '(' → logprob: -10.000055313110352
    3. ' ((' → logprob: -11.875055313110352
    4. ' (' → logprob: -13.000055313110352
    5. '<|end|>' → logprob: -14.375055313110352
    6. '(
' → logprob: -15.500055313110352
    7. ' ' → logprob: -16.62505531311035
    8. ')((' → logprob: -17.00005531311035
    9. '```' → logprob: -17.62505531311035
    10. '>((' → logprob: -17.75005531311035

Token 66: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.042772166430950165
    2. 'a' → logprob: -3.292772054672241
    3. ' (' → logprob: -5.41777229309082
    4. ',a' → logprob: -8.79277229309082
    5. ' a' → logprob: -9.29277229309082
    6. ',' → logprob: -10.91777229309082
    7. '(' → logprob: -12.29277229309082
    8. '   ' → logprob: -12.79277229309082
    9. '[a' → logprob: -12.91777229309082
    10. '```' → logprob: -13.54277229309082

Token 67: ',l' (ID: 45198)
  Prédit: ',l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',l' → logprob: -0.04308323189616203
    2. ',' → logprob: -3.1680831909179688
    3. ' ,' → logprob: -9.418083190917969
    4. ',ll' → logprob: -13.418083190917969
    5. 'l' → logprob: -15.918083190917969
    6. ',b' → logprob: -16.16808319091797
    7. ' l' → logprob: -16.41808319091797
    8. ',n' → logprob: -16.41808319091797
    9. ',len' → logprob: -16.41808319091797
    10. ' ' → logprob: -16.41808319091797

Token 68: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10021184384822845
    2. '))' → logprob: -2.3502118587493896
    3. ')))' → logprob: -13.225212097167969
    4. ' )' → logprob: -13.475212097167969
    5. ')
' → logprob: -13.850212097167969
    6. ' ))' → logprob: -14.975212097167969
    7. '   ' → logprob: -15.225212097167969
    8. ')}' → logprob: -15.600212097167969
    9. '),' → logprob: -15.975212097167969
    10. '))
' → logprob: -16.10021209716797

Token 69: 'm' (ID: 76)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10598789900541306
    2. '
' → logprob: -2.480987787246704
    3. 'import' → logprob: -4.855988025665283
    4. 'distance' → logprob: -4.980988025665283
    5. 'dp' → logprob: -7.105988025665283
    6. '
' → logprob: -8.230987548828125
    7. 'heap' → logprob: -8.605987548828125
    8. 'Q' → logprob: -8.605987548828125
    9. 'pq' → logprob: -8.605987548828125
    10. 'q' → logprob: -8.980987548828125

Token 70: 'alls' (ID: 6539)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5619253516197205
    2. 'i' → logprob: -1.6869254112243652
    3. 'ax' → logprob: -1.9369254112243652
    4. 'q' → logprob: -3.9369254112243652
    5. 'a' → logprob: -4.436925411224365
    6. 'e' → logprob: -4.686925411224365
    7. 'y' → logprob: -4.811925411224365
    8. 'p' → logprob: -4.936925411224365
    9. 'em' → logprob: -5.061925411224365
    10. 'u' → logprob: -5.311925411224365

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045176222920417786
    2. '=' → logprob: -3.1701762676239014
    3. '_' → logprob: -7.045176029205322
    4. ',' → logprob: -8.17017650604248
    5. 's' → logprob: -8.17017650604248
    6. '[' → logprob: -8.54517650604248
    7. '=[]' → logprob: -8.67017650604248
    8. ')' → logprob: -9.42017650604248
    9. '_locations' → logprob: -9.79517650604248
    10. ']' → logprob: -10.17017650604248

Token 72: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.3924983739852905
    2. 'list' → logprob: -1.3924983739852905
    3. '[]' → logprob: -1.5174983739852905
    4. ' []' → logprob: -1.5174983739852905
    5. ' [' → logprob: -3.89249849319458
    6. '[list' → logprob: -4.01749849319458
    7. '[' → logprob: -4.51749849319458
    8. 'set' → logprob: -4.64249849319458
    9. ' set' → logprob: -5.51749849319458
    10. '[int' → logprob: -7.26749849319458

Token 73: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47788897156715393
    2. 'int' → logprob: -1.2278889417648315
    3. ']' → logprob: -3.227889060974121
    4. 'False' → logprob: -3.602889060974121
    5. ']int' → logprob: -4.102889060974121
    6. '(int' → logprob: -6.977889060974121
    7. ' int' → logprob: -7.102889060974121
    8. ' ]' → logprob: -8.227889060974121
    9. ']*' → logprob: -8.352889060974121
    10. 'i' → logprob: -8.477889060974121

Token 74: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13322515785694122
    2. '(' → logprob: -2.133225202560425
    3. '(x' → logprob: -5.133224964141846
    4. '(
' → logprob: -9.383225440979004
    5. ' (' → logprob: -9.508225440979004
    6. '()' → logprob: -9.883225440979004
    7. '(i' → logprob: -10.133225440979004
    8. '(inp' → logprob: -10.633225440979004
    9. '(

' → logprob: -10.758225440979004
    10. '(in' → logprob: -10.883225440979004

Token 75: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004660692065954208
    2. '()' → logprob: -5.504660606384277
    3. '()]' → logprob: -8.004660606384277
    4. ')' → logprob: -9.004660606384277
    5. '().' → logprob: -9.504660606384277
    6. ' ())' → logprob: -11.004660606384277
    7. '())
' → logprob: -11.254660606384277
    8. '()
' → logprob: -12.129660606384277
    9. '(' → logprob: -12.129660606384277
    10. '()),' → logprob: -13.254660606384277

Token 76: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18251276016235352
    2. ')' → logprob: -1.9325127601623535
    3. '()]' → logprob: -4.4325127601623535
    4. ')]' → logprob: -5.5575127601623535
    5. 'for' → logprob: -5.9325127601623535
    6. ']' → logprob: -6.6825127601623535
    7. '())' → logprob: -7.0575127601623535
    8. ' for' → logprob: -7.1825127601623535
    9. '(' → logprob: -7.8075127601623535
    10. ' ()' → logprob: -9.182512283325195

Token 77: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005288423039019108
    2. 'range' → logprob: -5.255288600921631
    3. '_' → logprob: -9.880288124084473
    4. '_range' → logprob: -13.255288124084473
    5. ' _' → logprob: -13.880288124084473
    6. ' in' → logprob: -14.380288124084473
    7. '(range' → logprob: -16.00528907775879
    8. '	range' → logprob: -16.25528907775879
    9. ' ' → logprob: -17.00528907775879
    10. ' xrange' → logprob: -18.63028907775879

Token 78: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008086714660748839
    2. ' range' → logprob: -7.1258087158203125
    3. ' ' → logprob: -13.750808715820312
    4. '(range' → logprob: -14.125808715820312
    5. 'in' → logprob: -14.500808715820312
    6. '  ' → logprob: -14.750808715820312
    7. 'ran' → logprob: -15.000808715820312
    8. '	range' → logprob: -15.125808715820312
    9. 'r' → logprob: -15.250808715820312
    10. '   ' → logprob: -15.500808715820312

Token 79: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011706985533237457
    2. ' range' → logprob: -6.751170635223389
    3. '(range' → logprob: -16.126171112060547
    4. '	range' → logprob: -16.376171112060547
    5. ' ' → logprob: -16.501171112060547
    6. 'm' → logprob: -17.001171112060547
    7. '  ' → logprob: -17.126171112060547
    8. '   ' → logprob: -17.251171112060547
    9. 'rang' → logprob: -18.751171112060547
    10. 'ran' → logprob: -18.751171112060547

Token 80: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.004236293025314808
    2. '(M' → logprob: -5.504236221313477
    3. 'K' → logprob: -9.254236221313477
    4. '(' → logprob: -10.254236221313477
    5. 'M' → logprob: -11.629236221313477
    6. ' (' → logprob: -12.004236221313477
    7. 'range' → logprob: -12.504236221313477
    8. '(k' → logprob: -13.004236221313477
    9. '(range' → logprob: -13.504236221313477
    10. ' range' → logprob: -13.754236221313477

Token 81: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0012049926444888115
    2. ']' → logprob: -6.751204967498779
    3. ')' → logprob: -10.376205444335938
    4. '])' → logprob: -13.626205444335938
    5. '])]' → logprob: -14.251205444335938
    6. ')],' → logprob: -14.751205444335938
    7. ')]
' → logprob: -15.376205444335938
    8. ' ]' → logprob: -15.501205444335938
    9. ')])' → logprob: -15.626205444335938
    10. '')]' → logprob: -15.626205444335938

Token 82: 'INF' (ID: 64358)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1349841207265854
    2. 'distance' → logprob: -2.259984016418457
    3. 'visited' → logprob: -4.259984016418457
    4. 'dp' → logprob: -6.009984016418457
    5. 'import' → logprob: -6.259984016418457
    6. 'INF' → logprob: -7.259984016418457
    7. 'answer' → logprob: -8.009984016418457
    8. '
' → logprob: -8.009984016418457
    9. 'min' → logprob: -8.009984016418457
    10. 'max' → logprob: -8.134984016418457

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008046258008107543
    2. '=' → logprob: -7.125804424285889
    3. '=int' → logprob: -16.500804901123047
    4. ' =
' → logprob: -16.750804901123047
    5. ' ' → logprob: -17.000804901123047
    6. ')' → logprob: -17.750804901123047
    7. ' ' → logprob: -18.250804901123047
    8. '＝' → logprob: -18.875804901123047
    9. ' =)' → logprob: -19.125804901123047
    10. ',' → logprob: -19.250804901123047

Token 84: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.13750320672988892
    2. ' ' → logprob: -2.262503147125244
    3. 'float' → logprob: -4.012503147125244
    4. ' float' → logprob: -5.387503147125244
    5. 'int' → logprob: -6.512503147125244
    6. ' int' → logprob: -9.012503623962402
    7. '1' → logprob: -9.887503623962402
    8. '100' → logprob: -10.012503623962402
    9. '987' → logprob: -11.387503623962402
    10. 'sys' → logprob: -14.137503623962402

Token 85: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08377794176340103
    2. 'float' → logprob: -2.583777904510498
    3. 'int' → logprob: -5.333777904510498
    4. '100' → logprob: -10.958778381347656
    5. '1' → logprob: -10.958778381347656
    6. ' float' → logprob: -12.208778381347656
    7. ' ' → logprob: -12.583778381347656
    8. 'sys' → logprob: -12.583778381347656
    9. '987' → logprob: -12.708778381347656
    10. '999' → logprob: -15.333778381347656

Token 86: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07693177461624146
    2. '15' → logprob: -3.0769317150115967
    3. '10' → logprob: -4.326931953430176
    4. '18' → logprob: -4.576931953430176
    5. '12' → logprob: -5.826931953430176
    6. '**' → logprob: -6.951931953430176
    7. '14' → logprob: -7.951931953430176
    8. '13' → logprob: -9.326931953430176
    9. '16' → logprob: -9.951931953430176
    10. '11' → logprob: -10.576931953430176

Token 87: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5914301872253418
    2. '15' → logprob: -0.8414301872253418
    3. '18' → logprob: -4.591430187225342
    4. '10' → logprob: -5.591430187225342
    5. '12' → logprob: -7.091430187225342
    6. '14' → logprob: -7.841430187225342
    7. '16' → logprob: -8.4664306640625
    8. '13' → logprob: -10.3414306640625
    9. '17' → logprob: -10.9664306640625
    10. '11' → logprob: -11.2164306640625

Token 88: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03592719882726669
    2. 'distance' → logprob: -3.4109272956848145
    3. 'dp' → logprob: -6.7859272956848145
    4. '
' → logprob: -7.4109272956848145
    5. 'cost' → logprob: -8.660926818847656
    6. 'd' → logprob: -9.160926818847656
    7. 'import' → logprob: -9.410926818847656
    8. 'dis' → logprob: -10.785926818847656
    9. 'times' → logprob: -11.035926818847656
    10. 'min' → logprob: -11.160926818847656

Token 89: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02095966599881649
    2. 'distance' → logprob: -4.520959854125977
    3. 'dp' → logprob: -5.020959854125977
    4. 'cost' → logprob: -6.520959854125977
    5. 'def' → logprob: -8.395959854125977
    6. 'min' → logprob: -8.520959854125977
    7. 'time' → logprob: -8.645959854125977
    8. 'import' → logprob: -8.770959854125977
    9. 'd' → logprob: -8.770959854125977
    10. 'times' → logprob: -8.895959854125977

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032787215895950794
    2. '=' → logprob: -5.753278732299805
    3. '1' → logprob: -10.128278732299805
    4. '[' → logprob: -10.503278732299805
    5. 's' → logprob: -11.753278732299805
    6. ' =[' → logprob: -11.878278732299805
    7. ',' → logprob: -12.378278732299805
    8. '2' → logprob: -12.878278732299805
    9. '0' → logprob: -12.878278732299805
    10. ' ' → logprob: -13.003278732299805

Token 91: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31384778022766113
    2. '[[' → logprob: -1.3138477802276611
    3. ' [' → logprob: -8.188847541809082
    4. ' [[' → logprob: -8.313847541809082
    5. '[N' → logprob: -11.063847541809082
    6. '[-' → logprob: -11.438847541809082
    7. '[int' → logprob: -12.188847541809082
    8. '[node' → logprob: -12.438847541809082
    9. '[min' → logprob: -12.438847541809082
    10. '[a' → logprob: -12.563847541809082

Token 92: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.22745133936405182
    2. '[' → logprob: -1.6024513244628906
    3. '0' → logprob: -6.477451324462891
    4. '(' → logprob: -8.47745132446289
    5. '(IN' → logprob: -8.72745132446289
    6. ' [' → logprob: -10.47745132446289
    7. ' INF' → logprob: -10.72745132446289
    8. '-INF' → logprob: -11.47745132446289
    9. ']' → logprob: -11.60245132446289
    10. 'inf' → logprob: -11.72745132446289

Token 93: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07125809788703918
    2. ']*(' → logprob: -2.821258068084717
    3. ']*' → logprob: -5.571258068084717
    4. ' for' → logprob: -5.696258068084717
    5. 'for' → logprob: -6.821258068084717
    6. ' ]' → logprob: -7.196258068084717
    7. ',' → logprob: -8.821258544921875
    8. '[' → logprob: -9.821258544921875
    9. ']+' → logprob: -10.821258544921875
    10. '(' → logprob: -12.321258544921875

Token 94: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009368319297209382
    2. '(N' → logprob: -7.000936985015869
    3. ' N' → logprob: -10.750936508178711
    4. '(' → logprob: -13.875936508178711
    5. '	N' → logprob: -14.750936508178711
    6. '1' → logprob: -15.000936508178711
    7. '   ' → logprob: -15.125936508178711
    8. 'K' → logprob: -15.375936508178711
    9. 'len' → logprob: -15.500936508178711
    10. ' (' → logprob: -15.625936508178711

Token 95: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.45848218582978e-06
    2. ' +' → logprob: -13.37500286102295
    3. '+
' → logprob: -14.12500286102295
    4. '+)' → logprob: -16.375001907348633
    5. '+

' → logprob: -17.125001907348633
    6. ')' → logprob: -17.500001907348633
    7. '1' → logprob: -17.625001907348633
    8. '＋' → logprob: -18.875001907348633
    9. '+B' → logprob: -19.750001907348633
    10. '```' → logprob: -20.000001907348633

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -15.875000953674316
    4. ')' → logprob: -17.875
    5. '```' → logprob: -17.875
    6. '+' → logprob: -18.125
    7. '１' → logprob: -19.625
    8. '۱' → logprob: -19.6875
    9. '<|end|>' → logprob: -19.75
    10. '১' → logprob: -19.9375

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7729658540920354e-05
    2. ' )' → logprob: -10.750027656555176
    3. ')
' → logprob: -12.250027656555176
    4. ']' → logprob: -15.000027656555176
    5. '),' → logprob: -15.375027656555176
    6. '<|end|>' → logprob: -15.375027656555176
    7. '```' → logprob: -16.125028610229492
    8. ')

' → logprob: -16.125028610229492
    9. '
' → logprob: -16.250028610229492
    10. ',' → logprob: -16.250028610229492

Token 98: 'hq' (ID: 156668)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12701472640037537
    2. 'import' → logprob: -2.252014636993408
    3. 'hq' → logprob: -5.002014636993408
    4. 'heap' → logprob: -5.502014636993408
    5. '0' → logprob: -6.627014636993408
    6. 'from' → logprob: -7.252014636993408
    7. 'q' → logprob: -8.002015113830566
    8. 'queue' → logprob: -8.377015113830566
    9. 'pq' → logprob: -8.502015113830566
    10. 'h' → logprob: -9.127015113830566

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026485493406653404
    2. '=' → logprob: -3.6514854431152344
    3. '.' → logprob: -9.401485443115234
    4. '=[]' → logprob: -9.901485443115234
    5. ' ' → logprob: -10.651485443115234
    6. '<|end|>' → logprob: -11.151485443115234
    7. ',' → logprob: -12.026485443115234
    8. '.append' → logprob: -13.026485443115234
    9. ' =
' → logprob: -14.026485443115234
    10. ')' → logprob: -14.151485443115234

Token 100: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0032966553699225187
    2. '[(' → logprob: -5.753296852111816
    3. '[' → logprob: -9.128296852111816
    4. ' []' → logprob: -12.628296852111816
    5. '[]}' → logprob: -12.878296852111816
    6. '[]
' → logprob: -13.128296852111816
    7. '[]

' → logprob: -14.128296852111816
    8. '[],' → logprob: -14.503296852111816
    9. '[]>' → logprob: -14.878296852111816
    10. '[int' → logprob: -15.878296852111816

Token 101: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7869297862052917
    2. 'dist' → logprob: -0.9119297862052917
    3. '0' → logprob: -2.2869298458099365
    4. 'heap' → logprob: -3.4119298458099365
    5. '=' → logprob: -6.661929607391357
    6. 'import' → logprob: -6.786929607391357
    7. ' for' → logprob: -6.786929607391357
    8. '-' → logprob: -6.786929607391357
    9. '<|end|>' → logprob: -7.161929607391357
    10. '.' → logprob: -7.286929607391357

Token 102: ' m' (ID: 284)
  Prédit: ' mall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mall' → logprob: -0.40102264285087585
    2. ' m' → logprob: -1.5260226726531982
    3. 'm' → logprob: -2.5260226726531982
    4. 'mall' → logprob: -3.6510226726531982
    5. ' i' → logprob: -5.526022434234619
    6. 'i' → logprob: -7.151022434234619
    7. ' ' → logprob: -7.838522434234619
    8. ' x' → logprob: -8.713522911071777
    9. 'k' → logprob: -8.838522911071777
    10. ' s' → logprob: -8.838522911071777

Token 103: ' in' (ID: 306)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.400327205657959
    2. ' in' → logprob: -1.150327205657959
    3. 'in' → logprob: -4.400327205657959
    4. 'alls' → logprob: -7.150327205657959
    5. ' all' → logprob: -9.650327682495117
    6. 'a' → logprob: -9.900327682495117
    7. 'i' → logprob: -10.150327682495117
    8. 's' → logprob: -10.400327682495117
    9. ' ' → logprob: -10.650327682495117
    10. 'al' → logprob: -11.150327682495117

Token 104: ' malls' (ID: 120540)
  Prédit: ' malls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' malls' → logprob: -0.03831057995557785
    2. 'm' → logprob: -3.2883105278015137
    3. 'mals' → logprob: -9.038311004638672
    4. ' mals' → logprob: -9.663311004638672
    5. 'mall' → logprob: -9.913311004638672
    6. ' mall' → logprob: -11.163311004638672
    7. ' range' → logprob: -12.038311004638672
    8. '	m' → logprob: -12.413311004638672
    9. ' ' → logprob: -12.788311004638672
    10. ' m' → logprob: -12.788311004638672

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019364648323971778
    2. ' :' → logprob: -8.75019359588623
    3. ':
' → logprob: -10.62519359588623
    4. '):' → logprob: -11.62519359588623
    5. ':**' → logprob: -14.75019359588623
    6. ':int' → logprob: -15.12519359588623
    7. ',' → logprob: -15.75019359588623
    8. ']:' → logprob: -16.000194549560547
    9. ':h' → logprob: -16.375194549560547
    10. '：' → logprob: -16.375194549560547

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15147171914577484
    2. ' dist' → logprob: -2.6514716148376465
    3. 'dist' → logprob: -2.7764716148376465
    4. '	dist' → logprob: -5.0264716148376465
    5. '_dist' → logprob: -7.9014716148376465
    6. 'Dist' → logprob: -8.026472091674805
    7. '```' → logprob: -9.026472091674805
    8. '(dist' → logprob: -9.026472091674805
    9. ' Dist' → logprob: -9.651472091674805
    10. '.dist' → logprob: -10.151472091674805

Token 107: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.39025014638900757
    2. 'heap' → logprob: -1.1402502059936523
    3. ' dist' → logprob: -6.515250205993652
    4. 'he' → logprob: -7.140250205993652
    5. ' heap' → logprob: -7.140250205993652
    6. '   ' → logprob: -8.265250205993652
    7. 'hq' → logprob: -11.015250205993652
    8. '	dist' → logprob: -12.140250205993652
    9. 'distance' → logprob: -12.265250205993652
    10. '```' → logprob: -12.265250205993652

Token 108: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.250005722045898
    3. 'm' → logprob: -15.375005722045898
    4. ' [' → logprob: -16.0000057220459
    5. '[
' → logprob: -16.2500057220459
    6. '```' → logprob: -17.5000057220459
    7. '[mem' → logprob: -17.7500057220459
    8. '\[' → logprob: -18.1250057220459
    9. '[min' → logprob: -18.2500057220459
    10. '[s' → logprob: -18.8750057220459

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31779488921165466
    2. '=' → logprob: -1.567794919013977
    3. ']=' → logprob: -3.1927947998046875
    4. ' =' → logprob: -3.8177947998046875
    5. ')' → logprob: -8.067794799804688
    6. ' ]' → logprob: -8.567794799804688
    7. ')=' → logprob: -9.317794799804688
    8. ',' → logprob: -9.567794799804688
    9. ' ' → logprob: -10.442794799804688
    10. '   ' → logprob: -12.567794799804688

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324605919420719
    2. ' =' → logprob: -3.7732460498809814
    3. '=int' → logprob: -15.648245811462402
    4. '=
' → logprob: -15.898245811462402
    5. '0' → logprob: -16.52324676513672
    6. '.=' → logprob: -17.14824676513672
    7. '=

' → logprob: -17.27324676513672
    8. ',' → logprob: -17.39824676513672
    9. ' ' → logprob: -17.64824676513672
    10. '＝' → logprob: -17.89824676513672

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '1' → logprob: -16.062501907348633
    4. '۰' → logprob: -17.687501907348633
    5. '-' → logprob: -17.937501907348633
    6. '```' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '00' → logprob: -18.812501907348633
    9. '000' → logprob: -18.812501907348633
    10. '10' → logprob: -19.000001907348633

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '1' → logprob: -16.25
    4. '-' → logprob: -17.9375
    5. '۰' → logprob: -18.5
    6. '   ' → logprob: -19.1875
    7. '(' → logprob: -19.25
    8. '10' → logprob: -19.375
    9. '```' → logprob: -19.4375
    10. '000' → logprob: -19.5625

Token 113: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.22788424789905548
    2. '   ' → logprob: -1.602884292602539
    3. ' heap' → logprob: -6.227884292602539
    4. 'for' → logprob: -8.727884292602539
    5. '```' → logprob: -9.477884292602539
    6. ' for' → logprob: -9.727884292602539
    7. ',' → logprob: -9.977884292602539
    8. 'he' → logprob: -10.727884292602539
    9. '(heap' → logprob: -10.727884292602539
    10. ' ' → logprob: -10.977884292602539

Token 114: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0022426776122301817
    2. '   ' → logprob: -6.752242565155029
    3. ' heap' → logprob: -7.502242565155029
    4. ',' → logprob: -7.752242565155029
    5. 'he' → logprob: -10.627243041992188
    6. ',
' → logprob: -10.877243041992188
    7. '(heap' → logprob: -11.377243041992188
    8. 'for' → logprob: -11.502243041992188
    9. '```' → logprob: -12.002243041992188
    10. '
' → logprob: -12.127243041992188

Token 115: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.0921942703134846e-05
    2. '   ' → logprob: -11.75001049041748
    3. ' heap' → logprob: -13.12501049041748
    4. 'he' → logprob: -14.00001049041748
    5. 'hq' → logprob: -15.62501049041748
    6. '```' → logprob: -18.125011444091797
    7. '    
' → logprob: -18.875011444091797
    8. 'queue' → logprob: -19.250011444091797
    9. '(heap' → logprob: -19.500011444091797
    10. '  ' → logprob: -20.125011444091797

Token 116: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8550976164988242e-05
    2. 'push' → logprob: -11.625018119812012
    3. 'he' → logprob: -12.375018119812012
    4. '.he' → logprob: -12.875018119812012
    5. 'h' → logprob: -13.500018119812012
    6. '.push' → logprob: -14.625018119812012
    7. '```' → logprob: -14.750018119812012
    8. 'p' → logprob: -15.375018119812012
    9. 'hq' → logprob: -15.750018119812012
    10. 'app' → logprob: -16.375019073486328

Token 117: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00325222359970212
    2. '.heap' → logprob: -6.128252029418945
    3. '.' → logprob: -6.878252029418945
    4. '.push' → logprob: -10.378252029418945
    5. '.put' → logprob: -13.003252029418945
    6. '.append' → logprob: -14.253252029418945
    7. '.h' → logprob: -14.628252029418945
    8. '.enqueue' → logprob: -14.878252029418945
    9. ' .' → logprob: -15.128252029418945
    10. '.q' → logprob: -15.253252029418945

Token 118: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.2961512513575144e-05
    2. 'ap' → logprob: -11.500022888183594
    3. 'push' → logprob: -11.875022888183594
    4. 'q' → logprob: -12.500022888183594
    5. 'pp' → logprob: -13.375022888183594
    6. 'p' → logprob: -14.875022888183594
    7. 'appen' → logprob: -17.125022888183594
    8. 'qp' → logprob: -17.375022888183594
    9. '```' → logprob: -17.625022888183594
    10. 'a' → logprob: -17.750022888183594

Token 119: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.2246291337069124e-05
    2. 'op' → logprob: -11.375021934509277
    3. 'push' → logprob: -11.500021934509277
    4. 'uf' → logprob: -15.500021934509277
    5. 'q' → logprob: -15.875021934509277
    6. '```' → logprob: -17.000022888183594
    7. 'u' → logprob: -17.250022888183594
    8. 'p' → logprob: -17.375022888183594
    9. 'h' → logprob: -17.375022888183594
    10. 'ut' → logprob: -18.000022888183594

Token 120: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.375000953674316
    3. '(q' → logprob: -17.25
    4. '(heap' → logprob: -19.125
    5. '(
' → logprob: -19.5
    6. '((' → logprob: -19.625
    7. ' (' → logprob: -19.75
    8. '```' → logprob: -19.875
    9. 'h' → logprob: -20.25
    10. ',h' → logprob: -20.25

Token 121: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.1008713702030946e-06
    2. '(h' → logprob: -13.750001907348633
    3. 'hq' → logprob: -14.875001907348633
    4. 'Q' → logprob: -15.375001907348633
    5. '(q' → logprob: -16.000001907348633
    6. '_q' → logprob: -16.500001907348633
    7. '```' → logprob: -17.125001907348633
    8. 'sq' → logprob: -17.250001907348633
    9. 'qh' → logprob: -17.500001907348633
    10. 'p' → logprob: -17.750001907348633

Token 122: ',(' (ID: 27243)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5783993005752563
    2. '(' → logprob: -0.8283993005752563
    3. '(m' → logprob: -6.078399181365967
    4. ' (' → logprob: -9.328399658203125
    5. ',(' → logprob: -9.953399658203125
    6. ',' → logprob: -11.203399658203125
    7. ')' → logprob: -12.078399658203125
    8. '([' → logprob: -12.703399658203125
    9. '   ' → logprob: -13.328399658203125
    10. ' ' → logprob: -13.828399658203125

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.125015258789062
    3. ' ' → logprob: -15.500015258789062
    4. 'dist' → logprob: -18.875015258789062
    5. '```' → logprob: -19.625015258789062
    6. ')' → logprob: -19.750015258789062
    7. '   ' → logprob: -20.000015258789062
    8. '(dist' → logprob: -20.875015258789062
    9. '۰' → logprob: -21.125015258789062
    10. ' (' → logprob: -21.250015258789062

Token 124: ',m' (ID: 26648)
  Prédit: ',m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.10021260380744934
    2. ',' → logprob: -2.350212574005127
    3. ' ,' → logprob: -12.350213050842285
    4. 'm' → logprob: -13.725213050842285
    5. ',
' → logprob: -15.350213050842285
    6. ',n' → logprob: -17.22521209716797
    7. ',int' → logprob: -17.35021209716797
    8. ' m' → logprob: -17.97521209716797
    9. '<m' → logprob: -17.97521209716797
    10. ',M' → logprob: -17.97521209716797

Token 125: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10021217912435532
    2. ')' → logprob: -2.3502120971679688
    3. '))
' → logprob: -12.600212097167969
    4. ')))' → logprob: -13.725212097167969
    5. ')
' → logprob: -14.475212097167969
    6. ' ))' → logprob: -15.225212097167969
    7. '),' → logprob: -16.22521209716797
    8. ' )' → logprob: -16.60021209716797
    9. '));' → logprob: -17.22521209716797
    10. '))

' → logprob: -17.47521209716797

Token 126: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -7.707997428951785e-05
    2. ' while' → logprob: -9.500077247619629
    3. 'While' → logprob: -13.375077247619629
    4. '```' → logprob: -15.000077247619629
    5. ')' → logprob: -15.875077247619629
    6. '	while' → logprob: -16.125076293945312
    7. '
' → logprob: -18.875076293945312
    8. 'distance' → logprob: -19.125076293945312
    9. '   ' → logprob: -19.750076293945312
    10. 'visited' → logprob: -19.875076293945312

Token 127: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.004125419072806835
    2. ' h' → logprob: -5.504125595092773
    3. '(h' → logprob: -10.004125595092773
    4. '	h' → logprob: -13.754125595092773
    5. 'h' → logprob: -15.379125595092773
    6. '[h' → logprob: -15.754125595092773
    7. '_h' → logprob: -16.129125595092773
    8. '<h' → logprob: -16.504125595092773
    9. ',h' → logprob: -17.004125595092773
    10. ''h' → logprob: -17.129125595092773

Token 128: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'hq' → logprob: -18.625
    3. '_q' → logprob: -19.125
    4. 'qh' → logprob: -19.125
    5. 'Q' → logprob: -20.125
    6. '[' → logprob: -20.625
    7. '_' → logprob: -20.625
    8. '.q' → logprob: -20.625
    9. '

' → logprob: -20.875
    10. '?q' → logprob: -20.875

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011617878044489771
    2. '):' → logprob: -9.625116348266602
    3. '>:' → logprob: -10.000116348266602
    4. ':**' → logprob: -14.000116348266602
    5. ':not' → logprob: -14.250116348266602
    6. '!=' → logprob: -14.375116348266602
    7. ']:' → logprob: -14.500116348266602
    8. '>' → logprob: -14.750116348266602
    9. ':
' → logprob: -14.875116348266602
    10. ',:' → logprob: -14.875116348266602

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10994991660118103
    2. ',' → logprob: -2.359949827194214
    3. 'd' → logprob: -6.234950065612793
    4. 'cost' → logprob: -6.234950065612793
    5. ' ,' → logprob: -6.359950065612793
    6. 'dist' → logprob: -6.359950065612793
    7. '	dist' → logprob: -7.984950065612793
    8. ',c' → logprob: -8.234950065612793
    9. ',d' → logprob: -8.359950065612793
    10. 't' → logprob: -8.984950065612793

Token 131: ' cd' (ID: 24852)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06413766741752625
    2. 'cost' → logprob: -3.0641376972198486
    3. 'cur' → logprob: -4.5641374588012695
    4. 'cd' (adapté à ' cd') → logprob: -5.8141374588012695
    5. 'dist' → logprob: -7.5641374588012695
    6. 'c' → logprob: -7.5641374588012695
    7. '   ' → logprob: -8.06413745880127
    8. 'curr' → logprob: -8.18913745880127
    9. ' d' → logprob: -9.06413745880127
    10. 'du' → logprob: -9.18913745880127

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09507441520690918
    2. 'ist' → logprob: -2.470074415206909
    3. 'istance' → logprob: -5.470074653625488
    4. ',c' → logprob: -6.845074653625488
    5. ',current' → logprob: -8.720074653625488
    6. 'is' → logprob: -8.970074653625488
    7. ',d' → logprob: -9.220074653625488
    8. ' ,' → logprob: -9.720074653625488
    9. 'dist' → logprob: -9.970074653625488
    10. ',_' → logprob: -9.970074653625488

Token 133: ' cv' (ID: 12142)
  Prédit: 'cn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cn' → logprob: -0.7749574184417725
    2. 'cv' → logprob: -0.7749574184417725
    3. 'node' → logprob: -3.1499574184417725
    4. 'v' → logprob: -4.149957656860352
    5. ' cn' → logprob: -5.149957656860352
    6. ' node' → logprob: -5.649957656860352
    7. ' cv' → logprob: -5.649957656860352
    8. 'u' → logprob: -6.024957656860352
    9. 'cu' → logprob: -6.274957656860352
    10. 'c' → logprob: -7.024957656860352

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715370807796717
    2. ' =' → logprob: -5.006715297698975
    3. ')=' → logprob: -17.756715774536133
    4. '=

' → logprob: -18.131715774536133
    5. ')' → logprob: -18.381715774536133
    6. '=
' → logprob: -18.506715774536133
    7. '=cv' → logprob: -18.631715774536133
    8. '＝' → logprob: -19.381715774536133
    9. ' ' → logprob: -19.506715774536133
    10. '=edge' → logprob: -19.631715774536133

Token 135: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0007100477814674377
    2. ' heap' → logprob: -7.2507100105285645
    3. 'he' → logprob: -16.375709533691406
    4. '(heap' → logprob: -18.500709533691406
    5. '.heap' → logprob: -19.375709533691406
    6. '   ' → logprob: -19.625709533691406
    7. '_heap' → logprob: -19.875709533691406
    8. 'hq' → logprob: -19.875709533691406
    9. 'queue' → logprob: -21.875709533691406
    10. ' he' → logprob: -22.125709533691406

Token 136: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.25
    3. 'pop' → logprob: -17.5
    4. 'app' → logprob: -18.5
    5. 'h' → logprob: -18.625
    6. 'op' → logprob: -18.75
    7. 'p' → logprob: -18.875
    8. '
' → logprob: -19.25
    9. '.he' → logprob: -20.0
    10. 'he' → logprob: -20.25

Token 137: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0035929447039961815
    2. 'app' → logprob: -5.7535929679870605
    3. 'q' → logprob: -8.378592491149902
    4. 'he' → logprob: -9.378592491149902
    5. '.pop' → logprob: -10.253592491149902
    6. 'op' → logprob: -10.628592491149902
    7. 'pop' → logprob: -11.003592491149902
    8. '.heap' → logprob: -11.753592491149902
    9. 'pp' → logprob: -12.253592491149902
    10. '```' → logprob: -12.503592491149902

Token 138: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00012713817704934627
    2. 'pp' → logprob: -9.500126838684082
    3. 'ap' → logprob: -9.875126838684082
    4. 'q' → logprob: -15.250126838684082
    5. 'p' → logprob: -15.625126838684082
    6. '[' → logprob: -16.1251277923584
    7. 'pop' → logprob: -16.2501277923584
    8. '```' → logprob: -17.0001277923584
    9. 'qp' → logprob: -17.8751277923584
    10. 'sp' → logprob: -17.8751277923584

Token 139: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.028772126883268356
    2. 'ush' → logprob: -3.6537721157073975
    3. 'p' → logprob: -6.778772354125977
    4. 'q' → logprob: -7.278772354125977
    5. 'app' → logprob: -8.278772354125977
    6. 'pp' → logprob: -8.653772354125977
    7. 'pop' → logprob: -8.653772354125977
    8. 'le' → logprob: -11.278772354125977
    9. 'l' → logprob: -12.528772354125977
    10. 'ort' → logprob: -12.528772354125977

Token 140: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.25000286102295
    3. 'h' → logprob: -14.50000286102295
    4. ',h' → logprob: -16.125001907348633
    5. '(
' → logprob: -17.750001907348633
    6. ' (' → logprob: -18.375001907348633
    7. '(q' → logprob: -18.625001907348633
    8. ')' → logprob: -18.750001907348633
    9. '(heap' → logprob: -19.375001907348633
    10. '	h' → logprob: -19.500001907348633

Token 141: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. 'Q' → logprob: -15.625000953674316
    3. ')' → logprob: -16.125
    4. '(q' → logprob: -16.25
    5. '_q' → logprob: -17.25
    6. '(' → logprob: -17.375
    7. '```' → logprob: -17.75
    8. '[' → logprob: -17.875
    9. 'c' → logprob: -17.875
    10. ')
' → logprob: -18.3125

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01815696805715561
    2. ')
' → logprob: -4.018157005310059
    3. '   ' → logprob: -12.518157005310059
    4. ')
' → logprob: -13.018157005310059
    5. ' )' → logprob: -14.018157005310059
    6. ')

' → logprob: -15.143157005310059
    7. ' )
' → logprob: -16.518156051635742
    8. ')`' → logprob: -17.518156051635742
    9. ' ' → logprob: -17.643156051635742
    10. ')`
' → logprob: -18.643156051635742

Token 143: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11707434803247452
    2. '   ' → logprob: -2.4920742511749268
    3. ' if' → logprob: -4.242074489593506
    4. 'if' → logprob: -5.117074489593506
    5. '    
' → logprob: -5.742074489593506
    6. '<|end|>' → logprob: -6.492074489593506
    7. ' 
' → logprob: -6.617074489593506
    8. '  
' → logprob: -7.867074489593506
    9. ')' → logprob: -7.992074489593506
    10. '   
' → logprob: -8.742074012756348

Token 144: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006141846068203449
    2. ' if' → logprob: -5.256141662597656
    3. '   ' → logprob: -7.006141662597656
    4. '    
' → logprob: -13.881141662597656
    5. '
' → logprob: -14.881141662597656
    6. '	if' → logprob: -16.881141662597656
    7. '  ' → logprob: -17.006141662597656
    8. ' 
' → logprob: -17.506141662597656
    9. ' ' → logprob: -18.381141662597656
    10. '  
' → logprob: -18.506141662597656

Token 145: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.13419868052005768
    2. ' dist' → logprob: -2.5091986656188965
    3. 'cd' → logprob: -3.1341986656188965
    4. ' cd' → logprob: -7.2591986656188965
    5. '	dist' → logprob: -12.009199142456055
    6. '(dist' → logprob: -13.134199142456055
    7. '	cd' → logprob: -13.384199142456055
    8. '   ' → logprob: -14.384199142456055
    9. ' ' → logprob: -14.634199142456055
    10. '(cd' → logprob: -14.759199142456055

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.081584716506768e-05
    2. '<cv' → logprob: -10.875020980834961
    3. '=cv' → logprob: -14.000020980834961
    4. '(cv' → logprob: -14.750020980834961
    5. 'cv' → logprob: -15.250020980834961
    6. ' [' → logprob: -15.625020980834961
    7. '	cv' → logprob: -16.50002098083496
    8. '```' → logprob: -17.50002098083496
    9. ' cv' → logprob: -18.50002098083496
    10. '.cv' → logprob: -19.25002098083496

Token 147: 'cv' (ID: 20484)
  Prédit: 'cv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cv' → logprob: -1.759734732331708e-05
    2. ' cv' → logprob: -11.250017166137695
    3. '(cv' → logprob: -13.750017166137695
    4. '<cv' → logprob: -13.750017166137695
    5. '=cv' → logprob: -13.750017166137695
    6. '_cv' → logprob: -13.875017166137695
    7. '.cv' → logprob: -14.875017166137695
    8. '[' → logprob: -17.125017166137695
    9. '	cv' → logprob: -17.625017166137695
    10. 'v' → logprob: -17.875017166137695

Token 148: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00033296257606707513
    2. '<cv' → logprob: -8.625332832336426
    3. ' <' → logprob: -9.375332832336426
    4. '<c' → logprob: -10.875332832336426
    5. '<int' → logprob: -11.250332832336426
    6. '<ll' → logprob: -11.875332832336426
    7. ']<' → logprob: -12.125332832336426
    8. '<v' → logprob: -12.500332832336426
    9. '<data' → logprob: -12.625332832336426
    10. '<const' → logprob: -13.250332832336426

Token 149: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.5213274309644476e-05
    2. ' cd' → logprob: -11.250015258789062
    3. 'cv' → logprob: -13.125015258789062
    4. '	cd' → logprob: -16.250015258789062
    5. 'cdn' → logprob: -18.875015258789062
    6. ' ' → logprob: -19.000015258789062
    7. '```' → logprob: -19.125015258789062
    8. '_cd' → logprob: -19.125015258789062
    9. '(cd' → logprob: -19.500015258789062
    10. 'c' → logprob: -19.500015258789062

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006527788005769253
    2. ':
' → logprob: -5.506527900695801
    3. '   ' → logprob: -6.881527900695801
    4. 'continue' → logprob: -7.256527900695801
    5. '       ' → logprob: -7.506527900695801
    6. ' continue' → logprob: -9.1315279006958
    7. '	continue' → logprob: -9.8815279006958
    8. ' continues' → logprob: -13.2565279006958
    9. '_continue' → logprob: -13.2565279006958
    10. 'Continue' → logprob: -14.8815279006958

Token 151: '       ' (ID: 309)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.512661337852478
    2. '       ' → logprob: -1.262661337852478
    3. '   ' → logprob: -2.7626614570617676
    4. '	continue' → logprob: -3.0126614570617676
    5. ' continue' → logprob: -5.137661457061768
    6. '_continue' → logprob: -10.38766098022461
    7. '	   ' → logprob: -12.51266098022461
    8. 'contin' → logprob: -12.76266098022461
    9. '	' → logprob: -13.01266098022461
    10. '           ' → logprob: -13.63766098022461

Token 152: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.03213298320770264
    2. ' continue' → logprob: -3.532133102416992
    3. '   ' → logprob: -6.532133102416992
    4. '       ' → logprob: -7.032133102416992
    5. '	continue' → logprob: -10.157133102416992
    6. 'contin' → logprob: -14.157133102416992
    7. 'continu' → logprob: -14.782133102416992
    8. '           ' → logprob: -14.907133102416992
    9. '_continue' → logprob: -14.907133102416992
    10. '```' → logprob: -16.907133102416992

Token 153: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22803013026714325
    2. ' for' → logprob: -2.353030204772949
    3. '
' → logprob: -2.603030204772949
    4. 'for' → logprob: -3.478030204772949
    5. '    
' → logprob: -5.853030204772949
    6. ' 
' → logprob: -8.10303020477295
    7. '<|end|>' → logprob: -8.22803020477295
    8. '  
' → logprob: -8.85303020477295
    9. '  ' → logprob: -9.10303020477295
    10. '   
' → logprob: -9.47803020477295

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000614624354057014
    2. 'for' → logprob: -7.875614643096924
    3. ' for' → logprob: -9.250614166259766
    4. '    
' → logprob: -9.250614166259766
    5. '
' → logprob: -10.125614166259766
    6. '  
' → logprob: -14.125614166259766
    7. '   
' → logprob: -14.500614166259766
    8. ' 
' → logprob: -15.250614166259766
    9. '  ' → logprob: -15.375614166259766
    10. '	for' → logprob: -15.500614166259766

Token 155: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011066367151215672
    2. '   ' → logprob: -7.5011067390441895
    3. ' for' → logprob: -7.5011067390441895
    4. '	for' → logprob: -14.751106262207031
    5. '    
' → logprob: -14.751106262207031
    6. '
' → logprob: -15.626106262207031
    7. '```' → logprob: -16.50110626220703
    8. ' ' → logprob: -18.25110626220703
    9. ' 
' → logprob: -18.62610626220703
    10. '  
' → logprob: -19.25110626220703

Token 156: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.045425720512866974
    2. '(n' → logprob: -3.2954256534576416
    3. 'nx' → logprob: -5.795425891876221
    4. 'n' → logprob: -6.045425891876221
    5. 'to' → logprob: -6.920425891876221
    6. ' nv' → logprob: -7.670425891876221
    7. '(nx' → logprob: -7.920425891876221
    8. '(' → logprob: -9.920425415039062
    9. 'w' → logprob: -10.420425415039062
    10. 'nw' → logprob: -11.670425415039062

Token 157: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.4250912368297577
    2. ',' → logprob: -1.17509126663208
    3. ',d' → logprob: -3.42509126663208
    4. ',w' → logprob: -5.67509126663208
    5. ',c' → logprob: -6.80009126663208
    6. ',l' → logprob: -8.800090789794922
    7. ',v' → logprob: -9.300090789794922
    8. ' ,' → logprob: -9.425090789794922
    9. ',length' → logprob: -9.800090789794922
    10. ',len' → logprob: -12.175090789794922

Token 158: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3387899398803711
    2. 'v' → logprob: -1.338789939880371
    3. 'e' → logprob: -4.838789939880371
    4. 'vl' → logprob: -4.838789939880371
    5. 'ext' → logprob: -5.713789939880371
    6. 'dist' → logprob: -5.963789939880371
    7. 'd' → logprob: -6.838789939880371
    8. '_l' → logprob: -7.088789939880371
    9. 'xt' → logprob: -7.838789939880371
    10. '[' → logprob: -8.963789939880371

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002541184425354
    2. 'in' → logprob: -2.3502540588378906
    3. ',' → logprob: -10.85025405883789
    4. '   ' → logprob: -11.60025405883789
    5. 'n' → logprob: -12.47525405883789
    6. ' ' → logprob: -12.85025405883789
    7. '```' → logprob: -13.10025405883789
    8. ')' → logprob: -13.22525405883789
    9. '  ' → logprob: -13.85025405883789
    10. 'In' → logprob: -13.85025405883789

Token 160: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.011049113236367702
    2. ' edges' → logprob: -4.511049270629883
    3. '(edges' → logprob: -14.261049270629883
    4. '   ' → logprob: -15.136049270629883
    5. '.edges' → logprob: -15.511049270629883
    6. ' ' → logprob: -16.011049270629883
    7. '_edges' → logprob: -17.386049270629883
    8. '```' → logprob: -17.761049270629883
    9. 'edge' → logprob: -18.511049270629883
    10. '[' → logprob: -18.636049270629883

Token 161: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.5
    3. ' [' → logprob: -17.5
    4. '(cv' → logprob: -17.5
    5. '<cv' → logprob: -18.25
    6. '       ' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. 'cv' → logprob: -19.0
    9. '_cv' → logprob: -19.375
    10. '=cv' → logprob: -19.5

Token 162: 'cv' (ID: 20484)
  Prédit: 'cv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cv' → logprob: -0.0017563373548910022
    2. '[' → logprob: -6.376756191253662
    3. '(cv' → logprob: -10.50175666809082
    4. ' cv' → logprob: -11.12675666809082
    5. 'v' → logprob: -12.62675666809082
    6. '.cv' → logprob: -13.00175666809082
    7. '<cv' → logprob: -13.62675666809082
    8. '_cv' → logprob: -13.87675666809082
    9. '=cv' → logprob: -14.00175666809082
    10. 'CV' → logprob: -14.12675666809082

Token 163: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.09831547737121582
    2. ']:
' → logprob: -2.473315477371216
    3. ':' → logprob: -5.098315238952637
    4. ']' → logprob: -6.973315238952637
    5. '):' → logprob: -6.973315238952637
    6. '   ' → logprob: -7.473315238952637
    7. '       ' → logprob: -8.598315238952637
    8. ':
' → logprob: -8.723315238952637
    9. '):
' → logprob: -8.723315238952637
    10. ']):' → logprob: -9.223315238952637

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011915372451767325
    2. '<|end|>' → logprob: -7.37619161605835
    3. ',' → logprob: -8.626191139221191
    4. '   ' → logprob: -8.876191139221191
    5. '
' → logprob: -9.126191139221191
    6. '        
' → logprob: -10.251191139221191
    7. '```' → logprob: -10.501191139221191
    8. ' if' → logprob: -10.751191139221191
    9. '<|end|>' → logprob: -12.126191139221191
    10. 'if' → logprob: -12.251191139221191

Token 165: ' nd' (ID: 5914)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32608070969581604
    2. ' if' → logprob: -1.5760806798934937
    3. 'if' → logprob: -2.826080799102783
    4. ' new' → logprob: -5.201080799102783
    5. 'new' → logprob: -5.451080799102783
    6. 'cost' → logprob: -7.451080799102783
    7. ' nd' → logprob: -7.701080799102783
    8. '   ' → logprob: -8.201080322265625
    9. '           ' → logprob: -8.201080322265625
    10. 'd' → logprob: -8.326080322265625

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25256794691085815
    2. '=' → logprob: -1.502568006515503
    3. 'ist' → logprob: -7.377567768096924
    4. 'istance' → logprob: -11.377568244934082
    5. '>' → logprob: -14.002568244934082
    6. '＝' → logprob: -15.502568244934082
    7. 'IST' → logprob: -15.752568244934082
    8. 'isted' → logprob: -15.752568244934082
    9. ',' → logprob: -15.877568244934082
    10. ' =
' → logprob: -16.127567291259766

Token 167: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0003360582049936056
    2. ' cd' → logprob: -8.000335693359375
    3. '	cd' → logprob: -14.625335693359375
    4. '   ' → logprob: -16.375335693359375
    5. 'dist' → logprob: -16.750335693359375
    6. 'cv' → logprob: -16.875335693359375
    7. '(cd' → logprob: -17.375335693359375
    8. '_cd' → logprob: -17.500335693359375
    9. ' ' → logprob: -17.750335693359375
    10. 'cdn' → logprob: -18.125335693359375

Token 168: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16064509749412537
    2. ' +' → logprob: -1.9106451272964478
    3. '+n' → logprob: -7.785645008087158
    4. '+xml' → logprob: -12.410645484924316
    5. '+l' → logprob: -14.160645484924316
    6. '＋' → logprob: -15.910645484924316
    7. ' ' → logprob: -16.28564453125
    8. ' plus' → logprob: -16.91064453125
    9. '+
' → logprob: -17.16064453125
    10. '<|end|>' → logprob: -17.91064453125

Token 169: ' nl' (ID: 44724)
  Prédit: 'nl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nl' → logprob: -0.0889405608177185
    2. ' nl' → logprob: -2.4639406204223633
    3. ' ' → logprob: -15.088940620422363
    4. '   ' → logprob: -15.963940620422363
    5. 'n' → logprob: -16.088939666748047
    6. '.nl' → logprob: -16.463939666748047
    7. 'Nl' → logprob: -16.963939666748047
    8. 'l' → logprob: -17.338939666748047
    9. '1' → logprob: -17.401439666748047
    10. 'NL' → logprob: -17.401439666748047

Token 170: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5260598659515381
    2. '       ' → logprob: -1.026059865951538
    3. '<|end|>' → logprob: -3.026059865951538
    4. ' if' → logprob: -6.901060104370117
    5. 'if' → logprob: -8.026060104370117
    6. '<|end|>' → logprob: -8.276060104370117
    7. ' 
' → logprob: -8.651060104370117
    8. '   ' → logprob: -9.276060104370117
    9. '
' → logprob: -9.776060104370117
    10. '  
' → logprob: -9.776060104370117

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015815213322639465
    2. '<|end|>' → logprob: -4.265815258026123
    3. '
' → logprob: -6.890815258026123
    4. ' if' → logprob: -8.015814781188965
    5. '<|end|>' → logprob: -9.015814781188965
    6. 'if' → logprob: -9.890814781188965
    7. '   ' → logprob: -10.015814781188965
    8. '        
' → logprob: -11.140814781188965
    9. ')' → logprob: -11.265814781188965
    10. '           ' → logprob: -11.765814781188965

Token 172: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49857598543167114
    2. 'if' (adapté à ' if') → logprob: -1.2485759258270264
    3. '       ' → logprob: -2.2485759258270264
    4. '<|end|>' → logprob: -9.873576164245605
    5. '
' → logprob: -10.123576164245605
    6. ' ' → logprob: -11.248576164245605
    7. '        
' → logprob: -11.248576164245605
    8. '```' → logprob: -12.123576164245605
    9. '	if' → logprob: -12.248576164245605
    10. ',' → logprob: -12.748576164245605

Token 173: ' nd' (ID: 5914)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.8020644783973694
    2. ' nd' → logprob: -0.9270644783973694
    3. 'nd' → logprob: -2.5520644187927246
    4. 'dist' → logprob: -2.5520644187927246
    5. '	dist' → logprob: -11.427064895629883
    6. '(nd' → logprob: -11.552064895629883
    7. '(dist' → logprob: -12.052064895629883
    8. '   ' → logprob: -12.302064895629883
    9. ' ' → logprob: -12.552064895629883
    10. '```' → logprob: -13.302064895629883

Token 174: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07900247722864151
    2. ' <' → logprob: -2.5790023803710938
    3. '<|end|>' → logprob: -9.704002380371094
    4. '[' → logprob: -11.829002380371094
    5. '<int' → logprob: -11.954002380371094
    6. '<ll' → logprob: -12.579002380371094
    7. '<len' → logprob: -12.954002380371094
    8. '<std' → logprob: -12.954002380371094
    9. 'dist' → logprob: -13.079002380371094
    10. '<th' → logprob: -13.079002380371094

Token 175: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0019288709154352546
    2. ' dist' → logprob: -6.251928806304932
    3. '	dist' → logprob: -16.126928329467773
    4. '(dist' → logprob: -16.876928329467773
    5. '0' → logprob: -18.376928329467773
    6. '
' → logprob: -18.626928329467773
    7. '=' → logprob: -18.751928329467773
    8. ' ' → logprob: -19.126928329467773
    9. '```' → logprob: -19.126928329467773
    10. '   ' → logprob: -19.751928329467773

Token 176: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.0219828002154827e-05
    2. 'nv' → logprob: -11.125020027160645
    3. '[' → logprob: -13.250020027160645
    4. '```' → logprob: -13.625020027160645
    5. '[
' → logprob: -14.875020027160645
    6. ' nv' → logprob: -15.000020027160645
    7. '   ' → logprob: -15.375020027160645
    8. '_nv' → logprob: -15.375020027160645
    9. ' [' → logprob: -15.875020027160645
    10. '<n' → logprob: -15.875020027160645

Token 177: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.126521035796031e-05
    2. '[v' → logprob: -9.375091552734375
    3. '[n' → logprob: -13.000091552734375
    4. '```' → logprob: -13.125091552734375
    5. 'nv' → logprob: -14.625091552734375
    6. '][' → logprob: -15.250091552734375
    7. ']' → logprob: -15.250091552734375
    8. '[' → logprob: -15.500091552734375
    9. '
' → logprob: -15.875091552734375
    10. 'av' → logprob: -16.250091552734375

Token 178: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4526890218257904
    2. ':' → logprob: -1.2026890516281128
    3. ']:
' → logprob: -3.7026889324188232
    4. '):' → logprob: -4.077689170837402
    5. ':
' → logprob: -4.202689170837402
    6. '):
' → logprob: -5.452689170837402
    7. '[' → logprob: -6.827689170837402
    8. '[n' → logprob: -6.952689170837402
    9. '>:' → logprob: -7.827689170837402
    10. '}:' → logprob: -8.827689170837402

Token 179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004520907998085022
    2. '       ' → logprob: -5.879520893096924
    3. '<|end|>' → logprob: -7.254520893096924
    4. '               ' → logprob: -7.629520893096924
    5. ':
' → logprob: -8.879521369934082
    6. '```' → logprob: -9.504521369934082
    7. '<|end|>' → logprob: -9.504521369934082
    8. ':' → logprob: -9.754521369934082
    9. ',' → logprob: -9.879521369934082
    10. '	       ' → logprob: -10.879521369934082

Token 180: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3133034408092499
    2. 'dist' (adapté à ' dist') → logprob: -1.3133034706115723
    3. '               ' → logprob: -10.438302993774414
    4. '_dist' → logprob: -12.063302993774414
    5. '	dist' → logprob: -12.688302993774414
    6. '           ' → logprob: -13.188302993774414
    7. '```' → logprob: -14.063302993774414
    8. '(dist' → logprob: -15.063302993774414
    9. '.dist' → logprob: -15.063302993774414
    10. 'Dist' → logprob: -16.313302993774414

Token 181: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.080963092041202e-06
    2. 'nv' → logprob: -12.500004768371582
    3. '[' → logprob: -14.625004768371582
    4. '_nv' → logprob: -15.000004768371582
    5. '```' → logprob: -16.2500057220459
    6. '	n' → logprob: -16.3750057220459
    7. ' nv' → logprob: -16.5000057220459
    8. '(n' → logprob: -17.3750057220459
    9. ' [' → logprob: -17.6250057220459
    10. '<n' → logprob: -17.7500057220459

Token 182: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00012999906903132796
    2. '[v' → logprob: -9.000129699707031
    3. 'nv' → logprob: -13.125129699707031
    4. '[n' → logprob: -13.750129699707031
    5. '```' → logprob: -14.125129699707031
    6. '[' → logprob: -15.000129699707031
    7. ']' → logprob: -15.125129699707031
    8. ' nv' → logprob: -15.375129699707031
    9. '	v' → logprob: -15.625129699707031
    10. '
' → logprob: -15.750129699707031

Token 183: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6051474809646606
    2. '=' → logprob: -1.1051474809646606
    3. ']=' → logprob: -2.105147361755371
    4. ' =' → logprob: -6.980147361755371
    5. '=n' → logprob: -9.730147361755371
    6. ')=' → logprob: -11.605147361755371
    7. ')' → logprob: -12.105147361755371
    8. ' ]' → logprob: -12.855147361755371
    9. '[' → logprob: -12.980147361755371
    10. '[n' → logprob: -13.730147361755371

Token 184: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.014163863845169544
    2. ' nd' → logprob: -4.264163970947266
    3. 'ndl' → logprob: -16.514163970947266
    4. '(nd' → logprob: -16.764163970947266
    5. 'n' → logprob: -16.764163970947266
    6. 'nt' → logprob: -17.139163970947266
    7. '_nd' → logprob: -17.389163970947266
    8. 'ng' → logprob: -17.639163970947266
    9. 'nv' → logprob: -17.764163970947266
    10. '   ' → logprob: -17.889163970947266

Token 185: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.08962836116552353
    2. '           ' → logprob: -2.9646284580230713
    3. ' heap' → logprob: -3.8396284580230713
    4. ',' → logprob: -4.964628219604492
    5. ',
' → logprob: -5.839628219604492
    6. '
' → logprob: -6.589628219604492
    7. '(heap' → logprob: -6.964628219604492
    8. '   ' → logprob: -8.714628219604492
    9. '       ' → logprob: -9.339628219604492
    10. '            
' → logprob: -10.339628219604492

Token 186: '           ' (ID: 352)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.008014705032110214
    2. ',' → logprob: -5.508014678955078
    3. ' heap' → logprob: -5.883014678955078
    4. ',
' → logprob: -7.008014678955078
    5. '           ' → logprob: -9.133014678955078
    6. '(heap' → logprob: -9.758014678955078
    7. '            
' → logprob: -10.508014678955078
    8. '```' → logprob: -10.883014678955078
    9. '   ' → logprob: -11.633014678955078
    10. '
' → logprob: -12.008014678955078

Token 187: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.9361264946837764e-07
    2. ' heap' → logprob: -15.75
    3. 'he' → logprob: -18.125
    4. '(heap' → logprob: -19.25
    5. 'heat' → logprob: -22.125
    6. '   ' → logprob: -24.625
    7. '.heap' → logprob: -24.625
    8. '```' → logprob: -25.0
    9. '_heap' → logprob: -25.375
    10. 'hq' → logprob: -25.375

Token 188: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.961759259458631e-06
    2. 'p' → logprob: -13.250004768371582
    3. 'h' → logprob: -13.500004768371582
    4. '.he' → logprob: -13.750004768371582
    5. 'he' → logprob: -15.250004768371582
    6. 'app' → logprob: -15.625004768371582
    7. 'hq' → logprob: -16.2500057220459
    8. 'push' → logprob: -16.3750057220459
    9. '.heap' → logprob: -17.0000057220459
    10. 'k' → logprob: -17.2500057220459

Token 189: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0001963881659321487
    2. 'he' → logprob: -8.87519645690918
    3. 'q' → logprob: -10.00019645690918
    4. '.heap' → logprob: -11.75019645690918
    5. '```' → logprob: -14.25019645690918
    6. '.push' → logprob: -14.37519645690918
    7. ' he' → logprob: -14.87519645690918
    8. 'heap' → logprob: -14.87519645690918
    9. 'push' → logprob: -15.00019645690918
    10. '.' → logprob: -15.00019645690918

Token 190: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0005817461642436683
    2. 'pp' → logprob: -7.500581741333008
    3. 'ap' → logprob: -10.625581741333008
    4. 'push' → logprob: -12.625581741333008
    5. 'p' → logprob: -14.500581741333008
    6. 'q' → logprob: -15.125581741333008
    7. 'ush' → logprob: -15.875581741333008
    8. 'e' → logprob: -16.375581741333008
    9. 'a' → logprob: -17.125581741333008
    10. 'appen' → logprob: -17.625581741333008

Token 191: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.88418151892256e-05
    2. 'push' → logprob: -9.750059127807617
    3. 'sh' → logprob: -14.875059127807617
    4. 'pp' → logprob: -16.625059127807617
    5. 'p' → logprob: -17.000059127807617
    6. 'app' → logprob: -17.750059127807617
    7. 'op' → logprob: -18.750059127807617
    8. '.push' → logprob: -19.625059127807617
    9. '```' → logprob: -19.625059127807617
    10. 'u' → logprob: -19.875059127807617

Token 192: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.000017166137695
    3. '(
' → logprob: -15.750017166137695
    4. '(q' → logprob: -16.500017166137695
    5. ' (' → logprob: -18.625017166137695
    6. '(n' → logprob: -18.750017166137695
    7. '```' → logprob: -19.000017166137695
    8. 'h' → logprob: -19.375017166137695
    9. ',h' → logprob: -20.000017166137695
    10. '(heap' → logprob: -20.000017166137695

Token 193: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.288163083605468e-05
    2. '(h' → logprob: -9.875052452087402
    3. '(q' → logprob: -14.625052452087402
    4. 'hq' → logprob: -15.125052452087402
    5. 'qh' → logprob: -15.250052452087402
    6. 'h' → logprob: -16.12505340576172
    7. 'qs' → logprob: -16.62505340576172
    8. '?q' → logprob: -17.25005340576172
    9. '	q' → logprob: -17.62505340576172
    10. '```' → logprob: -17.62505340576172

Token 194: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.006924465764313936
    2. ',' → logprob: -5.756924629211426
    3. ',h' → logprob: -5.756924629211426
    4. ',(' → logprob: -7.506924629211426
    5. '(' → logprob: -11.131924629211426
    6. ' (' → logprob: -11.381924629211426
    7. ' ,' → logprob: -13.256924629211426
    8. ')' → logprob: -14.631924629211426
    9. '(q' → logprob: -15.006924629211426
    10. '(n' → logprob: -15.756924629211426

Token 195: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.3544423381972592e-05
    2. ' nd' → logprob: -11.25001335144043
    3. '(nd' → logprob: -14.50001335144043
    4. '_nd' → logprob: -18.12501335144043
    5. 'dist' → logprob: -18.87501335144043
    6. '```' → logprob: -18.87501335144043
    7. 'ndl' → logprob: -19.25001335144043
    8. '   ' → logprob: -19.37501335144043
    9. 'nds' → logprob: -19.75001335144043
    10. '
' → logprob: -20.12501335144043

Token 196: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.47413206100463867
    2. ',' → logprob: -0.9741320610046387
    3. ' ,' → logprob: -10.724132537841797
    4. ',v' → logprob: -10.849132537841797
    5. ',
' → logprob: -11.349132537841797
    6. ',node' → logprob: -15.474132537841797
    7. '```' → logprob: -15.599132537841797
    8. ',np' → logprob: -15.724132537841797
    9. ')' → logprob: -15.974132537841797
    10. ',

' → logprob: -16.224132537841797

Token 197: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. 'nv' → logprob: -16.25
    3. '```' → logprob: -19.375
    4. '	v' → logprob: -19.75
    5. 'в' → logprob: -19.875
    6. ' v' → logprob: -20.25
    7. 'av' → logprob: -20.375
    8. 'vn' → logprob: -20.5
    9. '[v' → logprob: -20.5
    10. 'ev' → logprob: -20.75

Token 198: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0024842156562954187
    2. ')' → logprob: -6.002484321594238
    3. '))
' → logprob: -11.877484321594238
    4. ')))' → logprob: -13.752484321594238
    5. ' ))' → logprob: -15.252484321594238
    6. ')
' → logprob: -16.502483367919922
    7. ')n' → logprob: -17.002483367919922
    8. '));' → logprob: -17.252483367919922
    9. ' )' → logprob: -17.627483367919922
    10. '])' → logprob: -17.877483367919922

Token 199: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0855450630187988
    2. 'answer' → logprob: -1.5855450630187988
    3. 'min' → logprob: -1.8355450630187988
    4. 'ans' → logprob: -2.085545063018799
    5. 'for' → logprob: -2.960545063018799
    6. 'res' → logprob: -3.085545063018799
    7. 'result' → logprob: -3.335545063018799
    8. 'max' → logprob: -4.585545063018799
    9. 'best' → logprob: -4.835545063018799
    10. 'short' → logprob: -5.085545063018799

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693619966506958
    2. ' =' → logprob: -0.693619966506958
    3. ',' → logprob: -8.568619728088379
    4. '[' → logprob: -8.943619728088379
    5. '=[]' → logprob: -9.568619728088379
    6. '=[' → logprob: -10.943619728088379
    7. '[]' → logprob: -11.193619728088379
    8. 's' → logprob: -11.693619728088379
    9. '_' → logprob: -11.943619728088379
    10. '1' → logprob: -12.068619728088379

Token 201: ' ' (ID: 220)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.035778023302555084
    2. 'min' → logprob: -3.910778045654297
    3. 'max' → logprob: -5.535778045654297
    4. '10' → logprob: -5.910778045654297
    5. '[]' → logprob: -6.160778045654297
    6. 'dist' → logprob: -6.410778045654297
    7. '0' → logprob: -6.535778045654297
    8. 'inf' → logprob: -6.910778045654297
    9. '-' → logprob: -7.035778045654297
    10. '[' → logprob: -7.410778045654297

Token 202: '0' (ID: 15)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.3314659595489502
    2. 'min' → logprob: -1.5814659595489502
    3. 'max' → logprob: -2.95646595954895
    4. '0' → logprob: -4.581465721130371
    5. 'dist' → logprob: -5.206465721130371
    6. 'inf' → logprob: -5.956465721130371
    7. '[]' → logprob: -6.831465721130371
    8. '[' → logprob: -6.956465721130371
    9. '[min' → logprob: -6.956465721130371
    10. '10' → logprob: -7.081465721130371

Token 203: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008357356302440166
    2. 'for' → logprob: -4.883357524871826
    3. ' for' → logprob: -7.383357524871826
    4. '\n' → logprob: -9.758357048034668
    5. ' 
' → logprob: -10.508357048034668
    6. '<|end|>' → logprob: -10.633357048034668
    7. '
' → logprob: -11.508357048034668
    8. '

' → logprob: -12.633357048034668
    9. '' → logprob: -13.508357048034668
    10. '  
' → logprob: -13.633357048034668

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.136457085609436
    2. 'join' → logprob: -1.136457085609436
    3. 'split' → logprob: -2.2614569664001465
    4. ' ' → logprob: -3.3864569664001465
    5. 'rstrip' → logprob: -3.5114569664001465
    6. 'replace' → logprob: -3.6364569664001465
    7. '
' → logprob: -3.7614569664001465
    8. 'for' → logprob: -3.8864569664001465
    9. '<|end|>' → logprob: -4.0114569664001465
    10. '.' → logprob: -4.1364569664001465

Token 205: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4480910301208496
    2. 'for' → logprob: -1.0730910301208496
    3. ' for' → logprob: -4.32309103012085
    4. '<|end|>' → logprob: -5.82309103012085
    5. '/' → logprob: -6.94809103012085
    6. ' 
' → logprob: -7.19809103012085
    7. '\n' → logprob: -7.57309103012085
    8. '*' → logprob: -9.198091506958008
    9. '  
' → logprob: -9.448091506958008
    10. '0' → logprob: -9.698091506958008

Token 206: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015814013313502073
    2. 'max' → logprob: -6.751581192016602
    3. ' for' → logprob: -8.501581192016602
    4. 'sum' → logprob: -9.501581192016602
    5. 'count' → logprob: -10.126581192016602
    6. 'min' → logprob: -10.126581192016602
    7. 'total' → logprob: -11.001581192016602
    8. 'cnt' → logprob: -11.376581192016602
    9. 'best' → logprob: -12.126581192016602
    10. 'distance' → logprob: -12.501581192016602

Token 207: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04642203822731972
    2. 'd' → logprob: -3.421422004699707
    3. 'range' → logprob: -5.421422004699707
    4. 'dist' → logprob: -5.546422004699707
    5. 'v' → logprob: -6.171422004699707
    6. 'node' → logprob: -6.671422004699707
    7. 'm' → logprob: -7.171422004699707
    8. ' i' → logprob: -9.171422004699707
    9. 'cv' → logprob: -10.296422004699707
    10. 'x' → logprob: -10.296422004699707

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39347460865974426
    2. 'in' → logprob: -1.1434745788574219
    3. ',' → logprob: -5.143474578857422
    4. ',a' → logprob: -8.393474578857422
    5. 'a' → logprob: -9.143474578857422
    6. 'dist' → logprob: -9.143474578857422
    7. ' ' → logprob: -9.393474578857422
    8. 'i' → logprob: -9.893474578857422
    9. ',n' → logprob: -10.643474578857422
    10. ' ,' → logprob: -10.768474578857422

Token 209: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02420603111386299
    2. 'dist' → logprob: -3.8992059230804443
    3. ' range' → logprob: -6.399206161499023
    4. 'm' → logprob: -6.774206161499023
    5. 'edges' → logprob: -7.149206161499023
    6. 'ranges' → logprob: -11.024206161499023
    7. ' dist' → logprob: -11.274206161499023
    8. '(range' → logprob: -12.524206161499023
    9. '[' → logprob: -12.524206161499023
    10. 'arr' → logprob: -12.649206161499023

Token 210: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017162315780296922
    2. '1' → logprob: -6.376716136932373
    3. '(N' → logprob: -11.251716613769531
    4. '(len' → logprob: -14.876716613769531
    5. 'N' → logprob: -15.001716613769531
    6. 'len' → logprob: -15.501716613769531
    7. ' ' → logprob: -16.62671661376953
    8. '(K' → logprob: -17.12671661376953
    9. '2' → logprob: -17.25171661376953
    10. ' (' → logprob: -17.37671661376953

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.029847231227905e-05
    2. 'N' → logprob: -9.500080108642578
    3. '2' → logprob: -12.625080108642578
    4. 'len' → logprob: -13.375080108642578
    5. ' ' → logprob: -15.250080108642578
    6. '(' → logprob: -15.875080108642578
    7. '   ' → logprob: -17.250080108642578
    8. '0' → logprob: -18.250080108642578
    9. '
' → logprob: -18.375080108642578
    10. '```' → logprob: -18.500080108642578

Token 212: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2017824500799179
    2. ',N' → logprob: -1.701782464981079
    3. ' ,' → logprob: -8.5767822265625
    4. ',len' → logprob: -8.9517822265625
    5. 'N' → logprob: -10.2017822265625
    6. ',n' → logprob: -11.8267822265625
    7. '1' → logprob: -12.4517822265625
    8. ',num' → logprob: -14.9517822265625
    9. ',D' → logprob: -15.3267822265625
    10. '+' → logprob: -15.3267822265625

Token 213: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.704065213445574e-05
    2. ' +' → logprob: -10.000046730041504
    3. '):' → logprob: -14.375046730041504
    4. '+
' → logprob: -14.750046730041504
    5. '):
' → logprob: -14.750046730041504
    6. '1' → logprob: -15.625046730041504
    7. '```' → logprob: -17.62504768371582
    8. '＋' → logprob: -17.75004768371582
    9. '+:' → logprob: -18.62504768371582
    10. '
' → logprob: -18.87504768371582

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.750003814697266
    4. ')' → logprob: -16.875003814697266
    5. '```' → logprob: -17.000003814697266
    6. '2' → logprob: -18.375003814697266
    7. '+' → logprob: -18.500003814697266
    8. 'a' → logprob: -18.812503814697266
    9. '１' → logprob: -18.937503814697266
    10. '``' → logprob: -19.312503814697266

Token 215: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40062272548675537
    2. ':' → logprob: -1.2756227254867554
    3. '):
' → logprob: -3.150622844696045
    4. ':
' → logprob: -5.525622844696045
    5. ',' → logprob: -6.400622844696045
    6. ')' → logprob: -6.400622844696045
    7. ' :' → logprob: -7.900622844696045
    8. '   ' → logprob: -8.775622367858887
    9. ' if' → logprob: -9.400622367858887
    10. 'if' → logprob: -11.025622367858887

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17674800753593445
    2. 'if' → logprob: -2.051748037338257
    3. ' if' → logprob: -3.801748037338257
    4. 'ans' → logprob: -4.551747798919678
    5. ' ans' → logprob: -7.551747798919678
    6. '	ans' → logprob: -9.926748275756836
    7. '```' → logprob: -11.301748275756836
    8. '	if' → logprob: -12.301748275756836
    9. 'answer' → logprob: -12.551748275756836
    10. '(ans' → logprob: -12.676748275756836

Token 217: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21088887751102448
    2. 'ans' → logprob: -1.8358888626098633
    3. ' if' → logprob: -4.210888862609863
    4. '   ' → logprob: -4.460888862609863
    5. ' ans' → logprob: -5.960888862609863
    6. 'dist' → logprob: -7.085888862609863
    7. 'print' → logprob: -7.585888862609863
    8. 'for' (adapté à ' for') → logprob: -8.960888862609863
    9. 'd' → logprob: -10.085888862609863
    10. 'answer' → logprob: -10.335888862609863

Token 218: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1028016060590744
    2. 'nv' → logprob: -2.352801561355591
    3. '_,' → logprob: -7.60280179977417
    4. ' nv' → logprob: -7.85280179977417
    5. '(b' → logprob: -7.97780179977417
    6. 'v' → logprob: -8.102801322937012
    7. ' b' → logprob: -8.227801322937012
    8. '(n' → logprob: -8.602801322937012
    9. 'bv' → logprob: -8.852801322937012
    10. 'nb' → logprob: -9.102801322937012

Token 219: ',l' (ID: 45198)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5232436060905457
    2. ' in' → logprob: -0.8982436060905457
    3. 'range' → logprob: -10.02324390411377
    4. '   ' → logprob: -10.27324390411377
    5. ' ' → logprob: -11.39824390411377
    6. '	in' → logprob: -11.89824390411377
    7. '  ' → logprob: -12.02324390411377
    8. 'a' → logprob: -12.02324390411377
    9. '    ' → logprob: -12.52324390411377
    10. ',' → logprob: -13.39824390411377

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34853243827819824
    2. 'in' → logprob: -1.2235324382781982
    3. ' ' → logprob: -10.348532676696777
    4. ',' → logprob: -10.973532676696777
    5. '	in' → logprob: -11.723532676696777
    6. '_in' → logprob: -12.348532676696777
    7. '```' → logprob: -12.473532676696777
    8. ',in' → logprob: -12.473532676696777
    9. 'n' → logprob: -12.598532676696777
    10. '1' → logprob: -12.973532676696777

Token 221: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.004623799119144678
    2. ' edges' → logprob: -5.379623889923096
    3. '(edges' → logprob: -12.754623413085938
    4. '.edges' → logprob: -15.004623413085938
    5. '   ' → logprob: -16.254623413085938
    6. '[' → logprob: -16.504623413085938
    7. '_edges' → logprob: -16.504623413085938
    8. 'answers' → logprob: -17.129623413085938
    9. ' ' → logprob: -17.254623413085938
    10. 'enumer' → logprob: -18.004623413085938

Token 222: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -14.875
    3. '[' → logprob: -16.75
    4. ' [' → logprob: -18.75
    5. '(a' → logprob: -20.0
    6. '[
' → logprob: -20.75
    7. '[i' → logprob: -21.0
    8. '   ' → logprob: -21.125
    9. '[A' → logprob: -21.375
    10. '```' → logprob: -21.375

Token 223: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04402545467019081
    2. ']:' → logprob: -3.544025421142578
    3. '):' → logprob: -4.669025421142578
    4. ':
' → logprob: -5.794025421142578
    5. '[a' → logprob: -6.669025421142578
    6. '):
' → logprob: -9.044025421142578
    7. '}:' → logprob: -9.294025421142578
    8. '>:' → logprob: -9.294025421142578
    9. ']:
' → logprob: -9.544025421142578
    10. '():' → logprob: -10.544025421142578

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005547255277633667
    2. ' if' → logprob: -5.380547046661377
    3. '   ' → logprob: -7.755547046661377
    4. '
' → logprob: -8.380547523498535
    5. 'if' → logprob: -8.755547523498535
    6. '<|end|>' → logprob: -10.130547523498535
    7. '```' → logprob: -10.380547523498535
    8. '           ' → logprob: -11.255547523498535
    9. ',' → logprob: -12.005547523498535
    10. ' ' → logprob: -12.755547523498535

Token 225: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.012353888712823391
    2. ' if' → logprob: -5.137353897094727
    3. '           ' → logprob: -5.887353897094727
    4. '   ' → logprob: -6.012353897094727
    5. '       ' → logprob: -6.887353897094727
    6. 'ans' → logprob: -9.137353897094727
    7. 'dist' → logprob: -10.637353897094727
    8. '
' → logprob: -11.637353897094727
    9. ' ' → logprob: -12.512353897094727
    10. '```' → logprob: -12.637353897094727

Token 226: ' a' (ID: 261)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12261814624071121
    2. 'a' → logprob: -2.3726181983947754
    3. 'abs' → logprob: -3.9976181983947754
    4. ' dist' → logprob: -7.247618198394775
    5. '(dist' → logprob: -7.247618198394775
    6. 'ans' → logprob: -7.372618198394775
    7. '(a' → logprob: -7.747618198394775
    8. 'm' → logprob: -7.747618198394775
    9. '0' → logprob: -8.622617721557617
    10. '(' → logprob: -9.122617721557617

Token 227: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6640114188194275
    2. ' <' → logprob: -0.7890114188194275
    3. '!=' → logprob: -4.539011478424072
    4. '<b' → logprob: -4.539011478424072
    5. ' !=' → logprob: -5.039011478424072
    6. '>' → logprob: -7.164011478424072
    7. ' >' → logprob: -7.789011478424072
    8. '<a' → logprob: -7.914011478424072
    9. '<n' → logprob: -8.039011001586914
    10. '<v' → logprob: -8.539011001586914

Token 228: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00012368128227535635
    2. ' b' → logprob: -9.000123977661133
    3. '>b' → logprob: -17.000123977661133
    4. 'M' → logprob: -17.125123977661133
    5. '   ' → logprob: -17.500123977661133
    6. ' ' → logprob: -17.875123977661133
    7. 'N' → logprob: -18.000123977661133
    8. 'm' → logprob: -18.125123977661133
    9. ')b' → logprob: -18.125123977661133
    10. '=' → logprob: -18.125123977661133

Token 229: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16034181416034698
    2. 'and' → logprob: -1.9103418588638306
    3. ':' → logprob: -9.7853422164917
    4. '           ' → logprob: -10.6603422164917
    5. ':
' → logprob: -10.6603422164917
    6. ' ' → logprob: -12.0353422164917
    7. '       ' → logprob: -12.7853422164917
    8. '<|end|>' → logprob: -13.2853422164917
    9. '          ' → logprob: -14.0353422164917
    10. '	and' → logprob: -14.2853422164917

Token 230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03635561093688011
    2. ' if' → logprob: -3.411355495452881
    3. ' and' → logprob: -6.286355495452881
    4. 'if' → logprob: -8.161355972290039
    5. '       ' → logprob: -9.161355972290039
    6. '```' → logprob: -9.536355972290039
    7. ' dist' → logprob: -9.786355972290039
    8. ' continue' → logprob: -10.161355972290039
    9. ',' → logprob: -10.286355972290039
    10. '               ' → logprob: -10.411355972290039

Token 231: ' d' (ID: 272)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5065972208976746
    2. 'if' → logprob: -2.1315972805023193
    3. ' ans' → logprob: -2.3815972805023193
    4. ' if' → logprob: -3.1315972805023193
    5. 'd' (adapté à ' d') → logprob: -3.3815972805023193
    6. '               ' → logprob: -3.7565972805023193
    7. '           ' → logprob: -4.38159704208374
    8. 'dist' → logprob: -4.38159704208374
    9. 'diff' → logprob: -4.63159704208374
    10. 'continue' → logprob: -4.75659704208374

Token 232: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4508795440196991
    2. 'a' → logprob: -1.9508795738220215
    3. '=' → logprob: -2.4508795738220215
    4. 'iff' → logprob: -3.4508795738220215
    5. '1' → logprob: -3.8258795738220215
    6. 'ab' → logprob: -3.9508795738220215
    7. 'ist' → logprob: -4.2008795738220215
    8. 'min' → logprob: -4.4508795738220215
    9. '_ab' → logprob: -4.8258795738220215
    10. 'if' → logprob: -4.9508795738220215

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4750284254550934
    2. ' =' → logprob: -0.975028395652771
    3. 'ist' → logprob: -7.2250285148620605
    4. '=min' → logprob: -9.225028038024902
    5. 'istance' → logprob: -10.350028038024902
    6. ',' → logprob: -10.350028038024902
    7. '=max' → logprob: -10.475028038024902
    8. 'iff' → logprob: -11.975028038024902
    9. '1' → logprob: -11.975028038024902
    10. 'dist' → logprob: -12.850028038024902

Token 234: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05637882649898529
    2. 'min' → logprob: -3.1813788414001465
    3. 'max' → logprob: -4.6813788414001465
    4. 'abs' → logprob: -5.5563788414001465
    5. '(dist' → logprob: -9.556378364562988
    6. ' dist' → logprob: -10.681378364562988
    7. 'float' → logprob: -10.931378364562988
    8. '(min' → logprob: -11.556378364562988
    9. '(' → logprob: -12.306378364562988
    10. '0' → logprob: -12.431378364562988

Token 235: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.5822400857578032e-05
    2. 'a' → logprob: -10.625025749206543
    3. '[b' → logprob: -13.875025749206543
    4. '(a' → logprob: -15.625025749206543
    5. '[' → logprob: -16.00002670288086
    6. ' a' → logprob: -16.25002670288086
    7. '	a' → logprob: -17.37502670288086
    8. ' [' → logprob: -17.50002670288086
    9. '<a' → logprob: -17.62502670288086
    10. '```' → logprob: -17.62502670288086

Token 236: ']
' (ID: 1592)
  Prédit: '+l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+l' → logprob: -0.2043619155883789
    2. '+' → logprob: -1.954361915588379
    3. '+d' → logprob: -3.454361915588379
    4. ' +' → logprob: -5.079361915588379
    5. '
' → logprob: -6.079361915588379
    6. '+b' → logprob: -6.329361915588379
    7. 'd' → logprob: -7.579361915588379
    8. 'l' → logprob: -8.954361915588379
    9. '+
' → logprob: -9.204361915588379
    10. '<|end|>' → logprob: -9.579361915588379

Token 237: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6391147375106812
    2. '+d' → logprob: -1.1391147375106812
    3. ' +' → logprob: -2.5141148567199707
    4. 'd' → logprob: -2.8891148567199707
    5. '           ' → logprob: -4.389114856719971
    6. '+l' → logprob: -6.514114856719971
    7. ' d' → logprob: -7.014114856719971
    8. ',d' → logprob: -8.514114379882812
    9. '
' → logprob: -9.389114379882812
    10. '<|end|>' → logprob: -9.889114379882812

Token 238: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0013665466103702784
    2. 'dist' → logprob: -6.87636661529541
    3. ' d' → logprob: -8.12636661529541
    4. '           ' → logprob: -10.50136661529541
    5. ' dist' → logprob: -12.62636661529541
    6. '10' → logprob: -13.37636661529541
    7. 'l' → logprob: -13.75136661529541
    8. '               ' → logprob: -14.25136661529541
    9. 'distance' → logprob: -14.25136661529541
    10. 'dl' → logprob: -14.62636661529541

Token 239: '2' (ID: 17)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.020792601630091667
    2. '1' → logprob: -3.8957924842834473
    3. 'b' → logprob: -9.270792961120605
    4. '+b' → logprob: -9.895792961120605
    5. '[a' → logprob: -10.770792961120605
    6. '2' → logprob: -11.020792961120605
    7. ',b' → logprob: -11.520792961120605
    8. '+' → logprob: -11.645792961120605
    9. '```' → logprob: -11.895792961120605
    10. '=b' → logprob: -11.895792961120605

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22549918293952942
    2. '=' → logprob: -1.600499153137207
    3. 'dist' → logprob: -9.725499153137207
    4. '+' → logprob: -11.600499153137207
    5. 'd' → logprob: -11.850499153137207
    6. ' +' → logprob: -12.850499153137207
    7. ' ' → logprob: -13.100499153137207
    8. '[' → logprob: -13.475499153137207
    9. 'b' → logprob: -14.475499153137207
    10. '<|end|>' → logprob: -14.475499153137207

Token 241: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.002476604888215661
    2. ' dist' → logprob: -6.002476692199707
    3. ' ' → logprob: -15.377476692199707
    4. '   ' → logprob: -15.627476692199707
    5. '	dist' → logprob: -16.00247573852539
    6. '(dist' → logprob: -16.12747573852539
    7. 'd' → logprob: -16.50247573852539
    8. '10' → logprob: -16.50247573852539
    9. '  ' → logprob: -16.50247573852539
    10. 'distance' → logprob: -17.25247573852539

Token 242: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.03804321587085724
    2. 'b' → logprob: -3.288043260574341
    3. '	b' → logprob: -14.163043022155762
    4. '[' → logprob: -15.038043022155762
    5. '[
' → logprob: -15.288043022155762
    6. '   ' → logprob: -15.663043022155762
    7. ' b' → logprob: -16.288043975830078
    8. '```' → logprob: -16.663043975830078
    9. ''b' → logprob: -17.288043975830078
    10. ' [' → logprob: -17.288043975830078

Token 243: ']
' (ID: 1592)
  Prédit: '+l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+l' → logprob: -0.49083155393600464
    2. '+' → logprob: -1.4908316135406494
    3. '           ' → logprob: -2.4908316135406494
    4. ' +' → logprob: -3.1158316135406494
    5. '
' → logprob: -3.4908316135406494
    6. ')' → logprob: -6.61583137512207
    7. ',l' → logprob: -7.11583137512207
    8. '               ' → logprob: -7.74083137512207
    9. '<|end|>' → logprob: -7.86583137512207
    10. '            ' → logprob: -8.24083137512207

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005002511315979064
    2. ' if' → logprob: -8.250500679016113
    3. 'if' → logprob: -8.875500679016113
    4. '            
' → logprob: -10.625500679016113
    5. ',' → logprob: -10.875500679016113
    6. '```' → logprob: -10.875500679016113
    7. '<|end|>' → logprob: -11.375500679016113
    8. '
' → logprob: -12.125500679016113
    9. 'diff' → logprob: -13.000500679016113
    10. '   ' → logprob: -13.375500679016113

Token 245: ' diff' (ID: 8868)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3367263078689575
    2. 'if' → logprob: -1.4617263078689575
    3. 'diff' (adapté à ' diff') → logprob: -4.086726188659668
    4. 'res' → logprob: -4.586726188659668
    5. 'tmp' → logprob: -5.836726188659668
    6. 'temp' → logprob: -5.836726188659668
    7. 'avg' → logprob: -5.961726188659668
    8. 'max' → logprob: -5.961726188659668
    9. 'val' → logprob: -6.086726188659668
    10. 'cand' → logprob: -6.461726188659668

Token 246: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740805923938751
    2. ' =' → logprob: -0.9740805625915527
    3. '_' → logprob: -14.349081039428711
    4. 's' → logprob: -14.599081039428711
    5. ',' → logprob: -14.849081039428711
    6. '=float' → logprob: -15.099081039428711
    7. '=int' → logprob: -15.224081039428711
    8. '＝' → logprob: -15.349081039428711
    9. ' ' → logprob: -15.599081039428711
    10. ' ' → logprob: -15.849081039428711

Token 247: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0003788376343436539
    2. ' abs' → logprob: -8.500378608703613
    3. 'd' → logprob: -9.000378608703613
    4. 'l' → logprob: -10.750378608703613
    5. 'float' → logprob: -11.500378608703613
    6. '(abs' → logprob: -12.000378608703613
    7. '   ' → logprob: -12.375378608703613
    8. 'dist' → logprob: -12.500378608703613
    9. 'max' → logprob: -12.625378608703613
    10. 'min' → logprob: -13.750378608703613

Token 248: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0001137947037932463
    2. '(dist' → logprob: -9.250113487243652
    3. '(diff' → logprob: -11.625113487243652
    4. 'd' → logprob: -12.125113487243652
    5. '(' → logprob: -13.000113487243652
    6. '((' → logprob: -14.375113487243652
    7. '(distance' → logprob: -16.50011444091797
    8. 'dist' → logprob: -16.75011444091797
    9. ' (' → logprob: -17.37511444091797
    10. '(
' → logprob: -17.50011444091797

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. '2' → logprob: -10.875021934509277
    3. 'd' → logprob: -13.750021934509277
    4. ' ' → logprob: -14.875021934509277
    5. '```' → logprob: -15.375021934509277
    6. '(a' → logprob: -15.500021934509277
    7. ' d' → logprob: -15.625021934509277
    8. 's' → logprob: -15.625021934509277
    9. 'a' → logprob: -16.00002098083496
    10. ')' → logprob: -16.43752098083496

Token 250: '-d' (ID: 2469)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6493040323257446
    2. '-d' → logprob: -0.8993040323257446
    3. ' -' → logprob: -2.649303913116455
    4. '-
' → logprob: -11.149304389953613
    5. '-D' → logprob: -12.024304389953613
    6. ' ' → logprob: -12.149304389953613
    7. '-dist' → logprob: -12.524304389953613
    8. '   ' → logprob: -13.149304389953613
    9. 'diff' → logprob: -13.399304389953613
    10. ' -
' → logprob: -14.149304389953613

Token 251: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018899753922596574
    2. 'iff' → logprob: -9.375188827514648
    3. '1' → logprob: -9.750188827514648
    4. 'diff' → logprob: -11.000188827514648
    5. ' ' → logprob: -11.375188827514648
    6. 'b' → logprob: -11.875188827514648
    7. 'd' → logprob: -13.000188827514648
    8. 'iffs' → logprob: -13.125188827514648
    9. '```' → logprob: -13.500188827514648
    10. 'if' → logprob: -13.625188827514648

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051378775388002396
    2. ')
' → logprob: -3.0513787269592285
    3. ' )' → logprob: -6.6763787269592285
    4. '           ' → logprob: -7.6763787269592285
    5. ' )
' → logprob: -7.6763787269592285
    6. ')>' → logprob: -9.176379203796387
    7. ' -' → logprob: -9.301379203796387
    8. ')<' → logprob: -9.676379203796387
    9. '<|end|>' → logprob: -9.676379203796387
    10. ')<=' → logprob: -9.801379203796387

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008320115506649017
    2. ' if' → logprob: -5.133320331573486
    3. '
' → logprob: -7.133320331573486
    4. '            
' → logprob: -7.633320331573486
    5. '<|end|>' → logprob: -8.258319854736328
    6. ',' → logprob: -8.633319854736328
    7. ' 
' → logprob: -9.008319854736328
    8. 'if' → logprob: -9.258319854736328
    9. '            ' → logprob: -9.258319854736328
    10. ' ' → logprob: -9.633319854736328

Token 254: ' mx' (ID: 28004)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13358788192272186
    2. 'ans' → logprob: -2.7585878372192383
    3. 'l' → logprob: -4.258587837219238
    4. ' if' → logprob: -4.758587837219238
    5. 'min' → logprob: -5.008587837219238
    6. 'res' → logprob: -5.258587837219238
    7. '           ' → logprob: -5.258587837219238
    8. 'max' → logprob: -5.508587837219238
    9. 'possible' → logprob: -6.258587837219238
    10. 'cap' → logprob: -6.383587837219238

Token 255: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048844076693058014
    2. ' =' → logprob: -3.0488440990448
    3. '=max' → logprob: -8.298844337463379
    4. '=int' → logprob: -13.298844337463379
    5. '=min' → logprob: -13.298844337463379
    6. '+=' → logprob: -13.548844337463379
    7. '=l' → logprob: -14.173844337463379
    8. '=len' → logprob: -14.923844337463379
    9. ',' → logprob: -15.048844337463379
    10. '=ax' → logprob: -15.548844337463379

Token 256: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.36293941736221313
    2. 'l' → logprob: -1.3629393577575684
    3. ' max' → logprob: -3.7379393577575684
    4. '(max' → logprob: -4.737939357757568
    5. 'dist' → logprob: -5.612939357757568
    6. 'min' → logprob: -5.862939357757568
    7. 'diff' → logprob: -6.112939357757568
    8. ' l' → logprob: -6.362939357757568
    9. '(l' → logprob: -6.362939357757568
    10. 'float' → logprob: -6.987939357757568

Token 257: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.01192802470177412
    2. '(dist' → logprob: -5.386928081512451
    3. '(diff' → logprob: -5.761928081512451
    4. '(l' → logprob: -5.886928081512451
    5. '(' → logprob: -7.011928081512451
    6. 'd' → logprob: -8.386927604675293
    7. 'l' → logprob: -9.386927604675293
    8. 'dist' → logprob: -9.761927604675293
    9. 'diff' → logprob: -10.011927604675293
    10. '(cd' → logprob: -11.511927604675293

Token 258: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8806365132331848
    2. '(d' → logprob: -1.13063645362854
    3. '1' → logprob: -1.75563645362854
    4. 'l' → logprob: -3.88063645362854
    5. '(a' → logprob: -4.130636692047119
    6. 'diff' → logprob: -4.255636692047119
    7. 'a' → logprob: -4.630636692047119
    8. 'dist' → logprob: -4.755636692047119
    9. '(diff' → logprob: -5.005636692047119
    10. '[d' → logprob: -5.130636692047119

Token 259: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.001502598519437015
    2. ',' → logprob: -6.626502513885498
    3. ' ,' → logprob: -8.876502990722656
    4. 'd' → logprob: -10.751502990722656
    5. '+d' → logprob: -12.126502990722656
    6. '+' → logprob: -13.001502990722656
    7. ',l' → logprob: -13.376502990722656
    8. ',m' → logprob: -13.376502990722656
    9. ',
' → logprob: -13.876502990722656
    10. 'diff' → logprob: -14.251502990722656

Token 260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0032797870226204395
    2. 'b' → logprob: -6.128279685974121
    3. '1' → logprob: -7.128279685974121
    4. 'a' → logprob: -8.503279685974121
    5. 'd' → logprob: -10.128279685974121
    6. '```' → logprob: -11.003279685974121
    7. 's' → logprob: -11.628279685974121
    8. ')' → logprob: -11.753279685974121
    9. ',b' → logprob: -12.628279685974121
    10. '[b' → logprob: -13.003279685974121

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36093953251838684
    2. '+l' → logprob: -1.4859395027160645
    3. '+' → logprob: -3.3609395027160645
    4. 'diff' → logprob: -4.2359395027160645
    5. ' +' → logprob: -4.6109395027160645
    6. ')
' → logprob: -4.6109395027160645
    7. ',l' → logprob: -5.6109395027160645
    8. ',' → logprob: -6.4859395027160645
    9. '
' → logprob: -7.7359395027160645
    10. ' -' → logprob: -7.9859395027160645

Token 262: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12659215927124023
    2. ' if' → logprob: -2.2515921592712402
    3. '           ' → logprob: -4.37659215927124
    4. 'gap' → logprob: -8.126592636108398
    5. 'res' → logprob: -8.251592636108398
    6. 't' → logprob: -9.376592636108398
    7. 's' → logprob: -9.501592636108398
    8. 'x' → logprob: -10.001592636108398
    9. '            
' → logprob: -10.126592636108398
    10. ' gap' → logprob: -10.251592636108398

Token 263: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006982356775552034
    2. 'ans' → logprob: -6.381982326507568
    3. 'res' → logprob: -7.006982326507568
    4. 'val' → logprob: -7.881982326507568
    5. 'add' → logprob: -7.881982326507568
    6. 'candidate' → logprob: -8.131982803344727
    7. 'x' → logprob: -8.381982803344727
    8. 'c' → logprob: -8.381982803344727
    9. 'rem' → logprob: -8.506982803344727
    10. 'possible' → logprob: -8.506982803344727

Token 264: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.05477609485387802
    2. 'mx' → logprob: -3.179776191711426
    3. ' diff' → logprob: -4.679776191711426
    4. 'l' → logprob: -6.554776191711426
    5. ' mx' → logprob: -7.804776191711426
    6. '(diff' → logprob: -9.304776191711426
    7. 'dist' → logprob: -9.429776191711426
    8. '0' → logprob: -9.679776191711426
    9. 'd' → logprob: -9.929776191711426
    10. '(mx' → logprob: -10.179776191711426

Token 265: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.49914538860321045
    2. ' <' → logprob: -0.9991453886032104
    3. ' >' → logprob: -4.7491455078125
    4. '>' → logprob: -5.1241455078125
    5. ' <=' → logprob: -5.7491455078125
    6. '+' → logprob: -5.9991455078125
    7. '<=' → logprob: -6.2491455078125
    8. ' +' → logprob: -6.4991455078125
    9. '==' → logprob: -7.7491455078125
    10. ' ==' → logprob: -7.9991455078125

Token 266: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00043853666284121573
    2. ' l' → logprob: -7.875438690185547
    3. '=' → logprob: -10.000438690185547
    4. '2' → logprob: -12.375438690185547
    5. '1' → logprob: -12.625438690185547
    6. '=l' → logprob: -13.000438690185547
    7. 'mx' → logprob: -14.500438690185547
    8. '0' → logprob: -14.625438690185547
    9. '
' → logprob: -14.750438690185547
    10. ' ' → logprob: -14.875438690185547

Token 267: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013588618487119675
    2. ':
' → logprob: -4.3885884284973145
    3. ' and' → logprob: -7.0135884284973145
    4. 'and' → logprob: -8.763588905334473
    5. ' :' → logprob: -12.138588905334473
    6. '):' → logprob: -12.263588905334473
    7. '>:' → logprob: -12.763588905334473
    8. ':
' → logprob: -13.138588905334473
    9. ':

' → logprob: -13.138588905334473
    10. '>' → logprob: -13.638588905334473

Token 268: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7372309565544128
    2. 'ans' → logprob: -1.2372310161590576
    3. ' ans' → logprob: -2.4872310161590576
    4. 'x' → logprob: -3.1122310161590576
    5. 't' → logprob: -3.8622310161590576
    6. 'gap' → logprob: -4.2372307777404785
    7. 'val' → logprob: -4.7372307777404785
    8. 'pos' → logprob: -4.8622307777404785
    9. 'remain' → logprob: -4.9872307777404785
    10. 'temp' → logprob: -5.1122307777404785

Token 269: ' cand' (ID: 31771)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4880153238773346
    2. 'cand' (adapté à ' cand') → logprob: -2.8630154132843018
    3. 'temp' → logprob: -2.9880154132843018
    4. 'tmp' → logprob: -3.1130154132843018
    5. 't' → logprob: -3.1130154132843018
    6. 'candidate' → logprob: -3.3630154132843018
    7. 'x' → logprob: -3.4880154132843018
    8. 'add' → logprob: -3.7380154132843018
    9. 'val' → logprob: -4.113015174865723
    10. 'remain' → logprob: -4.113015174865723

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020646294578909874
    2. ' =' → logprob: -3.895646333694458
    3. '+=' → logprob: -9.270646095275879
    4. '=(' → logprob: -12.145646095275879
    5. ' +=' → logprob: -13.520646095275879
    6. '=max' → logprob: -14.020646095275879
    7. '=float' → logprob: -14.270646095275879
    8. '=((' → logprob: -14.895646095275879
    9. '=
' → logprob: -15.145646095275879
    10. 'id' → logprob: -15.645646095275879

Token 271: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.021082233637571335
    2. 'max' → logprob: -4.646082401275635
    3. '(mx' → logprob: -4.646082401275635
    4. ' mx' → logprob: -6.646082401275635
    5. '(max' → logprob: -8.771081924438477
    6. 'ans' → logprob: -10.396081924438477
    7. '(m' → logprob: -10.396081924438477
    8. '0' → logprob: -10.521081924438477
    9. '   ' → logprob: -10.646081924438477
    10. 'float' → logprob: -11.146081924438477

Token 272: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008772692643105984
    2. ' +' → logprob: -4.758772850036621
    3. '+(' → logprob: -9.258772850036621
    4. '+l' → logprob: -9.758772850036621
    5. '+=' → logprob: -13.383772850036621
    6. '+
' → logprob: -14.258772850036621
    7. '＋' → logprob: -14.633772850036621
    8. '```' → logprob: -15.133772850036621
    9. '+c' → logprob: -15.258772850036621
    10. '-' → logprob: -15.508772850036621

Token 273: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.007013378664851189
    2. ' (' → logprob: -5.382013320922852
    3. '(float' → logprob: -6.382013320922852
    4. '(' → logprob: -8.632013320922852
    5. '
' → logprob: -8.757013320922852
    6. '(abs' → logprob: -8.882013320922852
    7. '(diff' → logprob: -9.132013320922852
    8. ' ' → logprob: -11.132013320922852
    9. '(double' → logprob: -11.257013320922852
    10. 'float' → logprob: -11.257013320922852

Token 274: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20154023170471191
    2. '(l' → logprob: -1.701540231704712
    3. ' (' → logprob: -9.826539993286133
    4. '(' → logprob: -10.451539993286133
    5. ' l' → logprob: -10.826539993286133
    6. '```' → logprob: -11.701539993286133
    7. '	l' → logprob: -12.451539993286133
    8. '   ' → logprob: -12.451539993286133
    9. ' ' → logprob: -13.076539993286133
    10. 'float' → logprob: -13.951539993286133

Token 275: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.4854435622692108
    2. ' -' → logprob: -0.9854435920715332
    3. '-' → logprob: -4.485443592071533
    4. '-D' → logprob: -10.735443115234375
    5. 'diff' → logprob: -12.610443115234375
    6. ' ' → logprob: -13.235443115234375
    7. '	diff' → logprob: -13.485443115234375
    8. ' diff' → logprob: -13.860443115234375
    9. '_diff' → logprob: -14.985443115234375
    10. '```' → logprob: -15.860443115234375

Token 276: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00150390958879143
    2. ' diff' → logprob: -6.501503944396973
    3. '	diff' → logprob: -13.626503944396973
    4. '(diff' → logprob: -16.126502990722656
    5. '
' → logprob: -16.251502990722656
    6. '   ' → logprob: -17.251502990722656
    7. ' ' → logprob: -17.251502990722656
    8. 'd' → logprob: -18.876502990722656
    9. '  ' → logprob: -19.001502990722656
    10. '_diff' → logprob: -19.501502990722656

Token 277: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014345668256282806
    2. ')/' → logprob: -4.264345645904541
    3. ' )' → logprob: -8.6393461227417
    4. ')*' → logprob: -12.2643461227417
    5. ')
' → logprob: -15.8893461227417
    6. ')/(' → logprob: -16.139345169067383
    7. ')>>' → logprob: -16.264345169067383
    8. '）' → logprob: -16.514345169067383
    9. '   ' → logprob: -17.514345169067383
    10. ')**' → logprob: -17.514345169067383

Token 278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -14.750004768371582
    4. '
' → logprob: -15.375004768371582
    5. '   ' → logprob: -16.6250057220459
    6. '２' → logprob: -18.0625057220459
    7. '۲' → logprob: -18.1875057220459
    8. '
' → logprob: -18.3125057220459
    9. '202' → logprob: -18.7500057220459
    10. '

' → logprob: -18.8750057220459

Token 279: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6616884469985962
    2. '
' → logprob: -1.4116884469985962
    3. 'if' → logprob: -1.5366884469985962
    4. '           ' → logprob: -3.7866883277893066
    5. 'ans' → logprob: -7.411688327789307
    6. '               ' → logprob: -7.786688327789307
    7. ' ans' → logprob: -7.786688327789307
    8. '            
' → logprob: -8.411688804626465
    9. '
' → logprob: -8.536688804626465
    10. '```' → logprob: -8.786688804626465

Token 280: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4044073522090912
    2. 'if' → logprob: -1.2794073820114136
    3. '
' → logprob: -3.779407262802124
    4. '           ' → logprob: -3.779407262802124
    5. 'ans' → logprob: -5.279407501220703
    6. ' ans' → logprob: -5.779407501220703
    7. '   ' → logprob: -8.904407501220703
    8. '               ' → logprob: -9.154407501220703
    9. '	ans' → logprob: -9.904407501220703
    10. '       ' → logprob: -10.279407501220703

Token 281: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5889298915863037
    2. 'else' (adapté à ' else') → logprob: -1.0889298915863037
    3. ' else' → logprob: -2.4639298915863037
    4. '               ' → logprob: -3.9639298915863037
    5. ' if' → logprob: -5.963930130004883
    6. 'if' → logprob: -6.713930130004883
    7. '       ' → logprob: -7.713930130004883
    8. '=' → logprob: -10.463930130004883
    9. '          ' → logprob: -10.463930130004883
    10. '            
' → logprob: -10.588930130004883

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9991046786308289
    2. '               ' → logprob: -0.9991046786308289
    3. ':
' → logprob: -1.3741047382354736
    4. 'cand' → logprob: -4.7491044998168945
    5. ':c' → logprob: -7.4991044998168945
    6. '           ' → logprob: -7.8741044998168945
    7. '{
' → logprob: -8.874104499816895
    8. 'continue' → logprob: -8.999104499816895
    9. 'c' → logprob: -9.499104499816895
    10. '   ' → logprob: -9.624104499816895

Token 283: '               ' (ID: 506)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.0957597941160202
    2. 'mx' → logprob: -2.595759868621826
    3. '   ' → logprob: -4.845759868621826
    4. '               ' → logprob: -5.470759868621826
    5. 'continue' → logprob: -6.345759868621826
    6. '           ' → logprob: -6.345759868621826
    7. ' cand' → logprob: -7.845759868621826
    8. 'c' → logprob: -8.345759391784668
    9. 'cnt' → logprob: -8.970759391784668
    10. 'max' → logprob: -9.345759391784668

Token 284: ' cand' (ID: 31771)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.11440139263868332
    2. 'cand' (adapté à ' cand') → logprob: -2.239401340484619
    3. 'c' → logprob: -7.614401340484619
    4. 'max' → logprob: -7.989401340484619
    5. ' mx' → logprob: -8.239401817321777
    6. 'ans' → logprob: -8.364401817321777
    7. ' cand' → logprob: -9.364401817321777
    8. 'continue' → logprob: -10.239401817321777
    9. 'mn' → logprob: -10.739401817321777
    10. 'min' → logprob: -10.739401817321777

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751179739832878
    2. ' =' → logprob: -3.5297510623931885
    3. '+=' → logprob: -14.27975082397461
    4. '=

' → logprob: -17.02975082397461
    5. ' +=' → logprob: -17.52975082397461
    6. '=c' → logprob: -18.65475082397461
    7. '=max' → logprob: -18.65475082397461
    8. '.=' → logprob: -18.90475082397461
    9. ' ' → logprob: -18.90475082397461
    10. ',' → logprob: -19.15475082397461

Token 286: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.006114955060184002
    2. ' mx' → logprob: -5.131114959716797
    3. 'max' → logprob: -8.881114959716797
    4. 'min' → logprob: -11.256114959716797
    5. 'float' → logprob: -11.381114959716797
    6. ' ' → logprob: -12.006114959716797
    7. 'm' → logprob: -12.131114959716797
    8. '(mx' → logprob: -12.256114959716797
    9. 'l' → logprob: -13.881114959716797
    10. 'mn' → logprob: -13.881114959716797

Token 287: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03356489539146423
    2. 'if' → logprob: -3.908564805984497
    3. ' if' → logprob: -5.158565044403076
    4. '
' → logprob: -5.283565044403076
    5. '            
' → logprob: -7.158565044403076
    6. '       ' → logprob: -7.283565044403076
    7. 'ans' → logprob: -8.783564567565918
    8. '          ' → logprob: -9.283564567565918
    9. '               ' → logprob: -9.283564567565918
    10. '   ' → logprob: -10.033564567565918

Token 288: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020489091984927654
    2. '
' → logprob: -7.002048969268799
    3. '   ' → logprob: -7.627048969268799
    4. ' if' → logprob: -8.62704849243164
    5. '```' → logprob: -9.00204849243164
    6. '       ' → logprob: -9.00204849243164
    7. ',' → logprob: -9.37704849243164
    8. '            
' → logprob: -10.25204849243164
    9. '               ' → logprob: -10.37704849243164
    10. '<|end|>' → logprob: -10.62704849243164

Token 289: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.049336325377225876
    2. 'ans' → logprob: -3.1743364334106445
    3. ' if' → logprob: -5.6743364334106445
    4. '           ' → logprob: -5.9243364334106445
    5. '   ' → logprob: -9.174336433410645
    6. ' ans' → logprob: -9.424336433410645
    7. '```' → logprob: -11.549336433410645
    8. '       ' → logprob: -11.674336433410645
    9. '
' → logprob: -13.049336433410645
    10. 'answer' → logprob: -13.549336433410645

Token 290: ' cand' (ID: 31771)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.368328720331192
    2. ' cand' → logprob: -1.9933286905288696
    3. 'cand' → logprob: -2.243328809738159
    4. 'ans' → logprob: -2.868328809738159
    5. '(ans' → logprob: -5.49332857131958
    6. ' abs' → logprob: -6.36832857131958
    7. ' dist' → logprob: -6.74332857131958
    8. 'abs' → logprob: -7.86832857131958
    9. ' isinstance' → logprob: -8.243329048156738
    10. ' ' → logprob: -8.618329048156738

Token 291: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5730154514312744
    2. ' >' → logprob: -1.1980154514312744
    3. '<' → logprob: -2.3230154514312744
    4. ' <' → logprob: -3.3230154514312744
    5. 'ans' → logprob: -9.448015213012695
    6. ' ' → logprob: -9.823015213012695
    7. ' ans' → logprob: -10.448015213012695
    8. '>
' → logprob: -10.698015213012695
    9. '><' → logprob: -10.698015213012695
    10. '>K' → logprob: -11.073015213012695

Token 292: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12693126499652863
    2. ' ans' → logprob: -2.1269311904907227
    3. '	ans' → logprob: -13.126931190490723
    4. '(ans' → logprob: -14.251931190490723
    5. ' ' → logprob: -16.12693214416504
    6. '0' → logprob: -16.37693214416504
    7. 'answer' → logprob: -16.37693214416504
    8. '=' → logprob: -17.00193214416504
    9. '_ans' → logprob: -17.50193214416504
    10. 'Ans' → logprob: -17.87693214416504

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5763864517211914
    2. ':
' → logprob: -0.8263864517211914
    3. '               ' → logprob: -8.826386451721191
    4. ' :
' → logprob: -9.076386451721191
    5. '           ' → logprob: -9.326386451721191
    6. ' :' → logprob: -10.201386451721191
    7. ':
' → logprob: -11.076386451721191
    8. '=' → logprob: -11.201386451721191
    9. '   ' → logprob: -12.201386451721191
    10. ' and' → logprob: -12.451386451721191

Token 294: '               ' (ID: 506)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.22898215055465698
    2. '               ' → logprob: -1.7289822101593018
    3. ' cand' → logprob: -3.8539822101593018
    4. 'ans' → logprob: -5.478981971740723
    5. 'cand' → logprob: -6.978981971740723
    6. '           ' → logprob: -7.478981971740723
    7. '            ' → logprob: -8.978981971740723
    8. '                ' → logprob: -9.978981971740723
    9. '	ans' → logprob: -9.978981971740723
    10. '              ' → logprob: -10.478981971740723

Token 295: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.6931495666503906
    2. ' ans' → logprob: -0.6931495666503906
    3. '	ans' → logprob: -13.56814956665039
    4. '(ans' → logprob: -14.31814956665039
    5. '_ans' → logprob: -15.44314956665039
    6. '               ' → logprob: -15.56814956665039
    7. 'cand' → logprob: -16.94314956665039
    8. 'answer' → logprob: -17.06814956665039
    9. '```' → logprob: -17.69314956665039
    10. '           ' → logprob: -18.19314956665039

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868713676929474
    2. '=' → logprob: -1.136871337890625
    3. '=c' → logprob: -15.386871337890625
    4. ' ' → logprob: -16.886871337890625
    5. '＝' → logprob: -18.261871337890625
    6. '.=' → logprob: -18.386871337890625
    7. ' =)' → logprob: -18.511871337890625
    8. '.' → logprob: -18.886871337890625
    9. '=cut' → logprob: -18.886871337890625
    10. ',' → logprob: -19.761871337890625

Token 297: ' cand' (ID: 31771)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.0619712732732296
    2. ' cand' → logprob: -2.8119711875915527
    3. 'c' → logprob: -12.686971664428711
    4. 'cant' → logprob: -14.936971664428711
    5. ' ' → logprob: -16.43697166442871
    6. 'cad' → logprob: -17.06197166442871
    7. '	c' → logprob: -17.18697166442871
    8. ' candid' → logprob: -17.18697166442871
    9. 'Cand' → logprob: -17.31197166442871
    10. 'candidate' → logprob: -17.56197166442871

Token 298: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47714927792549133
    2. '
' → logprob: -0.977149248123169
    3. '<|end|>' → logprob: -6.727149486541748
    4. ' print' → logprob: -7.227149486541748
    5. '\n' → logprob: -7.727149486541748
    6. ' 
' → logprob: -8.35214900970459
    7. '
' → logprob: -8.85214900970459
    8. ')' → logprob: -9.10214900970459
    9. '            
' → logprob: -9.72714900970459
    10. '  
' → logprob: -10.22714900970459

Token 299: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009438612614758313
    2. '
' → logprob: -7.000943660736084
    3. ' print' → logprob: -10.750944137573242
    4. '```' → logprob: -11.625944137573242
    5. '
' → logprob: -13.875944137573242
    6. '\n' → logprob: -14.500944137573242
    7. ' 
' → logprob: -16.125944137573242
    8. '  
' → logprob: -16.125944137573242
    9. '``' → logprob: -16.875944137573242
    10. '\
' → logprob: -17.125944137573242

Token 300: '(round' (ID: 75171)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.37898609042167664
    2. '(f' → logprob: -2.003986120223999
    3. '(int' → logprob: -2.628986120223999
    4. '(' → logprob: -3.253986120223999
    5. '(round' → logprob: -3.253986120223999
    6. '("{' → logprob: -4.00398588180542
    7. '("%.' → logprob: -4.62898588180542
    8. '('{' → logprob: -6.75398588180542
    9. '('' → logprob: -7.00398588180542
    10. '(float' → logprob: -8.003986358642578

Token 301: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.875
    3. 'ans' → logprob: -16.125
    4. '(answer' → logprob: -17.875
    5. ' (' → logprob: -18.625
    6. ')' → logprob: -19.25
    7. ' ans' → logprob: -19.25
    8. '(
' → logprob: -19.375
    9. '	ans' → logprob: -19.875
    10. '(abs' → logprob: -20.25

Token 302: '))' (ID: 915)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007357797585427761
    2. ')' → logprob: -5.132357597351074
    3. ' ,' → logprob: -6.632357597351074
    4. '(' → logprob: -10.007357597351074
    5. '(),' → logprob: -10.007357597351074
    6. '))' → logprob: -12.132357597351074
    7. '())' → logprob: -12.507357597351074
    8. '2' → logprob: -12.507357597351074
    9. ' )' → logprob: -13.257357597351074
    10. '1' → logprob: -13.507357597351074


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 300
Tokens correctement prédits (1ère position, stricte): 130
Tokens correctement prédits (1ère position, avec adaptation): 143
Tokens correctement prédits (top 10): 274
Précision stricte (1ère position): 43.33%
Précision adaptée (1ère position): 47.67%
Précision (top 10): 91.33%
================================================================================
