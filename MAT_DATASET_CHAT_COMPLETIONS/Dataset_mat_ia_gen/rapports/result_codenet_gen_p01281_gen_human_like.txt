================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def count_tatami_placements(H, W):
    # Ensure H <= W for consistent handling
    if H > W:
        H, W = W, H

    # Each tatami covers 2 squares: 1x2 or 2x1
    if (H * W) % 2 == 1:
        return 0

    # DP approach with bitmask for rows
    from functools import lru_cache

    full = (1 << W) - 1  # all bits set for W columns

    @lru_cache(maxsize=None)
    def dfs(row, mask):
        # row: current row index
        # mask: occupancy of current row (bits set = occupied)
        if row == H:
            return 1 if mask == 0 else 0
        return search_row(row, mask, 0, 0)

    def search_row(row, mask, pos, next_mask):
        # Try to fill current row cells starting at 'pos' with tatamis
        # next_mask: occupancy for next row
        if pos == W:
            # move to next row
            return dfs(row + 1, next_mask)
        # If current cell occupied, skip
        if (mask & (1 << pos)) != 0:
            return search_row(row, mask, pos + 1, next_mask)

        res = 0
        # Try horizontal placement (current cell and next cell in the same row)
        if pos + 1 < W and (mask & (1 << (pos + 1))) == 0:
            res += search_row(row, mask, pos + 2, next_mask)
        # Try vertical placement (current cell and cell in next row)
        if row + 1 < H:
            # Mark cell in next row occupied by vertical tatami
            res += search_row(row, mask, pos + 1, next_mask | (1 << pos))
        return res

def main():
    while True:
        line = input().strip()
        if line == '':
            continue
        H, W = map(int, line.split())
        if H == 0 and W == 0:
            break
        print(count_tatami_placements(H, W))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' count' (ID: 3605)
  → Token d'amorce (pas de prédiction)

Token 2: '_t' (ID: 838)
  → Token d'amorce (pas de prédiction)

Token 3: 'at' (ID: 266)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.1713043600320816
    2. '_' → logprob: -2.17130446434021
    3. '_o' → logprob: -3.42130446434021
    4. 'okens' → logprob: -4.921304225921631
    5. 'e' → logprob: -6.546304225921631
    6. 's' → logprob: -7.546304225921631
    7. 'r' → logprob: -7.671304225921631
    8. 'otal' → logprob: -7.921304225921631
    9. '_s' → logprob: -8.796304702758789
    10. 'a' → logprob: -8.921304702758789

Token 4: 'ami' (ID: 4938)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29554006457328796
    2. '_s' → logprob: -2.4205400943756104
    3. 't' → logprob: -2.6705400943756104
    4. '_t' → logprob: -2.9205400943756104
    5. 'o' → logprob: -4.295539855957031
    6. '_' → logprob: -4.795539855957031
    7. 'toos' → logprob: -5.170539855957031
    8. '```' → logprob: -5.170539855957031
    9. 'too' → logprob: -5.920539855957031
    10. 'oo' → logprob: -6.420539855957031

Token 5: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3576047122478485
    2. '_' → logprob: -1.732604742050171
    3. '_:' → logprob: -2.857604742050171
    4. 's' → logprob: -3.732604742050171
    5. '():' → logprob: -4.232604503631592
    6. '_s' → logprob: -4.982604503631592
    7. '(_:' → logprob: -5.107604503631592
    8. '```' → logprob: -5.357604503631592
    9. '(:' → logprob: -5.482604503631592
    10. '(s' → logprob: -6.357604503631592

Token 6: 'placements' (ID: 72793)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05013824254274368
    2. 'mat' → logprob: -3.425138235092163
    3. ' mats' → logprob: -4.425138473510742
    4. '```' → logprob: -6.050138473510742
    5. 'tiles' → logprob: -7.550138473510742
    6. 'str' → logprob: -7.675138473510742
    7. 'pan' → logprob: -8.675138473510742
    8. 's' → logprob: -8.925138473510742
    9. 'def' → logprob: -9.175138473510742
    10. '   ' → logprob: -9.175138473510742

Token 7: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019877968356013298
    2. '_' → logprob: -5.019877910614014
    3. '(:' → logprob: -5.269877910614014
    4. '():' → logprob: -5.394877910614014
    5. '_:' → logprob: -6.394877910614014
    6. '(_:' → logprob: -7.144877910614014
    7. ':' → logprob: -7.519877910614014
    8. '(":' → logprob: -9.269878387451172
    9. '```' → logprob: -9.394878387451172
    10. '(_' → logprob: -10.144878387451172

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004443412646651268
    2. '):' → logprob: -5.504443645477295
    3. ' ,' → logprob: -9.004443168640137
    4. ')' → logprob: -9.004443168640137
    5. ':' → logprob: -9.504443168640137
    6. ',
' → logprob: -10.879443168640137
    7. '=' → logprob: -12.504443168640137
    8. ',int' → logprob: -12.504443168640137
    9. '_,' → logprob: -12.504443168640137
    10. ',h' → logprob: -13.629443168640137

Token 9: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.632737398147583
    2. 'W' → logprob: -0.757737398147583
    3. 'w' → logprob: -10.007737159729004
    4. ' ' → logprob: -10.632737159729004
    5. '    ' → logprob: -11.382737159729004
    6. '   ' → logprob: -11.632737159729004
    7. 'N' → logprob: -11.882737159729004
    8. 'T' → logprob: -12.132737159729004
    9. ' ' → logprob: -12.257737159729004
    10. '```' → logprob: -12.382737159729004

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003322557546198368
    2. ',' → logprob: -6.003322601318359
    3. ')' → logprob: -7.253322601318359
    4. ':' → logprob: -9.75332260131836
    5. '```' → logprob: -10.37832260131836
    6. ''):' → logprob: -10.87832260131836
    7. '):
' → logprob: -11.00332260131836
    8. '   ' → logprob: -12.87832260131836
    9. '`:' → logprob: -13.12832260131836
    10. '*' → logprob: -13.75332260131836

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024758590385317802
    2. '   ' → logprob: -3.8997585773468018
    3. ':
' → logprob: -6.524758815765381
    4. '```' → logprob: -6.524758815765381
    5. '():' → logprob: -7.524758815765381
    6. '':' → logprob: -8.774758338928223
    7. '(' → logprob: -9.149758338928223
    8. '":' → logprob: -9.274758338928223
    9. '):' → logprob: -9.524758338928223
    10. '    
' → logprob: -9.649758338928223

Token 12: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47830379009246826
    2. '```' → logprob: -2.103303909301758
    3. ''' → logprob: -2.478303909301758
    4. '`' → logprob: -3.353303909301758
    5. ' ' → logprob: -3.478303909301758
    6. ':' → logprob: -3.728303909301758
    7. '    ' → logprob: -4.103303909301758
    8. '\' → logprob: -4.353303909301758
    9. '"' → logprob: -4.478303909301758
    10. '\n' → logprob: -4.728303909301758

Token 13: ' Ensure' (ID: 43810)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29687023162841797
    2. '   ' → logprob: -1.546870231628418
    3. '    ' → logprob: -4.796870231628418
    4. ''' → logprob: -5.171870231628418
    5. '#' → logprob: -5.296870231628418
    6. ' """' → logprob: -6.046870231628418
    7. ' )' → logprob: -6.046870231628418
    8. '```' → logprob: -6.171870231628418
    9. ' #' → logprob: -6.296870231628418
    10. '  ' → logprob: -6.296870231628418

Token 14: ' H' (ID: 487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.057682283222675323
    2. ' H' → logprob: -3.4326822757720947
    3. ' a' → logprob: -4.182682514190674
    4. ' the' → logprob: -5.557682514190674
    5. 'H' → logprob: -6.557682514190674
    6. ' that' → logprob: -7.307682514190674
    7. ' (' → logprob: -7.682682514190674
    8. ' space' → logprob: -7.932682514190674
    9. ' not' → logprob: -8.432682037353516
    10. 'space' → logprob: -8.557682037353516

Token 15: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.24096250534057617
    2. ' <=' → logprob: -1.8659625053405762
    3. '>=' → logprob: -3.365962505340576
    4. ' %' → logprob: -4.865962505340576
    5. '<=' → logprob: -5.365962505340576
    6. '%' → logprob: -5.990962505340576
    7. ' ==' → logprob: -5.990962505340576
    8. ' >' → logprob: -6.115962505340576
    9. ' ' → logprob: -6.490962505340576
    10. '>' → logprob: -7.240962505340576

Token 16: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.17987588047981262
    2. ' W' → logprob: -1.8048758506774902
    3. '   ' → logprob: -9.804876327514648
    4. ' ' → logprob: -9.804876327514648
    5. 'H' → logprob: -11.679876327514648
    6. '```' → logprob: -12.429876327514648
    7. '  ' → logprob: -13.054876327514648
    8. '	W' → logprob: -13.179876327514648
    9. ' ' → logprob: -13.679876327514648
    10. 'w' → logprob: -14.429876327514648

Token 17: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3138350248336792
    2. '
' → logprob: -1.4388350248336792
    3. '\n' → logprob: -1.4388350248336792
    4. '\' → logprob: -2.5638351440429688
    5. '```' → logprob: -2.5638351440429688
    6. '    
' → logprob: -2.8138351440429688
    7. '  
' → logprob: -4.188835144042969
    8. ':' → logprob: -5.188835144042969
    9. '   
' → logprob: -5.313835144042969
    10. ' 
' → logprob: -5.563835144042969

Token 18: ' consistent' (ID: 20434)
  Prédit: ' consistent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' consistent' → logprob: -1.026793122291565
    2. ' consistency' → logprob: -1.651793122291565
    3. ' a' → logprob: -2.1517930030822754
    4. ' the' → logprob: -2.6517930030822754
    5. ' ' → logprob: -2.7767930030822754
    6. ' H' → logprob: -2.9017930030822754
    7. ' better' → logprob: -3.5267930030822754
    8. ' code' → logprob: -3.6517930030822754
    9. ' space' → logprob: -4.526793003082275
    10. '```' → logprob: -4.651793003082275

Token 19: ' handling' (ID: 17491)
  Prédit: ' reasoning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reasoning' → logprob: -1.5785869359970093
    2. ' spacing' → logprob: -1.8285869359970093
    3. ' code' → logprob: -2.203587055206299
    4. ' and' → logprob: -2.328587055206299
    5. '```' → logprob: -2.328587055206299
    6. ' placement' → logprob: -3.328587055206299
    7. ' logic' → logprob: -3.328587055206299
    8. '_' → logprob: -3.453587055206299
    9. ' _' → logprob: -3.953587055206299
    10. ' continuation' → logprob: -3.953587055206299

Token 20: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0536487102508545
    2. '\n' → logprob: -1.0536487102508545
    3. '    
' → logprob: -2.4286487102508545
    4. '\' → logprob: -2.4286487102508545
    5. '
' → logprob: -3.1786487102508545
    6. '```' → logprob: -3.3036487102508545
    7. '  
' → logprob: -3.6786487102508545
    8. '   
' → logprob: -4.803648948669434
    9. ' 
' → logprob: -5.428648948669434
    10. '     
' → logprob: -6.428648948669434

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04532069340348244
    2. '\n' → logprob: -4.420320510864258
    3. '    
' → logprob: -4.420320510864258
    4. '
' → logprob: -4.795320510864258
    5. '\' → logprob: -5.295320510864258
    6. '```' → logprob: -5.670320510864258
    7. '    ' → logprob: -7.670320510864258
    8. '   
' → logprob: -7.670320510864258
    9. '  
' → logprob: -7.795320510864258
    10. ' 
' → logprob: -7.920320510864258

Token 22: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8509617447853088
    2. '\n' → logprob: -0.9759617447853088
    3. '\' → logprob: -2.475961685180664
    4. '    
' → logprob: -3.350961685180664
    5. '```' → logprob: -3.850961685180664
    6. ' 
' → logprob: -3.975961685180664
    7. ' \' → logprob: -4.850961685180664
    8. ' if' → logprob: -5.100961685180664
    9. '
' → logprob: -5.100961685180664
    10. 'if' (adapté à ' if') → logprob: -5.725961685180664

Token 23: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.0006373812211677432
    2. 'H' → logprob: -7.375637531280518
    3. ' ' → logprob: -11.75063705444336
    4. ' ' → logprob: -13.00063705444336
    5. '	H' → logprob: -15.37563705444336
    6. ' (' → logprob: -15.75063705444336
    7. '   ' → logprob: -16.25063705444336
    8. '(H' → logprob: -16.87563705444336
    9. ' not' → logprob: -17.12563705444336
    10. ' ' → logprob: -17.18813705444336

Token 24: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.037288032472133636
    2. ' <=' → logprob: -3.412287950515747
    3. '>' → logprob: -5.912288188934326
    4. ' <' → logprob: -7.287288188934326
    5. ' ' → logprob: -9.662287712097168
    6. ' >=' → logprob: -10.287287712097168
    7. '<|end|>' → logprob: -10.287287712097168
    8. ' ==' → logprob: -10.412287712097168
    9. '   ' → logprob: -10.662287712097168
    10. '<=' → logprob: -11.162287712097168

Token 25: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.001730510382913053
    2. 'W' → logprob: -6.751730442047119
    3. ' ' → logprob: -7.501730442047119
    4. '=' → logprob: -12.251730918884277
    5. '<|end|>' → logprob: -13.751730918884277
    6. '=W' → logprob: -14.251730918884277
    7. '  ' → logprob: -14.501730918884277
    8. ' ' → logprob: -14.626730918884277
    9. ' H' → logprob: -15.751730918884277
    10. '	W' → logprob: -16.12672996520996

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003503026207908988
    2. '):' → logprob: -6.50350284576416
    3. ' :' → logprob: -6.62850284576416
    4. '<|end|>' → logprob: -8.12850284576416
    5. '       ' → logprob: -9.62850284576416
    6. '   ' → logprob: -9.87850284576416
    7. '<|end|>' → logprob: -9.87850284576416
    8. ' ' → logprob: -10.25350284576416
    9. ' ):' → logprob: -10.25350284576416
    10. '    ' → logprob: -10.37850284576416

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4969917833805084
    2. '    ' → logprob: -1.246991753578186
    3. '   ' → logprob: -3.2469918727874756
    4. ' ' → logprob: -3.4969918727874756
    5. ' return' → logprob: -4.2469916343688965
    6. '        ' → logprob: -5.2469916343688965
    7. ' :' → logprob: -5.6219916343688965
    8. ':' → logprob: -5.7469916343688965
    9. ' =' → logprob: -6.7469916343688965
    10. '  ' → logprob: -6.8719916343688965

Token 28: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.10746847838163376
    2. ' return' → logprob: -2.482468366622925
    3. 'return' → logprob: -4.482468605041504
    4. '       ' → logprob: -5.482468605041504
    5. ' W' → logprob: -6.482468605041504
    6. 'H' (adapté à ' H') → logprob: -6.982468605041504
    7. '           ' → logprob: -9.232468605041504
    8. '        ' → logprob: -9.357468605041504
    9. ' ' → logprob: -9.857468605041504
    10. '    ' → logprob: -10.732468605041504

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007761581800878048
    2. '=' → logprob: -7.500776290893555
    3. ' ,' → logprob: -8.500776290893555
    4. ',W' → logprob: -11.875776290893555
    5. ' =' → logprob: -12.250776290893555
    6. ',H' → logprob: -12.500776290893555
    7. ')' → logprob: -13.625776290893555
    8. '<|end|>' → logprob: -14.000776290893555
    9. '   ' → logprob: -14.500776290893555
    10. ',w' → logprob: -15.000776290893555

Token 30: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.04657645896077156
    2. 'W' → logprob: -3.171576499938965
    3. '<|end|>' → logprob: -6.171576499938965
    4. ' ' → logprob: -6.546576499938965
    5. '<|end|>' → logprob: -10.796576499938965
    6. '  ' → logprob: -11.171576499938965
    7. ' ' → logprob: -12.421576499938965
    8. '	W' → logprob: -13.296576499938965
    9. '_' → logprob: -13.796576499938965
    10. '    ' → logprob: -14.296576499938965

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232779383659363
    2. ' =' → logprob: -0.8982779383659363
    3. ',' → logprob: -9.02327823638916
    4. '<|end|>' → logprob: -10.39827823638916
    5. ')' → logprob: -14.39827823638916
    6. '=

' → logprob: -14.64827823638916
    7. ' =)' → logprob: -14.89827823638916
    8. '.=' → logprob: -14.89827823638916
    9. '<|end|>' → logprob: -15.39827823638916
    10. ' =
' → logprob: -15.77327823638916

Token 32: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.02059164270758629
    2. 'W' → logprob: -3.8955917358398438
    3. ' ' → logprob: -10.020591735839844
    4. '	W' → logprob: -12.895591735839844
    5. '    ' → logprob: -14.270591735839844
    6. ' ' → logprob: -14.645591735839844
    7. '<|end|>' → logprob: -14.895591735839844
    8. '   ' → logprob: -15.145591735839844
    9. '  ' → logprob: -15.770591735839844
    10. '```' → logprob: -16.333091735839844

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001010184409096837
    2. ' ,' → logprob: -7.501010417938232
    3. '<|end|>' → logprob: -7.876010417938232
    4. ' ' → logprob: -10.126009941101074
    5. '   ' → logprob: -11.126009941101074
    6. '<|end|>' → logprob: -11.876009941101074
    7. '```' → logprob: -12.626009941101074
    8. ',H' → logprob: -12.751009941101074
    9. 'H' → logprob: -13.126009941101074
    10. ',
' → logprob: -13.626009941101074

Token 34: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0699496641755104
    2. ' H' → logprob: -2.6949496269226074
    3. ' ' → logprob: -11.319950103759766
    4. '   ' → logprob: -13.944950103759766
    5. '  ' → logprob: -15.694950103759766
    6. '	H' → logprob: -15.819950103759766
    7. ' ' → logprob: -17.132450103759766
    8. '    ' → logprob: -17.319950103759766
    9. '_H' → logprob: -17.819950103759766
    10. '```' → logprob: -18.194950103759766

Token 35: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.062331099063158035
    2. '\n' → logprob: -3.687331199645996
    3. '   ' → logprob: -4.187331199645996
    4. '    
' → logprob: -4.812331199645996
    5. '  
' → logprob: -5.312331199645996
    6. ' 
' → logprob: -5.687331199645996
    7. ':' → logprob: -7.187331199645996
    8. '\' → logprob: -7.437331199645996
    9. 'n' → logprob: -7.687331199645996
    10. '   
' → logprob: -7.687331199645996

Token 36: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4055105745792389
    2. '   ' → logprob: -1.5305105447769165
    3. ' 
' → logprob: -3.280510663986206
    4. '\n' → logprob: -3.405510663986206
    5. '    
' → logprob: -3.530510663986206
    6. 'n' → logprob: -5.280510425567627
    7. '\' → logprob: -5.280510425567627
    8. '  
' → logprob: -6.155510425567627
    9. '   
' → logprob: -6.405510425567627
    10. '     
' → logprob: -7.530510425567627

Token 37: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7006235718727112
    2. '   ' → logprob: -1.3256235122680664
    3. 'd' → logprob: -2.2006235122680664
    4. 'D' → logprob: -3.7006235122680664
    5. 'if' → logprob: -3.8256235122680664
    6. 'n' → logprob: -4.325623512268066
    7. '#' (adapté à ' #') → logprob: -4.575623512268066
    8. 'result' → logprob: -5.200623512268066
    9. 'max' → logprob: -5.200623512268066
    10. 't' → logprob: -5.450623512268066

Token 38: ' Each' (ID: 11555)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.66838538646698
    2. 'if' → logprob: -1.41838538646698
    3. '#' → logprob: -2.0433855056762695
    4. 'max' → logprob: -3.5433855056762695
    5. '   ' → logprob: -4.2933855056762695
    6. ' if' → logprob: -4.4183855056762695
    7. 'total' → logprob: -4.6683855056762695
    8. 'for' → logprob: -4.9183855056762695
    9. ' dp' → logprob: -5.1683855056762695
    10. 'def' → logprob: -5.4183855056762695

Token 39: ' tat' (ID: 15495)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.9915715456008911
    2. ' tile' → logprob: -1.9915715456008911
    3. ' placement' → logprob: -1.9915715456008911
    4. 'row' → logprob: -2.4915714263916016
    5. 'placement' → logprob: -2.8665714263916016
    6. ' tat' → logprob: -2.9915714263916016
    7. 'tile' → logprob: -3.1165714263916016
    8. 't' → logprob: -3.7415714263916016
    9. ' possible' → logprob: -3.8665714263916016
    10. ' full' → logprob: -3.9915714263916016

Token 40: 'ami' (ID: 4938)
  Prédit: 'ami'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ami' → logprob: -0.01321798749268055
    2. 'a' → logprob: -4.388217926025391
    3. 'mi' → logprob: -7.638217926025391
    4. '   ' → logprob: -10.01321792602539
    5. 'emi' → logprob: -10.13821792602539
    6. ' ami' → logprob: -10.13821792602539
    7. ' a' → logprob: -10.88821792602539
    8. 'am' → logprob: -11.01321792602539
    9. '  ' → logprob: -11.38821792602539
    10. 'i' → logprob: -11.51321792602539

Token 41: ' covers' (ID: 17804)
  Prédit: ' mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mat' → logprob: -0.0949757769703865
    2. '   ' → logprob: -3.594975709915161
    3. ' is' → logprob: -3.719975709915161
    4. ' can' → logprob: -4.71997594833374
    5. 'mat' → logprob: -4.96997594833374
    6. ' ' → logprob: -5.71997594833374
    7. ' placement' → logprob: -5.96997594833374
    8. 'placement' → logprob: -6.21997594833374
    9. ' piece' → logprob: -6.21997594833374
    10. ' occupies' → logprob: -6.59497594833374

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3628646433353424
    2. '2' → logprob: -1.73786461353302
    3. ' two' → logprob: -2.1128647327423096
    4. 'two' → logprob: -5.1128644943237305
    5. ' exactly' → logprob: -6.6128644943237305
    6. '```' → logprob: -10.11286449432373
    7. '1' → logprob: -10.36286449432373
    8. 'exact' → logprob: -10.61286449432373
    9. '_two' → logprob: -11.36286449432373
    10. '   ' → logprob: -11.73786449432373

Token 43: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1899978667497635
    2. ' ' → logprob: -1.814997911453247
    3. ' two' → logprob: -5.064997673034668
    4. 'two' → logprob: -5.689997673034668
    5. ' exactly' → logprob: -7.939997673034668
    6. 'exact' → logprob: -9.564997673034668
    7. '1' → logprob: -10.564997673034668
    8. '```' → logprob: -11.189997673034668
    9. '   ' → logprob: -11.439997673034668
    10. '  ' → logprob: -12.689997673034668

Token 44: ' squares' (ID: 57269)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.7915129661560059
    2. ' squares' → logprob: -1.6665129661560059
    3. ' adjacent' → logprob: -2.291512966156006
    4. 'cells' → logprob: -2.416512966156006
    5. ' ' → logprob: -2.666512966156006
    6. '*' → logprob: -3.166512966156006
    7. ' *' → logprob: -3.916512966156006
    8. ' spaces' → logprob: -3.916512966156006
    9. '<|end|>' → logprob: -5.541512966156006
    10. 'spaces' → logprob: -6.166512966156006

Token 45: ':' (ID: 25)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.646274745464325
    2. '   ' → logprob: -1.1462748050689697
    3. ',' → logprob: -2.5212748050689697
    4. '\n' → logprob: -3.2712748050689697
    5. '\' → logprob: -4.521274566650391
    6. ' ' → logprob: -5.521274566650391
    7. ' 
' → logprob: -5.771274566650391
    8. '
' → logprob: -5.771274566650391
    9. '    
' → logprob: -5.771274566650391
    10. 'n' → logprob: -6.146274566650391

Token 46: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.184701681137085
    2. ' ' → logprob: -1.434701681137085
    3. ' \' → logprob: -1.809701681137085
    4. '\n' → logprob: -2.809701681137085
    5. '\' → logprob: -3.184701681137085
    6. ' n' → logprob: -3.184701681137085
    7. '   ' → logprob: -3.309701681137085
    8. '    ' → logprob: -4.059701919555664
    9. ' 
' → logprob: -4.059701919555664
    10. '    
' → logprob: -4.809701919555664

Token 47: '1' (ID: 16)
  Prédit: 'placements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placements' → logprob: -1.4416477680206299
    2. '   ' → logprob: -2.31664776802063
    3. 'if' → logprob: -2.31664776802063
    4. '2' → logprob: -2.44164776802063
    5. 'total' → logprob: -2.56664776802063
    6. 'n' → logprob: -2.81664776802063
    7. '#' → logprob: -3.06664776802063
    8. 'max' → logprob: -3.06664776802063
    9. ' ' → logprob: -3.19164776802063
    10. 'return' → logprob: -3.56664776802063

Token 48: 'x' (ID: 87)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.128437876701355
    2. 'x' → logprob: -1.628437876701355
    3. ',' → logprob: -1.878437876701355
    4. '+' → logprob: -2.7534379959106445
    5. ')' → logprob: -2.8784379959106445
    6. '/' → logprob: -3.0034379959106445
    7. ' or' → logprob: -3.1284379959106445
    8. '-' → logprob: -3.2534379959106445
    9. '*' → logprob: -3.7534379959106445
    10. ' x' → logprob: -4.2534379959106445

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00456624198704958
    2. ' ' → logprob: -5.504566192626953
    3. '1' → logprob: -7.754566192626953
    4. '   ' → logprob: -10.629566192626953
    5. '```' → logprob: -11.629566192626953
    6. '  ' → logprob: -11.942066192626953
    7. '3' → logprob: -13.192066192626953
    8. '    ' → logprob: -13.317066192626953
    9. '
' → logprob: -13.379566192626953
    10. '２' → logprob: -13.504566192626953

Token 50: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06169290840625763
    2. ',' → logprob: -3.686692953109741
    3. ' tiles' → logprob: -4.561692714691162
    4. ' and' → logprob: -4.936692714691162
    5. '   ' → logprob: -5.936692714691162
    6. ')' → logprob: -5.936692714691162
    7. '<|end|>' → logprob: -5.936692714691162
    8. ' ' → logprob: -6.061692714691162
    9. 'or' → logprob: -7.186692714691162
    10. '#' → logprob: -7.311692714691162

Token 51: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2261885702610016
    2. '2' → logprob: -1.6011885404586792
    3. '1' → logprob: -7.226188659667969
    4. '   ' → logprob: -11.226188659667969
    5. '```' → logprob: -11.226188659667969
    6. ' or' → logprob: -12.101188659667969
    7. '  ' → logprob: -12.538688659667969
    8. 'or' → logprob: -12.788688659667969
    9. ' ' → logprob: -12.788688659667969
    10. '    ' → logprob: -13.351188659667969

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19030499458312988
    2. ' ' → logprob: -1.8153049945831299
    3. '1' → logprob: -4.565304756164551
    4. '```' → logprob: -10.44030475616455
    5. '   ' → logprob: -10.75280475616455
    6. '  ' → logprob: -11.25280475616455
    7. ' or' → logprob: -12.19030475616455
    8. '    ' → logprob: -12.94030475616455
    9. 'or' → logprob: -13.00280475616455
    10. ' ' → logprob: -13.06530475616455

Token 53: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.522663414478302
    2. '-' → logprob: -1.6476633548736572
    3. ' or' → logprob: -2.8976633548736572
    4. ' x' → logprob: -3.0226633548736572
    5. '<|end|>' → logprob: -3.0226633548736572
    6. ' -' → logprob: -3.6476633548736572
    7. ' ' → logprob: -4.022663593292236
    8. '1' → logprob: -4.897663593292236
    9. ',' → logprob: -6.272663593292236
    10. ')' → logprob: -6.522663593292236

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003502434410620481
    2. ' ' → logprob: -8.000349998474121
    3. '2' → logprob: -11.625349998474121
    4. '```' → logprob: -13.312849998474121
    5. '   ' → logprob: -13.812849998474121
    6. '  ' → logprob: -14.250349998474121
    7. '１' → logprob: -15.125349998474121
    8. '-' → logprob: -15.187849998474121
    9. '3' → logprob: -15.250349998474121
    10. ')' → logprob: -15.750349998474121

Token 55: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08198036998510361
    2. '\n' → logprob: -2.8319804668426514
    3. '   ' → logprob: -4.331980228424072
    4. ' 
' → logprob: -6.206980228424072
    5. '\' → logprob: -6.956980228424072
    6. '    
' → logprob: -6.956980228424072
    7. 'n' → logprob: -7.081980228424072
    8. '<|end|>' → logprob: -7.831980228424072
    9. '

' → logprob: -8.45698070526123
    10. '```' → logprob: -8.58198070526123

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8067914247512817
    2. '
' → logprob: -1.4317914247512817
    3. '\n' → logprob: -1.5567914247512817
    4. 'n' → logprob: -3.181791305541992
    5. '\' → logprob: -3.806791305541992
    6. ' 
' → logprob: -3.931791305541992
    7. '    
' → logprob: -4.681791305541992
    8. '```' → logprob: -5.556791305541992
    9. '   
' → logprob: -6.931791305541992
    10. ',' → logprob: -7.056791305541992

Token 57: ' if' (ID: 538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.29976150393486023
    2. 'n' → logprob: -2.2997615337371826
    3. '   ' → logprob: -2.5497615337371826
    4. '
' → logprob: -3.2997615337371826
    5. '\' → logprob: -3.7997615337371826
    6. ' 
' → logprob: -5.0497612953186035
    7. '#' → logprob: -5.7997612953186035
    8. '    
' → logprob: -5.7997612953186035
    9. 'dp' → logprob: -6.7997612953186035
    10. ' placements' → logprob: -6.9247612953186035

Token 58: ' (' (ID: 350)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.33619317412376404
    2. ' (' → logprob: -1.4611932039260864
    3. 'H' → logprob: -3.336193084716797
    4. ' ' → logprob: -4.961193084716797
    5. '(H' → logprob: -5.086193084716797
    6. '(' → logprob: -6.211193084716797
    7. ' W' → logprob: -6.336193084716797
    8. '   ' → logprob: -7.586193084716797
    9. ' not' → logprob: -8.586193084716797
    10. '  ' → logprob: -8.836193084716797

Token 59: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.09194658696651459
    2. ' H' → logprob: -2.466946601867676
    3. ' (' → logprob: -6.591946601867676
    4. '(H' → logprob: -7.216946601867676
    5. '   ' → logprob: -7.466946601867676
    6. ' ' → logprob: -8.716946601867676
    7. ')' → logprob: -9.966946601867676
    8. 'W' → logprob: -10.466946601867676
    9. '(' → logprob: -10.466946601867676
    10. '    ' → logprob: -11.466946601867676

Token 60: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12703078985214233
    2. ' ==' → logprob: -2.877030849456787
    3. '*' → logprob: -3.127030849456787
    4. ' <' → logprob: -5.127030849456787
    5. ' ' → logprob: -5.252030849456787
    6. '==' → logprob: -5.502030849456787
    7. ' %' → logprob: -6.502030849456787
    8. ')' → logprob: -7.752030849456787
    9. ' <=' → logprob: -8.127030372619629
    10. ' -' → logprob: -8.377030372619629

Token 61: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.2027648240327835
    2. 'W' → logprob: -1.702764868736267
    3. ' ' → logprob: -6.952764987945557
    4. ')' → logprob: -8.077764511108398
    5. '   ' → logprob: -10.827764511108398
    6. '  ' → logprob: -11.140264511108398
    7. ' )' → logprob: -11.702764511108398
    8. '```' → logprob: -11.765264511108398
    9. ' ' → logprob: -11.890264511108398
    10. '	W' → logprob: -12.327764511108398

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055321041494607925
    2. ' )' → logprob: -2.930320978164673
    3. ')%' → logprob: -8.055320739746094
    4. ' %' → logprob: -9.305320739746094
    5. '%' → logprob: -10.680320739746094
    6. ' ' → logprob: -12.555320739746094
    7. '%)' → logprob: -13.930320739746094
    8. ' %)' → logprob: -14.055320739746094
    9. '   ' → logprob: -14.680320739746094
    10. '`)' → logprob: -15.180320739746094

Token 63: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.014501470141112804
    2. '%' → logprob: -4.264501571655273
    3. ' ' → logprob: -8.014501571655273
    4. ')' → logprob: -12.389501571655273
    5. ' )' → logprob: -13.889501571655273
    6. '   ' → logprob: -14.639501571655273
    7. ')%' → logprob: -14.764501571655273
    8. ' %)' → logprob: -15.139501571655273
    9. '  ' → logprob: -15.639501571655273
    10. ' ' → logprob: -15.889501571655273

Token 64: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.632601797580719
    2. '2' → logprob: -0.757601797580719
    3. '```' → logprob: -14.070101737976074
    4. '<|end|>' → logprob: -15.070101737976074
    5. ' ' → logprob: -15.195101737976074
    6. '  ' → logprob: -15.195101737976074
    7. '1' → logprob: -15.320101737976074
    8. '0' → logprob: -15.820101737976074
    9. '>' → logprob: -16.44510269165039
    10. ' ```' → logprob: -16.94510269165039

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '```' → logprob: -15.8751802444458
    4. '۲' → logprob: -18.000179290771484
    5. '٢' → logprob: -18.000179290771484
    6. '   ' → logprob: -18.062679290771484
    7. '  ' → logprob: -18.187679290771484
    8. '{' → logprob: -18.187679290771484
    9. '２' → logprob: -18.375179290771484
    10. '২' → logprob: -18.625179290771484

Token 66: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.02233739383518696
    2. '!=' → logprob: -3.8973374366760254
    3. ' ==' → logprob: -6.522337436676025
    4. '==' → logprob: -8.272336959838867
    5. ' ' → logprob: -10.647336959838867
    6. ':' → logprob: -11.147336959838867
    7. '=' → logprob: -11.272336959838867
    8. ')' → logprob: -11.647336959838867
    9. ')!=' → logprob: -12.522336959838867
    10. '>' → logprob: -13.397336959838867

Token 67: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38932472467422485
    2. '0' → logprob: -1.13932466506958
    3. '1' → logprob: -6.01432466506958
    4. ' ' → logprob: -12.764325141906738
    5. ':' → logprob: -13.889325141906738
    6. ')' → logprob: -14.264325141906738
    7. '<|end|>' → logprob: -14.326825141906738
    8. ' !=' → logprob: -14.826825141906738
    9. '```' → logprob: -15.264325141906738
    10. '۰' → logprob: -15.764325141906738

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3629932403564453
    2. '0' → logprob: -1.2379932403564453
    3. ' ' → logprob: -4.237993240356445
    4. ':' → logprob: -12.612993240356445
    5. '

' → logprob: -14.362993240356445
    6. ')' → logprob: -14.425493240356445
    7. '  ' → logprob: -15.175493240356445
    8. '```' → logprob: -15.175493240356445
    9. '   ' → logprob: -15.487993240356445
    10. '!' → logprob: -15.612993240356445

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003766919835470617
    2. ':
' → logprob: -9.00037670135498
    3. ' :' → logprob: -9.00037670135498
    4. ':return' → logprob: -9.00037670135498
    5. '):' → logprob: -12.37537670135498
    6. '   ' → logprob: -14.37537670135498
    7. ',' → logprob: -14.50037670135498
    8. ' :
' → logprob: -14.62537670135498
    9. ')' → logprob: -15.62537670135498
    10. '       ' → logprob: -15.87537670135498

Token 70: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3143823444843292
    2. '    ' → logprob: -2.314382314682007
    3. ' ' → logprob: -2.689382314682007
    4. '       ' → logprob: -2.689382314682007
    5. '     
' → logprob: -4.189382553100586
    6. ' return' → logprob: -5.439382553100586
    7. '   ' → logprob: -5.564382553100586
    8. '<|end|>' → logprob: -6.564382553100586
    9. '    
' → logprob: -7.064382553100586
    10. ' \' → logprob: -7.064382553100586

Token 71: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.07953613996505737
    2. ' ' → logprob: -3.579536199569702
    3. '       ' → logprob: -4.079535961151123
    4. '    ' → logprob: -4.204535961151123
    5. '     
' → logprob: -5.204535961151123
    6. ' return' → logprob: -5.579535961151123
    7. 'r' → logprob: -6.079535961151123
    8. 'return' (adapté à ' return') → logprob: -6.579535961151123
    9. '        
' → logprob: -7.204535961151123
    10. '   ' → logprob: -7.454535961151123

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42904040217399597
    2. '0' → logprob: -1.0540404319763184
    3. ' None' → logprob: -8.30403995513916
    4. 'None' → logprob: -9.67903995513916
    5. 'False' → logprob: -11.92903995513916
    6. ' False' → logprob: -12.05403995513916
    7. '  ' → logprob: -12.17903995513916
    8. ' ' → logprob: -12.42903995513916
    9. '[]' → logprob: -12.80403995513916
    10. ' []' → logprob: -12.92903995513916

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009178895270451903
    2. ' ' → logprob: -7.000917911529541
    3. 'False' → logprob: -12.375917434692383
    4. 'None' → logprob: -14.375917434692383
    5. '   ' → logprob: -15.125917434692383
    6. '  ' → logprob: -15.188417434692383
    7. '[]' → logprob: -15.188417434692383
    8. ' False' → logprob: -15.500917434692383
    9. '00' → logprob: -16.500917434692383
    10. '"' → logprob: -16.500917434692383

Token 74: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07063714414834976
    2. '\n' → logprob: -3.9456372261047363
    3. ' 
' → logprob: -4.070637226104736
    4. '    
' → logprob: -4.445637226104736
    5. '   ' → logprob: -4.570637226104736
    6. '  
' → logprob: -5.445637226104736
    7. '

' → logprob: -5.820637226104736
    8. ' 

' → logprob: -7.445637226104736
    9. '
    
' → logprob: -8.070636749267578
    10. '   
' → logprob: -8.070636749267578

Token 75: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17649942636489868
    2. '   ' → logprob: -2.676499366760254
    3. '    
' → logprob: -3.051499366760254
    4. '  
' → logprob: -4.301499366760254
    5. ' 
' → logprob: -4.301499366760254
    6. '<|end|>' → logprob: -4.801499366760254
    7. '

' → logprob: -6.176499366760254
    8. '\n' → logprob: -6.301499366760254
    9. '   
' → logprob: -6.426499366760254
    10. '
    
' → logprob: -6.926499366760254

Token 76: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20501300692558289
    2. 'dp' → logprob: -2.0800130367279053
    3. '#' (adapté à ' #') → logprob: -3.3300130367279053
    4. 'n' → logprob: -5.080012798309326
    5. 'return' → logprob: -5.580012798309326
    6. 'max' → logprob: -6.080012798309326
    7. '\n' → logprob: -6.330012798309326
    8. 'if' → logprob: -6.705012798309326
    9. 'DP' → logprob: -6.830012798309326
    10. 'count' → logprob: -6.830012798309326

Token 77: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5712810754776001
    2. 'max' → logprob: -1.9462810754776
    3. '#' → logprob: -2.5712809562683105
    4. ' max' → logprob: -3.3212809562683105
    5. 'if' → logprob: -3.5712809562683105
    6. 'placements' → logprob: -3.6962809562683105
    7. ' dp' → logprob: -3.8212809562683105
    8. 'ways' → logprob: -4.1962809562683105
    9. '   ' → logprob: -4.3212809562683105
    10. ' ways' → logprob: -4.3212809562683105

Token 78: ' approach' (ID: 7139)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9057055115699768
    2. '_' → logprob: -1.405705451965332
    3. ':' → logprob: -2.405705451965332
    4. '   ' → logprob: -2.530705451965332
    5. ' dp' → logprob: -2.780705451965332
    6. '_dp' → logprob: -3.405705451965332
    7. ',' → logprob: -3.655705451965332
    8. ' =' → logprob: -4.030705451965332
    9. ')' → logprob: -5.030705451965332
    10. '(dp' → logprob: -5.280705451965332

Token 79: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5340046882629395
    2. ':' → logprob: -1.7840046882629395
    3. '
' → logprob: -2.2840046882629395
    4. '\' → logprob: -3.0340046882629395
    5. '<|end|>' → logprob: -3.1590046882629395
    6. '\n' → logprob: -4.7840046882629395
    7. 'n' → logprob: -4.9090046882629395
    8. 'dp' → logprob: -4.9090046882629395
    9. '```' → logprob: -5.5340046882629395
    10. ',' → logprob: -5.5340046882629395

Token 80: ' bit' (ID: 3546)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.5469073057174683
    2. 'dp' → logprob: -2.296907424926758
    3. ' ' → logprob: -2.546907424926758
    4. ' a' → logprob: -2.921907424926758
    5. ' [' → logprob: -3.171907424926758
    6. ' spaces' → logprob: -3.171907424926758
    7. ' [[' → logprob: -3.171907424926758
    8. ' bit' → logprob: -3.171907424926758
    9. '1' → logprob: -3.296907424926758
    10. ' memo' → logprob: -3.421907424926758

Token 81: 'mask' (ID: 22527)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4191446900367737
    2. 'mask' → logprob: -1.169144630432129
    3. '_' → logprob: -4.419144630432129
    4. ' ' → logprob: -5.169144630432129
    5. '   ' → logprob: -5.419144630432129
    6. '_mask' → logprob: -5.669144630432129
    7. 's' → logprob: -6.294144630432129
    8. ' mask' → logprob: -6.794144630432129
    9. ' _' → logprob: -6.794144630432129
    10. '_m' → logprob: -7.919144630432129

Token 82: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31674444675445557
    2. '   ' → logprob: -1.6917444467544556
    3. 's' → logprob: -4.441744327545166
    4. '):' → logprob: -4.566744327545166
    5. ',' → logprob: -4.691744327545166
    6. ' states' → logprob: -4.816744327545166
    7. 'dp' → logprob: -4.941744327545166
    8. ' :' → logprob: -5.066744327545166
    9. ' ' → logprob: -5.316744327545166
    10. ')' → logprob: -5.441744327545166

Token 83: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.813381552696228
    2. ' row' → logprob: -1.563381552696228
    3. ' each' → logprob: -2.0633816719055176
    4. ' the' → logprob: -3.1883816719055176
    5. ' columns' → logprob: -3.3133816719055176
    6. ' current' → logprob: -4.063381671905518
    7. ' representing' → logprob: -4.063381671905518
    8. ' ' → logprob: -4.313381671905518
    9. ' placement' → logprob: -4.438381671905518
    10. ' valid' → logprob: -4.563381671905518

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4407866895198822
    2. ':' → logprob: -1.0657867193222046
    3. ',' → logprob: -5.815786838531494
    4. '
' → logprob: -6.440786838531494
    5. ' ' → logprob: -6.565786838531494
    6. ' :' → logprob: -7.190786838531494
    7. '```' → logprob: -7.440786838531494
    8. '    ' → logprob: -7.565786838531494
    9. '<|end|>' → logprob: -7.690786838531494
    10. '):' → logprob: -7.940786838531494

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08510424196720123
    2. '    ' → logprob: -3.46010422706604
    3. ' ' → logprob: -3.58510422706604
    4. 'dp' → logprob: -4.960104465484619
    5. ' dp' → logprob: -5.210104465484619
    6. 'n' → logprob: -5.710104465484619
    7. ',' → logprob: -7.210104465484619
    8. '    
' → logprob: -7.335104465484619
    9. '  ' → logprob: -7.335104465484619
    10. ' 
' → logprob: -7.585104465484619

Token 86: ' from' (ID: 591)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7804926037788391
    2. 'dp' → logprob: -0.9054926037788391
    3. '   ' → logprob: -2.4054925441741943
    4. 'n' → logprob: -4.030492782592773
    5. ' n' → logprob: -4.280492782592773
    6. ' max' → logprob: -5.030492782592773
    7. 'max' → logprob: -6.155492782592773
    8. ' ' → logprob: -6.405492782592773
    9. '    ' → logprob: -7.030492782592773
    10. 'def' → logprob: -7.280492782592773

Token 87: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.1670890748500824
    2. ' itertools' → logprob: -1.9170891046524048
    3. ' functools' → logprob: -5.792088985443115
    4. 'collections' → logprob: -5.917088985443115
    5. ' copy' → logprob: -6.917088985443115
    6. ' typing' → logprob: -10.292089462280273
    7. ' ' → logprob: -10.792089462280273
    8. ' math' → logprob: -11.167089462280273
    9. ' collection' → logprob: -11.417089462280273
    10. ' enum' → logprob: -12.292089462280273

Token 88: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03603805601596832
    2. ' import' → logprob: -3.6610381603240967
    3. '_import' → logprob: -4.786037921905518
    4. '_' → logprob: -7.786037921905518
    5. '	import' → logprob: -8.661038398742676
    6. '   ' → logprob: -8.661038398742676
    7. '<|end|>' → logprob: -8.786038398742676
    8. ' ' → logprob: -9.911038398742676
    9. '`' → logprob: -10.161038398742676
    10. '    ' → logprob: -10.411038398742676

Token 89: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4293196499347687
    2. ' l' → logprob: -1.0543196201324463
    3. 'cache' → logprob: -7.679319858551025
    4. 'reduce' → logprob: -9.304319381713867
    5. ' cache' → logprob: -10.554319381713867
    6. 'cached' → logprob: -11.304319381713867
    7. '	l' → logprob: -12.054319381713867
    8. '```' → logprob: -12.304319381713867
    9. ' ' → logprob: -12.429319381713867
    10. ' reduce' → logprob: -12.554319381713867

Token 90: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0003365350130479783
    2. 'r' → logprob: -8.000336647033691
    3. 'ruff' → logprob: -15.125336647033691
    4. 'ruz' → logprob: -15.750336647033691
    5. 'rup' → logprob: -16.125335693359375
    6. 'ruk' → logprob: -16.125335693359375
    7. 'ruh' → logprob: -16.750335693359375
    8. '_ru' → logprob: -16.875335693359375
    9. 'RU' → logprob: -17.250335693359375
    10. '32' → logprob: -17.250335693359375

Token 91: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0008771585416980088
    2. '_c' → logprob: -7.250877380371094
    3. '_' → logprob: -9.000877380371094
    4. 'c' → logprob: -10.375877380371094
    5. '_ca' → logprob: -12.500877380371094
    6. 'cache' → logprob: -12.625877380371094
    7. '_cached' → logprob: -13.250877380371094
    8. 'a' → logprob: -13.500877380371094
    9. '_
' → logprob: -14.000877380371094
    10. '_CACHE' → logprob: -14.750877380371094

Token 92: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.06638608872890472
    2. '
' → logprob: -2.8163859844207764
    3. '    
' → logprob: -6.9413862228393555
    4. '' → logprob: -7.4413862228393555
    5. '@
' → logprob: -7.4413862228393555
    6. '   ' → logprob: -7.4413862228393555
    7. '```' → logprob: -7.6913862228393555
    8. '

' → logprob: -7.9413862228393555
    9. '@n' → logprob: -8.316386222839355
    10. '\n' → logprob: -8.316386222839355

Token 93: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.03630492463707924
    2. '
' → logprob: -4.036304950714111
    3. '   ' → logprob: -4.536304950714111
    4. '\n' → logprob: -6.536304950714111
    5. '    
' → logprob: -6.536304950714111
    6. '```' → logprob: -6.536304950714111
    7. '\' → logprob: -6.911304950714111
    8. '@
' → logprob: -7.161304950714111
    9. '@n' → logprob: -8.036304473876953
    10. '' → logprob: -8.286304473876953

Token 94: ' full' (ID: 3149)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0014997448306530714
    2. '
' → logprob: -7.626499652862549
    3. '   ' → logprob: -8.251500129699707
    4. '@n' → logprob: -8.501500129699707
    5. '    
' → logprob: -8.626500129699707
    6. '\n' → logprob: -9.001500129699707
    7. '@
' → logprob: -9.126500129699707
    8. ' @' → logprob: -10.501500129699707
    9. '\' → logprob: -10.876500129699707
    10. 'n' → logprob: -11.251500129699707

Token 95: ' =' (ID: 314)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.18015895783901215
    2. '_' → logprob: -1.8051589727401733
    3. ' _' → logprob: -8.680158615112305
    4. '_masks' → logprob: -9.555158615112305
    5. 'mask' → logprob: -10.180158615112305
    6. ' =' → logprob: -10.430158615112305
    7. '_bit' → logprob: -10.680158615112305
    8. '_MASK' → logprob: -11.180158615112305
    9. ')' → logprob: -11.180158615112305
    10. '_set' → logprob: -11.930158615112305

Token 96: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38699474930763245
    2. ' (' → logprob: -1.13699471950531
    3. '(W' → logprob: -9.761994361877441
    4. '1' → logprob: -10.386994361877441
    5. '   ' → logprob: -10.636994361877441
    6. '[' → logprob: -12.386994361877441
    7. '(H' → logprob: -12.511994361877441
    8. ' ' → logprob: -13.636994361877441
    9. '2' → logprob: -14.386994361877441
    10. '((' → logprob: -14.386994361877441

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020735491125378758
    2. '(' → logprob: -8.75020694732666
    3. ' ' → logprob: -10.00020694732666
    4. ' (' → logprob: -13.00020694732666
    5. '   ' → logprob: -13.75020694732666
    6. ')' → logprob: -17.750207901000977
    7. 'W' → logprob: -17.875207901000977
    8. '2' → logprob: -18.000207901000977
    9. '```' → logprob: -18.125207901000977
    10. '[' → logprob: -18.250207901000977

Token 98: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.07889077812433243
    2. '<<' → logprob: -2.578890800476074
    3. '<<(' → logprob: -15.078890800476074
    4. '1' → logprob: -15.203890800476074
    5. '<' → logprob: -15.328890800476074
    6. ' ' → logprob: -15.578890800476074
    7. ' <<
' → logprob: -17.578889846801758
    8. ')' → logprob: -17.953889846801758
    9. ' ' → logprob: -17.953889846801758
    10. '<<<' → logprob: -18.078889846801758

Token 99: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00026526954025030136
    2. ' W' → logprob: -8.875265121459961
    3. 'H' → logprob: -9.000265121459961
    4. '(W' → logprob: -14.000265121459961
    5. '   ' → logprob: -14.750265121459961
    6. '	W' → logprob: -15.500265121459961
    7. ' ' → logprob: -15.875265121459961
    8. '(' → logprob: -16.37526512145996
    9. ')' → logprob: -16.50026512145996
    10. '<W' → logprob: -16.75026512145996

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.166338137816638e-05
    2. ' )' → logprob: -10.375031471252441
    3. ')-' → logprob: -15.125031471252441
    4. '   ' → logprob: -18.500032424926758
    5. '）' → logprob: -18.500032424926758
    6. '')' → logprob: -18.875032424926758
    7. ')
' → logprob: -19.750032424926758
    8. ')`' → logprob: -19.750032424926758
    9. ' ' → logprob: -19.875032424926758
    10. '1' → logprob: -19.875032424926758

Token 101: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.739466667175293
    2. ')' → logprob: -1.364466667175293
    3. ' -' → logprob: -1.364466667175293
    4. ')-' → logprob: -4.614466667175293
    5. ' ' → logprob: -6.739466667175293
    6. '   ' → logprob: -8.739466667175293
    7. ' )' → logprob: -9.239466667175293
    8. '1' → logprob: -10.114466667175293
    9. ']' → logprob: -10.364466667175293
    10. '```' → logprob: -10.739466667175293

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '0' → logprob: -16.000032424926758
    4. '   ' → logprob: -16.750032424926758
    5. '```' → logprob: -16.875032424926758
    6. '<|end|>' → logprob: -16.875032424926758
    7. '2' → logprob: -18.250032424926758
    8. ')' → logprob: -18.500032424926758
    9. '<|end|>' → logprob: -19.375032424926758
    10. '`' → logprob: -19.937532424926758

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.7500057220459
    4. '```' → logprob: -17.3750057220459
    5. '0' → logprob: -17.7500057220459
    6. '2' → logprob: -19.2500057220459
    7. '  ' → logprob: -20.1250057220459
    8. '<|end|>' → logprob: -20.5625057220459
    9. ')' → logprob: -21.0000057220459
    10. '       ' → logprob: -21.3125057220459

Token 104: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3327283561229706
    2. '

' → logprob: -2.457728385925293
    3. ':' → logprob: -2.582728385925293
    4. '   ' → logprob: -2.832728385925293
    5. '```' → logprob: -3.457728385925293
    6. '\n' → logprob: -4.707728385925293
    7. '@' → logprob: -5.082728385925293
    8. '' → logprob: -5.207728385925293
    9. '<|end|>' → logprob: -6.082728385925293
    10. '
' → logprob: -6.457728385925293

Token 105: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8613631129264832
    2. '<|end|>' → logprob: -1.361363172531128
    3. '   ' → logprob: -1.611363172531128
    4. '
' → logprob: -3.111363172531128
    5. '<|end|>' → logprob: -4.236362934112549
    6. '@' → logprob: -4.236362934112549
    7. '```' → logprob: -4.486362934112549
    8. '

' → logprob: -4.486362934112549
    9. ':' → logprob: -5.236362934112549
    10. '\n' → logprob: -5.486362934112549

Token 106: ' all' (ID: 722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0168983936309814
    2. ' mask' → logprob: -1.5168983936309814
    3. '#' → logprob: -2.3918983936309814
    4. 'W' → logprob: -3.5168983936309814
    5. ')' → logprob: -3.6418983936309814
    6. '1' → logprob: -3.7668983936309814
    7. ' row' → logprob: -3.7668983936309814
    8. ' full' → logprob: -3.8918983936309814
    9. 'mask' → logprob: -4.016898155212402
    10. '   ' → logprob: -4.266898155212402

Token 107: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -1.5304863452911377
    2. ' squares' → logprob: -1.6554863452911377
    3. ' seats' → logprob: -2.4054863452911377
    4. ' columns' → logprob: -2.4054863452911377
    5. 'columns' → logprob: -2.7804863452911377
    6. ' cells' → logprob: -2.7804863452911377
    7. '_' → logprob: -3.0304863452911377
    8. ' ones' → logprob: -3.4054863452911377
    9. 'bits' → logprob: -3.5304863452911377
    10. 'cells' → logprob: -3.6554863452911377

Token 108: ' set' (ID: 920)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8314633369445801
    2. '
' → logprob: -1.33146333694458
    3. '```' → logprob: -1.83146333694458
    4. ':' → logprob: -2.95646333694458
    5. '\n' → logprob: -4.20646333694458
    6. ',' → logprob: -4.33146333694458
    7. '<|end|>' → logprob: -4.45646333694458
    8. '    
' → logprob: -4.58146333694458
    9. ')' → logprob: -4.58146333694458
    10. '

' → logprob: -5.20646333694458

Token 110: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.13890618085861206
    2. ' the' → logprob: -2.263906240463257
    3. ' a' → logprob: -4.388906002044678
    4. 'W' → logprob: -5.013906002044678
    5. ' row' → logprob: -5.763906002044678
    6. ' one' → logprob: -7.263906002044678
    7. ' ' → logprob: -7.513906002044678
    8. ' columns' → logprob: -7.513906002044678
    9. ' each' → logprob: -8.013906478881836
    10. ' current' → logprob: -8.013906478881836

Token 111: ' columns' (ID: 15697)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2538815140724182
    2. ')' → logprob: -2.2538814544677734
    3. '<|end|>' → logprob: -3.1288814544677734
    4. 'def' → logprob: -3.5038814544677734
    5. '```' → logprob: -4.128881454467773
    6. '
' → logprob: -5.128881454467773
    7. '    
' → logprob: -5.628881454467773
    8. '<|end|>' → logprob: -5.628881454467773
    9. ':' → logprob: -5.753881454467773
    10. ' ' → logprob: -6.128881454467773

Token 112: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5677900314331055
    2. '
' → logprob: -1.6927900314331055
    3. '   ' → logprob: -1.8177900314331055
    4. '```' → logprob: -1.8177900314331055
    5. '@' → logprob: -2.1927900314331055
    6. '\n' → logprob: -2.4427900314331055
    7. '    
' → logprob: -3.4427900314331055
    8. '

' → logprob: -4.1927900314331055
    9. 'def' → logprob: -5.5677900314331055
    10. ',' → logprob: -5.5677900314331055

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5212947726249695
    2. '
' → logprob: -1.2712948322296143
    3. '@' → logprob: -2.7712948322296143
    4. '

' → logprob: -3.5212948322296143
    5. ':' → logprob: -4.771294593811035
    6. '```' → logprob: -4.896294593811035
    7. ')' → logprob: -5.021294593811035
    8. '    
' → logprob: -5.521294593811035
    9. '<|end|>' → logprob: -5.896294593811035
    10. ' ' → logprob: -7.146294593811035

Token 114: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0011053291382268071
    2. '   ' → logprob: -6.876105308532715
    3. '
' → logprob: -10.751105308532715
    4. ' @' → logprob: -11.126105308532715
    5. '    
' → logprob: -11.251105308532715
    6. '```' → logprob: -11.626105308532715
    7. '@return' → logprob: -12.126105308532715
    8. '@
' → logprob: -13.001105308532715
    9. 'def' → logprob: -13.251105308532715
    10. '@index' → logprob: -14.251105308532715

Token 115: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.128163257315464e-07
    2. ' l' → logprob: -15.5
    3. 'staticmethod' → logprob: -21.625
    4. '	l' → logprob: -21.75
    5. 'fun' → logprob: -22.0
    6. '```' → logprob: -22.875
    7. 'lf' → logprob: -23.625
    8. ''l' → logprob: -23.75
    9. 'li' → logprob: -24.875
    10. '_l' → logprob: -25.0

Token 116: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.014165272004902363
    2. 'r' → logprob: -4.26416540145874
    3. '_ru' → logprob: -14.764164924621582
    4. 'rw' → logprob: -14.889164924621582
    5. 'u' → logprob: -15.139164924621582
    6. 'rl' → logprob: -15.764164924621582
    7. '```' → logprob: -16.6391658782959
    8. '   ' → logprob: -17.1391658782959
    9. 'w' → logprob: -17.1391658782959
    10. 'rust' → logprob: -17.2641658782959

Token 117: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00018280261429026723
    2. '_cached' → logprob: -9.12518310546875
    3. 'cache' → logprob: -10.50018310546875
    4. '.cache' → logprob: -11.00018310546875
    5. 'def' → logprob: -11.50018310546875
    6. '_' → logprob: -12.75018310546875
    7. '_wrap' → logprob: -13.00018310546875
    8. '._' → logprob: -13.12518310546875
    9. '_c' → logprob: -13.12518310546875
    10. '```' → logprob: -13.37518310546875

Token 118: '(max' (ID: 17178)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38613608479499817
    2. '(None' → logprob: -1.2611360549926758
    3. '(' → logprob: -3.761136054992676
    4. '(def' → logprob: -5.136136054992676
    5. '()' → logprob: -6.136136054992676
    6. '(max' → logprob: -6.136136054992676
    7. ' def' → logprob: -6.761136054992676
    8. '
' → logprob: -7.636136054992676
    9. '<|end|>' → logprob: -7.636136054992676
    10. 'None' → logprob: -7.886136054992676

Token 119: 'size' (ID: 4461)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.19869719445705414
    2. 'size' → logprob: -1.8236972093582153
    3. '=' → logprob: -4.198697090148926
    4. '(None' → logprob: -6.823697090148926
    5. 'None' → logprob: -6.823697090148926
    6. '_size' → logprob: -7.073697090148926
    7. '_None' → logprob: -8.448697090148926
    8. '_none' → logprob: -8.948697090148926
    9. 'def' → logprob: -9.073697090148926
    10. ' None' → logprob: -9.573697090148926

Token 120: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.03804401680827141
    2. '=' → logprob: -3.288043975830078
    3. 'None' → logprob: -13.413043975830078
    4. '=
' → logprob: -14.538043975830078
    5. '=

' → logprob: -15.038043975830078
    6. ')=' → logprob: -16.538043975830078
    7. ')' → logprob: -17.038043975830078
    8. '=True' → logprob: -17.288043975830078
    9. '(None' → logprob: -17.288043975830078
    10. ' None' → logprob: -17.663043975830078

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021948604844510555
    2. 'def' → logprob: -6.252194881439209
    3. ')
' → logprob: -8.37719440460205
    4. '):' → logprob: -11.12719440460205
    5. ' def' → logprob: -12.37719440460205
    6. '   ' → logprob: -12.62719440460205
    7. '):
' → logprob: -12.62719440460205
    8. ' )' → logprob: -12.75219440460205
    9. '<|end|>' → logprob: -14.00219440460205
    10. ')`' → logprob: -14.12719440460205

Token 122: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00629397202283144
    2. ' def' → logprob: -5.381293773651123
    3. '
' → logprob: -7.131293773651123
    4. '<|end|>' → logprob: -7.256293773651123
    5. '   ' → logprob: -9.756294250488281
    6. '(def' → logprob: -10.756294250488281
    7. ':def' → logprob: -10.881294250488281
    8. '<|end|>' → logprob: -11.131294250488281
    9. '	def' → logprob: -11.506294250488281
    10. '\' → logprob: -11.756294250488281

Token 123: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005786505062133074
    2. ' def' → logprob: -7.500578880310059
    3. '<|end|>' → logprob: -11.375578880310059
    4. '
' → logprob: -11.500578880310059
    5. '   ' → logprob: -13.500578880310059
    6. '	def' → logprob: -14.125578880310059
    7. ':def' → logprob: -14.375578880310059
    8. '(def' → logprob: -14.375578880310059
    9. '-def' → logprob: -15.625578880310059
    10. '<|end|>' → logprob: -15.875578880310059

Token 124: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.20759965479373932
    2. ' dp' → logprob: -2.457599639892578
    3. 'dp' → logprob: -2.957599639892578
    4. 'dfs' → logprob: -3.082599639892578
    5. ' count' → logprob: -6.207599639892578
    6. ' search' → logprob: -6.707599639892578
    7. ' solve' → logprob: -7.582599639892578
    8. 'count' → logprob: -9.332599639892578
    9. 'solve' → logprob: -9.707599639892578
    10. ' back' → logprob: -9.832599639892578

Token 125: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.10522366315126419
    2. '(' → logprob: -2.7302236557006836
    3. '(depth' → logprob: -3.6052236557006836
    4. ' (' → logprob: -6.230223655700684
    5. '(mask' → logprob: -6.230223655700684
    6. '(i' → logprob: -7.480223655700684
    7. '(rows' → logprob: -7.605223655700684
    8. '(r' → logprob: -7.730223655700684
    9. '(layer' → logprob: -7.855223655700684
    10. '(state' → logprob: -8.105223655700684

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.976922744186595e-05
    2. ' ,' → logprob: -10.375040054321289
    3. ',row' → logprob: -11.750040054321289
    4. ',column' → logprob: -15.375040054321289
    5. ',
' → logprob: -16.12504005432129
    6. ',state' → logprob: -16.62504005432129
    7. '‌,' → logprob: -16.75004005432129
    8. '(row' → logprob: -16.75004005432129
    9. '   ' → logprob: -17.50004005432129
    10. '_,' → logprob: -18.12504005432129

Token 127: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.002626669593155384
    2. ' mask' → logprob: -7.002626895904541
    3. 'state' → logprob: -7.377626895904541
    4. 'bit' → logprob: -7.752626895904541
    5. 'used' → logprob: -8.127626419067383
    6. 'curr' → logprob: -9.252626419067383
    7. 'cur' → logprob: -9.877626419067383
    8. 'prev' → logprob: -10.252626419067383
    9. 'filled' → logprob: -10.502626419067383
    10. 'col' → logprob: -10.502626419067383

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026705579832196236
    2. ',' → logprob: -3.651705503463745
    3. ' ):' → logprob: -8.526705741882324
    4. ')' → logprob: -9.151705741882324
    5. '):
' → logprob: -9.651705741882324
    6. ':' → logprob: -10.526705741882324
    7. ' ,' → logprob: -13.151705741882324
    8. '**' → logprob: -13.776705741882324
    9. '):
' → logprob: -13.901705741882324
    10. '):

' → logprob: -14.026705741882324

Token 129: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0342929363250732
    2. '   ' → logprob: -1.0342929363250732
    3. ' ' → logprob: -1.9092929363250732
    4. '<|end|>' → logprob: -2.6592929363250732
    5. ' :' → logprob: -3.5342929363250732
    6. '    ' → logprob: -4.034293174743652
    7. '       ' → logprob: -4.784293174743652
    8. ')' → logprob: -5.159293174743652
    9. ',' → logprob: -6.034293174743652
    10. '  ' → logprob: -6.284293174743652

Token 130: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0952346324920654
    2. '   ' → logprob: -1.0952346324920654
    3. ' if' → logprob: -2.0952346324920654
    4. '    ' → logprob: -2.8452346324920654
    5. ':' → logprob: -2.9702346324920654
    6. '       ' → logprob: -3.2202346324920654
    7. 'if' → logprob: -4.3452348709106445
    8. ' 
' → logprob: -4.5952348709106445
    9. ' :' → logprob: -4.5952348709106445
    10. '<|end|>' → logprob: -4.5952348709106445

Token 131: ' row' (ID: 5225)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11692853271961212
    2. ' if' → logprob: -2.2419285774230957
    3. 'i' → logprob: -5.991928577423096
    4. '   ' → logprob: -6.741928577423096
    5. ' ' → logprob: -8.741928100585938
    6. 'If' → logprob: -8.991928100585938
    7. '    ' → logprob: -9.741928100585938
    8. ' i' → logprob: -10.866928100585938
    9. '#' → logprob: -11.616928100585938
    10. '       ' → logprob: -11.741928100585938

Token 132: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39549291133880615
    2. '<|end|>' → logprob: -1.5204929113388062
    3. ' ==' → logprob: -2.6454930305480957
    4. ')' → logprob: -4.395493030548096
    5. ' ' → logprob: -4.770493030548096
    6. '+' → logprob: -5.770493030548096
    7. ' ,' → logprob: -5.895493030548096
    8. '==' → logprob: -6.020493030548096
    9. ' +=' → logprob: -6.145493030548096
    10. '<|end|>' → logprob: -6.145493030548096

Token 133: ' current' (ID: 2208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0645848959684372
    2. ' int' → logprob: -3.314584970474243
    3. 'row' → logprob: -4.189584732055664
    4. 'current' → logprob: -6.314584732055664
    5. ' row' → logprob: -6.439584732055664
    6. '0' → logprob: -6.564584732055664
    7. '<|end|>' → logprob: -6.564584732055664
    8. ' current' → logprob: -6.814584732055664
    9. ' next' → logprob: -7.064584732055664
    10. 'next' → logprob: -7.314584732055664

Token 134: ' row' (ID: 5225)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.6097298860549927
    2. ',' → logprob: -1.1097298860549927
    3. ')' → logprob: -2.734729766845703
    4. '_' → logprob: -3.609729766845703
    5. ' ' → logprob: -4.359729766845703
    6. ' _' → logprob: -4.984729766845703
    7. ' )' → logprob: -4.984729766845703
    8. ' row' → logprob: -6.234729766845703
    9. ',column' → logprob: -6.859729766845703
    10. '_,' → logprob: -7.234729766845703

Token 135: ' index' (ID: 3472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08827528357505798
    2. '<|end|>' → logprob: -2.713275194168091
    3. ')' → logprob: -4.46327543258667
    4. ' ,' → logprob: -5.71327543258667
    5. '   ' → logprob: -6.46327543258667
    6. '<|end|>' → logprob: -6.58827543258667
    7. ' ' → logprob: -9.463274955749512
    8. '  ' → logprob: -9.963274955749512
    9. ':' → logprob: -10.338274955749512
    10. '       ' → logprob: -10.713274955749512

Token 136: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.198607087135315
    2. '<|end|>' → logprob: -1.323607087135315
    3. ')' → logprob: -1.698607087135315
    4. '   ' → logprob: -1.948607087135315
    5. ',' → logprob: -2.8236069679260254
    6. '):' → logprob: -4.573606967926025
    7. '<|end|>' → logprob: -4.573606967926025
    8. ' :' → logprob: -4.948606967926025
    9. '       ' → logprob: -4.948606967926025
    10. ' ' → logprob: -5.823606967926025

Token 137: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.231061577796936
    2. ':' → logprob: -1.356061577796936
    3. '       ' → logprob: -1.731061577796936
    4. '<|end|>' → logprob: -2.2310614585876465
    5. ' :' → logprob: -2.9810614585876465
    6. ')' → logprob: -3.3560614585876465
    7. ',' → logprob: -3.6060614585876465
    8. ' ' → logprob: -3.7310614585876465
    9. '    ' → logprob: -4.3560614585876465
    10. '):' → logprob: -5.7310614585876465

Token 138: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5934560894966125
    2. ',' → logprob: -1.5934560298919678
    3. '   ' → logprob: -2.3434560298919678
    4. '<|end|>' → logprob: -2.3434560298919678
    5. ' ,' → logprob: -3.7184560298919678
    6. '    ' → logprob: -4.718456268310547
    7. ')' → logprob: -5.093456268310547
    8. '  ' → logprob: -5.218456268310547
    9. '       ' → logprob: -6.468456268310547
    10. ' 
' → logprob: -6.593456268310547

Token 139: ' mask' (ID: 10910)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09573184698820114
    2. 'if' → logprob: -2.595731735229492
    3. '   ' → logprob: -5.595731735229492
    4. ' next' → logprob: -5.595731735229492
    5. ' col' → logprob: -5.845731735229492
    6. 'next' → logprob: -7.095731735229492
    7. ' available' → logprob: -7.095731735229492
    8. 'col' → logprob: -7.220731735229492
    9. 'return' → logprob: -7.470731735229492
    10. ' return' → logprob: -7.720731735229492

Token 140: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' occupancy' (ID: 95974)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.597777783870697
    2. 'int' → logprob: -1.8477778434753418
    3. 'occupied' → logprob: -2.097777843475342
    4. ' int' → logprob: -2.847777843475342
    5. ' occupied' → logprob: -3.597777843475342
    6. 'current' → logprob: -3.597777843475342
    7. ' used' → logprob: -4.222777843475342
    8. ' mask' → logprob: -4.347777843475342
    9. 'mask' → logprob: -4.847777843475342
    10. ' available' → logprob: -5.597777843475342

Token 142: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07742560654878616
    2. '<|end|>' → logprob: -2.702425718307495
    3. ' of' → logprob: -5.577425479888916
    4. ' )' → logprob: -5.952425479888916
    5. '<|end|>' → logprob: -7.827425479888916
    6. '):' → logprob: -8.327425956726074
    7. ',' → logprob: -8.952425956726074
    8. ' bits' → logprob: -9.827425956726074
    9. ' ' → logprob: -10.327425956726074
    10. ' in' → logprob: -10.452425956726074

Token 143: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.9474503993988037
    2. 'current' → logprob: -1.4474503993988037
    3. 'the' → logprob: -1.8224503993988037
    4. ' the' → logprob: -2.0724503993988037
    5. 'columns' → logprob: -3.6974503993988037
    6. ' previous' → logprob: -3.9474503993988037
    7. 'previous' → logprob: -3.9474503993988037
    8. 'row' → logprob: -4.322450637817383
    9. ' columns' → logprob: -5.072450637817383
    10. ' row' → logprob: -5.447450637817383

Token 144: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.013285052962601185
    2. 'row' → logprob: -4.388285160064697
    3. '_row' → logprob: -7.638285160064697
    4. ' columns' → logprob: -9.638284683227539
    5. ' ' → logprob: -9.888284683227539
    6. ' space' → logprob: -10.013284683227539
    7. '_' → logprob: -10.513284683227539
    8. ' spaces' → logprob: -10.513284683227539
    9. ' column' → logprob: -10.888284683227539
    10. 'columns' → logprob: -11.638284683227539

Token 145: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: 'bits' (ID: 24043)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4142496585845947
    2. ')' → logprob: -1.1642496585845947
    3. ' int' → logprob: -4.289249420166016
    4. ' an' → logprob: -6.164249420166016
    5. 'bits' → logprob: -6.414249420166016
    6. 'W' → logprob: -6.414249420166016
    7. ' bits' → logprob: -6.539249420166016
    8. 'occupied' → logprob: -6.789249420166016
    9. 'an' → logprob: -7.164249420166016
    10. ' W' → logprob: -7.539249420166016

Token 147: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.1407945156097412
    2. ')' → logprob: -2.390794515609741
    3. 'set' → logprob: -3.640794515609741
    4. ' for' → logprob: -5.89079475402832
    5. ' representing' → logprob: -6.01579475402832
    6. ' that' → logprob: -6.64079475402832
    7. 'represent' → logprob: -6.89079475402832
    8. ' indicating' → logprob: -7.14079475402832
    9. ' used' → logprob: -7.26579475402832
    10. ' represent' → logprob: -7.26579475402832

Token 148: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04006417095661163
    2. ' to' → logprob: -3.7900640964508057
    3. ' for' → logprob: -4.540064334869385
    4. '=' → logprob: -6.165064334869385
    5. ' are' → logprob: -7.040064334869385
    6. ' in' → logprob: -7.165064334869385
    7. ' )' → logprob: -7.290064334869385
    8. ',' → logprob: -8.040063858032227
    9. 'to' → logprob: -8.040063858032227
    10. ' ' → logprob: -8.790063858032227

Token 149: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.08048956096172333
    2. ' occupied' → logprob: -2.8304896354675293
    3. '1' → logprob: -4.080489635467529
    4. ' ' → logprob: -6.830489635467529
    5. ' squares' → logprob: -9.330489158630371
    6. ' columns' → logprob: -9.705489158630371
    7. ' cells' → logprob: -9.955489158630371
    8. ' covered' → logprob: -10.205489158630371
    9. 'covered' → logprob: -10.330489158630371
    10. 'columns' → logprob: -10.705489158630371

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000718626833986491
    2. ' )' → logprob: -7.250718593597412
    3. ',' → logprob: -12.62571907043457
    4. '):' → logprob: -13.12571907043457
    5. ' or' → logprob: -14.00071907043457
    6. '   ' → logprob: -14.12571907043457
    7. ' ' → logprob: -15.12571907043457
    8. '),' → logprob: -15.37571907043457
    9. ')
' → logprob: -15.50071907043457
    10. '#' → logprob: -15.62571907043457

Token 151: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06757064908742905
    2. '   ' → logprob: -3.192570686340332
    3. ')' → logprob: -4.692570686340332
    4. '):' → logprob: -4.692570686340332
    5. ' :' → logprob: -6.442570686340332
    6. '<|end|>' → logprob: -7.067570686340332
    7. ':
' → logprob: -7.317570686340332
    8. ',' → logprob: -7.692570686340332
    9. '\n' → logprob: -7.817570686340332
    10. '    ' → logprob: -8.442570686340332

Token 152: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7089790105819702
    2. ':' → logprob: -1.5839790105819702
    3. ' 
' → logprob: -2.2089791297912598
    4. '   ' → logprob: -2.7089791297912598
    5. '    ' → logprob: -3.3339791297912598
    6. '\n' → logprob: -3.8339791297912598
    7. ' if' → logprob: -4.33397912979126
    8. ' :' → logprob: -4.58397912979126
    9. ')' → logprob: -4.95897912979126
    10. '\' → logprob: -5.20897912979126

Token 153: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -3.2617008400848135e-05
    2. 'row' → logprob: -10.375032424926758
    3. '	row' → logprob: -14.250032424926758
    4. '(row' → logprob: -14.875032424926758
    5. ' ' → logprob: -15.000032424926758
    6. '=row' → logprob: -17.625032424926758
    7. ' rows' → logprob: -17.875032424926758
    8. '[row' → logprob: -18.250032424926758
    9. ',row' → logprob: -18.375032424926758
    10. '$row' → logprob: -18.500032424926758

Token 154: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01111584808677435
    2. '==' → logprob: -4.511116027832031
    3. ' >' → logprob: -10.386116027832031
    4. ' >=' → logprob: -10.386116027832031
    5. '>' → logprob: -13.261116027832031
    6. '=' → logprob: -13.511116027832031
    7. ' ' → logprob: -14.261116027832031
    8. '>=' → logprob: -14.386116027832031
    9. ' =' → logprob: -14.636116027832031
    10. ' ' → logprob: -14.886116027832031

Token 155: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -4.56102097814437e-05
    2. ' H' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.250045776367188
    4. '<|end|>' → logprob: -18.000045776367188
    5. '	H' → logprob: -18.375045776367188
    6. '_H' → logprob: -19.375045776367188
    7. '(H' → logprob: -19.750045776367188
    8. ' ' → logprob: -19.750045776367188
    9. '
' → logprob: -20.000045776367188
    10. '#' → logprob: -20.375045776367188

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005002124700695276
    2. ':
' → logprob: -5.380002021789551
    3. ':return' → logprob: -7.880002021789551
    4. ' :' → logprob: -13.50500202178955
    5. '):' → logprob: -14.25500202178955
    6. '):
' → logprob: -14.88000202178955
    7. '<|end|>' → logprob: -15.00500202178955
    8. '   ' → logprob: -15.63000202178955
    9. ' and' → logprob: -16.005002975463867
    10. 'and' → logprob: -16.130002975463867

Token 157: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02365828864276409
    2. ' return' → logprob: -4.273658275604248
    3. 'return' → logprob: -4.898658275604248
    4. '           ' → logprob: -6.398658275604248
    5. ' if' → logprob: -8.648658752441406
    6. '   ' → logprob: -9.148658752441406
    7. ' ' → logprob: -11.148658752441406
    8. 'if' → logprob: -11.648658752441406
    9. '0' → logprob: -12.023658752441406
    10. '<|end|>' → logprob: -12.023658752441406

Token 158: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1589386910200119
    2. ' return' → logprob: -2.1589386463165283
    3. 'return' (adapté à ' return') → logprob: -3.6589386463165283
    4. '   ' → logprob: -5.283938884735107
    5. ' if' → logprob: -7.783938884735107
    6. ' ' → logprob: -9.15893840789795
    7. '        
' → logprob: -10.65893840789795
    8. '    ' → logprob: -10.78393840789795
    9. '<|end|>' → logprob: -10.78393840789795
    10. 'if' → logprob: -11.15893840789795

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004771276377141476
    2. ' ' → logprob: -5.3797712326049805
    3. 'int' → logprob: -9.12977123260498
    4. ' int' → logprob: -10.25477123260498
    5. '   ' → logprob: -12.62977123260498
    6. '(' → logprob: -12.87977123260498
    7. '(int' → logprob: -14.62977123260498
    8. '0' → logprob: -15.25477123260498
    9. '[' → logprob: -15.37977123260498
    10. '[int' → logprob: -15.50477123260498

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011886836728081107
    2. 'int' → logprob: -6.7511887550354
    3. ' ' → logprob: -11.376188278198242
    4. '(' → logprob: -13.126188278198242
    5. ' int' → logprob: -13.376188278198242
    6. '0' → logprob: -13.751188278198242
    7. '(int' → logprob: -14.251188278198242
    8. '   ' → logprob: -14.751188278198242
    9. '[' → logprob: -15.001188278198242
    10. '{' → logprob: -15.001188278198242

Token 161: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.014180435799062252
    2. ' mask' → logprob: -4.264180660247803
    3. '(mask' → logprob: -11.014180183410645
    4. '	mask' → logprob: -15.014180183410645
    5. '_mask' → logprob: -16.76418113708496
    6. ' ' → logprob: -16.88918113708496
    7. 'masked' → logprob: -17.38918113708496
    8. 'm' → logprob: -17.63918113708496
    9. 'mas' → logprob: -17.76418113708496
    10. '0' → logprob: -18.01418113708496

Token 163: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005289731081575155
    2. ' ==' → logprob: -5.255289554595947
    3. '=' → logprob: -9.880290031433105
    4. '0' → logprob: -13.255290031433105
    5. ')==' → logprob: -14.005290031433105
    6. '()==' → logprob: -14.505290031433105
    7. '==(' → logprob: -14.755290031433105
    8. '==
' → logprob: -14.880290031433105
    9. ']==' → logprob: -15.380290031433105
    10. ' ' → logprob: -15.630290031433105

Token 164: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0893673300743103
    2. 'full' → logprob: -2.464367389678955
    3. ' full' → logprob: -8.214366912841797
    4. ' ' → logprob: -8.839366912841797
    5. '(full' → logprob: -12.339366912841797
    6. 'Full' → logprob: -13.464366912841797
    7. '   ' → logprob: -13.526866912841797
    8. '(' → logprob: -14.089366912841797
    9. 'ful' → logprob: -14.276866912841797
    10. '	full' → logprob: -14.839366912841797

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08907883614301682
    2. 'full' → logprob: -2.464078903198242
    3. ' ' → logprob: -9.339078903198242
    4. ' full' → logprob: -9.964078903198242
    5. '(full' → logprob: -12.964078903198242
    6. '(' → logprob: -14.589078903198242
    7. 'Full' → logprob: -14.839078903198242
    8. '   ' → logprob: -15.651578903198242
    9. '000' → logprob: -16.026578903198242
    10. '	full' → logprob: -16.089078903198242

Token 166: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6249736547470093
    2. '\n' → logprob: -1.2499736547470093
    3. '       ' → logprob: -2.499973773956299
    4. '   ' → logprob: -3.124973773956299
    5. '
' → logprob: -4.124973773956299
    6. '    ' → logprob: -4.749973773956299
    7. 'else' → logprob: -5.249973773956299
    8. '<|end|>' → logprob: -5.624973773956299
    9. ':' → logprob: -5.874973773956299
    10. '\' → logprob: -5.999973773956299

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.12500762939453
    4. '۰' → logprob: -21.25000762939453
    5. '  ' → logprob: -21.37500762939453
    6. '```' → logprob: -22.00000762939453
    7. ' ' → logprob: -22.12500762939453
    8. '    ' → logprob: -22.25000762939453
    9. '           ' → logprob: -23.43750762939453
    10. '       ' → logprob: -23.56250762939453

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -19.125
    4. '```' → logprob: -19.6875
    5. '۰' → logprob: -20.1875
    6. '  ' → logprob: -21.0625
    7. '000' → logprob: -21.4375
    8. '    ' → logprob: -21.875
    9. '০' → logprob: -22.3125
    10. '00' → logprob: -22.375

Token 169: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6412016153335571
    2. '\n' → logprob: -0.8912016153335571
    3. '       ' → logprob: -3.6412014961242676
    4. '<|end|>' → logprob: -4.391201496124268
    5. '   ' → logprob: -5.141201496124268
    6. '    
' → logprob: -5.391201496124268
    7. '' → logprob: -6.016201496124268
    8. '  
' → logprob: -6.391201496124268
    9. '\' → logprob: -6.516201496124268
    10. ')' → logprob: -6.516201496124268

Token 170: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.06873619556427
    2. '\n' → logprob: -1.06873619556427
    3. '       ' → logprob: -1.94373619556427
    4. '    
' → logprob: -2.6937360763549805
    5. '\' → logprob: -3.5687360763549805
    6. ':' → logprob: -4.1937360763549805
    7. ')' → logprob: -4.8187360763549805
    8. '
' → logprob: -4.8187360763549805
    9. '<|end|>' → logprob: -4.8187360763549805
    10. '    ' → logprob: -5.3187360763549805

Token 171: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.994159460067749
    2. '   ' → logprob: -1.494159460067749
    3. ' ' → logprob: -2.119159460067749
    4. '    
' → logprob: -2.619159460067749
    5. '    ' → logprob: -2.869159460067749
    6. '        
' → logprob: -3.244159460067749
    7. ' 
' → logprob: -3.244159460067749
    8. '     
' → logprob: -3.369159460067749
    9. '   
' → logprob: -4.369159698486328
    10. '  
' → logprob: -4.869159698486328

Token 172: ' search' (ID: 3684)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8164362907409668
    2. ' dfs' → logprob: -1.3164362907409668
    3. ' sum' → logprob: -1.9414362907409668
    4. '0' → logprob: -2.191436290740967
    5. 'sum' → logprob: -4.441436290740967
    6. 'dfs' → logprob: -4.816436290740967
    7. ' (' → logprob: -5.066436290740967
    8. ' dp' → logprob: -5.566436290740967
    9. 'count' → logprob: -7.066436290740967
    10. '(' → logprob: -7.066436290740967

Token 173: '_row' (ID: 19157)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08057776838541031
    2. '(row' → logprob: -2.955577850341797
    3. '_' → logprob: -3.830577850341797
    4. '(
' → logprob: -6.455577850341797
    5. '_(' → logprob: -6.955577850341797
    6. ' (' → logprob: -8.205577850341797
    7. '_d' → logprob: -8.455577850341797
    8. '((' → logprob: -8.705577850341797
    9. ')' → logprob: -9.455577850341797
    10. '_next' → logprob: -9.705577850341797

Token 174: '(row' (ID: 15945)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6976101994514465
    2. '(row' → logprob: -0.6976101994514465
    3. '(
' → logprob: -5.572610378265381
    4. '<|end|>' → logprob: -8.697609901428223
    5. ' (' → logprob: -8.822609901428223
    6. '_' → logprob: -9.072609901428223
    7. '((' → logprob: -9.822609901428223
    8. '(line' → logprob: -10.197609901428223
    9. '(rows' → logprob: -11.447609901428223
    10. '_(' → logprob: -11.572609901428223

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001227276516146958
    2. ' ,' → logprob: -9.125123023986816
    3. ')' → logprob: -11.750123023986816
    4. ',
' → logprob: -13.000123023986816
    5. '<|end|>' → logprob: -13.000123023986816
    6. '(mask' → logprob: -15.500123023986816
    7. '<|end|>' → logprob: -15.500123023986816
    8. '   ' → logprob: -15.750123023986816
    9. ' )' → logprob: -15.875123023986816
    10. '‌,' → logprob: -16.5001220703125

Token 176: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.026462968438863754
    2. ' mask' → logprob: -3.651463031768799
    3. '(mask' → logprob: -9.02646255493164
    4. '0' → logprob: -11.02646255493164
    5. '	mask' → logprob: -11.77646255493164
    6. ' ' → logprob: -12.40146255493164
    7. '
' → logprob: -12.77646255493164
    8. ')' → logprob: -13.15146255493164
    9. '   ' → logprob: -13.27646255493164
    10. '_mask' → logprob: -13.40146255493164

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007884251535870135
    2. ')' → logprob: -7.25078821182251
    3. ' ,' → logprob: -10.125788688659668
    4. '   ' → logprob: -10.750788688659668
    5. ' )' → logprob: -11.875788688659668
    6. '       ' → logprob: -12.500788688659668
    7. ',)' → logprob: -13.125788688659668
    8. ',
' → logprob: -14.250788688659668
    9. ',row' → logprob: -14.250788688659668
    10. '    ' → logprob: -14.250788688659668

Token 178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008793608285486698
    2. ' ' → logprob: -5.008793830871582
    3. 'full' → logprob: -6.633793830871582
    4. 'mask' → logprob: -7.883793830871582
    5. ' full' → logprob: -8.133793830871582
    6. ' mask' → logprob: -10.258793830871582
    7. ')' → logprob: -10.883793830871582
    8. '   ' → logprob: -11.321293830871582
    9. '  ' → logprob: -12.383793830871582
    10. '(' → logprob: -12.508793830871582

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016731605865061283
    2. 'full' → logprob: -6.501673221588135
    3. ' ' → logprob: -8.876672744750977
    4. ' full' → logprob: -11.501672744750977
    5. 'mask' → logprob: -11.876672744750977
    6. ')' → logprob: -12.376672744750977
    7. '(' → logprob: -13.001672744750977
    8. '   ' → logprob: -13.251672744750977
    9. '(full' → logprob: -14.001672744750977
    10. '1' → logprob: -14.439172744750977

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6341226696968079
    2. ')' → logprob: -0.7591226696968079
    3. ' )' → logprob: -6.759122848510742
    4. '   ' → logprob: -8.509122848510742
    5. ' ,' → logprob: -9.509122848510742
    6. ',)' → logprob: -10.509122848510742
    7. '    ' → logprob: -10.884122848510742
    8. '<|end|>' → logprob: -11.134122848510742
    9. ' ' → logprob: -12.134122848510742
    10. '  ' → logprob: -12.509122848510742

Token 181: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.66862952709198
    2. 'full' → logprob: -0.79362952709198
    3. ' full' → logprob: -4.2936296463012695
    4. ')' → logprob: -4.5436296463012695
    5. 'mask' → logprob: -5.4186296463012695
    6. ' ' → logprob: -5.7936296463012695
    7. '[])' → logprob: -6.9186296463012695
    8. 'dfs' → logprob: -7.0436296463012695
    9. '[]' → logprob: -7.2936296463012695
    10. ' [])' → logprob: -8.66862964630127

Token 182: '0' (ID: 15)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.48282700777053833
    2. '0' → logprob: -0.9828270077705383
    3. ')' → logprob: -5.107827186584473
    4. 'dfs' → logprob: -7.107827186584473
    5. ' full' → logprob: -7.482827186584473
    6. 'mask' → logprob: -7.982827186584473
    7. ' ' → logprob: -8.232827186584473
    8. '[])' → logprob: -8.857827186584473
    9. 'W' → logprob: -9.107827186584473
    10. '[]' → logprob: -9.732827186584473

Token 183: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000774846994318068
    2. ',' → logprob: -7.87577486038208
    3. ' )' → logprob: -7.87577486038208
    4. ',)' → logprob: -11.500774383544922
    5. ')
' → logprob: -14.125774383544922
    6. '<|end|>' → logprob: -14.250774383544922
    7. '))' → logprob: -14.375774383544922
    8. ' ,' → logprob: -14.625774383544922
    9. '   ' → logprob: -15.250774383544922
    10. '())' → logprob: -15.500774383544922

Token 184: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.738838791847229
    2. ':' → logprob: -1.613838791847229
    3. ')' → logprob: -2.4888386726379395
    4. 'def' → logprob: -2.4888386726379395
    5. '   ' → logprob: -2.9888386726379395
    6. '(' → logprob: -2.9888386726379395
    7. '\n' → logprob: -4.6138386726379395
    8. ',' → logprob: -4.7388386726379395
    9. '(
' → logprob: -4.7388386726379395
    10. '_' → logprob: -4.8638386726379395

Token 185: ' def' (ID: 1056)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9641509652137756
    2. '
' → logprob: -1.2141509056091309
    3. '\n' → logprob: -1.7141509056091309
    4. 'def' (adapté à ' def') → logprob: -2.214150905609131
    5. '_' → logprob: -4.839150905609131
    6. 'd' → logprob: -5.089150905609131
    7. '   ' → logprob: -5.089150905609131
    8. ':' → logprob: -5.464150905609131
    9. ')' → logprob: -6.714150905609131
    10. 'n' → logprob: -6.714150905609131

Token 186: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.25193658471107483
    2. ' search' → logprob: -1.5019365549087524
    3. '_search' → logprob: -12.876936912536621
    4. '	search' → logprob: -13.751936912536621
    5. 'earch' → logprob: -14.376936912536621
    6. 's' → logprob: -14.626936912536621
    7. '(search' → logprob: -14.751936912536621
    8. ' ' → logprob: -14.751936912536621
    9. 'def' → logprob: -15.001936912536621
    10. 'space' → logprob: -15.376936912536621

Token 187: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.005978093016892672
    2. '_' → logprob: -5.130978107452393
    3. '_Row' → logprob: -10.505977630615234
    4. '_r' → logprob: -11.505977630615234
    5. '_ROW' → logprob: -12.880977630615234
    6. '_rows' → logprob: -13.255977630615234
    7. '_line' → logprob: -13.505977630615234
    8. '_ro' → logprob: -13.505977630615234
    9. ' _' → logprob: -13.755977630615234
    10. '<Row' → logprob: -13.880977630615234

Token 188: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.5759686231613159
    2. '(' → logprob: -0.8259686231613159
    3. '(line' → logprob: -10.700968742370605
    4. '(rows' → logprob: -13.950968742370605
    5. ' (' → logprob: -14.075968742370605
    6. '(
' → logprob: -14.325968742370605
    7. '(next' → logprob: -14.450968742370605
    8. '((' → logprob: -14.700968742370605
    9. '(column' → logprob: -14.700968742370605
    10. '(root' → logprob: -15.200968742370605

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023476807109545916
    2. ' ,' → logprob: -8.750234603881836
    3. ',row' → logprob: -9.500234603881836
    4. '   ' → logprob: -15.000234603881836
    5. ')' → logprob: -15.250234603881836
    6. ',
' → logprob: -15.750234603881836
    7. ',column' → logprob: -15.875234603881836
    8. '‌,' → logprob: -15.875234603881836
    9. ',line' → logprob: -16.375234603881836
    10. '_,' → logprob: -16.750234603881836

Token 190: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.002834111684933305
    2. ' mask' → logprob: -6.627834320068359
    3. 'col' → logprob: -7.127834320068359
    4. 'pos' → logprob: -8.75283432006836
    5. 'prev' → logprob: -8.87783432006836
    6. 'start' → logprob: -9.37783432006836
    7. 'occupied' → logprob: -9.50283432006836
    8. 'used' → logprob: -10.00283432006836
    9. 'curr' → logprob: -10.50283432006836
    10. 'm' → logprob: -10.62783432006836

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016945181414484978
    2. ' ,' → logprob: -8.75016975402832
    3. ',row' → logprob: -12.12516975402832
    4. ',column' → logprob: -13.75016975402832
    5. '   ' → logprob: -13.87516975402832
    6. 'def' → logprob: -14.75016975402832
    7. ',next' → logprob: -14.87516975402832
    8. ')' → logprob: -14.87516975402832
    9. ',index' → logprob: -15.37516975402832
    10. '):' → logprob: -15.37516975402832

Token 192: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03227704390883446
    2. 'col' → logprob: -3.5322771072387695
    3. ' pos' → logprob: -6.2822771072387695
    4. 'idx' → logprob: -8.40727710723877
    5. ' col' → logprob: -8.53227710723877
    6. 'index' → logprob: -9.40727710723877
    7. 'bit' → logprob: -9.78227710723877
    8. 'used' → logprob: -10.65727710723877
    9. 'next' → logprob: -11.28227710723877
    10. 'start' → logprob: -11.28227710723877

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005701907211914659
    2. ' ,' → logprob: -7.500570297241211
    3. '):' → logprob: -12.375570297241211
    4. '+' → logprob: -12.375570297241211
    5. ')' → logprob: -13.000570297241211
    6. '   ' → logprob: -13.750570297241211
    7. '+,' → logprob: -13.750570297241211
    8. ',
' → logprob: -14.500570297241211
    9. '‌,' → logprob: -14.875570297241211
    10. ',int' → logprob: -15.000570297241211

Token 194: ' next' (ID: 2613)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.6940312385559082
    2. 'cur' → logprob: -1.6940312385559082
    3. 'used' → logprob: -1.9440312385559082
    4. 'filled' → logprob: -2.069031238555908
    5. 'curr' → logprob: -2.069031238555908
    6. 'occupied' → logprob: -2.444031238555908
    7. 'next' → logprob: -3.569031238555908
    8. 'state' → logprob: -3.819031238555908
    9. 'fill' → logprob: -4.194031238555908
    10. 'current' → logprob: -4.319031238555908

Token 195: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0010955691104754806
    2. 'mask' → logprob: -6.876095771789551
    3. 'Mask' → logprob: -10.37609577178955
    4. '_' → logprob: -10.50109577178955
    5. '_pos' → logprob: -14.00109577178955
    6. '_row' → logprob: -14.12609577178955
    7. ' mask' → logprob: -14.37609577178955
    8. '_MASK' → logprob: -14.87609577178955
    9. '_m' → logprob: -15.00109577178955
    10. '_masks' → logprob: -15.12609577178955

Token 196: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001408090116456151
    2. '):
' → logprob: -6.626408100128174
    3. ' ):' → logprob: -9.626407623291016
    4. ')' → logprob: -11.501407623291016
    5. '):
' → logprob: -13.126407623291016
    6. ',' → logprob: -13.376407623291016
    7. '):

' → logprob: -13.376407623291016
    8. ':' → logprob: -14.751407623291016
    9. '   ' → logprob: -15.626407623291016
    10. '=' → logprob: -15.876407623291016

Token 197: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2889164388179779
    2. '):' → logprob: -1.7889164686203003
    3. '       ' → logprob: -3.4139163494110107
    4. ')' → logprob: -3.6639163494110107
    5. ' :' → logprob: -4.28891658782959
    6. '   ' → logprob: -5.03891658782959
    7. '<|end|>' → logprob: -6.41391658782959
    8. '    ' → logprob: -6.91391658782959
    9. ',' → logprob: -7.03891658782959
    10. ' ' → logprob: -7.66391658782959

Token 198: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5128763318061829
    2. ' if' → logprob: -1.262876272201538
    3. '       ' → logprob: -3.137876272201538
    4. '   ' → logprob: -3.637876272201538
    5. '    ' → logprob: -3.762876272201538
    6. 'if' → logprob: -4.137876510620117
    7. '        ' → logprob: -6.012876510620117
    8. '  ' → logprob: -6.387876510620117
    9. ' 
' → logprob: -6.387876510620117
    10. ')' → logprob: -7.012876510620117

Token 199: ' Try' (ID: 14720)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20185835659503937
    2. ' if' → logprob: -1.701858401298523
    3. '       ' → logprob: -8.326858520507812
    4. '   ' → logprob: -8.826858520507812
    5. 'If' → logprob: -10.826858520507812
    6. '    ' → logprob: -11.326858520507812
    7. '	if' → logprob: -11.451858520507812
    8. ' ' → logprob: -12.076858520507812
    9. '        ' → logprob: -13.201858520507812
    10. ')' → logprob: -13.701858520507812

Token 200: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' fill' (ID: 6954)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6773450374603271
    2. ' if' → logprob: -1.3023450374603271
    3. 'pos' → logprob: -1.9273450374603271
    4. 'search' → logprob: -3.802345037460327
    5. ' cover' → logprob: -4.177345275878906
    6. ' search' → logprob: -4.177345275878906
    7. ' place' → logprob: -5.177345275878906
    8. 'place' → logprob: -5.677345275878906
    9. '<|end|>' → logprob: -6.052345275878906
    10. 'cover' → logprob: -6.177345275878906

Token 202: ' current' (ID: 2208)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.11062338203191757
    2. '<|end|>' → logprob: -3.735623359680176
    3. ' pos' → logprob: -3.860623359680176
    4. ' all' → logprob: -4.110623359680176
    5. ' the' → logprob: -4.235623359680176
    6. 'positions' → logprob: -4.985623359680176
    7. 'the' → logprob: -5.235623359680176
    8. ' positions' → logprob: -5.610623359680176
    9. ' if' → logprob: -6.235623359680176
    10. ' current' → logprob: -6.235623359680176

Token 203: ' row' (ID: 5225)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.262454628944397
    2. ' row' → logprob: -2.5124545097351074
    3. ' pos' → logprob: -2.8874545097351074
    4. 'row' → logprob: -3.2624545097351074
    5. ' position' → logprob: -3.6374545097351074
    6. 'position' → logprob: -4.012454509735107
    7. ')' → logprob: -6.387454509735107
    8. 'positions' → logprob: -6.387454509735107
    9. '_pos' → logprob: -6.512454509735107
    10. ' positions' → logprob: -6.887454509735107

Token 204: ' cells' (ID: 11242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' starting' (ID: 8601)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' at' (ID: 540)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.40961265563964844
    2. 'at' → logprob: -1.1596126556396484
    3. ' at' → logprob: -3.9096126556396484
    4. ' from' → logprob: -6.034612655639648
    5. 'pos' → logprob: -10.284612655639648
    6. 'with' → logprob: -12.909612655639648
    7. ',' → logprob: -13.784612655639648
    8. ')' → logprob: -14.409612655639648
    9. '	at' → logprob: -14.659612655639648
    10. 'to' → logprob: -14.784612655639648

Token 207: ' '' (ID: 461)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00020735491125378758
    2. ' pos' → logprob: -8.50020694732666
    3. 'position' → logprob: -12.50020694732666
    4. '```' → logprob: -17.750207901000977
    5. ' position' → logprob: -17.875207901000977
    6. '_pos' → logprob: -18.500207901000977
    7. '	pos' → logprob: -18.500207901000977
    8. '`' → logprob: -18.625207901000977
    9. '(pos' → logprob: -19.375207901000977
    10. '[pos' → logprob: -19.625207901000977

Token 208: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.47495681833243e-05
    2. ' pos' → logprob: -10.625024795532227
    3. 'position' → logprob: -15.250024795532227
    4. ')' → logprob: -16.250024795532227
    5. 'p' → logprob: -17.375024795532227
    6. '	pos' → logprob: -17.875024795532227
    7. '```' → logprob: -18.500024795532227
    8. '_pos' → logprob: -18.500024795532227
    9. '   ' → logprob: -18.625024795532227
    10. '`' → logprob: -18.625024795532227

Token 209: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11849207431077957
    2. '+' → logprob: -3.3684921264648438
    3. '<|end|>' → logprob: -3.6184921264648438
    4. ' )' → logprob: -3.9934921264648438
    5. ',' → logprob: -4.993492126464844
    6. ' +' → logprob: -5.368492126464844
    7. '):' → logprob: -5.368492126464844
    8. '   ' → logprob: -5.618492126464844
    9. ' ' → logprob: -5.743492126464844
    10. '')' → logprob: -6.118492126464844

Token 210: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: ' tat' (ID: 15495)
  Prédit: 'tat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tat' → logprob: -0.2891940176486969
    2. ' tat' → logprob: -2.039194107055664
    3. '1' → logprob: -2.789194107055664
    4. ' ' → logprob: -4.789194107055664
    5. 'tiles' → logprob: -4.789194107055664
    6. '0' → logprob: -5.164194107055664
    7. 'available' → logprob: -5.289194107055664
    8. '2' → logprob: -5.414194107055664
    9. 'the' → logprob: -6.164194107055664
    10. ' available' → logprob: -6.289194107055664

Token 212: 'amis' (ID: 27483)
  Prédit: 'ami'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ami' → logprob: -0.008064602501690388
    2. 'a' → logprob: -4.8830647468566895
    3. 'ами' → logprob: -9.133064270019531
    4. ')' → logprob: -9.258064270019531
    5. 'i' → logprob: -9.633064270019531
    6. 's' → logprob: -10.383064270019531
    7. 'am' → logprob: -10.883064270019531
    8. ']' → logprob: -11.258064270019531
    9. '   ' → logprob: -11.258064270019531
    10. '`' → logprob: -11.383064270019531

Token 213: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9364123344421387
    2. '):' → logprob: -1.1864123344421387
    3. '   ' → logprob: -1.9364123344421387
    4. '<|end|>' → logprob: -2.9364123344421387
    5. ')' → logprob: -3.4364123344421387
    6. '       ' → logprob: -3.8114123344421387
    7. ',' → logprob: -3.9364123344421387
    8. ' if' → logprob: -4.561412334442139
    9. ' ' → logprob: -4.811412334442139
    10. ' :' → logprob: -5.811412334442139

Token 214: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5654093027114868
    2. ':' → logprob: -2.1904091835021973
    3. '):' → logprob: -2.1904091835021973
    4. '       ' → logprob: -2.6904091835021973
    5. ' if' → logprob: -3.3154091835021973
    6. ')' → logprob: -3.3154091835021973
    7. ' ' → logprob: -3.6904091835021973
    8. ',' → logprob: -4.440409183502197
    9. '    ' → logprob: -4.815409183502197
    10. '):
' → logprob: -4.940409183502197

Token 215: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15775157511234283
    2. '       ' → logprob: -2.4077515602111816
    3. 'if' → logprob: -3.2827515602111816
    4. '   ' → logprob: -4.407751560211182
    5. ' ' → logprob: -5.782751560211182
    6. '<|end|>' → logprob: -6.407751560211182
    7. '    ' → logprob: -7.532751560211182
    8. '        ' → logprob: -7.657751560211182
    9. ')' → logprob: -8.78275203704834
    10. '	if' → logprob: -9.53275203704834

Token 216: ' next' (ID: 2613)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1965523511171341
    2. 'if' → logprob: -1.8215523958206177
    3. ' ' → logprob: -4.321552276611328
    4. '       ' → logprob: -6.321552276611328
    5. ' 
' → logprob: -8.196552276611328
    6. '        ' → logprob: -8.196552276611328
    7. '    ' → logprob: -8.321552276611328
    8. ')' → logprob: -8.446552276611328
    9. '   ' → logprob: -8.446552276611328
    10. '<|end|>' → logprob: -9.696552276611328

Token 217: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.12329819798469543
    2. '_' → logprob: -2.623298168182373
    3. '_pos' → logprob: -3.748298168182373
    4. ')' → logprob: -4.998298168182373
    5. 'pos' → logprob: -5.998298168182373
    6. ' ==' → logprob: -5.998298168182373
    7. '==' → logprob: -6.248298168182373
    8. '   ' → logprob: -6.373298168182373
    9. ',' → logprob: -6.873298168182373
    10. '_token' → logprob: -7.248298168182373

Token 218: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4661584794521332
    2. '==' → logprob: -2.091158390045166
    3. ' ==' → logprob: -2.591158390045166
    4. ',' → logprob: -2.841158390045166
    5. '<|end|>' → logprob: -3.091158390045166
    6. ' |=' → logprob: -3.716158390045166
    7. '=' → logprob: -3.966158390045166
    8. ' ,' → logprob: -5.091158390045166
    9. ')==' → logprob: -5.216158390045166
    10. ' =' → logprob: -5.591158390045166

Token 219: ' occupancy' (ID: 95974)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7076664566993713
    2. ' next' → logprob: -1.0826663970947266
    3. 'mask' → logprob: -2.7076663970947266
    4. 'bits' → logprob: -3.9576663970947266
    5. '0' → logprob: -4.082666397094727
    6. ' mask' → logprob: -4.332666397094727
    7. ' bits' → logprob: -4.582666397094727
    8. 'current' → logprob: -5.082666397094727
    9. 'occupied' → logprob: -5.082666397094727
    10. ' current' → logprob: -5.582666397094727

Token 220: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6025665998458862
    2. '|' → logprob: -1.1025665998458862
    3. ' |' → logprob: -2.852566719055176
    4. ',' → logprob: -4.102566719055176
    5. ' of' → logprob: -4.227566719055176
    6. '   ' → logprob: -4.477566719055176
    7. ' |=' → logprob: -5.102566719055176
    8. '<|end|>' → logprob: -5.602566719055176
    9. '=' → logprob: -5.977566719055176
    10. ' for' → logprob: -6.602566719055176

Token 221: ' next' (ID: 2613)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.2780400514602661
    2. 'row' → logprob: -1.5280400514602661
    3. ' current' → logprob: -1.5280400514602661
    4. 'the' → logprob: -2.4030399322509766
    5. ' the' → logprob: -2.6530399322509766
    6. 'next' → logprob: -2.7780399322509766
    7. ' next' → logprob: -3.2780399322509766
    8. ' row' → logprob: -3.6530399322509766
    9. '(row' → logprob: -8.653039932250977
    10. 'pos' → logprob: -8.903039932250977

Token 222: ' row' (ID: 5225)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3206770122051239
    2. '_row' → logprob: -1.8206770420074463
    3. ' _' → logprob: -2.6956770420074463
    4. '_mask' → logprob: -3.4456770420074463
    5. ')' → logprob: -5.070676803588867
    6. ' row' → logprob: -5.945676803588867
    7. 'row' → logprob: -6.320676803588867
    8. ' ' → logprob: -6.945676803588867
    9. ' )' → logprob: -7.695676803588867
    10. ')_' → logprob: -8.195676803588867

Token 223: '
' (ID: 198)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.32247576117515564
    2. ')' → logprob: -1.447475790977478
    3. '   ' → logprob: -3.9474756717681885
    4. '       ' → logprob: -4.822475910186768
    5. '):
' → logprob: -4.947475910186768
    6. ',' → logprob: -5.822475910186768
    7. ':' → logprob: -7.197475910186768
    8. ' ' → logprob: -7.572475910186768
    9. ' ):' → logprob: -7.697475910186768
    10. ' )' → logprob: -7.947475910186768

Token 224: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4501532316207886
    2. ':' → logprob: -1.5751532316207886
    3. '       ' → logprob: -3.325153350830078
    4. '):' → logprob: -3.325153350830078
    5. ' if' → logprob: -3.575153350830078
    6. ')' → logprob: -3.825153350830078
    7. ' :' → logprob: -4.700153350830078
    8. ' ' → logprob: -5.075153350830078
    9. '    ' → logprob: -5.575153350830078
    10. ',' → logprob: -5.700153350830078

Token 225: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7692371010780334
    2. '       ' → logprob: -1.2692370414733887
    3. 'if' (adapté à ' if') → logprob: -2.5192370414733887
    4. '<|end|>' → logprob: -2.6442370414733887
    5. '   ' → logprob: -2.8942370414733887
    6. ' ' → logprob: -3.2692370414733887
    7. '    ' → logprob: -5.644237041473389
    8. '        ' → logprob: -6.394237041473389
    9. '	if' → logprob: -6.769237041473389
    10. ')' → logprob: -6.894237041473389

Token 226: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.04858873412013054
    2. 'pos' → logprob: -3.048588752746582
    3. '(pos' → logprob: -13.923588752746582
    4. '	pos' → logprob: -15.298588752746582
    5. ' ' → logprob: -16.298587799072266
    6. 'Pos' → logprob: -16.798587799072266
    7. '[pos' → logprob: -16.923587799072266
    8. '_pos' → logprob: -17.048587799072266
    9. ' ' → logprob: -17.673587799072266
    10. ',pos' → logprob: -18.673587799072266

Token 227: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1037667989730835
    2. '==' → logprob: -2.353766918182373
    3. ' >=' → logprob: -5.728766918182373
    4. '>=' → logprob: -8.228766441345215
    5. ' ' → logprob: -10.978766441345215
    6. ')' → logprob: -11.853766441345215
    7. ')==' → logprob: -13.228766441345215
    8. '   ' → logprob: -13.353766441345215
    9. '=' → logprob: -13.478766441345215
    10. '===' → logprob: -13.978766441345215

Token 228: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.07894442975521088
    2. ' W' → logprob: -2.578944444656372
    3. ' full' → logprob: -10.203944206237793
    4. 'full' → logprob: -11.578944206237793
    5. ' ' → logprob: -12.953944206237793
    6. '   ' → logprob: -13.953944206237793
    7. '	W' → logprob: -13.953944206237793
    8. ')' → logprob: -14.078944206237793
    9. '  ' → logprob: -14.203944206237793
    10. '(W' → logprob: -14.578944206237793

Token 229: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002720110584050417
    2. ':
' → logprob: -6.127719879150391
    3. ':return' → logprob: -7.627719879150391
    4. '):' → logprob: -10.87771987915039
    5. ' :' → logprob: -10.87771987915039
    6. ' or' → logprob: -12.37771987915039
    7. '   ' → logprob: -13.37771987915039
    8. '       ' → logprob: -13.75271987915039
    9. '<|end|>' → logprob: -14.37771987915039
    10. '):
' → logprob: -14.37771987915039

Token 230: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04549713432788849
    2. '           ' → logprob: -4.170496940612793
    3. ':' → logprob: -4.670496940612793
    4. ':
' → logprob: -5.170496940612793
    5. '   ' → logprob: -5.545496940612793
    6. ':return' → logprob: -5.545496940612793
    7. ' return' → logprob: -5.795496940612793
    8. '<|end|>' → logprob: -7.295496940612793
    9. 'return' → logprob: -7.420496940612793
    10. '
' → logprob: -7.545496940612793

Token 231: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5560329556465149
    2. '       ' → logprob: -1.5560328960418701
    3. 'return' → logprob: -1.5560328960418701
    4. '
' → logprob: -6.306033134460449
    5. '   ' → logprob: -7.056033134460449
    6. ' if' → logprob: -7.431033134460449
    7. '           ' → logprob: -8.05603313446045
    8. '	return' → logprob: -8.30603313446045
    9. '<|end|>' → logprob: -8.43103313446045
    10. '        
' → logprob: -8.55603313446045

Token 232: ' move' (ID: 5275)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4039512574672699
    2. ' return' → logprob: -1.1539512872695923
    3. '       ' → logprob: -5.278951168060303
    4. ' if' → logprob: -5.403951168060303
    5. '           ' → logprob: -5.653951168060303
    6. 'if' → logprob: -5.653951168060303
    7. '   ' → logprob: -8.278951644897461
    8. '               ' → logprob: -10.153951644897461
    9. '	return' → logprob: -10.653951644897461
    10. ' ' → logprob: -13.028951644897461

Token 233: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.21308310329914093
    2. 'to' → logprob: -2.338083028793335
    3. ' on' → logprob: -3.338083028793335
    4. ' (' → logprob: -4.338083267211914
    5. '(row' → logprob: -4.338083267211914
    6. '(' → logprob: -4.588083267211914
    7. '(
' → logprob: -5.338083267211914
    8. '_to' → logprob: -5.713083267211914
    9. ' forward' → logprob: -5.713083267211914
    10. 'on' → logprob: -5.838083267211914

Token 234: ' next' (ID: 2613)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.4553956389427185
    2. ' dfs' → logprob: -1.2053956985473633
    3. ' next' → logprob: -3.4553956985473633
    4. 'next' → logprob: -3.4553956985473633
    5. 'row' → logprob: -6.205395698547363
    6. ' row' → logprob: -7.455395698547363
    7. ' the' → logprob: -8.455395698547363
    8. 'the' → logprob: -8.955395698547363
    9. 'search' → logprob: -10.205395698547363
    10. 'df' → logprob: -10.330395698547363

Token 235: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.1567457765340805
    2. 'row' → logprob: -2.156745672225952
    3. ',' → logprob: -4.781745910644531
    4. ' ' → logprob: -4.781745910644531
    5. '_row' → logprob: -5.031745910644531
    6. ',row' → logprob: -6.656745910644531
    7. ')' → logprob: -7.031745910644531
    8. '(row' → logprob: -7.031745910644531
    9. '	row' → logprob: -7.281745910644531
    10. ' _' → logprob: -7.281745910644531

Token 236: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05769454315304756
    2. '\n' → logprob: -4.432694435119629
    3. '           ' → logprob: -4.807694435119629
    4. ':
' → logprob: -4.932694435119629
    5. '       ' → logprob: -5.057694435119629
    6. ',' → logprob: -5.182694435119629
    7. ',
' → logprob: -5.807694435119629
    8. ' return' → logprob: -5.932694435119629
    9. ' 
' → logprob: -6.182694435119629
    10. 'return' → logprob: -6.557694435119629

Token 237: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21953622996807098
    2. '           ' → logprob: -2.094536304473877
    3. '   ' → logprob: -3.844536304473877
    4. ',' → logprob: -4.594536304473877
    5. ' return' → logprob: -4.594536304473877
    6. 'return' → logprob: -4.719536304473877
    7. '
' → logprob: -5.344536304473877
    8. '(' → logprob: -5.844536304473877
    9. '               ' → logprob: -5.969536304473877
    10. '        
' → logprob: -6.219536304473877

Token 238: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6977735161781311
    2. 'return' (adapté à ' return') → logprob: -0.6977735161781311
    3. '       ' → logprob: -5.822773456573486
    4. '           ' → logprob: -7.447773456573486
    5. '
' → logprob: -7.697773456573486
    6. '   ' → logprob: -7.822773456573486
    7. '	return' → logprob: -9.447773933410645
    8. '        
' → logprob: -10.322773933410645
    9. ' 
' → logprob: -10.822773933410645
    10. '               ' → logprob: -11.072773933410645

Token 239: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.69316166639328
    2. 'dfs' → logprob: -0.69316166639328
    3. '
' → logprob: -11.568161964416504
    4. 'df' → logprob: -13.443161964416504
    5. '```' → logprob: -14.193161964416504
    6. 'd' → logprob: -14.318161964416504
    7. ' ' → logprob: -14.443161964416504
    8. 'dp' → logprob: -15.193161964416504
    9. '	d' → logprob: -15.943161964416504
    10. '(d' → logprob: -16.193161010742188

Token 240: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0019323242595419288
    2. '(' → logprob: -6.251932144165039
    3. '(
' → logprob: -13.001932144165039
    4. '(next' → logprob: -14.376932144165039
    5. ',row' → logprob: -15.251932144165039
    6. 'row' → logprob: -15.626932144165039
    7. ')' → logprob: -16.25193214416504
    8. '[row' → logprob: -16.37693214416504
    9. ' (' → logprob: -16.50193214416504
    10. '(line' → logprob: -16.62693214416504

Token 241: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1002165898680687
    2. ' +' → logprob: -2.3502166271209717
    3. ',' → logprob: -12.10021686553955
    4. '+,' → logprob: -12.85021686553955
    5. '   ' → logprob: -14.60021686553955
    6. '+
' → logprob: -14.85021686553955
    7. ' plus' → logprob: -15.85021686553955
    8. ' ' → logprob: -15.97521686553955
    9. '```' → logprob: -15.97521686553955
    10. ' ,' → logprob: -16.100215911865234

Token 242: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003392767102923244
    2. ' ' → logprob: -8.12533950805664
    3. '<|end|>' → logprob: -10.12533950805664
    4. '   ' → logprob: -13.12533950805664
    5. '```' → logprob: -15.12533950805664
    6. ')' → logprob: -15.37533950805664
    7. ',' → logprob: -16.12533950805664
    8. '0' → logprob: -16.12533950805664
    9. '[' → logprob: -16.50033950805664
    10. '<|end|>' → logprob: -16.50033950805664

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.375001907348633
    4. '<|end|>' → logprob: -16.500001907348633
    5. '```' → logprob: -17.375001907348633
    6. '0' → logprob: -17.625001907348633
    7. ')' → logprob: -18.875001907348633
    8. '
' → logprob: -19.125001907348633
    9. 'def' → logprob: -19.750001907348633
    10. ',' → logprob: -19.750001907348633

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001577698567416519
    2. ',next' → logprob: -9.375157356262207
    3. ' ,' → logprob: -10.000157356262207
    4. ')' → logprob: -11.750157356262207
    5. ',
' → logprob: -11.875157356262207
    6. '(next' → logprob: -12.125157356262207
    7. '),' → logprob: -12.500157356262207
    8. '(' → logprob: -14.375157356262207
    9. '```' → logprob: -14.875157356262207
    10. ',

' → logprob: -14.875157356262207

Token 245: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0015153385465964675
    2. ' next' → logprob: -6.5015153884887695
    3. '(next' → logprob: -11.37651538848877
    4. '[next' → logprob: -14.25151538848877
    5. ')' → logprob: -14.62651538848877
    6. '0' → logprob: -15.62651538848877
    7. '	next' → logprob: -15.87651538848877
    8. '
' → logprob: -16.501514434814453
    9. '```' → logprob: -17.251514434814453
    10. '_next' → logprob: -17.501514434814453

Token 246: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.8624639324116288e-06
    2. '_m' → logprob: -14.375001907348633
    3. '_' → logprob: -14.500001907348633
    4. 'mask' → logprob: -15.250001907348633
    5. '_MASK' → logprob: -16.125001907348633
    6. '_masks' → logprob: -16.250001907348633
    7. ' _' → logprob: -16.375001907348633
    8. ')' → logprob: -16.500001907348633
    9. '__' → logprob: -17.250001907348633
    10. '_token' → logprob: -18.000001907348633

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ')
' → logprob: -11.875011444091797
    3. ' )' → logprob: -12.625011444091797
    4. '   ' → logprob: -14.500011444091797
    5. '       ' → logprob: -15.750011444091797
    6. ')return' → logprob: -16.000011444091797
    7. '())' → logprob: -16.000011444091797
    8. '))' → logprob: -16.250011444091797
    9. ')#' → logprob: -16.625011444091797
    10. '),' → logprob: -17.500011444091797

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4763093590736389
    2. '+' → logprob: -1.6013092994689941
    3. ' +' → logprob: -1.9763092994689941
    4. '   ' → logprob: -3.601309299468994
    5. ')' → logprob: -5.101309299468994
    6. '    ' → logprob: -6.226309299468994
    7. '        ' → logprob: -6.851309299468994
    8. ' ' → logprob: -7.976309299468994
    9. '<|end|>' → logprob: -7.976309299468994
    10. ' *' → logprob: -8.351309776306152

Token 249: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012188319116830826
    2. ' if' → logprob: -4.88718843460083
    3. 'if' → logprob: -6.38718843460083
    4. '<|end|>' → logprob: -6.63718843460083
    5. '   ' → logprob: -8.012187957763672
    6. '        
' → logprob: -8.387187957763672
    7. ')' → logprob: -8.387187957763672
    8. '        ' → logprob: -8.512187957763672
    9. '[' → logprob: -9.137187957763672
    10. ' ' → logprob: -9.637187957763672

Token 250: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018364032730460167
    2. ' if' → logprob: -4.018363952636719
    3. '       ' → logprob: -8.768363952636719
    4. '   ' → logprob: -10.268363952636719
    5. '#' → logprob: -12.768363952636719
    6. ' ' → logprob: -12.893363952636719
    7. '           ' → logprob: -13.018363952636719
    8. '    ' → logprob: -13.268363952636719
    9. '```' → logprob: -13.518363952636719
    10. ')' → logprob: -13.643363952636719

Token 251: ' current' (ID: 2208)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.22245927155017853
    2. ' (' → logprob: -2.347459316253662
    3. ' mask' → logprob: -2.347459316253662
    4. 'mask' → logprob: -4.847459316253662
    5. '(' → logprob: -7.972459316253662
    6. ' ' → logprob: -11.347458839416504
    7. '((' → logprob: -11.847458839416504
    8. '   ' → logprob: -12.347458839416504
    9. ' ((' → logprob: -12.722458839416504
    10. '	mask' → logprob: -12.972458839416504

Token 252: ' cell' (ID: 4206)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.6806924939155579
    2. ' mask' → logprob: -1.055692434310913
    3. ' ' → logprob: -2.930692434310913
    4. 'mask' → logprob: -3.180692434310913
    5. ' _' → logprob: -4.180692672729492
    6. ' cell' → logprob: -4.430692672729492
    7. '_' → logprob: -4.805692672729492
    8. ' row' → logprob: -5.305692672729492
    9. ' (' → logprob: -6.305692672729492
    10. '[' → logprob: -6.430692672729492

Token 253: ' occupied' (ID: 46186)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09817122668027878
    2. ' ' → logprob: -3.0981712341308594
    3. '_mask' → logprob: -3.9731712341308594
    4. '_' → logprob: -4.098171234130859
    5. ' occupied' → logprob: -5.973171234130859
    6. 'occupied' → logprob: -5.973171234130859
    7. ' in' → logprob: -6.473171234130859
    8. ' _' → logprob: -6.848171234130859
    9. '_is' → logprob: -6.848171234130859
    10. 'is' → logprob: -7.098171234130859

Token 254: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6171273589134216
    2. ' or' → logprob: -0.9921273589134216
    3. ' ' → logprob: -3.4921274185180664
    4. 'or' → logprob: -4.242127418518066
    5. ',' → logprob: -4.492127418518066
    6. '(' → logprob: -4.867127418518066
    7. '   ' → logprob: -4.992127418518066
    8. ')' → logprob: -5.367127418518066
    9. ' (' → logprob: -5.867127418518066
    10. '==' → logprob: -6.117127418518066

Token 255: ' skip' (ID: 16677)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07638248056173325
    2. 'return' → logprob: -3.4513823986053467
    3. ' pos' → logprob: -3.5763823986053467
    4. 'pos' → logprob: -4.951382637023926
    5. ' if' → logprob: -5.076382637023926
    6. '       ' → logprob: -9.076382637023926
    7. 'if' → logprob: -9.201382637023926
    8. '    ' → logprob: -9.451382637023926
    9. ' ' → logprob: -9.701382637023926
    10. ' ' → logprob: -10.076382637023926

Token 256: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6216703057289124
    2. ' return' → logprob: -0.9966703057289124
    3. 'return' → logprob: -3.4966702461242676
    4. 'pos' → logprob: -3.8716702461242676
    5. ' pos' → logprob: -3.9966702461242676
    6. '           ' → logprob: -4.371670246124268
    7. ' if' → logprob: -4.871670246124268
    8. ' (' → logprob: -6.746670246124268
    9. '   ' → logprob: -7.246670246124268
    10. '        ' → logprob: -7.371670246124268

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1038254126906395
    2. '   ' → logprob: -2.853825330734253
    3. ' return' → logprob: -4.228825569152832
    4. '    ' → logprob: -4.853825569152832
    5. '           ' → logprob: -5.603825569152832
    6. '        ' → logprob: -5.603825569152832
    7. ' if' → logprob: -6.478825569152832
    8. '        
' → logprob: -6.478825569152832
    9. 'return' → logprob: -6.853825569152832
    10. ' 
' → logprob: -7.103825569152832

Token 258: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3874623775482178
    2. 'if' (adapté à ' if') → logprob: -1.1374623775482178
    3. '   ' → logprob: -8.012462615966797
    4. ' return' → logprob: -9.137462615966797
    5. 'return' → logprob: -9.887462615966797
    6. '       ' → logprob: -10.512462615966797
    7. ' (' → logprob: -10.762462615966797
    8. '    ' → logprob: -10.887462615966797
    9. 'mask' → logprob: -11.512462615966797
    10. ' ' → logprob: -12.012462615966797

Token 259: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.6703042984008789
    2. ' mask' → logprob: -0.9203042984008789
    3. 'mask' → logprob: -3.045304298400879
    4. ' (' → logprob: -3.170304298400879
    5. '(' → logprob: -8.170304298400879
    6. ' ' → logprob: -9.170304298400879
    7. '	mask' → logprob: -10.295304298400879
    8. '   ' → logprob: -11.420304298400879
    9. '_mask' → logprob: -11.670304298400879
    10. '(m' → logprob: -11.670304298400879

Token 260: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.015651986002922058
    2. ' mask' → logprob: -4.515652179718018
    3. '(mask' → logprob: -5.390652179718018
    4. '	mask' → logprob: -11.39065170288086
    5. '1' → logprob: -11.89065170288086
    6. ' (' → logprob: -12.01565170288086
    7. '   ' → logprob: -12.76565170288086
    8. ')' → logprob: -12.89065170288086
    9. '_mask' → logprob: -13.39065170288086
    10. ' ' → logprob: -13.39065170288086

Token 261: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.06656980514526367
    2. '>>' → logprob: -3.0665698051452637
    3. ' >>' → logprob: -4.566569805145264
    4. '&' → logprob: -4.941569805145264
    5. ' ' → logprob: -9.441570281982422
    6. ')' → logprob: -9.441570281982422
    7. ' ' → logprob: -10.691570281982422
    8. '   ' → logprob: -10.691570281982422
    9. '&gt' → logprob: -10.816570281982422
    10. '&nbsp' → logprob: -11.191570281982422

Token 262: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16023488342761993
    2. ' (' → logprob: -1.9102349281311035
    3. '1' → logprob: -11.785234451293945
    4. ')' → logprob: -12.910234451293945
    5. ' ' → logprob: -14.410234451293945
    6. '   ' → logprob: -16.535234451293945
    7. '[' → logprob: -17.285234451293945
    8. '{' → logprob: -17.910234451293945
    9. '```' → logprob: -17.910234451293945
    10. ' ' → logprob: -18.160234451293945

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026300468016415834
    2. '(' → logprob: -8.250263214111328
    3. ' ' → logprob: -13.375263214111328
    4. ' (' → logprob: -15.750263214111328
    5. ')' → logprob: -18.250263214111328
    6. '   ' → logprob: -18.500263214111328
    7. '```' → logprob: -20.500263214111328
    8. '{' → logprob: -21.250263214111328
    9. '[' → logprob: -21.500263214111328
    10. '
' → logprob: -21.750263214111328

Token 264: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.20146510004997253
    2. ' <<' → logprob: -1.701465129852295
    3. '1' → logprob: -10.576464653015137
    4. ' ' → logprob: -11.826464653015137
    5. '<' → logprob: -11.951464653015137
    6. ')' → logprob: -11.951464653015137
    7. '>>' → logprob: -13.076464653015137
    8. '   ' → logprob: -14.076464653015137
    9. '<<<' → logprob: -14.076464653015137
    10. '  ' → logprob: -14.826464653015137

Token 265: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0206720617134124e-05
    2. ' pos' → logprob: -11.50001049041748
    3. '(pos' → logprob: -18.375009536743164
    4. '	pos' → logprob: -18.500009536743164
    5. '(W' → logprob: -18.500009536743164
    6. 'position' → logprob: -19.000009536743164
    7. '(' → logprob: -19.125009536743164
    8. ')' → logprob: -19.625009536743164
    9. 'W' → logprob: -20.000009536743164
    10. '   ' → logprob: -20.375009536743164

Token 266: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.2113979209971149e-05
    2. ' ))' → logprob: -11.750012397766113
    3. ')):
' → logprob: -13.500012397766113
    4. ')' → logprob: -13.500012397766113
    5. ')))' → logprob: -14.750012397766113
    6. '0' → logprob: -15.125012397766113
    7. ')):' → logprob: -15.250012397766113
    8. ''))' → logprob: -15.625012397766113
    9. '   ' → logprob: -15.750012397766113
    10. ' ' → logprob: -16.375011444091797

Token 267: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.047955457121133804
    2. ' !=' → logprob: -3.6729555130004883
    3. ':' → logprob: -4.172955513000488
    4. ')!=' → logprob: -5.797955513000488
    5. '>' → logprob: -6.547955513000488
    6. '):' → logprob: -7.297955513000488
    7. ')' → logprob: -8.172955513000488
    8. ':
' → logprob: -8.422955513000488
    9. '{' → logprob: -9.172955513000488
    10. ']!=' → logprob: -9.672955513000488

Token 268: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -19.876502990722656
    4. '(' → logprob: -20.751502990722656
    5. '۰' → logprob: -21.501502990722656
    6. '```' → logprob: -21.501502990722656
    7. ' ' → logprob: -21.751502990722656
    8. ' (' → logprob: -22.251502990722656
    9. '>' → logprob: -22.626502990722656
    10. '０' → logprob: -23.251502990722656

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -11.875007629394531
    3. '(' → logprob: -14.000007629394531
    4. ' (' → logprob: -19.37500762939453
    5. '```' → logprob: -19.87500762939453
    6. '۰' → logprob: -20.00000762939453
    7. '(pos' → logprob: -20.00000762939453
    8. '   ' → logprob: -20.62500762939453
    9. 'pos' → logprob: -20.62500762939453
    10. '０' → logprob: -21.37500762939453

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16555988788604736
    2. ':
' → logprob: -1.9155598878860474
    3. '       ' → logprob: -5.415559768676758
    4. ':return' → logprob: -8.415559768676758
    5. ' or' → logprob: -8.665559768676758
    6. '           ' → logprob: -8.790559768676758
    7. '):
' → logprob: -9.165559768676758
    8. ',' → logprob: -9.415559768676758
    9. '   ' → logprob: -9.665559768676758
    10. '):' → logprob: -11.040559768676758

Token 271: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6580792665481567
    2. '       ' → logprob: -1.0330792665481567
    3. ' ' → logprob: -2.658079147338867
    4. 'return' → logprob: -3.783079147338867
    5. '        ' → logprob: -4.658079147338867
    6. '    ' → logprob: -4.783079147338867
    7. ' 
' → logprob: -5.533079147338867
    8. '   ' → logprob: -5.658079147338867
    9. ' ' → logprob: -5.658079147338867
    10. '           ' → logprob: -7.033079147338867

Token 272: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08447505533695221
    2. ' return' → logprob: -2.584475040435791
    3. '       ' → logprob: -5.709475040435791
    4. '           ' → logprob: -6.209475040435791
    5. '   ' → logprob: -8.95947551727295
    6. '	return' → logprob: -9.20947551727295
    7. '{return' → logprob: -12.33447551727295
    8. '	       ' → logprob: -12.70947551727295
    9. '
' → logprob: -13.45947551727295
    10. '	   ' → logprob: -13.83447551727295

Token 273: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.01815006136894226
    2. ' search' → logprob: -4.0181498527526855
    3. '	search' → logprob: -16.768150329589844
    4. '(search' → logprob: -18.143150329589844
    5. ' ' → logprob: -20.393150329589844
    6. ' ' → logprob: -20.518150329589844
    7. '0' → logprob: -20.643150329589844
    8. '_search' → logprob: -20.768150329589844
    9. 'space' → logprob: -21.518150329589844
    10. '```' → logprob: -22.018150329589844

Token 274: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -3.249780638725497e-05
    2. '_' → logprob: -10.500032424926758
    3. 'row' → logprob: -12.750032424926758
    4. '(row' → logprob: -14.500032424926758
    5. '_Row' → logprob: -15.000032424926758
    6. ' _' → logprob: -15.125032424926758
    7. ' row' → logprob: -15.625032424926758
    8. '_rows' → logprob: -15.625032424926758
    9. '_ROW' → logprob: -15.875032424926758
    10. '<Row' → logprob: -15.875032424926758

Token 275: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0005043004639446735
    2. '(' → logprob: -7.625504493713379
    3. 'row' → logprob: -11.250504493713379
    4. ' row' → logprob: -13.875504493713379
    5. ' (' → logprob: -14.250504493713379
    6. '[row' → logprob: -14.375504493713379
    7. ',row' → logprob: -14.750504493713379
    8. '(
' → logprob: -15.000504493713379
    9. '	row' → logprob: -16.250503540039062
    10. '```' → logprob: -16.250503540039062

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048596507986076176
    2. ' ,' → logprob: -8.000486373901367
    3. ',row' → logprob: -9.000486373901367
    4. ',pos' → logprob: -11.750486373901367
    5. '   ' → logprob: -12.000486373901367
    6. '(row' → logprob: -12.250486373901367
    7. '+' → logprob: -13.000486373901367
    8. ',
' → logprob: -13.125486373901367
    9. '       ' → logprob: -13.875486373901367
    10. ' ' → logprob: -14.000486373901367

Token 277: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.003258161712437868
    2. ' mask' → logprob: -6.253258228302002
    3. 'pos' → logprob: -6.628258228302002
    4. ' pos' → logprob: -12.253257751464844
    5. 'row' → logprob: -14.628257751464844
    6. ' ' → logprob: -15.253257751464844
    7. '(mask' → logprob: -15.753257751464844
    8. '	mask' → logprob: -15.753257751464844
    9. 'masked' → logprob: -16.003257751464844
    10. '   ' → logprob: -16.128257751464844

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003918464761227369
    2. ' ,' → logprob: -6.003918647766113
    3. ',pos' → logprob: -6.628918647766113
    4. '(pos' → logprob: -9.128918647766113
    5. 'pos' → logprob: -12.503918647766113
    6. '   ' → logprob: -13.003918647766113
    7. ' pos' → logprob: -13.253918647766113
    8. ' ' → logprob: -14.253918647766113
    9. '(' → logprob: -14.378918647766113
    10. ',next' → logprob: -14.503918647766113

Token 279: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0009114635176956654
    2. ' pos' → logprob: -7.000911235809326
    3. '(pos' → logprob: -19.375911712646484
    4. '```' → logprob: -20.625911712646484
    5. '_pos' → logprob: -21.000911712646484
    6. 'p' → logprob: -21.000911712646484
    7. '	pos' → logprob: -21.125911712646484
    8. 'position' → logprob: -21.750911712646484
    9. 'Pos' → logprob: -22.000911712646484
    10. '   ' → logprob: -22.375911712646484

Token 280: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022443771362305
    2. ' +' → logprob: -1.910224437713623
    3. ' ' → logprob: -16.41022491455078
    4. '1' → logprob: -16.66022491455078
    5. '＋' → logprob: -17.41022491455078
    6. '   ' → logprob: -17.66022491455078
    7. ' plus' → logprob: -17.91022491455078
    8. ')' → logprob: -17.91022491455078
    9. '[' → logprob: -18.28522491455078
    10. '+
' → logprob: -18.41022491455078

Token 281: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '```' → logprob: -15.375109672546387
    4. '   ' → logprob: -16.87510871887207
    5. '2' → logprob: -17.62510871887207
    6. ')' → logprob: -18.00010871887207
    7. ',' → logprob: -18.12510871887207
    8. '
' → logprob: -19.06260871887207
    9. 'def' → logprob: -19.18760871887207
    10. '  ' → logprob: -19.37510871887207

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -17.06252098083496
    4. '2' → logprob: -17.43752098083496
    5. ',' → logprob: -17.93752098083496
    6. '   ' → logprob: -18.12502098083496
    7. ')' → logprob: -18.18752098083496
    8. '
' → logprob: -19.06252098083496
    9. 'def' → logprob: -19.43752098083496
    10. '0' → logprob: -19.62502098083496

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.662937372922897e-05
    2. ',next' → logprob: -9.750096321105957
    3. ' ,' → logprob: -10.250096321105957
    4. 'next' → logprob: -13.750096321105957
    5. ')' → logprob: -14.000096321105957
    6. ' next' → logprob: -14.625096321105957
    7. '(next' → logprob: -15.500096321105957
    8. ',
' → logprob: -16.250097274780273
    9. '[next' → logprob: -16.375097274780273
    10. '),' → logprob: -17.250097274780273

Token 284: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.011048054322600365
    2. ' next' → logprob: -4.511047840118408
    3. '(next' → logprob: -16.13604736328125
    4. '	next' → logprob: -16.63604736328125
    5. '[next' → logprob: -16.76104736328125
    6. ' ' → logprob: -19.63604736328125
    7. '.next' → logprob: -19.88604736328125
    8. ',next' → logprob: -20.26104736328125
    9. '_next' → logprob: -20.51104736328125
    10. '   ' → logprob: -20.51104736328125

Token 285: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.9146995327901095e-05
    2. 'mask' → logprob: -11.000019073486328
    3. '_' → logprob: -14.000019073486328
    4. '_MASK' → logprob: -14.500019073486328
    5. '_m' → logprob: -15.500019073486328
    6. ')' → logprob: -15.750019073486328
    7. '_masks' → logprob: -16.000019073486328
    8. ' _' → logprob: -16.625019073486328
    9. ' mask' → logprob: -16.750019073486328
    10. '+' → logprob: -16.875019073486328

Token 286: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. ' )' → logprob: -11.37502670288086
    3. '   ' → logprob: -11.87502670288086
    4. ')
' → logprob: -12.50002670288086
    5. '       ' → logprob: -12.62502670288086
    6. ')return' → logprob: -15.37502670288086
    7. '+' → logprob: -16.37502670288086
    8. '<|end|>' → logprob: -16.50002670288086
    9. ',' → logprob: -17.00002670288086
    10. '),' → logprob: -17.12502670288086

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18645574152469635
    2. '   ' → logprob: -2.061455726623535
    3. ' else' → logprob: -3.561455726623535
    4. 'else' → logprob: -5.436455726623535
    5. ')' → logprob: -5.686455726623535
    6. ' ' → logprob: -6.436455726623535
    7. '    ' → logprob: -6.936455726623535
    8. '        
' → logprob: -7.436455726623535
    9. ' if' → logprob: -7.561455726623535
    10. '    
' → logprob: -8.061455726623535

Token 288: ' res' (ID: 694)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06482111662626266
    2. 'if' → logprob: -3.6898210048675537
    3. '       ' → logprob: -4.064821243286133
    4. 'res' (adapté à ' res') → logprob: -4.189821243286133
    5. 'result' → logprob: -6.064821243286133
    6. 'count' → logprob: -7.189821243286133
    7. '        
' → logprob: -7.439821243286133
    8. '   ' → logprob: -7.439821243286133
    9. 'else' → logprob: -8.064821243286133
    10. ' #' → logprob: -8.189821243286133

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009857137687504292
    2. '=' → logprob: -4.634857177734375
    3. ' +=' → logprob: -9.259857177734375
    4. ' ' → logprob: -13.134857177734375
    5. '  ' → logprob: -13.634857177734375
    6. ',' → logprob: -14.134857177734375
    7. '_' → logprob: -14.384857177734375
    8. ' ' → logprob: -14.884857177734375
    9. ')' → logprob: -15.384857177734375
    10. '+=' → logprob: -15.384857177734375

Token 290: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009116863831877708
    2. 'search' → logprob: -5.1341166496276855
    3. ' ' → logprob: -6.0091166496276855
    4. ' search' → logprob: -7.2591166496276855
    5. '   ' → logprob: -11.509117126464844
    6. '(' → logprob: -13.321617126464844
    7. '  ' → logprob: -13.384117126464844
    8. 'res' → logprob: -13.384117126464844
    9. '(search' → logprob: -13.509117126464844
    10. '     ' → logprob: -13.759117126464844

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023350762203335762
    2. 'search' → logprob: -3.773350715637207
    3. ' ' → logprob: -9.773350715637207
    4. ' search' → logprob: -10.648350715637207
    5. '(' → logprob: -11.398350715637207
    6. '(search' → logprob: -12.398350715637207
    7. '   ' → logprob: -13.273350715637207
    8. '```' → logprob: -14.023350715637207
    9. '  ' → logprob: -14.460850715637207
    10. 'dfs' → logprob: -14.710850715637207

Token 292: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03762252256274223
    2. ' if' → logprob: -3.7876224517822266
    3. '<|end|>' → logprob: -5.412622451782227
    4. '   ' → logprob: -5.787622451782227
    5. 'if' → logprob: -6.037622451782227
    6. '
' → logprob: -6.162622451782227
    7. '        
' → logprob: -7.287622451782227
    8. '        ' → logprob: -7.912622451782227
    9. '           ' → logprob: -8.537622451782227
    10. '<|end|>' → logprob: -8.662622451782227

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12133776396512985
    2. ' if' → logprob: -2.871337652206421
    3. 'if' → logprob: -2.996337652206421
    4. '#' → logprob: -5.246337890625
    5. '   ' → logprob: -7.121337890625
    6. ' #' → logprob: -7.371337890625
    7. '        
' → logprob: -7.996337890625
    8. '           ' → logprob: -9.246337890625
    9. ' res' → logprob: -9.371337890625
    10. '
' → logprob: -9.621337890625

Token 294: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.17902366816997528
    2. 'if' → logprob: -1.9290236234664917
    3. '       ' → logprob: -4.304023742675781
    4. 'res' → logprob: -5.804023742675781
    5. ' if' → logprob: -7.179023742675781
    6. '   ' → logprob: -7.429023742675781
    7. ' #' → logprob: -7.804023742675781
    8. '        
' → logprob: -8.929023742675781
    9. '
' → logprob: -9.804023742675781
    10. ' res' → logprob: -10.554023742675781

Token 295: ' Try' (ID: 14720)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5276241898536682
    2. '#' → logprob: -0.9026241898536682
    3. ' if' → logprob: -5.902624130249023
    4. '       ' → logprob: -7.027624130249023
    5. 'res' → logprob: -7.652624130249023
    6. ' #' → logprob: -8.402624130249023
    7. '   ' → logprob: -9.402624130249023
    8. 'If' → logprob: -11.152624130249023
    9. ' res' → logprob: -11.152624130249023
    10. '           ' → logprob: -11.402624130249023

Token 296: ' horizontal' (ID: 25511)
  Prédit: ' placing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placing' → logprob: -0.7838519811630249
    2. ' to' → logprob: -1.283851981163025
    3. ' horizontal' → logprob: -3.0338521003723145
    4. '(' → logprob: -3.0338521003723145
    5. ' (' → logprob: -3.4088521003723145
    6. 'to' → logprob: -3.5338521003723145
    7. 'placing' → logprob: -3.5338521003723145
    8. ' (
' → logprob: -4.1588521003723145
    9. '   ' → logprob: -4.1588521003723145
    10. 'horizontal' → logprob: -4.4088521003723145

Token 297: ' placement' (ID: 29002)
  Prédit: 'placement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -1.0111370086669922
    2. 'if' → logprob: -1.7611370086669922
    3. ')' → logprob: -1.8861370086669922
    4. ' placement' → logprob: -2.511137008666992
    5. 'placements' → logprob: -2.636137008666992
    6. ' placements' → logprob: -2.886137008666992
    7. '   ' → logprob: -4.011137008666992
    8. 'tile' → logprob: -4.011137008666992
    9. ' if' → logprob: -4.886137008666992
    10. '       ' → logprob: -5.011137008666992

Token 298: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9074411392211914
    2. ' if' → logprob: -1.1574411392211914
    3. 'if' → logprob: -1.5324411392211914
    4. '(' → logprob: -4.157441139221191
    5. '(res' → logprob: -4.157441139221191
    6. 'res' → logprob: -4.657441139221191
    7. '(
' → logprob: -4.782441139221191
    8. ' (' → logprob: -5.407441139221191
    9. ')' → logprob: -6.532441139221191
    10. '((' → logprob: -6.657441139221191

Token 299: 'current' (ID: 5804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6224485635757446
    2. 'pos' → logprob: -1.8724485635757446
    3. '1' → logprob: -1.9974485635757446
    4. ' if' → logprob: -2.497448444366455
    5. '(' → logprob: -3.122448444366455
    6. ')' → logprob: -4.122448444366455
    7. ' (' → logprob: -4.247448444366455
    8. '((' → logprob: -5.247448444366455
    9. 'res' → logprob: -6.122448444366455
    10. ' res' → logprob: -6.122448444366455

Token 300: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -1.2420848608016968
    2. ',' → logprob: -1.3670848608016968
    3. ' cell' → logprob: -1.6170848608016968
    4. ' ,' → logprob: -2.1170849800109863
    5. 'pos' → logprob: -3.2420849800109863
    6. '_cell' → logprob: -3.3670849800109863
    7. '_' → logprob: -3.9920849800109863
    8. ')' → logprob: -4.117084980010986
    9. ' ' → logprob: -5.617084980010986
    10. '<<' → logprob: -5.867084980010986

Token 301: ' and' (ID: 326)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.39881107211112976
    2. '+' → logprob: -1.3988111019134521
    3. ' |' → logprob: -3.273811101913452
    4. '|' → logprob: -3.648811101913452
    5. ',' → logprob: -5.023810863494873
    6. ' and' → logprob: -5.648810863494873
    7. '       ' → logprob: -6.273810863494873
    8. 'and' → logprob: -6.398810863494873
    9. ' &' → logprob: -6.523810863494873
    10. ')' → logprob: -6.773810863494873

Token 302: ' next' (ID: 2613)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06317076832056046
    2. ' pos' → logprob: -3.5631706714630127
    3. '(pos' → logprob: -4.063170909881592
    4. ' (' → logprob: -4.188170909881592
    5. ' next' → logprob: -8.563170433044434
    6. 'next' → logprob: -9.063170433044434
    7. '```' → logprob: -9.688170433044434
    8. ' ' → logprob: -10.313170433044434
    9. '(' → logprob: -10.563170433044434
    10. '1' → logprob: -11.188170433044434

Token 303: ' cell' (ID: 4206)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.013038216158747673
    2. ' pos' → logprob: -5.263038158416748
    3. ')' → logprob: -5.888038158416748
    4. '1' → logprob: -6.138038158416748
    5. '(pos' → logprob: -7.263038158416748
    6. ' (' → logprob: -7.513038158416748
    7. '(' → logprob: -7.638038158416748
    8. ' one' → logprob: -8.388038635253906
    9. '_pos' → logprob: -8.638038635253906
    10. ' ' → logprob: -8.763038635253906

Token 304: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01398660521954298
    2. ' if' → logprob: -5.513986587524414
    3. '+' → logprob: -6.263986587524414
    4. ' +' → logprob: -6.388986587524414
    5. '|' → logprob: -6.763986587524414
    6. ')<<' → logprob: -7.138986587524414
    7. 'if' → logprob: -7.263986587524414
    8. '```' → logprob: -7.388986587524414
    9. ' )' → logprob: -7.888986587524414
    10. '<<' → logprob: -8.138986587524414

Token 305: ' the' (ID: 290)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0032414051238447428
    2. ' pos' → logprob: -6.753241539001465
    3. 'mask' → logprob: -6.878241539001465
    4. 'the' → logprob: -7.378241539001465
    5. ')' → logprob: -8.878241539001465
    6. ' the' → logprob: -9.003241539001465
    7. ' mask' → logprob: -10.253241539001465
    8. '1' → logprob: -10.628241539001465
    9. '(pos' → logprob: -10.628241539001465
    10. 'position' → logprob: -10.878241539001465

Token 306: ' same' (ID: 2684)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.19325171411037445
    2. '1' → logprob: -1.8182517290115356
    3. '```' → logprob: -5.818251609802246
    4. ' pos' → logprob: -6.193251609802246
    5. ' next' → logprob: -6.318251609802246
    6. 'mask' → logprob: -6.443251609802246
    7. 'next' → logprob: -6.818251609802246
    8. ')' → logprob: -7.318251609802246
    9. ' ' → logprob: -7.568251609802246
    10. 'row' → logprob: -7.568251609802246

Token 307: ' row' (ID: 5225)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.13863824307918549
    2. '1' → logprob: -2.3886382579803467
    3. 'line' → logprob: -4.263638019561768
    4. 'position' → logprob: -4.388638019561768
    5. '+' → logprob: -5.888638019561768
    6. 'row' → logprob: -6.013638019561768
    7. 'mask' → logprob: -6.138638019561768
    8. ' line' → logprob: -6.888638019561768
    9. '```' → logprob: -7.263638019561768
    10. ' ' → logprob: -7.263638019561768

Token 308: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14004355669021606
    2. ' if' → logprob: -2.1400434970855713
    3. ')
' → logprob: -5.51504373550415
    4. '       ' → logprob: -5.64004373550415
    5. ' )' → logprob: -6.14004373550415
    6. 'if' → logprob: -6.26504373550415
    7. ' +' → logprob: -7.89004373550415
    8. '+' → logprob: -8.515043258666992
    9. ',' → logprob: -8.640043258666992
    10. '           ' → logprob: -9.140043258666992

Token 309: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04072351008653641
    2. '       ' → logprob: -3.5407235622406006
    3. 'if' → logprob: -4.9157233238220215
    4. '   ' → logprob: -7.2907233238220215
    5. ' and' → logprob: -7.2907233238220215
    6. '<|end|>' → logprob: -7.6657233238220215
    7. ' ' → logprob: -8.16572380065918
    8. ' +' → logprob: -8.29072380065918
    9. ')' → logprob: -8.41572380065918
    10. '+' → logprob: -8.79072380065918

Token 310: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6938316822052002
    2. ' if' → logprob: -0.6938316822052002
    3. '       ' → logprob: -7.318831443786621
    4. '           ' → logprob: -12.068831443786621
    5. '   ' → logprob: -12.193831443786621
    6. '```' → logprob: -12.818831443786621
    7. '        ' → logprob: -13.318831443786621
    8. '	if' → logprob: -13.693831443786621
    9. ' ' → logprob: -13.943831443786621
    10. ' 
' → logprob: -14.318831443786621

Token 311: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.10077709704637527
    2. 'pos' → logprob: -2.3507771492004395
    3. '(pos' → logprob: -7.9757771492004395
    4. ' (' → logprob: -8.600776672363281
    5. ' ' → logprob: -11.225776672363281
    6. '(' → logprob: -11.225776672363281
    7. '	pos' → logprob: -11.725776672363281
    8. ' ' → logprob: -12.725776672363281
    9. '   ' → logprob: -13.350776672363281
    10. '_pos' → logprob: -13.850776672363281

Token 312: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13333334028720856
    2. '+' → logprob: -2.133333444595337
    3. ' <' → logprob: -5.133333206176758
    4. ' ' → logprob: -8.133333206176758
    5. '<' → logprob: -8.633333206176758
    6. '  ' → logprob: -11.758333206176758
    7. ' <=' → logprob: -12.758333206176758
    8. '   ' → logprob: -13.258333206176758
    9. ' ' → logprob: -14.133333206176758
    10. '<|end|>' → logprob: -14.633333206176758

Token 313: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018125296628568321
    2. ' ' → logprob: -8.625181198120117
    3. '2' → logprob: -13.500181198120117
    4. '```' → logprob: -16.125181198120117
    5. '<|end|>' → logprob: -16.375181198120117
    6. '   ' → logprob: -19.250181198120117
    7. '{
' → logprob: -19.625181198120117
    8. '{' → logprob: -19.687681198120117
    9. '[' → logprob: -19.687681198120117
    10. '=' → logprob: -19.937681198120117

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -15.875027656555176
    4. '```' → logprob: -17.250028610229492
    5. '2' → logprob: -17.500028610229492
    6. '   ' → logprob: -18.750028610229492
    7. '<' → logprob: -19.125028610229492
    8. '{' → logprob: -19.312528610229492
    9. '+' → logprob: -19.687528610229492
    10. 'def' → logprob: -20.062528610229492

Token 315: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0895165503025055
    2. '<' → logprob: -2.4645166397094727
    3. ' <=' → logprob: -7.589516639709473
    4. '<W' → logprob: -10.839516639709473
    5. '<=' → logprob: -11.089516639709473
    6. ' ' → logprob: -11.589516639709473
    7. ')' → logprob: -11.839516639709473
    8. '<|end|>' → logprob: -12.089516639709473
    9. '[' → logprob: -12.339516639709473
    10. '<len' → logprob: -13.214516639709473

Token 316: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.018150877207517624
    2. ' W' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.64315128326416
    4. '	W' → logprob: -15.76815128326416
    5. '=W' → logprob: -16.393150329589844
    6. '<W' → logprob: -16.393150329589844
    7. '=' → logprob: -16.643150329589844
    8. '   ' → logprob: -16.768150329589844
    9. 'w' → logprob: -16.893150329589844
    10. '```' → logprob: -17.143150329589844

Token 317: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002185472520068288
    2. 'and' → logprob: -6.127185344696045
    3. ' ' → logprob: -16.002185821533203
    4. '        ' → logprob: -16.127185821533203
    5. '    ' → logprob: -16.377185821533203
    6. '	and' → logprob: -17.377185821533203
    7. '       ' → logprob: -18.127185821533203
    8. ' и' → logprob: -18.377185821533203
    9. '   ' → logprob: -18.377185821533203
    10. ' &&' → logprob: -18.752185821533203

Token 318: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.0031806828919798136
    2. '((' → logprob: -6.253180503845215
    3. ' (' → logprob: -6.753180503845215
    4. ' not' → logprob: -10.253180503845215
    5. 'not' → logprob: -11.253180503845215
    6. '(m' → logprob: -11.503180503845215
    7. '(not' → logprob: -12.128180503845215
    8. '   ' → logprob: -12.378180503845215
    9. ' ((' → logprob: -12.878180503845215
    10. '(' → logprob: -13.003180503845215

Token 319: 'mask' (ID: 22527)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.0005369475693441927
    2. 'mask' → logprob: -7.625536918640137
    3. ' (' → logprob: -10.375536918640137
    4. '(m' → logprob: -11.875536918640137
    5. '((' → logprob: -12.625536918640137
    6. '(' → logprob: -13.750536918640137
    7. '   ' → logprob: -14.000536918640137
    8. '	mask' → logprob: -14.125536918640137
    9. ' mask' → logprob: -14.375536918640137
    10. 'not' → logprob: -14.750536918640137

Token 320: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.007607458624988794
    2. '&' → logprob: -4.882607460021973
    3. ' ' → logprob: -14.882607460021973
    4. '&amp' → logprob: -14.882607460021973
    5. ' ' → logprob: -15.632607460021973
    6. ' &
' → logprob: -16.007606506347656
    7. '&A' → logprob: -16.507606506347656
    8. '＆' → logprob: -16.507606506347656
    9. ')' → logprob: -16.882606506347656
    10. '&type' → logprob: -17.132606506347656

Token 321: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05503472685813904
    2. '(' → logprob: -2.930034637451172
    3. ' ((' → logprob: -9.055034637451172
    4. '((' → logprob: -10.680034637451172
    5. ' ' → logprob: -12.055034637451172
    6. '1' → logprob: -12.680034637451172
    7. '0' → logprob: -12.930034637451172
    8. ')' → logprob: -14.555034637451172
    9. ' ' → logprob: -15.430034637451172
    10. '```' → logprob: -15.680034637451172

Token 322: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05542830005288124
    2. ' (' → logprob: -2.9304282665252686
    3. '1' → logprob: -7.555428504943848
    4. '((' → logprob: -11.430428504943848
    5. ' ' → logprob: -11.930428504943848
    6. '```' → logprob: -13.305428504943848
    7. ')' → logprob: -13.430428504943848
    8. '   ' → logprob: -14.680428504943848
    9. ',' → logprob: -15.180428504943848
    10. ' ((' → logprob: -15.180428504943848

Token 323: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.05031861737370491
    2. ')' → logprob: -3.800318717956543
    3. ' <<' → logprob: -3.800318717956543
    4. '&' → logprob: -6.675318717956543
    5. '>>' → logprob: -6.675318717956543
    6. '|' → logprob: -7.425318717956543
    7. '==' → logprob: -8.300318717956543
    8. ' &' → logprob: -8.300318717956543
    9. '<<(' → logprob: -8.550318717956543
    10. ' ' → logprob: -8.800318717956543

Token 324: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0003266447747591883
    2. '(' → logprob: -8.875327110290527
    3. ' (' → logprob: -9.125327110290527
    4. 'pos' → logprob: -9.625327110290527
    5. '(position' → logprob: -12.375327110290527
    6. '(next' → logprob: -13.000327110290527
    7. '[pos' → logprob: -13.125327110290527
    8. '(Pos' → logprob: -14.250327110290527
    9. ',pos' → logprob: -14.250327110290527
    10. '(p' → logprob: -14.625327110290527

Token 325: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1002650186419487
    2. '(pos' → logprob: -2.3502650260925293
    3. '[pos' → logprob: -10.225264549255371
    4. ' pos' → logprob: -10.850264549255371
    5. ' (' → logprob: -14.475264549255371
    6. ',pos' → logprob: -14.600264549255371
    7. '(' → logprob: -14.725264549255371
    8. '   ' → logprob: -14.975264549255371
    9. '	pos' → logprob: -15.100264549255371
    10. '.pos' → logprob: -16.100265502929688

Token 326: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008671891875565052
    2. ' +' → logprob: -4.758671760559082
    3. '))' → logprob: -10.508671760559082
    4. ')' → logprob: -11.508671760559082
    5. '1' → logprob: -12.133671760559082
    6. ')))' → logprob: -12.633671760559082
    7. '|' → logprob: -12.883671760559082
    8. '   ' → logprob: -13.133671760559082
    9. '```' → logprob: -13.258671760559082
    10. '+
' → logprob: -14.008671760559082

Token 327: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. 'pos' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.25000286102295
    4. '```' → logprob: -14.37500286102295
    5. '   ' → logprob: -15.37500286102295
    6. '2' → logprob: -16.375003814697266
    7. ')' → logprob: -17.125003814697266
    8. '0' → logprob: -17.125003814697266
    9. '
' → logprob: -17.437503814697266
    10. '``' → logprob: -17.500003814697266

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.750004768371582
    4. '```' → logprob: -15.750004768371582
    5. '2' → logprob: -16.5625057220459
    6. '0' → logprob: -17.3125057220459
    7. ')' → logprob: -17.7500057220459
    8. '``' → logprob: -17.9375057220459
    9. '
' → logprob: -18.3125057220459
    10. 'pos' → logprob: -18.7500057220459

Token 329: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007927165133878589
    2. ')))' → logprob: -7.250792503356934
    3. ' ))' → logprob: -9.875792503356934
    4. ')' → logprob: -10.500792503356934
    5. '   ' → logprob: -13.875792503356934
    6. ' ' → logprob: -14.625792503356934
    7. ''))' → logprob: -14.875792503356934
    8. '"))' → logprob: -14.875792503356934
    9. '0' → logprob: -15.250792503356934
    10. ')==' → logprob: -15.250792503356934

Token 330: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008978646248579025
    2. ')==' → logprob: -4.883978843688965
    3. '==' → logprob: -6.633978843688965
    4. ' ==' → logprob: -9.883978843688965
    5. ' )' → logprob: -12.758978843688965
    6. ']==' → logprob: -14.633978843688965
    7. '=' → logprob: -14.633978843688965
    8. ')=' → logprob: -14.758978843688965
    9. '）' → logprob: -15.133978843688965
    10. '```' → logprob: -15.633978843688965

Token 331: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '۰' → logprob: -19.125335693359375
    4. '```' → logprob: -19.625335693359375
    5. '   ' → logprob: -20.000335693359375
    6. '=' → logprob: -20.125335693359375
    7. ' ' → logprob: -20.250335693359375
    8. ' ' → logprob: -20.500335693359375
    9. '000' → logprob: -20.500335693359375
    10. '00' → logprob: -20.812835693359375

Token 332: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.000001907348633
    4. '۰' → logprob: -19.125001907348633
    5. '000' → logprob: -19.375001907348633
    6. '00' → logprob: -19.437501907348633
    7. '<|end|>' → logprob: -19.687501907348633
    8. ')' → logprob: -19.750001907348633
    9. '   ' → logprob: -19.750001907348633
    10. '=' → logprob: -19.812501907348633

Token 333: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28637340664863586
    2. ' and' → logprob: -1.6613733768463135
    3. ':
' → logprob: -3.1613733768463135
    4. '       ' → logprob: -4.411373615264893
    5. ',' → logprob: -6.786373615264893
    6. 'and' → logprob: -6.911373615264893
    7. '           ' → logprob: -7.411373615264893
    8. '):
' → logprob: -7.536373615264893
    9. ')' → logprob: -7.786373615264893
    10. '):' → logprob: -8.036373138427734

Token 334: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32133182883262634
    2. '           ' → logprob: -1.3213318586349487
    3. '<|end|>' → logprob: -5.946331977844238
    4. ',' → logprob: -7.196331977844238
    5. '<|end|>' → logprob: -7.321331977844238
    6. '   ' → logprob: -7.321331977844238
    7. ' and' → logprob: -7.571331977844238
    8. 'res' → logprob: -7.571331977844238
    9. '               ' → logprob: -7.696331977844238
    10. '            
' → logprob: -7.946331977844238

Token 335: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.07900821417570114
    2. ' res' → logprob: -2.579008102416992
    3. '           ' → logprob: -9.454008102416992
    4. '               ' → logprob: -10.954008102416992
    5. '   ' → logprob: -12.454008102416992
    6. '
' → logprob: -12.579008102416992
    7. '       ' → logprob: -12.579008102416992
    8. '	res' → logprob: -12.579008102416992
    9. ' ' → logprob: -13.704008102416992
    10. ' 
' → logprob: -13.704008102416992

Token 336: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02326807752251625
    2. ' +=' → logprob: -3.773267984390259
    3. ']+=' → logprob: -11.89826774597168
    4. '   ' → logprob: -12.27326774597168
    5. '=' → logprob: -12.52326774597168
    6. '+' → logprob: -12.64826774597168
    7. '       ' → logprob: -13.52326774597168
    8. '           ' → logprob: -13.77326774597168
    9. '|' → logprob: -14.89826774597168
    10. '```' → logprob: -15.02326774597168

Token 337: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.014163863845169544
    2. ' search' → logprob: -4.264163970947266
    3. '(search' → logprob: -15.514163970947266
    4. '	search' → logprob: -16.514163970947266
    5. '   ' → logprob: -17.139163970947266
    6. '           ' → logprob: -17.264163970947266
    7. '```' → logprob: -17.264163970947266
    8. ' ' → logprob: -17.764163970947266
    9. '               ' → logprob: -18.639163970947266
    10. '  ' → logprob: -19.139163970947266

Token 338: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.5570885807392187e-05
    2. '_' → logprob: -12.000015258789062
    3. 'row' → logprob: -12.375015258789062
    4. '(row' → logprob: -12.625015258789062
    5. ' _' → logprob: -15.000015258789062
    6. '```' → logprob: -15.125015258789062
    7. '_Row' → logprob: -15.625015258789062
    8. '_code' → logprob: -15.625015258789062
    9. '_ROW' → logprob: -15.875015258789062
    10. '_rows' → logprob: -16.125015258789062

Token 339: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -3.881560041918419e-05
    2. '(' → logprob: -10.625039100646973
    3. 'row' → logprob: -11.250039100646973
    4. '(
' → logprob: -14.750039100646973
    5. ',row' → logprob: -14.875039100646973
    6. '[row' → logprob: -15.125039100646973
    7. '(line' → logprob: -16.000038146972656
    8. ' row' → logprob: -16.000038146972656
    9. '```' → logprob: -16.250038146972656
    10. ' (' → logprob: -16.500038146972656

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003534582501742989
    2. ' ,' → logprob: -9.000353813171387
    3. '(mask' → logprob: -9.000353813171387
    4. '(' → logprob: -10.000353813171387
    5. '(row' → logprob: -10.250353813171387
    6. ',row' → logprob: -11.000353813171387
    7. ')' → logprob: -12.875353813171387
    8. '```' → logprob: -13.000353813171387
    9. ',m' → logprob: -13.875353813171387
    10. ' (' → logprob: -14.000353813171387

Token 341: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.20142346620559692
    2. ' mask' → logprob: -1.7014234066009521
    3. '(mask' → logprob: -11.826423645019531
    4. '	mask' → logprob: -13.076423645019531
    5. '_mask' → logprob: -14.826423645019531
    6. ' ' → logprob: -15.951423645019531
    7. '   ' → logprob: -16.57642364501953
    8. '.mask' → logprob: -16.82642364501953
    9. 'MASK' → logprob: -17.20142364501953
    10. 'm' → logprob: -17.32642364501953

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.864272967912257e-05
    2. ' ,' → logprob: -9.375088691711426
    3. ',pos' → logprob: -13.000088691711426
    4. '   ' → logprob: -14.375088691711426
    5. '       ' → logprob: -15.000088691711426
    6. ' ' → logprob: -15.875088691711426
    7. '(' → logprob: -16.12508773803711
    8. '           ' → logprob: -16.50008773803711
    9. '```' → logprob: -17.12508773803711
    10. '',' → logprob: -17.25008773803711

Token 343: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0380416102707386
    2. ' pos' → logprob: -3.288041591644287
    3. '(pos' → logprob: -16.788042068481445
    4. '	pos' → logprob: -17.538042068481445
    5. '   ' → logprob: -18.038042068481445
    6. '    ' → logprob: -18.788042068481445
    7. ' ' → logprob: -18.913042068481445
    8. 'Pos' → logprob: -19.413042068481445
    9. '           ' → logprob: -20.038042068481445
    10. '[pos' → logprob: -20.288042068481445

Token 344: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889342308044434
    2. '+' → logprob: -2.5788934230804443
    3. ' ' → logprob: -13.328893661499023
    4. '   ' → logprob: -14.078893661499023
    5. '	' → logprob: -15.203893661499023
    6. '＋' → logprob: -15.578893661499023
    7. '    ' → logprob: -15.703893661499023
    8. '       ' → logprob: -16.203893661499023
    9. '  ' → logprob: -16.203893661499023
    10. '        ' → logprob: -16.203893661499023

Token 345: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22612333297729492
    2. '1' → logprob: -1.601123332977295
    3. ' ' → logprob: -7.351123332977295
    4. '3' → logprob: -9.976123809814453
    5. '```' → logprob: -11.788623809814453
    6. '(' → logprob: -12.476123809814453
    7. '0' → logprob: -13.351123809814453
    8. '   ' → logprob: -13.413623809814453
    9. '+' → logprob: -14.038623809814453
    10. '4' → logprob: -14.663623809814453

Token 346: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.034171633422374725
    2. '1' → logprob: -3.4091715812683105
    3. 'pos' → logprob: -8.284172058105469
    4. ' ' → logprob: -8.909172058105469
    5. '(' → logprob: -9.784172058105469
    6. '+' → logprob: -10.284172058105469
    7. '3' → logprob: -10.784172058105469
    8. '(pos' → logprob: -11.284172058105469
    9. '   ' → logprob: -12.909172058105469
    10. 'res' → logprob: -13.221672058105469

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006637069745920599
    2. ',next' → logprob: -7.750663757324219
    3. ' ,' → logprob: -9.375663757324219
    4. ' next' → logprob: -9.625663757324219
    5. '(next' → logprob: -10.000663757324219
    6. 'next' → logprob: -10.250663757324219
    7. '[next' → logprob: -14.625663757324219
    8. ',
' → logprob: -14.750663757324219
    9. '```' → logprob: -15.750663757324219
    10. ')' → logprob: -15.875663757324219

Token 348: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0015031944494694471
    2. ' next' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.001502990722656
    4. '(next' → logprob: -15.626502990722656
    5. '	next' → logprob: -15.626502990722656
    6. '[next' → logprob: -16.251502990722656
    7. '0' → logprob: -17.376502990722656
    8. '```' → logprob: -17.376502990722656
    9. '  ' → logprob: -17.751502990722656
    10. ' ' → logprob: -17.876502990722656

Token 349: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -9.088346359931165e-07
    2. 'mask' → logprob: -14.625000953674316
    3. '_' → logprob: -15.250000953674316
    4. '_MASK' → logprob: -16.125
    5. '_m' → logprob: -17.75
    6. '_next' → logprob: -18.75
    7. ',' → logprob: -18.75
    8. ' _' → logprob: -19.25
    9. 'Mask' → logprob: -19.5
    10. '_bit' → logprob: -19.5

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015109812375158072
    2. ' )' → logprob: -9.125150680541992
    3. '       ' → logprob: -10.375150680541992
    4. ',' → logprob: -12.500150680541992
    5. '   ' → logprob: -13.875150680541992
    6. '        ' → logprob: -14.125150680541992
    7. '*' → logprob: -14.125150680541992
    8. '+' → logprob: -14.125150680541992
    9. ')
' → logprob: -14.250150680541992
    10. ' ' → logprob: -14.375150680541992

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055517617613077164
    2. '<|end|>' → logprob: -3.8055176734924316
    3. ')' → logprob: -4.055517673492432
    4. '        
' → logprob: -5.430517673492432
    5. '   ' → logprob: -5.930517673492432
    6. '```' → logprob: -6.180517673492432
    7. '+' → logprob: -6.805517673492432
    8. '    
' → logprob: -7.180517673492432
    9. '           ' → logprob: -7.305517673492432
    10. '*' → logprob: -7.555517673492432

Token 352: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1344277709722519
    2. '+' → logprob: -3.009427785873413
    3. '<|end|>' → logprob: -3.884427785873413
    4. ' ' → logprob: -4.384427547454834
    5. '        ' → logprob: -4.384427547454834
    6. '        
' → logprob: -5.134427547454834
    7. '   ' → logprob: -5.259427547454834
    8. '    ' → logprob: -5.509427547454834
    9. '*' → logprob: -6.134427547454834
    10. ' 
' → logprob: -6.384427547454834

Token 353: ' Try' (ID: 14720)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6305317282676697
    2. 'res' → logprob: -1.6305317878723145
    3. '       ' → logprob: -1.8805317878723145
    4. 'if' → logprob: -2.2555317878723145
    5. ' #' → logprob: -5.1305317878723145
    6. ' if' → logprob: -5.5055317878723145
    7. ' res' → logprob: -6.2555317878723145
    8. '           ' → logprob: -7.0055317878723145
    9. '+' → logprob: -7.3805317878723145
    10. '   ' → logprob: -7.5055317878723145

Token 354: ' vertical' (ID: 17679)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -1.6474902629852295
    2. ' vertical' → logprob: -1.6474902629852295
    3. '(next' → logprob: -1.7724902629852295
    4. 'vertical' → logprob: -1.8974902629852295
    5. ' next' → logprob: -2.6474902629852295
    6. '(search' → logprob: -3.1474902629852295
    7. 'search' → logprob: -3.2724902629852295
    8. 'next' → logprob: -3.3974902629852295
    9. ' (' → logprob: -3.5224902629852295
    10. ' placing' → logprob: -3.6474902629852295

Token 355: ' placement' (ID: 29002)
  Prédit: 'placement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.08649075776338577
    2. ' placement' → logprob: -2.5864908695220947
    3. 'if' → logprob: -4.961490631103516
    4. 'placements' → logprob: -8.586490631103516
    5. ' if' → logprob: -8.961490631103516
    6. '(' → logprob: -9.336490631103516
    7. ' placements' → logprob: -9.586490631103516
    8. 'placing' → logprob: -10.586490631103516
    9. 'res' → logprob: -10.836490631103516
    10. '(res' → logprob: -10.961490631103516

Token 356: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1485985666513443
    2. ' if' → logprob: -2.0235986709594727
    3. 'if' → logprob: -5.648598670959473
    4. 'res' → logprob: -7.398598670959473
    5. '           ' → logprob: -7.898598670959473
    6. '(res' → logprob: -8.148598670959473
    7. ' res' → logprob: -8.398598670959473
    8. '   ' → logprob: -8.398598670959473
    9. '=' → logprob: -8.898598670959473
    10. '```' → logprob: -9.398598670959473

Token 357: 'current' (ID: 5804)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.10197616368532181
    2. 'if' → logprob: -2.976976156234741
    3. '(res' → logprob: -4.10197639465332
    4. 'next' → logprob: -4.47697639465332
    5. '(next' → logprob: -4.97697639465332
    6. 'pos' → logprob: -5.72697639465332
    7. 'search' → logprob: -5.85197639465332
    8. '((' → logprob: -6.60197639465332
    9. '(pos' → logprob: -6.97697639465332
    10. ' res' → logprob: -7.60197639465332

Token 358: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.1641562134027481
    2. ' cell' → logprob: -2.414156198501587
    3. ',' → logprob: -3.289156198501587
    4. 'row' → logprob: -5.414156436920166
    5. 'and' → logprob: -5.664156436920166
    6. ' and' → logprob: -5.664156436920166
    7. ')' → logprob: -6.164156436920166
    8. ' ,' → logprob: -6.414156436920166
    9. '_cell' → logprob: -6.414156436920166
    10. '+' → logprob: -6.539156436920166

Token 359: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.200666069984436
    2. '|' → logprob: -1.200666069984436
    3. 'and' → logprob: -1.200666069984436
    4. ' and' → logprob: -2.4506659507751465
    5. ')' → logprob: -5.0756659507751465
    6. ' |' → logprob: -5.5756659507751465
    7. ' ,' → logprob: -8.325666427612305
    8. '&' → logprob: -9.200666427612305
    9. ' &' → logprob: -9.950666427612305
    10. '=' → logprob: -9.950666427612305

Token 360: ' cell' (ID: 4206)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.5151110291481018
    2. 'pos' → logprob: -1.765110969543457
    3. '(pos' → logprob: -1.890110969543457
    4. 'next' → logprob: -3.890110969543457
    5. '(next' → logprob: -4.015110969543457
    6. 'row' → logprob: -4.015110969543457
    7. ' (' → logprob: -4.265110969543457
    8. '((' → logprob: -5.765110969543457
    9. ' next' → logprob: -6.015110969543457
    10. '(' → logprob: -6.890110969543457

Token 361: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42681968212127686
    2. 'below' → logprob: -1.6768196821212769
    3. ' in' → logprob: -2.6768198013305664
    4. ' below' → logprob: -2.8018198013305664
    5. '+' → logprob: -4.301819801330566
    6. '(row' → logprob: -4.926819801330566
    7. ' at' → logprob: -5.676819801330566
    8. 'at' → logprob: -5.926819801330566
    9. ' +' → logprob: -6.426819801330566
    10. 'Below' → logprob: -7.926819801330566

Token 362: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.052195578813552856
    2. ' next' → logprob: -3.3021955490112305
    3. 'the' → logprob: -4.3021955490112305
    4. ' the' → logprob: -8.17719554901123
    5. '(next' → logprob: -8.67719554901123
    6. 'row' → logprob: -9.80219554901123
    7. '[next' → logprob: -12.30219554901123
    8. '```' → logprob: -13.55219554901123
    9. '	next' → logprob: -14.17719554901123
    10. '(row' → logprob: -14.42719554901123

Token 363: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.06792457401752472
    2. '(row' → logprob: -3.1929244995117188
    3. '_mask' → logprob: -4.192924499511719
    4. ' row' → logprob: -5.192924499511719
    5. 'mask' → logprob: -6.192924499511719
    6. '_row' → logprob: -7.067924499511719
    7. 'pos' → logprob: -7.817924499511719
    8. 'line' → logprob: -7.817924499511719
    9. '(' → logprob: -9.442924499511719
    10. ' (' → logprob: -9.942924499511719

Token 364: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.423491895198822
    2. ',' → logprob: -1.6734919548034668
    3. '       ' → logprob: -2.298491954803467
    4. ')
' → logprob: -3.173491954803467
    5. '):
' → logprob: -5.673491954803467
    6. '|' → logprob: -6.048491954803467
    7. '           ' → logprob: -6.173491954803467
    8. ' if' → logprob: -6.298491954803467
    9. ' |' → logprob: -7.048491954803467
    10. '):' → logprob: -7.048491954803467

Token 365: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5483821034431458
    2. '       ' → logprob: -0.9233821034431458
    3. ' res' → logprob: -4.29838228225708
    4. 'if' → logprob: -5.17338228225708
    5. 'res' → logprob: -6.29838228225708
    6. '   ' → logprob: -6.42338228225708
    7. '```' → logprob: -6.79838228225708
    8. '           ' → logprob: -7.17338228225708
    9. '        ' → logprob: -9.798381805419922
    10. '
' → logprob: -9.798381805419922

Token 366: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.479855477809906
    2. 'if' (adapté à ' if') → logprob: -0.979855477809906
    3. '       ' → logprob: -5.354855537414551
    4. 'res' → logprob: -7.354855537414551
    5. ' res' → logprob: -8.10485553741455
    6. '   ' → logprob: -9.85485553741455
    7. '           ' → logprob: -10.60485553741455
    8. '```' → logprob: -12.10485553741455
    9. '
' → logprob: -12.85485553741455
    10. 'If' → logprob: -13.10485553741455

Token 367: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0822383239865303
    2. ' row' → logprob: -3.2072384357452393
    3. '(row' → logprob: -3.3322384357452393
    4. ' (' → logprob: -6.70723819732666
    5. '(H' → logprob: -7.58223819732666
    6. 'True' → logprob: -8.58223819732666
    7. '((' → logprob: -8.83223819732666
    8. 'H' → logprob: -8.95723819732666
    9. 'not' → logprob: -8.95723819732666
    10. '(True' → logprob: -8.95723819732666

Token 368: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47668230533599854
    2. '+' → logprob: -0.9766823053359985
    3. ' <' → logprob: -6.476682186126709
    4. '<' → logprob: -6.851682186126709
    5. '   ' → logprob: -13.226682662963867
    6. '<|end|>' → logprob: -14.101682662963867
    7. ' ' → logprob: -14.476682662963867
    8. '＋' → logprob: -14.976682662963867
    9. ' !=' → logprob: -15.101682662963867
    10. ' ' → logprob: -15.476682662963867

Token 369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.975612187583465e-05
    2. ' ' → logprob: -10.500029563903809
    3. '<|end|>' → logprob: -13.125029563903809
    4. 'def' → logprob: -16.125030517578125
    5. '```' → logprob: -16.750030517578125
    6. 'H' → logprob: -17.125030517578125
    7. '   ' → logprob: -18.500030517578125
    8. '2' → logprob: -19.000030517578125
    9. '0' → logprob: -19.500030517578125
    10. '[' → logprob: -19.625030517578125

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '<|end|>' → logprob: -16.875
    4. 'def' → logprob: -17.375
    5. '```' → logprob: -18.25
    6. '
' → logprob: -20.625
    7. '   ' → logprob: -21.75
    8. '2' → logprob: -21.875
    9. '{
' → logprob: -22.0
    10. '[' → logprob: -22.375

Token 371: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25193890929222107
    2. '<' → logprob: -1.5019389390945435
    3. ' <=' → logprob: -11.751938819885254
    4. '<=' → logprob: -14.126938819885254
    5. ' ' → logprob: -14.876938819885254
    6. '<W' → logprob: -15.626938819885254
    7. ')' → logprob: -15.751938819885254
    8. '<|end|>' → logprob: -16.37693977355957
    9. ' <
' → logprob: -16.62693977355957
    10. '<len' → logprob: -17.00193977355957

Token 372: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -6.988221684878226e-06
    2. ' H' → logprob: -11.875006675720215
    3. '	H' → logprob: -20.50000762939453
    4. '   ' → logprob: -20.62500762939453
    5. '<H' → logprob: -21.75000762939453
    6. '```' → logprob: -21.75000762939453
    7. 'def' → logprob: -22.00000762939453
    8. '_H' → logprob: -22.62500762939453
    9. '
' → logprob: -22.75000762939453
    10. ' ' → logprob: -22.75000762939453

Token 373: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0010516269830986857
    2. 'and' → logprob: -6.876051425933838
    3. ':
' → logprob: -11.626051902770996
    4. ':' → logprob: -12.001051902770996
    5. '       ' → logprob: -13.001051902770996
    6. '           ' → logprob: -14.251051902770996
    7. '   ' → logprob: -15.376051902770996
    8. ',' → logprob: -15.626051902770996
    9. ' ' → logprob: -16.00105094909668
    10. '      ' → logprob: -16.37605094909668

Token 374: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2897343337535858
    2. '           ' → logprob: -1.7897343635559082
    3. '       ' → logprob: -2.539734363555908
    4. ' if' → logprob: -6.039734363555908
    5. '               ' → logprob: -6.914734363555908
    6. 'and' → logprob: -7.289734363555908
    7. ' res' → logprob: -7.664734363555908
    8. '<|end|>' → logprob: -7.789734363555908
    9. '        ' → logprob: -9.16473388671875
    10. 'res' → logprob: -9.28973388671875

Token 375: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01481910701841116
    2. 'if' → logprob: -4.889819145202637
    3. ' res' → logprob: -5.139819145202637
    4. ' if' → logprob: -6.764819145202637
    5. 'return' → logprob: -9.264819145202637
    6. '           ' → logprob: -10.139819145202637
    7. '   ' → logprob: -11.389819145202637
    8. '               ' → logprob: -11.764819145202637
    9. '       ' → logprob: -12.014819145202637
    10. ' return' → logprob: -12.764819145202637

Token 376: ' Mark' (ID: 5070)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.20465953648090363
    2. 'if' → logprob: -1.7046595811843872
    3. ' if' → logprob: -6.454659461975098
    4. 'return' → logprob: -7.204659461975098
    5. ' res' → logprob: -7.329659461975098
    6. '   ' → logprob: -9.704659461975098
    7. 'new' → logprob: -10.329659461975098
    8. '#' → logprob: -10.329659461975098
    9. 'next' → logprob: -10.454659461975098
    10. '       ' → logprob: -10.829659461975098

Token 377: ' cell' (ID: 4206)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.02368343248963356
    2. ' next' → logprob: -3.773683547973633
    3. '(next' → logprob: -7.773683547973633
    4. '[next' → logprob: -11.148683547973633
    5. 'return' → logprob: -13.398683547973633
    6. '	next' → logprob: -14.523683547973633
    7. ' return' → logprob: -15.898683547973633
    8. 'new' → logprob: -16.023683547973633
    9. 'the' → logprob: -16.023683547973633
    10. ',next' → logprob: -16.523683547973633

Token 378: ' in' (ID: 306)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.6572155952453613
    2. ' next' → logprob: -1.2822155952453613
    3. 'next' → logprob: -1.6572155952453613
    4. '[next' → logprob: -5.657215595245361
    5. ' (' → logprob: -6.282215595245361
    6. '=' → logprob: -6.282215595245361
    7. '           ' → logprob: -6.657215595245361
    8. ',' → logprob: -6.782215595245361
    9. ' in' → logprob: -7.032215595245361
    10. ' for' → logprob: -7.532215595245361

Token 379: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.029754191637039185
    2. ' next' → logprob: -3.529754161834717
    3. '(next' → logprob: -13.029754638671875
    4. 'the' → logprob: -14.529754638671875
    5. ' the' → logprob: -14.779754638671875
    6. '[next' → logprob: -14.904754638671875
    7. '```' → logprob: -15.529754638671875
    8. '	next' → logprob: -16.154754638671875
    9. '_next' → logprob: -17.279754638671875
    10. '.next' → logprob: -17.404754638671875

Token 380: ' row' (ID: 5225)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0036646833177655935
    2. 'mask' → logprob: -6.253664493560791
    3. 'row' → logprob: -6.503664493560791
    4. '_row' → logprob: -8.75366497039795
    5. 'next' → logprob: -10.50366497039795
    6. '_' → logprob: -10.87866497039795
    7. '```' → logprob: -11.12866497039795
    8. '_next' → logprob: -11.87866497039795
    9. ' row' → logprob: -13.00366497039795
    10. '_masks' → logprob: -13.62866497039795

Token 381: ' occupied' (ID: 46186)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8307483196258545
    2. ' next' → logprob: -1.3307483196258545
    3. '(next' → logprob: -2.2057483196258545
    4. ' |=' → logprob: -2.3307483196258545
    5. '|' → logprob: -2.4557483196258545
    6. '=' → logprob: -6.455748558044434
    7. '[next' → logprob: -6.580748558044434
    8. ',' → logprob: -7.080748558044434
    9. ' |' → logprob: -7.455748558044434
    10. ' =' → logprob: -7.580748558044434

Token 382: ' by' (ID: 656)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6222993731498718
    2. '|' → logprob: -1.7472994327545166
    3. 'next' → logprob: -1.9972994327545166
    4. ' |=' → logprob: -2.6222994327545166
    5. '(next' → logprob: -2.9972994327545166
    6. '           ' → logprob: -4.3722991943359375
    7. ' |' → logprob: -4.7472991943359375
    8. '[next' → logprob: -5.6222991943359375
    9. '=' → logprob: -6.6222991943359375
    10. ' =' → logprob: -6.8722991943359375

Token 383: ' vertical' (ID: 17679)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3539225459098816
    2. '(' → logprob: -1.4789226055145264
    3. ' next' → logprob: -3.2289226055145264
    4. '(next' → logprob: -3.9789226055145264
    5. 'search' → logprob: -5.228922367095947
    6. '1' → logprob: -5.353922367095947
    7. ' (' → logprob: -6.603922367095947
    8. ' search' → logprob: -8.353922843933105
    9. 'vertical' → logprob: -9.353922843933105
    10. ' ' → logprob: -10.478922843933105

Token 384: ' tat' (ID: 15495)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3633314073085785
    2. 'next' → logprob: -1.3633314371109009
    3. '(next' → logprob: -3.3633313179016113
    4. '|' → logprob: -4.738331317901611
    5. ' (' → logprob: -6.613331317901611
    6. '1' → logprob: -6.863331317901611
    7. 'mask' → logprob: -7.613331317901611
    8. '_mask' → logprob: -7.988331317901611
    9. ' placement' → logprob: -8.11333179473877
    10. ' ' → logprob: -8.23833179473877

Token 385: 'ami' (ID: 4938)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4140317738056183
    2. '_mask' → logprob: -1.914031744003296
    3. '(next' → logprob: -1.914031744003296
    4. '           ' → logprob: -3.789031744003296
    5. '1' → logprob: -4.789031982421875
    6. 'mask' → logprob: -5.789031982421875
    7. ' next' → logprob: -6.039031982421875
    8. '```' → logprob: -6.164031982421875
    9. '(' → logprob: -6.664031982421875
    10. '``' → logprob: -6.914031982421875

Token 386: '
' (ID: 198)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.9553303718566895
    2. ' |=' → logprob: -1.5803303718566895
    3. 'next' → logprob: -1.9553303718566895
    4. '|' → logprob: -2.4553303718566895
    5. ' |' → logprob: -3.3303303718566895
    6. 'res' → logprob: -3.3303303718566895
    7. ' =' → logprob: -3.4553303718566895
    8. '           ' → logprob: -3.5803303718566895
    9. ' res' → logprob: -3.7053303718566895
    10. '=' → logprob: -4.9553303718566895

Token 387: '           ' (ID: 352)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.38262516260147095
    2. '           ' → logprob: -2.007625102996826
    3. ' res' → logprob: -2.007625102996826
    4. 'next' → logprob: -4.007625102996826
    5. '               ' → logprob: -4.257625102996826
    6. 'res' → logprob: -4.882625102996826
    7. ' if' → logprob: -5.507625102996826
    8. '            ' → logprob: -7.132625102996826
    9. ' =' → logprob: -7.257625102996826
    10. ' return' → logprob: -7.257625102996826

Token 388: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.4847162365913391
    2. ' res' → logprob: -0.9847162365913391
    3. 'return' → logprob: -5.234716415405273
    4. ' return' → logprob: -5.359716415405273
    5. ' if' → logprob: -8.609716415405273
    6. '           ' → logprob: -8.984716415405273
    7. 'if' → logprob: -9.109716415405273
    8. '   ' → logprob: -10.109716415405273
    9. '       ' → logprob: -10.859716415405273
    10. ' new' → logprob: -11.234716415405273

Token 389: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3868836760520935
    2. ' +=' → logprob: -1.1368837356567383
    3. '+' → logprob: -12.136883735656738
    4. '=' → logprob: -12.761883735656738
    5. ']+=' → logprob: -12.761883735656738
    6. '+=(' → logprob: -14.011883735656738
    7. '   ' → logprob: -15.511883735656738
    8. '+='' → logprob: -15.761883735656738
    9. '+="' → logprob: -16.011882781982422
    10. ' +' → logprob: -17.136882781982422

Token 390: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.01818365789949894
    2. ' search' → logprob: -4.018183708190918
    3. 'dfs' → logprob: -10.393183708190918
    4. ' dfs' → logprob: -12.893183708190918
    5. '	search' → logprob: -15.143183708190918
    6. '(search' → logprob: -15.768183708190918
    7. '   ' → logprob: -16.3931827545166
    8. ' ' → logprob: -17.2681827545166
    9. 'se' → logprob: -17.8931827545166
    10. '  ' → logprob: -18.5181827545166

Token 391: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0008537048124708235
    2. '(row' → logprob: -7.500853538513184
    3. 'row' → logprob: -8.125853538513184
    4. '_' → logprob: -13.625853538513184
    5. '[row' → logprob: -13.750853538513184
    6. '_rows' → logprob: -14.500853538513184
    7. '	row' → logprob: -15.125853538513184
    8. 's' → logprob: -15.625853538513184
    9. '_ROW' → logprob: -15.625853538513184
    10. ',row' → logprob: -15.625853538513184

Token 392: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. '(line' → logprob: -16.875017166137695
    4. '(
' → logprob: -17.500017166137695
    5. ',row' → logprob: -17.500017166137695
    6. '(room' → logprob: -17.625017166137695
    7. ' (' → logprob: -17.625017166137695
    8. 'row' → logprob: -18.125017166137695
    9. '(rows' → logprob: -18.125017166137695
    10. '[row' → logprob: -18.250017166137695

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010437761375214905
    2. ',row' → logprob: -9.625103950500488
    3. ' ,' → logprob: -10.250103950500488
    4. '(row' → logprob: -13.125103950500488
    5. '+' → logprob: -14.625103950500488
    6. ',
' → logprob: -15.500103950500488
    7. '```' → logprob: -16.375104904174805
    8. ' +' → logprob: -16.625104904174805
    9. '   ' → logprob: -16.750104904174805
    10. 'row' → logprob: -16.875104904174805

Token 394: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.04891560226678848
    2. ' mask' → logprob: -3.0489156246185303
    3. 'row' → logprob: -8.04891586303711
    4. ' row' → logprob: -11.79891586303711
    5. '(mask' → logprob: -14.54891586303711
    6. 'search' → logprob: -15.67391586303711
    7. '_mask' → logprob: -15.79891586303711
    8. '	mask' → logprob: -16.04891586303711
    9. ' ' → logprob: -16.67391586303711
    10. 'masked' → logprob: -17.04891586303711

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. ' ,' → logprob: -11.125017166137695
    3. ',pos' → logprob: -13.250017166137695
    4. '       ' → logprob: -14.875017166137695
    5. '   ' → logprob: -15.375017166137695
    6. '',' → logprob: -17.500017166137695
    7. ',
' → logprob: -17.750017166137695
    8. ' ' → logprob: -17.750017166137695
    9. ',row' → logprob: -17.750017166137695
    10. '           ' → logprob: -18.000017166137695

Token 396: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0005530327325686812
    2. ' pos' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.000553131103516
    4. ' ' → logprob: -18.250553131103516
    5. '  ' → logprob: -18.625553131103516
    6. '    ' → logprob: -19.625553131103516
    7. '	pos' → logprob: -19.625553131103516
    8. '     ' → logprob: -20.125553131103516
    9. '(pos' → logprob: -20.375553131103516
    10. '       ' → logprob: -20.375553131103516

Token 397: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3418779671192169
    2. '+' → logprob: -1.4668779373168945
    3. ',' → logprob: -2.8418779373168945
    4. ' ,' → logprob: -7.4668779373168945
    5. '+,' → logprob: -11.466877937316895
    6. ' ' → logprob: -11.591877937316895
    7. '   ' → logprob: -11.591877937316895
    8. '  ' → logprob: -13.591877937316895
    9. '	' → logprob: -14.341877937316895
    10. ')' → logprob: -14.591877937316895

Token 398: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030424181022681296
    2. '2' → logprob: -8.125304222106934
    3. ' ' → logprob: -11.875304222106934
    4. '   ' → logprob: -14.625304222106934
    5. '0' → logprob: -15.500304222106934
    6. '```' → logprob: -15.812804222106934
    7. '  ' → logprob: -17.18780517578125
    8. '3' → logprob: -17.25030517578125
    9. '+' → logprob: -17.43780517578125
    10. '
' → logprob: -17.81280517578125

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '2' → logprob: -13.12500286102295
    3. '0' → logprob: -15.56250286102295
    4. ' ' → logprob: -15.62500286102295
    5. '+' → logprob: -15.68750286102295
    6. '   ' → logprob: -16.187501907348633
    7. '```' → logprob: -17.750001907348633
    8. 'pos' → logprob: -18.437501907348633
    9. '
' → logprob: -18.500001907348633
    10. '１' → logprob: -18.812501907348633

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005343686323612928
    2. '(next' → logprob: -5.505343914031982
    3. ',next' → logprob: -7.505343914031982
    4. 'next' → logprob: -7.755343914031982
    5. ' ,' → logprob: -9.005343437194824
    6. ' next' → logprob: -9.255343437194824
    7. '[next' → logprob: -10.755343437194824
    8. ',
' → logprob: -11.130343437194824
    9. ',(' → logprob: -12.130343437194824
    10. '(' → logprob: -12.380343437194824

Token 401: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.008728263899683952
    2. ' next' → logprob: -4.75872802734375
    3. '(next' → logprob: -9.13372802734375
    4. '[next' → logprob: -12.75872802734375
    5. '   ' → logprob: -13.13372802734375
    6. 'new' → logprob: -15.38372802734375
    7. '```' → logprob: -15.75872802734375
    8. ' ' → logprob: -15.75872802734375
    9. '	next' → logprob: -15.88372802734375
    10. '       ' → logprob: -17.25872802734375

Token 402: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -3.750436007976532e-05
    2. 'mask' → logprob: -11.12503719329834
    3. 'Mask' → logprob: -11.25003719329834
    4. '_MASK' → logprob: -12.50003719329834
    5. '+' → logprob: -13.50003719329834
    6. '_m' → logprob: -14.00003719329834
    7. '_' → logprob: -14.25003719329834
    8. '_masks' → logprob: -14.75003719329834
    9. ')' → logprob: -14.87503719329834
    10. '1' → logprob: -14.87503719329834

Token 403: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.07891523092985153
    2. '|' → logprob: -2.5789151191711426
    3. '|(' → logprob: -10.9539155960083
    4. ')' → logprob: -12.4539155960083
    5. '│' → logprob: -13.8289155960083
    6. ' ' → logprob: -13.8289155960083
    7. ' ^' → logprob: -14.4539155960083
    8. ' |=' → logprob: -14.7039155960083
    9. ',' → logprob: -15.3289155960083
    10. '(' → logprob: -15.3289155960083

Token 404: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06196846812963486
    2. ' (' → logprob: -2.8119685649871826
    3. ' ' → logprob: -15.686968803405762
    4. '           ' → logprob: -15.811968803405762
    5. ')' → logprob: -15.936968803405762
    6. '            ' → logprob: -16.061967849731445
    7. '  ' → logprob: -16.436967849731445
    8. '1' → logprob: -17.311967849731445
    9. '   ' → logprob: -17.311967849731445
    10. '          ' → logprob: -17.436967849731445

Token 405: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03376510739326477
    2. '1' → logprob: -3.6587650775909424
    3. ' (' → logprob: -4.9087653160095215
    4. ' ' → logprob: -9.908764839172363
    5. '           ' → logprob: -13.408764839172363
    6. ')' → logprob: -13.533764839172363
    7. '   ' → logprob: -14.158764839172363
    8. '[' → logprob: -14.658764839172363
    9. '{' → logprob: -15.033764839172363
    10. '  ' → logprob: -15.033764839172363

Token 406: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.4741446077823639
    2. '<<' → logprob: -0.9741445779800415
    3. '<<(' → logprob: -10.59914493560791
    4. ')' → logprob: -11.34914493560791
    5. ' <<=' → logprob: -11.84914493560791
    6. ')<<' → logprob: -11.97414493560791
    7. '<<<' → logprob: -12.47414493560791
    8. '(' → logprob: -12.72414493560791
    9. '```' → logprob: -13.22414493560791
    10. '()<<' → logprob: -13.72414493560791

Token 407: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00020354038861114532
    2. ' pos' → logprob: -8.500203132629395
    3. '	pos' → logprob: -20.37520408630371
    4. '[pos' → logprob: -20.50020408630371
    5. '(pos' → logprob: -21.12520408630371
    6. '   ' → logprob: -23.25020408630371
    7. 'Pos' → logprob: -23.62520408630371
    8. '_pos' → logprob: -23.75020408630371
    9. 'position' → logprob: -24.12520408630371
    10. ' ' → logprob: -24.50020408630371

Token 408: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.020711682736873627
    2. ')' → logprob: -3.895711660385132
    3. '))
' → logprob: -9.145711898803711
    4. '       ' → logprob: -10.270711898803711
    5. ')))' → logprob: -11.520711898803711
    6. ' ))' → logprob: -11.895711898803711
    7. '   ' → logprob: -12.145711898803711
    8. '           ' → logprob: -13.270711898803711
    9. ')
' → logprob: -13.395711898803711
    10. ' )' → logprob: -14.270711898803711

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04201633110642433
    2. '   ' → logprob: -3.2920162677764893
    3. '<|end|>' → logprob: -6.292016506195068
    4. ' return' → logprob: -6.917016506195068
    5. '	return' → logprob: -7.417016506195068
    6. '           ' → logprob: -9.41701602935791
    7. 'return' → logprob: -9.41701602935791
    8. ')' → logprob: -9.54201602935791
    9. '        
' → logprob: -9.91701602935791
    10. '    ' → logprob: -10.29201602935791

Token 410: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013039397075772285
    2. '   ' → logprob: -5.013039588928223
    3. ' return' → logprob: -5.638039588928223
    4. 'return' (adapté à ' return') → logprob: -6.013039588928223
    5. '	return' → logprob: -8.638039588928223
    6. '           ' → logprob: -9.513039588928223
    7. '      ' → logprob: -11.638039588928223
    8. '     ' → logprob: -11.638039588928223
    9. ' ' → logprob: -12.138039588928223
    10. '    ' → logprob: -12.263039588928223

Token 411: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.023245595395565033
    2. ' res' → logprob: -3.7732455730438232
    3. 're' → logprob: -16.898244857788086
    4. '(res' → logprob: -17.148244857788086
    5. '	res' → logprob: -17.273244857788086
    6. 'r' → logprob: -17.523244857788086
    7. '$res' → logprob: -18.023244857788086
    8. '_res' → logprob: -18.398244857788086
    9. 'search' → logprob: -19.023244857788086
    10. ' ' → logprob: -19.148244857788086

Token 412: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 414: ' main' (ID: 2758)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.16326822340488434
    2. ' _' → logprob: -2.4132683277130127
    3. '_' → logprob: -3.2882683277130127
    4. ' main' → logprob: -4.163268089294434
    5. ' ' → logprob: -5.413268089294434
    6. 'count' → logprob: -6.913268089294434
    7. ' place' → logprob: -7.538268089294434
    8. ' space' → logprob: -7.538268089294434
    9. '_count' → logprob: -7.538268089294434
    10. ' calculate' → logprob: -8.788268089294434

Token 415: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006747855222783983
    2. '(' → logprob: -7.625674724578857
    3. ' ():' → logprob: -9.375675201416016
    4. '()' → logprob: -9.875675201416016
    5. ':' → logprob: -10.250675201416016
    6. '():
' → logprob: -11.875675201416016
    7. '(:' → logprob: -12.625675201416016
    8. '_' → logprob: -13.375675201416016
    9. 'def' → logprob: -14.000675201416016
    10. ' (' → logprob: -14.500675201416016

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004935108125209808
    2. '```' → logprob: -6.504935264587402
    3. ' n' → logprob: -7.004935264587402
    4. 'n' → logprob: -7.254935264587402
    5. ' import' → logprob: -7.379935264587402
    6. '    ' → logprob: -8.004935264587402
    7. ' H' → logprob: -8.754935264587402
    8. 'import' → logprob: -9.004935264587402
    9. ' input' → logprob: -9.129935264587402
    10. ' for' → logprob: -9.254935264587402

Token 417: ' while' (ID: 2049)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7200254201889038
    2. ' H' → logprob: -1.5950254201889038
    3. '   ' → logprob: -1.8450254201889038
    4. 'import' → logprob: -2.2200255393981934
    5. 'H' → logprob: -3.5950255393981934
    6. ' n' → logprob: -4.720025539398193
    7. 'n' → logprob: -5.095025539398193
    8. ' h' → logprob: -7.845025539398193
    9. 't' → logprob: -8.970025062561035
    10. 'h' → logprob: -8.970025062561035

Token 418: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00319993169978261
    2. 'True' → logprob: -5.753200054168701
    3. '(True' → logprob: -10.753199577331543
    4. ' ' → logprob: -14.503199577331543
    5. '=True' → logprob: -15.878199577331543
    6. '1' → logprob: -16.25320053100586
    7. '  ' → logprob: -16.87820053100586
    8. ' ' → logprob: -17.25320053100586
    9. ' Tru' → logprob: -17.75320053100586
    10. '(' → logprob: -18.37820053100586

Token 419: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08260080963373184
    2. '   ' → logprob: -3.4576008319854736
    3. ':
' → logprob: -3.9576008319854736
    4. '():' → logprob: -4.3326005935668945
    5. '():
' → logprob: -4.9576005935668945
    6. ' :' → logprob: -5.7076005935668945
    7. '(' → logprob: -6.0826005935668945
    8. ',' → logprob: -6.4576005935668945
    9. '       ' → logprob: -7.7076005935668945
    10. ' (' → logprob: -8.457600593566895

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2725919485092163
    2. ' line' → logprob: -2.022592067718506
    3. ' try' → logprob: -2.897592067718506
    4. '   ' → logprob: -3.522592067718506
    5. 'try' → logprob: -4.022592067718506
    6. 'line' → logprob: -5.897592067718506
    7. 'n' → logprob: -8.897591590881348
    8. '	line' → logprob: -9.147591590881348
    9. ' s' → logprob: -9.397591590881348
    10. ' input' → logprob: -9.647591590881348

Token 421: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6800184845924377
    2. ' try' → logprob: -1.680018424987793
    3. '   ' → logprob: -2.305018424987793
    4. 'line' (adapté à ' line') → logprob: -2.805018424987793
    5. 'try' → logprob: -3.055018424987793
    6. ' H' → logprob: -3.930018424987793
    7. 's' → logprob: -4.055018424987793
    8. 'H' → logprob: -4.055018424987793
    9. 'h' → logprob: -4.555018424987793
    10. ' s' → logprob: -4.680018424987793

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788901224732399
    2. '=' → logprob: -2.578890085220337
    3. 's' → logprob: -15.703889846801758
    4. '=line' → logprob: -16.453889846801758
    5. ' ' → logprob: -16.953889846801758
    6. '.' → logprob: -17.703889846801758
    7. '=input' → logprob: -17.703889846801758
    8. ' =
' → logprob: -17.828889846801758
    9. '   ' → logprob: -18.078889846801758
    10. '＝' → logprob: -18.203889846801758

Token 423: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931471824645996
    2. ' input' → logprob: -0.6931471824645996
    3. '=input' → logprob: -16.693147659301758
    4. '(input' → logprob: -17.568147659301758
    5. '   ' → logprob: -20.568147659301758
    6. ' ' → logprob: -20.568147659301758
    7. '<input' → logprob: -20.943147659301758
    8. '	input' → logprob: -21.443147659301758
    9. '```' → logprob: -21.943147659301758
    10. '_input' → logprob: -21.943147659301758

Token 424: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000497032655403018
    2. '().' → logprob: -7.625496864318848
    3. '()
' → logprob: -12.625496864318848
    4. ' ()' → logprob: -13.375496864318848
    5. '(' → logprob: -13.750496864318848
    6. '()>' → logprob: -13.750496864318848
    7. '()

' → logprob: -14.750496864318848
    8. '())' → logprob: -15.000496864318848
    9. '()</' → logprob: -15.000496864318848
    10. '()<' → logprob: -15.375496864318848

Token 425: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.318681188422488e-05
    2. 'rstrip' → logprob: -11.25001335144043
    3. 'split' → logprob: -15.62501335144043
    4. ' strip' → logprob: -18.12501335144043
    5. '_strip' → logprob: -21.00001335144043
    6. '.strip' → logprob: -21.62501335144043
    7. '(strip' → logprob: -22.12501335144043
    8. 'str' → logprob: -22.37501335144043
    9. '-strip' → logprob: -22.50001335144043
    10. 'startswith' → logprob: -23.25001335144043

Token 426: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004682049620896578
    2. '()
' → logprob: -5.3796820640563965
    3. ')' → logprob: -10.879681587219238
    4. '())' → logprob: -11.379681587219238
    5. '(' → logprob: -11.629681587219238
    6. '<|end|>' → logprob: -12.004681587219238
    7. ' ()' → logprob: -12.754681587219238
    8. '()

' → logprob: -13.379681587219238
    9. '<|end|>' → logprob: -13.879681587219238
    10. '()
' → logprob: -14.004681587219238

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09338197112083435
    2. ' if' → logprob: -2.843381881713867
    3. '<|end|>' → logprob: -4.218381881713867
    4. 'if' → logprob: -5.218381881713867
    5. '   ' → logprob: -5.218381881713867
    6. '        
' → logprob: -6.968381881713867
    7. ' ' → logprob: -7.093381881713867
    8. ' =' → logprob: -7.218381881713867
    9. '        ' → logprob: -7.968381881713867
    10. '=' → logprob: -8.093381881713867

Token 428: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008630876429378986
    2. ' if' → logprob: -4.758630752563477
    3. '       ' → logprob: -11.258630752563477
    4. '   ' → logprob: -13.383630752563477
    5. '```' → logprob: -14.008630752563477
    6. '	if' → logprob: -14.883630752563477
    7. '
' → logprob: -15.258630752563477
    8. 'If' → logprob: -15.758630752563477
    9. '<|end|>' → logprob: -16.133630752563477
    10. '           ' → logprob: -16.258630752563477

Token 429: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2830096185207367
    2. 'line' → logprob: -2.2830095291137695
    3. ' line' → logprob: -2.2830095291137695
    4. 'not' → logprob: -3.1580095291137695
    5. '#line' → logprob: -11.65800952911377
    6. ' ' → logprob: -11.78300952911377
    7. '	line' → logprob: -13.03300952911377
    8. '(line' → logprob: -13.28300952911377
    9. '[line' → logprob: -13.65800952911377
    10. '=line' → logprob: -14.15800952911377

Token 430: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2819599509239197
    2. '==' → logprob: -1.4069600105285645
    3. '()==' → logprob: -7.1569600105285645
    4. '()' → logprob: -11.656959533691406
    5. '=' → logprob: -12.281959533691406
    6. ' =' → logprob: -12.656959533691406
    7. '.startswith' → logprob: -12.656959533691406
    8. ')==' → logprob: -12.781959533691406
    9. '===' → logprob: -13.031959533691406
    10. '   ' → logprob: -13.781959533691406

Token 431: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.8526132702827454
    2. '""' → logprob: -1.3526132106781006
    3. '"' → logprob: -1.6026132106781006
    4. '"":' → logprob: -2.6026132106781006
    5. ''' → logprob: -3.2276132106781006
    6. ''ex' → logprob: -12.10261344909668
    7. ' "' → logprob: -12.72761344909668
    8. ' "":
' → logprob: -12.85261344909668
    9. ' ""' → logprob: -12.97761344909668
    10. ' '' → logprob: -13.10261344909668

Token 432: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011412883177399635
    2. '           ' → logprob: -7.50114107131958
    3. '   ' → logprob: -7.87614107131958
    4. ':' → logprob: -10.126141548156738
    5. ':
' → logprob: -10.251141548156738
    6. 'break' → logprob: -10.376141548156738
    7. ' break' → logprob: -10.501141548156738
    8. '<|end|>' → logprob: -10.626141548156738
    9. ',' → logprob: -11.501141548156738
    10. ' or' → logprob: -11.626141548156738

Token 433: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.012620656751096249
    2. '       ' → logprob: -4.512620449066162
    3. ' break' → logprob: -6.762620449066162
    4. 'return' → logprob: -7.887620449066162
    5. '           ' → logprob: -10.88762092590332
    6. '	break' → logprob: -11.01262092590332
    7. '   ' → logprob: -13.26262092590332
    8. '```' → logprob: -13.26262092590332
    9. '_break' → logprob: -14.01262092590332
    10. '               ' → logprob: -15.76262092590332

Token 434: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00167470658197999
    2. '<|end|>' → logprob: -6.751674652099609
    3. '   ' → logprob: -8.12667465209961
    4. '        
' → logprob: -10.12667465209961
    5. ',' → logprob: -10.25167465209961
    6. '```' → logprob: -10.75167465209961
    7. 'if' → logprob: -10.87667465209961
    8. 'try' → logprob: -10.87667465209961
    9. '
' → logprob: -10.87667465209961
    10. ' if' → logprob: -11.50167465209961

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004717834817711264
    2. '<|end|>' → logprob: -9.000472068786621
    3. ' if' → logprob: -9.125472068786621
    4. 'if' → logprob: -9.500472068786621
    5. 'try' → logprob: -9.625472068786621
    6. '   ' → logprob: -10.375472068786621
    7. ',' → logprob: -11.000472068786621
    8. '```' → logprob: -11.125472068786621
    9. ' try' → logprob: -11.500472068786621
    10. ')' → logprob: -12.000472068786621

Token 436: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.02071518823504448
    2. 'h' → logprob: -4.520715236663818
    3. 'if' → logprob: -4.895715236663818
    4. 'break' → logprob: -7.145715236663818
    5. ' H' → logprob: -7.770715236663818
    6. 'try' → logprob: -8.02071475982666
    7. '   ' → logprob: -8.52071475982666
    8. ' if' → logprob: -8.77071475982666
    9. 'n' → logprob: -9.89571475982666
    10. '       ' → logprob: -10.14571475982666

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.20734242349863e-05
    2. ',W' → logprob: -9.875072479248047
    3. ' ,' → logprob: -10.875072479248047
    4. ',H' → logprob: -14.750072479248047
    5. ',w' → logprob: -14.750072479248047
    6. ',
' → logprob: -15.875072479248047
    7. '‌,' → logprob: -16.000072479248047
    8. '_,' → logprob: -16.500072479248047
    9. '=' → logprob: -16.625072479248047
    10. ',int' → logprob: -16.750072479248047

Token 438: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.014164448715746403
    2. ' W' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.764164924621582
    4. '=' → logprob: -15.264164924621582
    5. '*' → logprob: -16.014163970947266
    6. ' =' → logprob: -16.264163970947266
    7. '=W' → logprob: -16.639163970947266
    8. '  ' → logprob: -16.889163970947266
    9. ',' → logprob: -17.889163970947266
    10. ',W' → logprob: -18.014163970947266

Token 439: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759738683700562
    2. '=' → logprob: -0.8259738683700562
    3. ',' → logprob: -10.450973510742188
    4. ')' → logprob: -12.450973510742188
    5. '<|end|>' → logprob: -14.450973510742188
    6. '=int' → logprob: -15.325973510742188
    7. ')=' → logprob: -15.700973510742188
    8. '=line' → logprob: -15.825973510742188
    9. ' ' → logprob: -15.950973510742188
    10. '=input' → logprob: -16.700973510742188

Token 440: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.47407761216163635
    2. 'map' → logprob: -0.974077582359314
    3. '	map' → logprob: -15.849077224731445
    4. '(map' → logprob: -16.099077224731445
    5. 'list' → logprob: -16.474077224731445
    6. ' ' → logprob: -16.724077224731445
    7. '.map' → logprob: -16.974077224731445
    8. 'm' → logprob: -17.099077224731445
    9. '[' → logprob: -17.099077224731445
    10. '_map' → logprob: -17.724077224731445

Token 441: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003096023283433169
    2. '(' → logprob: -9.125309944152832
    3. '(str' → logprob: -9.250309944152832
    4. 'int' → logprob: -9.875309944152832
    5. '(input' → logprob: -9.875309944152832
    6. '(lambda' → logprob: -14.500309944152832
    7. '<int' → logprob: -14.500309944152832
    8. 'str' → logprob: -15.625309944152832
    9. '=int' → logprob: -15.875309944152832
    10. 'input' → logprob: -15.875309944152832

Token 442: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.018975619226694107
    2. ',line' → logprob: -4.768975734710693
    3. ',' → logprob: -4.893975734710693
    4. '(input' → logprob: -6.518975734710693
    5. '(' → logprob: -7.893975734710693
    6. ',input' → logprob: -8.018975257873535
    7. ')' → logprob: -8.768975257873535
    8. ' line' → logprob: -8.893975257873535
    9. 'line' → logprob: -9.393975257873535
    10. '#line' → logprob: -9.768975257873535

Token 443: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00317783304490149
    2. ' line' → logprob: -5.753177642822266
    3. '(line' → logprob: -16.253177642822266
    4. 'input' → logprob: -16.878177642822266
    5. '[line' → logprob: -18.628177642822266
    6. '	line' → logprob: -19.003177642822266
    7. '=line' → logprob: -19.253177642822266
    8. ')' → logprob: -19.628177642822266
    9. '   ' → logprob: -20.003177642822266
    10. '#line' → logprob: -20.003177642822266

Token 444: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.08654552698135376
    2. '().' → logprob: -2.586545467376709
    3. '.' → logprob: -5.086545467376709
    4. '.strip' → logprob: -6.586545467376709
    5. ' .' → logprob: -9.711545944213867
    6. '.readline' → logprob: -12.711545944213867
    7. 'split' → logprob: -13.211545944213867
    8. '   ' → logprob: -14.086545944213867
    9. '.rstrip' → logprob: -14.211545944213867
    10. ')' → logprob: -14.836545944213867

Token 445: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010704904794692993
    2. '()' → logprob: -4.88570499420166
    3. '('' → logprob: -6.63570499420166
    4. ')' → logprob: -6.63570499420166
    5. '(' → logprob: -7.88570499420166
    6. '(','' → logprob: -9.63570499420166
    7. '())
' → logprob: -10.88570499420166
    8. '()))' → logprob: -12.38570499420166
    9. '(',' → logprob: -13.63570499420166
    10. '')' → logprob: -13.88570499420166

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09990164637565613
    2. ' if' → logprob: -2.9749016761779785
    3. '<|end|>' → logprob: -3.3499016761779785
    4. 'if' → logprob: -5.7249016761779785
    5. '```' → logprob: -5.8499016761779785
    6. ',' → logprob: -7.4749016761779785
    7. '[' → logprob: -7.5999016761779785
    8. '        
' → logprob: -7.5999016761779785
    9. '   ' → logprob: -7.7249016761779785
    10. '<|end|>' → logprob: -8.72490119934082

Token 447: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002149546518921852
    2. ' if' → logprob: -6.50214958190918
    3. 'print' → logprob: -7.87714958190918
    4. 'break' → logprob: -8.87714958190918
    5. '       ' → logprob: -9.00214958190918
    6. '```' → logprob: -12.75214958190918
    7. '   ' → logprob: -14.12714958190918
    8. 'If' → logprob: -14.50214958190918
    9. 'result' → logprob: -15.00214958190918
    10. ' break' → logprob: -15.37714958190918

Token 448: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.029750484973192215
    2. ' H' → logprob: -3.5297505855560303
    3. '(' → logprob: -16.90475082397461
    4. ' ' → logprob: -17.27975082397461
    5. '(H' → logprob: -17.65475082397461
    6. ' (' → logprob: -18.02975082397461
    7. '	H' → logprob: -20.90475082397461
    8. '   ' → logprob: -21.65475082397461
    9. '[' → logprob: -21.65475082397461
    10. '  ' → logprob: -21.77975082397461

Token 449: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1602276712656021
    2. '==' → logprob: -1.910227656364441
    3. ')==' → logprob: -13.78522777557373
    4. '=' → logprob: -14.28522777557373
    5. '()==' → logprob: -14.91022777557373
    6. ' <=' → logprob: -14.91022777557373
    7. ' ' → logprob: -15.53522777557373
    8. ' <' → logprob: -15.66022777557373
    9. '<=' → logprob: -15.91022777557373
    10. '<|end|>' → logprob: -15.91022777557373

Token 450: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.125123977661133
    4. '```' → logprob: -19.125123977661133
    5. '  ' → logprob: -19.500123977661133
    6. '۰' → logprob: -19.625123977661133
    7. '=' → logprob: -20.375123977661133
    8. 'W' → logprob: -20.375123977661133
    9. '０' → logprob: -20.812623977661133
    10. '-' → logprob: -21.062623977661133

Token 451: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'W' → logprob: -15.750051498413086
    4. '```' → logprob: -17.250051498413086
    5. 'H' → logprob: -18.500051498413086
    6. '-' → logprob: -18.625051498413086
    7. '۰' → logprob: -18.625051498413086
    8. '０' → logprob: -19.000051498413086
    9. '``' → logprob: -19.875051498413086
    10. ' W' → logprob: -20.312551498413086

Token 452: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011187282390892506
    2. 'and' → logprob: -4.5111870765686035
    3. ' or' → logprob: -8.886187553405762
    4. ' ' → logprob: -14.761187553405762
    5. '	and' → logprob: -15.386187553405762
    6. '   ' → logprob: -16.011186599731445
    7. 'or' → logprob: -16.386186599731445
    8. '<|end|>' → logprob: -16.511186599731445
    9. ' ' → logprob: -16.886186599731445
    10. '       ' → logprob: -17.136186599731445

Token 453: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.008614926598966122
    2. ' W' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.883614540100098
    4. '  ' → logprob: -16.383615493774414
    5. ' ' → logprob: -17.258615493774414
    6. '	W' → logprob: -18.508615493774414
    7. '    ' → logprob: -19.258615493774414
    8. '       ' → logprob: -20.258615493774414
    9. '     ' → logprob: -21.758615493774414
    10. 'w' → logprob: -22.508615493774414

Token 454: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868773579597473
    2. '==' → logprob: -1.1368772983551025
    3. ')==' → logprob: -12.636877059936523
    4. ' ' → logprob: -14.386877059936523
    5. '=' → logprob: -14.511877059936523
    6. '<|end|>' → logprob: -14.511877059936523
    7. '()==' → logprob: -14.636877059936523
    8. ']==' → logprob: -15.261877059936523
    9. '==
' → logprob: -15.886877059936523
    10. '0' → logprob: -15.886877059936523

Token 455: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -19.875011444091797
    4. '```' → logprob: -20.625011444091797
    5. '<|end|>' → logprob: -21.000011444091797
    6. '   ' → logprob: -21.312511444091797
    7. '  ' → logprob: -21.625011444091797
    8. ' ' → logprob: -21.937511444091797
    9. '০' → logprob: -22.125011444091797
    10. '=' → logprob: -22.437511444091797

Token 456: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -19.625001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '```' → logprob: -20.625001907348633
    6. '<|end|>' → logprob: -21.000001907348633
    7. '=' → logprob: -21.125001907348633
    8. '০' → logprob: -21.562501907348633
    9. '०' → logprob: -21.625001907348633
    10. '  ' → logprob: -21.937501907348633

Token 457: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28673169016838074
    2. ':
' → logprob: -1.4117317199707031
    3. '           ' → logprob: -5.286731719970703
    4. '       ' → logprob: -7.786731719970703
    5. ':return' → logprob: -9.786731719970703
    6. '   ' → logprob: -10.661731719970703
    7. '():
' → logprob: -12.661731719970703
    8. ':
' → logprob: -12.911731719970703
    9. '):
' → logprob: -13.286731719970703
    10. ',' → logprob: -13.911731719970703

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021140782337170094
    2. ':' → logprob: -8.750211715698242
    3. ':
' → logprob: -10.125211715698242
    4. '       ' → logprob: -12.375211715698242
    5. ' break' → logprob: -12.500211715698242
    6. '		' → logprob: -13.250211715698242
    7. '          ' → logprob: -14.000211715698242
    8. '	       ' → logprob: -14.625211715698242
    9. 'break' → logprob: -14.875211715698242
    10. '               ' → logprob: -14.875211715698242

Token 459: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.28185221552848816
    2. '           ' → logprob: -1.7818522453308105
    3. ' break' → logprob: -3.0318522453308105
    4. 'return' → logprob: -3.6568522453308105
    5. '       ' → logprob: -5.9068522453308105
    6. ' return' → logprob: -8.031851768493652
    7. '	break' → logprob: -9.281851768493652
    8. '               ' → logprob: -9.781851768493652
    9. '   ' → logprob: -10.531851768493652
    10. '```' → logprob: -11.031851768493652

Token 460: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24196948111057281
    2. '
' → logprob: -1.7419694662094116
    3. '<|end|>' → logprob: -3.366969585418701
    4. '        
' → logprob: -5.741969585418701
    5. '  
' → logprob: -6.991969585418701
    6. '    
' → logprob: -7.991969585418701
    7. '   ' → logprob: -8.241969108581543
    8. '<|end|>' → logprob: -8.616969108581543
    9. '
' → logprob: -9.116969108581543
    10. ',' → logprob: -9.866969108581543

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001599248731508851
    2. '   ' → logprob: -7.251599311828613
    3. '<|end|>' → logprob: -8.126599311828613
    4. '```' → logprob: -8.626599311828613
    5. '
' → logprob: -8.751599311828613
    6. 'print' → logprob: -8.876599311828613
    7. '        
' → logprob: -9.501599311828613
    8. '    
' → logprob: -11.251599311828613
    9. '  
' → logprob: -11.251599311828613
    10. ' print' → logprob: -12.376599311828613

Token 462: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03647135943174362
    2. '       ' → logprob: -3.661471366882324
    3. ' print' → logprob: -4.661471366882324
    4. 'result' → logprob: -7.411471366882324
    5. ' result' → logprob: -10.411471366882324
    6. '   ' → logprob: -11.161471366882324
    7. 'count' → logprob: -11.286471366882324
    8. '```' → logprob: -12.661471366882324
    9. '        
' → logprob: -14.286471366882324
    10. 'output' → logprob: -14.536471366882324

Token 463: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.014168919064104557
    2. '(' → logprob: -4.264168739318848
    3. 'count' → logprob: -12.889168739318848
    4. '(
' → logprob: -13.014168739318848
    5. '()' → logprob: -15.264168739318848
    6. '=count' → logprob: -15.764168739318848
    7. ' (' → logprob: -16.389169692993164
    8. '(f' → logprob: -16.514169692993164
    9. '(c' → logprob: -16.764169692993164
    10. ' count' → logprob: -16.764169692993164

Token 464: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.165027217415627e-05
    2. '_' → logprob: -10.750021934509277
    3. ' _' → logprob: -16.50002098083496
    4. ')_' → logprob: -18.87502098083496
    5. '_s' → logprob: -19.37502098083496
    6. 'count' → logprob: -19.62502098083496
    7. ')' → logprob: -20.00002098083496
    8. '_count' → logprob: -20.50002098083496
    9. '(count' → logprob: -20.62502098083496
    10. '(' → logprob: -20.87502098083496

Token 465: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0018010808853432536
    2. '_t' → logprob: -6.501801013946533
    3. '_' → logprob: -8.626801490783691
    4. 't' → logprob: -9.376801490783691
    5. '_at' → logprob: -11.376801490783691
    6. 'a' → logprob: -12.251801490783691
    7. 'tat' → logprob: -12.501801490783691
    8. 'atim' → logprob: -12.751801490783691
    9. 'atat' → logprob: -13.001801490783691
    10. 'ат' → logprob: -13.626801490783691

Token 466: 'ami' (ID: 4938)
  Prédit: 'ami'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ami' → logprob: -0.0011096131056547165
    2. '_' → logprob: -7.626109600067139
    3. '_t' → logprob: -8.001110076904297
    4. 'a' → logprob: -9.251110076904297
    5. 't' → logprob: -9.751110076904297
    6. 'at' → logprob: -10.251110076904297
    7. 'am' → logprob: -10.626110076904297
    8. 'i' → logprob: -10.876110076904297
    9. 'r' → logprob: -10.876110076904297
    10. 's' → logprob: -12.251110076904297

Token 467: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '_places' → logprob: -15.5
    3. 'placements' → logprob: -16.125
    4. 'Plac' → logprob: -18.375
    5. '_place' → logprob: -19.125
    6. ' _' → logprob: -19.375
    7. ' placements' → logprob: -19.625
    8. '_positions' → logprob: -19.625
    9. '_
' → logprob: -20.25
    10. ')_' → logprob: -20.375

Token 468: 'placements' (ID: 72793)
  Prédit: 'placements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placements' → logprob: -2.45848218582978e-06
    2. ' placements' → logprob: -13.00000286102295
    3. 'plac' → logprob: -16.125001907348633
    4. 'places' → logprob: -18.500001907348633
    5. 'Plac' → logprob: -20.625001907348633
    6. 'pla' → logprob: -21.375001907348633
    7. 'placement' → logprob: -22.125001907348633
    8. 'positions' → logprob: -22.250001907348633
    9. '```' → logprob: -22.375001907348633
    10. '_' → logprob: -23.125001907348633

Token 469: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.6047699318733066e-05
    2. '(' → logprob: -11.125016212463379
    3. ')' → logprob: -14.000016212463379
    4. ' (' → logprob: -15.250016212463379
    5. ')(' → logprob: -15.625016212463379
    6. '((' → logprob: -16.500015258789062
    7. '(
' → logprob: -18.000015258789062
    8. 'H' → logprob: -18.250015258789062
    9. '   ' → logprob: -19.250015258789062
    10. '(h' → logprob: -21.000015258789062

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004104285035282373
    2. ',W' → logprob: -5.504104137420654
    3. ' ,' → logprob: -10.754104614257812
    4. ',H' → logprob: -12.379104614257812
    5. ',w' → logprob: -15.254104614257812
    6. ',
' → logprob: -16.004104614257812
    7. 'W' → logprob: -18.504104614257812
    8. '，' → logprob: -19.129104614257812
    9. ',
' → logprob: -19.129104614257812
    10. ',K' → logprob: -19.129104614257812

Token 471: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00033558503491804004
    2. ' W' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.250335693359375
    4. ')' → logprob: -19.000335693359375
    5. ' ' → logprob: -19.375335693359375
    6. '```' → logprob: -19.625335693359375
    7. '	W' → logprob: -19.750335693359375
    8. '  ' → logprob: -20.125335693359375
    9. '    ' → logprob: -20.500335693359375
    10. '<W' → logprob: -21.000335693359375

Token 472: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1002139002084732
    2. ')' → logprob: -2.3502140045166016
    3. ')))' → logprob: -12.725214004516602
    4. ' ))' → logprob: -13.475214004516602
    5. '))
' → logprob: -13.850214004516602
    6. '   ' → logprob: -14.100214004516602
    7. '()))' → logprob: -15.850214004516602
    8. '),' → logprob: -15.850214004516602
    9. ' )' → logprob: -15.975214004516602
    10. '**' → logprob: -16.2252140045166

Token 473: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04083681479096413
    2. '
' → logprob: -3.540836811065674
    3. '```' → logprob: -5.040836811065674
    4. 'count' → logprob: -6.415836811065674
    5. '<|end|>' → logprob: -6.790836811065674
    6. 'main' → logprob: -7.540836811065674
    7. '\n' → logprob: -7.540836811065674
    8. ' if' → logprob: -8.040837287902832
    9. 'print' → logprob: -9.040837287902832
    10. '``' → logprob: -9.665837287902832

Token 474: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0643688514828682
    2. '__' → logprob: -2.814368963241577
    3. '_' → logprob: -6.189368724822998
    4. '_name' → logprob: -8.939369201660156
    5. ' ' → logprob: -8.939369201660156
    6. ' _' → logprob: -9.564369201660156
    7. ' ' → logprob: -12.439369201660156
    8. '___' → logprob: -12.939369201660156
    9. ' ' → logprob: -12.939369201660156
    10. 'name' → logprob: -13.939369201660156

Token 475: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.030861223116517067
    2. '==' → logprob: -4.0308613777160645
    3. ' ==' → logprob: -4.4058613777160645
    4. '__.__' → logprob: -9.530860900878906
    5. '.__' → logprob: -9.905860900878906
    6. '=="' → logprob: -9.905860900878906
    7. '[' → logprob: -9.905860900878906
    8. '__[' → logprob: -10.030860900878906
    9. ' __' → logprob: -10.405860900878906
    10. '=='' → logprob: -10.405860900878906

Token 476: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.893480243277736e-05
    2. '==' → logprob: -10.250039100646973
    3. '__.__' → logprob: -12.750039100646973
    4. '___' → logprob: -15.625039100646973
    5. '=="' → logprob: -16.375038146972656
    6. '____' → logprob: -16.500038146972656
    7. ' ==' → logprob: -16.500038146972656
    8. '__('' → logprob: -17.000038146972656
    9. '```' → logprob: -17.125038146972656
    10. '_' → logprob: -17.125038146972656

Token 477: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013896209187805653
    2. '==' → logprob: -4.3888959884643555
    3. ' ==' → logprob: -6.7638959884643555
    4. '__.__' → logprob: -9.013895988464355
    5. '=="' → logprob: -10.013895988464355
    6. '=='' → logprob: -10.388895988464355
    7. '_' → logprob: -11.638895988464355
    8. '.__' → logprob: -12.138895988464355
    9. '___' → logprob: -12.888895988464355
    10. '=' → logprob: -13.263895988464355

Token 478: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47410327196121216
    2. ''' → logprob: -0.9741032719612122
    3. '__' → logprob: -10.724102973937988
    4. ' "__' → logprob: -12.849102973937988
    5. ' '__' → logprob: -14.474102973937988
    6. '"user' → logprob: -14.849102973937988
    7. ''user' → logprob: -15.974102973937988
    8. ''s' → logprob: -16.349103927612305
    9. '"name' → logprob: -16.599103927612305
    10. ''post' → logprob: -16.599103927612305

Token 479: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.010209664702415466
    2. '__' → logprob: -4.635209560394287
    3. '"' → logprob: -7.885209560394287
    4. ''' → logprob: -10.135210037231445
    5. 'name' → logprob: -10.385210037231445
    6. 'python' → logprob: -12.385210037231445
    7. 'built' → logprob: -14.510210037231445
    8. '```' → logprob: -14.635210037231445
    9. ' main' → logprob: -14.885210037231445
    10. '_main' → logprob: -15.260210037231445

Token 480: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10131078213453293
    2. '__' → logprob: -2.3513107299804688
    3. '__':
' → logprob: -6.851310729980469
    4. '__.__' → logprob: -11.226310729980469
    5. '__["' → logprob: -11.351310729980469
    6. '__.' → logprob: -11.351310729980469
    7. '__:' → logprob: -12.851310729980469
    8. '__
' → logprob: -12.976310729980469
    9. '__",' → logprob: -13.851310729980469
    10. '__
' → logprob: -14.226310729980469

Token 481: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1203499361872673
    2. '   ' → logprob: -2.995349884033203
    3. '__' → logprob: -3.245349884033203
    4. ' main' → logprob: -3.745349884033203
    5. '    
' → logprob: -8.370349884033203
    6. '	main' → logprob: -8.495349884033203
    7. '_main' → logprob: -9.120349884033203
    8. ' __' → logprob: -9.620349884033203
    9. ' ' → logprob: -10.245349884033203
    10. '<|end|>' → logprob: -10.495349884033203

Token 482: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0040801819413900375
    2. ' main' → logprob: -5.504080295562744
    3. '   ' → logprob: -13.754079818725586
    4. '	main' → logprob: -14.129079818725586
    5. '_main' → logprob: -19.879079818725586
    6. '(main' → logprob: -20.129079818725586
    7. 'ma' → logprob: -20.754079818725586
    8. 'm' → logprob: -20.754079818725586
    9. ' ' → logprob: -21.004079818725586
    10. '.main' → logprob: -21.129079818725586

Token 483: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 481
Tokens correctement prédits (1ère position, stricte): 175
Tokens correctement prédits (1ère position, avec adaptation): 188
Tokens correctement prédits (top 10): 384
Précision stricte (1ère position): 36.38%
Précision adaptée (1ère position): 39.09%
Précision (top 10): 79.83%
================================================================================
