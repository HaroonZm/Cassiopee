================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:20:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

def solve():
    input = sys.stdin.readline
    while True:
        n = input()
        if not n:
            break
        n = n.strip()
        if n == '0':
            break
        n = int(n)
        a = list(map(int, input().split()))
        b = list(map(int, input().split()))
        # precompute ladder tops for each floor and side
        def ladder_top(building):
            top = [i for i in range(n)]
            i = 0
            while i < n:
                if building[i] == 1:
                    j = i
                    while j +1 < n and building[j+1] ==1:
                        j+=1
                    for k in range(i,j+1):
                        top[k] = j
                    i = j+1
                else:
                    i+=1
            return top

        top_a = ladder_top(a)
        top_b = ladder_top(b)

        # Next position after landing on a floor with wall type:
        # for normal wall(0): stay same floor
        # for ladder(1): go to ladder top floor
        # for slippery(2): slide down to floor with normal(0) or ladder's top floor on that side
        # sliding applies to wall landed on not to launch wall
        def next_floor(side,floor):
            # side: 0 or 1
            if side==0:
                w = a[floor]
                t = top_a[floor]
            else:
                w = b[floor]
                t = top_b[floor]
            if w==0:
                return floor
            elif w==1:
                return t
            else: # 2 slippery
                # slide down until normal(0) or ladder top floor
                # but must slide to a floor <= current floor
                # sliding means fall down on same side to a floor with wall 0 or 1
                curr = floor
                while curr>0:
                    if side==0:
                        if a[curr-1]!=2:
                            # if ladder, move to its top
                            if a[curr-1]==1:
                                return top_a[curr-1]
                            else:
                                return curr-1
                    else:
                        if b[curr-1]!=2:
                            if b[curr-1]==1:
                                return top_b[curr-1]
                            else:
                                return curr-1
                    curr-=1
                return 0 # if nothing found, slide to floor 0

        # State: (side, floor)
        # side 0 or 1
        # start from (0,0) or (1,0)
        # can jump to other side floor f,f+1,f+2 if valid floor<n
        # after jump, apply wall effect next_floor
        q=deque()
        visited=[[False]*n for _ in range(2)]
        # start positions
        for side in (0,1):
            nf=next_floor(side,0)
            if not visited[side][nf]:
                visited[side][nf]=True
                q.append((side,nf,1)) # jump count=1 (first jump from floor 1 to other building?)
        ans=-1
        # BFS
        while q:
            side,floor,jumps = q.popleft()
            if floor==n-1:
                ans=jumps
                break
            other = 1-side
            for df in (0,1,2):
                nf = floor+df
                if nf>=n:
                    continue
                nf2=next_floor(other,nf)
                if not visited[other][nf2]:
                    visited[other][nf2]=True
                    q.append((other,nf2,jumps+1))
        print(ans if ans!=-1 else "NA")

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.35011377930641174
    2. 'import' → logprob: -1.2251137495040894
    3. '.' → logprob: -6.475113868713379
    4. ' ' → logprob: -10.225113868713379
    5. '```' → logprob: -10.225113868713379
    6. '.Counter' → logprob: -11.350113868713379
    7. '.import' → logprob: -11.475113868713379
    8. '	import' → logprob: -11.850113868713379
    9. ' defaultdict' → logprob: -12.225113868713379
    10. ' .' → logprob: -13.100113868713379

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2895837128162384
    2. ' deque' → logprob: -1.664583683013916
    3. ' abc' → logprob: -3.039583683013916
    4. 'deque' → logprob: -4.539583683013916
    5. 'abc' → logprob: -6.414583683013916
    6. ' Counter' → logprob: -6.914583683013916
    7. ' named' → logprob: -7.289583683013916
    8. ' Ordered' → logprob: -9.914584159851074
    9. 'default' → logprob: -10.039584159851074
    10. ' import' → logprob: -10.039584159851074

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5690986514091492
    2. '
' → logprob: -1.569098711013794
    3. '

' → logprob: -2.069098711013794
    4. '```' → logprob: -3.194098711013794
    5. '\' → logprob: -3.569098711013794
    6. 'import' → logprob: -3.819098711013794
    7. '<|end|>' → logprob: -6.194098472595215
    8. '' → logprob: -6.694098472595215
    9. 'newline' → logprob: -6.694098472595215
    10. '`' → logprob: -7.069098472595215

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1668646335601807
    2. 'b' → logprob: -1.4168646335601807
    3. '`' → logprob: -1.9168646335601807
    4. 'd' → logprob: -2.1668646335601807
    5. '.' → logprob: -3.1668646335601807
    6. '```' → logprob: -3.2918646335601807
    7. 'import' → logprob: -3.6668646335601807
    8. '\' → logprob: -4.291864395141602
    9. 'a' → logprob: -4.541864395141602
    10. 'data' → logprob: -5.041864395141602

Token 9: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.037102989852428436
    2. ' bfs' → logprob: -3.4121029376983643
    3. ' breadth' → logprob: -7.412103176116943
    4. ' BFS' → logprob: -7.537103176116943
    5. ' ' → logprob: -7.787103176116943
    6. ' process' → logprob: -8.037102699279785
    7. ' dfs' → logprob: -8.412102699279785
    8. ' main' → logprob: -8.537102699279785
    9. ' deque' → logprob: -8.787102699279785
    10. ' a' → logprob: -9.162102699279785

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025159848853945732
    2. '():' → logprob: -4.27515983581543
    3. '_' → logprob: -5.40015983581543
    4. ':' → logprob: -6.15015983581543
    5. '```' → logprob: -6.15015983581543
    6. '(:' → logprob: -7.15015983581543
    7. ' (' → logprob: -8.02515983581543
    8. '):' → logprob: -9.40015983581543
    9. '(":' → logprob: -9.77515983581543
    10. '(line' → logprob: -9.77515983581543

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31349173188209534
    2. '```' → logprob: -1.563491702079773
    3. '\' → logprob: -4.0634918212890625
    4. '\n' → logprob: -4.3134918212890625
    5. '    
' → logprob: -4.6884918212890625
    6. '`' → logprob: -5.1884918212890625
    7. 'n' → logprob: -5.9384918212890625
    8. 'input' → logprob: -5.9384918212890625
    9. '    ' → logprob: -6.1884918212890625
    10. 'newline' → logprob: -7.3134918212890625

Token 12: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1439352184534073
    2. ' queue' → logprob: -3.018935203552246
    3. 'n' → logprob: -3.643935203552246
    4. '   ' → logprob: -3.768935203552246
    5. ' input' → logprob: -4.018935203552246
    6. ' q' → logprob: -5.268935203552246
    7. ' import' → logprob: -5.893935203552246
    8. 'input' (adapté à ' input') → logprob: -6.393935203552246
    9. 'queue' → logprob: -6.893935203552246
    10. '    ' → logprob: -7.018935203552246

Token 13: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24195104837417603
    2. '()' → logprob: -1.6169509887695312
    3. '_data' → logprob: -4.741950988769531
    4. '_line' → logprob: -6.116950988769531
    5. '().' → logprob: -6.366950988769531
    6. '_' → logprob: -6.991950988769531
    7. '('' → logprob: -7.491950988769531
    8. 'data' → logprob: -7.866950988769531
    9. '.' → logprob: -7.866950988769531
    10. ' =' → logprob: -8.866950988769531

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.38692763447761536
    2. 'sys' → logprob: -1.136927604675293
    3. 'input' → logprob: -10.511927604675293
    4. '	sys' → logprob: -11.386927604675293
    5. ' input' → logprob: -11.511927604675293
    6. '=sys' → logprob: -12.636927604675293
    7. 'lambda' → logprob: -13.261927604675293
    8. ' lambda' → logprob: -13.761927604675293
    9. '(sys' → logprob: -14.011927604675293
    10. ' ' → logprob: -14.761927604675293

Token 15: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09799517691135406
    2. '.readline' → logprob: -2.7229952812194824
    3. '.stdin' → logprob: -3.5979952812194824
    4. ' .' → logprob: -9.097994804382324
    5. '.read' → logprob: -9.972994804382324
    6. '.stdout' → logprob: -10.097994804382324
    7. '```' → logprob: -10.847994804382324
    8. '.argv' → logprob: -11.222994804382324
    9. '.setdefault' → logprob: -11.597994804382324
    10. '().' → logprob: -11.722994804382324

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008653691969811916
    2. '.read' → logprob: -4.75865364074707
    3. '.readlines' → logprob: -10.63365364074707
    4. '.' → logprob: -11.63365364074707
    5. 'read' → logprob: -13.00865364074707
    6. '.buffer' → logprob: -13.00865364074707
    7. '.stdin' → logprob: -13.88365364074707
    8. '.Read' → logprob: -15.25865364074707
    9. ' readline' → logprob: -16.13365364074707
    10. '```' → logprob: -16.63365364074707

Token 17: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.032093510031700134
    2. '(' → logprob: -3.5320935249328613
    3. '()
' → logprob: -6.532093524932861
    4. '(
' → logprob: -7.532093524932861
    5. '()\' → logprob: -9.532093048095703
    6. '()

' → logprob: -9.907093048095703
    7. ')' → logprob: -9.907093048095703
    8. '   ' → logprob: -10.407093048095703
    9. ' ()' → logprob: -10.407093048095703
    10. '().' → logprob: -10.657093048095703

Token 18: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28736913204193115
    2. '   ' → logprob: -1.4123691320419312
    3. '()
' → logprob: -5.412369251251221
    4. '()\' → logprob: -7.787369251251221
    5. '```' → logprob: -8.037368774414062
    6. '    
' → logprob: -8.787368774414062
    7. '()

' → logprob: -9.037368774414062
    8. '().' → logprob: -9.037368774414062
    9. '(' → logprob: -9.162368774414062
    10. ' ()' → logprob: -9.287368774414062

Token 19: ' while' (ID: 2049)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7330653667449951
    2. '(' → logprob: -1.2330653667449951
    3. '   ' → logprob: -1.9830653667449951
    4. 'n' → logprob: -2.858065366744995
    5. ' data' → logprob: -5.358065605163574
    6. 'd' → logprob: -5.483065605163574
    7. '(n' → logprob: -5.608065605163574
    8. ' n' → logprob: -5.733065605163574
    9. 'for' → logprob: -5.983065605163574
    10. 'x' → logprob: -6.358065605163574

Token 20: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0016498296754434705
    2. 'True' → logprob: -6.501649856567383
    3. '(True' → logprob: -9.001649856567383
    4. ' ' → logprob: -11.001649856567383
    5. ' not' → logprob: -12.001649856567383
    6. ' (' → logprob: -13.751649856567383
    7. '  ' → logprob: -16.001649856567383
    8. '(' → logprob: -16.501649856567383
    9. ' true' → logprob: -16.626649856567383
    10. ' Tru' → logprob: -16.876649856567383

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0076973638497292995
    2. '():' → logprob: -5.007697582244873
    3. ' :' → logprob: -8.132697105407715
    4. '       ' → logprob: -8.882697105407715
    5. '):' → logprob: -8.882697105407715
    6. '   ' → logprob: -9.007697105407715
    7. ':
' → logprob: -9.257697105407715
    8. ':**' → logprob: -9.507697105407715
    9. ',' → logprob: -10.132697105407715
    10. '(' → logprob: -10.632697105407715

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003774789161980152
    2. '    ' → logprob: -6.378774642944336
    3. '        
' → logprob: -7.003774642944336
    4. ' ' → logprob: -7.878774642944336
    5. '   ' → logprob: -8.003774642944336
    6. '      ' → logprob: -9.628774642944336
    7. '        ' → logprob: -9.878774642944336
    8. '<|end|>' → logprob: -10.003774642944336
    9. '(' → logprob: -10.628774642944336
    10. '        
        
' → logprob: -10.878774642944336

Token 23: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.44914329051971436
    2. ' n' → logprob: -1.4491432905197144
    3. 'n' (adapté à ' n') → logprob: -3.199143409729004
    4. 'line' → logprob: -3.449143409729004
    5. '   ' → logprob: -4.449143409729004
    6. ' data' → logprob: -4.574143409729004
    7. ' s' → logprob: -4.574143409729004
    8. 's' → logprob: -4.574143409729004
    9. 'data' → logprob: -4.949143409729004
    10. '       ' → logprob: -6.574143409729004

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008619185537099838
    2. '=' → logprob: -4.75861930847168
    3. ' ' → logprob: -13.00861930847168
    4. '=int' → logprob: -13.13361930847168
    5. ' ==' → logprob: -15.63361930847168
    6. ' =
' → logprob: -16.88361930847168
    7. '=input' → logprob: -17.00861930847168
    8. ',' → logprob: -17.38361930847168
    9. ' >' → logprob: -17.50861930847168
    10. ' :=' → logprob: -17.75861930847168

Token 25: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3338223397731781
    2. 'int' → logprob: -1.3338223695755005
    3. ' input' → logprob: -4.208822250366211
    4. 'input' → logprob: -5.208822250366211
    5. ' ' → logprob: -11.458822250366211
    6. '=int' → logprob: -12.458822250366211
    7. '(int' → logprob: -14.333822250366211
    8. ' n' → logprob: -14.333822250366211
    9. ' sys' → logprob: -14.708822250366211
    10. '<int' → logprob: -14.833822250366211

Token 26: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04870784282684326
    2. '().' → logprob: -3.048707962036133
    3. '(' → logprob: -10.048707962036133
    4. '())' → logprob: -10.548707962036133
    5. '()
' → logprob: -11.298707962036133
    6. '()<' → logprob: -11.673707962036133
    7. ' ()' → logprob: -12.048707962036133
    8. '()>' → logprob: -12.298707962036133
    9. '()

' → logprob: -12.548707962036133
    10. '()(' → logprob: -12.673707962036133

Token 27: '       ' (ID: 309)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.013092941604554653
    2. '.rstrip' → logprob: -4.638092994689941
    3. 'strip' → logprob: -6.138092994689941
    4. '.' → logprob: -7.763092994689941
    5. 'rstrip' → logprob: -8.013092994689941
    6. ' strip' → logprob: -9.138092994689941
    7. '().' → logprob: -9.263092994689941
    8. '()' → logprob: -9.888092994689941
    9. '[:-' → logprob: -10.388092994689941
    10. ')' → logprob: -10.388092994689941

Token 28: ' if' (ID: 538)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.23531848192214966
    2. '       ' → logprob: -1.8603184223175049
    3. ' if' → logprob: -4.360318660736084
    4. '.rstrip' → logprob: -4.360318660736084
    5. 'if' (adapté à ' if') → logprob: -4.735318660736084
    6. '
' → logprob: -5.485318660736084
    7. '\n' → logprob: -5.610318660736084
    8. '   ' → logprob: -5.985318660736084
    9. ')' → logprob: -6.485318660736084
    10. '        
' → logprob: -6.860318660736084

Token 29: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00013500562636181712
    2. ' n' → logprob: -9.62513542175293
    3. 'not' → logprob: -9.62513542175293
    4. 'n' → logprob: -13.50013542175293
    5. ' ' → logprob: -13.75013542175293
    6. '	not' → logprob: -15.75013542175293
    7. ' ' → logprob: -16.37513542175293
    8. ' n't' → logprob: -16.62513542175293
    9. 'n't' → logprob: -17.37513542175293
    10. ' no' → logprob: -19.62513542175293

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0008056987426243722
    2. 'n' → logprob: -7.125805854797363
    3. ' ' → logprob: -13.875805854797363
    4. '	n' → logprob: -15.125805854797363
    5. ' ' → logprob: -16.750804901123047
    6. ')n' → logprob: -17.500804901123047
    7. '(n' → logprob: -18.125804901123047
    8. ' н' → logprob: -18.500804901123047
    9. '_n' → logprob: -19.750804901123047
    10. '/n' → logprob: -20.125804901123047

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.609026312828064
    2. '.strip' → logprob: -0.984026312828064
    3. ':
' → logprob: -2.6090264320373535
    4. ' or' → logprob: -5.6090264320373535
    5. '.rstrip' → logprob: -5.6090264320373535
    6. '.' → logprob: -7.2340264320373535
    7. '.readline' → logprob: -8.234025955200195
    8. ':return' → logprob: -8.484025955200195
    9. ')' → logprob: -10.484025955200195
    10. ' :' → logprob: -10.734025955200195

Token 32: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024316669441759586
    2. '   ' → logprob: -6.752431869506836
    3. '       ' → logprob: -7.377431869506836
    4. ' or' → logprob: -8.502431869506836
    5. ' break' → logprob: -8.752431869506836
    6. ' ' → logprob: -9.502431869506836
    7. ':' → logprob: -9.752431869506836
    8. '\n' → logprob: -10.252431869506836
    9. ',' → logprob: -10.752431869506836
    10. '		' → logprob: -11.627431869506836

Token 33: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024390093982219696
    2. ' break' → logprob: -3.8993899822235107
    3. 'break' (adapté à ' break') → logprob: -6.02439022064209
    4. '       ' → logprob: -7.27439022064209
    5. '   ' → logprob: -7.77439022064209
    6. ' ' → logprob: -8.89939022064209
    7. '               ' → logprob: -9.64939022064209
    8. '	break' → logprob: -10.27439022064209
    9. '```' → logprob: -10.89939022064209
    10. 'return' → logprob: -11.77439022064209

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04180542007088661
    2. '   ' → logprob: -4.541805267333984
    3. '<|end|>' → logprob: -4.791805267333984
    4. '\n' → logprob: -5.041805267333984
    5. '
' → logprob: -5.166805267333984
    6. '    ' → logprob: -6.291805267333984
    7. ' ' → logprob: -6.416805267333984
    8. '        
' → logprob: -6.666805267333984
    9. 'n' → logprob: -7.041805267333984
    10. '\t' → logprob: -7.416805267333984

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002562137378845364
    2. '        
' → logprob: -9.500256538391113
    3. '   ' → logprob: -10.125256538391113
    4. 'n' → logprob: -10.125256538391113
    5. ' n' → logprob: -10.625256538391113
    6. '<|end|>' → logprob: -11.375256538391113
    7. '        ' → logprob: -11.625256538391113
    8. ',' → logprob: -11.750256538391113
    9. '    ' → logprob: -11.750256538391113
    10. '(n' → logprob: -11.875256538391113

Token 36: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.0263375043869019
    2. '       ' → logprob: -1.0263375043869019
    3. ' n' → logprob: -1.2763375043869019
    4. ' =' → logprob: -6.526337623596191
    5. '(n' → logprob: -6.901337623596191
    6. ')n' → logprob: -7.651337623596191
    7. '   ' → logprob: -8.526337623596191
    8. '=' → logprob: -8.526337623596191
    9. '	n' → logprob: -9.026337623596191
    10. '\' → logprob: -9.151337623596191

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47432488203048706
    2. ' =' → logprob: -0.9743248820304871
    3. '=int' → logprob: -8.349325180053711
    4. '.strip' → logprob: -11.849325180053711
    5. '.' → logprob: -13.474325180053711
    6. ')' → logprob: -13.724325180053711
    7. 'int' → logprob: -15.099325180053711
    8. '.rstrip' → logprob: -15.349325180053711
    9. '＝' → logprob: -15.849325180053711
    10. '=

' → logprob: -16.09932518005371

Token 38: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038290027529001236
    2. ' int' → logprob: -3.288290023803711
    3. 'n' → logprob: -8.413290023803711
    4. ' n' → logprob: -10.538290023803711
    5. '=int' → logprob: -16.41329002380371
    6. '(int' → logprob: -18.28829002380371
    7. 'in' → logprob: -18.66329002380371
    8. ' ' → logprob: -19.16329002380371
    9. '```' → logprob: -19.53829002380371
    10. ':int' → logprob: -19.66329002380371

Token 39: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.01972147822380066
    2. '.rstrip' → logprob: -4.144721508026123
    3. '.' → logprob: -5.644721508026123
    4. 'strip' → logprob: -9.644721031188965
    5. 'rstrip' → logprob: -10.019721031188965
    6. ' .' → logprob: -10.644721031188965
    7. '[:-' → logprob: -12.269721031188965
    8. ' strip' → logprob: -12.644721031188965
    9. '.readline' → logprob: -13.269721031188965
    10. '.chomp' → logprob: -15.144721031188965

Token 40: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006115250871516764
    2. '(' → logprob: -7.500611305236816
    3. '()
' → logprob: -10.750611305236816
    4. '('' → logprob: -11.625611305236816
    5. '()`' → logprob: -11.625611305236816
    6. '().' → logprob: -12.875611305236816
    7. ')' → logprob: -12.875611305236816
    8. '())' → logprob: -12.875611305236816
    9. '()<' → logprob: -13.375611305236816
    10. '()==' → logprob: -13.750611305236816

Token 41: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7416192889213562
    2. '       ' → logprob: -1.741619348526001
    3. 'if' → logprob: -1.866619348526001
    4. '<|end|>' → logprob: -2.116619348526001
    5. '<|end|>' → logprob: -3.616619348526001
    6. '   ' → logprob: -3.741619348526001
    7. '
' → logprob: -4.616619110107422
    8. '=' → logprob: -5.866619110107422
    9. '\n' → logprob: -6.116619110107422
    10. ' =' → logprob: -6.491619110107422

Token 42: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16084545850753784
    2. 'if' (adapté à ' if') → logprob: -1.9108455181121826
    3. '       ' → logprob: -8.660845756530762
    4. 'n' → logprob: -9.035845756530762
    5. 'i' → logprob: -9.160845756530762
    6. ' i' → logprob: -9.410845756530762
    7. ' n' → logprob: -9.910845756530762
    8. '```' → logprob: -10.160845756530762
    9. '   ' → logprob: -10.285845756530762
    10. ' ' → logprob: -12.035845756530762

Token 43: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07953361421823502
    2. ' n' → logprob: -2.579533576965332
    3. 'n' → logprob: -7.954533576965332
    4. 'not' → logprob: -8.204533576965332
    5. ' ' → logprob: -11.329533576965332
    6. 'n't' → logprob: -12.454533576965332
    7. ' n't' → logprob: -13.704533576965332
    8. ' ' → logprob: -14.204533576965332
    9. ' int' → logprob: -14.579533576965332
    10. '!' → logprob: -15.329533576965332

Token 44: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0796784907579422
    2. '==' → logprob: -2.579678535461426
    3. ')' → logprob: -7.954678535461426
    4. '=' → logprob: -8.829678535461426
    5. ' ' → logprob: -9.454678535461426
    6. ' =' → logprob: -10.204678535461426
    7. ')==' → logprob: -10.329678535461426
    8. '=='' → logprob: -10.454678535461426
    9. ' ===' → logprob: -10.954678535461426
    10. ' =='' → logprob: -11.204678535461426

Token 45: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02887393720448017
    2. '"' → logprob: -3.653873920440674
    3. ' '' → logprob: -6.153873920440674
    4. '0' → logprob: -7.903873920440674
    5. ' ' → logprob: -10.403874397277832
    6. ' "' → logprob: -11.903874397277832
    7. ''end' → logprob: -12.028874397277832
    8. ''#' → logprob: -12.278874397277832
    9. '''' → logprob: -12.653874397277832
    10. ''O' → logprob: -12.653874397277832

Token 46: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4294849932193756
    2. '0' → logprob: -1.0544849634170532
    3. '"' → logprob: -7.679484844207764
    4. '''' → logprob: -8.929485321044922
    5. ' ' → logprob: -9.554485321044922
    6. ' '' → logprob: -9.679485321044922
    7. '```' → logprob: -11.804485321044922
    8. ''end' → logprob: -11.929485321044922
    9. '   ' → logprob: -12.554485321044922
    10. ''\' → logprob: -12.679485321044922

Token 47: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.21868698298931122
    2. '\n' → logprob: -2.093687057495117
    3. '':
' → logprob: -2.718687057495117
    4. ''' → logprob: -5.218687057495117
    5. ':' → logprob: -6.843687057495117
    6. '':
' → logprob: -7.343687057495117
    7. ':
' → logprob: -10.593687057495117
    8. '\r' → logprob: -10.718687057495117
    9. '":' → logprob: -11.343687057495117
    10. '
' → logprob: -11.843687057495117

Token 48: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6964147090911865
    2. '           ' → logprob: -0.6964147090911865
    3. ' break' → logprob: -6.571414947509766
    4. '   ' → logprob: -6.821414947509766
    5. ':' → logprob: -8.571414947509766
    6. '        ' → logprob: -9.071414947509766
    7. '      ' → logprob: -9.321414947509766
    8. ' ' → logprob: -9.571414947509766
    9. '     ' → logprob: -9.821414947509766
    10. '          ' → logprob: -9.946414947509766

Token 49: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.1587463766336441
    2. '       ' → logprob: -2.4087464809417725
    3. '           ' → logprob: -3.4087464809417725
    4. 'break' (adapté à ' break') → logprob: -3.7837464809417725
    5. ' return' → logprob: -7.783746242523193
    6. '   ' → logprob: -8.908746719360352
    7. 'return' → logprob: -8.908746719360352
    8. '	break' → logprob: -9.283746719360352
    9. '\n' → logprob: -9.783746719360352
    10. '```' → logprob: -10.033746719360352

Token 50: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06873020529747009
    2. '<|end|>' → logprob: -2.943730115890503
    3. '        
' → logprob: -5.568730354309082
    4. '\' → logprob: -5.943730354309082
    5. '\n' → logprob: -6.193730354309082
    6. '
' → logprob: -6.193730354309082
    7. '<|end|>' → logprob: -7.068730354309082
    8. '   ' → logprob: -7.193730354309082
    9. ')' → logprob: -7.818730354309082
    10. '    
' → logprob: -8.443730354309082

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03532405570149422
    2. '        
' → logprob: -3.9103240966796875
    3. '<|end|>' → logprob: -4.4103240966796875
    4. '        ' → logprob: -7.0353240966796875
    5. '
' → logprob: -7.2853240966796875
    6. '    ' → logprob: -8.910324096679688
    7. '<|end|>' → logprob: -9.035324096679688
    8. '\n' → logprob: -9.035324096679688
    9. '   ' → logprob: -9.160324096679688
    10. '\' → logprob: -9.410324096679688

Token 52: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5925807952880859
    2. ' numbers' → logprob: -1.717580795288086
    3. ' queue' → logprob: -2.467580795288086
    4. '   ' → logprob: -3.342580795288086
    5. 'numbers' → logprob: -3.467580795288086
    6. 'queue' → logprob: -3.842580795288086
    7. 'n' (adapté à ' n') → logprob: -4.592580795288086
    8. ' deck' → logprob: -4.717580795288086
    9. ' n' → logprob: -4.967580795288086
    10. 's' → logprob: -5.217580795288086

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2523152232170105
    2. '=' → logprob: -1.5023152828216553
    3. 'deque' → logprob: -8.377315521240234
    4. '=int' → logprob: -10.002315521240234
    5. '_len' → logprob: -10.627315521240234
    6. ' ' → logprob: -11.627315521240234
    7. ' +=' → logprob: -11.627315521240234
    8. '_' → logprob: -11.627315521240234
    9. '_de' → logprob: -11.752315521240234
    10. ' deque' → logprob: -12.127315521240234

Token 54: ' int' (ID: 677)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.709275484085083
    2. ' int' → logprob: -1.209275484085083
    3. 'deque' → logprob: -2.084275484085083
    4. ' list' → logprob: -2.709275484085083
    5. 'int' → logprob: -4.584275245666504
    6. ' n' → logprob: -5.459275245666504
    7. 'list' → logprob: -5.959275245666504
    8. ' [' → logprob: -7.584275245666504
    9. 'n' → logprob: -8.334275245666504
    10. ' ' → logprob: -8.584275245666504

Token 55: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20143447816371918
    2. '(' → logprob: -1.7014344930648804
    3. ' (' → logprob: -10.951434135437012
    4. '(
' → logprob: -14.076434135437012
    5. '()' → logprob: -14.201434135437012
    6. ')' → logprob: -14.826434135437012
    7. '(nn' → logprob: -14.826434135437012
    8. '('' → logprob: -15.201434135437012
    9. ' ' → logprob: -15.826434135437012
    10. '(int' → logprob: -16.201435089111328

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0052899690344929695
    2. ' )' → logprob: -5.2552900314331055
    3. ')
' → logprob: -10.505290031433105
    4. '       ' → logprob: -11.380290031433105
    5. '`)' → logprob: -11.755290031433105
    6. '))' → logprob: -12.630290031433105
    7. ')`' → logprob: -14.130290031433105
    8. '   ' → logprob: -14.380290031433105
    9. ' )
' → logprob: -14.380290031433105
    10. '[' → logprob: -14.380290031433105

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06301397830247879
    2. '        ' → logprob: -3.438014030456543
    3. '        
' → logprob: -4.188014030456543
    4. ' ' → logprob: -5.438014030456543
    5. '<|end|>' → logprob: -6.063014030456543
    6. '    ' → logprob: -6.313014030456543
    7. '   ' → logprob: -6.688014030456543
    8. 'queue' → logprob: -7.188014030456543
    9. ' 
' → logprob: -7.938014030456543
    10. '      ' → logprob: -8.063014030456543

Token 58: ' a' (ID: 261)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.4300338923931122
    2. ' deck' → logprob: -2.8050339221954346
    3. 'q' → logprob: -3.0550339221954346
    4. ' q' → logprob: -3.0550339221954346
    5. 'queue' → logprob: -3.1800339221954346
    6. ' dq' → logprob: -3.1800339221954346
    7. ' graph' → logprob: -4.0550336837768555
    8. ' cards' → logprob: -4.4300336837768555
    9. 'dq' → logprob: -4.5550336837768555
    10. '   ' → logprob: -4.9300336837768555

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007698075845837593
    2. '=' → logprob: -5.632698059082031
    3. 'rr' → logprob: -5.882698059082031
    4. 'rray' → logprob: -7.507698059082031
    5. 'deque' → logprob: -8.257698059082031
    6. 'r' → logprob: -8.882698059082031
    7. '_queue' → logprob: -9.507698059082031
    8. ' ' → logprob: -9.632698059082031
    9. 'rg' → logprob: -9.757698059082031
    10. ',' → logprob: -11.007698059082031

Token 60: ' list' (ID: 1562)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.2519598603248596
    2. 'deque' → logprob: -1.5019598007202148
    3. ' [' → logprob: -11.001959800720215
    4. ' de' → logprob: -12.626959800720215
    5. '	de' → logprob: -13.001959800720215
    6. ' ' → logprob: -13.001959800720215
    7. ' list' → logprob: -13.626959800720215
    8. '[' → logprob: -13.626959800720215
    9. 'de' → logprob: -13.626959800720215
    10. 'Deque' → logprob: -14.501959800720215

Token 61: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.3608494699001312
    2. '(' → logprob: -1.3608494997024536
    3. '(de' → logprob: -3.485849380493164
    4. '(map' → logprob: -4.235849380493164
    5. '()' → logprob: -6.860849380493164
    6. '(int' → logprob: -9.735849380493164
    7. '(deck' → logprob: -9.735849380493164
    8. '(queue' → logprob: -9.860849380493164
    9. '([' → logprob: -10.360849380493164
    10. '(input' → logprob: -10.735849380493164

Token 62: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.030047597363591194
    2. '(' → logprob: -3.530047655105591
    3. '(str' → logprob: -8.280047416687012
    4. '(lambda' → logprob: -10.655047416687012
    5. ')' → logprob: -11.780047416687012
    6. '(float' → logprob: -12.655047416687012
    7. '(
' → logprob: -12.655047416687012
    8. '(eval' → logprob: -13.530047416687012
    9. '(input' → logprob: -13.905047416687012
    10. 'int' → logprob: -14.155047416687012

Token 63: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25632166862487793
    2. '(' → logprob: -2.131321668624878
    3. ',input' → logprob: -2.381321668624878
    4. ',' → logprob: -4.256321907043457
    5. 'input' → logprob: -7.881321907043457
    6. '(
' → logprob: -9.256321907043457
    7. ' ,' → logprob: -9.631321907043457
    8. ',(' → logprob: -9.631321907043457
    9. '(),' → logprob: -10.006321907043457
    10. ' (' → logprob: -10.131321907043457

Token 64: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.42872557044029236
    2. 'input' → logprob: -1.0537256002426147
    3. ' sys' → logprob: -11.803725242614746
    4. '(input' → logprob: -12.303725242614746
    5. 'sys' → logprob: -12.803725242614746
    6. '	input' → logprob: -13.178725242614746
    7. ' ' → logprob: -13.303725242614746
    8. ',input' → logprob: -13.303725242614746
    9. ')' → logprob: -13.428725242614746
    10. '   ' → logprob: -14.053725242614746

Token 65: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00021331508469302207
    2. '()' → logprob: -8.500213623046875
    3. '(' → logprob: -12.125213623046875
    4. ' ().' → logprob: -12.750213623046875
    5. '.readline' → logprob: -15.000213623046875
    6. '()
' → logprob: -15.750213623046875
    7. ')' → logprob: -15.875213623046875
    8. '())' → logprob: -16.250213623046875
    9. '()))' → logprob: -16.500213623046875
    10. ' .' → logprob: -16.625213623046875

Token 66: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5761834979057312
    2. 'strip' → logprob: -0.8261834979057312
    3. 'rstrip' → logprob: -8.326183319091797
    4. ' strip' → logprob: -13.826183319091797
    5. ' split' → logprob: -14.201183319091797
    6. '(split' → logprob: -15.326183319091797
    7. 'spl' → logprob: -17.326183319091797
    8. 'read' → logprob: -17.451183319091797
    9. '(strip' → logprob: -18.326183319091797
    10. 'rs' → logprob: -19.701183319091797

Token 67: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07204274833202362
    2. '())' → logprob: -3.57204270362854
    3. '()' → logprob: -3.82204270362854
    4. '))' → logprob: -4.322042942047119
    5. '(' → logprob: -5.197042942047119
    6. ')' → logprob: -7.447042942047119
    7. '()))
' → logprob: -9.947042465209961
    8. '()));' → logprob: -10.572042465209961
    9. '())))' → logprob: -10.697042465209961
    10. '('' → logprob: -12.072042465209961

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044266920536756516
    2. '        
' → logprob: -4.044266700744629
    3. '<|end|>' → logprob: -5.294266700744629
    4. ')' → logprob: -5.669266700744629
    5. '        ' → logprob: -5.669266700744629
    6. '   ' → logprob: -5.794266700744629
    7. ' ' → logprob: -6.044266700744629
    8. 's' → logprob: -6.419266700744629
    9. '    ' → logprob: -7.044266700744629
    10. '
' → logprob: -7.794266700744629

Token 69: ' b' (ID: 287)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.23609551787376404
    2. ' stack' → logprob: -2.861095428466797
    3. 's' → logprob: -3.361095428466797
    4. 'd' → logprob: -4.611095428466797
    5. 'dq' → logprob: -4.736095428466797
    6. ' if' → logprob: -4.861095428466797
    7. '       ' → logprob: -4.986095428466797
    8. ' stk' → logprob: -4.986095428466797
    9. ' s' → logprob: -5.236095428466797
    10. 'q' → logprob: -5.236095428466797

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011708177626132965
    2. '=' → logprob: -6.751170635223389
    3. ',' → logprob: -15.626171112060547
    4. ' ' → logprob: -16.126171112060547
    5. 'space' → logprob: -16.751171112060547
    6. ' ' → logprob: -16.751171112060547
    7. '=[]' → logprob: -16.876171112060547
    8. '.' → logprob: -17.501171112060547
    9. '_space' → logprob: -17.751171112060547
    10. '	' → logprob: -17.751171112060547

Token 71: ' list' (ID: 1562)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.4313722848892212
    2. 'deque' → logprob: -1.0563722848892212
    3. ' list' → logprob: -7.181372165679932
    4. ' [' → logprob: -7.306372165679932
    5. ' []' → logprob: -7.806372165679932
    6. ' a' → logprob: -8.05637264251709
    7. '[]' → logprob: -8.68137264251709
    8. '[' → logprob: -9.05637264251709
    9. 'a' → logprob: -9.80637264251709
    10. ' de' → logprob: -10.05637264251709

Token 72: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.252029150724411
    2. '(map' → logprob: -1.5020291805267334
    3. '(int' → logprob: -9.502029418945312
    4. ' (' → logprob: -11.377029418945312
    5. '(
' → logprob: -12.377029418945312
    6. '(m' → logprob: -13.752029418945312
    7. '((' → logprob: -13.877029418945312
    8. '(list' → logprob: -13.877029418945312
    9. '(

' → logprob: -14.002029418945312
    10. '(range' → logprob: -14.252029418945312

Token 73: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002752790169324726
    2. '(' → logprob: -8.375275611877441
    3. '<int' → logprob: -11.000275611877441
    4. '=int' → logprob: -11.750275611877441
    5. ']int' → logprob: -12.375275611877441
    6. ',int' → logprob: -12.500275611877441
    7. 'int' → logprob: -12.625275611877441
    8. '[int' → logprob: -12.875275611877441
    9. ')' → logprob: -13.000275611877441
    10. '<|end|>' → logprob: -13.375275611877441

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01732313260436058
    2. ',int' → logprob: -4.392323017120361
    3. '(int' → logprob: -5.392323017120361
    4. ',input' → logprob: -8.89232349395752
    5. ' ,' → logprob: -10.26732349395752
    6. '(' → logprob: -10.39232349395752
    7. 'int' → logprob: -10.51732349395752
    8. '<int' → logprob: -12.26732349395752
    9. '(input' → logprob: -12.26732349395752
    10. '```' → logprob: -12.76732349395752

Token 75: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029198160395026207
    2. ' int' → logprob: -4.029198169708252
    3. 'input' → logprob: -4.654198169708252
    4. ' input' → logprob: -6.529198169708252
    5. '(int' → logprob: -12.529197692871094
    6. '[int' → logprob: -14.904197692871094
    7. ' ' → logprob: -15.029197692871094
    8. '<int' → logprob: -15.029197692871094
    9. '=int' → logprob: -15.279197692871094
    10. ',int' → logprob: -15.404197692871094

Token 76: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0445127372804563e-05
    2. '()' → logprob: -11.50001049041748
    3. ' ().' → logprob: -15.75001049041748
    4. '(' → logprob: -17.625009536743164
    5. '())' → logprob: -17.625009536743164
    6. '()))' → logprob: -17.750009536743164
    7. '()).' → logprob: -18.250009536743164
    8. '()[' → logprob: -19.750009536743164
    9. '.' → logprob: -19.875009536743164
    10. '()
' → logprob: -20.125009536743164

Token 77: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.676292231422849e-05
    2. 'strip' → logprob: -11.250017166137695
    3. ' split' → logprob: -13.625017166137695
    4. 'plit' → logprob: -14.125017166137695
    5. '(split' → logprob: -14.375017166137695
    6. 'rstrip' → logprob: -14.750017166137695
    7. '.split' → logprob: -15.000017166137695
    8. ')' → logprob: -16.000017166137695
    9. 's' → logprob: -16.000017166137695
    10. '_split' → logprob: -16.750017166137695

Token 78: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.41407597064971924
    2. '()))' → logprob: -1.1640759706497192
    3. '()' → logprob: -4.41407585144043
    4. ')' → logprob: -4.66407585144043
    5. '())' → logprob: -5.28907585144043
    6. '(' → logprob: -8.66407585144043
    7. '()))
' → logprob: -9.91407585144043
    8. '))
' → logprob: -11.53907585144043
    9. ' ))' → logprob: -11.78907585144043
    10. '()));' → logprob: -12.28907585144043

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19614535570144653
    2. '        
' → logprob: -2.5711452960968018
    3. '   ' → logprob: -3.4461452960968018
    4. 'stack' → logprob: -3.6961452960968018
    5. 'd' → logprob: -4.071145534515381
    6. '
' → logprob: -4.321145534515381
    7. '    
' → logprob: -5.321145534515381
    8. 'deque' → logprob: -6.571145534515381
    9. 'de' → logprob: -7.321145534515381
    10. 'dq' → logprob: -7.446145534515381

Token 80: ' #' (ID: 1069)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.32887962460517883
    2. 'd' → logprob: -2.7038795948028564
    3. ' stack' → logprob: -3.0788795948028564
    4. ' stacks' → logprob: -3.8288795948028564
    5. '        
' → logprob: -4.2038798332214355
    6. '
' → logprob: -4.2038798332214355
    7. 'dp' → logprob: -4.5788798332214355
    8. 'deque' → logprob: -4.8288798332214355
    9. ' d' → logprob: -4.9538798332214355
    10. 'dq' → logprob: -5.0788798332214355

Token 81: ' pre' (ID: 876)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.30127352476119995
    2. 'stack' → logprob: -2.1762735843658447
    3. ' q' → logprob: -3.6762735843658447
    4. ' d' → logprob: -3.9262735843658447
    5. ' stk' → logprob: -4.051273345947266
    6. ' stacks' → logprob: -4.176273345947266
    7. 'd' → logprob: -4.426273345947266
    8. ' dq' → logprob: -4.551273345947266
    9. 'q' → logprob: -4.926273345947266
    10. '       ' → logprob: -5.426273345947266

Token 82: 'compute' (ID: 54521)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4532192051410675
    2. 'vious' → logprob: -1.8282191753387451
    3. 's' → logprob: -2.328219175338745
    4. 'd' → logprob: -2.703219175338745
    5. '_' → logprob: -4.953219413757324
    6. 'sum' → logprob: -5.203219413757324
    7. 'vi' → logprob: -5.328219413757324
    8. 'dict' → logprob: -5.828219413757324
    9. 'process' → logprob: -5.953219413757324
    10. '_sum' → logprob: -6.078219413757324

Token 83: ' ladder' (ID: 63451)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.3566205501556396
    2. ' positions' → logprob: -1.4816205501556396
    3. ' next' → logprob: -2.7316205501556396
    4. ' pos' → logprob: -3.2316205501556396
    5. 'positions' → logprob: -3.2316205501556396
    6. 'pos' → logprob: -3.3566205501556396
    7. ' stack' → logprob: -3.3566205501556396
    8. ' ' → logprob: -3.6066205501556396
    9. ' prefix' → logprob: -3.7316205501556396
    10. 'dp' → logprob: -3.9816205501556396

Token 84: ' tops' (ID: 40755)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6720375418663025
    2. 's' → logprob: -1.0470376014709473
    3. '_positions' → logprob: -2.9220376014709473
    4. '=' → logprob: -3.0470376014709473
    5. '_' → logprob: -4.297037601470947
    6. '[]' → logprob: -5.422037601470947
    7. '_steps' → logprob: -5.672037601470947
    8. '[' → logprob: -6.047037601470947
    9. '_lengths' → logprob: -6.172037601470947
    10. '_sizes' → logprob: -6.547037601470947

Token 85: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28732219338417053
    2. '   ' → logprob: -3.0373222827911377
    3. '       ' → logprob: -3.5373222827911377
    4. '\t' → logprob: -3.5373222827911377
    5. '    ' → logprob: -4.037322044372559
    6. 's' → logprob: -4.287322044372559
    7. ':' → logprob: -4.287322044372559
    8. ' 
' → logprob: -4.537322044372559
    9. ',' → logprob: -4.537322044372559
    10. '_' → logprob: -4.662322044372559

Token 86: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.937969446182251
    2. ' all' → logprob: -1.187969446182251
    3. 'a' → logprob: -2.687969446182251
    4. 'each' → logprob: -2.812969446182251
    5. ' a' → logprob: -2.937969446182251
    6. ' the' → logprob: -3.437969446182251
    7. 'all' → logprob: -3.562969446182251
    8. 'b' → logprob: -4.187969207763672
    9. ' both' → logprob: -5.187969207763672
    10. ' fast' → logprob: -5.312969207763672

Token 87: ' floor' (ID: 8350)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.2330983281135559
    2. 'index' → logprob: -2.858098268508911
    3. ' position' → logprob: -2.858098268508911
    4. 'i' → logprob: -3.358098268508911
    5. ' ' → logprob: -4.60809850692749
    6. 'a' → logprob: -4.98309850692749
    7. ' i' → logprob: -5.10809850692749
    8. ' index' → logprob: -5.23309850692749
    9. '0' → logprob: -5.35809850692749
    10. 'step' → logprob: -5.73309850692749

Token 88: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5495765209197998
    2. '```' → logprob: -2.1745765209198
    3. ' 
' → logprob: -2.7995765209198
    4. ':' → logprob: -2.7995765209198
    5. '   ' → logprob: -3.4245765209198
    6. 's' → logprob: -4.049576759338379
    7. ',' → logprob: -4.049576759338379
    8. '<|end|>' → logprob: -4.174576759338379
    9. ' ' → logprob: -4.424576759338379
    10. '    
' → logprob: -4.674576759338379

Token 89: ' side' (ID: 4307)
  Prédit: ' bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.9725933074951172
    2. ' bottoms' → logprob: -1.0975933074951172
    3. 'bottom' → logprob: -1.8475933074951172
    4. ' their' → logprob: -3.472593307495117
    5. 'b' → logprob: -3.597593307495117
    6. 'stairs' → logprob: -4.722593307495117
    7. 'lad' → logprob: -4.847593307495117
    8. ' ladder' → logprob: -5.097593307495117
    9. 'their' → logprob: -5.472593307495117
    10. 'l' → logprob: -5.722593307495117

Token 90: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0369311571121216
    2. ' ' → logprob: -1.2869311571121216
    3. '<|end|>' → logprob: -1.5369311571121216
    4. '
' → logprob: -3.411931037902832
    5. '   ' → logprob: -4.036931037902832
    6. '    ' → logprob: -4.161931037902832
    7. ':' → logprob: -4.161931037902832
    8. '        ' → logprob: -4.286931037902832
    9. '        
' → logprob: -4.536931037902832
    10. '<|end|>' → logprob: -5.036931037902832

Token 91: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0331432819366455
    2. '```' → logprob: -1.7831432819366455
    3. '\' → logprob: -2.4081432819366455
    4. '<|end|>' → logprob: -2.5331432819366455
    5. '   ' → logprob: -2.6581432819366455
    6. '\n' → logprob: -3.0331432819366455
    7. '       ' → logprob: -3.1581432819366455
    8. '    
' → logprob: -3.9081432819366455
    9. '        
' → logprob: -4.283143043518066
    10. ':' → logprob: -4.408143043518066

Token 92: ' def' (ID: 1056)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1934919357299805
    2. ' ladder' → logprob: -1.5684919357299805
    3. ' ' → logprob: -1.8184919357299805
    4. '_' → logprob: -2.8184919357299805
    5. ' l' → logprob: -2.9434919357299805
    6. ' ladd' → logprob: -3.1934919357299805
    7. ' tops' → logprob: -3.5684919357299805
    8. 's' → logprob: -3.6934919357299805
    9. '
' → logprob: -4.5684919357299805
    10. '```' → logprob: -4.5684919357299805

Token 93: ' ladder' (ID: 63451)
  Prédit: ' ladder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ladder' → logprob: -0.8344467282295227
    2. ' get' → logprob: -1.209446668624878
    3. ' find' → logprob: -2.209446668624878
    4. ' calculate' → logprob: -2.709446668624878
    5. ' _' → logprob: -3.459446668624878
    6. ' compute' → logprob: -4.209446907043457
    7. '_' → logprob: -4.709446907043457
    8. ' ladd' → logprob: -5.084446907043457
    9. ' top' → logprob: -5.459446907043457
    10. ' ' → logprob: -5.584446907043457

Token 94: '_top' (ID: 23394)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.4334515631198883
    2. '_top' → logprob: -1.308451533317566
    3. '_' → logprob: -3.6834516525268555
    4. 's' → logprob: -3.9334516525268555
    5. 'tops' → logprob: -3.9334516525268555
    6. '(' → logprob: -4.6834516525268555
    7. '_s' → logprob: -6.9334516525268555
    8. '_positions' → logprob: -7.0584516525268555
    9. ':' → logprob: -7.1834516525268555
    10. 'top' → logprob: -7.4334516525268555

Token 95: '(build' (ID: 71897)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3276388645172119
    2. '(side' → logprob: -2.202638864517212
    3. '(' → logprob: -2.452638864517212
    4. '(s' → logprob: -2.827638864517212
    5. '(i' → logprob: -4.577638626098633
    6. '(x' → logprob: -5.952638626098633
    7. '():' → logprob: -6.577638626098633
    8. 's' → logprob: -6.702638626098633
    9. '(a' → logprob: -6.827638626098633
    10. '(n' → logprob: -7.202638626098633

Token 96: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.00027611342375166714
    2. 'ings' → logprob: -8.250276565551758
    3. ')' → logprob: -12.875276565551758
    4. 'ingss' → logprob: -13.000276565551758
    5. 'ING' → logprob: -13.875276565551758
    6. '[' → logprob: -14.125276565551758
    7. '[]' → logprob: -14.500276565551758
    8. '<|end|>' → logprob: -14.500276565551758
    9. '])' → logprob: -14.750276565551758
    10. 'ng' → logprob: -14.875276565551758

Token 97: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016429277136921883
    2. '_side' → logprob: -4.641429424285889
    3. 's' → logprob: -5.516429424285889
    4. '_floor' → logprob: -7.516429424285889
    5. '_,' → logprob: -7.641429424285889
    6. '):' → logprob: -7.766429424285889
    7. 'side' → logprob: -8.64142894744873
    8. '_height' → logprob: -8.64142894744873
    9. '[' → logprob: -8.89142894744873
    10. '_id' → logprob: -9.76642894744873

Token 98: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29473671317100525
    2. '   ' → logprob: -2.669736623764038
    3. '(' → logprob: -2.794736623764038
    4. '       ' → logprob: -2.919736623764038
    5. '):' → logprob: -3.544736623764038
    6. '<|end|>' → logprob: -4.419736862182617
    7. '():' → logprob: -4.544736862182617
    8. '(n' → logprob: -5.044736862182617
    9. ' :' → logprob: -6.419736862182617
    10. '[]' → logprob: -6.919736862182617

Token 99: ' top' (ID: 2344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1298092603683472
    2. ':' → logprob: -1.7548092603683472
    3. '
' → logprob: -1.7548092603683472
    4. '<|end|>' → logprob: -1.7548092603683472
    5. '       ' → logprob: -2.7548093795776367
    6. '[]' → logprob: -3.5048093795776367
    7. '<|end|>' → logprob: -5.004809379577637
    8. '    
' → logprob: -5.129809379577637
    9. ':
' → logprob: -5.129809379577637
    10. ' ' → logprob: -5.254809379577637

Token 100: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08343441784381866
    2. ' =' → logprob: -2.5834343433380127
    3. '=' → logprob: -5.583434581756592
    4. '_positions' → logprob: -8.208434104919434
    5. '_floor' → logprob: -9.083434104919434
    6. '_' → logprob: -9.333434104919434
    7. '   ' → logprob: -9.708434104919434
    8. '_indices' → logprob: -9.833434104919434
    9. '=[]' → logprob: -10.083434104919434
    10. '_s' → logprob: -10.333434104919434

Token 101: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3243151307106018
    2. '[' → logprob: -1.449315071105957
    3. '[]' → logprob: -3.949315071105957
    4. ' []' → logprob: -4.324315071105957
    5. ' [-' → logprob: -5.449315071105957
    6. '[-' → logprob: -5.699315071105957
    7. 'deque' → logprob: -7.199315071105957
    8. '{}' → logprob: -7.449315071105957
    9. ' {}' → logprob: -7.949315071105957
    10. ' ' → logprob: -9.074315071105957

Token 102: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5978204011917114
    2. '-' → logprob: -0.8478204011917114
    3. ' -' → logprob: -4.597820281982422
    4. ' ' → logprob: -4.972820281982422
    5. 'False' → logprob: -6.472820281982422
    6. 'i' → logprob: -7.097820281982422
    7. '-i' → logprob: -7.972820281982422
    8. 'None' → logprob: -8.347820281982422
    9. 'len' → logprob: -8.472820281982422
    10. ']' → logprob: -8.722820281982422

Token 103: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0907081812620163
    2. 'for' → logprob: -2.7157082557678223
    3. ']' → logprob: -4.090708255767822
    4. '-' → logprob: -7.090708255767822
    5. ' -' → logprob: -7.465708255767822
    6. '+' → logprob: -7.715708255767822
    7. '	for' → logprob: -7.715708255767822
    8. '   ' → logprob: -7.840708255767822
    9. 's' → logprob: -8.840707778930664
    10. ')' → logprob: -8.840707778930664

Token 104: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02423698641359806
    2. ' i' → logprob: -3.8992369174957275
    3. 'range' → logprob: -5.774237155914307
    4. 'i' → logprob: -8.399236679077148
    5. ' in' → logprob: -8.399236679077148
    6. '(range' → logprob: -10.024236679077148
    7. ' _' → logprob: -10.274236679077148
    8. ' ' → logprob: -10.774236679077148
    9. '	range' → logprob: -11.024236679077148
    10. '_range' → logprob: -12.274236679077148

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07499250769615173
    2. ' range' → logprob: -3.1999924182891846
    3. 'in' → logprob: -3.6999924182891846
    4. 'range' → logprob: -5.074992656707764
    5. ',' → logprob: -8.199992179870605
    6. ' ' → logprob: -8.824992179870605
    7. '(range' → logprob: -9.824992179870605
    8. ' xrange' → logprob: -11.324992179870605
    9. '	range' → logprob: -12.074992179870605
    10. '  ' → logprob: -12.199992179870605

Token 106: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326553225517273
    2. ' range' → logprob: -1.3132655620574951
    3. '	range' → logprob: -13.313265800476074
    4. '  ' → logprob: -14.688265800476074
    5. '(range' → logprob: -14.688265800476074
    6. ' ' → logprob: -14.938265800476074
    7. 'a' → logprob: -14.938265800476074
    8. '   ' → logprob: -15.438265800476074
    9. 'build' → logprob: -15.688265800476074
    10. 'building' → logprob: -16.313264846801758

Token 107: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3943776488304138
    2. '(len' → logprob: -1.2693777084350586
    3. '(' → logprob: -3.1443777084350586
    4. 'len' → logprob: -6.519377708435059
    5. ' (' → logprob: -8.894377708435059
    6. ' len' → logprob: -9.644377708435059
    7. 'n' → logprob: -10.769377708435059
    8. '   ' → logprob: -10.894377708435059
    9. '16' → logprob: -11.269377708435059
    10. '1' → logprob: -11.394377708435059

Token 108: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.007698552217334509
    2. ')]
' → logprob: -5.0076985359191895
    3. '+' → logprob: -7.8826985359191895
    4. ' )' → logprob: -8.257699012756348
    5. ')' → logprob: -8.507699012756348
    6. '       ' → logprob: -10.507699012756348
    7. ' +' → logprob: -10.632699012756348
    8. '   ' → logprob: -11.007699012756348
    9. ')])' → logprob: -11.507699012756348
    10. ']' → logprob: -11.757699012756348

Token 109: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020173244178295135
    2. '       ' → logprob: -4.895173072814941
    3. '<|end|>' → logprob: -5.145173072814941
    4. '
' → logprob: -6.770173072814941
    5. '' → logprob: -6.895173072814941
    6. '   ' → logprob: -7.020173072814941
    7. '\n' → logprob: -7.520173072814941
    8. ' 
' → logprob: -7.645173072814941
    9. '	' → logprob: -7.645173072814941
    10. '[
' → logprob: -8.145173072814941

Token 110: ' i' (ID: 575)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42549505829811096
    2. '       ' → logprob: -1.3004950284957886
    3. '<|end|>' → logprob: -2.925495147705078
    4. ' for' → logprob: -4.425495147705078
    5. '   ' → logprob: -6.175495147705078
    6. ' ' → logprob: -6.800495147705078
    7. ' 
' → logprob: -6.925495147705078
    8. '        
' → logprob: -6.925495147705078
    9. '<|end|>' → logprob: -7.050495147705078
    10. '  
' → logprob: -7.425495147705078

Token 111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3829134702682495
    2. ' =' → logprob: -1.2579134702682495
    3. 'f' → logprob: -4.257913589477539
    4. ' +=' → logprob: -4.757913589477539
    5. '+=' → logprob: -5.757913589477539
    6. 'n' → logprob: -6.132913589477539
    7. ' ' → logprob: -6.132913589477539
    8. '+' → logprob: -6.257913589477539
    9. 's' → logprob: -8.007913589477539
    10. 'd' → logprob: -8.132913589477539

Token 112: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06454946845769882
    2. ' ' → logprob: -2.814549446105957
    3. '1' → logprob: -6.439549446105957
    4. 'n' → logprob: -7.564549446105957
    5. ' n' → logprob: -7.689549446105957
    6. '   ' → logprob: -13.814549446105957
    7. '2' → logprob: -13.814549446105957
    8. '[' → logprob: -14.377049446105957
    9. '(' → logprob: -14.877049446105957
    10. '-' → logprob: -14.939549446105957

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04363628104329109
    2. 'n' → logprob: -3.6686363220214844
    3. '1' → logprob: -4.168636322021484
    4. ' ' → logprob: -6.543636322021484
    5. ' n' → logprob: -8.293636322021484
    6. '2' → logprob: -12.168636322021484
    7. '   ' → logprob: -12.293636322021484
    8. '-' → logprob: -12.793636322021484
    9. '(' → logprob: -13.106136322021484
    10. '(n' → logprob: -13.356136322021484

Token 114: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06773921102285385
    2. '<|end|>' → logprob: -2.817739248275757
    3. '<|end|>' → logprob: -6.067739009857178
    4. '       ' → logprob: -6.692739009857178
    5. ' while' → logprob: -7.192739009857178
    6. '	while' → logprob: -7.942739009857178
    7. '
' → logprob: -8.442739486694336
    8. ' 
' → logprob: -8.567739486694336
    9. 'while' → logprob: -8.817739486694336
    10. '   ' → logprob: -9.317739486694336

Token 115: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024439891800284386
    2. ' while' → logprob: -4.524439811706543
    3. '<|end|>' → logprob: -4.649439811706543
    4. ' 
' → logprob: -6.524439811706543
    5. '       ' → logprob: -7.274439811706543
    6. '	while' → logprob: -7.399439811706543
    7. '<|end|>' → logprob: -8.399439811706543
    8. ' ' → logprob: -8.649439811706543
    9. 'while' → logprob: -8.774439811706543
    10. '  
' → logprob: -10.024439811706543

Token 116: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2720937132835388
    2. 'while' (adapté à ' while') → logprob: -2.0220937728881836
    3. '<|end|>' → logprob: -2.8970937728881836
    4. '	while' → logprob: -3.6470937728881836
    5. '
' → logprob: -4.772093772888184
    6. '       ' → logprob: -5.147093772888184
    7. ' ' → logprob: -5.147093772888184
    8. '   ' → logprob: -6.647093772888184
    9. '<|end|>' → logprob: -7.022093772888184
    10. '  ' → logprob: -7.397093772888184

Token 117: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14283327758312225
    2. 'i' → logprob: -2.0178332328796387
    3. 'True' → logprob: -9.517833709716797
    4. ' True' → logprob: -10.642833709716797
    5. '	i' → logprob: -10.892833709716797
    6. '   ' → logprob: -11.142833709716797
    7. '(i' → logprob: -11.392833709716797
    8. ' ' → logprob: -11.767833709716797
    9. '    ' → logprob: -13.392833709716797
    10. ' ' → logprob: -13.580333709716797

Token 118: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01661043055355549
    2. '<n' → logprob: -4.766610622406006
    3. '<' → logprob: -4.891610622406006
    4. '+' → logprob: -8.016610145568848
    5. ' ' → logprob: -9.391610145568848
    6. ' +' → logprob: -11.016610145568848
    7. '<len' → logprob: -11.391610145568848
    8. '<|end|>' → logprob: -12.266610145568848
    9. 'n' → logprob: -13.391610145568848
    10. ' <=' → logprob: -13.891610145568848

Token 119: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001422770437784493
    2. ' n' → logprob: -9.000142097473145
    3. '(n' → logprob: -12.125142097473145
    4. '(' → logprob: -12.250142097473145
    5. 'len' → logprob: -12.375142097473145
    6. '   ' → logprob: -13.250142097473145
    7. ' ' → logprob: -13.625142097473145
    8. '	n' → logprob: -14.250142097473145
    9. '
' → logprob: -16.00014305114746
    10. ' (' → logprob: -16.25014305114746

Token 120: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2760036587715149
    2. ':' → logprob: -1.6510035991668701
    3. ':
' → logprob: -4.026003837585449
    4. 'and' → logprob: -4.026003837585449
    5. '-' → logprob: -4.526003837585449
    6. ' -' → logprob: -6.401003837585449
    7. ' ' → logprob: -7.401003837585449
    8. ' :' → logprob: -7.901003837585449
    9. ' :
' → logprob: -9.65100383758545
    10. '1' → logprob: -10.15100383758545

Token 121: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8533585071563721
    2. '       ' → logprob: -1.103358507156372
    3. ':' → logprob: -2.853358507156372
    4. ':
' → logprob: -3.103358507156372
    5. '	   ' → logprob: -3.853358507156372
    6. '
' → logprob: -3.978358507156372
    7. '    ' → logprob: -4.103358268737793
    8. ' ' → logprob: -4.228358268737793
    9. '           ' → logprob: -4.353358268737793
    10. '	' → logprob: -4.603358268737793

Token 122: ' if' (ID: 538)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3252306878566742
    2. 'if' (adapté à ' if') → logprob: -1.9502307176589966
    3. ' if' → logprob: -2.700230598449707
    4. '   ' → logprob: -3.450230598449707
    5. ' j' → logprob: -3.575230598449707
    6. '           ' → logprob: -5.450230598449707
    7. '       ' → logprob: -5.950230598449707
    8. '	j' → logprob: -7.950230598449707
    9. 'k' → logprob: -8.700230598449707
    10. '               ' → logprob: -8.825230598449707

Token 123: ' building' (ID: 6282)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23234908282756805
    2. 'building' → logprob: -2.232349157333374
    3. ' i' → logprob: -2.732349157333374
    4. ' building' → logprob: -3.982349157333374
    5. 'top' → logprob: -4.607348918914795
    6. 'a' → logprob: -5.982348918914795
    7. ' top' → logprob: -6.232348918914795
    8. 'build' → logprob: -7.357348918914795
    9. '(i' → logprob: -8.357349395751953
    10. '   ' → logprob: -8.357349395751953

Token 124: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.968934758333489e-05
    2. '[' → logprob: -9.625069618225098
    3. '[a' → logprob: -13.250069618225098
    4. '```' → logprob: -15.250069618225098
    5. '[j' → logprob: -15.500069618225098
    6. '[I' → logprob: -15.625069618225098
    7. '[s' → logprob: -15.750069618225098
    8. 'i' → logprob: -15.750069618225098
    9. '\[' → logprob: -15.750069618225098
    10. '==' → logprob: -16.375070571899414

Token 125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37212055921554565
    2. ']==' → logprob: -1.7471206188201904
    3. '[' → logprob: -2.6221206188201904
    4. '[i' → logprob: -3.8721206188201904
    5. '==' → logprob: -4.872120380401611
    6. ']:' → logprob: -4.872120380401611
    7. '][' → logprob: -4.997120380401611
    8. ' ==' → logprob: -5.372120380401611
    9. '+' → logprob: -5.747120380401611
    10. ']=='' → logprob: -6.122120380401611

Token 126: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5452266931533813
    2. ' ==' → logprob: -1.1702266931533813
    3. '[' → logprob: -2.795226573944092
    4. ':' → logprob: -4.420226573944092
    5. '+' → logprob: -4.795226573944092
    6. ' and' → logprob: -5.170226573944092
    7. '[i' → logprob: -5.295226573944092
    8. '>' → logprob: -5.545226573944092
    9. 'and' → logprob: -5.795226573944092
    10. '<' → logprob: -6.420226573944092

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6120639443397522
    2. ' ' → logprob: -0.9870639443397522
    3. '0' → logprob: -2.9870638847351074
    4. 'building' → logprob: -4.237063884735107
    5. 'top' → logprob: -5.612063884735107
    6. '2' → logprob: -5.737063884735107
    7. 'i' → logprob: -5.737063884735107
    8. '-' → logprob: -5.862063884735107
    9. ''' → logprob: -6.362063884735107
    10. ' building' → logprob: -6.362063884735107

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09267094731330872
    2. '0' → logprob: -2.9676709175109863
    3. 'building' → logprob: -4.217670917510986
    4. 'i' → logprob: -4.467670917510986
    5. '2' → logprob: -5.717670917510986
    6. '-' → logprob: -5.967670917510986
    7. ' ' → logprob: -6.467670917510986
    8. 'top' → logprob: -6.592670917510986
    9. 'b' → logprob: -7.592670917510986
    10. ''' → logprob: -7.842670917510986

Token 129: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.721222996711731
    2. ':' → logprob: -1.096222996711731
    3. ' and' → logprob: -1.721222996711731
    4. 'and' → logprob: -7.471222877502441
    5. ' :
' → logprob: -9.221222877502441
    6. ' :' → logprob: -9.721222877502441
    7. '):
' → logprob: -9.846222877502441
    8. ':
' → logprob: -11.096222877502441
    9. ',' → logprob: -11.346222877502441
    10. ':

' → logprob: -11.346222877502441

Token 130: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24953055381774902
    2. ':
' → logprob: -1.749530553817749
    3. ':' → logprob: -3.999530553817749
    4. '           ' → logprob: -4.749530792236328
    5. '                   ' → logprob: -4.999530792236328
    6. 'and' → logprob: -5.124530792236328
    7. '
' → logprob: -6.124530792236328
    8. '               ' → logprob: -6.499530792236328
    9. '):
' → logprob: -6.624530792236328
    10. ',' → logprob: -7.624530792236328

Token 131: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.024576343595981598
    2. 'start' → logprob: -4.524576187133789
    3. ' j' → logprob: -5.399576187133789
    4. 'top' → logprob: -5.649576187133789
    5. '                   ' → logprob: -6.524576187133789
    6. 'while' → logprob: -6.899576187133789
    7. ' top' → logprob: -7.399576187133789
    8. 'end' → logprob: -7.774576187133789
    9. '	j' → logprob: -7.899576187133789
    10. 'right' → logprob: -8.024576187133789

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07007025927305222
    2. '=' → logprob: -2.820070266723633
    3. '=i' → logprob: -4.820070266723633
    4. '=j' → logprob: -13.695070266723633
    5. ',' → logprob: -14.570070266723633
    6. '=n' → logprob: -14.945070266723633
    7. '=index' → logprob: -15.070070266723633
    8. ' ' → logprob: -15.695070266723633
    9. '=end' → logprob: -15.820070266723633
    10. '=int' → logprob: -15.945070266723633

Token 133: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12692926824092865
    2. ' i' → logprob: -2.12692928314209
    3. '	i' → logprob: -14.00192928314209
    4. '   ' → logprob: -15.50192928314209
    5. '(i' → logprob: -16.751928329467773
    6. ')i' → logprob: -16.751928329467773
    7. '=i' → logprob: -17.001928329467773
    8. ' ' → logprob: -17.501928329467773
    9. ',i' → logprob: -17.626928329467773
    10. '<|end|>' → logprob: -17.876928329467773

Token 134: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08218298852443695
    2. ' +' → logprob: -2.5821828842163086
    3. '<|end|>' → logprob: -5.832182884216309
    4. '<|end|>' → logprob: -8.332182884216309
    5. 'while' → logprob: -10.332182884216309
    6. '
' → logprob: -10.582182884216309
    7. '+
' → logprob: -11.582182884216309
    8. '1' → logprob: -11.957182884216309
    9. '0' → logprob: -12.332182884216309
    10. '   ' → logprob: -12.707182884216309

Token 135: '                   ' (ID: 699)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13115465641021729
    2. ' +' → logprob: -2.1311545372009277
    3. '
' → logprob: -5.631154537200928
    4. '                   ' → logprob: -7.756154537200928
    5. '<|end|>' → logprob: -9.506155014038086
    6. '+
' → logprob: -9.881155014038086
    7. '<|end|>' → logprob: -11.256155014038086
    8. '+i' → logprob: -11.881155014038086
    9. '+j' → logprob: -12.006155014038086
    10. '               ' → logprob: -12.131155014038086

Token 136: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.17501479387283325
    2. ' while' → logprob: -1.9250147342681885
    3. '                   ' → logprob: -4.925014972686768
    4. '	while' → logprob: -6.175014972686768
    5. '
' → logprob: -6.425014972686768
    6. '```' → logprob: -7.050014972686768
    7. '   ' → logprob: -7.300014972686768
    8. 'i' → logprob: -7.425014972686768
    9. 'While' → logprob: -8.42501449584961
    10. '+' → logprob: -8.42501449584961

Token 137: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003210746217519045
    2. ' j' → logprob: -5.753210544586182
    3. '	j' → logprob: -11.00321102142334
    4. 'i' → logprob: -12.00321102142334
    5. ' ' → logprob: -13.25321102142334
    6. '(j' → logprob: -13.37821102142334
    7. 'n' → logprob: -13.62821102142334
    8. '   ' → logprob: -13.87821102142334
    9. '$j' → logprob: -13.87821102142334
    10. '```' → logprob: -14.37821102142334

Token 138: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6567031741142273
    2. ' <' → logprob: -1.281703233718872
    3. '<n' → logprob: -2.156703233718872
    4. ' +' → logprob: -2.781703233718872
    5. '<' → logprob: -3.656703233718872
    6. '>' → logprob: -9.156702995300293
    7. '+n' → logprob: -9.281702995300293
    8. ' >' → logprob: -9.656702995300293
    9. ' ' → logprob: -9.781702995300293
    10. '<len' → logprob: -10.656702995300293

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '<|end|>' → logprob: -18.25103187561035
    4. '
' → logprob: -19.50103187561035
    5. '+' → logprob: -19.87603187561035
    6. ' <' → logprob: -20.50103187561035
    7. '```' → logprob: -21.00103187561035
    8. '<' → logprob: -21.37603187561035
    9. '-' → logprob: -21.43853187561035
    10. '   ' → logprob: -21.62603187561035

Token 140: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22605392336845398
    2. '<' → logprob: -1.6010539531707764
    3. '<n' → logprob: -7.976053714752197
    4. '<|end|>' → logprob: -8.726054191589355
    5. ' ' → logprob: -9.226054191589355
    6. ' <=' → logprob: -10.976054191589355
    7. '<len' → logprob: -11.601054191589355
    8. '<=' → logprob: -12.601054191589355
    9. '<size' → logprob: -13.726054191589355
    10. 'and' → logprob: -13.851054191589355

Token 141: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018150413408875465
    2. ' n' → logprob: -4.018150329589844
    3. '<|end|>' → logprob: -15.268150329589844
    4. '	n' → logprob: -15.393150329589844
    5. ')n' → logprob: -17.268150329589844
    6. 'len' → logprob: -17.393150329589844
    7. ' ' → logprob: -18.018150329589844
    8. '
' → logprob: -18.268150329589844
    9. '<|end|>' → logprob: -18.393150329589844
    10. '<n' → logprob: -19.018150329589844

Token 142: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759424567222595
    2. 'and' → logprob: -0.8259424567222595
    3. ' ' → logprob: -12.825942039489746
    4. '	and' → logprob: -16.075942993164062
    5. '<|end|>' → logprob: -16.575942993164062
    6. '
' → logprob: -16.825942993164062
    7. '```' → logprob: -17.575942993164062
    8. '   ' → logprob: -17.700942993164062
    9. '    ' → logprob: -17.825942993164062
    10. '           ' → logprob: -18.825942993164062

Token 143: ' building' (ID: 6282)
  Prédit: 'building'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'building' → logprob: -0.28147101402282715
    2. ' building' → logprob: -1.4064710140228271
    3. 'build' → logprob: -8.531471252441406
    4. ' ' → logprob: -9.531471252441406
    5. '  ' → logprob: -11.406471252441406
    6. '   ' → logprob: -11.906471252441406
    7. '
' → logprob: -12.531471252441406
    8. '	build' → logprob: -12.531471252441406
    9. '```' → logprob: -12.656471252441406
    10. '<|end|>' → logprob: -12.906471252441406

Token 144: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.47626737493556e-05
    2. '[' → logprob: -10.75003433227539
    3. ' [' → logprob: -11.62503433227539
    4. '[i' → logprob: -13.37503433227539
    5. 'j' → logprob: -13.75003433227539
    6. '[
' → logprob: -14.87503433227539
    7. 'and' → logprob: -15.12503433227539
    8. ' and' → logprob: -15.62503433227539
    9. '
' → logprob: -15.87503433227539
    10. ' j' → logprob: -16.00003433227539

Token 145: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8172792196273804
    2. '[j' → logprob: -0.9422792196273804
    3. ']' → logprob: -2.31727933883667
    4. '][' → logprob: -2.81727933883667
    5. ' +' → logprob: -5.56727933883667
    6. '+j' → logprob: -6.06727933883667
    7. '[' → logprob: -6.31727933883667
    8. ']+' → logprob: -7.31727933883667
    9. ']==' → logprob: -7.81727933883667
    10. '[i' → logprob: -8.067278861999512

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009278989746235311
    2. ' ' → logprob: -7.250927925109863
    3. 'i' → logprob: -8.875927925109863
    4. 'j' → logprob: -10.125927925109863
    5. '0' → logprob: -11.125927925109863
    6. '   ' → logprob: -12.000927925109863
    7. ')' → logprob: -12.250927925109863
    8. ']' → logprob: -12.625927925109863
    9. '```' → logprob: -13.000927925109863
    10. '
' → logprob: -13.625927925109863

Token 147: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12094849348068237
    2. ']==' → logprob: -2.495948553085327
    3. '[j' → logprob: -3.495948553085327
    4. '==' → logprob: -7.620948314666748
    5. '][' → logprob: -8.245948791503906
    6. '[' → logprob: -8.495948791503906
    7. ' ]' → logprob: -9.120948791503906
    8. '[i' → logprob: -10.120948791503906
    9. ' ==' → logprob: -10.870948791503906
    10. '```' → logprob: -10.870948791503906

Token 148: ' ==' (ID: 951)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.3092065155506134
    2. '==' → logprob: -1.684206485748291
    3. ' ==' → logprob: -3.184206485748291
    4. ']==' → logprob: -3.934206485748291
    5. '[' → logprob: -4.809206485748291
    6. '[i' → logprob: -4.934206485748291
    7. ']' → logprob: -5.809206485748291
    8. '[top' → logprob: -8.30920696258545
    9. '][' → logprob: -8.43420696258545
    10. ' [' → logprob: -8.68420696258545

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061990540474653244
    2. ' ' → logprob: -2.81199049949646
    3. 'building' → logprob: -11.686990737915039
    4. ' building' → logprob: -11.811990737915039
    5. '  ' → logprob: -12.811990737915039
    6. '   ' → logprob: -12.936990737915039
    7. '0' → logprob: -14.686990737915039
    8. ' ' → logprob: -15.561990737915039
    9. '```' → logprob: -15.749490737915039
    10. 'build' → logprob: -15.749490737915039

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5284826755523682
    2. ':
' → logprob: -1.1534826755523682
    3. ' and' → logprob: -2.528482675552368
    4. ':j' → logprob: -5.653482437133789
    5. ' :' → logprob: -5.903482437133789
    6. ' :
' → logprob: -5.903482437133789
    7. 'and' → logprob: -6.278482437133789
    8. '):
' → logprob: -6.403482437133789
    9. '<|end|>' → logprob: -6.653482437133789
    10. ' ' → logprob: -8.153482437133789

Token 151: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.1963461637496948
    2. ':' → logprob: -1.4463461637496948
    3. ':
' → logprob: -1.6963461637496948
    4. '<|end|>' → logprob: -2.3213462829589844
    5. '                   ' → logprob: -3.1963462829589844
    6. '
' → logprob: -3.4463462829589844
    7. ' and' → logprob: -3.6963462829589844
    8. '               ' → logprob: -3.6963462829589844
    9. '                           ' → logprob: -4.696346282958984
    10. '       ' → logprob: -5.071346282958984

Token 152: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.02677498757839203
    2. 'j' (adapté à ' j') → logprob: -3.6517748832702637
    3. '<|end|>' → logprob: -8.526775360107422
    4. ' ' → logprob: -9.026775360107422
    5. '	j' → logprob: -9.526775360107422
    6. '+' → logprob: -11.276775360107422
    7. ',j' → logprob: -11.651775360107422
    8. '1' → logprob: -11.651775360107422
    9. ':j' → logprob: -12.026775360107422
    10. '                           ' → logprob: -12.151775360107422

Token 153: '+=' (ID: 18287)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.48447173833847046
    2. '+' → logprob: -1.7344717979431152
    3. '+=' → logprob: -1.7344717979431152
    4. '<|end|>' → logprob: -4.109471797943115
    5. ' +' → logprob: -4.609471797943115
    6. '=' → logprob: -5.859471797943115
    7. ' ' → logprob: -6.859471797943115
    8. ' =' → logprob: -8.234471321105957
    9. ')' → logprob: -9.234471321105957
    10. ']+=' → logprob: -9.609471321105957

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003177952254191041
    2. ' ' → logprob: -5.753178119659424
    3. 'j' → logprob: -16.253177642822266
    4. ' j' → logprob: -16.503177642822266
    5. '+' → logprob: -17.003177642822266
    6. '<|end|>' → logprob: -17.378177642822266
    7. '```' → logprob: -19.628177642822266
    8. ' ' → logprob: -19.628177642822266
    9. '2' → logprob: -19.815677642822266
    10. '0' → logprob: -19.815677642822266

Token 155: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4089527726173401
    2. '<|end|>' → logprob: -1.1589527130126953
    3. '<|end|>' → logprob: -5.283952713012695
    4. '               ' → logprob: -5.408952713012695
    5. ' ' → logprob: -5.658952713012695
    6. ' 
' → logprob: -6.283952713012695
    7. '           ' → logprob: -6.658952713012695
    8. '                   ' → logprob: -6.783952713012695
    9. '       ' → logprob: -7.033952713012695
    10. ')' → logprob: -7.158952713012695

Token 156: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07842554897069931
    2. 'for' (adapté à ' for') → logprob: -2.703425645828247
    3. ' ' → logprob: -6.078425407409668
    4. '                   ' → logprob: -6.328425407409668
    5. '
' → logprob: -6.578425407409668
    6. '               ' → logprob: -7.078425407409668
    7. '           ' → logprob: -7.078425407409668
    8. '   ' → logprob: -8.328425407409668
    9. ')' → logprob: -8.453425407409668
    10. '       ' → logprob: -8.828425407409668

Token 158: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.014169624075293541
    2. 'k' → logprob: -4.264169692993164
    3. ' x' → logprob: -12.764169692993164
    4. ' ' → logprob: -13.139169692993164
    5. '	k' → logprob: -13.889169692993164
    6. ' ' → logprob: -15.639169692993164
    7. ' t' → logprob: -15.764169692993164
    8. 'x' → logprob: -16.764169692993164
    9. ' _' → logprob: -16.889169692993164
    10. '_k' → logprob: -17.139169692993164

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036398686934262514
    2. 'in' → logprob: -5.6286396980285645
    3. 'range' → logprob: -10.753640174865723
    4. ' ' → logprob: -11.753640174865723
    5. ' range' → logprob: -12.253640174865723
    6. '<|end|>' → logprob: -12.628640174865723
    7. '```' → logprob: -14.378640174865723
    8. '	in' → logprob: -15.253640174865723
    9. '=' → logprob: -15.378640174865723
    10. 'k' → logprob: -15.753640174865723

Token 160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -17.629077911376953
    4. '	range' → logprob: -18.754077911376953
    5. '   ' → logprob: -21.254077911376953
    6. ' ' → logprob: -22.004077911376953
    7. 'rang' → logprob: -22.129077911376953
    8. 'Range' → logprob: -24.379077911376953
    9. '.range' → logprob: -24.379077911376953
    10. '  ' → logprob: -24.504077911376953

Token 161: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.000000953674316
    3. '(' → logprob: -17.25
    4. '   ' → logprob: -18.5
    5. ' (' → logprob: -18.875
    6. ' i' → logprob: -19.0
    7. '[i' → logprob: -20.625
    8. ',i' → logprob: -20.875
    9. '{i' → logprob: -21.0
    10. '	i' → logprob: -21.25

Token 162: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16474896669387817
    2. ',j' → logprob: -1.9147489070892334
    3. ' ,' → logprob: -5.4147491455078125
    4. ',k' → logprob: -10.039749145507812
    5. '+' → logprob: -11.289749145507812
    6. '   ' → logprob: -12.414749145507812
    7. 'j' → logprob: -13.914749145507812
    8. ',n' → logprob: -14.914749145507812
    9. ' ' → logprob: -15.164749145507812
    10. '+j' → logprob: -15.539749145507812

Token 163: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006716317031532526
    2. ' +' → logprob: -5.006716251373291
    3. '+k' → logprob: -14.88171672821045
    4. ')' → logprob: -15.38171672821045
    5. ')+' → logprob: -16.131715774536133
    6. '+)' → logprob: -16.256715774536133
    7. '+i' → logprob: -16.881715774536133
    8. '+
' → logprob: -18.006715774536133
    9. ' ' → logprob: -18.006715774536133
    10. '   ' → logprob: -18.131715774536133

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.25003719329834
    3. '+' → logprob: -13.37503719329834
    4. '2' → logprob: -15.00003719329834
    5. ' +' → logprob: -17.125038146972656
    6. ')' → logprob: -17.125038146972656
    7. '0' → logprob: -17.750038146972656
    8. '
' → logprob: -18.000038146972656
    9. '```' → logprob: -18.125038146972656
    10. '   ' → logprob: -18.750038146972656

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5848380327224731
    2. '):
' → logprob: -0.8348380327224731
    3. ',' → logprob: -5.209837913513184
    4. ' ):' → logprob: -6.584837913513184
    5. ' ):
' → logprob: -6.709837913513184
    6. ' ,' → logprob: -7.834837913513184
    7. ')' → logprob: -8.959837913513184
    8. ']):' → logprob: -9.584837913513184
    9. '):

' → logprob: -9.959837913513184
    10. ']:' → logprob: -10.709837913513184

Token 166: '                       ' (ID: 968)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8593875765800476
    2. ' top' → logprob: -1.2343876361846924
    3. ' ' → logprob: -1.8593876361846924
    4. '	top' → logprob: -3.8593876361846924
    5. '           ' → logprob: -3.9843876361846924
    6. 'top' → logprob: -4.109387397766113
    7. '<|end|>' → logprob: -4.109387397766113
    8. '   ' → logprob: -4.734387397766113
    9. '[top' → logprob: -4.859387397766113
    10. '       ' → logprob: -5.109387397766113

Token 167: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.4796181619167328
    2. 'top' (adapté à ' top') → logprob: -0.9796181917190552
    3. '
' → logprob: -6.479618072509766
    4. '                           ' → logprob: -6.979618072509766
    5. '                               ' → logprob: -6.979618072509766
    6. '                       ' → logprob: -7.229618072509766
    7. '	top' → logprob: -7.354618072509766
    8. '               ' → logprob: -8.604618072509766
    9. ' ' → logprob: -8.979618072509766
    10. '[top' → logprob: -9.229618072509766

Token 168: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -13.375004768371582
    3. '][' → logprob: -13.500004768371582
    4. '[j' → logprob: -14.000004768371582
    5. 'k' → logprob: -14.375004768371582
    6. ' [' → logprob: -15.375004768371582
    7. '[i' → logprob: -16.0000057220459
    8. ']' → logprob: -17.1250057220459
    9. '```' → logprob: -17.1250057220459
    10. ')[' → logprob: -17.2500057220459

Token 169: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08943305164575577
    2. ']=' → logprob: -2.464432954788208
    3. '=' → logprob: -7.964433193206787
    4. ' ]' → logprob: -9.589432716369629
    5. '=j' → logprob: -10.089432716369629
    6. ' =' → logprob: -10.339432716369629
    7. ']+=' → logprob: -14.214432716369629
    8. '=k' → logprob: -14.589432716369629
    9. ')' → logprob: -14.714432716369629
    10. ']

' → logprob: -14.964432716369629

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3877444863319397
    2. ' =' → logprob: -1.137744426727295
    3. '=j' → logprob: -7.512744426727295
    4. '=k' → logprob: -8.762744903564453
    5. ']=' → logprob: -9.012744903564453
    6. ']' → logprob: -11.512744903564453
    7. '=end' → logprob: -11.637744903564453
    8. ')=' → logprob: -12.387744903564453
    9. '=i' → logprob: -12.387744903564453
    10. '=s' → logprob: -12.762744903564453

Token 171: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04911185801029205
    2. 'i' → logprob: -3.049111843109131
    3. ' j' → logprob: -7.924111843109131
    4. 'k' → logprob: -9.049112319946289
    5. ' i' → logprob: -10.299112319946289
    6. '   ' → logprob: -12.549112319946289
    7. '	j' → logprob: -12.924112319946289
    8. '(j' → logprob: -14.361612319946289
    9. '(i' → logprob: -14.424112319946289
    10. ' ' → logprob: -14.424112319946289

Token 172: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.43000638484954834
    2. '               ' → logprob: -1.3050063848495483
    3. '
' → logprob: -3.680006504058838
    4. '<|end|>' → logprob: -3.680006504058838
    5. ')' → logprob: -4.805006504058838
    6. '           ' → logprob: -4.930006504058838
    7. '<|end|>' → logprob: -5.305006504058838
    8. ' 
' → logprob: -6.805006504058838
    9. '		           ' → logprob: -7.055006504058838
    10. ']' → logprob: -7.180006504058838

Token 173: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07884329557418823
    2. '               ' → logprob: -3.328843355178833
    3. '
' → logprob: -3.453843355178833
    4. '           ' → logprob: -5.328843116760254
    5. '		           ' → logprob: -7.578843116760254
    6. ' 
' → logprob: -7.578843116760254
    7. '<|end|>' → logprob: -7.578843116760254
    8. '       ' → logprob: -7.953843116760254
    9. '<|end|>' → logprob: -8.078843116760254
    10. '                       ' → logprob: -8.203843116760254

Token 174: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24489136040210724
    2. 'i' (adapté à ' i') → logprob: -2.994891405105591
    3. ' i' → logprob: -3.119891405105591
    4. '   ' → logprob: -3.244891405105591
    5. '       ' → logprob: -3.494891405105591
    6. '                   ' → logprob: -3.619891405105591
    7. '           ' → logprob: -3.869891405105591
    8. '
' → logprob: -5.494891166687012
    9. '                       ' → logprob: -8.119891166687012
    10. '	i' → logprob: -8.244891166687012

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029782656580209732
    2. ' =' → logprob: -3.529782772064209
    3. '+=' → logprob: -10.65478229522705
    4. ' +=' → logprob: -11.77978229522705
    5. '=
' → logprob: -15.27978229522705
    6. ' ' → logprob: -15.27978229522705
    7. '=j' → logprob: -15.52978229522705
    8. '=k' → logprob: -16.529783248901367
    9. '+' → logprob: -16.904783248901367
    10. '   ' → logprob: -17.654783248901367

Token 176: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029750952497124672
    2. ' j' → logprob: -3.5297510623931885
    3. '	j' → logprob: -15.27975082397461
    4. '(j' → logprob: -16.52975082397461
    5. ':j' → logprob: -17.15475082397461
    6. '$j' → logprob: -17.27975082397461
    7. '[j' → logprob: -17.40475082397461
    8. ' ' → logprob: -17.52975082397461
    9. '=j' → logprob: -17.77975082397461
    10. '<|end|>' → logprob: -18.02975082397461

Token 177: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1002303957939148
    2. ' +' → logprob: -2.3502304553985596
    3. '       ' → logprob: -12.10023021697998
    4. '+
' → logprob: -12.35023021697998
    5. '               ' → logprob: -12.35023021697998
    6. '   ' → logprob: -13.10023021697998
    7. '                   ' → logprob: -13.47523021697998
    8. '1' → logprob: -13.72523021697998
    9. '<|end|>' → logprob: -13.85023021697998
    10. '<|end|>' → logprob: -14.22523021697998

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '<|end|>' → logprob: -18.250003814697266
    4. '
' → logprob: -20.125003814697266
    5. '  ' → logprob: -20.250003814697266
    6. '```' → logprob: -20.750003814697266
    7. '   ' → logprob: -21.000003814697266
    8. '۱' → logprob: -21.500003814697266
    9. '１' → logprob: -22.000003814697266
    10. '7' → logprob: -22.500003814697266

Token 179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10735606402158737
    2. '               ' → logprob: -2.857356071472168
    3. 'else' → logprob: -3.982356071472168
    4. '<|end|>' → logprob: -4.107356071472168
    5. ' else' → logprob: -5.732356071472168
    6. '<|end|>' → logprob: -5.982356071472168
    7. '   ' → logprob: -6.732356071472168
    8. '           ' → logprob: -6.982356071472168
    9. '```' → logprob: -8.232356071472168
    10. ')' → logprob: -8.607356071472168

Token 180: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34084492921829224
    2. '               ' → logprob: -1.3408448696136475
    3. '<|end|>' → logprob: -4.715845108032227
    4. 'else' → logprob: -4.965845108032227
    5. '           ' → logprob: -5.340845108032227
    6. ' else' → logprob: -6.090845108032227
    7. '<|end|>' → logprob: -6.215845108032227
    8. '   ' → logprob: -7.590845108032227
    9. '                   ' → logprob: -7.840845108032227
    10. ')' → logprob: -8.215845108032227

Token 181: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.44826778769493103
    2. 'else' (adapté à ' else') → logprob: -1.3232678174972534
    3. '               ' → logprob: -2.823267698287964
    4. '       ' → logprob: -3.448267698287964
    5. '           ' → logprob: -5.698267936706543
    6. '	else' → logprob: -8.448267936706543
    7. '   ' → logprob: -9.198267936706543
    8. '	       ' → logprob: -10.573267936706543
    9. '```' → logprob: -10.948267936706543
    10. '<|end|>' → logprob: -11.573267936706543

Token 182: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1278854608535767
    2. '           ' → logprob: -1.6278854608535767
    3. ':
' → logprob: -1.7528854608535767
    4. ':' → logprob: -1.7528854608535767
    5. '   ' → logprob: -2.377885341644287
    6. '               ' → logprob: -4.502885341644287
    7. '		           ' → logprob: -5.377885341644287
    8. '	       ' → logprob: -5.752885341644287
    9. '       ' → logprob: -5.877885341644287
    10. 'i' → logprob: -6.127885341644287

Token 183: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08695048838853836
    2. '                   ' → logprob: -3.2119505405426025
    3. '   ' → logprob: -3.7119505405426025
    4. 'i' → logprob: -4.961950302124023
    5. '               ' → logprob: -5.336950302124023
    6. ' i' → logprob: -6.086950302124023
    7. '	       ' → logprob: -6.836950302124023
    8. '
' → logprob: -7.086950302124023
    9. '       ' → logprob: -7.336950302124023
    10. '		   ' → logprob: -7.961950302124023

Token 184: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0007336281123571098
    2. ' i' → logprob: -7.250733852386475
    3. '   ' → logprob: -11.000733375549316
    4. '                   ' → logprob: -12.375733375549316
    5. '	i' → logprob: -13.125733375549316
    6. '       ' → logprob: -14.875733375549316
    7. '               ' → logprob: -15.750733375549316
    8. '
' → logprob: -16.375734329223633
    9. '           ' → logprob: -16.500734329223633
    10. ' ' → logprob: -18.125734329223633

Token 185: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07941778749227524
    2. ' +=' → logprob: -2.5794177055358887
    3. '+' → logprob: -7.579417705535889
    4. '   ' → logprob: -11.704418182373047
    5. '=' → logprob: -12.704418182373047
    6. ']+=' → logprob: -13.079418182373047
    7. '    ' → logprob: -13.329418182373047
    8. ' +' → logprob: -14.454418182373047
    9. '+="' → logprob: -15.079418182373047
    10. '```' → logprob: -15.079418182373047

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -18.375001907348633
    4. '<|end|>' → logprob: -19.000001907348633
    5. '۱' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.250001907348633
    7. '１' → logprob: -20.625001907348633
    8. '१' → logprob: -21.500001907348633
    9. '১' → logprob: -21.750001907348633
    10. '  ' → logprob: -22.250001907348633

Token 187: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1313871592283249
    2. '<|end|>' → logprob: -2.631387233734131
    3. '       ' → logprob: -3.131387233734131
    4. '\n' → logprob: -5.506387233734131
    5. '<|end|>' → logprob: -7.131387233734131
    6. '        
' → logprob: -7.256387233734131
    7. ')' → logprob: -7.756387233734131
    8. 'newline' → logprob: -8.381386756896973
    9. '    
' → logprob: -8.631386756896973
    10. '
' → logprob: -8.756386756896973

Token 188: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3546580970287323
    2. '
' → logprob: -1.3546581268310547
    3. '<|end|>' → logprob: -3.3546581268310547
    4. '        
' → logprob: -5.729658126831055
    5. '    
' → logprob: -8.104658126831055
    6. '   ' → logprob: -8.104658126831055
    7. '<|end|>' → logprob: -8.229658126831055
    8. ' ' → logprob: -8.229658126831055
    9. ')' → logprob: -8.354658126831055
    10. '  
' → logprob: -8.729658126831055

Token 189: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3233277499675751
    2. '
' → logprob: -1.3233277797698975
    3. '<|end|>' → logprob: -5.823327541351318
    4. '        
' → logprob: -6.323327541351318
    5. '   ' → logprob: -6.323327541351318
    6. ' ' → logprob: -7.323327541351318
    7. ' return' → logprob: -7.573327541351318
    8. 'return' (adapté à ' return') → logprob: -8.073328018188477
    9. '    
' → logprob: -8.323328018188477
    10. ' 
' → logprob: -8.448328018188477

Token 190: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0024756586644798517
    2. ' top' → logprob: -6.002475738525391
    3. '[top' → logprob: -16.87747573852539
    4. 'to' → logprob: -20.50247573852539
    5. '	top' → logprob: -20.62747573852539
    6. 'Top' → logprob: -21.50247573852539
    7. '(top' → logprob: -22.37747573852539
    8. ' топ' → logprob: -22.37747573852539
    9. 't' → logprob: -22.75247573852539
    10. ' ' → logprob: -23.00247573852539

Token 191: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5813910961151123
    2. '<|end|>' → logprob: -0.8313910961151123
    3. '        
' → logprob: -6.331391334533691
    4. '

' → logprob: -6.831391334533691
    5. '<|end|>' → logprob: -7.331391334533691
    6. '       ' → logprob: -7.456391334533691
    7. '
        
' → logprob: -7.581391334533691
    8. '    
' → logprob: -7.581391334533691
    9. '
    
' → logprob: -9.706391334533691
    10. '   ' → logprob: -10.706391334533691

Token 192: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46125340461730957
    2. '
' → logprob: -1.8362534046173096
    3. '   ' → logprob: -1.9612534046173096
    4. '    
' → logprob: -3.2112534046173096
    5. ' a' → logprob: -4.4612531661987305
    6. '       ' → logprob: -5.7112531661987305
    7. 'tops' → logprob: -5.7112531661987305
    8. '        
' → logprob: -5.9612531661987305
    9. '<|end|>' → logprob: -6.3362531661987305
    10. ' tops' → logprob: -6.4612531661987305

Token 193: ' top' (ID: 2344)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.054677218198776245
    2. 'top' (adapté à ' top') → logprob: -3.1796772480010986
    3. 'tops' → logprob: -5.9296770095825195
    4. '
' → logprob: -6.4296770095825195
    5. '_a' → logprob: -6.5546770095825195
    6. '   ' → logprob: -6.6796770095825195
    7. '        
' → logprob: -6.8046770095825195
    8. ' a' → logprob: -7.0546770095825195
    9. '       ' → logprob: -7.4296770095825195
    10. ' top' → logprob: -7.9296770095825195

Token 194: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.008846549317240715
    2. 'a' → logprob: -5.633846759796143
    3. '(' → logprob: -6.008846759796143
    4. '_' → logprob: -6.383846759796143
    5. '(a' → logprob: -7.133846759796143
    6. 'A' → logprob: -9.633846282958984
    7. '(_' → logprob: -9.758846282958984
    8. '_s' → logprob: -10.133846282958984
    9. '1' → logprob: -10.383846282958984
    10. 's' → logprob: -10.883846282958984

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5815983414649963
    2. ' =' → logprob: -0.8315983414649963
    3. '(' → logprob: -5.331598281860352
    4. ')' → logprob: -7.331598281860352
    5. '(a' → logprob: -9.706598281860352
    6. 'a' → logprob: -10.331598281860352
    7. ',' → logprob: -10.956598281860352
    8. '=a' → logprob: -11.206598281860352
    9. ')=' → logprob: -12.206598281860352
    10. '[' → logprob: -12.456598281860352

Token 196: ' ladder' (ID: 63451)
  Prédit: 'lad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lad' → logprob: -0.34850332140922546
    2. ' ladder' → logprob: -1.2235033512115479
    3. ' lad' → logprob: -11.223503112792969
    4. ' ladd' → logprob: -11.723503112792969
    5. ' ' → logprob: -11.848503112792969
    6. '   ' → logprob: -11.973503112792969
    7. 'l' → logprob: -12.598503112792969
    8. 'lap' → logprob: -13.286003112792969
    9. 'lag' → logprob: -13.598503112792969
    10. '  ' → logprob: -13.598503112792969

Token 197: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -4.320199877838604e-07
    2. '_t' → logprob: -16.5
    3. 'top' → logprob: -16.625
    4. '_' → logprob: -16.875
    5. '_a' → logprob: -17.875
    6. ' _' → logprob: -18.875
    7. ')_' → logprob: -19.0
    8. '_TOP' → logprob: -19.25
    9. '_bottom' → logprob: -19.625
    10. 'a' → logprob: -19.875

Token 198: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.250004768371582
    3. ' (' → logprob: -17.3750057220459
    4. 'a' → logprob: -18.0000057220459
    5. '(A' → logprob: -18.6250057220459
    6. '(b' → logprob: -20.1250057220459
    7. '(
' → logprob: -20.2500057220459
    8. '((' → logprob: -21.0000057220459
    9. '```' → logprob: -21.2500057220459
    10. '(ab' → logprob: -21.5000057220459

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25195547938346863
    2. ')
' → logprob: -1.501955509185791
    3. ')
' → logprob: -10.876955032348633
    4. ')

' → logprob: -12.501955032348633
    5. ' )' → logprob: -13.251955032348633
    6. ' )
' → logprob: -13.251955032348633
    7. '),' → logprob: -16.876955032348633
    8. ',' → logprob: -17.001955032348633
    9. ')#' → logprob: -17.126955032348633
    10. ')`
' → logprob: -17.751955032348633

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7436701059341431
    2. 'top' → logprob: -0.9936701059341431
    3. ' top' → logprob: -1.868670105934143
    4. '   ' → logprob: -10.493670463562012
    5. '	top' → logprob: -10.743670463562012
    6. '[top' → logprob: -10.993670463562012
    7. '
' → logprob: -11.618670463562012
    8. '(top' → logprob: -12.118670463562012
    9. '.top' → logprob: -12.868670463562012
    10. '_top' → logprob: -13.743670463562012

Token 201: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' (adapté à ' top') → logprob: -0.2523115277290344
    2. ' top' → logprob: -1.5023114681243896
    3. '       ' → logprob: -7.877311706542969
    4. '   ' → logprob: -13.752311706542969
    5. '	top' → logprob: -13.752311706542969
    6. '[top' → logprob: -15.127311706542969
    7. ' ' → logprob: -15.627311706542969
    8. 'Top' → logprob: -16.00231170654297
    9. '(top' → logprob: -16.37731170654297
    10. '      ' → logprob: -16.75231170654297

Token 202: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00594479450955987
    2. '_' → logprob: -5.255944728851318
    3. '_a' → logprob: -7.255944728851318
    4. 'b' → logprob: -13.255945205688477
    5. ' _' → logprob: -13.380945205688477
    6. '_s' → logprob: -14.630945205688477
    7. '_
' → logprob: -15.255945205688477
    8. '_f' → logprob: -15.755945205688477
    9. '_c' → logprob: -16.255945205688477
    10. '=_' → logprob: -16.505945205688477

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740791916847229
    2. ' =' → logprob: -0.9740791916847229
    3. ' ' → logprob: -13.974079132080078
    4. ')' → logprob: -14.224079132080078
    5. '(' → logprob: -15.974079132080078
    6. ' =)' → logprob: -16.099079132080078
    7. ')=' → logprob: -16.599079132080078
    8. '[' → logprob: -16.849079132080078
    9. ' =
' → logprob: -17.099079132080078
    10. '=
' → logprob: -17.224079132080078

Token 204: ' ladder' (ID: 63451)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2740783095359802
    2. 'lad' → logprob: -1.649078369140625
    3. ' ladder' → logprob: -3.399078369140625
    4. 'top' → logprob: -4.399078369140625
    5. ' b' → logprob: -7.149078369140625
    6. ' top' → logprob: -7.774078369140625
    7. '(b' → logprob: -8.024078369140625
    8. 'l' → logprob: -9.024078369140625
    9. 'bottom' → logprob: -10.024078369140625
    10. '_b' → logprob: -10.899078369140625

Token 205: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.05094088613986969
    2. '_b' → logprob: -3.050940990447998
    3. 'top' → logprob: -6.175940990447998
    4. 'b' → logprob: -8.30094051361084
    5. 'Top' → logprob: -11.92594051361084
    6. '_bottom' → logprob: -12.17594051361084
    7. '_t' → logprob: -12.67594051361084
    8. '[top' → logprob: -13.05094051361084
    9. '_' → logprob: -13.42594051361084
    10. '_TOP' → logprob: -13.80094051361084

Token 206: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.3902033970225602e-05
    2. 'b' → logprob: -11.250014305114746
    3. ' (' → logprob: -14.250014305114746
    4. '(' → logprob: -15.250014305114746
    5. '(B' → logprob: -17.87501335144043
    6. ' b' → logprob: -19.37501335144043
    7. '	b' → logprob: -19.62501335144043
    8. '(
' → logprob: -20.00001335144043
    9. '[b' → logprob: -20.25001335144043
    10. ')b' → logprob: -20.62501335144043

Token 207: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.786196975852363e-05
    2. ')
' → logprob: -10.500038146972656
    3. ' )' → logprob: -11.875038146972656
    4. '       ' → logprob: -12.875038146972656
    5. ')

' → logprob: -15.125038146972656
    6. '   ' → logprob: -15.875038146972656
    7. '<|end|>' → logprob: -16.125038146972656
    8. '
' → logprob: -16.375038146972656
    9. '),' → logprob: -17.500038146972656
    10. '#' → logprob: -17.500038146972656

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015714650973677635
    2. 'from' → logprob: -4.640714645385742
    3. 'dist' → logprob: -5.640714645385742
    4. '        
' → logprob: -7.140714645385742
    5. 'dp' → logprob: -7.515714645385742
    6. '
' → logprob: -7.765714645385742
    7. 'queue' → logprob: -8.765714645385742
    8. 'distance' → logprob: -8.890714645385742
    9. 'import' → logprob: -9.390714645385742
    10. '   ' → logprob: -9.640714645385742

Token 209: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.24267162382602692
    2. 'from' → logprob: -2.3676717281341553
    3. 'dp' → logprob: -3.1176717281341553
    4. 'visited' → logprob: -3.6176717281341553
    5. 'graph' → logprob: -3.8676717281341553
    6. 'queue' → logprob: -4.367671489715576
    7. 'dq' → logprob: -5.617671489715576
    8. 'q' → logprob: -5.742671489715576
    9. '       ' → logprob: -5.867671489715576
    10. '
' → logprob: -5.992671489715576

Token 210: ' Next' (ID: 13886)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18513792753219604
    2. 'from' → logprob: -2.810137987136841
    3. 'queue' → logprob: -4.060137748718262
    4. '   ' → logprob: -4.185137748718262
    5. '       ' → logprob: -4.185137748718262
    6. 'dp' → logprob: -4.560137748718262
    7. 'visited' → logprob: -4.560137748718262
    8. 'dq' → logprob: -4.560137748718262
    9. 'graph' → logprob: -4.810137748718262
    10. 'q' → logprob: -5.310137748718262

Token 211: ' position' (ID: 4010)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4468289315700531
    2. '
' → logprob: -1.8218289613723755
    3. 'visited' → logprob: -2.446828842163086
    4. 'dist' → logprob: -2.821828842163086
    5. 'from' → logprob: -4.071828842163086
    6. '   ' → logprob: -4.946828842163086
    7. 'steps' → logprob: -5.321828842163086
    8. 'dp' → logprob: -5.446828842163086
    9. '        
' → logprob: -5.571828842163086
    10. ' visited' → logprob: -5.946828842163086

Token 212: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.057852182537317276
    2. 's' → logprob: -3.932852268218994
    3. '       ' → logprob: -4.307852268218994
    4. '   ' → logprob: -6.057852268218994
    5. ' for' → logprob: -6.182852268218994
    6. 'def' → logprob: -6.307852268218994
    7. ' def' → logprob: -6.307852268218994
    8. '=' → logprob: -6.432852268218994
    9. ' positions' → logprob: -6.557852268218994
    10. ' moves' → logprob: -6.557852268218994

Token 213: ' landing' (ID: 30271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3005813360214233
    2. '(i' → logprob: -1.4255813360214233
    3. 'pos' → logprob: -2.050581455230713
    4. 'moving' → logprob: -2.925581455230713
    5. '(x' → logprob: -3.050581455230713
    6. 'x' → logprob: -3.175581455230713
    7. 'i' → logprob: -3.425581455230713
    8. '(pos' → logprob: -3.675581455230713
    9. ' (' → logprob: -4.050581455230713
    10. 'the' → logprob: -4.175581455230713

Token 214: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008600505068898201
    2. '_a' → logprob: -5.25860071182251
    3. '=' → logprob: -6.63360071182251
    4. 'def' → logprob: -8.383600234985352
    5. ' =
' → logprob: -8.758600234985352
    6. 's' → logprob: -8.758600234985352
    7. '_pos' → logprob: -8.758600234985352
    8. '       ' → logprob: -9.008600234985352
    9. '   ' → logprob: -9.008600234985352
    10. ':' → logprob: -9.008600234985352

Token 215: ' a' (ID: 261)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.8646494150161743
    2. ' top' → logprob: -1.8646494150161743
    3. 'a' → logprob: -1.9896494150161743
    4. 'the' → logprob: -2.2396492958068848
    5. ' the' → logprob: -2.7396492958068848
    6. 'side' → logprob: -3.2396492958068848
    7. ' a' → logprob: -3.3646492958068848
    8. 'floor' → logprob: -4.364649295806885
    9. ' side' → logprob: -4.989649295806885
    10. 'current' → logprob: -5.864649295806885

Token 216: ' floor' (ID: 8350)
  Prédit: ' ladder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ladder' → logprob: -0.1666504144668579
    2. 'lad' → logprob: -2.9166502952575684
    3. ' floor' → logprob: -3.0416502952575684
    4. 'floor' → logprob: -3.4166502952575684
    5. ' building' → logprob: -5.291650295257568
    6. ' side' → logprob: -5.541650295257568
    7. 'side' → logprob: -5.666650295257568
    8. 'building' → logprob: -7.416650295257568
    9. ' platform' → logprob: -7.666650295257568
    10. ' stair' → logprob: -7.916650295257568

Token 217: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11517585813999176
    2. 'def' → logprob: -2.99017596244812
    3. ' def' → logprob: -3.36517596244812
    4. '       ' → logprob: -4.990175724029541
    5. '=' → logprob: -5.365175724029541
    6. ':' → logprob: -5.490175724029541
    7. '   ' → logprob: -6.740175724029541
    8. ' in' → logprob: -6.990175724029541
    9. ' (' → logprob: -7.115175724029541
    10. ' =
' → logprob: -7.240175724029541

Token 218: ' wall' (ID: 9688)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.294255793094635
    2. 'lad' → logprob: -1.6692557334899902
    3. 'l' → logprob: -3.2942557334899902
    4. ' ladder' → logprob: -4.41925573348999
    5. ' a' → logprob: -4.54425573348999
    6. '1' → logprob: -6.41925573348999
    7. 'an' → logprob: -7.04425573348999
    8. ' ladd' → logprob: -7.41925573348999
    9. 'stairs' → logprob: -7.60675573348999
    10. '```' → logprob: -7.98175573348999

Token 219: ' type' (ID: 1490)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4684683084487915
    2. ' =' → logprob: -1.4684683084487915
    3. 's' → logprob: -2.093468189239502
    4. ',' → logprob: -2.468468189239502
    5. '   ' → logprob: -3.093468189239502
    6. ' or' → logprob: -3.218468189239502
    7. '       ' → logprob: -3.343468189239502
    8. ' is' → logprob: -3.343468189239502
    9. '=' → logprob: -3.593468189239502
    10. '(s' → logprob: -3.843468189239502

Token 220: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6780912280082703
    2. '_a' → logprob: -2.178091287612915
    3. '_' → logprob: -2.428091287612915
    4. ':' → logprob: -2.928091287612915
    5. '=' → logprob: -3.303091287612915
    6. 'a' → logprob: -3.553091287612915
    7. ' ' → logprob: -3.803091287612915
    8. ' (' → logprob: -3.928091287612915
    9. '1' → logprob: -3.928091287612915
    10. '[' → logprob: -4.178091049194336

Token 221: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.049564141780138016
    2. '        ' → logprob: -4.549564361572266
    3. ' 
' → logprob: -4.549564361572266
    4. '<|end|>' → logprob: -4.549564361572266
    5. ' ' → logprob: -5.799564361572266
    6. ''' → logprob: -6.049564361572266
    7. '    ' → logprob: -6.299564361572266
    8. '"' → logprob: -6.799564361572266
    9. '       ' → logprob: -7.049564361572266
    10. 'space' → logprob: -7.424564361572266

Token 222: ' #' (ID: 1069)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9110705852508545
    2. ' ' → logprob: -1.0360705852508545
    3. 'def' → logprob: -3.2860705852508545
    4. ' 
' → logprob: -3.4110705852508545
    5. '        ' → logprob: -3.5360705852508545
    6. '<|end|>' → logprob: -4.161070823669434
    7. ' wall' → logprob: -4.286070823669434
    8. ' (' → logprob: -4.411070823669434
    9. ' s' → logprob: -4.536070823669434
    10. ' next' → logprob: -4.911070823669434

Token 223: ' for' (ID: 395)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.025429606437683
    2. 'def' → logprob: -1.650429606437683
    3. ' for' → logprob: -2.1504297256469727
    4. '#' → logprob: -2.4004297256469727
    5. ' next' → logprob: -2.5254297256469727
    6. ' #' → logprob: -3.6504297256469727
    7. 'for' → logprob: -4.150429725646973
    8. ' if' → logprob: -4.275429725646973
    9. ' wall' → logprob: -4.275429725646973
    10. ' ' → logprob: -4.525429725646973

Token 224: ' normal' (ID: 6078)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.9568303823471069
    2. ' a' → logprob: -1.706830382347107
    3. 'a' → logprob: -1.956830382347107
    4. ' floor' → logprob: -2.5818305015563965
    5. 'side' → logprob: -2.8318305015563965
    6. ' i' → logprob: -3.2068305015563965
    7. ' building' → logprob: -3.7068305015563965
    8. 'i' → logprob: -4.3318305015563965
    9. 'floor' → logprob: -4.4568305015563965
    10. '0' → logprob: -4.4568305015563965

Token 225: ' wall' (ID: 9688)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11393047124147415
    2. ' ' → logprob: -3.3639304637908936
    3. ',' → logprob: -3.6139304637908936
    4. ' (' → logprob: -4.613930702209473
    5. ' ,' → logprob: -4.863930702209473
    6. ' _' → logprob: -5.363930702209473
    7. '[' → logprob: -5.613930702209473
    8. '_floor' → logprob: -5.613930702209473
    9. '_a' → logprob: -6.238930702209473
    10. ' =' → logprob: -6.488930702209473

Token 226: '(' (ID: 7)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.139675259590149
    2. ' ,' → logprob: -1.764675259590149
    3. ' ' → logprob: -2.0146751403808594
    4. '<|end|>' → logprob: -2.3896751403808594
    5. '_' → logprob: -2.8896751403808594
    6. ':' → logprob: -3.0146751403808594
    7. ' (' → logprob: -3.1396751403808594
    8. '_a' → logprob: -3.7646751403808594
    9. 's' → logprob: -3.8896751403808594
    10. ' :' → logprob: -4.139675140380859

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24010784924030304
    2. 'a' → logprob: -2.365107774734497
    3. ' ' → logprob: -2.740107774734497
    4. '1' → logprob: -4.240108013153076
    5. ' a' → logprob: -4.365108013153076
    6. ''' → logprob: -4.740108013153076
    7. ')' → logprob: -4.990108013153076
    8. ''a' → logprob: -5.115108013153076
    9. ' '' → logprob: -6.365108013153076
    10. '"' → logprob: -7.740108013153076

Token 228: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7316672801971436
    2. '):' → logprob: -0.8566672801971436
    3. ' ):' → logprob: -3.3566672801971436
    4. ' )' → logprob: -3.4816672801971436
    5. '),' → logprob: -4.231667518615723
    6. '):
' → logprob: -4.856667518615723
    7. ' ),' → logprob: -6.231667518615723
    8. ',' → logprob: -6.356667518615723
    9. ' ):
' → logprob: -7.106667518615723
    10. '):

' → logprob: -7.106667518615723

Token 229: ' stay' (ID: 5092)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.25147920846939087
    2. ' if' → logprob: -2.876479148864746
    3. ' pos' → logprob: -3.501479148864746
    4. ' continue' → logprob: -3.751479148864746
    5. ' current' → logprob: -4.001479148864746
    6. ' nxt' → logprob: -4.001479148864746
    7. ' pass' → logprob: -4.251479148864746
    8. 'next' → logprob: -4.626479148864746
    9. ' prev' → logprob: -4.751479148864746
    10. ' x' → logprob: -4.751479148864746

Token 230: ' same' (ID: 2684)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8262776732444763
    2. ' on' → logprob: -1.576277732849121
    3. 'in' → logprob: -1.951277732849121
    4. ' at' → logprob: -2.576277732849121
    5. '<|end|>' → logprob: -3.201277732849121
    6. 'on' → logprob: -3.826277732849121
    7. 'at' → logprob: -4.826277732849121
    8. ' as' → logprob: -5.076277732849121
    9. 'right' → logprob: -5.201277732849121
    10. ' inplace' → logprob: -5.326277732849121

Token 231: ' floor' (ID: 8350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28855621814727783
    2. '\n' → logprob: -2.6635560989379883
    3. ',' → logprob: -3.4135560989379883
    4. '       ' → logprob: -3.6635560989379883
    5. '        
' → logprob: -3.6635560989379883
    6. ' 
' → logprob: -3.6635560989379883
    7. '<|end|>' → logprob: -3.9135560989379883
    8. '  
' → logprob: -4.163556098937988
    9. '    
' → logprob: -4.663556098937988
    10. '```' → logprob: -5.413556098937988

Token 232: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3497723340988159
    2. '       ' → logprob: -1.599772334098816
    3. '
' → logprob: -3.0997724533081055
    4. ',
' → logprob: -4.3497724533081055
    5. '        
' → logprob: -4.9747724533081055
    6. '\n' → logprob: -5.5997724533081055
    7. '<|end|>' → logprob: -5.5997724533081055
    8. ' ,' → logprob: -5.7247724533081055
    9. '```' → logprob: -5.8497724533081055
    10. ' with' → logprob: -6.3497724533081055

Token 233: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5364304184913635
    2. '       ' → logprob: -1.2864303588867188
    3. '        
' → logprob: -3.0364303588867188
    4. ' ,' → logprob: -3.9114303588867188
    5. '\n' → logprob: -4.161430358886719
    6. ' (' → logprob: -4.411430358886719
    7. '<|end|>' → logprob: -4.786430358886719
    8. ' for' → logprob: -5.536430358886719
    9. '#' → logprob: -5.661430358886719
    10. ' and' → logprob: -5.911430358886719

Token 234: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.12569864094257355
    2. '       ' → logprob: -2.3756985664367676
    3. ' #' → logprob: -4.500698566436768
    4. ' for' → logprob: -5.125698566436768
    5. ',' → logprob: -5.250698566436768
    6. ' next' → logprob: -7.000698566436768
    7. ' (' → logprob: -7.875698566436768
    8. '<|end|>' → logprob: -8.000699043273926
    9. 'next' → logprob: -8.375699043273926
    10. 'for' → logprob: -8.875699043273926

Token 235: ' for' (ID: 395)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8154832720756531
    2. ' for' → logprob: -0.8154832720756531
    3. 'for' → logprob: -2.315483331680298
    4. ' #' → logprob: -4.690483093261719
    5. '       ' → logprob: -5.190483093261719
    6. ' next' → logprob: -7.065483093261719
    7. 'next' → logprob: -8.440483093261719
    8. ' ' → logprob: -9.190483093261719
    9. '   ' → logprob: -9.440483093261719
    10. ' floor' → logprob: -9.565483093261719

Token 236: ' ladder' (ID: 63451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1005374193191528
    2. ' ladder' → logprob: -1.4755374193191528
    3. '0' → logprob: -1.8505374193191528
    4. ' wall' → logprob: -1.9755374193191528
    5. ' normal' → logprob: -2.7255373001098633
    6. '1' → logprob: -3.1005373001098633
    7. 'wall' → logprob: -4.725537300109863
    8. 'normal' → logprob: -4.850537300109863
    9. ' stair' → logprob: -5.850537300109863
    10. ' stairs' → logprob: -6.788037300109863

Token 237: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03691641986370087
    2. ' (' → logprob: -3.411916494369507
    3. '_top' → logprob: -6.036916255950928
    4. '_' → logprob: -8.161916732788086
    5. '0' → logprob: -8.286916732788086
    6. ':' → logprob: -9.161916732788086
    7. '1' → logprob: -10.411916732788086
    8. 'top' → logprob: -10.411916732788086
    9. 's' → logprob: -10.661916732788086
    10. ' ' → logprob: -11.161916732788086

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04366093501448631
    2. '0' → logprob: -3.793660879135132
    3. ' ' → logprob: -3.918660879135132
    4. '(' → logprob: -8.543661117553711
    5. ')' → logprob: -9.668661117553711
    6. ' (' → logprob: -11.168661117553711
    7. '=' → logprob: -11.293661117553711
    8. ' )' → logprob: -11.668661117553711
    9. '   ' → logprob: -11.918661117553711
    10. '_' → logprob: -11.918661117553711

Token 239: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005874871741980314
    2. ' ):' → logprob: -6.0058746337890625
    3. ')' → logprob: -6.1308746337890625
    4. '):
' → logprob: -7.0058746337890625
    5. ':' → logprob: -8.380874633789062
    6. '):

' → logprob: -10.505874633789062
    7. ' )' → logprob: -11.255874633789062
    8. ',' → logprob: -11.505874633789062
    9. '+' → logprob: -11.755874633789062
    10. ' ):
' → logprob: -12.755874633789062

Token 240: ' go' (ID: 810)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.6071916222572327
    2. ' move' → logprob: -1.607191562652588
    3. ' go' → logprob: -1.857191562652588
    4. ' jump' → logprob: -2.857191562652588
    5. 'top' → logprob: -4.607191562652588
    6. ' stay' → logprob: -4.607191562652588
    7. ' next' → logprob: -5.732191562652588
    8. ' i' → logprob: -5.857191562652588
    9. ' floor' → logprob: -6.107191562652588
    10. ' ' → logprob: -6.357191562652588

Token 241: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3336789011955261
    2. ' up' → logprob: -1.708678960800171
    3. 'to' → logprob: -2.833678960800171
    4. ' one' → logprob: -3.458678960800171
    5. 'up' → logprob: -4.708678722381592
    6. ' top' → logprob: -6.458678722381592
    7. 'top' → logprob: -7.208678722381592
    8. 'one' → logprob: -7.458678722381592
    9. ' down' → logprob: -9.08367919921875
    10. ' ' → logprob: -9.08367919921875

Token 242: ' ladder' (ID: 63451)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.0735357254743576
    2. 'top' → logprob: -2.948535680770874
    3. ' the' → logprob: -4.323535919189453
    4. ' next' → logprob: -5.448535919189453
    5. 'the' → logprob: -7.323535919189453
    6. 'next' → logprob: -8.823535919189453
    7. ' floor' → logprob: -9.948535919189453
    8. ' ' → logprob: -11.323535919189453
    9. '[top' → logprob: -11.448535919189453
    10. ' ' → logprob: -11.573535919189453

Token 243: ' top' (ID: 2344)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.04250851646065712
    2. 'top' → logprob: -3.417508602142334
    3. ' top' → logprob: -5.917508602142334
    4. 's' → logprob: -6.042508602142334
    5. ' _' → logprob: -6.792508602142334
    6. '_bottom' → logprob: -7.292508602142334
    7. '[top' → logprob: -8.417508125305176
    8. '_s' → logprob: -8.667508125305176
    9. '_end' → logprob: -8.667508125305176
    10. '   ' → logprob: -9.042508125305176

Token 244: ' floor' (ID: 8350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9266059994697571
    2. '       ' → logprob: -0.9266059994697571
    3. '        
' → logprob: -1.8016059398651123
    4. ',' → logprob: -4.176606178283691
    5. '<|end|>' → logprob: -4.676606178283691
    6. '\n' → logprob: -5.301606178283691
    7. '        

' → logprob: -5.551606178283691
    8. ',
' → logprob: -6.176606178283691
    9. '

' → logprob: -6.926606178283691
    10. '        ' → logprob: -7.426606178283691

Token 245: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34642815589904785
    2. '        
' → logprob: -1.8464281558990479
    3. '
' → logprob: -2.346428155899048
    4. '\n' → logprob: -4.471427917480469
    5. ',' → logprob: -4.721427917480469
    6. '<|end|>' → logprob: -5.846427917480469
    7. ' 
' → logprob: -5.971427917480469
    8. '  
' → logprob: -6.221427917480469
    9. '\' → logprob: -6.846427917480469
    10. ',
' → logprob: -7.096427917480469

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5641838312149048
    2. '        
' → logprob: -1.0641838312149048
    3. '
' → logprob: -2.5641837120056152
    4. '<|end|>' → logprob: -5.689183712005615
    5. '        ' → logprob: -6.439183712005615
    6. 'next' → logprob: -6.689183712005615
    7. ',' → logprob: -7.564183712005615
    8. ' next' → logprob: -8.064184188842773
    9. '        

' → logprob: -8.189184188842773
    10. '```' → logprob: -8.439184188842773

Token 247: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.58963543176651
    2. '       ' → logprob: -1.3396353721618652
    3. '        
' → logprob: -2.4646353721618652
    4. ' next' → logprob: -3.2146353721618652
    5. 'next' → logprob: -3.4646353721618652
    6. 'def' → logprob: -4.464635372161865
    7. ' 
' → logprob: -5.714635372161865
    8. '        ' → logprob: -6.339635372161865
    9. 'dp' → logprob: -7.089635372161865
    10. ' def' → logprob: -7.339635372161865

Token 248: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4528640508651733
    2. 'def' → logprob: -1.4528640508651733
    3. 'next' → logprob: -1.5778640508651733
    4. 'dp' → logprob: -1.9528640508651733
    5. 'for' → logprob: -3.327864170074463
    6. 'from' → logprob: -3.452864170074463
    7. ' next' → logprob: -3.452864170074463
    8. '   ' → logprob: -4.452864170074463
    9. ' for' → logprob: -4.577864170074463
    10. ' def' → logprob: -4.952864170074463

Token 249: ' slippery' (ID: 126315)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' other' → logprob: -1.4284696578979492
    2. ' normal' → logprob: -1.5534696578979492
    3. ' the' → logprob: -2.053469657897949
    4. ' building' → logprob: -2.678469657897949
    5. 'other' → logprob: -3.053469657897949
    6. ' side' → logprob: -3.178469657897949
    7. ' a' → logprob: -3.178469657897949
    8. 'side' → logprob: -3.803469657897949
    9. ' both' → logprob: -3.928469657897949
    10. ' ladder' → logprob: -4.053469657897949

Token 250: '(' (ID: 7)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08794422447681427
    2. '(' → logprob: -3.337944269180298
    3. ' (' → logprob: -3.462944269180298
    4. ' _' → logprob: -4.337944030761719
    5. ' ' → logprob: -7.337944030761719
    6. '_floor' → logprob: -7.462944030761719
    7. '(_)' → logprob: -7.837944030761719
    8. '_wall' → logprob: -7.837944030761719
    9. ':' → logprob: -8.212944030761719
    10. '\' → logprob: -8.587944030761719

Token 251: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02203180454671383
    2. ' ' → logprob: -4.522031784057617
    3. '1' → logprob: -5.147031784057617
    4. '(' → logprob: -5.897031784057617
    5. '0' → logprob: -6.897031784057617
    6. '-' → logprob: -7.397031784057617
    7. ' (' → logprob: -7.772031784057617
    8. ' -' → logprob: -9.022031784057617
    9. '3' → logprob: -9.772031784057617
    10. '_' → logprob: -9.897031784057617

Token 252: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0061091473326087
    2. ')' → logprob: -5.881109237670898
    3. '):
' → logprob: -6.131109237670898
    4. ':' → logprob: -7.256109237670898
    5. ' ):' → logprob: -8.006109237670898
    6. '):

' → logprob: -9.756109237670898
    7. '+' → logprob: -12.131109237670898
    8. ' :' → logprob: -12.756109237670898
    9. ' )' → logprob: -13.006109237670898
    10. '   ' → logprob: -13.006109237670898

Token 253: ' slide' (ID: 24969)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.61448073387146
    2. ' next' → logprob: -1.61448073387146
    3. ' if' → logprob: -2.11448073387146
    4. ' go' → logprob: -2.48948073387146
    5. ' current' → logprob: -2.98948073387146
    6. ' lambda' → logprob: -3.11448073387146
    7. ' ' → logprob: -3.23948073387146
    8. ' n' → logprob: -3.48948073387146
    9. ' floor' → logprob: -3.48948073387146
    10. ' top' → logprob: -3.61448073387146

Token 254: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.7364605069160461
    2. 'down' → logprob: -1.3614604473114014
    3. ' floor' → logprob: -2.3614604473114014
    4. ' next' → logprob: -3.2364604473114014
    5. ' one' → logprob: -3.3614604473114014
    6. ' to' → logprob: -4.3614606857299805
    7. '<|end|>' → logprob: -4.7364606857299805
    8. '<|end|>' → logprob: -4.7364606857299805
    9. ' up' → logprob: -4.8614606857299805
    10. 'floor' → logprob: -4.8614606857299805

Token 255: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5113641023635864
    2. '<|end|>' → logprob: -2.136363983154297
    3. ' one' → logprob: -3.261363983154297
    4. ' ' → logprob: -3.261363983154297
    5. 'down' → logprob: -4.011363983154297
    6. ' (' → logprob: -4.136363983154297
    7. '
' → logprob: -4.261363983154297
    8. '1' → logprob: -4.261363983154297
    9. ',' → logprob: -4.386363983154297
    10. ' until' → logprob: -4.761363983154297

Token 256: ' floor' (ID: 8350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.408120036125183
    2. '0' → logprob: -1.533120036125183
    3. 'floor' → logprob: -1.783120036125183
    4. ' floor' → logprob: -2.2831201553344727
    5. ' i' → logprob: -2.5331201553344727
    6. 'n' → logprob: -2.6581201553344727
    7. ' next' → logprob: -3.2831201553344727
    8. ' the' → logprob: -3.7831201553344727
    9. ' n' → logprob: -4.158120155334473
    10. 'next' → logprob: -4.158120155334473

Token 257: ' with' (ID: 483)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9320017099380493
    2. '-' → logprob: -1.4320017099380493
    3. '0' → logprob: -1.9320017099380493
    4. '+' → logprob: -2.5570015907287598
    5. ' +' → logprob: -3.0570015907287598
    6. 'n' → logprob: -4.43200159072876
    7. 's' → logprob: -4.43200159072876
    8. '(n' → logprob: -4.68200159072876
    9. '       ' → logprob: -4.93200159072876
    10. ' (' → logprob: -5.18200159072876

Token 258: ' normal' (ID: 6078)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7536582350730896
    2. '2' → logprob: -2.0036582946777344
    3. 'wall' → logprob: -2.1286582946777344
    4. ' wall' → logprob: -2.2536582946777344
    5. ' ' → logprob: -3.5036582946777344
    6. 'a' → logprob: -4.253658294677734
    7. ' same' → logprob: -4.378658294677734
    8. ' the' → logprob: -4.378658294677734
    9. 'same' → logprob: -4.503658294677734
    10. ' a' → logprob: -4.628658294677734

Token 259: '(' (ID: 7)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3462672829627991
    2. '_floor' → logprob: -2.2212672233581543
    3. ' _' → logprob: -2.9712672233581543
    4. '0' → logprob: -3.3462672233581543
    5. ' or' → logprob: -3.5962672233581543
    6. ' ' → logprob: -4.346267223358154
    7. '_wall' → logprob: -4.346267223358154
    8. '<|end|>' → logprob: -4.346267223358154
    9. '(' → logprob: -5.971267223358154
    10. '_
' → logprob: -5.971267223358154

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0075068906880915165
    2. ' ' → logprob: -5.257506847381592
    3. ')' → logprob: -7.257506847381592
    4. '2' → logprob: -7.507506847381592
    5. '1' → logprob: -7.882506847381592
    6. ' or' → logprob: -8.75750732421875
    7. 'a' → logprob: -9.63250732421875
    8. ' )' → logprob: -9.75750732421875
    9. '```' → logprob: -9.88250732421875
    10. 'wall' → logprob: -10.25750732421875

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2562788724899292
    2. ' or' → logprob: -1.5062788724899292
    3. ' )' → logprob: -6.131278991699219
    4. 'or' → logprob: -6.506278991699219
    5. '<|end|>' → logprob: -8.381278991699219
    6. '')' → logprob: -9.006278991699219
    7. ')
' → logprob: -9.506278991699219
    8. '),' → logprob: -9.631278991699219
    9. 's' → logprob: -9.881278991699219
    10. '
' → logprob: -10.631278991699219

Token 262: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1826058179140091
    2. '
' → logprob: -1.9326058626174927
    3. '        
' → logprob: -5.057605743408203
    4. '<|end|>' → logprob: -5.432605743408203
    5. ' 
' → logprob: -6.182605743408203
    6. ',' → logprob: -6.557605743408203
    7. ' or' → logprob: -6.682605743408203
    8. ' ' → logprob: -6.932605743408203
    9. ' and' → logprob: -7.432605743408203
    10. '  
' → logprob: -7.432605743408203

Token 263: ' ladder' (ID: 63451)
  Prédit: 'lad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lad' → logprob: -0.24564161896705627
    2. ' ladder' → logprob: -2.1206417083740234
    3. '1' → logprob: -2.6206417083740234
    4. 'sl' → logprob: -4.245641708374023
    5. '2' → logprob: -5.370641708374023
    6. ' ' → logprob: -5.745641708374023
    7. 'wall' → logprob: -7.495641708374023
    8. 'a' → logprob: -7.495641708374023
    9. ' slippery' → logprob: -8.620641708374023
    10. '```' → logprob: -9.245641708374023

Token 264: ''s' (ID: 885)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2907557487487793
    2. ' (' → logprob: -1.9157557487487793
    3. '       ' → logprob: -2.2907557487487793
    4. '(' → logprob: -2.4157557487487793
    5. ' ' → logprob: -3.6657557487487793
    6. '_top' → logprob: -3.6657557487487793
    7. 's' → logprob: -3.7907557487487793
    8. ' or' → logprob: -3.7907557487487793
    9. ',' → logprob: -3.9157557487487793
    10. '_floor' → logprob: -3.9157557487487793

Token 265: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.7807608842849731
    2. ' top' → logprob: -1.0307608842849731
    3. '1' → logprob: -2.0307607650756836
    4. 'floor' → logprob: -4.530760765075684
    5. ' floor' → logprob: -4.905760765075684
    6. 'type' → logprob: -4.905760765075684
    7. ' type' → logprob: -5.405760765075684
    8. '0' → logprob: -5.405760765075684
    9. ' ' → logprob: -5.530760765075684
    10. '2' → logprob: -5.530760765075684

Token 266: ' floor' (ID: 8350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43090009689331055
    2. '
' → logprob: -2.3059000968933105
    3. ')' → logprob: -3.3059000968933105
    4. ' floor' → logprob: -3.9309000968933105
    5. '_' → logprob: -4.1809000968933105
    6. '   ' → logprob: -4.1809000968933105
    7. '_floor' → logprob: -4.3059000968933105
    8. 'down' → logprob: -4.4309000968933105
    9. '(' → logprob: -4.4309000968933105
    10. ' (' → logprob: -4.5559000968933105

Token 267: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15289318561553955
    2. '
' → logprob: -2.27789306640625
    3. '        
' → logprob: -4.40289306640625
    4. '<|end|>' → logprob: -5.02789306640625
    5. ',' → logprob: -5.52789306640625
    6. ' 
' → logprob: -6.27789306640625
    7. '        ' → logprob: -6.52789306640625
    8. '\' → logprob: -6.90289306640625
    9. ' ' → logprob: -7.02789306640625
    10. 'def' → logprob: -7.27789306640625

Token 268: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5656976699829102
    2. 'same' → logprob: -1.4406976699829102
    3. ' the' → logprob: -2.06569766998291
    4. ' same' → logprob: -3.31569766998291
    5. 'that' → logprob: -4.69069766998291
    6. ' that' → logprob: -5.06569766998291
    7. 'side' → logprob: -5.69069766998291
    8. 'next' → logprob: -6.19069766998291
    9. 'current' → logprob: -6.31569766998291
    10. 'b' → logprob: -6.31569766998291

Token 269: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.43981653451919556
    2. 'floor' → logprob: -1.1898164749145508
    3. ' side' → logprob: -3.689816474914551
    4. 'building' → logprob: -5.189816474914551
    5. 'same' → logprob: -5.189816474914551
    6. ' floor' → logprob: -5.314816474914551
    7. 'slide' → logprob: -5.564816474914551
    8. '```' → logprob: -6.814816474914551
    9. 'line' → logprob: -7.439816474914551
    10. '
' → logprob: -7.814816474914551

Token 270: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1357935070991516
    2. '       ' → logprob: -2.260793447494507
    3. 'def' → logprob: -4.635793685913086
    4. '        
' → logprob: -6.260793685913086
    5. '<|end|>' → logprob: -6.260793685913086
    6. ' 
' → logprob: -6.760793685913086
    7. ',' → logprob: -7.010793685913086
    8. ')
' → logprob: -7.010793685913086
    9. '
' → logprob: -7.385793685913086
    10. ' def' → logprob: -7.510793685913086

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033516597002744675
    2. '
' → logprob: -3.9085166454315186
    3. '<|end|>' → logprob: -5.2835164070129395
    4. '        
' → logprob: -5.7835164070129395
    5. ',' → logprob: -7.1585164070129395
    6. '	' → logprob: -7.6585164070129395
    7. ' ' → logprob: -8.033516883850098
    8. '<|end|>' → logprob: -8.033516883850098
    9. '[' → logprob: -8.283516883850098
    10. ' 
' → logprob: -8.283516883850098

Token 272: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1379978358745575
    2. '       ' → logprob: -2.51299786567688
    3. '\n' → logprob: -4.637997627258301
    4. '        
' → logprob: -4.637997627258301
    5. 'def' → logprob: -4.887997627258301
    6. ' 
' → logprob: -5.637997627258301
    7. '  
' → logprob: -5.762997627258301
    8. '<|end|>' → logprob: -5.887997627258301
    9. '```' → logprob: -6.012997627258301
    10. '\' → logprob: -6.637997627258301

Token 273: ' sliding' (ID: 53853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5428391695022583
    2. '
' → logprob: -1.2928391695022583
    3. 'def' → logprob: -3.0428390502929688
    4. ' next' → logprob: -4.167839050292969
    5. 'next' → logprob: -4.292839050292969
    6. '        
' → logprob: -4.917839050292969
    7. '   ' → logprob: -4.917839050292969
    8. 'dp' → logprob: -5.042839050292969
    9. 'for' → logprob: -5.167839050292969
    10. ' for' → logprob: -5.167839050292969

Token 274: ' applies' (ID: 28134)
  Prédit: ' down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.2609562277793884
    2. 'down' → logprob: -1.6359562873840332
    3. '_down' → logprob: -4.260956287384033
    4. ' =' → logprob: -5.135956287384033
    5. '=' → logprob: -6.010956287384033
    6. ' is' → logprob: -6.135956287384033
    7. '   ' → logprob: -6.510956287384033
    8. ':' → logprob: -6.635956287384033
    9. ' continues' → logprob: -6.760956287384033
    10. '<|end|>' → logprob: -7.385956287384033

Token 275: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1106985807418823
    2. 'down' → logprob: -1.6106985807418823
    3. ' down' → logprob: -1.8606985807418823
    4. '       ' → logprob: -2.360698699951172
    5. ' only' → logprob: -3.235698699951172
    6. ' until' → logprob: -3.360698699951172
    7. '<|end|>' → logprob: -3.735698699951172
    8. ' next' → logprob: -4.610698699951172
    9. 'def' → logprob: -4.610698699951172
    10. '_down' → logprob: -4.860698699951172

Token 276: ' wall' (ID: 9688)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8586767315864563
    2. 'both' → logprob: -1.9836766719818115
    3. ' the' → logprob: -2.7336766719818115
    4. 'each' → logprob: -2.8586766719818115
    5. ' floors' → logprob: -3.1086766719818115
    6. 'flo' → logprob: -3.3586766719818115
    7. 'floor' → logprob: -3.3586766719818115
    8. 'side' → logprob: -3.7336766719818115
    9. 'sl' → logprob: -3.7336766719818115
    10. 'a' → logprob: -3.8586766719818115

Token 277: ' landed' (ID: 50570)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32540127635002136
    2. '[' → logprob: -1.7004013061523438
    3. ' at' → logprob: -3.8254013061523438
    4. 'type' → logprob: -4.075401306152344
    5. '_type' → logprob: -4.700401306152344
    6. ' type' → logprob: -4.825401306152344
    7. '[next' → logprob: -5.200401306152344
    8. ')' → logprob: -5.575401306152344
    9. '[i' → logprob: -5.700401306152344
    10. '[]' → logprob: -5.700401306152344

Token 278: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20787306129932404
    2. '
' → logprob: -1.8328731060028076
    3. '        
' → logprob: -4.3328728675842285
    4. '\n' → logprob: -5.0828728675842285
    5. '   ' → logprob: -6.9578728675842285
    6. '\' → logprob: -7.2078728675842285
    7. ')' → logprob: -7.4578728675842285
    8. 's' → logprob: -7.5828728675842285
    9. ' 
' → logprob: -7.7078728675842285
    10. ',' → logprob: -7.8328728675842285

Token 279: ' not' (ID: 625)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.176006481051445
    2. '       ' → logprob: -2.051006555557251
    3. '        
' → logprob: -4.051006317138672
    4. '\n' → logprob: -5.176006317138672
    5. ' 
' → logprob: -5.676006317138672
    6. '\' → logprob: -6.926006317138672
    7. '  
' → logprob: -7.051006317138672
    8. '    
' → logprob: -7.676006317138672
    9. '<|end|>' → logprob: -7.676006317138672
    10. '_' → logprob: -8.176006317138672

Token 280: ' to' (ID: 316)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3272676169872284
    2. 'the' → logprob: -1.8272676467895508
    3. '<|end|>' → logprob: -2.702267646789551
    4. ' next' → logprob: -3.702267646789551
    5. ' a' → logprob: -4.702267646789551
    6. 'next' → logprob: -5.452267646789551
    7. ' current' → logprob: -6.077267646789551
    8. 'a' → logprob: -6.327267646789551
    9. 'n' → logprob: -6.327267646789551
    10. 'current' → logprob: -7.077267646789551

Token 281: ' launch' (ID: 11542)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.17020131647586823
    2. ' the' → logprob: -2.170201301574707
    3. 'next' → logprob: -4.420201301574707
    4. 'current' → logprob: -4.670201301574707
    5. 'floor' → logprob: -5.045201301574707
    6. 'position' → logprob: -6.045201301574707
    7. 'wall' → logprob: -6.295201301574707
    8. ' next' → logprob: -6.420201301574707
    9. 'starting' → logprob: -6.670201301574707
    10. 'side' → logprob: -7.045201301574707

Token 282: ' wall' (ID: 9688)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6611071825027466
    2. '
' → logprob: -0.7861071825027466
    3. '<|end|>' → logprob: -4.786107063293457
    4. '        
' → logprob: -5.411107063293457
    5. '\n' → logprob: -5.536107063293457
    6. ')' → logprob: -5.911107063293457
    7. ')
' → logprob: -6.786107063293457
    8. 's' → logprob: -6.786107063293457
    9. 'def' → logprob: -6.911107063293457
    10. ',' → logprob: -7.161107063293457

Token 283: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5019168257713318
    2. '       ' → logprob: -1.1269168853759766
    3. '\n' → logprob: -3.1269168853759766
    4. '        
' → logprob: -4.126916885375977
    5. '\' → logprob: -6.001916885375977
    6. '<|end|>' → logprob: -6.251916885375977
    7. ' 
' → logprob: -6.501916885375977
    8. '  
' → logprob: -7.876916885375977
    9. 's' → logprob: -8.126916885375977
    10. '    
' → logprob: -8.126916885375977

Token 284: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38428929448127747
    2. '       ' → logprob: -1.634289264678955
    3. '\n' → logprob: -3.259289264678955
    4. '        
' → logprob: -3.509289264678955
    5. '<|end|>' → logprob: -3.759289264678955
    6. '\' → logprob: -4.884289264678955
    7. ' 
' → logprob: -5.009289264678955
    8. '  
' → logprob: -5.134289264678955
    9. '    
' → logprob: -6.759289264678955
    10. '```' → logprob: -7.009289264678955

Token 285: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1324494183063507
    2. '
' → logprob: -2.2574493885040283
    3. '        
' → logprob: -4.257449626922607
    4. '<|end|>' → logprob: -6.382449626922607
    5. '\n' → logprob: -7.507449626922607
    6. '  
' → logprob: -7.632449626922607
    7. '   ' → logprob: -7.882449626922607
    8. '    
' → logprob: -8.63244915008545
    9. 'next' → logprob: -8.63244915008545
    10. '#' → logprob: -8.88244915008545

Token 286: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8150186538696289
    2. ' next' → logprob: -1.315018653869629
    3. 'can' → logprob: -1.815018653869629
    4. ' can' → logprob: -3.315018653869629
    5. ' bfs' → logprob: -3.690018653869629
    6. 'b' → logprob: -4.565018653869629
    7. 'jump' → logprob: -5.065018653869629
    8. 'get' → logprob: -5.065018653869629
    9. 'simulate' → logprob: -5.315018653869629
    10. 'slide' → logprob: -5.690018653869629

Token 287: '_floor' (ID: 152330)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12430387735366821
    2. '_position' → logprob: -2.6243038177490234
    3. '_pos' → logprob: -4.124303817749023
    4. '_token' → logprob: -4.374303817749023
    5. '_floor' → logprob: -4.499303817749023
    6. '(' → logprob: -6.374303817749023
    7. ' _' → logprob: -6.624303817749023
    8. '_space' → logprob: -6.999303817749023
    9. '_step' → logprob: -8.999303817749023
    10. '_positions' → logprob: -9.874303817749023

Token 288: '(side' (ID: 95460)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6532449722290039
    2. '(f' → logprob: -0.9032449722290039
    3. '(side' → logprob: -3.028244972229004
    4. '(build' → logprob: -4.903244972229004
    5. '(current' → logprob: -5.278244972229004
    6. '(pos' → logprob: -5.528244972229004
    7. '(s' → logprob: -5.528244972229004
    8. '(position' → logprob: -6.278244972229004
    9. ' (' → logprob: -7.278244972229004
    10. '(start' → logprob: -7.778244972229004

Token 289: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003538158780429512
    2. ' ,' → logprob: -8.500353813171387
    3. '):' → logprob: -9.250353813171387
    4. ',line' → logprob: -11.000353813171387
    5. '   ' → logprob: -11.375353813171387
    6. '(side' → logprob: -12.125353813171387
    7. ',s' → logprob: -12.750353813171387
    8. '_,' → logprob: -12.750353813171387
    9. '):
' → logprob: -13.000353813171387
    10. '_side' → logprob: -13.625353813171387

Token 290: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.317077100276947
    2. ')' → logprob: -1.3170771598815918
    3. 'l' → logprob: -7.192077159881592
    4. 'o' → logprob: -7.317077159881592
    5. ']' → logprob: -8.067076683044434
    6. 'lo' → logprob: -8.442076683044434
    7. '(' → logprob: -8.817076683044434
    8. ')]' → logprob: -8.817076683044434
    9. 'oor' → logprob: -8.942076683044434
    10. ',' → logprob: -8.942076683044434

Token 291: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6340891718864441
    2. '):' → logprob: -0.7590891718864441
    3. ',f' → logprob: -7.13408899307251
    4. '):
' → logprob: -7.50908899307251
    5. ':' → logprob: -10.884089469909668
    6. ' ,' → logprob: -11.009089469909668
    7. ',s' → logprob: -11.134089469909668
    8. '   ' → logprob: -11.134089469909668
    9. ')' → logprob: -11.509089469909668
    10. ',b' → logprob: -11.884089469909668

Token 292: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05685070902109146
    2. '       ' → logprob: -4.056850910186768
    3. '   ' → logprob: -4.056850910186768
    4. '):' → logprob: -4.431850910186768
    5. '(' → logprob: -5.931850910186768
    6. '<|end|>' → logprob: -6.556850910186768
    7. ',' → logprob: -7.056850910186768
    8. '    ' → logprob: -7.181850910186768
    9. '        ' → logprob: -7.681850910186768
    10. '():' → logprob: -7.931850910186768

Token 293: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13947829604148865
    2. '       ' → logprob: -2.5144782066345215
    3. 'if' → logprob: -3.3894782066345215
    4. '   ' → logprob: -4.2644782066345215
    5. '    ' → logprob: -7.7644782066345215
    6. ' side' → logprob: -8.01447868347168
    7. ' ' → logprob: -8.88947868347168
    8. '        ' → logprob: -9.01447868347168
    9. ' floor' → logprob: -9.26447868347168
    10. '	if' → logprob: -10.26447868347168

Token 294: ' side' (ID: 4307)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.670246422290802
    2. ' if' → logprob: -0.795246422290802
    3. '       ' → logprob: -3.4202463626861572
    4. '   ' → logprob: -5.545246601104736
    5. 'floor' → logprob: -8.670246124267578
    6. ' floor' → logprob: -10.545246124267578
    7. 'next' → logprob: -10.670246124267578
    8. ' ' → logprob: -10.795246124267578
    9. 'side' → logprob: -11.420246124267578
    10. ' next' → logprob: -11.545246124267578

Token 295: ':' (ID: 25)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5146839022636414
    2. ' ==' → logprob: -1.0146839618682861
    3. ',' → logprob: -3.514683961868286
    4. '=' → logprob: -5.514683723449707
    5. ' =' → logprob: -6.264683723449707
    6. ':' → logprob: -6.514683723449707
    7. '0' → logprob: -7.764683723449707
    8. ']==' → logprob: -8.264683723449707
    9. ')==' → logprob: -8.389683723449707
    10. ' if' → logprob: -8.639683723449707

Token 296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4241250157356262
    2. 'side' → logprob: -1.7991249561309814
    3. ' side' → logprob: -2.1741249561309814
    4. 'int' → logprob: -3.6741249561309814
    5. ' int' → logprob: -4.0491251945495605
    6. ' ' → logprob: -4.9241251945495605
    7. 'floor' → logprob: -5.4241251945495605
    8. ' floor' → logprob: -5.9241251945495605
    9. 'if' → logprob: -6.1741251945495605
    10. ' if' → logprob: -6.5491251945495605

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5953654050827026
    2. 'side' → logprob: -0.8453654050827026
    3. 'int' → logprob: -4.470365524291992
    4. ' side' → logprob: -5.345365524291992
    5. 'floor' → logprob: -6.720365524291992
    6. ' ' → logprob: -6.970365524291992
    7. ' int' → logprob: -7.970365524291992
    8. ''' → logprob: -8.345365524291992
    9. '1' → logprob: -9.345365524291992
    10. ''s' → logprob: -10.220365524291992

Token 298: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006239468231797218
    2. ' ,' → logprob: -5.631239414215088
    3. ' or' → logprob: -7.756239414215088
    4. '<|end|>' → logprob: -7.756239414215088
    5. '=' → logprob: -8.381239891052246
    6. ' (' → logprob: -8.381239891052246
    7. ')' → logprob: -8.381239891052246
    8. ' ' → logprob: -8.756239891052246
    9. ',f' → logprob: -8.756239891052246
    10. ' =' → logprob: -8.881239891052246

Token 299: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3304362893104553
    2. '1' → logprob: -1.3304362297058105
    3. ' ' → logprob: -4.0804362297058105
    4. ')' → logprob: -9.955436706542969
    5. '   ' → logprob: -10.705436706542969
    6. '<|end|>' → logprob: -10.705436706542969
    7. ' side' → logprob: -11.830436706542969
    8. 'side' → logprob: -11.830436706542969
    9. '[' → logprob: -12.705436706542969
    10. '    ' → logprob: -12.955436706542969

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3177996575832367
    2. '0' → logprob: -1.317799687385559
    3. ' ' → logprob: -6.1927995681762695
    4. 'floor' → logprob: -6.5677995681762695
    5. 'side' → logprob: -7.6927995681762695
    6. ' floor' → logprob: -7.9427995681762695
    7. ')' → logprob: -9.56779956817627
    8. ' side' → logprob: -9.69279956817627
    9. '   ' → logprob: -9.94279956817627
    10. '```' → logprob: -11.44279956817627

Token 301: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2474377155303955
    2. '<|end|>' → logprob: -1.3724377155303955
    3. '   ' → logprob: -1.6224377155303955
    4. '
' → logprob: -1.8724377155303955
    5. ',' → logprob: -2.7474377155303955
    6. '<|end|>' → logprob: -3.6224377155303955
    7. ')' → logprob: -4.872437477111816
    8. ' ' → logprob: -6.747437477111816
    9. '    
' → logprob: -6.997437477111816
    10. ',
' → logprob: -6.997437477111816

Token 302: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08773558586835861
    2. ',' → logprob: -3.462735652923584
    3. '   ' → logprob: -3.462735652923584
    4. '<|end|>' → logprob: -4.462735652923584
    5. ')' → logprob: -6.212735652923584
    6. ':' → logprob: -6.462735652923584
    7. '
' → logprob: -6.587735652923584
    8. '<|end|>' → logprob: -6.962735652923584
    9. '[' → logprob: -7.337735652923584
    10. ':
' → logprob: -7.712735652923584

Token 303: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36708101630210876
    2. ' if' → logprob: -1.7420810461044312
    3. '   ' → logprob: -2.6170809268951416
    4. '<|end|>' → logprob: -4.367081165313721
    5. ',' → logprob: -4.492081165313721
    6. 'if' (adapté à ' if') → logprob: -4.742081165313721
    7. '    ' → logprob: -5.242081165313721
    8. '
' → logprob: -5.742081165313721
    9. '    
' → logprob: -5.867081165313721
    10. ')' → logprob: -6.117081165313721

Token 304: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.4492218792438507
    2. 'floor' → logprob: -1.4492218494415283
    3. ' side' → logprob: -2.8242218494415283
    4. ' floor' → logprob: -2.8242218494415283
    5. '(side' → logprob: -5.574222087860107
    6. '   ' → logprob: -6.699222087860107
    7. ' (' → logprob: -6.699222087860107
    8. ' ' → logprob: -6.949222087860107
    9. '    ' → logprob: -8.82422161102295
    10. '(' → logprob: -8.82422161102295

Token 305: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03394719585776329
    2. '==' → logprob: -3.408947229385376
    3. '[' → logprob: -8.283946990966797
    4. ')==' → logprob: -10.908946990966797
    5. ']==' → logprob: -11.408946990966797
    6. ')' → logprob: -11.908946990966797
    7. ' ' → logprob: -12.033946990966797
    8. '<|end|>' → logprob: -13.783946990966797
    9. '()==' → logprob: -14.158946990966797
    10. '=' → logprob: -14.158946990966797

Token 306: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '1' → logprob: -14.87515926361084
    4. '<|end|>' → logprob: -17.562658309936523
    5. '
' → logprob: -17.937658309936523
    6. '   ' → logprob: -18.625158309936523
    7. '۰' → logprob: -18.875158309936523
    8. ')' → logprob: -19.187658309936523
    9. ',' → logprob: -20.000158309936523
    10. '[' → logprob: -20.062658309936523

Token 307: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.49544036388397217
    2. ':' → logprob: -0.9954403638839722
    3. ' and' → logprob: -3.8704404830932617
    4. 'and' → logprob: -8.745440483093262
    5. ' :
' → logprob: -10.370440483093262
    6. ':
' → logprob: -10.495440483093262
    7. '       ' → logprob: -10.745440483093262
    8. ' :' → logprob: -11.245440483093262
    9. '   ' → logprob: -11.245440483093262
    10. '):
' → logprob: -11.870440483093262

Token 308: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7600213885307312
    2. ':
' → logprob: -1.010021448135376
    3. ':' → logprob: -2.760021448135376
    4. ' and' → logprob: -3.010021448135376
    5. '           ' → logprob: -3.510021448135376
    6. '               ' → logprob: -4.385021209716797
    7. '   ' → logprob: -5.760021209716797
    8. ' if' → logprob: -6.135021209716797
    9. '
' → logprob: -6.635021209716797
    10. 'and' → logprob: -6.760021209716797

Token 309: ' w' (ID: 286)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2794663608074188
    2. ' if' → logprob: -1.5294663906097412
    3. 'wall' → logprob: -4.529466152191162
    4. '           ' → logprob: -5.279466152191162
    5. 'floor' → logprob: -6.029466152191162
    6. '               ' → logprob: -6.279466152191162
    7. 'a' → logprob: -6.654466152191162
    8. 'f' → logprob: -6.904466152191162
    9. '       ' → logprob: -6.904466152191162
    10. 'b' → logprob: -7.279466152191162

Token 310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.514132559299469
    2. ' =' → logprob: -1.5141324996948242
    3. 'e' → logprob: -2.264132499694824
    4. 'a' → logprob: -2.639132499694824
    5. 'all' → logprob: -6.264132499694824
    6. '=e' → logprob: -6.264132499694824
    7. '   ' → logprob: -7.264132499694824
    8. 's' → logprob: -7.389132499694824
    9. 'hile' → logprob: -7.889132499694824
    10. '=a' → logprob: -8.639132499694824

Token 311: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.494741632603109e-05
    2. ' a' → logprob: -9.37508487701416
    3. '	a' → logprob: -16.750085830688477
    4. '   ' → logprob: -16.875085830688477
    5. 'b' → logprob: -18.250085830688477
    6. ''a' → logprob: -19.625085830688477
    7. '_a' → logprob: -19.750085830688477
    8. '(a' → logprob: -19.750085830688477
    9. '[a' → logprob: -20.250085830688477
    10. ' ' → logprob: -20.625085830688477

Token 312: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.125000953674316
    3. 'floor' → logprob: -16.25
    4. ' [' → logprob: -16.875
    5. ')[' → logprob: -17.375
    6. '	f' → logprob: -18.25
    7. ' floor' → logprob: -18.375
    8. '```' → logprob: -18.375
    9. '[F' → logprob: -18.375
    10. '.floor' → logprob: -18.5

Token 313: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -4.246537173457909e-06
    2. 'floor' → logprob: -13.125003814697266
    3. 'oor' → logprob: -14.000003814697266
    4. 'loo' → logprob: -14.375003814697266
    5. 'lo' → logprob: -15.250003814697266
    6. '[' → logprob: -15.250003814697266
    7. 'l' → logprob: -15.750003814697266
    8. ']' → logprob: -17.000003814697266
    9. 'lood' → logprob: -17.500003814697266
    10. 'loat' → logprob: -18.250003814697266

Token 314: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002796318382024765
    2. ']
' → logprob: -6.252796173095703
    3. '[f' → logprob: -7.252796173095703
    4. ' ]' → logprob: -9.252796173095703
    5. '[' → logprob: -10.627796173095703
    6. '       ' → logprob: -11.502796173095703
    7. '][' → logprob: -11.627796173095703
    8. '   ' → logprob: -11.752796173095703
    9. '           ' → logprob: -12.127796173095703
    10. '               ' → logprob: -13.252796173095703

Token 315: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9529572129249573
    2. '<|end|>' → logprob: -1.4529571533203125
    3. '
' → logprob: -1.5779571533203125
    4. '       ' → logprob: -3.3279571533203125
    5. '[' → logprob: -3.4529571533203125
    6. '           ' → logprob: -3.4529571533203125
    7. ' 
' → logprob: -3.7029571533203125
    8. '<|end|>' → logprob: -4.2029571533203125
    9. '                
' → logprob: -4.8279571533203125
    10. '  
' → logprob: -5.2029571533203125

Token 316: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22927309572696686
    2. ' if' → logprob: -1.7292730808258057
    3. '               ' → logprob: -3.9792730808258057
    4. '       ' → logprob: -4.979273319244385
    5. '
' → logprob: -6.979273319244385
    6. '           ' → logprob: -7.854273319244385
    7. ' ' → logprob: -8.729272842407227
    8. '```' → logprob: -9.604272842407227
    9. '\n' → logprob: -9.729272842407227
    10. ')' → logprob: -9.854272842407227

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5905799269676208
    2. '=' → logprob: -1.0905799865722656
    3. 'op' → logprob: -2.2155799865722656
    4. '=f' → logprob: -7.965579986572266
    5. 'o' → logprob: -8.090579986572266
    6. 'top' → logprob: -10.340579986572266
    7. '=o' → logprob: -10.715579986572266
    8. '[' → logprob: -10.840579986572266
    9. '[top' → logprob: -10.965579986572266
    10. '	' → logprob: -11.090579986572266

Token 318: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.3868720829486847
    2. ' top' → logprob: -1.1368720531463623
    3. '   ' → logprob: -14.886872291564941
    4. ' ' → logprob: -15.386872291564941
    5. '	top' → logprob: -15.386872291564941
    6. '(top' → logprob: -16.636871337890625
    7. ' floor' → logprob: -17.136871337890625
    8. '[top' → logprob: -17.261871337890625
    9. 'floor' → logprob: -17.386871337890625
    10. '  ' → logprob: -17.511871337890625

Token 319: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.961759259458631e-06
    2. 'a' → logprob: -12.250004768371582
    3. '_' → logprob: -17.2500057220459
    4. '[' → logprob: -17.5000057220459
    5. ' ' → logprob: -18.3750057220459
    6. '_b' → logprob: -18.5000057220459
    7. ' _' → logprob: -18.6250057220459
    8. '   ' → logprob: -19.2500057220459
    9. '```' → logprob: -19.5000057220459
    10. '_ai' → logprob: -20.1250057220459

Token 320: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.500003814697266
    3. ' [' → logprob: -14.500003814697266
    4. '
' → logprob: -14.750003814697266
    5. 'floor' → logprob: -15.000003814697266
    6. '[F' → logprob: -15.375003814697266
    7. '[
' → logprob: -16.125003814697266
    8. '[t' → logprob: -16.875003814697266
    9. ')[' → logprob: -16.875003814697266
    10. '][' → logprob: -17.000003814697266

Token 321: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.00033581978641450405
    2. 'floor' → logprob: -8.250335693359375
    3. 'oor' → logprob: -10.125335693359375
    4. '[' → logprob: -10.875335693359375
    5. 'lo' → logprob: -11.375335693359375
    6. 'l' → logprob: -14.500335693359375
    7. 'loo' → logprob: -14.625335693359375
    8. 'lor' → logprob: -14.875335693359375
    9. '_floor' → logprob: -14.875335693359375
    10. ']' → logprob: -15.125335693359375

Token 322: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006921511609107256
    2. ']
' → logprob: -5.006921291351318
    3. ' ]' → logprob: -9.131921768188477
    4. '<|end|>' → logprob: -10.381921768188477
    5. ')' → logprob: -10.881921768188477
    6. ']

' → logprob: -11.256921768188477
    7. '']' → logprob: -11.756921768188477
    8. '<|end|>' → logprob: -11.881921768188477
    9. ']
' → logprob: -12.131921768188477
    10. '       ' → logprob: -13.006921768188477

Token 323: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17347002029418945
    2. '               ' → logprob: -1.9234700202941895
    3. '           ' → logprob: -4.9234700202941895
    4. '<|end|>' → logprob: -6.4234700202941895
    5. '       ' → logprob: -6.6734700202941895
    6. '
' → logprob: -7.4234700202941895
    7. '\n' → logprob: -7.5484700202941895
    8. ' 
' → logprob: -7.6734700202941895
    9. '  
' → logprob: -7.9234700202941895
    10. '                
' → logprob: -7.9234700202941895

Token 324: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5534890294075012
    2. '       ' → logprob: -1.8034889698028564
    3. '           ' → logprob: -2.0534889698028564
    4. ' else' → logprob: -2.3034889698028564
    5. 'elif' → logprob: -3.5534889698028564
    6. ' elif' → logprob: -6.5534892082214355
    7. '
' → logprob: -6.5534892082214355
    8. '   ' → logprob: -8.303488731384277
    9. '<|end|>' → logprob: -8.678488731384277
    10. '               ' → logprob: -10.303488731384277

Token 325: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12901738286018372
    2. ':
' → logprob: -2.1290173530578613
    3. '               ' → logprob: -6.504017353057861
    4. '{' → logprob: -7.879017353057861
    5. '{
' → logprob: -9.00401782989502
    6. '           ' → logprob: -9.62901782989502
    7. ':
' → logprob: -12.25401782989502
    8. ' :' → logprob: -12.50401782989502
    9. ' {' → logprob: -12.75401782989502
    10. ':

' → logprob: -13.12901782989502

Token 326: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015806859591975808
    2. 'b' → logprob: -6.876580715179443
    3. '           ' → logprob: -8.251580238342285
    4. '0' → logprob: -8.876580238342285
    5. ' ' → logprob: -9.876580238342285
    6. '1' → logprob: -10.376580238342285
    7. 'w' → logprob: -10.876580238342285
    8. ' b' → logprob: -11.876580238342285
    9. '       ' → logprob: -12.251580238342285
    10. ',' → logprob: -12.376580238342285

Token 327: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.0015054593095555902
    2. ' w' → logprob: -6.501505374908447
    3. '       ' → logprob: -13.626505851745605
    4. '           ' → logprob: -13.751505851745605
    5. '               ' → logprob: -14.001505851745605
    6. 'b' → logprob: -17.37650489807129
    7. '	w' → logprob: -17.50150489807129
    8. '
' → logprob: -18.12650489807129
    9. '   ' → logprob: -18.25150489807129
    10. '        ' → logprob: -19.50150489807129

Token 328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132956922054291
    2. ' =' → logprob: -1.3132957220077515
    3. '=b' → logprob: -10.313295364379883
    4. ' ' → logprob: -15.438295364379883
    5. '=w' → logprob: -15.938295364379883
    6. '=
' → logprob: -15.938295364379883
    7. '=f' → logprob: -16.313295364379883
    8. 'b' → logprob: -16.438295364379883
    9. '   ' → logprob: -16.813295364379883
    10. ' =
' → logprob: -16.813295364379883

Token 329: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023245595395565033
    2. ' b' → logprob: -3.7732455730438232
    3. '	b' → logprob: -16.773244857788086
    4. '   ' → logprob: -17.398244857788086
    5. '_b' → logprob: -17.523244857788086
    6. '       ' → logprob: -18.023244857788086
    7. ' ' → logprob: -18.273244857788086
    8. ')b' → logprob: -19.023244857788086
    9. '           ' → logprob: -19.273244857788086
    10. '    ' → logprob: -19.273244857788086

Token 330: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -1.0280383548888494e-06
    2. 'floor' → logprob: -13.875000953674316
    3. '(f' → logprob: -18.375001907348633
    4. ' floor' → logprob: -18.500001907348633
    5. '.floor' → logprob: -18.500001907348633
    6. ' [' → logprob: -19.375001907348633
    7. '	f' → logprob: -19.625001907348633
    8. '[
' → logprob: -19.750001907348633
    9. '[' → logprob: -19.875001907348633
    10. '_floor' → logprob: -20.125001907348633

Token 331: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.0077992030419409275
    2. 'floor' → logprob: -4.88279914855957
    3. 'lo' → logprob: -9.88279914855957
    4. 'oor' → logprob: -9.88279914855957
    5. 'room' → logprob: -11.63279914855957
    6. 'or' → logprob: -11.63279914855957
    7. '_floor' → logprob: -11.75779914855957
    8. 'l' → logprob: -11.88279914855957
    9. '   ' → logprob: -11.88279914855957
    10. 'loat' → logprob: -12.00779914855957

Token 332: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03806673735380173
    2. ']
' → logprob: -3.2880666255950928
    3. ']

' → logprob: -11.163066864013672
    4. ']
' → logprob: -12.538066864013672
    5. ' ]' → logprob: -12.913066864013672
    6. ')' → logprob: -13.788066864013672
    7. '<|end|>' → logprob: -14.288066864013672
    8. '][' → logprob: -14.413066864013672
    9. '           ' → logprob: -14.913066864013672
    10. '       ' → logprob: -14.913066864013672

Token 333: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011807513423264027
    2. '
' → logprob: -4.511807441711426
    3. ' if' → logprob: -8.511807441711426
    4. '            
' → logprob: -8.761807441711426
    5. 'if' → logprob: -9.011807441711426
    6. '		' → logprob: -9.511807441711426
    7. ',' → logprob: -9.886807441711426
    8. '
' → logprob: -10.261807441711426
    9. '<|end|>' → logprob: -10.886807441711426
    10. '   ' → logprob: -11.011807441711426

Token 334: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.004186078906059265
    2. ' t' → logprob: -5.629186153411865
    3. 'top' → logprob: -7.504186153411865
    4. ' top' → logprob: -11.129185676574707
    5. '       ' → logprob: -11.504185676574707
    6. '           ' → logprob: -11.879185676574707
    7. '   ' → logprob: -13.379185676574707
    8. '`t' → logprob: -14.629185676574707
    9. '        ' → logprob: -14.754185676574707
    10. '               ' → logprob: -15.254185676574707

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10024020820856094
    2. ' =' → logprob: -2.3502402305603027
    3. '=f' → logprob: -10.725239753723145
    4. '[f' → logprob: -12.475239753723145
    5. '[' → logprob: -12.850239753723145
    6. '=b' → logprob: -12.975239753723145
    7. '=[' → logprob: -13.850239753723145
    8. 'b' → logprob: -14.225239753723145
    9. '[b' → logprob: -15.100239753723145
    10. '=
' → logprob: -15.475239753723145

Token 336: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.001502598519437015
    2. ' top' → logprob: -6.501502513885498
    3. 'bottom' → logprob: -15.876502990722656
    4. 'b' → logprob: -16.626502990722656
    5. '	top' → logprob: -17.751502990722656
    6. 't' → logprob: -17.876502990722656
    7. '[top' → logprob: -17.876502990722656
    8. '(top' → logprob: -20.251502990722656
    9. '   ' → logprob: -20.501502990722656
    10. 'Top' → logprob: -21.001502990722656

Token 337: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -7.584239938296378e-06
    2. 'b' → logprob: -13.000007629394531
    3. '_[' → logprob: -13.000007629394531
    4. '_a' → logprob: -13.375007629394531
    5. '_' → logprob: -14.000007629394531
    6. '[' → logprob: -15.500007629394531
    7. '_f' → logprob: -16.50000762939453
    8. '```' → logprob: -16.75000762939453
    9. 's' → logprob: -16.87500762939453
    10. ' ' → logprob: -17.62500762939453

Token 338: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.125000953674316
    3. 'floor' → logprob: -15.250000953674316
    4. '[F' → logprob: -17.125
    5. '.floor' → logprob: -17.25
    6. '[
' → logprob: -17.375
    7. ')[' → logprob: -17.5
    8. '```' → logprob: -18.375
    9. ' [' → logprob: -18.5
    10. '	f' → logprob: -18.875

Token 339: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.47421175241470337
    2. 'floor' → logprob: -0.9742117524147034
    3. '_floor' → logprob: -10.224211692810059
    4. '[' → logprob: -10.349211692810059
    5. '.floor' → logprob: -10.974211692810059
    6. '[f' → logprob: -11.099211692810059
    7. 'oor' → logprob: -11.349211692810059
    8. ' floor' → logprob: -12.474211692810059
    9. 'lo' → logprob: -12.599211692810059
    10. 'or' → logprob: -12.974211692810059

Token 340: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20943358540534973
    2. ']' → logprob: -1.9594335556030273
    3. ')
' → logprob: -3.3344335556030273
    4. ']
' → logprob: -5.084433555603027
    5. '           ' → logprob: -5.334433555603027
    6. '       ' → logprob: -6.959433555603027
    7. '}' → logprob: -9.584433555603027
    8. '               ' → logprob: -9.834433555603027
    9. '   ' → logprob: -9.959433555603027
    10. '<|end|>' → logprob: -10.084433555603027

Token 341: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5807881355285645
    2. '           ' → logprob: -0.9557881355285645
    3. '       ' → logprob: -3.8307881355285645
    4. '   ' → logprob: -4.0807881355285645
    5. '<|end|>' → logprob: -5.4557881355285645
    6. ' if' → logprob: -6.0807881355285645
    7. '    
' → logprob: -6.0807881355285645
    8. '  
' → logprob: -6.4557881355285645
    9. '        
' → logprob: -6.9557881355285645
    10. ' ' → logprob: -6.9557881355285645

Token 342: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7684203386306763
    2. ' if' → logprob: -1.5184203386306763
    3. '           ' → logprob: -2.5184202194213867
    4. '       ' → logprob: -2.6434202194213867
    5. 'if' (adapté à ' if') → logprob: -2.7684202194213867
    6. '   ' → logprob: -2.7684202194213867
    7. '\n' → logprob: -5.143420219421387
    8. '    
' → logprob: -5.393420219421387
    9. '	if' → logprob: -5.518420219421387
    10. '    ' → logprob: -5.518420219421387

Token 343: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.011052182875573635
    2. 'w' → logprob: -4.511052131652832
    3. ' ' → logprob: -12.636052131652832
    4. '	w' → logprob: -14.761052131652832
    5. ' ' → logprob: -15.011052131652832
    6. '0' → logprob: -16.26105308532715
    7. '_w' → logprob: -16.38605308532715
    8. '    ' → logprob: -16.38605308532715
    9. ' t' → logprob: -17.13605308532715
    10. '  ' → logprob: -17.44855308532715

Token 344: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4740923047065735
    2. '==' → logprob: -0.9740923047065735
    3. ' !=' → logprob: -12.474092483520508
    4. ' ' → logprob: -12.849092483520508
    5. '[' → logprob: -12.974092483520508
    6. ' ' → logprob: -13.099092483520508
    7. '!=' → logprob: -14.099092483520508
    8. '()==' → logprob: -14.224092483520508
    9. ')==' → logprob: -14.349092483520508
    10. ']==' → logprob: -14.474092483520508

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016147801652550697
    2. ' ' → logprob: -4.141147613525391
    3. '1' → logprob: -9.14114761352539
    4. '2' → logprob: -12.14114761352539
    5. '   ' → logprob: -14.39114761352539
    6. '  ' → logprob: -16.26614761352539
    7. ''' → logprob: -16.51614761352539
    8. '`' → logprob: -16.95364761352539
    9. ' ' → logprob: -17.64114761352539
    10. '```' → logprob: -17.64114761352539

Token 346: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2536745071411133
    2. ':
' → logprob: -1.5036745071411133
    3. ':return' → logprob: -6.378674507141113
    4. '           ' → logprob: -11.253674507141113
    5. ':
' → logprob: -11.503674507141113
    6. '               ' → logprob: -11.878674507141113
    7. ' :' → logprob: -11.878674507141113
    8. ' :
' → logprob: -12.253674507141113
    9. '       ' → logprob: -14.003674507141113
    10. ':

' → logprob: -14.128674507141113

Token 347: '               ' (ID: 506)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11680403351783752
    2. '               ' → logprob: -2.3668041229248047
    3. 'return' → logprob: -4.116804122924805
    4. ' ' → logprob: -9.616804122924805
    5. '           ' → logprob: -9.866804122924805
    6. ' floor' → logprob: -11.366804122924805
    7. ' ' → logprob: -11.866804122924805
    8. '
' → logprob: -11.991804122924805
    9. '{return' → logprob: -12.366804122924805
    10. '   ' → logprob: -12.616804122924805

Token 348: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0055655138567090034
    2. 'return' (adapté à ' return') → logprob: -5.255565643310547
    3. ' ' → logprob: -8.755565643310547
    4. '               ' → logprob: -9.255565643310547
    5. ' floor' → logprob: -10.880565643310547
    6. ' ' → logprob: -11.005565643310547
    7. '           ' → logprob: -11.130565643310547
    8. ' 
' → logprob: -11.505565643310547
    9. '
' → logprob: -12.130565643310547
    10. '	return' → logprob: -12.755565643310547

Token 349: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.1602245420217514
    2. ' floor' → logprob: -1.9102245569229126
    3. '_floor' → logprob: -15.035224914550781
    4. '.floor' → logprob: -17.03522491455078
    5. 'flo' → logprob: -17.28522491455078
    6. 'f' → logprob: -18.28522491455078
    7. 'fl' → logprob: -19.91022491455078
    8. 'Floor' → logprob: -20.03522491455078
    9. '(f' → logprob: -20.91022491455078
    10. '-floor' → logprob: -20.91022491455078

Token 350: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.072421133518219
    2. '           ' → logprob: -3.197421073913574
    3. '<|end|>' → logprob: -4.072421073913574
    4. '\n' → logprob: -5.197421073913574
    5. '<|end|>' → logprob: -6.447421073913574
    6. '       ' → logprob: -6.572421073913574
    7. '            
' → logprob: -6.947421073913574
    8. ' 
' → logprob: -7.322421073913574
    9. '
' → logprob: -7.697421073913574
    10. '  
' → logprob: -8.447421073913574

Token 351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45475253462791443
    2. '
' → logprob: -1.2047525644302368
    3. 'elif' → logprob: -3.2047524452209473
    4. ' elif' → logprob: -4.704752445220947
    5. '<|end|>' → logprob: -4.954752445220947
    6. '            
' → logprob: -5.829752445220947
    7. ')' → logprob: -6.454752445220947
    8. '\n' → logprob: -6.954752445220947
    9. '       ' → logprob: -7.079752445220947
    10. ' 
' → logprob: -7.329752445220947

Token 352: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.4036507308483124
    2. '           ' → logprob: -1.2786507606506348
    3. '
' → logprob: -3.5286507606506348
    4. ' elif' → logprob: -4.028650760650635
    5. '       ' → logprob: -5.903650760650635
    6. 'if' → logprob: -6.153650760650635
    7. ' if' → logprob: -7.153650760650635
    8. '<|end|>' → logprob: -8.653650283813477
    9. '   ' → logprob: -8.778650283813477
    10. '	elif' → logprob: -8.778650283813477

Token 353: ' w' (ID: 286)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28525587916374207
    2. '1' → logprob: -1.4102559089660645
    3. '2' → logprob: -6.5352559089660645
    4. ' w' → logprob: -6.7852559089660645
    5. ' side' → logprob: -7.5352559089660645
    6. '0' → logprob: -7.7852559089660645
    7. 'w' → logprob: -8.035255432128906
    8. 'side' → logprob: -8.785255432128906
    9. '==' → logprob: -9.910255432128906
    10. ' ==' → logprob: -12.035255432128906

Token 354: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0013272607466205955
    2. ' ==' → logprob: -6.626327037811279
    3. ']==' → logprob: -14.876327514648438
    4. '==
' → logprob: -15.126327514648438
    5. '=' → logprob: -15.251327514648438
    6. '```' → logprob: -16.001327514648438
    7. '===' → logprob: -16.251327514648438
    8. '1' → logprob: -16.376327514648438
    9. '()==' → logprob: -16.376327514648438
    10. ')==' → logprob: -16.751327514648438

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021271906734909862
    2. ' ' → logprob: -8.500212669372559
    3. '2' → logprob: -11.875212669372559
    4. '   ' → logprob: -13.500212669372559
    5. '```' → logprob: -15.250212669372559
    6. '  ' → logprob: -15.875212669372559
    7. '0' → logprob: -16.000213623046875
    8. '       ' → logprob: -16.812713623046875
    9. '`' → logprob: -16.875213623046875
    10. '           ' → logprob: -17.062713623046875

Token 356: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6341422200202942
    2. ':' → logprob: -0.7591422200202942
    3. ':return' → logprob: -7.1341423988342285
    4. ' :
' → logprob: -8.25914192199707
    5. ',' → logprob: -8.88414192199707
    6. '               ' → logprob: -9.25914192199707
    7. ' :' → logprob: -9.25914192199707
    8. ')' → logprob: -9.63414192199707
    9. '):
' → logprob: -10.25914192199707
    10. '           ' → logprob: -11.00914192199707

Token 357: '               ' (ID: 506)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06791365891695023
    2. ' t' → logprob: -3.317913770675659
    3. 'return' → logprob: -4.06791353225708
    4. ' return' → logprob: -4.81791353225708
    5. '           ' → logprob: -6.06791353225708
    6. '               ' → logprob: -6.31791353225708
    7. '                   ' → logprob: -10.567914009094238
    8. '   ' → logprob: -10.692914009094238
    9. '`t' → logprob: -11.317914009094238
    10. '       ' → logprob: -11.442914009094238

Token 358: ' return' (ID: 622)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2199823409318924
    2. ' t' → logprob: -1.719982385635376
    3. 'return' (adapté à ' return') → logprob: -4.469982147216797
    4. ' return' → logprob: -4.969982147216797
    5. '           ' → logprob: -12.594982147216797
    6. ' ' → logprob: -13.844982147216797
    7. '`t' → logprob: -14.219982147216797
    8. '               ' → logprob: -14.719982147216797
    9. '   ' → logprob: -15.094982147216797
    10. '	t' → logprob: -15.219982147216797

Token 359: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1269284337759018
    2. ' t' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.126928329467773
    4. '`t' → logprob: -16.126928329467773
    5. '	t' → logprob: -16.501928329467773
    6. 'top' → logprob: -17.126928329467773
    7. ' ' → logprob: -17.251928329467773
    8. '   ' → logprob: -18.001928329467773
    9. '(t' → logprob: -18.376928329467773
    10. '_t' → logprob: -19.001928329467773

Token 360: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09121473133563995
    2. '
' → logprob: -2.466214656829834
    3. '<|end|>' → logprob: -6.841214656829834
    4. 'elif' → logprob: -7.341214656829834
    5. '		' → logprob: -8.341215133666992
    6. '<|end|>' → logprob: -9.341215133666992
    7. '	       ' → logprob: -9.841215133666992
    8. '       ' → logprob: -9.841215133666992
    9. 'else' → logprob: -11.091215133666992
    10. ',' → logprob: -11.341215133666992

Token 361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03743858262896538
    2. 'elif' → logprob: -3.5374386310577393
    3. '       ' → logprob: -5.66243839263916
    4. ' elif' → logprob: -6.16243839263916
    5. '		' → logprob: -7.16243839263916
    6. '
' → logprob: -7.91243839263916
    7. '	elif' → logprob: -8.03743839263916
    8. 'else' → logprob: -8.78743839263916
    9. '	       ' → logprob: -9.03743839263916
    10. '<|end|>' → logprob: -9.28743839263916

Token 362: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.23034584522247314
    2. '           ' → logprob: -2.3553457260131836
    3. 'else' (adapté à ' else') → logprob: -2.6053457260131836
    4. ' elif' → logprob: -3.8553457260131836
    5. '       ' → logprob: -4.855345726013184
    6. ' else' → logprob: -5.355345726013184
    7. '	elif' → logprob: -6.355345726013184
    8. '
' → logprob: -7.230345726013184
    9. '		' → logprob: -8.230345726013184
    10. '   ' → logprob: -8.980345726013184

Token 363: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6353460550308228
    2. ':
' → logprob: -0.7603460550308228
    3. '               ' → logprob: -6.260345935821533
    4. '           ' → logprob: -7.885345935821533
    5. ':return' → logprob: -8.760346412658691
    6. ':
' → logprob: -9.010346412658691
    7. ' :
' → logprob: -10.135346412658691
    8. ' :' → logprob: -10.385346412658691
    9. '       ' → logprob: -11.135346412658691
    10. '0' → logprob: -11.260346412658691

Token 364: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9350444078445435
    2. '               ' → logprob: -1.5600444078445435
    3. ' i' → logprob: -1.6850444078445435
    4. ' f' → logprob: -2.810044288635254
    5. ' floor' → logprob: -3.310044288635254
    6. 'floor' → logprob: -3.685044288635254
    7. 'i' → logprob: -3.810044288635254
    8. 'f' → logprob: -3.935044288635254
    9. 'j' → logprob: -4.560044288635254
    10. '       ' → logprob: -5.185044288635254

Token 365: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0108585357666016
    2. ' ' → logprob: -1.1358585357666016
    3. '0' → logprob: -2.6358585357666016
    4. ' #' → logprob: -2.8858585357666016
    5. ' floor' → logprob: -3.0108585357666016
    6. '#' → logprob: -3.2608585357666016
    7. 'floor' → logprob: -3.7608585357666016
    8. ' w' → logprob: -3.8858585357666016
    9. 'w' → logprob: -4.010858535766602
    10. '   ' → logprob: -4.385858535766602

Token 366: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7543634176254272
    2. 'w' → logprob: -1.2543634176254272
    3. 'floor' → logprob: -1.5043634176254272
    4. '0' → logprob: -5.254363536834717
    5. ' floor' → logprob: -5.254363536834717
    6. '#' → logprob: -5.379363536834717
    7. ' ' → logprob: -5.754363536834717
    8. ' w' → logprob: -6.629363536834717
    9. '_floor' → logprob: -7.379363536834717
    10. '1' → logprob: -7.879363536834717

Token 367: ' slippery' (ID: 126315)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5228853821754456
    2. ':' → logprob: -1.1478853225708008
    3. '           ' → logprob: -3.647885322570801
    4. ' =' → logprob: -3.647885322570801
    5. '=' → logprob: -4.772885322570801
    6. '               ' → logprob: -4.897885322570801
    7. ',' → logprob: -5.772885322570801
    8. '       ' → logprob: -6.022885322570801
    9. '):
' → logprob: -6.022885322570801
    10. '_floor' → logprob: -6.147885322570801

Token 368: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34838730096817017
    2. '
' → logprob: -1.4733872413635254
    3. '               ' → logprob: -3.7233872413635254
    4. ':
' → logprob: -3.9733872413635254
    5. '       ' → logprob: -5.098387241363525
    6. '
' → logprob: -5.723387241363525
    7. ':' → logprob: -5.848387241363525
    8. ',' → logprob: -5.973387241363525
    9. '   ' → logprob: -6.723387241363525
    10. '                   ' → logprob: -7.223387241363525

Token 369: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.351524829864502
    2. 'floor' → logprob: -1.726524829864502
    3. '           ' → logprob: -2.101524829864502
    4. ',' → logprob: -2.476524829864502
    5. 'f' → logprob: -2.601524829864502
    6. ' floor' → logprob: -2.726524829864502
    7. ' k' → logprob: -2.851524829864502
    8. ' i' → logprob: -3.851524829864502
    9. 'k' → logprob: -3.851524829864502
    10. ' f' → logprob: -4.101524829864502

Token 370: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5675321221351624
    2. 'curr' → logprob: -1.8175320625305176
    3. 'cur' → logprob: -1.9425320625305176
    4. 'floor' → logprob: -3.3175320625305176
    5. 'x' → logprob: -3.9425320625305176
    6. 'j' → logprob: -3.9425320625305176
    7. 'current' → logprob: -4.317532062530518
    8. 'for' → logprob: -4.317532062530518
    9. 'slide' → logprob: -5.067532062530518
    10. 'i' → logprob: -5.442532062530518

Token 371: ' slide' (ID: 24969)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2684160470962524
    2. 'cur' → logprob: -1.8934160470962524
    3. 'curr' → logprob: -2.268415927886963
    4. 'slide' → logprob: -2.643415927886963
    5. 'if' → logprob: -2.768415927886963
    6. 'current' → logprob: -3.268415927886963
    7. 'i' → logprob: -3.393415927886963
    8. 'floor' → logprob: -3.393415927886963
    9. 'f' → logprob: -3.518415927886963
    10. 'x' → logprob: -3.643415927886963

Token 372: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.7429966926574707
    2. '=' → logprob: -1.3679966926574707
    3. 'd' → logprob: -2.2429966926574707
    4. ' =' → logprob: -2.3679966926574707
    5. 'floor' → logprob: -3.4929966926574707
    6. 'f' → logprob: -4.867996692657471
    7. '               ' → logprob: -5.117996692657471
    8. '           ' → logprob: -5.242996692657471
    9. ' down' → logprob: -5.242996692657471
    10. '_down' → logprob: -5.617996692657471

Token 373: ' until' (ID: 4609)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -1.481111764907837
    2. ' =' → logprob: -1.606111764907837
    3. '               ' → logprob: -1.606111764907837
    4. '=' → logprob: -2.231111764907837
    5. 'while' → logprob: -2.481111764907837
    6. '_floor' → logprob: -2.606111764907837
    7. 'down' → logprob: -4.106111526489258
    8. 'd' → logprob: -4.106111526489258
    9. 'f' → logprob: -4.231111526489258
    10. 'from' → logprob: -4.356111526489258

Token 374: ' normal' (ID: 6078)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.17782442271709442
    2. 'w' → logprob: -2.5528244972229004
    3. ' floor' → logprob: -2.5528244972229004
    4. 'True' → logprob: -5.6778244972229
    5. ' w' → logprob: -6.5528244972229
    6. '(w' → logprob: -7.6778244972229
    7. '_floor' → logprob: -8.052824020385742
    8. ' True' → logprob: -8.052824020385742
    9. 'flo' → logprob: -8.552824020385742
    10. '(True' → logprob: -8.552824020385742

Token 375: '(' (ID: 7)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.8625390529632568
    2. '               ' → logprob: -1.8625390529632568
    3. ' or' → logprob: -2.112539052963257
    4. '_floor' → logprob: -2.737539052963257
    5. ' floor' → logprob: -2.987539052963257
    6. ',' → logprob: -3.112539052963257
    7. '(f' → logprob: -3.612539052963257
    8. ')' → logprob: -4.237539291381836
    9. '           ' → logprob: -4.362539291381836
    10. '                   ' → logprob: -4.487539291381836

Token 376: '0' (ID: 15)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.8765987157821655
    2. '0' → logprob: -1.3765987157821655
    3. ')' → logprob: -1.7515987157821655
    4. 'or' → logprob: -2.876598834991455
    5. ' or' → logprob: -2.876598834991455
    6. ' floor' → logprob: -3.751598834991455
    7. 'w' → logprob: -4.001598834991455
    8. ' ' → logprob: -7.501598834991455
    9. '```' → logprob: -8.001598358154297
    10. 'f' → logprob: -8.126598358154297

Token 377: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04161881282925606
    2. ' or' → logprob: -3.291618824005127
    3. 'or' → logprob: -5.666618824005127
    4. ' )' → logprob: -9.541618347167969
    5. '               ' → logprob: -10.916618347167969
    6. '
' → logprob: -12.041618347167969
    7. ')
' → logprob: -12.291618347167969
    8. '<|end|>' → logprob: -12.666618347167969
    9. '),' → logprob: -13.541618347167969
    10. ' ' → logprob: -13.666618347167969

Token 378: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005095118656754494
    2. 'or' → logprob: -5.6300950050354
    3. '<|end|>' → logprob: -6.6300950050354
    4. ' ' → logprob: -9.380095481872559
    5. ')' → logprob: -10.880095481872559
    6. '               ' → logprob: -11.005095481872559
    7. '	or' → logprob: -11.130095481872559
    8. ',' → logprob: -11.130095481872559
    9. ' and' → logprob: -12.630095481872559
    10. '<|end|>' → logprob: -12.630095481872559

Token 379: ' ladder' (ID: 63451)
  Prédit: 'lad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lad' → logprob: -0.13573907315731049
    2. 'w' → logprob: -2.6357390880584717
    3. ' ladder' → logprob: -3.1357390880584717
    4. '1' → logprob: -5.510738849639893
    5. '(w' → logprob: -6.385738849639893
    6. 'wall' → logprob: -6.510738849639893
    7. 'a' → logprob: -6.635738849639893
    8. ' w' → logprob: -7.010738849639893
    9. 'side' → logprob: -7.260738849639893
    10. '   ' → logprob: -8.26073932647705

Token 380: ' top' (ID: 2344)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.8285582065582275
    2. 'top' → logprob: -0.9535582065582275
    3. ' top' → logprob: -2.0785582065582275
    4. ' or' → logprob: -3.7035582065582275
    5. '               ' → logprob: -4.828557968139648
    6. '_floor' → logprob: -5.578557968139648
    7. 'floor' → logprob: -5.953557968139648
    8. ''s' → logprob: -6.453557968139648
    9. 'or' → logprob: -6.453557968139648
    10. ' floor' → logprob: -6.578557968139648

Token 381: ' floor' (ID: 8350)
  Prédit: '_floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -0.3477769196033478
    2. ' floor' → logprob: -1.7227768898010254
    3. 'floor' → logprob: -2.2227768898010254
    4. ' or' → logprob: -6.597776889801025
    5. '_f' → logprob: -6.847776889801025
    6. ',' → logprob: -7.097776889801025
    7. ' =' → logprob: -7.472776889801025
    8. '.floor' → logprob: -7.847776889801025
    9. '=' → logprob: -7.972776889801025
    10. '               ' → logprob: -8.472777366638184

Token 382: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02069241739809513
    2. ',' → logprob: -4.520692348480225
    3. ' =' → logprob: -5.645692348480225
    4. ' on' → logprob: -6.770692348480225
    5. ' or' → logprob: -7.145692348480225
    6. ' for' → logprob: -7.395692348480225
    7. ' ' → logprob: -7.395692348480225
    8. ' (' → logprob: -7.645692348480225
    9. ' in' → logprob: -8.145692825317383
    10. '                   ' → logprob: -8.520692825317383

Token 383: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22090013325214386
    2. ',' → logprob: -3.470900058746338
    3. 'floor' → logprob: -3.720900058746338
    4. '                   ' → logprob: -3.845900058746338
    5. '
' → logprob: -3.970900058746338
    6. ' floor' → logprob: -4.095900058746338
    7. '_floor' → logprob: -4.470900058746338
    8. '```' → logprob: -4.720900058746338
    9. 'down' → logprob: -5.345900058746338
    10. ' for' → logprob: -5.845900058746338

Token 384: ' #' (ID: 1069)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.3256356716156006
    2. 'curr' → logprob: -1.3256356716156006
    3. 'current' → logprob: -1.7006356716156006
    4. ' cur' → logprob: -3.0756356716156006
    5. ' current' → logprob: -3.2006356716156006
    6. ' curr' → logprob: -3.3256356716156006
    7. 'f' → logprob: -3.4506356716156006
    8. 'slide' → logprob: -4.07563591003418
    9. 'floor' → logprob: -4.20063591003418
    10. 'k' → logprob: -4.32563591003418

Token 385: ' but' (ID: 889)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -1.464792251586914
    2. 'cur' → logprob: -1.839792251586914
    3. 'current' → logprob: -2.214792251586914
    4. ' curr' → logprob: -2.714792251586914
    5. 'floor' → logprob: -2.714792251586914
    6. ' cur' → logprob: -2.714792251586914
    7. 'slide' → logprob: -2.839792251586914
    8. 'pos' → logprob: -2.964792251586914
    9. ' current' → logprob: -3.214792251586914
    10. '               ' → logprob: -3.339792251586914

Token 386: ' must' (ID: 2804)
  Prédit: ' floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.7227661609649658
    2. 'floor' → logprob: -1.8477661609649658
    3. ' current' → logprob: -2.222766160964966
    4. 'slide' → logprob: -2.597766160964966
    5. ' slide' → logprob: -3.597766160964966
    6. ' down' → logprob: -3.972766160964966
    7. 'down' → logprob: -4.097765922546387
    8. ' f' → logprob: -4.222765922546387
    9. 'current' → logprob: -4.347765922546387
    10. ' curr' → logprob: -4.472765922546387

Token 387: ' slide' (ID: 24969)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9806712865829468
    2. ' be' → logprob: -1.2306712865829468
    3. '>=' → logprob: -2.8556714057922363
    4. '_floor' → logprob: -2.9806714057922363
    5. 'slide' → logprob: -3.3556714057922363
    6. 'not' → logprob: -3.6056714057922363
    7. 'floor' → logprob: -3.7306714057922363
    8. ' >=' → logprob: -3.7306714057922363
    9. '>' → logprob: -3.8556714057922363
    10. '<=' → logprob: -4.355671405792236

Token 388: ' to' (ID: 316)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.3788871765136719
    2. ' down' → logprob: -1.2538871765136719
    3. 'd' → logprob: -4.503887176513672
    4. '_down' → logprob: -5.753887176513672
    5. 'ing' → logprob: -5.878887176513672
    6. '=' → logprob: -6.003887176513672
    7. '               ' → logprob: -6.128887176513672
    8. 'n' → logprob: -6.378887176513672
    9. ' =' → logprob: -7.003887176513672
    10. '                   ' → logprob: -7.253887176513672

Token 389: ' a' (ID: 261)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.19347159564495087
    2. ' floor' → logprob: -2.318471670150757
    3. 'a' → logprob: -3.193471670150757
    4. 'the' → logprob: -4.568471431732178
    5. 'lowest' → logprob: -4.943471431732178
    6. ' a' → logprob: -5.443471431732178
    7. 'next' → logprob: -5.818471431732178
    8. ' the' → logprob: -5.943471431732178
    9. ' next' → logprob: -6.318471431732178
    10. '0' → logprob: -6.568471431732178

Token 390: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.4581039845943451
    2. ' floor' → logprob: -1.5831040143966675
    3. 'lower' → logprob: -2.333103895187378
    4. ' lower' → logprob: -2.833103895187378
    5. 'n' → logprob: -6.708104133605957
    6. '_floor' → logprob: -6.833104133605957
    7. 's' → logprob: -7.333104133605957
    8. 'f' → logprob: -7.708104133605957
    9. 'flo' → logprob: -7.708104133605957
    10. 'll' → logprob: -7.833104133605957

Token 391: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8616350889205933
    2. '               ' → logprob: -1.6116350889205933
    3. ' =' → logprob: -1.9866350889205933
    4. ' below' → logprob: -3.111635208129883
    5. '-' → logprob: -3.236635208129883
    6. 'down' → logprob: -3.361635208129883
    7. '                   ' → logprob: -3.861635208129883
    8. '+' → logprob: -4.111635208129883
    9. ' down' → logprob: -4.111635208129883
    10. 'below' → logprob: -4.486635208129883

Token 392: ' current' (ID: 2208)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.01418301835656166
    2. ' floor' → logprob: -4.264183044433594
    3. 'loor' → logprob: -11.139183044433594
    4. '_floor' → logprob: -12.889183044433594
    5. '.floor' → logprob: -14.139183044433594
    6. 'f' → logprob: -14.264183044433594
    7. 'flo' → logprob: -14.639183044433594
    8. '```' → logprob: -16.014183044433594
    9. 't' → logprob: -16.389183044433594
    10. '   ' → logprob: -16.639183044433594

Token 393: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.29869702458381653
    2. ' floor' → logprob: -1.4236969947814941
    3. '_floor' → logprob: -4.298696994781494
    4. 'loor' → logprob: -6.298696994781494
    5. '               ' → logprob: -6.673696994781494
    6. '           ' → logprob: -8.798697471618652
    7. '                   ' → logprob: -9.048697471618652
    8. '       ' → logprob: -9.298697471618652
    9. ',' → logprob: -9.423697471618652
    10. '.floor' → logprob: -9.548697471618652

Token 394: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08888580650091171
    2. ',' → logprob: -3.08888578414917
    3. '
' → logprob: -4.08888578414917
    4. ',
' → logprob: -5.33888578414917
    5. ' floor' → logprob: -5.71388578414917
    6. 'floor' → logprob: -6.46388578414917
    7. '0' → logprob: -6.58888578414917
    8. '                
' → logprob: -6.71388578414917
    9. '_floor' → logprob: -6.96388578414917
    10. ' =' → logprob: -7.58888578414917

Token 395: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0808420181274414
    2. '
' → logprob: -3.2058420181274414
    3. ',' → logprob: -4.705842018127441
    4. '                
' → logprob: -5.330842018127441
    5. ':
' → logprob: -5.955842018127441
    6. ',
' → logprob: -6.080842018127441
    7. '\' → logprob: -6.080842018127441
    8. '<|end|>' → logprob: -6.205842018127441
    9. ' or' → logprob: -6.330842018127441
    10. '\n' → logprob: -6.330842018127441

Token 396: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5624539852142334
    2. 'curr' → logprob: -1.8124539852142334
    3. 'floor' → logprob: -1.9374539852142334
    4. 'current' → logprob: -2.8124539852142334
    5. 'cur' → logprob: -2.8124539852142334
    6. 'slide' → logprob: -2.9374539852142334
    7. 'f' → logprob: -3.0624539852142334
    8. 'for' → logprob: -3.1874539852142334
    9. ' for' → logprob: -3.4374539852142334
    10. 'down' → logprob: -3.8124539852142334

Token 397: ' sliding' (ID: 53853)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1423009634017944
    2. ' for' → logprob: -2.392301082611084
    3. 'f' → logprob: -2.517301082611084
    4. 'floor' → logprob: -2.517301082611084
    5. 'for' → logprob: -2.892301082611084
    6. ' f' → logprob: -3.017301082611084
    7. 'curr' → logprob: -3.142301082611084
    8. ' cur' → logprob: -3.392301082611084
    9. ' curr' → logprob: -3.517301082611084
    10. 'current' → logprob: -3.642301082611084

Token 398: ' means' (ID: 4748)
  Prédit: '_floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_floor' → logprob: -0.07987254112958908
    2. ' =' → logprob: -3.4548726081848145
    3. 'floor' → logprob: -3.9548726081848145
    4. '=' → logprob: -4.2048726081848145
    5. '_down' → logprob: -5.5798726081848145
    6. 'down' → logprob: -6.2048726081848145
    7. '_f' → logprob: -6.3298726081848145
    8. '   ' → logprob: -7.3298726081848145
    9. '=f' → logprob: -7.3298726081848145
    10. 'flo' → logprob: -7.8298726081848145

Token 399: ' fall' (ID: 5617)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.2401656061410904
    2. ' floor' → logprob: -1.9901655912399292
    3. 'down' → logprob: -3.7401657104492188
    4. 'current' → logprob: -4.865165710449219
    5. 'curr' → logprob: -5.115165710449219
    6. '_floor' → logprob: -5.365165710449219
    7. 'while' → logprob: -5.365165710449219
    8. '               ' → logprob: -5.490165710449219
    9. 'slide' → logprob: -5.490165710449219
    10. '                   ' → logprob: -5.740165710449219

Token 400: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -1.3459495306015015
    2. 'down' → logprob: -1.3459495306015015
    3. '=' → logprob: -1.9709495306015015
    4. ' =' → logprob: -2.470949649810791
    5. '_down' → logprob: -2.470949649810791
    6. '               ' → logprob: -2.845949649810791
    7. 'ing' → logprob: -3.720949649810791
    8. ' until' → logprob: -4.095949649810791
    9. ' to' → logprob: -4.595949649810791
    10. '                   ' → logprob: -4.970949649810791

Token 401: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16218189895153046
    2. ',' → logprob: -2.412181854248047
    3. ' down' → logprob: -4.287181854248047
    4. 'down' → logprob: -4.287181854248047
    5. 'while' → logprob: -5.412181854248047
    6. ' while' → logprob: -5.662181854248047
    7. ',f' → logprob: -5.787181854248047
    8. ' ,' → logprob: -6.287181854248047
    9. 'floor' → logprob: -6.287181854248047
    10. ' for' → logprob: -6.537181854248047

Token 402: ' same' (ID: 2684)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.5644304752349854
    2. ' floor' → logprob: -1.1894304752349854
    3. 'side' → logprob: -3.3144304752349854
    4. ' the' → logprob: -3.3144304752349854
    5. 'the' → logprob: -3.5644304752349854
    6. ' that' → logprob: -4.939430236816406
    7. ' floors' → logprob: -5.189430236816406
    8. ' side' → logprob: -5.189430236816406
    9. 'that' → logprob: -6.814430236816406
    10. '_floor' → logprob: -6.939430236816406

Token 403: ' side' (ID: 4307)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.8177713751792908
    2. 'side' → logprob: -1.0677714347839355
    3. ' side' → logprob: -2.3177714347839355
    4. ' floor' → logprob: -2.9427714347839355
    5. '_floor' → logprob: -2.9427714347839355
    6. '
' → logprob: -5.0677714347839355
    7. '_side' → logprob: -5.8177714347839355
    8. 'f' → logprob: -7.8177714347839355
    9. '	side' → logprob: -8.817770957946777
    10. 'flo' → logprob: -9.317770957946777

Token 404: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022848932072520256
    2. ',' → logprob: -4.022849082946777
    3. '                
' → logprob: -6.897849082946777
    4. '<|end|>' → logprob: -7.772849082946777
    5. 'down' → logprob: -8.022849082946777
    6. ',f' → logprob: -8.522849082946777
    7. 'floor' → logprob: -8.647849082946777
    8. ' =' → logprob: -8.647849082946777
    9. ' for' → logprob: -8.772849082946777
    10. ' down' → logprob: -9.085349082946777

Token 405: ' a' (ID: 261)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.3158257305622101
    2. ' floor' → logprob: -1.5658257007598877
    3. ' next' → logprob: -4.315825939178467
    4. 'next' → logprob: -4.315825939178467
    5. '0' → logprob: -4.440825939178467
    6. 'the' → logprob: -4.565825939178467
    7. ' the' → logprob: -5.190825939178467
    8. ' a' → logprob: -6.190825939178467
    9. 'a' → logprob: -6.190825939178467
    10. 'flo' → logprob: -7.315825939178467

Token 406: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.532712459564209
    2. 'lower' → logprob: -1.532712459564209
    3. ' lower' → logprob: -2.407712459564209
    4. ' floor' → logprob: -2.407712459564209
    5. 'f' → logprob: -4.907712459564209
    6. '_floor' → logprob: -6.282712459564209
    7. 'flo' → logprob: -6.657712459564209
    8. 'll' → logprob: -6.782712459564209
    9. 'n' → logprob: -6.782712459564209
    10. 's' → logprob: -7.157712459564209

Token 407: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35334858298301697
    2. '-' → logprob: -1.7283486127853394
    3. ' -' → logprob: -2.85334849357605
    4. ',' → logprob: -3.85334849357605
    5. ' =' → logprob: -3.97834849357605
    6. '=' → logprob: -4.853348731994629
    7. '                   ' → logprob: -5.728348731994629
    8. 'from' → logprob: -6.978348731994629
    9. '=f' → logprob: -7.353348731994629
    10. '0' → logprob: -7.478348731994629

Token 408: ' wall' (ID: 9688)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.05010593309998512
    2. ' w' → logprob: -4.550106048583984
    3. '(w' → logprob: -4.675106048583984
    4. 'a' → logprob: -4.800106048583984
    5. '0' → logprob: -5.050106048583984
    6. 'wall' → logprob: -5.050106048583984
    7. 'normal' → logprob: -6.175106048583984
    8. '(' → logprob: -6.550106048583984
    9. 'side' → logprob: -6.550106048583984
    10. '(a' → logprob: -7.050106048583984

Token 409: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4229050278663635
    2. ' -' → logprob: -1.1729049682617188
    3. '               ' → logprob: -4.547904968261719
    4. ' =' → logprob: -5.172904968261719
    5. '=' → logprob: -5.422904968261719
    6. '0' → logprob: -5.547904968261719
    7. '<|end|>' → logprob: -6.797904968261719
    8. ')' → logprob: -6.922904968261719
    9. ' -=' → logprob: -6.922904968261719
    10. '<=' → logprob: -6.922904968261719

Token 410: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3519042432308197
    2. '==' → logprob: -1.851904273033142
    3. '2' → logprob: -3.1019041538238525
    4. '=' → logprob: -3.2269041538238525
    5. '```' → logprob: -4.351904392242432
    6. '[' → logprob: -4.476904392242432
    7. 'type' → logprob: -4.976904392242432
    8. 'w' → logprob: -5.351904392242432
    9. 'side' → logprob: -5.601904392242432
    10. ',' → logprob: -5.726904392242432

Token 411: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06495384126901627
    2. ' or' → logprob: -3.6899538040161133
    3. ',' → logprob: -4.064953804016113
    4. '<|end|>' → logprob: -5.439953804016113
    5. 'while' → logprob: -5.939953804016113
    6. '                   ' → logprob: -6.439953804016113
    7. ' =' → logprob: -6.564953804016113
    8. ' while' → logprob: -6.689953804016113
    9. '=' → logprob: -7.064953804016113
    10. ' ' → logprob: -7.064953804016113

Token 412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035583775024861097
    2. ' ' → logprob: -6.128558158874512
    3. 'w' → logprob: -6.878558158874512
    4. '(' → logprob: -9.253558158874512
    5. ' ladder' → logprob: -9.378558158874512
    6. ' w' → logprob: -10.003558158874512
    7. '2' → logprob: -10.753558158874512
    8. 'a' → logprob: -11.003558158874512
    9. ' (' → logprob: -11.003558158874512
    10. 'lad' → logprob: -11.003558158874512

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010263236239552498
    2. 'w' → logprob: -5.260263442993164
    3. ' ' → logprob: -5.885263442993164
    4. '(' → logprob: -6.885263442993164
    5. ' ladder' → logprob: -8.135263442993164
    6. 'lad' → logprob: -8.760263442993164
    7. ' w' → logprob: -8.760263442993164
    8. '(w' → logprob: -9.135263442993164
    9. ' (' → logprob: -9.135263442993164
    10. 'side' → logprob: -9.260263442993164

Token 414: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009692259482108057
    2. ',' → logprob: -7.375969409942627
    3. '
' → logprob: -9.125968933105469
    4. ' for' → logprob: -10.125968933105469
    5. '                
' → logprob: -10.500968933105469
    6. ' =' → logprob: -11.125968933105469
    7. '<|end|>' → logprob: -11.563468933105469
    8. '           ' → logprob: -11.625968933105469
    9. '```' → logprob: -11.625968933105469
    10. ' ' → logprob: -11.875968933105469

Token 415: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26344576478004456
    2. '               ' → logprob: -1.8884457349777222
    3. ',' → logprob: -4.388445854187012
    4. '<|end|>' → logprob: -4.638445854187012
    5. '\' → logprob: -5.263445854187012
    6. '                
' → logprob: -5.388445854187012
    7. '0' → logprob: -5.388445854187012
    8. '_floor' → logprob: -5.513445854187012
    9. ' =' → logprob: -6.013445854187012
    10. '
' → logprob: -6.013445854187012

Token 416: ' curr' (ID: 10495)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.8967750072479248
    2. '               ' → logprob: -1.8967750072479248
    3. 'floor' → logprob: -2.021775007247925
    4. 'd' → logprob: -2.396775007247925
    5. ' f' → logprob: -2.646775007247925
    6. 'down' → logprob: -2.896775007247925
    7. 's' → logprob: -3.021775007247925
    8. ' floor' → logprob: -3.396775007247925
    9. 'slide' → logprob: -3.396775007247925
    10. ',' → logprob: -3.646775007247925

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15777488052845
    2. '=' → logprob: -2.5327749252319336
    3. '_floor' → logprob: -2.7827749252319336
    4. 'floor' → logprob: -6.282774925231934
    5. 'loor' → logprob: -6.532774925231934
    6. '=f' → logprob: -7.907774925231934
    7. ' -=' → logprob: -8.032774925231934
    8. ',' → logprob: -9.157774925231934
    9. ' floor' → logprob: -9.782774925231934
    10. 'Floor' → logprob: -9.782774925231934

Token 418: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.0009118211455643177
    2. ' floor' → logprob: -7.000911712646484
    3. 'flo' → logprob: -16.000911712646484
    4. '_floor' → logprob: -16.250911712646484
    5. 'f' → logprob: -16.750911712646484
    6. '.floor' → logprob: -18.250911712646484
    7. 'Floor' → logprob: -18.750911712646484
    8. '   ' → logprob: -19.250911712646484
    9. 'loor' → logprob: -19.750911712646484
    10. 'fl' → logprob: -20.500911712646484

Token 419: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49797454476356506
    2. '
' → logprob: -1.9979745149612427
    3. ' -' → logprob: -1.9979745149612427
    4. '-' → logprob: -2.1229746341705322
    5. '                
' → logprob: -7.622974395751953
    6. 'while' → logprob: -8.747974395751953
    7. '<|end|>' → logprob: -8.747974395751953
    8. '
' → logprob: -9.122974395751953
    9. '<|end|>' → logprob: -9.247974395751953
    10. ',' → logprob: -9.747974395751953

Token 420: '               ' (ID: 506)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.631709098815918
    2. '               ' → logprob: -1.256709098815918
    3. ' -' → logprob: -1.756709098815918
    4. '
' → logprob: -5.506709098815918
    5. '                   ' → logprob: -6.131709098815918
    6. 'while' → logprob: -6.506709098815918
    7. ' -=' → logprob: -7.006709098815918
    8. '<|end|>' → logprob: -7.631709098815918
    9. ' while' → logprob: -7.881709098815918
    10. '           ' → logprob: -8.506709098815918

Token 421: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01503062155097723
    2. ' while' → logprob: -4.640030384063721
    3. '               ' → logprob: -5.640030384063721
    4. 'curr' → logprob: -6.390030384063721
    5. 'for' → logprob: -11.390030860900879
    6. ' curr' → logprob: -11.890030860900879
    7. '
' → logprob: -13.015030860900879
    8. '                
' → logprob: -13.140030860900879
    9. '                ' → logprob: -13.640030860900879
    10. '	while' → logprob: -13.765030860900879

Token 422: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0013277375837787986
    2. ' curr' → logprob: -6.6263275146484375
    3. '	curr' → logprob: -14.126327514648438
    4. '(curr' → logprob: -14.501327514648438
    5. 'True' → logprob: -15.126327514648438
    6. '   ' → logprob: -15.376327514648438
    7. ' ' → logprob: -17.876327514648438
    8. '
' → logprob: -18.126327514648438
    9. ' True' → logprob: -18.251327514648438
    10. '_curr' → logprob: -18.501327514648438

Token 423: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07990732789039612
    2. ' >' → logprob: -2.5799074172973633
    3. '>=' → logprob: -7.579907417297363
    4. '-' → logprob: -7.954907417297363
    5. '>-' → logprob: -9.079907417297363
    6. ' >=' → logprob: -10.329907417297363
    7. ' -' → logprob: -12.829907417297363
    8. 'and' → logprob: -13.204907417297363
    9. ' ' → logprob: -13.954907417297363
    10. ' and' → logprob: -13.954907417297363

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024769625160843134
    2. ' ' → logprob: -6.002477169036865
    3. '=' → logprob: -13.627476692199707
    4. '1' → logprob: -18.127477645874023
    5. '<|end|>' → logprob: -18.127477645874023
    6. '
' → logprob: -18.502477645874023
    7. 'floor' → logprob: -18.752477645874023
    8. 'curr' → logprob: -18.877477645874023
    9. '۰' → logprob: -19.002477645874023
    10. ' =' → logprob: -19.627477645874023

Token 425: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018024330958724022
    2. 'and' → logprob: -4.143024444580078
    3. ':
' → logprob: -6.393024444580078
    4. ':' → logprob: -8.393024444580078
    5. '                   ' → logprob: -9.893024444580078
    6. '               ' → logprob: -11.143024444580078
    7. '	and' → logprob: -12.143024444580078
    8. '           ' → logprob: -12.768024444580078
    9. '                       ' → logprob: -12.893024444580078
    10. ' ' → logprob: -13.018024444580078

Token 426: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015786595176905394
    2. '               ' → logprob: -7.3765788078308105
    3. '   ' → logprob: -8.001578330993652
    4. '
' → logprob: -9.626578330993652
    5. '           ' → logprob: -9.626578330993652
    6. 'curr' → logprob: -9.626578330993652
    7. '<|end|>' → logprob: -9.751578330993652
    8. '                    
' → logprob: -9.876578330993652
    9. '	               ' → logprob: -10.376578330993652
    10. '                       ' → logprob: -10.376578330993652

Token 427: ' if' (ID: 538)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.14152120053768158
    2. ' curr' → logprob: -2.5165212154388428
    3. '                   ' → logprob: -3.0165212154388428
    4. 'if' (adapté à ' if') → logprob: -7.266520977020264
    5. ' if' → logprob: -8.016521453857422
    6. '                       ' → logprob: -8.266521453857422
    7. '	curr' → logprob: -8.516521453857422
    8. '               ' → logprob: -8.641521453857422
    9. 'side' → logprob: -8.766521453857422
    10. '[curr' → logprob: -9.016521453857422

Token 428: ' side' (ID: 4307)
  Prédit: '(side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(side' → logprob: -0.42439934611320496
    2. ' (' → logprob: -1.6743993759155273
    3. 'side' → logprob: -2.5493993759155273
    4. '((' → logprob: -3.2993993759155273
    5. ' side' → logprob: -4.424399375915527
    6. '                   ' → logprob: -4.924399375915527
    7. ' ((' → logprob: -5.049399375915527
    8. '(' → logprob: -5.174399375915527
    9. '(w' → logprob: -5.674399375915527
    10. '(s' → logprob: -5.799399375915527

Token 429: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12840528786182404
    2. ' ==' → logprob: -2.1284053325653076
    3. ']==' → logprob: -7.7534050941467285
    4. '==
' → logprob: -7.7534050941467285
    5. ')==' → logprob: -8.503405570983887
    6. '=' → logprob: -8.503405570983887
    7. '0' → logprob: -9.628405570983887
    8. ')' → logprob: -10.128405570983887
    9. '<|end|>' → logprob: -10.253405570983887
    10. ',' → logprob: -11.378405570983887

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.500028610229492
    3. 'side' → logprob: -13.875028610229492
    4. '   ' → logprob: -15.875028610229492
    5. '1' → logprob: -16.250028610229492
    6. '                   ' → logprob: -17.625028610229492
    7. '               ' → logprob: -17.875028610229492
    8. '=' → logprob: -18.125028610229492
    9. ' side' → logprob: -18.875028610229492
    10. '           ' → logprob: -18.937528610229492

Token 431: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08678842335939407
    2. 'and' → logprob: -2.9617884159088135
    3. ':
' → logprob: -3.5867884159088135
    4. ':' → logprob: -5.711788654327393
    5. '                       ' → logprob: -8.211788177490234
    6. 'a' → logprob: -10.211788177490234
    7. '                   ' → logprob: -10.711788177490234
    8. ' a' → logprob: -11.211788177490234
    9. ' ' → logprob: -11.461788177490234
    10. '   ' → logprob: -11.461788177490234

Token 432: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09005125612020493
    2. ' curr' → logprob: -3.5900511741638184
    3. '                   ' → logprob: -3.8400511741638184
    4. ' and' → logprob: -4.090051174163818
    5. 'curr' → logprob: -4.590051174163818
    6. ' if' → logprob: -6.340051174163818
    7. ':' → logprob: -6.590051174163818
    8. ':
' → logprob: -6.965051174163818
    9. '                           ' → logprob: -7.215051174163818
    10. 'if' → logprob: -7.465051174163818

Token 433: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11160531640052795
    2. 'curr' → logprob: -2.361605405807495
    3. 'if' (adapté à ' if') → logprob: -5.736605167388916
    4. ' a' → logprob: -5.736605167388916
    5. ' curr' → logprob: -5.861605167388916
    6. 'w' → logprob: -7.361605167388916
    7. '                       ' → logprob: -7.486605167388916
    8. '                   ' → logprob: -7.861605167388916
    9. '                           ' → logprob: -9.361605644226074
    10. ' if' → logprob: -9.361605644226074

Token 434: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018164457753300667
    2. ' a' → logprob: -4.01816463470459
    3. '   ' → logprob: -12.14316463470459
    4. '(a' → logprob: -12.26816463470459
    5. '	a' → logprob: -13.26816463470459
    6. ' ' → logprob: -14.64316463470459
    7. ' (' → logprob: -14.64316463470459
    8. '           ' → logprob: -14.89316463470459
    9. '    ' → logprob: -15.01816463470459
    10. '                   ' → logprob: -15.64316463470459

Token 435: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -1.3856492842023727e-06
    2. 'curr' → logprob: -14.625000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[c' → logprob: -15.250000953674316
    5. '[cur' → logprob: -16.125001907348633
    6. '(curr' → logprob: -16.500001907348633
    7. ' [' → logprob: -16.750001907348633
    8. '	curr' → logprob: -17.250001907348633
    9. '[current' → logprob: -17.375001907348633
    10. '[cnt' → logprob: -17.750001907348633

Token 436: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.803615391254425
    2. '-' → logprob: -1.1786153316497803
    3. ']==' → logprob: -1.4286153316497803
    4. ']!=' → logprob: -5.928615570068359
    5. ' -' → logprob: -7.053615570068359
    6. ' ]' → logprob: -7.553615570068359
    7. '[' → logprob: -7.553615570068359
    8. '==' → logprob: -8.80361557006836
    9. '][' → logprob: -9.17861557006836
    10. ']=='' → logprob: -10.67861557006836

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21969394385814667
    2. 'curr' → logprob: -1.719693899154663
    3. '-' → logprob: -4.594694137573242
    4. ']' → logprob: -5.594694137573242
    5. ' curr' → logprob: -6.969694137573242
    6. ' ' → logprob: -6.969694137573242
    7. '0' → logprob: -7.094694137573242
    8. '[curr' → logprob: -7.969694137573242
    9. 'floor' → logprob: -7.969694137573242
    10. ' -' → logprob: -8.469694137573242

Token 438: ']!=' (ID: 85780)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.3958686292171478
    2. ']!=' → logprob: -1.6458686590194702
    3. ']' → logprob: -2.0208685398101807
    4. ' ]' → logprob: -7.52086877822876
    5. ' in' → logprob: -8.395868301391602
    6. '!=' → logprob: -9.020868301391602
    7. '==' → logprob: -9.020868301391602
    8. 'in' → logprob: -9.020868301391602
    9. ']<=' → logprob: -9.145868301391602
    10. '']==' → logprob: -9.270868301391602

Token 439: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.371605948312208e-05
    2. ' ' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.750053405761719
    4. '0' → logprob: -14.250053405761719
    5. '
' → logprob: -16.12505340576172
    6. '۲' → logprob: -16.87505340576172
    7. '২' → logprob: -16.93755340576172
    8. '  ' → logprob: -17.12505340576172
    9. '    
' → logprob: -17.18755340576172
    10. '    ' → logprob: -17.18755340576172

Token 440: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0685763880610466
    2. ':' → logprob: -2.8185763359069824
    3. ' and' → logprob: -5.693576335906982
    4. ' :
' → logprob: -6.693576335906982
    5. '                           ' → logprob: -6.818576335906982
    6. '                       ' → logprob: -8.31857681274414
    7. ' or' → logprob: -8.44357681274414
    8. '):
' → logprob: -8.94357681274414
    9. ' :' → logprob: -8.94357681274414
    10. '                   ' → logprob: -9.94357681274414

Token 441: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.029709985479712486
    2. ':
' → logprob: -3.904710054397583
    3. ':' → logprob: -5.154709815979004
    4. '                       ' → logprob: -6.279709815979004
    5. ' break' → logprob: -7.904709815979004
    6. ' and' → logprob: -8.154709815979004
    7. ',' → logprob: -8.654709815979004
    8. '):
' → logprob: -8.779709815979004
    9. '                   ' → logprob: -9.279709815979004
    10. ' or' → logprob: -9.529709815979004

Token 442: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.2709290981292725
    2. 'curr' → logprob: -1.5209290981292725
    3. 'return' → logprob: -1.7709290981292725
    4. ' break' → logprob: -2.0209290981292725
    5. ' return' → logprob: -2.2709290981292725
    6. ' curr' → logprob: -2.3959290981292725
    7. '                               ' → logprob: -5.895929336547852
    8. '                           ' → logprob: -7.895929336547852
    9. '                       ' → logprob: -8.395929336547852
    10. '                                   ' → logprob: -9.270929336547852

Token 443: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.539792001247406
    2. ' return' → logprob: -1.1647920608520508
    3. 'curr' → logprob: -3.039792060852051
    4. ' curr' → logprob: -3.664792060852051
    5. 'break' → logprob: -4.164792060852051
    6. ' break' → logprob: -4.164792060852051
    7. '                   ' → logprob: -9.41479206085205
    8. 'next' → logprob: -9.66479206085205
    9. 'slide' → logprob: -9.66479206085205
    10. 'if' → logprob: -9.78979206085205

Token 444: ' ladder' (ID: 63451)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.4900844097137451
    2. 'next' → logprob: -1.3650844097137451
    3. 'curr' → logprob: -3.115084409713745
    4. ' curr' → logprob: -3.615084409713745
    5. ' a' → logprob: -3.990084409713745
    6. 'a' → logprob: -4.240084648132324
    7. ' w' → logprob: -5.365084648132324
    8. 'w' → logprob: -5.365084648132324
    9. ' side' → logprob: -5.490084648132324
    10. 'top' → logprob: -5.490084648132324

Token 445: ',' (ID: 11)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.1054222583770752
    2. 'top' → logprob: -2.355422258377075
    3. ' top' → logprob: -6.605422019958496
    4. 'Top' → logprob: -7.105422019958496
    5. 'tops' → logprob: -7.230422019958496
    6. '[curr' → logprob: -7.605422019958496
    7. '[top' → logprob: -7.855422019958496
    8. 'curr' → logprob: -8.105422019958496
    9. '_bottom' → logprob: -8.605422019958496
    10. '==' → logprob: -9.230422019958496

Token 446: ' move' (ID: 5275)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4376574158668518
    2. ' curr' → logprob: -1.437657356262207
    3. 'return' → logprob: -2.687657356262207
    4. 'curr' → logprob: -3.312657356262207
    5. ' top' → logprob: -5.937657356262207
    6. '                           ' → logprob: -6.062657356262207
    7. '                               ' → logprob: -6.562657356262207
    8. '                       ' → logprob: -6.687657356262207
    9. ' break' → logprob: -7.062657356262207
    10. ' ' → logprob: -7.062657356262207

Token 447: ' to' (ID: 316)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.901878297328949
    2. 'next' → logprob: -1.6518783569335938
    3. ' next' → logprob: -2.0268783569335938
    4. 'curr' → logprob: -2.5268783569335938
    5. ' to' → logprob: -2.6518783569335938
    6. 'to' → logprob: -2.9018783569335938
    7. ' top' → logprob: -3.0268783569335938
    8. ' curr' → logprob: -4.901878356933594
    9. '_top' → logprob: -5.901878356933594
    10. '=' → logprob: -6.901878356933594

Token 448: ' its' (ID: 1617)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.6947133541107178
    2. 'top' → logprob: -0.6947133541107178
    3. ' (' → logprob: -8.069713592529297
    4. '(top' → logprob: -8.319713592529297
    5. 'curr' → logprob: -8.444713592529297
    6. 'a' → logprob: -8.694713592529297
    7. ' curr' → logprob: -9.444713592529297
    8. '0' → logprob: -9.569713592529297
    9. ' ladder' → logprob: -9.569713592529297
    10. ' a' → logprob: -9.694713592529297

Token 449: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.038347501307725906
    2. ' top' → logprob: -3.2883474826812744
    3. '_top' → logprob: -8.163347244262695
    4. '	top' → logprob: -12.538347244262695
    5. 'Top' → logprob: -12.788347244262695
    6. 't' → logprob: -12.913347244262695
    7. '[top' → logprob: -13.038347244262695
    8. ' ' → logprob: -13.163347244262695
    9. 'tops' → logprob: -13.413347244262695
    10. 'bottom' → logprob: -13.663347244262695

Token 450: '
' (ID: 198)
  Prédit: '[curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[curr' → logprob: -1.328642725944519
    2. '_floor' → logprob: -1.328642725944519
    3. ' floor' → logprob: -1.828642725944519
    4. '(curr' → logprob: -2.7036428451538086
    5. ' curr' → logprob: -3.0786428451538086
    6. 'floor' → logprob: -3.2036428451538086
    7. '[' → logprob: -3.4536428451538086
    8. ' _' → logprob: -3.5786428451538086
    9. 'curr' → logprob: -3.8286428451538086
    10. '_a' → logprob: -4.453642845153809

Token 451: '                           ' (ID: 1686)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.4490465521812439
    2. '                           ' → logprob: -2.0740466117858887
    3. ' curr' → logprob: -2.0740466117858887
    4. 'curr' → logprob: -3.0740466117858887
    5. ',' → logprob: -4.199046611785889
    6. '
' → logprob: -4.449046611785889
    7. ' return' → logprob: -5.074046611785889
    8. '[curr' → logprob: -5.074046611785889
    9. '                       ' → logprob: -5.574046611785889
    10. '                            ' → logprob: -6.074046611785889

Token 452: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4206902980804443
    2. ' if' → logprob: -1.6706902980804443
    3. 'curr' → logprob: -1.6706902980804443
    4. '                           ' → logprob: -2.0456902980804443
    5. ' return' → logprob: -2.2956902980804443
    6. ' curr' → logprob: -2.5456902980804443
    7. 'if' (adapté à ' if') → logprob: -2.6706902980804443
    8. '                               ' → logprob: -7.545690536499023
    9. ' ' → logprob: -7.545690536499023
    10. 'prev' → logprob: -7.795690536499023

Token 453: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007171963807195425
    2. ' a' → logprob: -7.2507171630859375
    3. '   ' → logprob: -12.625717163085938
    4. ' ' → logprob: -14.250717163085938
    5. '                   ' → logprob: -14.375717163085938
    6. '                       ' → logprob: -14.500717163085938
    7. '  ' → logprob: -14.750717163085938
    8. '(a' → logprob: -15.000717163085938
    9. 'side' → logprob: -15.000717163085938
    10. '	a' → logprob: -15.500717163085938

Token 454: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -2.856408536899835e-05
    2. 'curr' → logprob: -10.750028610229492
    3. '[' → logprob: -12.250028610229492
    4. ' [' → logprob: -14.250028610229492
    5. '[
' → logprob: -14.625028610229492
    6. '[c' → logprob: -14.875028610229492
    7. '(curr' → logprob: -15.125028610229492
    8. '[cur' → logprob: -15.625028610229492
    9. '[next' → logprob: -16.125028610229492
    10. '[cnt' → logprob: -16.500028610229492

Token 455: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.68153518543113e-05
    2. '[' → logprob: -10.250057220458984
    3. ' -' → logprob: -11.125057220458984
    4. '[-' → logprob: -12.875057220458984
    5. '[curr' → logprob: -12.875057220458984
    6. '[cur' → logprob: -15.125057220458984
    7. '[next' → logprob: -15.250057220458984
    8. '-prev' → logprob: -16.000057220458984
    9. '−' → logprob: -16.375057220458984
    10. '–' → logprob: -16.625057220458984

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002819544170051813
    2. '-' → logprob: -8.500282287597656
    3. '0' → logprob: -10.375282287597656
    4. '2' → logprob: -10.500282287597656
    5. ' ' → logprob: -11.750282287597656
    6. '   ' → logprob: -13.062782287597656
    7. '...' → logprob: -13.750282287597656
    8. 'prev' → logprob: -13.937782287597656
    9. '```' → logprob: -14.000282287597656
    10. '<|end|>' → logprob: -14.000282287597656

Token 457: ']==' (ID: 34128)
  Prédit: '[curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -0.3615867793560028
    2. ']==' → logprob: -1.2365868091583252
    3. ']' → logprob: -4.861586570739746
    4. '==' → logprob: -5.486586570739746
    5. '[cur' → logprob: -7.236586570739746
    6. '[' → logprob: -8.236586570739746
    7. '']==' → logprob: -10.611586570739746
    8. '][' → logprob: -10.986586570739746
    9. '[current' → logprob: -11.111586570739746
    10. '[c' → logprob: -11.111586570739746

Token 458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012642296496778727
    2. '0' → logprob: -9.625126838684082
    3. ' ' → logprob: -9.750126838684082
    4. '   ' → logprob: -13.250126838684082
    5. '  ' → logprob: -16.000125885009766
    6. '           ' → logprob: -17.187625885009766
    7. '    ' → logprob: -17.500125885009766
    8. '```' → logprob: -17.812625885009766
    9. '       ' → logprob: -18.187625885009766
    10. '                   ' → logprob: -18.250125885009766

Token 459: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08927956968545914
    2. ':' → logprob: -2.4642796516418457
    3. '                               ' → logprob: -8.214279174804688
    4. '):
' → logprob: -10.214279174804688
    5. ':
' → logprob: -11.339279174804688
    6. ':return' → logprob: -11.339279174804688
    7. ' :
' → logprob: -13.214279174804688
    8. ':

' → logprob: -13.214279174804688
    9. '                           ' → logprob: -13.339279174804688
    10. ',' → logprob: -13.964279174804688

Token 460: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.06129071116447449
    2. '
' → logprob: -4.061290740966797
    3. '                           ' → logprob: -4.811290740966797
    4. ' return' → logprob: -4.936290740966797
    5. ' curr' → logprob: -4.936290740966797
    6. 'curr' → logprob: -5.186290740966797
    7. ':
' → logprob: -5.561290740966797
    8. 'return' → logprob: -5.936290740966797
    9. '):
' → logprob: -6.186290740966797
    10. ',' → logprob: -7.061290740966797

Token 461: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19754748046398163
    2. 'curr' → logprob: -2.197547435760498
    3. ' return' → logprob: -2.947547435760498
    4. 'top' → logprob: -4.822547435760498
    5. ' curr' → logprob: -5.447547435760498
    6. '                               ' → logprob: -6.447547435760498
    7. ' top' → logprob: -6.947547435760498
    8. 't' → logprob: -8.322547912597656
    9. '                           ' → logprob: -8.322547912597656
    10. '   ' → logprob: -10.197547912597656

Token 462: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.04858884960412979
    2. ' top' → logprob: -3.048588752746582
    3. '	top' → logprob: -14.423588752746582
    4. '   ' → logprob: -15.798588752746582
    5. '(top' → logprob: -15.798588752746582
    6. 'max' → logprob: -16.0485897064209
    7. 'bottom' → logprob: -16.4235897064209
    8. ' ' → logprob: -16.6735897064209
    9. '[top' → logprob: -16.6735897064209
    10. 'Top' → logprob: -16.7985897064209

Token 463: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.003179855877533555
    2. 'a' → logprob: -5.753180027008057
    3. '[' → logprob: -13.628179550170898
    4. '<|end|>' → logprob: -15.003179550170898
    5. '_' → logprob: -15.378179550170898
    6. ' a' → logprob: -15.753179550170898
    7. '[a' → logprob: -16.7531795501709
    8. 's' → logprob: -17.2531795501709
    9. '_ai' → logprob: -17.5031795501709
    10. '```' → logprob: -17.6281795501709

Token 464: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -1.5213274309644476e-05
    2. '[a' → logprob: -11.375015258789062
    3. 'a' → logprob: -13.875015258789062
    4. '(curr' → logprob: -14.125015258789062
    5. '[cur' → logprob: -14.250015258789062
    6. '[' → logprob: -14.375015258789062
    7. 'curr' → logprob: -14.750015258789062
    8. '[cnt' → logprob: -16.000015258789062
    9. '[c' → logprob: -16.750015258789062
    10. '[
' → logprob: -17.750015258789062

Token 465: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1756367712223437e-05
    2. ' -' → logprob: -12.125011444091797
    3. '1' → logprob: -12.500011444091797
    4. '[' → logprob: -13.000011444091797
    5. '−' → logprob: -15.750011444091797
    6. '[curr' → logprob: -16.875011444091797
    7. '```' → logprob: -17.125011444091797
    8. ']' → logprob: -17.375011444091797
    9. '–' → logprob: -17.625011444091797
    10. '<|end|>' → logprob: -17.625011444091797

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. '2' → logprob: -11.375015258789062
    3. ' ' → logprob: -13.500015258789062
    4. '-' → logprob: -14.375015258789062
    5. '   ' → logprob: -15.000015258789062
    6. '```' → logprob: -15.062515258789062
    7. '0' → logprob: -16.000015258789062
    8. '11' → logprob: -16.187515258789062
    9. '۱' → logprob: -16.875015258789062
    10. 'prev' → logprob: -17.062515258789062

Token 467: ']
' (ID: 1592)
  Prédit: '[curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -0.09615977108478546
    2. ']' → logprob: -3.0961596965789795
    3. 'curr' → logprob: -4.221159934997559
    4. ')' → logprob: -4.346159934997559
    5. '-' → logprob: -5.346159934997559
    6. '[' → logprob: -5.721159934997559
    7. '(curr' → logprob: -5.721159934997559
    8. ')
' → logprob: -6.346159934997559
    9. ']
' → logprob: -6.596159934997559
    10. '                   ' → logprob: -6.846159934997559

Token 468: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3258516490459442
    2. '                   ' → logprob: -1.5758516788482666
    3. '
' → logprob: -2.7008516788482666
    4. '                       ' → logprob: -5.8258514404296875
    5. 'curr' → logprob: -7.8258514404296875
    6. '               ' → logprob: -8.325851440429688
    7. '                               ' → logprob: -8.825851440429688
    8. '           ' → logprob: -8.950851440429688
    9. '
' → logprob: -9.825851440429688
    10. '						' → logprob: -10.325851440429688

Token 469: ' else' (ID: 1203)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.33749106526374817
    2. 'else' (adapté à ' else') → logprob: -1.3374910354614258
    3. 'return' → logprob: -3.837491035461426
    4. ' else' → logprob: -6.962491035461426
    5. '                       ' → logprob: -7.587491035461426
    6. '                   ' → logprob: -7.837491035461426
    7. '
' → logprob: -7.962491035461426
    8. '                               ' → logprob: -9.837491035461426
    9. '           ' → logprob: -9.962491035461426
    10. 'elif' → logprob: -10.212491035461426

Token 470: ':
' (ID: 734)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.40774211287498474
    2. 'return' → logprob: -2.1577420234680176
    3. '                               ' → logprob: -2.1577420234680176
    4. ':
' → logprob: -2.5327420234680176
    5. ':return' → logprob: -4.532742023468018
    6. ':' → logprob: -5.532742023468018
    7. '
' → logprob: -5.657742023468018
    8. ' 
' → logprob: -7.032742023468018
    9. '                           ' → logprob: -7.282742023468018
    10. '                                
' → logprob: -7.407742023468018

Token 471: '                               ' (ID: 2419)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2530144155025482
    2. 'return' → logprob: -1.5030144453048706
    3. ' curr' → logprob: -7.37801456451416
    4. 'curr' → logprob: -7.75301456451416
    5. '                               ' → logprob: -10.75301456451416
    6. '0' → logprob: -13.25301456451416
    7. '                           ' → logprob: -13.62801456451416
    8. '{return' → logprob: -13.75301456451416
    9. ' ' → logprob: -14.00301456451416
    10. '```' → logprob: -14.25301456451416

Token 472: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0024781543761491776
    2. ' return' → logprob: -6.002478122711182
    3. '
' → logprob: -13.50247859954834
    4. 'curr' → logprob: -14.62747859954834
    5. '                           ' → logprob: -15.12747859954834
    6. '                               ' → logprob: -15.62747859954834
    7. '{return' → logprob: -16.627477645874023
    8. '                       ' → logprob: -17.127477645874023
    9. '                                   ' → logprob: -17.627477645874023
    10. '                   ' → logprob: -18.127477645874023

Token 473: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0015028368216007948
    2. ' curr' → logprob: -6.501502990722656
    3. '(curr' → logprob: -15.001502990722656
    4. '	curr' → logprob: -16.126502990722656
    5. ' ' → logprob: -17.001502990722656
    6. '   ' → logprob: -17.251502990722656
    7. '
' → logprob: -17.751502990722656
    8. 'c' → logprob: -18.251502990722656
    9. '[curr' → logprob: -18.251502990722656
    10. ' ' → logprob: -19.001502990722656

Token 474: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008615399710834026
    2. ' -' → logprob: -4.758615493774414
    3. '1' → logprob: -15.258615493774414
    4. ' ' → logprob: -15.508615493774414
    5. '−' → logprob: -15.633615493774414
    6. '–' → logprob: -16.008615493774414
    7. ' ' → logprob: -17.133615493774414
    8. '                               ' → logprob: -17.258615493774414
    9. '`' → logprob: -17.383615493774414
    10. '<|end|>' → logprob: -17.508615493774414

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '0' → logprob: -18.875001907348633
    4. '```' → logprob: -18.875001907348633
    5. '
' → logprob: -20.250001907348633
    6. '۱' → logprob: -20.375001907348633
    7. '-' → logprob: -20.437501907348633
    8. '   ' → logprob: -20.437501907348633
    9. '2' → logprob: -20.812501907348633
    10. '１' → logprob: -20.875001907348633

Token 476: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005260083824396133
    2. '
' → logprob: -5.505259990692139
    3. '                       ' → logprob: -7.380259990692139
    4. '               ' → logprob: -8.005260467529297
    5. '<|end|>' → logprob: -9.755260467529297
    6. '				' → logprob: -10.130260467529297
    7. '           ' → logprob: -10.505260467529297
    8. ')
' → logprob: -11.255260467529297
    9. ')' → logprob: -11.380260467529297
    10. '```' → logprob: -11.505260467529297

Token 477: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003776811994612217
    2. '                       ' → logprob: -5.753777027130127
    3. '
' → logprob: -8.628776550292969
    4. '               ' → logprob: -8.753776550292969
    5. '                           ' → logprob: -9.003776550292969
    6. 'curr' → logprob: -9.128776550292969
    7. '           ' → logprob: -11.753776550292969
    8. '				' → logprob: -12.253776550292969
    9. 'else' → logprob: -13.003776550292969
    10. '```' → logprob: -13.128776550292969

Token 478: ' else' (ID: 1203)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013739225687459111
    2. 'curr' → logprob: -7.126373767852783
    3. '               ' → logprob: -7.626373767852783
    4. '                       ' → logprob: -10.001374244689941
    5. 'else' (adapté à ' else') → logprob: -11.001374244689941
    6. ' curr' → logprob: -12.001374244689941
    7. '           ' → logprob: -12.251374244689941
    8. '   ' → logprob: -13.376374244689941
    9. '       ' → logprob: -13.751374244689941
    10. '                  ' → logprob: -13.876374244689941

Token 479: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3867665231227875
    2. ':' → logprob: -1.7617665529251099
    3. ':
' → logprob: -2.1367664337158203
    4. '                   ' → logprob: -3.8867664337158203
    5. '{
' → logprob: -5.38676643371582
    6. ' if' → logprob: -6.51176643371582
    7. 'if' → logprob: -6.63676643371582
    8. '               ' → logprob: -7.13676643371582
    9. '):
' → logprob: -7.51176643371582
    10. '{' → logprob: -8.13676643371582

Token 480: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.12509039044380188
    2. '                   ' → logprob: -2.2500903606414795
    3. 'if' → logprob: -4.750090599060059
    4. ' if' → logprob: -6.375090599060059
    5. '{
' → logprob: -7.500090599060059
    6. 'curr' → logprob: -7.750090599060059
    7. ' curr' → logprob: -8.000090599060059
    8. '               ' → logprob: -8.250090599060059
    9. '```' → logprob: -9.875090599060059
    10. '                           ' → logprob: -10.250090599060059

Token 481: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08062506467103958
    2. ' if' → logprob: -2.580625057220459
    3. '                       ' → logprob: -6.455625057220459
    4. '                   ' → logprob: -9.080625534057617
    5. '                           ' → logprob: -10.455625534057617
    6. '               ' → logprob: -11.830625534057617
    7. '           ' → logprob: -12.830625534057617
    8. ' ' → logprob: -13.205625534057617
    9. 'b' → logprob: -13.830625534057617
    10. '   ' → logprob: -14.080625534057617

Token 482: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.048589639365673065
    2. ' b' → logprob: -3.0485897064208984
    3. '   ' → logprob: -13.923589706420898
    4. ' ' → logprob: -15.173589706420898
    5. '	b' → logprob: -15.298589706420898
    6. '    ' → logprob: -16.1735897064209
    7. 'B' → logprob: -16.3610897064209
    8. '  ' → logprob: -16.3610897064209
    9. '           ' → logprob: -16.3610897064209
    10. '       ' → logprob: -16.4860897064209

Token 483: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -0.011684982106089592
    2. 'curr' → logprob: -4.511684894561768
    3. ' curr' → logprob: -7.636684894561768
    4. '(curr' → logprob: -9.261685371398926
    5. '_curr' → logprob: -10.761685371398926
    6. '	curr' → logprob: -11.511685371398926
    7. '[' → logprob: -12.761685371398926
    8. '>' → logprob: -12.886685371398926
    9. '   ' → logprob: -12.886685371398926
    10. '```' → logprob: -13.136685371398926

Token 484: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.45848218582978e-06
    2. ' -' → logprob: -13.50000286102295
    3. '[' → logprob: -14.37500286102295
    4. '[curr' → logprob: -15.12500286102295
    5. '                   ' → logprob: -16.625001907348633
    6. '                       ' → logprob: -16.875001907348633
    7. '1' → logprob: -18.125001907348633
    8. '                           ' → logprob: -18.625001907348633
    9. '[-' → logprob: -18.875001907348633
    10. '               ' → logprob: -18.875001907348633

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '-' → logprob: -13.75000286102295
    3. ' ' → logprob: -13.87500286102295
    4. 'curr' → logprob: -15.37500286102295
    5. '   ' → logprob: -16.375001907348633
    6. 'b' → logprob: -16.625001907348633
    7. '...' → logprob: -16.750001907348633
    8. '```' → logprob: -16.750001907348633
    9. '<|end|>' → logprob: -17.000001907348633
    10. '2' → logprob: -17.125001907348633

Token 486: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.16047483682632446
    2. '!=' → logprob: -2.0354747772216797
    3. '-' → logprob: -4.78547477722168
    4. ' !=' → logprob: -5.41047477722168
    5. ']' → logprob: -6.41047477722168
    6. ')!=' → logprob: -6.53547477722168
    7. '                   ' → logprob: -8.16047477722168
    8. '[' → logprob: -8.28547477722168
    9. '[curr' → logprob: -8.41047477722168
    10. '                       ' → logprob: -8.53547477722168

Token 487: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۲' → logprob: -19.625
    4. '   ' → logprob: -19.75
    5. '```' → logprob: -20.25
    6. '0' → logprob: -21.0
    7. '
' → logprob: -21.25
    8. '２' → logprob: -21.5
    9. '  ' → logprob: -21.5
    10. '২' → logprob: -22.125

Token 488: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5007873177528381
    2. ':' → logprob: -1.6257872581481934
    3. '                           ' → logprob: -1.7507872581481934
    4. '):
' → logprob: -4.000787258148193
    5. '                       ' → logprob: -5.875787258148193
    6. '):' → logprob: -6.875787258148193
    7. ':return' → logprob: -7.375787258148193
    8. ')' → logprob: -8.625787734985352
    9. '                               ' → logprob: -8.875787734985352
    10. '                   ' → logprob: -9.125787734985352

Token 489: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.18181747198104858
    2. 'return' → logprob: -1.9318175315856934
    3. ' return' → logprob: -4.681817531585693
    4. '                       ' → logprob: -5.181817531585693
    5. '                               ' → logprob: -5.181817531585693
    6. '```' → logprob: -7.931817531585693
    7. '               ' → logprob: -9.056817054748535
    8. '                   ' → logprob: -9.306817054748535
    9. '           ' → logprob: -9.306817054748535
    10. '                            ' → logprob: -10.181817054748535

Token 490: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08075273782014847
    2. ' return' → logprob: -3.5807528495788574
    3. '                           ' → logprob: -3.5807528495788574
    4. '#' → logprob: -4.205752849578857
    5. '                               ' → logprob: -5.080752849578857
    6. '                       ' → logprob: -8.0807523727417
    7. ' #' → logprob: -8.3307523727417
    8. '```' → logprob: -10.2057523727417
    9. '               ' → logprob: -10.3307523727417
    10. '                            ' → logprob: -10.7057523727417

Token 491: ' b' (ID: 287)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.18846125900745392
    2. 'b' → logprob: -2.3134613037109375
    3. ' top' → logprob: -2.6884613037109375
    4. 'side' → logprob: -5.9384613037109375
    5. ' b' → logprob: -6.4384613037109375
    6. 'curr' → logprob: -8.063461303710938
    7. ' side' → logprob: -8.313461303710938
    8. 'bottom' → logprob: -10.438461303710938
    9. ' curr' → logprob: -11.563461303710938
    10. ' ' → logprob: -11.813461303710938

Token 492: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -6.659005157416686e-05
    2. 'curr' → logprob: -9.750066757202148
    3. '[cur' → logprob: -12.500066757202148
    4. '[' → logprob: -13.375066757202148
    5. '(curr' → logprob: -13.375066757202148
    6. '                   ' → logprob: -14.375066757202148
    7. ' curr' → logprob: -15.250066757202148
    8. '	curr' → logprob: -16.12506675720215
    9. '               ' → logprob: -16.37506675720215
    10. '[cnt' → logprob: -16.37506675720215

Token 493: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.173704271830502e-06
    2. ' -' → logprob: -13.25000286102295
    3. '[curr' → logprob: -13.87500286102295
    4. '[' → logprob: -16.500003814697266
    5. '1' → logprob: -16.500003814697266
    6. '                   ' → logprob: -17.375003814697266
    7. '-cur' → logprob: -17.500003814697266
    8. 'curr' → logprob: -17.625003814697266
    9. '_curr' → logprob: -18.250003814697266
    10. '(curr' → logprob: -18.625003814697266

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.250006675720215
    4. '-' → logprob: -15.562506675720215
    5. '<|end|>' → logprob: -16.62500762939453
    6. 'prev' → logprob: -16.87500762939453
    7. '```' → logprob: -16.87500762939453
    8. '<|end|>' → logprob: -17.00000762939453
    9. 'curr' → logprob: -17.12500762939453
    10. '...' → logprob: -17.68750762939453

Token 495: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.5796499252319336
    2. '[curr' → logprob: -1.0796499252319336
    3. '==' → logprob: -2.3296499252319336
    4. '[cur' → logprob: -6.704649925231934
    5. '-' → logprob: -7.579649925231934
    6. ']' → logprob: -8.329649925231934
    7. '[' → logprob: -8.579649925231934
    8. ']!=' → logprob: -8.704649925231934
    9. '```' → logprob: -8.704649925231934
    10. '']==' → logprob: -8.829649925231934

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '0' → logprob: -18.125
    4. '   ' → logprob: -21.625
    5. '```' → logprob: -21.625
    6. '۱' → logprob: -21.75
    7. '１' → logprob: -22.125
    8. '१' → logprob: -22.5
    9. '১' → logprob: -23.0
    10. '[' → logprob: -23.8125

Token 497: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.058024629950523376
    2. ':' → logprob: -3.6830246448516846
    3. '):
' → logprob: -3.9330246448516846
    4. '                               ' → logprob: -4.8080244064331055
    5. ':return' → logprob: -5.9330244064331055
    6. '                           ' → logprob: -8.058024406433105
    7. '):' → logprob: -8.808024406433105
    8. 'return' → logprob: -9.433024406433105
    9. ')' → logprob: -9.808024406433105
    10. '{
' → logprob: -10.308024406433105

Token 498: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.8307459354400635
    2. ':
' → logprob: -0.9557459354400635
    3. 'return' → logprob: -2.3307459354400635
    4. ':return' → logprob: -3.3307459354400635
    5. ' return' → logprob: -4.080745697021484
    6. '):
' → logprob: -4.455745697021484
    7. '                           ' → logprob: -4.705745697021484
    8. ':' → logprob: -5.205745697021484
    9. '
' → logprob: -7.205745697021484
    10. '                       ' → logprob: -7.455745697021484

Token 499: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10142054408788681
    2. ' return' → logprob: -2.3514206409454346
    3. 'top' → logprob: -7.1014204025268555
    4. ' top' → logprob: -7.8514204025268555
    5. '                           ' → logprob: -16.726421356201172
    6. '                               ' → logprob: -17.726421356201172
    7. ' ' → logprob: -18.476421356201172
    8. 'ret' → logprob: -19.351421356201172
    9. '
' → logprob: -19.476421356201172
    10. ':return' → logprob: -19.476421356201172

Token 500: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0001234428636962548
    2. ' top' → logprob: -9.000123023986816
    3. '	top' → logprob: -20.750123977661133
    4. 't' → logprob: -21.125123977661133
    5. 'Top' → logprob: -21.250123977661133
    6. 'bottom' → logprob: -22.750123977661133
    7. '[top' → logprob: -23.750123977661133
    8. '_top' → logprob: -24.000123977661133
    9. '(top' → logprob: -24.250123977661133
    10. '   ' → logprob: -25.250123977661133

Token 501: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.3822154111694545e-05
    2. 'b' → logprob: -10.250043869018555
    3. '_' → logprob: -11.875043869018555
    4. '_side' → logprob: -13.875043869018555
    5. '_a' → logprob: -14.750043869018555
    6. '[' → logprob: -17.250043869018555
    7. '```' → logprob: -17.625043869018555
    8. '_s' → logprob: -18.125043869018555
    9. 'a' → logprob: -18.250043869018555
    10. ' _' → logprob: -18.375043869018555

Token 502: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -5.5577775128767826e-06
    2. 'curr' → logprob: -12.250005722045898
    3. '(curr' → logprob: -15.375005722045898
    4. '[' → logprob: -15.875005722045898
    5. '[cnt' → logprob: -16.0000057220459
    6. 'b' → logprob: -16.6250057220459
    7. ' curr' → logprob: -16.8750057220459
    8. '[b' → logprob: -17.0000057220459
    9. '[cur' → logprob: -17.0000057220459
    10. '[
' → logprob: -18.3750057220459

Token 503: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.7835754988482222e-05
    2. '[curr' → logprob: -11.125018119812012
    3. '[' → logprob: -13.500018119812012
    4. ' -' → logprob: -13.625018119812012
    5. '[cur' → logprob: -15.625018119812012
    6. '[-' → logprob: -16.375017166137695
    7. '1' → logprob: -17.375017166137695
    8. '(curr' → logprob: -17.375017166137695
    9. ']' → logprob: -17.500017166137695
    10. '][' → logprob: -17.750017166137695

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003449984942562878
    2. 'curr' → logprob: -8.250345230102539
    3. '-' → logprob: -10.250345230102539
    4. '(curr' → logprob: -10.500345230102539
    5. '[curr' → logprob: -11.125345230102539
    6. 'prev' → logprob: -13.000345230102539
    7. '[' → logprob: -13.750345230102539
    8. 'b' → logprob: -14.375345230102539
    9. '
' → logprob: -14.750345230102539
    10. '```' → logprob: -15.000345230102539

Token 505: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3580492436885834
    2. ']
' → logprob: -1.3580492734909058
    3. '[curr' → logprob: -3.233049154281616
    4. '(curr' → logprob: -5.858049392700195
    5. '-' → logprob: -7.358049392700195
    6. 'curr' → logprob: -8.483049392700195
    7. '                           ' → logprob: -8.858049392700195
    8. '
' → logprob: -9.233049392700195
    9. ']

' → logprob: -9.608049392700195
    10. ']+' → logprob: -9.983049392700195

Token 506: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.016995497047901154
    2. '                               ' → logprob: -4.641995429992676
    3. '
' → logprob: -6.016995429992676
    4. '                   ' → logprob: -6.141995429992676
    5. '                       ' → logprob: -6.891995429992676
    6. '-' → logprob: -8.266995429992676
    7. '           ' → logprob: -8.391995429992676
    8. '```' → logprob: -8.516995429992676
    9. '               ' → logprob: -8.641995429992676
    10. 'return' → logprob: -8.641995429992676

Token 507: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.31255754828453064
    2. ' else' → logprob: -1.437557578086853
    3. 'return' → logprob: -4.187557697296143
    4. '-' → logprob: -5.687557697296143
    5. 'curr' → logprob: -5.687557697296143
    6. '
' → logprob: -6.187557697296143
    7. '                           ' → logprob: -6.312557697296143
    8. '                               ' → logprob: -6.437557697296143
    9. ' curr' → logprob: -7.062557697296143
    10. ' return' → logprob: -7.062557697296143

Token 508: ':
' (ID: 734)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.12371121346950531
    2. '                               ' → logprob: -2.623711109161377
    3. 'return' → logprob: -3.248711109161377
    4. ' curr' → logprob: -5.873711109161377
    5. '                           ' → logprob: -7.248711109161377
    6. ' ' → logprob: -8.248711585998535
    7. '                                ' → logprob: -8.748711585998535
    8. '   ' → logprob: -8.998711585998535
    9. '                       ' → logprob: -9.123711585998535
    10. '                                   ' → logprob: -9.248711585998535

Token 509: '                               ' (ID: 2419)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4367751479148865
    2. ' curr' → logprob: -1.1867752075195312
    3. 'return' → logprob: -3.4367752075195312
    4. 'curr' → logprob: -4.186775207519531
    5. '                               ' → logprob: -7.311775207519531
    6. '                            ' → logprob: -8.311775207519531
    7. '                           ' → logprob: -9.186775207519531
    8. ' ' → logprob: -9.436775207519531
    9. ' ' → logprob: -9.811775207519531
    10. '                             ' → logprob: -10.311775207519531

Token 510: ' return' (ID: 622)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.030545463785529137
    2. ' curr' → logprob: -3.530545473098755
    3. 'return' (adapté à ' return') → logprob: -7.280545234680176
    4. ' return' → logprob: -9.155545234680176
    5. '	curr' → logprob: -16.405546188354492
    6. '(curr' → logprob: -16.655546188354492
    7. ' ' → logprob: -16.905546188354492
    8. 'cur' → logprob: -17.030546188354492
    9. '   ' → logprob: -17.655546188354492
    10. '[curr' → logprob: -17.905546188354492

Token 511: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.011047935113310814
    2. ' curr' → logprob: -4.511047840118408
    3. '(curr' → logprob: -16.63604736328125
    4. '	curr' → logprob: -17.26104736328125
    5. 'c' → logprob: -18.26104736328125
    6. '[curr' → logprob: -18.76104736328125
    7. ' ' → logprob: -19.01104736328125
    8. 'Curr' → logprob: -19.63604736328125
    9. ' ' → logprob: -20.01104736328125
    10. '.curr' → logprob: -20.26104736328125

Token 512: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.7697225252486533e-06
    2. ' -' → logprob: -12.500003814697266
    3. '```' → logprob: -20.250003814697266
    4. '<|end|>' → logprob: -20.250003814697266
    5. '−' → logprob: -20.750003814697266
    6. '`' → logprob: -22.000003814697266
    7. '()-' → logprob: -22.125003814697266
    8. '<|end|>' → logprob: -22.375003814697266
    9. '--' → logprob: -22.500003814697266
    10. '–' → logprob: -22.500003814697266

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '-' → logprob: -19.625
    4. '```' → logprob: -21.875
    5. '   ' → logprob: -22.125
    6. '
' → logprob: -22.125
    7. '`' → logprob: -22.625
    8. '１' → logprob: -22.75
    9. '2' → logprob: -23.0
    10. '' → logprob: -24.1875

Token 514: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000873943732585758
    2. '               ' → logprob: -7.375874042510986
    3. 'curr' → logprob: -8.625873565673828
    4. '                       ' → logprob: -10.125873565673828
    5. '           ' → logprob: -11.125873565673828
    6. '				' → logprob: -12.500873565673828
    7. '   ' → logprob: -13.125873565673828
    8. '       ' → logprob: -13.625873565673828
    9. '		           ' → logprob: -13.875873565673828
    10. '                           ' → logprob: -14.000873565673828

Token 515: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0022466040682047606
    2. '               ' → logprob: -6.252246379852295
    3. '                       ' → logprob: -8.752246856689453
    4. '           ' → logprob: -9.877246856689453
    5. '
' → logprob: -10.002246856689453
    6. 'curr' → logprob: -10.502246856689453
    7. '   ' → logprob: -11.377246856689453
    8. '				' → logprob: -11.877246856689453
    9. '       ' → logprob: -12.252246856689453
    10. '		           ' → logprob: -12.877246856689453

Token 516: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.03960353881120682
    2. '                   ' → logprob: -3.2896034717559814
    3. '               ' → logprob: -6.7896037101745605
    4. ' curr' → logprob: -7.9146037101745605
    5. '           ' → logprob: -10.789603233337402
    6. 'current' → logprob: -11.164603233337402
    7. '   ' → logprob: -11.164603233337402
    8. '                       ' → logprob: -12.039603233337402
    9. '	curr' → logprob: -12.539603233337402
    10. '       ' → logprob: -12.664603233337402

Token 517: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07558611035346985
    2. ' -=' → logprob: -3.2005860805511475
    3. '-' → logprob: -3.4505860805511475
    4. '=' → logprob: -8.075586318969727
    5. '```' → logprob: -11.700586318969727
    6. '+=' → logprob: -12.075586318969727
    7. ' -' → logprob: -12.075586318969727
    8. '   ' → logprob: -13.450586318969727
    9. '<|end|>' → logprob: -14.700586318969727
    10. '--' → logprob: -14.700586318969727

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -19.500001907348633
    4. '۱' → logprob: -20.750001907348633
    5. '１' → logprob: -21.187501907348633
    6. '0' → logprob: -21.187501907348633
    7. '   ' → logprob: -21.375001907348633
    8. '<|end|>' → logprob: -21.625001907348633
    9. '
' → logprob: -21.750001907348633
    10. '`' → logprob: -22.000001907348633

Token 519: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04601854085922241
    2. '<|end|>' → logprob: -4.171018600463867
    3. ' return' → logprob: -5.171018600463867
    4. 'return' → logprob: -5.296018600463867
    5. '       ' → logprob: -5.671018600463867
    6. ' 
' → logprob: -5.796018600463867
    7. '  
' → logprob: -6.296018600463867
    8. '\n' → logprob: -6.296018600463867
    9. '```' → logprob: -6.296018600463867
    10. '    
' → logprob: -6.671018600463867

Token 521: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0010186368599534035
    2. ' return' → logprob: -7.501018524169922
    3. '               ' → logprob: -7.876018524169922
    4. '       ' → logprob: -9.626018524169922
    5. 'floor' → logprob: -11.626018524169922
    6. '           ' → logprob: -12.001018524169922
    7. '0' → logprob: -13.501018524169922
    8. '```' → logprob: -14.501018524169922
    9. '                   ' → logprob: -14.876018524169922
    10. 'if' → logprob: -14.876018524169922

Token 522: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6368332505226135
    2. 'floor' → logprob: -0.7618332505226135
    3. '-' → logprob: -6.011833190917969
    4. ' floor' → logprob: -6.886833190917969
    5. ' ' → logprob: -8.011833190917969
    6. 'curr' → logprob: -8.261833190917969
    7. 'flo' → logprob: -10.136833190917969
    8. ' -' → logprob: -10.386833190917969
    9. '-floor' → logprob: -10.636833190917969
    10. 'None' → logprob: -11.011833190917969

Token 523: '0' (ID: 15)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.25363633036613464
    2. '0' → logprob: -1.503636360168457
    3. '-' → logprob: -6.753636360168457
    4. 'curr' → logprob: -7.878636360168457
    5. 'flo' → logprob: -10.003636360168457
    6. ' floor' → logprob: -10.128636360168457
    7. '-floor' → logprob: -10.628636360168457
    8. 'float' → logprob: -11.878636360168457
    9. 'current' → logprob: -12.128636360168457
    10. ' ' → logprob: -12.128636360168457

Token 524: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 525: ' if' (ID: 538)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4231625497341156
    2. '<|end|>' → logprob: -1.298162579536438
    3. 'floor' → logprob: -3.0481624603271484
    4. 'return' → logprob: -4.173162460327148
    5. ')' → logprob: -5.798162460327148
    6. ' ' → logprob: -6.048162460327148
    7. ' floor' → logprob: -7.298162460327148
    8. '```' → logprob: -7.423162460327148
    9. '<|end|>' → logprob: -7.923162460327148
    10. 'continue' → logprob: -8.298162460327148

Token 526: ' nothing' (ID: 6939)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.8601527214050293
    2. 'curr' → logprob: -1.4851527214050293
    3. 'floor' → logprob: -1.9851527214050293
    4. '0' → logprob: -2.4851527214050293
    5. ' no' → logprob: -2.8601527214050293
    6. ' floor' → logprob: -3.4851527214050293
    7. 'none' → logprob: -4.360152721405029
    8. 'None' → logprob: -4.860152721405029
    9. ' curr' → logprob: -5.610152721405029
    10. ' none' → logprob: -5.860152721405029

Token 527: ' found' (ID: 2491)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: ' slide' (ID: 24969)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12864115834236145
    2. ' return' → logprob: -2.378641128540039
    3. '0' → logprob: -3.628641128540039
    4. '<|end|>' → logprob: -7.003641128540039
    5. ' ' → logprob: -8.253641128540039
    6. '```' → logprob: -9.628641128540039
    7. 'floor' → logprob: -9.628641128540039
    8. ')return' → logprob: -10.503641128540039
    9. ':return' → logprob: -10.753641128540039
    10. '
' → logprob: -10.753641128540039

Token 530: ' to' (ID: 316)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.17449429631233215
    2. 'to' → logprob: -2.4244942665100098
    3. ' down' → logprob: -2.9244942665100098
    4. ' to' → logprob: -4.54949426651001
    5. ' all' → logprob: -5.54949426651001
    6. '0' → logprob: -6.04949426651001
    7. 'all' → logprob: -7.04949426651001
    8. '_down' → logprob: -9.174494743347168
    9. ' ' → logprob: -10.049494743347168
    10. 'floor' → logprob: -11.299494743347168

Token 531: ' floor' (ID: 8350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023894020705483854
    2. 'floor' → logprob: -8.875239372253418
    3. ' ' → logprob: -9.375239372253418
    4. 'bottom' → logprob: -11.375239372253418
    5. ' floor' → logprob: -14.500239372253418
    6. 'curr' → logprob: -14.500239372253418
    7. 'zero' → logprob: -14.500239372253418
    8. 'lowest' → logprob: -14.875239372253418
    9. 'the' → logprob: -15.250239372253418
    10. 'top' → logprob: -15.500239372253418

Token 532: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. '=' → logprob: -16.125709533691406
    4. '<|end|>' → logprob: -17.000709533691406
    5. '```' → logprob: -18.125709533691406
    6. '(' → logprob: -18.500709533691406
    7. '[' → logprob: -18.625709533691406
    8. '               ' → logprob: -18.625709533691406
    9. '           ' → logprob: -19.500709533691406
    10. ' =' → logprob: -19.875709533691406

Token 533: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '```' → logprob: -18.875
    4. '
' → logprob: -21.625
    5. '00' → logprob: -22.0
    6. '[' → logprob: -22.0
    7. '=' → logprob: -22.25
    8. '000' → logprob: -22.5
    9. '`' → logprob: -22.75
    10. '(' → logprob: -23.0

Token 534: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24481147527694702
    2. '       ' → logprob: -2.119811534881592
    3. '        
' → logprob: -2.619811534881592
    4. '    
' → logprob: -4.869811534881592
    5. '\n' → logprob: -4.994811534881592
    6. '   ' → logprob: -5.494811534881592
    7. '  
' → logprob: -6.619811534881592
    8. '```' → logprob: -7.119811534881592
    9. '		
' → logprob: -7.369811534881592
    10. '            
' → logprob: -7.619811534881592

Token 536: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9065373539924622
    2. '        
' → logprob: -1.1565372943878174
    3. '       ' → logprob: -1.5315372943878174
    4. '    
' → logprob: -3.7815372943878174
    5. '  
' → logprob: -4.4065375328063965
    6. ' 
' → logprob: -4.7815375328063965
    7. '   ' → logprob: -5.2815375328063965
    8. 'def' → logprob: -5.9065375328063965
    9. 'next' → logprob: -5.9065375328063965
    10. '\n' → logprob: -6.4065375328063965

Token 537: ' State' (ID: 5388)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.592268705368042
    2. 'dp' → logprob: -1.467268705368042
    3. 'from' → logprob: -2.467268705368042
    4. 'q' → logprob: -3.717268705368042
    5. 'start' → logprob: -3.717268705368042
    6. 'dq' → logprob: -4.092268943786621
    7. '   ' → logprob: -4.217268943786621
    8. 'queue' → logprob: -4.342268943786621
    9. '       ' → logprob: -4.842268943786621
    10. 'for' → logprob: -4.967268943786621

Token 538: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05709167569875717
    2. ':' → logprob: -3.05709171295166
    3. '=' → logprob: -5.43209171295166
    4. ' :' → logprob: -6.68209171295166
    5. ',' → logprob: -7.43209171295166
    6. 's' → logprob: -8.30709171295166
    7. ' side' → logprob: -8.43209171295166
    8. '[' → logprob: -8.68209171295166
    9. '       ' → logprob: -8.68209171295166
    10. '   ' → logprob: -8.80709171295166

Token 539: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0879039466381073
    2. 'side' → logprob: -3.5879039764404297
    3. ' from' → logprob: -4.21290397644043
    4. ' side' → logprob: -4.58790397644043
    5. '(side' → logprob: -4.96290397644043
    6. 'deque' → logprob: -4.96290397644043
    7. '   ' → logprob: -5.21290397644043
    8. ' (' → logprob: -5.83790397644043
    9. 'queue' → logprob: -6.46290397644043
    10. 'floor' → logprob: -6.58790397644043

Token 540: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.0948442593216896
    2. ' side' → logprob: -2.469844341278076
    3. ')' → logprob: -5.969844341278076
    4. 'floor' → logprob: -6.344844341278076
    5. 'queue' → logprob: -7.969844341278076
    6. 'current' → logprob: -8.094843864440918
    7. ',' → logprob: -8.344843864440918
    8. '0' → logprob: -8.719843864440918
    9. ' floor' → logprob: -8.969843864440918
    10. ' current' → logprob: -8.969843864440918

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002813313389196992
    2. ',f' → logprob: -6.002813339233398
    3. ' ,' → logprob: -8.377813339233398
    4. ',
' → logprob: -9.877813339233398
    5. ',n' → logprob: -11.502813339233398
    6. ')' → logprob: -12.002813339233398
    7. ',pos' → logprob: -12.377813339233398
    8. ',state' → logprob: -12.627813339233398
    9. ',size' → logprob: -12.752813339233398
    10. ',int' → logprob: -12.752813339233398

Token 542: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.6937644481658936
    2. 'floor' → logprob: -0.6937644481658936
    3. ',' → logprob: -7.943764686584473
    4. ' current' → logprob: -9.943764686584473
    5. 'flo' → logprob: -9.943764686584473
    6. ')' → logprob: -9.943764686584473
    7. 'current' → logprob: -10.818764686584473
    8. '_floor' → logprob: -10.943764686584473
    9. ' ' → logprob: -11.068764686584473
    10. ' ,' → logprob: -11.693764686584473

Token 543: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10226063430309296
    2. ')' → logprob: -2.3522605895996094
    3. ',
' → logprob: -6.852260589599609
    4. '       ' → logprob: -7.477260589599609
    5. '),' → logprob: -8.72726058959961
    6. ',)' → logprob: -8.97726058959961
    7. ')
' → logprob: -10.35226058959961
    8. ' ,' → logprob: -10.85226058959961
    9. '0' → logprob: -11.60226058959961
    10. '   ' → logprob: -11.97726058959961

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6805436015129089
    2. ',' → logprob: -0.8055436015129089
    3. ',
' → logprob: -3.6805436611175537
    4. '
' → logprob: -4.805543422698975
    5. '   ' → logprob: -5.680543422698975
    6. ')' → logprob: -6.180543422698975
    7. 'queue' → logprob: -6.680543422698975
    8. ' ,' → logprob: -6.680543422698975
    9. ':' → logprob: -7.180543422698975
    10. '        
' → logprob: -7.555543422698975

Token 545: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0877574235200882
    2. 'queue' → logprob: -2.9627573490142822
    3. '   ' → logprob: -4.337757587432861
    4. 'from' → logprob: -5.337757587432861
    5. ' queue' → logprob: -5.587757587432861
    6. 'dist' → logprob: -5.962757587432861
    7. '
' → logprob: -6.087757587432861
    8. 'q' → logprob: -6.087757587432861
    9. 'start' → logprob: -6.962757587432861
    10. ' from' → logprob: -7.587757587432861

Token 546: ' side' (ID: 4307)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.41361990571022034
    2. 'visited' → logprob: -1.788619875907898
    3. '       ' → logprob: -2.9136199951171875
    4. 'from' → logprob: -3.0386199951171875
    5. 'queue' → logprob: -3.4136199951171875
    6. 'q' → logprob: -4.4136199951171875
    7. 'dp' → logprob: -5.0386199951171875
    8. 'dq' → logprob: -5.2886199951171875
    9. '   ' → logprob: -5.6636199951171875
    10. 'start' → logprob: -5.6636199951171875

Token 547: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09458824247121811
    2. '=' → logprob: -2.844588279724121
    3. ' =' → logprob: -3.594588279724121
    4. ' ,' → logprob: -6.094588279724121
    5. ')' → logprob: -6.594588279724121
    6. ',f' → logprob: -8.719588279724121
    7. ':' → logprob: -8.844588279724121
    8. '==' → logprob: -8.969588279724121
    9. ',
' → logprob: -8.969588279724121
    10. ' ==' → logprob: -9.219588279724121

Token 548: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14175865054130554
    2. '=' → logprob: -2.141758680343628
    3. ' =' → logprob: -4.516758441925049
    4. ')' → logprob: -6.141758441925049
    5. ' ,' → logprob: -7.766758441925049
    6. '==' → logprob: -8.141758918762207
    7. ',
' → logprob: -8.641758918762207
    8. ',next' → logprob: -9.016758918762207
    9. '   ' → logprob: -9.266758918762207
    10. ',n' → logprob: -9.766758918762207

Token 549: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012315497733652592
    2. ',
' → logprob: -5.512315273284912
    3. '<|end|>' → logprob: -6.137315273284912
    4. ' ,' → logprob: -6.637315273284912
    5. ')' → logprob: -6.762315273284912
    6. ':' → logprob: -7.137315273284912
    7. ' =' → logprob: -7.387315273284912
    8. '=' → logprob: -7.512315273284912
    9. '<|end|>' → logprob: -7.887315273284912
    10. ' or' → logprob: -8.13731575012207

Token 550: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44271570444107056
    2. '1' → logprob: -1.3177156448364258
    3. '0' → logprob: -3.067715644836426
    4. ' floor' → logprob: -3.192715644836426
    5. 'floor' → logprob: -6.317715644836426
    6. ' space' → logprob: -8.567715644836426
    7. ')' → logprob: -9.442715644836426
    8. 'space' → logprob: -9.817715644836426
    9. ' ' → logprob: -9.942715644836426
    10. ' '' → logprob: -10.317715644836426

Token 551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010247035970678553
    2. ' ' → logprob: -9.250102043151855
    3. '0' → logprob: -12.250102043151855
    4. 'floor' → logprob: -14.500102043151855
    5. '
' → logprob: -14.750102043151855
    6. '```' → logprob: -15.375102043151855
    7. '   ' → logprob: -15.875102043151855
    8. 'side' → logprob: -15.875102043151855
    9. ' floor' → logprob: -16.125102996826172
    10. '`' → logprob: -17.437602996826172

Token 552: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07770480960607529
    2. ',' → logprob: -2.827704906463623
    3. '
' → logprob: -4.577704906463623
    4. ',
' → logprob: -5.827704906463623
    5. '        
' → logprob: -6.827704906463623
    6. '   ' → logprob: -8.327704429626465
    7. '```' → logprob: -8.327704429626465
    8. 'queue' → logprob: -8.577704429626465
    9. 'distance' → logprob: -9.327704429626465
    10. 'from' → logprob: -9.952704429626465

Token 553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006456716917455196
    2. ',' → logprob: -6.0064568519592285
    3. '
' → logprob: -6.2564568519592285
    4. '   ' → logprob: -7.5064568519592285
    5. 'from' → logprob: -7.5064568519592285
    6. 'queue' → logprob: -7.6314568519592285
    7. '        
' → logprob: -9.00645637512207
    8. ',
' → logprob: -9.13145637512207
    9. ' from' → logprob: -10.13145637512207
    10. '```' → logprob: -10.50645637512207

Token 554: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018855251371860504
    2. 'from' → logprob: -4.893855094909668
    3. 'queue' → logprob: -6.018855094909668
    4. 'dist' → logprob: -6.143855094909668
    5. '
' → logprob: -6.268855094909668
    6. '   ' → logprob: -6.393855094909668
    7. 'visited' → logprob: -6.393855094909668
    8. ',' → logprob: -8.018855094909668
    9. ' from' → logprob: -8.268855094909668
    10. 'import' → logprob: -9.143855094909668

Token 555: ' start' (ID: 1604)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6392412185668945
    2. 'dist' → logprob: -1.1392412185668945
    3. 'from' → logprob: -2.5142412185668945
    4. 'dp' → logprob: -3.3892412185668945
    5. '       ' → logprob: -4.5142412185668945
    6. 'max' → logprob: -5.1392412185668945
    7. 'queue' → logprob: -5.2642412185668945
    8. '   ' → logprob: -5.5142412185668945
    9. 'q' → logprob: -6.2642412185668945
    10. 'for' → logprob: -6.3892412185668945

Token 556: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5188812017440796
    2. '_side' → logprob: -1.0188812017440796
    3. '_state' → logprob: -4.143881320953369
    4. '_pos' → logprob: -4.768881320953369
    5. '_floor' → logprob: -5.018881320953369
    6. 'side' → logprob: -5.018881320953369
    7. '=' → logprob: -6.518881320953369
    8. 'pos' → logprob: -6.893881320953369
    9. ',' → logprob: -6.893881320953369
    10. 'state' → logprob: -7.518881320953369

Token 557: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3083055317401886
    2. '0' → logprob: -1.6833055019378662
    3. ' (' → logprob: -2.558305501937866
    4. ' ' → logprob: -6.683305740356445
    5. '1' → logprob: -7.683305740356445
    6. 'side' → logprob: -9.683305740356445
    7. '[' → logprob: -9.683305740356445
    8. 'floor' → logprob: -9.808305740356445
    9. ')' → logprob: -9.933305740356445
    10. '   ' → logprob: -10.308305740356445

Token 558: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024075270630419254
    2. '1' → logprob: -6.502407550811768
    3. ' ' → logprob: -7.252407550811768
    4. '(' → logprob: -9.00240707397461
    5. ',' → logprob: -10.50240707397461
    6. ' (' → logprob: -11.00240707397461
    7. 'side' → logprob: -11.12740707397461
    8. ')' → logprob: -12.00240707397461
    9. '   ' → logprob: -12.62740707397461
    10. ' side' → logprob: -13.68990707397461

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024132427643053234
    2. ' ,' → logprob: -8.50024127960205
    3. '0' → logprob: -10.37524127960205
    4. ',
' → logprob: -12.62524127960205
    5. ')' → logprob: -13.62524127960205
    6. '<|end|>' → logprob: -14.62524127960205
    7. ',n' → logprob: -15.75024127960205
    8. ',int' → logprob: -15.87524127960205
    9. '),' → logprob: -15.87524127960205
    10. '
' → logprob: -16.000242233276367

Token 560: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015267637791112065
    2. ' ' → logprob: -6.501526832580566
    3. 'n' → logprob: -10.876526832580566
    4. ')' → logprob: -13.251526832580566
    5. ' n' → logprob: -13.876526832580566
    6. '   ' → logprob: -13.876526832580566
    7. '1' → logprob: -14.626526832580566
    8. ',' → logprob: -15.314026832580566
    9. '
' → logprob: -15.376526832580566
    10. '  ' → logprob: -15.689026832580566

Token 561: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00678228447213769
    2. ')
' → logprob: -5.006782054901123
    3. ' )' → logprob: -10.506782531738281
    4. ',' → logprob: -11.256782531738281
    5. '),' → logprob: -11.256782531738281
    6. ')
' → logprob: -12.381782531738281
    7. '       ' → logprob: -12.631782531738281
    8. ')

' → logprob: -13.381782531738281
    9. '0' → logprob: -13.756782531738281
    10. '   ' → logprob: -14.256782531738281

Token 562: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39550158381462097
    2. '
' → logprob: -1.2705016136169434
    3. '   ' → logprob: -3.6455016136169434
    4. ',' → logprob: -4.770501613616943
    5. 'queue' → logprob: -4.770501613616943
    6. 'import' → logprob: -7.395501613616943
    7. ' queue' → logprob: -7.770501613616943
    8. ',
' → logprob: -8.145501136779785
    9. '        
' → logprob: -8.270501136779785
    10. 'q' → logprob: -8.395501136779785

Token 563: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5926721096038818
    2. '(' → logprob: -0.8426721096038818
    3. '1' → logprob: -4.592672348022461
    4. '0' → logprob: -5.342672348022461
    5. ' ' → logprob: -6.717672348022461
    6. ',' → logprob: -8.717672348022461
    7. '   ' → logprob: -9.217672348022461
    8. '
' → logprob: -9.842672348022461
    9. '       ' → logprob: -9.842672348022461
    10. '\n' → logprob: -10.217672348022461

Token 564: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0705697238445282
    2. '0' → logprob: -3.3205697536468506
    3. ' ' → logprob: -3.4455697536468506
    4. ',' → logprob: -9.57056999206543
    5. ')' → logprob: -10.82056999206543
    6. '(' → logprob: -11.82056999206543
    7. ' (' → logprob: -12.19556999206543
    8. '   ' → logprob: -12.69556999206543
    9. '
' → logprob: -12.82056999206543
    10. ' ,' → logprob: -14.13306999206543

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.869639476761222e-05
    2. ' ,' → logprob: -10.875039100646973
    3. '0' → logprob: -11.000039100646973
    4. ')' → logprob: -13.625039100646973
    5. ',
' → logprob: -13.625039100646973
    6. '<|end|>' → logprob: -16.250038146972656
    7. '   ' → logprob: -16.750038146972656
    8. '	' → logprob: -16.875038146972656
    9. '
' → logprob: -17.000038146972656
    10. ' ' → logprob: -17.250038146972656

Token 566: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '1' → logprob: -15.375032424926758
    4. '
' → logprob: -15.750032424926758
    5. ',' → logprob: -16.312532424926758
    6. '```' → logprob: -16.500032424926758
    7. '   ' → logprob: -17.062532424926758
    8. ')' → logprob: -17.250032424926758
    9. '<|end|>' → logprob: -17.437532424926758
    10. '(' → logprob: -18.125032424926758

Token 567: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008764656260609627
    2. ')
' → logprob: -4.758764743804932
    3. '       ' → logprob: -9.758764266967773
    4. '),' → logprob: -11.008764266967773
    5. ')
' → logprob: -11.133764266967773
    6. ',' → logprob: -11.258764266967773
    7. ' )' → logprob: -11.258764266967773
    8. '):
' → logprob: -11.383764266967773
    9. ')

' → logprob: -12.383764266967773
    10. '):' → logprob: -12.508764266967773

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018918761983513832
    2. '
' → logprob: -4.143918991088867
    3. '   ' → logprob: -6.768918991088867
    4. 'queue' → logprob: -7.518918991088867
    5. '        
' → logprob: -7.893918991088867
    6. ',' → logprob: -8.143918991088867
    7. '```' → logprob: -8.518918991088867
    8. 'from' → logprob: -9.643918991088867
    9. '
' → logprob: -10.393918991088867
    10. ',
' → logprob: -10.393918991088867

Token 569: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006817431654781103
    2. 'from' → logprob: -5.88181734085083
    3. 'queue' → logprob: -6.25681734085083
    4. '   ' → logprob: -7.63181734085083
    5. 'visited' → logprob: -8.006817817687988
    6. '```' → logprob: -8.381817817687988
    7. ',' → logprob: -8.506817817687988
    8. '
' → logprob: -8.506817817687988
    9. '        
' → logprob: -8.631817817687988
    10. 'q' → logprob: -9.381817817687988

Token 570: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7785694003105164
    2. 'from' → logprob: -1.6535694599151611
    3. 'dist' → logprob: -2.028569459915161
    4. 'queue' → logprob: -2.403569459915161
    5. 'visited' → logprob: -2.903569459915161
    6. 'dp' → logprob: -3.403569459915161
    7. '   ' → logprob: -3.778569459915161
    8. 'q' → logprob: -5.153569221496582
    9. 'steps' → logprob: -6.528569221496582
    10. 'import' → logprob: -6.528569221496582

Token 571: ' jump' (ID: 13843)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -1.0211248397827148
    2. ' jump' → logprob: -1.6461248397827148
    3. ' move' → logprob: -1.8961248397827148
    4. ' switch' → logprob: -2.646124839782715
    5. 'side' → logprob: -3.146124839782715
    6. 'switch' → logprob: -3.271124839782715
    7. 'jump' → logprob: -3.271124839782715
    8. ' stay' → logprob: -3.396124839782715
    9. ' change' → logprob: -4.146124839782715
    10. 'change' → logprob: -4.896124839782715

Token 572: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3521625995635986
    2. '(' → logprob: -1.8521625995635986
    3. '   ' → logprob: -1.9771625995635986
    4. ' (' → logprob: -2.2271625995635986
    5. ' from' → logprob: -2.4771625995635986
    6. ' ' → logprob: -2.8521625995635986
    7. '    ' → logprob: -3.4771625995635986
    8. ' =' → logprob: -3.4771625995635986
    9. ' to' → logprob: -4.1021623611450195
    10. ',' → logprob: -4.2271623611450195

Token 573: ' other' (ID: 1273)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1845230609178543
    2. '(side' → logprob: -3.059523105621338
    3. 'other' → logprob: -3.309523105621338
    4. 'side' → logprob: -3.559523105621338
    5. 'the' → logprob: -4.184523105621338
    6. ' (' → logprob: -4.559523105621338
    7. 'both' → logprob: -4.559523105621338
    8. '0' → logprob: -5.434523105621338
    9. 'next' → logprob: -5.684523105621338
    10. '(s' → logprob: -6.309523105621338

Token 574: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.22951219975948334
    2. ' side' → logprob: -1.6045122146606445
    3. '_side' → logprob: -5.9795122146606445
    4. ')' → logprob: -8.104512214660645
    5. '	side' → logprob: -8.604512214660645
    6. '.side' → logprob: -8.854512214660645
    7. '(side' → logprob: -9.104512214660645
    8. '   ' → logprob: -9.229512214660645
    9. '-side' → logprob: -9.354512214660645
    10. ' ' → logprob: -9.354512214660645

Token 575: ' floor' (ID: 8350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03163948655128479
    2. '
' → logprob: -4.156639575958252
    3. '        
' → logprob: -4.906639575958252
    4. ',' → logprob: -6.031639575958252
    5. '   ' → logprob: -7.031639575958252
    6. '	' → logprob: -7.656639575958252
    7. '\n' → logprob: -7.906639575958252
    8. ' at' → logprob: -8.156639099121094
    9. ' from' → logprob: -8.281639099121094
    10. '\' → logprob: -8.281639099121094

Token 576: ' f' (ID: 285)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039801739156246185
    2. '        
' → logprob: -4.039801597595215
    3. '
' → logprob: -4.914801597595215
    4. '   ' → logprob: -6.164801597595215
    5. ',' → logprob: -6.414801597595215
    6. '\n' → logprob: -6.414801597595215
    7. '	' → logprob: -6.664801597595215
    8. '\t' → logprob: -6.914801597595215
    9. '\' → logprob: -7.289801597595215
    10. ' 
' → logprob: -7.414801597595215

Token 577: ',f' (ID: 38733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01461119670420885
    2. ',' → logprob: -6.01461124420166
    3. '	' → logprob: -6.63961124420166
    4. ' for' → logprob: -6.63961124420166
    5. ' at' → logprob: -6.76461124420166
    6. 'from' → logprob: -6.88961124420166
    7. ' (' → logprob: -7.01461124420166
    8. '<|end|>' → logprob: -7.26461124420166
    9. 'for' → logprob: -7.51461124420166
    10. '   ' → logprob: -7.76461124420166

Token 578: '+' (ID: 10)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8189902901649475
    2. '0' → logprob: -1.9439902305603027
    3. '<|end|>' → logprob: -2.4439902305603027
    4. '
' → logprob: -2.6939902305603027
    5. '   ' → logprob: -2.8189902305603027
    6. '+' → logprob: -3.1939902305603027
    7. ')' → logprob: -3.1939902305603027
    8. 'from' → logprob: -3.6939902305603027
    9. '(f' → logprob: -4.443990230560303
    10. ' or' → logprob: -4.568990230560303

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015383612480945885
    2. '0' → logprob: -8.875153541564941
    3. ' ' → logprob: -11.625153541564941
    4. '2' → logprob: -13.750153541564941
    5. 'f' → logprob: -13.875153541564941
    6. '+' → logprob: -14.125153541564941
    7. '
' → logprob: -14.250153541564941
    8. '   ' → logprob: -14.375153541564941
    9. '```' → logprob: -15.750153541564941
    10. '	' → logprob: -16.000154495239258

Token 580: ',f' (ID: 38733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010061351349577308
    2. '(' → logprob: -9.001006126403809
    3. ',' → logprob: -9.251006126403809
    4. '           ' → logprob: -9.376006126403809
    5. '   ' → logprob: -9.376006126403809
    6. '        
' → logprob: -9.626006126403809
    7. '\t' → logprob: -9.751006126403809
    8. ' for' → logprob: -9.751006126403809
    9. 'for' → logprob: -10.001006126403809
    10. '0' → logprob: -10.126006126403809

Token 581: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8898375034332275
    2. '+' → logprob: -1.0148375034332275
    3. '<|end|>' → logprob: -2.3898375034332275
    4. ',f' → logprob: -3.3898375034332275
    5. '	' → logprob: -4.014837265014648
    6. '0' → logprob: -4.139837265014648
    7. '<|end|>' → logprob: -4.764837265014648
    8. ' or' → logprob: -5.014837265014648
    9. '1' → logprob: -5.139837265014648
    10. ' ,' → logprob: -5.264837265014648

Token 582: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22053590416908264
    2. '1' → logprob: -1.7205358743667603
    3. '0' → logprob: -3.97053599357605
    4. 'f' → logprob: -10.470536231994629
    5. '```' → logprob: -11.470536231994629
    6. ',' → logprob: -12.095536231994629
    7. '+' → logprob: -12.095536231994629
    8. ')' → logprob: -12.345536231994629
    9. '
' → logprob: -12.470536231994629
    10. '3' → logprob: -12.720536231994629

Token 583: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002351026516407728
    2. '   ' → logprob: -7.377350807189941
    3. '        
' → logprob: -7.377350807189941
    4. '
' → logprob: -8.002350807189941
    5. '           ' → logprob: -8.127350807189941
    6. '\n' → logprob: -9.502350807189941
    7. '	' → logprob: -9.502350807189941
    8. '    
' → logprob: -10.252350807189941
    9. '               ' → logprob: -10.377350807189941
    10. '        ' → logprob: -10.502350807189941

Token 584: ' valid' (ID: 4529)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.42226913571357727
    2. 'floor' → logprob: -1.4222691059112549
    3. 'abs' → logprob: -3.172269105911255
    4. ' f' → logprob: -3.547269105911255
    5. ' floor' → logprob: -4.172269344329834
    6. ' abs' → logprob: -4.922269344329834
    7. '0' → logprob: -5.172269344329834
    8. '(f' → logprob: -6.672269344329834
    9. ' ' → logprob: -7.172269344329834
    10. 'flo' → logprob: -7.422269344329834

Token 585: ' floor' (ID: 8350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06211041659116745
    2. '
' → logprob: -3.437110424041748
    3. '        
' → logprob: -3.687110424041748
    4. 'for' → logprob: -7.437110424041748
    5. ' for' → logprob: -7.687110424041748
    6. '           ' → logprob: -7.937110424041748
    7. '  
' → logprob: -8.43710994720459
    8. '\n' → logprob: -8.68710994720459
    9. ',' → logprob: -8.81210994720459
    10. '   ' → logprob: -8.93710994720459

Token 586: '<n' (ID: 33872)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029055273160338402
    2. '
' → logprob: -3.65405535697937
    3. '        
' → logprob: -6.529055118560791
    4. '   ' → logprob: -8.15405559539795
    5. 'def' → logprob: -8.40405559539795
    6. '           ' → logprob: -9.15405559539795
    7. ',' → logprob: -9.27905559539795
    8. ' for' → logprob: -9.40405559539795
    9. '    
' → logprob: -9.65405559539795
    10. '<|end|>' → logprob: -9.77905559539795

Token 587: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03454817458987236
    2. '
' → logprob: -3.409548282623291
    3. '        
' → logprob: -7.659548282623291
    4. ',' → logprob: -8.659547805786133
    5. '<|end|>' → logprob: -8.909547805786133
    6. '           ' → logprob: -10.909547805786133
    7. '   ' → logprob: -11.159547805786133
    8. 'for' → logprob: -11.659547805786133
    9. '```' → logprob: -11.659547805786133
    10. '<|end|>' → logprob: -11.784547805786133

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036216014996171
    2. '
' → logprob: -8.125362396240234
    3. '        
' → logprob: -10.125362396240234
    4. 'for' → logprob: -11.500362396240234
    5. '   ' → logprob: -12.375362396240234
    6. '           ' → logprob: -12.750362396240234
    7. '```' → logprob: -13.000362396240234
    8. ',' → logprob: -13.000362396240234
    9. 'import' → logprob: -13.750362396240234
    10. 'from' → logprob: -14.500362396240234

Token 589: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005252018105238676
    2. '
' → logprob: -6.380251884460449
    3. '        
' → logprob: -6.505251884460449
    4. ' for' → logprob: -6.755251884460449
    5. 'for' → logprob: -7.380251884460449
    6. '           ' → logprob: -9.38025188446045
    7. '   ' → logprob: -10.13025188446045
    8. ',' → logprob: -10.75525188446045
    9. '	' → logprob: -11.50525188446045
    10. '    
' → logprob: -11.50525188446045

Token 590: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18128031492233276
    2. 'visited' → logprob: -2.5562803745269775
    3. 'from' → logprob: -3.8062803745269775
    4. 'dist' → logprob: -3.8062803745269775
    5. 'queue' → logprob: -3.9312803745269775
    6. '   ' → logprob: -4.056280136108398
    7. 'for' → logprob: -5.931280136108398
    8. 'distance' → logprob: -6.806280136108398
    9. 'dp' → logprob: -6.931280136108398
    10. 'q' → logprob: -7.431280136108398

Token 591: ' jump' (ID: 13843)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.011444123461842537
    2. 'jump' → logprob: -4.761444091796875
    3. ' landing' → logprob: -6.636444091796875
    4. '
' → logprob: -8.511444091796875
    5. 'land' → logprob: -8.636444091796875
    6. 'wall' → logprob: -8.761444091796875
    7. 'moving' → logprob: -8.761444091796875
    8. 'def' → logprob: -8.886444091796875
    9. 'next' → logprob: -9.511444091796875
    10. 'lad' → logprob: -9.511444091796875

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19178642332553864
    2. '       ' → logprob: -2.191786527633667
    3. 'landing' → logprob: -3.941786527633667
    4. '           ' → logprob: -4.816786289215088
    5. ' landing' → logprob: -4.941786289215088
    6. ':
' → logprob: -5.316786289215088
    7. ':' → logprob: -5.691786289215088
    8. 'def' → logprob: -5.941786289215088
    9. 'to' → logprob: -6.066786289215088
    10. ' ,' → logprob: -6.316786289215088

Token 593: ' apply' (ID: 6096)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5986343622207642
    2. 'land' → logprob: -1.4736343622207642
    3. 'landing' → logprob: -3.0986342430114746
    4. 'side' → logprob: -3.2236342430114746
    5. 'for' → logprob: -3.7236342430114746
    6. '       ' → logprob: -3.7236342430114746
    7. 'floor' → logprob: -3.7236342430114746
    8. '   ' → logprob: -4.348634243011475
    9. 'pos' → logprob: -4.348634243011475
    10. 'current' → logprob: -5.098634243011475

Token 594: ' wall' (ID: 9688)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3132764399051666
    2. ' next' → logprob: -1.3132764101028442
    3. '(next' → logprob: -12.313276290893555
    4. '[next' → logprob: -12.813276290893555
    5. '
' → logprob: -13.313276290893555
    6. '   ' → logprob: -13.438276290893555
    7. '	next' → logprob: -14.063276290893555
    8. '           ' → logprob: -14.188276290893555
    9. ' ' → logprob: -14.563276290893555
    10. '\n' → logprob: -14.813276290893555

Token 595: ' effect' (ID: 3159)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06393282860517502
    2. '
' → logprob: -2.8139328956604004
    3. '        
' → logprob: -7.4389328956604
    4. 'queue' → logprob: -7.8139328956604
    5. 'for' → logprob: -8.313932418823242
    6. '   ' → logprob: -8.313932418823242
    7. 'def' → logprob: -9.563932418823242
    8. ' for' → logprob: -9.938932418823242
    9. 'visited' → logprob: -10.063932418823242
    10. '           ' → logprob: -10.188932418823242

Token 596: ' next' (ID: 2613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030452614650130272
    2. '
' → logprob: -3.5304527282714844
    3. '        
' → logprob: -7.405452728271484
    4. '```' → logprob: -10.655452728271484
    5. '<|end|>' → logprob: -11.280452728271484
    6. ',' → logprob: -11.530452728271484
    7. 'for' → logprob: -11.655452728271484
    8. '           ' → logprob: -12.030452728271484
    9. '   ' → logprob: -12.655452728271484
    10. '
' → logprob: -12.780452728271484

Token 597: '_floor' (ID: 152330)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21016906201839447
    2. '
' → logprob: -1.7101690769195557
    3. '        
' → logprob: -4.960168838500977
    4. '```' → logprob: -8.335168838500977
    5. '   ' → logprob: -8.585168838500977
    6. ',' → logprob: -8.835168838500977
    7. 'for' → logprob: -9.085168838500977
    8. '\n' → logprob: -9.210168838500977
    9. '    
' → logprob: -9.585168838500977
    10. '  
' → logprob: -9.710168838500977

Token 598: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03530978038907051
    2. '
' → logprob: -3.4103097915649414
    3. '        
' → logprob: -7.785309791564941
    4. '   ' → logprob: -8.160309791564941
    5. '\n' → logprob: -8.785309791564941
    6. ',' → logprob: -9.410309791564941
    7. 'import' → logprob: -9.660309791564941
    8. 'from' → logprob: -9.785309791564941
    9. 'visited' → logprob: -9.785309791564941
    10. 'for' → logprob: -9.785309791564941

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004099296871572733
    2. '
' → logprob: -5.629099369049072
    3. '        
' → logprob: -8.754098892211914
    4. 'queue' → logprob: -8.879098892211914
    5. 'from' → logprob: -9.004098892211914
    6. '   ' → logprob: -10.254098892211914
    7. 'import' → logprob: -10.879098892211914
    8. 'visited' → logprob: -11.254098892211914
    9. '    
' → logprob: -13.129098892211914
    10. 'def' → logprob: -13.129098892211914

Token 600: ' q' (ID: 2335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1713843047618866
    2. 'from' → logprob: -2.046384334564209
    3. 'visited' → logprob: -4.421384334564209
    4. 'queue' → logprob: -4.671384334564209
    5. '   ' → logprob: -5.796384334564209
    6. '
' → logprob: -6.421384334564209
    7. 'dist' → logprob: -7.296384334564209
    8. ' from' → logprob: -7.796384334564209
    9. 'q' (adapté à ' q') → logprob: -8.17138385772705
    10. 'import' → logprob: -8.42138385772705

Token 601: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1824127584695816
    2. '=' → logprob: -1.8074127435684204
    3. 'ue' → logprob: -6.182412624359131
    4. '.' → logprob: -7.807412624359131
    5. '.append' → logprob: -9.057413101196289
    6. ' .' → logprob: -10.682413101196289
    7. '   ' → logprob: -11.807413101196289
    8. '.enqueue' → logprob: -11.807413101196289
    9. 'u' → logprob: -11.932413101196289
    10. '.add' → logprob: -12.307413101196289

Token 602: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0007099286303855479
    2. ' deque' → logprob: -7.2507100105285645
    3. 'Deque' → logprob: -19.000709533691406
    4. '```' → logprob: -20.250709533691406
    5. 'de' → logprob: -20.625709533691406
    6. 'collections' → logprob: -20.750709533691406
    7. 'queue' → logprob: -22.125709533691406
    8. '	de' → logprob: -23.000709533691406
    9. 'dq' → logprob: -23.375709533691406
    10. '   ' → logprob: -23.375709533691406

Token 603: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020631931722164154
    2. '([(' → logprob: -4.520631790161133
    3. '([]' → logprob: -5.145631790161133
    4. '(' → logprob: -5.895631790161133
    5. '([' → logprob: -7.020631790161133
    6. '[(' → logprob: -10.770631790161133
    7. '([
' → logprob: -11.270631790161133
    8. '[]' → logprob: -11.645631790161133
    9. '((' → logprob: -12.145631790161133
    10. '()
' → logprob: -12.395631790161133

Token 604: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03723577409982681
    2. ' q' → logprob: -3.662235736846924
    3. '   ' → logprob: -4.912235736846924
    4. '	q' → logprob: -6.037235736846924
    5. '(' → logprob: -7.037235736846924
    6. '(q' → logprob: -9.162236213684082
    7. ' (' → logprob: -9.412236213684082
    8. '       ' → logprob: -10.412236213684082
    9. '[(' → logprob: -11.787236213684082
    10. ',q' → logprob: -12.287236213684082

Token 605: ' visited' (ID: 18416)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005542277824133635
    2. ' q' → logprob: -5.255542278289795
    3. '(' → logprob: -8.505541801452637
    4. '       ' → logprob: -9.880541801452637
    5. '   ' → logprob: -10.630541801452637
    6. '
' → logprob: -11.255541801452637
    7. ' (' → logprob: -11.755541801452637
    8. 'visited' (adapté à ' visited') → logprob: -12.880541801452637
    9. '0' → logprob: -13.130541801452637
    10. '	q' → logprob: -13.255541801452637

Token 606: '=[[' (ID: 112637)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09204792231321335
    2. ' =' → logprob: -2.467047929763794
    3. '=set' → logprob: -6.217047691345215
    4. '.add' → logprob: -7.092047691345215
    5. '[' → logprob: -8.967047691345215
    6. '={(' → logprob: -9.592047691345215
    7. '=[[' → logprob: -10.717047691345215
    8. '[(' → logprob: -10.842047691345215
    9. '```' → logprob: -11.967047691345215
    10. '=[' → logprob: -12.217047691345215

Token 607: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.45848218582978e-06
    2. ' False' → logprob: -13.00000286102295
    3. '(False' → logprob: -16.750001907348633
    4. '0' → logprob: -17.750001907348633
    5. '[' → logprob: -18.625001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '=False' → logprob: -20.500001907348633
    8. 'false' → logprob: -23.250001907348633
    9. '2' → logprob: -23.750001907348633
    10. '.False' → logprob: -23.875001907348633

Token 608: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5847157835960388
    2. ' for' → logprob: -1.7097158432006836
    3. ']' → logprob: -2.2097158432006836
    4. ']*' → logprob: -2.7097158432006836
    5. ',[' → logprob: -2.9597158432006836
    6. 'for' → logprob: -3.8347158432006836
    7. '][' → logprob: -4.959715843200684
    8. '[' → logprob: -5.584715843200684
    9. '],[' → logprob: -7.584715843200684
    10. '   ' → logprob: -7.959715843200684

Token 609: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10111135989427567
    2. '(n' → logprob: -2.35111141204834
    3. ' (' → logprob: -7.35111141204834
    4. '(' → logprob: -8.72611141204834
    5. ' n' → logprob: -10.35111141204834
    6. '   ' → logprob: -10.97611141204834
    7. '100' → logprob: -11.85111141204834
    8. '(max' → logprob: -11.97611141204834
    9. '101' → logprob: -12.35111141204834
    10. '2' → logprob: -12.47611141204834

Token 610: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.013233877718448639
    2. 'for' → logprob: -4.388233661651611
    3. ',[' → logprob: -7.888233661651611
    4. ',' → logprob: -8.63823413848877
    5. '[' → logprob: -9.01323413848877
    6. ']' → logprob: -11.01323413848877
    7. '	for' → logprob: -11.51323413848877
    8. '       ' → logprob: -11.88823413848877
    9. ' ,[' → logprob: -12.63823413848877
    10. '   ' → logprob: -12.88823413848877

Token 611: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3057718575000763
    2. ' range' → logprob: -1.555771827697754
    3. 'range' → logprob: -3.055771827697754
    4. ' _' → logprob: -5.805771827697754
    5. ' in' → logprob: -6.805771827697754
    6. 'in' → logprob: -7.555771827697754
    7. '_range' → logprob: -7.680771827697754
    8. '_=' → logprob: -8.680771827697754
    9. '_in' → logprob: -10.305771827697754
    10. '(range' → logprob: -11.930771827697754

Token 612: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10026974976062775
    2. ' range' → logprob: -2.3502697944641113
    3. '(range' → logprob: -10.600269317626953
    4. '_' → logprob: -11.225269317626953
    5. '[' → logprob: -11.600269317626953
    6. '(' → logprob: -11.850269317626953
    7. '_range' → logprob: -11.975269317626953
    8. '	range' → logprob: -13.600269317626953
    9. '.range' → logprob: -15.600269317626953
    10. '2' → logprob: -15.600269317626953

Token 613: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.022457469254732132
    2. ' range' → logprob: -4.022457599639893
    3. '2' → logprob: -5.522457599639893
    4. '(' → logprob: -8.647457122802734
    5. '[' → logprob: -9.022457122802734
    6. '(range' → logprob: -12.272457122802734
    7. '   ' → logprob: -14.522457122802734
    8. ' ' → logprob: -14.897457122802734
    9. '
' → logprob: -16.647457122802734
    10. ' (' → logprob: -16.772457122802734

Token 614: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '(' → logprob: -15.000001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '       ' → logprob: -21.875001907348633
    6. '```' → logprob: -22.500001907348633
    7. '=' → logprob: -23.000001907348633
    8. '
' → logprob: -23.250001907348633
    9. ' (' → logprob: -23.625001907348633
    10. ')' → logprob: -24.250001907348633

Token 615: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.25
    4. '       ' → logprob: -19.75
    5. 'n' → logprob: -19.875
    6. ')' → logprob: -19.875
    7. '
' → logprob: -19.875
    8. '```' → logprob: -20.375
    9. '           ' → logprob: -20.875
    10. '     ' → logprob: -20.875

Token 616: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.030705014243721962
    2. ']' → logprob: -3.530704975128174
    3. ')]
' → logprob: -7.155704975128174
    4. ']
' → logprob: -9.405705451965332
    5. ']]' → logprob: -10.280705451965332
    6. ')' → logprob: -10.655705451965332
    7. ' ]' → logprob: -12.155705451965332
    8. ')],' → logprob: -12.280705451965332
    9. ')][' → logprob: -12.280705451965332
    10. ')]

' → logprob: -12.655705451965332

Token 617: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8611133694648743
    2. '	q' → logprob: -0.8611133694648743
    3. '   ' → logprob: -2.3611133098602295
    4. '
' → logprob: -3.6111133098602295
    5. '       ' → logprob: -3.7361133098602295
    6. '<|end|>' → logprob: -5.986113548278809
    7. ' q' → logprob: -6.111113548278809
    8. '[q' → logprob: -6.861113548278809
    9. '    
' → logprob: -7.236113548278809
    10. '        
' → logprob: -7.361113548278809

Token 618: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0010056582977995276
    2. '
' → logprob: -7.37600564956665
    3. '	q' → logprob: -8.876006126403809
    4. '   ' → logprob: -9.376006126403809
    5. ' q' → logprob: -9.751006126403809
    6. 'for' → logprob: -10.501006126403809
    7. '        
' → logprob: -11.376006126403809
    8. '```' → logprob: -11.376006126403809
    9. '       ' → logprob: -11.501006126403809
    10. '    
' → logprob: -11.626006126403809

Token 619: ' start' (ID: 1604)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0061450498178601265
    2. 'for' → logprob: -5.131145000457764
    3. '   ' → logprob: -9.381145477294922
    4. '       ' → logprob: -9.631145477294922
    5. ' q' → logprob: -11.006145477294922
    6. '
' → logprob: -11.006145477294922
    7. '#' → logprob: -11.881145477294922
    8. ' for' → logprob: -12.131145477294922
    9. 'visited' → logprob: -12.131145477294922
    10. 'if' → logprob: -12.506145477294922

Token 620: ' positions' (ID: 15897)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.787736177444458
    2. '.append' → logprob: -0.787736177444458
    3. '(' → logprob: -3.287736177444458
    4. '       ' → logprob: -4.537735939025879
    5. '(q' → logprob: -4.662735939025879
    6. ' =' → logprob: -5.037735939025879
    7. '
' → logprob: -5.162735939025879
    8. '=' → logprob: -5.537735939025879
    9. ',q' → logprob: -5.912735939025879
    10. ' q' → logprob: -6.037735939025879

Token 621: '
' (ID: 198)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005877598654478788
    2. '
' → logprob: -6.130877494812012
    3. '       ' → logprob: -6.380877494812012
    4. '   ' → logprob: -7.380877494812012
    5. 'for' → logprob: -7.380877494812012
    6. ' q' → logprob: -7.755877494812012
    7. '(' → logprob: -9.130877494812012
    8. ' for' → logprob: -9.255877494812012
    9. ' =' → logprob: -11.130877494812012
    10. '        
' → logprob: -11.255877494812012

Token 622: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008714557625353336
    2. '(' → logprob: -5.63371467590332
    3. ' q' → logprob: -5.63371467590332
    4. '   ' → logprob: -7.88371467590332
    5. 'for' → logprob: -7.88371467590332
    6. '
' → logprob: -8.50871467590332
    7. ' (' → logprob: -8.88371467590332
    8. ' for' → logprob: -8.88371467590332
    9. '       ' → logprob: -9.25871467590332
    10. ' =' → logprob: -9.38371467590332

Token 623: ' for' (ID: 395)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0006813380168750882
    2. ' q' → logprob: -8.000680923461914
    3. 'for' (adapté à ' for') → logprob: -8.250680923461914
    4. '   ' → logprob: -9.625680923461914
    5. '
' → logprob: -11.375680923461914
    6. ' for' → logprob: -12.375680923461914
    7. '       ' → logprob: -13.750680923461914
    8. '	q' → logprob: -13.875680923461914
    9. '(' → logprob: -14.875680923461914
    10. '(q' → logprob: -15.125680923461914

Token 624: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.055906038731336594
    2. ' side' → logprob: -3.180906057357788
    3. 'start' → logprob: -4.680905818939209
    4. ' start' → logprob: -6.305905818939209
    5. 's' → logprob: -7.430905818939209
    6. 'i' → logprob: -7.680905818939209
    7. 'floor' → logprob: -7.930905818939209
    8. ' s' → logprob: -9.055906295776367
    9. ' i' → logprob: -10.055906295776367
    10. 'pos' → logprob: -10.055906295776367

Token 625: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2265573889017105
    2. 'in' → logprob: -1.6015573740005493
    3. ',' → logprob: -7.47655725479126
    4. ' ' → logprob: -7.72655725479126
    5. ' ,' → logprob: -9.476557731628418
    6. '	in' → logprob: -10.476557731628418
    7. ')' → logprob: -11.726557731628418
    8. '=' → logprob: -12.351557731628418
    9. '<|end|>' → logprob: -12.476557731628418
    10. '0' → logprob: -12.851557731628418

Token 626: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7066605091094971
    2. ' range' → logprob: -0.9566605091094971
    3. '[' → logprob: -2.206660509109497
    4. '(' → logprob: -4.456660270690918
    5. '0' → logprob: -7.331660270690918
    6. ' [' → logprob: -8.706660270690918
    7. ' (' → logprob: -10.581660270690918
    8. '(range' → logprob: -11.206660270690918
    9. ' ' → logprob: -11.581660270690918
    10. '   ' → logprob: -15.456660270690918

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. ')' → logprob: -17.875003814697266
    4. '(' → logprob: -18.500003814697266
    5. ',' → logprob: -18.625003814697266
    6. '[' → logprob: -19.500003814697266
    7. '
' → logprob: -19.625003814697266
    8. 'range' → logprob: -20.250003814697266
    9. '   ' → logprob: -20.500003814697266
    10. ' range' → logprob: -20.750003814697266

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016074994346126914
    2. ' ,' → logprob: -8.750161170959473
    3. ',
' → logprob: -13.125161170959473
    4. '0' → logprob: -16.250160217285156
    5. ',

' → logprob: -17.750160217285156
    6. '‌,' → logprob: -17.875160217285156
    7. '

' → logprob: -18.750160217285156
    8. '1' → logprob: -18.750160217285156
    9. '   ' → logprob: -18.750160217285156
    10. ' ' → logprob: -19.000160217285156

Token 629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032354547875002027
    2. ' ' → logprob: -8.250323295593262
    3. '0' → logprob: -9.750323295593262
    4. ')' → logprob: -13.250323295593262
    5. '
' → logprob: -13.625323295593262
    6. '   ' → logprob: -14.500323295593262
    7. ',' → logprob: -15.250323295593262
    8. '  ' → logprob: -17.125324249267578
    9. ' 
' → logprob: -17.750324249267578
    10. '    ' → logprob: -17.875324249267578

Token 630: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05495844781398773
    2. '):' → logprob: -2.9299583435058594
    3. '):
' → logprob: -10.42995834350586
    4. ',' → logprob: -10.55495834350586
    5. '   ' → logprob: -11.92995834350586
    6. ':' → logprob: -12.30495834350586
    7. ':
' → logprob: -12.92995834350586
    8. '       ' → logprob: -13.05495834350586
    9. ' ):
' → logprob: -13.05495834350586
    10. '):

' → logprob: -13.67995834350586

Token 631: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012478458695113659
    2. '   ' → logprob: -4.762478351593018
    3. ' if' → logprob: -6.512478351593018
    4. '           ' → logprob: -6.762478351593018
    5. '	   ' → logprob: -8.762478828430176
    6. ' q' → logprob: -8.887478828430176
    7. 'q' → logprob: -9.137478828430176
    8. '
' → logprob: -9.137478828430176
    9. ',' → logprob: -9.262478828430176
    10. ':
' → logprob: -9.387478828430176

Token 632: ' nf' (ID: 89636)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08671999722719193
    2. '   ' → logprob: -3.3367199897766113
    3. ' q' → logprob: -4.086719989776611
    4. 'visited' → logprob: -4.336719989776611
    5. 'if' → logprob: -4.836719989776611
    6. '       ' → logprob: -5.336719989776611
    7. '           ' → logprob: -6.336719989776611
    8. ' if' → logprob: -6.586719989776611
    9. 'for' → logprob: -7.086719989776611
    10. ' visited' → logprob: -7.961719989776611

Token 633: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2325601577758789
    2. ' =' → logprob: -1.857560157775879
    3. 'ext' → logprob: -2.982560157775879
    4. 'next' → logprob: -7.607560157775879
    5. '   ' → logprob: -9.232560157775879
    6. '=n' → logprob: -9.857560157775879
    7. ',next' → logprob: -10.107560157775879
    8. '(next' → logprob: -11.232560157775879
    9. '       ' → logprob: -11.607560157775879
    10. '=int' → logprob: -11.732560157775879

Token 634: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.02346046455204487
    2. ' next' → logprob: -3.7734603881835938
    3. '0' → logprob: -8.773460388183594
    4. '(next' → logprob: -10.023460388183594
    5. '[next' → logprob: -11.398460388183594
    6. '	next' → logprob: -12.898460388183594
    7. ',next' → logprob: -14.273460388183594
    8. ' ' → logprob: -14.398460388183594
    9. '   ' → logprob: -15.398460388183594
    10. '_next' → logprob: -15.898460388183594

Token 635: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -3.650518920039758e-06
    2. 'floor' → logprob: -12.625003814697266
    3. '```' → logprob: -15.500003814697266
    4. 'Floor' → logprob: -16.750003814697266
    5. '_' → logprob: -17.125003814697266
    6. ' floor' → logprob: -18.500003814697266
    7. '(_' → logprob: -18.625003814697266
    8. '_f' → logprob: -18.875003814697266
    9. '
' → logprob: -19.000003814697266
    10. '\' → logprob: -19.375003814697266

Token 636: '(side' (ID: 95460)
  Prédit: '(side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(side' → logprob: -2.15310683415737e-05
    2. '(' → logprob: -10.875021934509277
    3. ' (' → logprob: -13.375021934509277
    4. 'side' → logprob: -15.000021934509277
    5. '	side' → logprob: -15.750021934509277
    6. ' side' → logprob: -15.875021934509277
    7. '```' → logprob: -16.12502098083496
    8. ')' → logprob: -16.62502098083496
    9. '(
' → logprob: -16.75002098083496
    10. '.side' → logprob: -16.87502098083496

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.790129555156454e-05
    2. ' ,' → logprob: -9.750067710876465
    3. ',
' → logprob: -12.250067710876465
    4. '0' → logprob: -13.125067710876465
    5. ',n' → logprob: -13.875067710876465
    6. ',f' → logprob: -14.375067710876465
    7. '(' → logprob: -14.500067710876465
    8. ')' → logprob: -15.750067710876465
    9. ' ' → logprob: -16.00006866455078
    10. ',(' → logprob: -16.50006866455078

Token 638: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. ')' → logprob: -17.500001907348633
    4. '
' → logprob: -18.375001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '(' → logprob: -19.625001907348633
    7. ')
' → logprob: -20.750001907348633
    8. '  ' → logprob: -20.937501907348633
    9. '00' → logprob: -21.000001907348633
    10. '۰' → logprob: -21.125001907348633

Token 639: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00870639830827713
    2. ')' → logprob: -4.758706569671631
    3. ')
' → logprob: -9.633706092834473
    4. '       ' → logprob: -10.633706092834473
    5. '           ' → logprob: -13.758706092834473
    6. ')`
' → logprob: -14.883706092834473
    7. ' )
' → logprob: -15.008706092834473
    8. ')

' → logprob: -15.133706092834473
    9. '   ' → logprob: -15.633706092834473
    10. '))
' → logprob: -16.75870704650879

Token 640: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01456432044506073
    2. '
' → logprob: -4.264564514160156
    3. '       ' → logprob: -8.889564514160156
    4. ',' → logprob: -9.514564514160156
    5. '<|end|>' → logprob: -10.639564514160156
    6. '		' → logprob: -10.764564514160156
    7. ',
' → logprob: -11.014564514160156
    8. '  
' → logprob: -11.014564514160156
    9. '	       ' → logprob: -11.014564514160156
    10. ')' → logprob: -11.264564514160156

Token 641: ' if' (ID: 538)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.796909511089325
    2. 'q' → logprob: -0.921909511089325
    3. '       ' → logprob: -2.0469095706939697
    4. '           ' → logprob: -4.421909332275391
    5. ' q' → logprob: -5.296909332275391
    6. 'if' (adapté à ' if') → logprob: -5.546909332275391
    7. ' visited' → logprob: -7.046909332275391
    8. '   ' → logprob: -8.04690933227539
    9. '
' → logprob: -9.17190933227539
    10. ' if' → logprob: -9.29690933227539

Token 642: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.02872324176132679
    2. 'nf' → logprob: -4.153723239898682
    3. ' not' → logprob: -4.528723239898682
    4. 'visited' → logprob: -6.528723239898682
    5. '(not' → logprob: -9.27872371673584
    6. ' nf' → logprob: -9.27872371673584
    7. '   ' → logprob: -9.90372371673584
    8. '0' → logprob: -10.02872371673584
    9. '	not' → logprob: -10.90372371673584
    10. 'n' → logprob: -11.02872371673584

Token 643: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -8.506661833962426e-05
    2. ' visited' → logprob: -9.37508487701416
    3. '
' → logprob: -16.375085830688477
    4. '(' → logprob: -17.375085830688477
    5. 'visit' → logprob: -17.500085830688477
    6. 'q' → logprob: -17.875085830688477
    7. '   ' → logprob: -18.500085830688477
    8. 'v' → logprob: -18.750085830688477
    9. 'Visited' → logprob: -18.750085830688477
    10. 'vis' → logprob: -18.875085830688477

Token 644: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -14.125001907348633
    3. '```' → logprob: -14.875001907348633
    4. '
' → logprob: -16.125001907348633
    5. '[n' → logprob: -16.250001907348633
    6. '[
' → logprob: -16.625001907348633
    7. 'side' → logprob: -16.750001907348633
    8. '][' → logprob: -17.000001907348633
    9. ')[' → logprob: -17.250001907348633
    10. '[next' → logprob: -18.000001907348633

Token 645: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.0001422770437784493
    2. ' side' → logprob: -9.250142097473145
    3. '[' → logprob: -10.000142097473145
    4. '.side' → logprob: -15.250142097473145
    5. '][' → logprob: -15.375142097473145
    6. '(side' → logprob: -15.500142097473145
    7. '	side' → logprob: -17.00014305114746
    8. '_side' → logprob: -17.25014305114746
    9. ']' → logprob: -17.37514305114746
    10. '0' → logprob: -17.50014305114746

Token 646: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00762189133092761
    2. '[' → logprob: -4.882621765136719
    3. ' ][' → logprob: -11.632621765136719
    4. '[n' → logprob: -13.132621765136719
    5. ']' → logprob: -13.382621765136719
    6. ''][' → logprob: -14.007621765136719
    7. '"][' → logprob: -14.382621765136719
    8. '0' → logprob: -14.507621765136719
    9. '```' → logprob: -15.632621765136719
    10. ' [' → logprob: -15.632621765136719

Token 647: 'nf' (ID: 51054)
  Prédit: 'nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -4.584861744660884e-05
    2. ' nf' → logprob: -10.000045776367188
    3. '_nf' → logprob: -15.000045776367188
    4. '0' → logprob: -17.375045776367188
    5. '
' → logprob: -17.750045776367188
    6. '   ' → logprob: -20.250045776367188
    7. 'n' → logprob: -20.375045776367188
    8. '[n' → logprob: -22.125045776367188
    9. ' ' → logprob: -22.250045776367188
    10. '    ' → logprob: -22.375045776367188

Token 648: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.15837913751602173
    2. ']:' → logprob: -2.283379077911377
    3. ']' → logprob: -3.158379077911377
    4. ']=' → logprob: -6.283379077911377
    5. ']:
' → logprob: -9.783379554748535
    6. ']:

' → logprob: -9.783379554748535
    7. ':
' → logprob: -10.908379554748535
    8. ' ]' → logprob: -11.033379554748535
    9. ']]:
' → logprob: -12.283379554748535
    10. '']:
' → logprob: -12.783379554748535

Token 649: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012193971313536167
    2. '           ' → logprob: -5.2621941566467285
    3. ':
' → logprob: -6.3871941566467285
    4. '```' → logprob: -6.3871941566467285
    5. '	       ' → logprob: -7.3871941566467285
    6. '[' → logprob: -7.7621941566467285
    7. '       ' → logprob: -8.13719367980957
    8. '):
' → logprob: -8.26219367980957
    9. 'q' → logprob: -8.38719367980957
    10. ',' → logprob: -8.63719367980957

Token 650: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.8028960227966309
    2. '               ' → logprob: -1.4278960227966309
    3. 'q' → logprob: -1.5528960227966309
    4. ' q' → logprob: -2.552896022796631
    5. ' visited' → logprob: -3.927896022796631
    6. '                   ' → logprob: -6.302896022796631
    7. '	q' → logprob: -7.677896022796631
    8. '
' → logprob: -8.177896499633789
    9. '   ' → logprob: -8.302896499633789
    10. '       ' → logprob: -10.052896499633789

Token 651: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '][' → logprob: -13.750000953674316
    3. '[
' → logprob: -16.625001907348633
    4. ')[' → logprob: -16.625001907348633
    5. '
' → logprob: -16.750001907348633
    6. '```' → logprob: -17.250001907348633
    7. '               ' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.625001907348633
    9. ' [' → logprob: -18.750001907348633
    10. '[token' → logprob: -19.375001907348633

Token 652: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -2.339278580620885e-06
    2. ' side' → logprob: -13.125001907348633
    3. '(side' → logprob: -15.875001907348633
    4. '[' → logprob: -16.125001907348633
    5. '_side' → logprob: -17.625001907348633
    6. '][' → logprob: -17.625001907348633
    7. '	side' → logprob: -17.625001907348633
    8. '.side' → logprob: -17.625001907348633
    9. 'sid' → logprob: -19.250001907348633
    10. 'Side' → logprob: -19.625001907348633

Token 653: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006874137907288969
    2. '[n' → logprob: -7.375687599182129
    3. ']' → logprob: -10.375687599182129
    4. '[' → logprob: -11.500687599182129
    5. ' ][' → logprob: -11.500687599182129
    6. ''][' → logprob: -12.875687599182129
    7. '"][' → logprob: -13.125687599182129
    8. 'nf' → logprob: -14.000687599182129
    9. ']][' → logprob: -14.000687599182129
    10. '   ' → logprob: -14.625687599182129

Token 654: 'nf' (ID: 51054)
  Prédit: 'nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -1.2664456789934775e-06
    2. '_nf' → logprob: -14.250000953674316
    3. ' nf' → logprob: -14.500000953674316
    4. '][' → logprob: -17.625001907348633
    5. 'n' → logprob: -17.750001907348633
    6. '[' → logprob: -18.375001907348633
    7. '
' → logprob: -18.375001907348633
    8. ']' → logprob: -18.875001907348633
    9. '0' → logprob: -19.250001907348633
    10. 'f' → logprob: -20.875001907348633

Token 655: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.10030101239681244
    2. ']' → logprob: -2.3503010272979736
    3. '=' → logprob: -9.725300788879395
    4. '=True' → logprob: -10.475300788879395
    5. '']=' → logprob: -12.725300788879395
    6. ' ]' → logprob: -13.475300788879395
    7. '[' → logprob: -14.725300788879395
    8. ']+=' → logprob: -15.350300788879395
    9. '"]=' → logprob: -15.350300788879395
    10. ')=' → logprob: -15.475300788879395

Token 656: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.2729995988775045e-06
    2. ' True' → logprob: -12.000006675720215
    3. '1' → logprob: -18.6250057220459
    4. '(True' → logprob: -20.2500057220459
    5. '   ' → logprob: -21.1250057220459
    6. '=True' → logprob: -22.2500057220459
    7. 'true' → logprob: -23.0000057220459
    8. 'False' → logprob: -25.0000057220459
    9. 'Tr' → logprob: -25.3750057220459
    10. 'T' → logprob: -25.6250057220459

Token 657: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020747410599142313
    2. ',' → logprob: -9.375207901000977
    3. '			' → logprob: -10.500207901000977
    4. 'q' → logprob: -10.500207901000977
    5. '		       ' → logprob: -11.000207901000977
    6. '	           ' → logprob: -11.750207901000977
    7. '
' → logprob: -11.750207901000977
    8. '<|end|>' → logprob: -11.875207901000977
    9. ',q' → logprob: -12.000207901000977
    10. '           ' → logprob: -12.375207901000977

Token 658: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021843716967850924
    2. 'q' → logprob: -8.875218391418457
    3. '           ' → logprob: -10.750218391418457
    4. ',' → logprob: -11.125218391418457
    5. '       ' → logprob: -11.625218391418457
    6. '```' → logprob: -11.625218391418457
    7. ' q' → logprob: -12.625218391418457
    8. ',q' → logprob: -12.625218391418457
    9. '<|end|>' → logprob: -12.875218391418457
    10. '                   ' → logprob: -13.000218391418457

Token 659: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -8.2994620242971e-06
    2. '               ' → logprob: -12.250008583068848
    3. ' q' → logprob: -13.000008583068848
    4. '	q' → logprob: -14.500008583068848
    5. '
' → logprob: -14.875008583068848
    6. '                   ' → logprob: -15.375008583068848
    7. '           ' → logprob: -16.62500762939453
    8. '   ' → logprob: -17.62500762939453
    9. '```' → logprob: -17.75000762939453
    10. '                
' → logprob: -18.37500762939453

Token 660: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00017803447553887963
    2. '.' → logprob: -8.875178337097168
    3. '.extend' → logprob: -10.750178337097168
    4. '.enqueue' → logprob: -11.750178337097168
    5. '.app' → logprob: -12.625178337097168
    6. '.push' → logprob: -13.625178337097168
    7. '.put' → logprob: -14.000178337097168
    8. '.ap' → logprob: -14.125178337097168
    9. '.add' → logprob: -14.500178337097168
    10. '.emplace' → logprob: -14.625178337097168

Token 661: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00020354038861114532
    2. '(' → logprob: -8.500203132629395
    3. ' ((' → logprob: -18.00020408630371
    4. '(((' → logprob: -18.25020408630371
    5. '([' → logprob: -19.25020408630371
    6. '[(' → logprob: -19.50020408630371
    7. '(([' → logprob: -19.62520408630371
    8. '(
' → logprob: -20.12520408630371
    9. '```' → logprob: -20.87520408630371
    10. ' (' → logprob: -21.25020408630371

Token 662: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -8.180258191714529e-06
    2. ' side' → logprob: -11.750008583068848
    3. '(side' → logprob: -15.125008583068848
    4. '	side' → logprob: -20.12500762939453
    5. '.side' → logprob: -20.87500762939453
    6. 'sid' → logprob: -21.00000762939453
    7. '   ' → logprob: -21.37500762939453
    8. 'Side' → logprob: -21.87500762939453
    9. '_side' → logprob: -22.25000762939453
    10. '-side' → logprob: -22.62500762939453

Token 663: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.31495124101638794
    2. ',' → logprob: -1.3149511814117432
    3. ' ,' → logprob: -6.439951419830322
    4. ',f' → logprob: -10.064950942993164
    5. ',
' → logprob: -10.314950942993164
    6. '),' → logprob: -12.439950942993164
    7. '‌,' → logprob: -13.314950942993164
    8. ',q' → logprob: -13.564950942993164
    9. ',next' → logprob: -13.564950942993164
    10. ')' → logprob: -14.189950942993164

Token 664: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2664456789934775e-06
    2. '	f' → logprob: -14.875000953674316
    3. '_f' → logprob: -15.500000953674316
    4. 'ф' → logprob: -16.000001907348633
    5. 'floor' → logprob: -16.000001907348633
    6. '```' → logprob: -16.000001907348633
    7. '
' → logprob: -16.500001907348633
    8. ')' → logprob: -17.000001907348633
    9. 'nf' → logprob: -17.125001907348633
    10. ' f' → logprob: -17.250001907348633

Token 665: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0019815717823803425
    2. ')' → logprob: -6.251981735229492
    3. '))
' → logprob: -10.501981735229492
    4. ',' → logprob: -11.126981735229492
    5. ')))' → logprob: -12.001981735229492
    6. ' ))' → logprob: -13.251981735229492
    7. '),' → logprob: -14.251981735229492
    8. '   ' → logprob: -14.501981735229492
    9. '       ' → logprob: -14.626981735229492
    10. ')
' → logprob: -15.251981735229492

Token 666: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.735893965815194e-05
    2. '1' → logprob: -11.500017166137695
    3. ' ' → logprob: -12.000017166137695
    4. '2' → logprob: -15.375017166137695
    5. '
' → logprob: -15.750017166137695
    6. ')' → logprob: -15.750017166137695
    7. '3' → logprob: -16.000017166137695
    8. '   ' → logprob: -16.000017166137695
    9. 'steps' → logprob: -16.625017166137695
    10. '"' → logprob: -17.187517166137695

Token 667: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1270507425069809
    2. ')' → logprob: -2.1270506381988525
    3. '))
' → logprob: -9.752050399780273
    4. ')))' → logprob: -10.502050399780273
    5. ',' → logprob: -11.002050399780273
    6. ')
' → logprob: -11.127050399780273
    7. '),' → logprob: -13.377050399780273
    8. ' ))' → logprob: -13.752050399780273
    9. ' )' → logprob: -14.252050399780273
    10. ')}' → logprob: -14.627050399780273

Token 668: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 669: ' jump' (ID: 13843)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.2467658966779709
    2. 'depth' → logprob: -2.7467658519744873
    3. 'step' → logprob: -2.8717658519744873
    4. ')' → logprob: -2.9967658519744873
    5. 'distance' → logprob: -3.7467658519744873
    6. ' steps' → logprob: -5.496766090393066
    7. '))' → logprob: -5.746766090393066
    8. 'moves' → logprob: -5.871766090393066
    9. 'jump' → logprob: -5.871766090393066
    10. '1' → logprob: -6.121766090393066

Token 670: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4867626428604126
    2. '_count' → logprob: -1.6117626428604126
    3. ')' → logprob: -2.486762523651123
    4. '<|end|>' → logprob: -3.361762523651123
    5. 'length' → logprob: -3.611762523651123
    6. 'limit' → logprob: -4.361762523651123
    7. '_length' → logprob: -5.111762523651123
    8. ' count' → logprob: -5.361762523651123
    9. 'distance' → logprob: -5.611762523651123
    10. '_steps' → logprob: -5.986762523651123

Token 671: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031448006629943848
    2. '
' → logprob: -7.00314474105835
    3. '       ' → logprob: -7.00314474105835
    4. '<|end|>' → logprob: -7.75314474105835
    5. ')
' → logprob: -8.003145217895508
    6. ' )' → logprob: -8.628145217895508
    7. '<|end|>' → logprob: -9.128145217895508
    8. '   ' → logprob: -9.378145217895508
    9. '               ' → logprob: -9.878145217895508
    10. ',' → logprob: -10.878145217895508

Token 672: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5822400857578032e-05
    2. ' ' → logprob: -10.750025749206543
    3. '0' → logprob: -12.375025749206543
    4. '   ' → logprob: -17.87502670288086
    5. '
' → logprob: -18.25002670288086
    6. '2' → logprob: -18.62502670288086
    7. '```' → logprob: -19.25002670288086
    8. ')' → logprob: -19.56252670288086
    9. '<|end|>' → logprob: -20.12502670288086
    10. '=' → logprob: -20.37502670288086

Token 673: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7894455194473267
    2. '<|end|>' → logprob: -1.0394455194473267
    3. '   ' → logprob: -2.789445400238037
    4. '
' → logprob: -3.039445400238037
    5. 'while' → logprob: -3.414445400238037
    6. '<|end|>' → logprob: -4.289445400238037
    7. ' while' → logprob: -4.789445400238037
    8. '  
' → logprob: -5.164445400238037
    9. '	while' → logprob: -5.664445400238037
    10. '    
' → logprob: -5.664445400238037

Token 674: 'first' (ID: 7743)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004188567865639925
    2. ' )' → logprob: -5.879188537597656
    3. '<|end|>' → logprob: -8.754188537597656
    4. '))' → logprob: -8.879188537597656
    5. '
' → logprob: -9.004188537597656
    6. ')
' → logprob: -9.129188537597656
    7. 'start' → logprob: -9.254188537597656
    8. 'starting' → logprob: -9.504188537597656
    9. '<|end|>' → logprob: -9.754188537597656
    10. ' because' → logprob: -10.004188537597656

Token 675: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.4879239797592163
    2. ' jump' → logprob: -0.9879239797592163
    3. ')' → logprob: -4.612924098968506
    4. '_jump' → logprob: -6.612924098968506
    5. 'token' → logprob: -7.112924098968506
    6. ' step' → logprob: -8.237923622131348
    7. 'step' → logprob: -8.237923622131348
    8. ' move' → logprob: -8.362923622131348
    9. 'move' → logprob: -8.487923622131348
    10. ' )' → logprob: -8.612923622131348

Token 676: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006620417116209865
    2. ' )' → logprob: -7.500661849975586
    3. '))' → logprob: -9.625661849975586
    4. ')
' → logprob: -10.500661849975586
    5. '<|end|>' → logprob: -13.250661849975586
    6. 'token' → logprob: -13.500661849975586
    7. '+' → logprob: -13.750661849975586
    8. ')}' → logprob: -13.875661849975586
    9. '})' → logprob: -14.125661849975586
    10. '       ' → logprob: -14.125661849975586

Token 677: ' floor' (ID: 8350)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.17887166142463684
    2. 'ground' → logprob: -3.0538716316223145
    3. 'starting' → logprob: -3.3038716316223145
    4. 'floor' → logprob: -3.4288716316223145
    5. ' start' → logprob: -4.1788716316223145
    6. '0' → logprob: -4.6788716316223145
    7. '(start' → logprob: -4.6788716316223145
    8. ' ground' → logprob: -5.5538716316223145
    9. ' starting' → logprob: -5.9288716316223145
    10. 'initial' → logprob: -6.1788716316223145

Token 678: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003644376527518034
    2. ' ' → logprob: -5.6286444664001465
    3. ',' → logprob: -10.378643989562988
    4. ')' → logprob: -12.878643989562988
    5. '
' → logprob: -13.253643989562988
    6. '`' → logprob: -13.628643989562988
    7. '=' → logprob: -13.753643989562988
    8. ' ,' → logprob: -14.378643989562988
    9. '```' → logprob: -14.503643989562988
    10. 's' → logprob: -14.753643989562988

Token 679: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03064119443297386
    2. '-' → logprob: -3.5306410789489746
    3. 'start' → logprob: -8.030641555786133
    4. ' ' → logprob: -9.030641555786133
    5. ' -' → logprob: -9.155641555786133
    6. '(' → logprob: -9.780641555786133
    7. ')' → logprob: -9.905641555786133
    8. 'starting' → logprob: -10.030641555786133
    9. 'initial' → logprob: -10.280641555786133
    10. 'origin' → logprob: -10.780641555786133

Token 680: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015191456768661737
    2. ' )' → logprob: -7.876519203186035
    3. ',' → logprob: -8.001519203186035
    4. '<|end|>' → logprob: -8.876519203186035
    5. ' onwards' → logprob: -8.876519203186035
    6. '0' → logprob: -9.376519203186035
    7. ' to' → logprob: -9.376519203186035
    8. ' after' → logprob: -10.126519203186035
    9. '))' → logprob: -10.126519203186035
    10. ' is' → logprob: -10.251519203186035

Token 681: ' other' (ID: 1273)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2455855756998062
    2. 'nf' → logprob: -1.745585560798645
    3. '1' → logprob: -3.8705856800079346
    4. 'floor' → logprob: -4.8705854415893555
    5. ' nf' → logprob: -4.9955854415893555
    6. ' ' → logprob: -5.6205854415893555
    7. 'next' → logprob: -6.6205854415893555
    8. '2' → logprob: -7.9955854415893555
    9. ' floor' → logprob: -8.245585441589355
    10. ')' → logprob: -8.245585441589355

Token 682: ' building' (ID: 6282)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.33008474111557007
    2. 'side' → logprob: -1.3300848007202148
    3. ')' → logprob: -4.705084800720215
    4. ',' → logprob: -5.580084800720215
    5. 's' → logprob: -7.455084800720215
    6. ' ,' → logprob: -7.580084800720215
    7. '_side' → logprob: -7.705084800720215
    8. '0' → logprob: -7.705084800720215
    9. ' floor' → logprob: -8.080084800720215
    10. 'floor' → logprob: -8.080084800720215

Token 683: '?)
' (ID: 90794)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037836082628928125
    2. '))' → logprob: -8.625378608703613
    3. ')
' → logprob: -9.250378608703613
    4. ' )' → logprob: -10.500378608703613
    5. '+' → logprob: -11.000378608703613
    6. '       ' → logprob: -11.125378608703613
    7. ',' → logprob: -11.500378608703613
    8. '   ' → logprob: -12.125378608703613
    9. '0' → logprob: -12.375378608703613
    10. ')))' → logprob: -12.875378608703613

Token 684: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 685: ' ans' (ID: 3345)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0024166801013052464
    2. '       ' → logprob: -7.252416610717773
    3. ' while' → logprob: -7.502416610717773
    4. '   ' → logprob: -7.502416610717773
    5. '```' → logprob: -7.627416610717773
    6. '
' → logprob: -9.502416610717773
    7. '	while' → logprob: -10.252416610717773
    8. 'While' → logprob: -13.252416610717773
    9. '``' → logprob: -13.627416610717773
    10. '        
' → logprob: -13.877416610717773

Token 686: '=-' (ID: 21714)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03811802715063095
    2. ' =' → logprob: -3.2881181240081787
    3. '=[]' → logprob: -10.413118362426758
    4. '=None' → logprob: -10.663118362426758
    5. '=True' → logprob: -11.913118362426758
    6. '=
' → logprob: -12.663118362426758
    7. '=False' → logprob: -12.913118362426758
    8. '=int' → logprob: -13.413118362426758
    9. '=[]
' → logprob: -13.663118362426758
    10. '={}' → logprob: -13.788118362426758

Token 687: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. 'int' → logprob: -15.000000953674316
    3. '10' → logprob: -15.375000953674316
    4. '100' → logprob: -15.625000953674316
    5. '2' → logprob: -15.750000953674316
    6. 'sys' → logprob: -16.250001907348633
    7. ' ' → logprob: -16.375001907348633
    8. '9' → logprob: -16.625001907348633
    9. 'inf' → logprob: -16.625001907348633
    10. '999' → logprob: -17.000001907348633

Token 688: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7128587365150452
    2. ' while' → logprob: -1.3378586769104004
    3. '	while' → logprob: -2.3378586769104004
    4. '<|end|>' → logprob: -2.7128586769104004
    5. '
' → logprob: -3.0878586769104004
    6. '   ' → logprob: -4.0878586769104
    7. '       ' → logprob: -4.2128586769104
    8. '```' → logprob: -6.2128586769104
    9. '  
' → logprob: -6.5878586769104
    10. ',' → logprob: -7.2128586769104

Token 689: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.584007203578949
    2. '	while' → logprob: -1.5840072631835938
    3. '       ' → logprob: -2.3340072631835938
    4. ' while' → logprob: -2.5840072631835938
    5. '   ' → logprob: -2.8340072631835938
    6. '```' → logprob: -6.084007263183594
    7. '<|end|>' → logprob: -6.209007263183594
    8. '
' → logprob: -7.834007263183594
    9. '\t' → logprob: -8.334007263183594
    10. '        
' → logprob: -8.459007263183594

Token 690: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00016766376211307943
    2. ' while' → logprob: -8.750167846679688
    3. '       ' → logprob: -12.625167846679688
    4. '   ' → logprob: -13.000167846679688
    5. '	while' → logprob: -13.000167846679688
    6. '
' → logprob: -13.625167846679688
    7. '```' → logprob: -15.500167846679688
    8. 'While' → logprob: -17.250167846679688
    9. '        
' → logprob: -19.250167846679688
    10. 'from' → logprob: -19.875167846679688

Token 691: ' BFS' (ID: 190016)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -2.868328920158092e-05
    2. ' while' → logprob: -10.500028610229492
    3. '       ' → logprob: -14.625028610229492
    4. '
' → logprob: -15.125028610229492
    5. '   ' → logprob: -15.250028610229492
    6. 'While' → logprob: -16.250028610229492
    7. '	while' → logprob: -17.500028610229492
    8. 'for' → logprob: -18.000028610229492
    9. '        
' → logprob: -20.500028610229492
    10. '```' → logprob: -21.000028610229492

Token 692: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37662646174430847
    2. '
' → logprob: -1.6266264915466309
    3. '   ' → logprob: -2.501626491546631
    4. 'while' → logprob: -3.876626491546631
    5. ' while' → logprob: -5.376626491546631
    6. '        
' → logprob: -5.501626491546631
    7. '  
' → logprob: -5.876626491546631
    8. '    
' → logprob: -6.626626491546631
    9. '	while' → logprob: -7.251626491546631
    10. ' 
' → logprob: -8.126626014709473

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8421724438667297
    2. '   ' → logprob: -1.217172384262085
    3. 'while' → logprob: -1.967172384262085
    4. '
' → logprob: -2.217172384262085
    5. ' while' → logprob: -3.842172384262085
    6. '	while' → logprob: -6.217172622680664
    7. '    
' → logprob: -7.717172622680664
    8. '        
' → logprob: -8.717172622680664
    9. '  
' → logprob: -8.967172622680664
    10. ' 
' → logprob: -9.592172622680664

Token 694: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0054645054042339325
    2. ' while' → logprob: -5.255464553833008
    3. '       ' → logprob: -9.005464553833008
    4. '	while' → logprob: -9.505464553833008
    5. '
' → logprob: -10.630464553833008
    6. '   ' → logprob: -11.630464553833008
    7. '```' → logprob: -15.505464553833008
    8. ' 
' → logprob: -16.005464553833008
    9. '        
' → logprob: -16.880464553833008
    10. '    
' → logprob: -17.505464553833008

Token 695: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0019293478690087795
    2. ' q' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.50192928314209
    4. 'len' → logprob: -16.126930236816406
    5. ' ' → logprob: -16.876930236816406
    6. '	q' → logprob: -17.001930236816406
    7. '       ' → logprob: -19.001930236816406
    8. ' len' → logprob: -19.376930236816406
    9. '  ' → logprob: -19.501930236816406
    10. '     ' → logprob: -19.626930236816406

Token 696: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05294128507375717
    2. ':' → logprob: -3.05294132232666
    3. '.p' → logprob: -5.67794132232666
    4. '.append' → logprob: -7.67794132232666
    5. '   ' → logprob: -9.55294132232666
    6. '```' → logprob: -9.92794132232666
    7. ' and' → logprob: -10.05294132232666
    8. '.pop' → logprob: -10.17794132232666
    9. 'opleft' → logprob: -10.30294132232666
    10. '[' → logprob: -10.42794132232666

Token 697: '           ' (ID: 352)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.47315990924835205
    2. '(side' → logprob: -1.848159909248352
    3. '       ' → logprob: -2.0981597900390625
    4. ' side' → logprob: -2.8481597900390625
    5. '           ' → logprob: -3.4731597900390625
    6. '	side' → logprob: -5.7231597900390625
    7. '```' → logprob: -5.9731597900390625
    8. '   ' → logprob: -6.8481597900390625
    9. '.side' → logprob: -7.7231597900390625
    10. '_side' → logprob: -9.098159790039062

Token 698: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' (adapté à ' side') → logprob: -0.0002646735229063779
    2. ' side' → logprob: -8.250265121459961
    3. '(side' → logprob: -12.750265121459961
    4. '	side' → logprob: -15.125265121459961
    5. '   ' → logprob: -16.50026512145996
    6. '_side' → logprob: -16.75026512145996
    7. '           ' → logprob: -17.37526512145996
    8. 's' → logprob: -17.50026512145996
    9. '.side' → logprob: -18.00026512145996
    10. 'sid' → logprob: -18.00026512145996

Token 699: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02171444706618786
    2. ' ,' → logprob: -4.521714210510254
    3. ',q' → logprob: -5.771714210510254
    4. ',
' → logprob: -6.021714210510254
    5. '[' → logprob: -7.021714210510254
    6. ',n' → logprob: -7.271714210510254
    7. ',next' → logprob: -7.271714210510254
    8. '=' → logprob: -7.396714210510254
    9. '           ' → logprob: -8.021714210510254
    10. ')' → logprob: -8.021714210510254

Token 700: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.0011767742689698935
    2. ',' → logprob: -6.751176834106445
    3. 'oor' → logprob: -13.376176834106445
    4. 'lo' → logprob: -13.626176834106445
    5. ',l' → logprob: -13.876176834106445
    6. 'lor' → logprob: -14.126176834106445
    7. 'floor' → logprob: -14.126176834106445
    8. '_,' → logprob: -14.876176834106445
    9. 'loo' → logprob: -15.751176834106445
    10. 'l' → logprob: -15.751176834106445

Token 701: ',j' (ID: 22712)
  Prédit: ',q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',q' → logprob: -1.0593241453170776
    2. ' =' → logprob: -1.3093241453170776
    3. ',' → logprob: -1.6843241453170776
    4. '=' → logprob: -1.8093241453170776
    5. '=q' → logprob: -3.434324264526367
    6. ',next' → logprob: -6.934324264526367
    7. '   ' → logprob: -8.059324264526367
    8. ',n' → logprob: -9.559324264526367
    9. ')=' → logprob: -9.559324264526367
    10. ' ,' → logprob: -9.684324264526367

Token 702: 'umps' (ID: 14938)
  Prédit: 'umps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umps' → logprob: -0.10178431868553162
    2. 'ump' → logprob: -2.3517842292785645
    3. ',count' → logprob: -7.8517842292785645
    4. ',' → logprob: -7.9767842292785645
    5. 'mp' → logprob: -8.101784706115723
    6. 'count' → logprob: -8.351784706115723
    7. 'umped' → logprob: -9.351784706115723
    8. '=' → logprob: -9.476784706115723
    9. '_count' → logprob: -10.101784706115723
    10. ' count' → logprob: -10.851784706115723

Token 703: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2791813611984253
    2. ' =' → logprob: -1.6541813611984253
    3. '=q' → logprob: -3.029181480407715
    4. ',q' → logprob: -6.404181480407715
    5. ')=' → logprob: -6.779181480407715
    6. ')' → logprob: -7.404181480407715
    7. '=
' → logprob: -8.904181480407715
    8. '=(' → logprob: -9.154181480407715
    9. '=query' → logprob: -9.654181480407715
    10. '   ' → logprob: -9.904181480407715

Token 704: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0015052208909764886
    2. ' q' → logprob: -6.501505374908447
    3. '   ' → logprob: -13.376504898071289
    4. '           ' → logprob: -14.376504898071289
    5. '	q' → logprob: -15.376504898071289
    6. '               ' → logprob: -15.501504898071289
    7. '       ' → logprob: -15.876504898071289
    8. '
' → logprob: -16.37650489807129
    9. '=q' → logprob: -17.37650489807129
    10. '                   ' → logprob: -18.00150489807129

Token 705: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2879875600337982
    2. ' =' → logprob: -1.6629875898361206
    3. '           ' → logprob: -4.28798770904541
    4. ',' → logprob: -4.41298770904541
    5. ')' → logprob: -4.91298770904541
    6. '[' → logprob: -4.91298770904541
    7. ':
' → logprob: -5.16298770904541
    8. '               ' → logprob: -6.41298770904541
    9. '.pop' → logprob: -6.41298770904541
    10. '   ' → logprob: -6.66298770904541

Token 706: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.001935661886818707
    2. 'op' → logprob: -6.2519354820251465
    3. 'opl' → logprob: -12.501935958862305
    4. 'ople' → logprob: -13.001935958862305
    5. 'opup' → logprob: -14.126935958862305
    6. 'opped' → logprob: -16.001935958862305
    7. 'opt' → logprob: -16.876935958862305
    8. '```' → logprob: -17.126935958862305
    9. 'opu' → logprob: -17.501935958862305
    10. 'append' → logprob: -17.626935958862305

Token 707: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1681951880455017
    2. '<|end|>' → logprob: -2.9181952476501465
    3. '
' → logprob: -3.0431952476501465
    4. ',' → logprob: -4.1681952476501465
    5. ')' → logprob: -4.2931952476501465
    6. '       ' → logprob: -5.0431952476501465
    7. '<|end|>' → logprob: -5.5431952476501465
    8. '            
' → logprob: -5.6681952476501465
    9. '  
' → logprob: -6.5431952476501465
    10. ',
' → logprob: -6.5431952476501465

Token 708: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0136643648147583
    2. '           ' → logprob: -1.1386643648147583
    3. '
' → logprob: -2.0136642456054688
    4. '<|end|>' → logprob: -2.6386642456054688
    5. '   ' → logprob: -3.0136642456054688
    6. '    
' → logprob: -4.263664245605469
    7. '```' → logprob: -4.388664245605469
    8. '  
' → logprob: -4.888664245605469
    9. '        
' → logprob: -5.013664245605469
    10. '<|end|>' → logprob: -5.388664245605469

Token 709: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16111308336257935
    2. '           ' → logprob: -1.9111130237579346
    3. ' if' → logprob: -7.036113262176514
    4. 'for' → logprob: -12.286112785339355
    5. '```' → logprob: -12.911112785339355
    6. '   ' → logprob: -14.536112785339355
    7. '       ' → logprob: -14.911112785339355
    8. '            
' → logprob: -15.161112785339355
    9. 'next' → logprob: -15.286112785339355
    10. 'If' → logprob: -15.661112785339355

Token 710: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.06995632499456406
    2. ' floor' → logprob: -2.6949563026428223
    3. 'flo' → logprob: -11.31995677947998
    4. 'f' → logprob: -13.06995677947998
    5. '_floor' → logprob: -13.31995677947998
    6. '.floor' → logprob: -13.81995677947998
    7. 'side' → logprob: -14.06995677947998
    8. '(f' → logprob: -14.81995677947998
    9. 'Floor' → logprob: -15.19495677947998
    10. 'n' → logprob: -15.19495677947998

Token 711: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20250044763088226
    2. ' ==' → logprob: -1.7025004625320435
    3. '>=' → logprob: -6.952500343322754
    4. ' >=' → logprob: -9.202500343322754
    5. ']==' → logprob: -11.827500343322754
    6. ')==' → logprob: -12.202500343322754
    7. '()==' → logprob: -12.577500343322754
    8. '==(' → logprob: -12.577500343322754
    9. '+' → logprob: -13.327500343322754
    10. '===' → logprob: -13.452500343322754

Token 712: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.700132997939363e-05
    2. ' n' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.750017166137695
    4. '
' → logprob: -17.125017166137695
    5. '	n' → logprob: -17.750017166137695
    6. '(n' → logprob: -17.875017166137695
    7. '<|end|>' → logprob: -19.625017166137695
    8. ')n' → logprob: -19.750017166137695
    9. '0' → logprob: -20.000017166137695
    10. '<n' → logprob: -20.375017166137695

Token 713: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.494741632603109e-05
    2. ' -' → logprob: -9.37508487701416
    3. '()-' → logprob: -16.750085830688477
    4. '−' → logprob: -18.625085830688477
    5. '–' → logprob: -19.125085830688477
    6. '```' → logprob: -20.000085830688477
    7. '<|end|>' → logprob: -20.875085830688477
    8. '1' → logprob: -20.875085830688477
    9. ''-' → logprob: -21.625085830688477
    10. '   ' → logprob: -21.875085830688477

Token 714: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '
' → logprob: -16.125001907348633
    4. '<|end|>' → logprob: -16.375001907348633
    5. '```' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.250001907348633
    7. '       ' → logprob: -18.375001907348633
    8. '<|end|>' → logprob: -18.375001907348633
    9. '...' → logprob: -18.500001907348633
    10. '-' → logprob: -18.625001907348633

Token 715: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04769441857933998
    2. ':
' → logprob: -3.172694444656372
    3. ' and' → logprob: -5.547694206237793
    4. '               ' → logprob: -7.547694206237793
    5. '           ' → logprob: -8.922694206237793
    6. 'and' → logprob: -10.047694206237793
    7. '):' → logprob: -11.047694206237793
    8. '<|end|>' → logprob: -11.297694206237793
    9. ':return' → logprob: -11.547694206237793
    10. '):
' → logprob: -11.547694206237793

Token 716: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010305485688149929
    2. ':
' → logprob: -5.010305404663086
    3. ':' → logprob: -6.135305404663086
    4. '):
' → logprob: -8.260305404663086
    5. '<|end|>' → logprob: -8.385305404663086
    6. '           ' → logprob: -8.510305404663086
    7. ',' → logprob: -8.510305404663086
    8. '                   ' → logprob: -8.885305404663086
    9. '```' → logprob: -9.135305404663086
    10. '              ' → logprob: -10.010305404663086

Token 717: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.1544780284166336
    2. ' ans' → logprob: -2.404478073120117
    3. '               ' → logprob: -3.029478073120117
    4. '           ' → logprob: -6.279478073120117
    5. '                   ' → logprob: -6.779478073120117
    6. '	ans' → logprob: -7.029478073120117
    7. '   ' → logprob: -8.404478073120117
    8. 'answer' → logprob: -8.904478073120117
    9. '
' → logprob: -9.154478073120117
    10. '(ans' → logprob: -9.529478073120117

Token 718: '=j' (ID: 104163)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02326609380543232
    2. ' =' → logprob: -3.773266077041626
    3. '=j' → logprob: -11.023265838623047
    4. '=
' → logprob: -13.523265838623047
    5. '=f' → logprob: -14.273265838623047
    6. '=n' → logprob: -14.648265838623047
    7. '=int' → logprob: -15.023265838623047
    8. '=end' → logprob: -15.148265838623047
    9. '＝' → logprob: -15.148265838623047
    10. '=True' → logprob: -15.898265838623047

Token 719: 'umps' (ID: 14938)
  Prédit: 'umps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umps' → logprob: -4.143808109802194e-05
    2. 'm' → logprob: -10.750041007995605
    3. 'ump' → logprob: -12.000041007995605
    4. '   ' → logprob: -12.000041007995605
    5. '           ' → logprob: -13.750041007995605
    6. '       ' → logprob: -14.125041007995605
    7. 'um' → logprob: -14.250041007995605
    8. 'u' → logprob: -14.500041007995605
    9. '               ' → logprob: -14.500041007995605
    10. 'mp' → logprob: -15.250041007995605

Token 720: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.464347173576243e-05
    2. '			' → logprob: -10.75003433227539
    3. '	           ' → logprob: -12.37503433227539
    4. '                   ' → logprob: -12.62503433227539
    5. '           ' → logprob: -13.37503433227539
    6. '		       ' → logprob: -13.75003433227539
    7. 'break' → logprob: -14.62503433227539
    8. '              ' → logprob: -14.62503433227539
    9. '                
' → logprob: -14.87503433227539
    10. '	break' → logprob: -15.25003433227539

Token 721: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002226093056378886
    2. '                   ' → logprob: -9.250222206115723
    3. '           ' → logprob: -10.375222206115723
    4. '			' → logprob: -10.750222206115723
    5. '              ' → logprob: -10.875222206115723
    6. '                       ' → logprob: -11.000222206115723
    7. '	           ' → logprob: -11.750222206115723
    8. '<|end|>' → logprob: -12.000222206115723
    9. '             ' → logprob: -12.250222206115723
    10. '                ' → logprob: -12.625222206115723

Token 722: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2028588354587555
    2. 'break' (adapté à ' break') → logprob: -1.702858805656433
    3. '           ' → logprob: -6.702858924865723
    4. ' break' → logprob: -9.202858924865723
    5. '	break' → logprob: -9.702858924865723
    6. '			' → logprob: -10.077858924865723
    7. '	           ' → logprob: -12.452858924865723
    8. '		       ' → logprob: -12.952858924865723
    9. 'print' → logprob: -13.202858924865723
    10. '		' → logprob: -13.577858924865723

Token 723: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.129266067640856e-05
    2. ' for' → logprob: -11.750020980834961
    3. '
' → logprob: -12.625020980834961
    4. '            
' → logprob: -12.625020980834961
    5. '               ' → logprob: -13.125020980834961
    6. '       ' → logprob: -13.125020980834961
    7. 'for' → logprob: -13.875020980834961
    8. '          ' → logprob: -14.625020980834961
    9. '   ' → logprob: -14.750020980834961
    10. '    
' → logprob: -15.625020980834961

Token 724: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05359434708952904
    2. 'for' → logprob: -3.9285943508148193
    3. ' for' → logprob: -4.30359411239624
    4. '       ' → logprob: -4.67859411239624
    5. '   ' → logprob: -4.92859411239624
    6. '
' → logprob: -6.55359411239624
    7. '```' → logprob: -7.17859411239624
    8. '            
' → logprob: -9.428594589233398
    9. '	for' → logprob: -9.928594589233398
    10. 'next' → logprob: -10.178594589233398

Token 725: ' other' (ID: 1273)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6418775320053101
    2. 'other' (adapté à ' other') → logprob: -0.7668775320053101
    3. 'op' → logprob: -5.1418776512146
    4. 'next' → logprob: -6.3918776512146
    5. '```' → logprob: -7.2668776512146
    6. 'opp' → logprob: -7.7668776512146
    7. ' for' → logprob: -8.641877174377441
    8. '           ' → logprob: -8.891877174377441
    9. 'new' → logprob: -9.516877174377441
    10. 'side' → logprob: -9.766877174377441

Token 726: ' =' (ID: 314)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.0009785055881366134
    2. 'side' → logprob: -7.375978469848633
    3. ' side' → logprob: -8.250978469848633
    4. 'Side' → logprob: -10.125978469848633
    5. '=' → logprob: -10.625978469848633
    6. '_SIDE' → logprob: -11.375978469848633
    7. ' =' → logprob: -12.250978469848633
    8. '-side' → logprob: -13.125978469848633
    9. ' _' → logprob: -13.250978469848633
    10. ',' → logprob: -13.750978469848633

Token 727: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00118368084076792
    2. ' ' → logprob: -6.75118350982666
    3. '0' → logprob: -12.00118350982666
    4. 'side' → logprob: -12.12618350982666
    5. ' side' → logprob: -13.87618350982666
    6. '(side' → logprob: -14.12618350982666
    7. '(' → logprob: -15.87618350982666
    8. '   ' → logprob: -16.251184463500977
    9. '```' → logprob: -17.376184463500977
    10. '
' → logprob: -17.626184463500977

Token 728: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014734375290572643
    2. ' ' → logprob: -6.626473426818848
    3. 'side' → logprob: -9.251473426818848
    4. '0' → logprob: -10.251473426818848
    5. ' side' → logprob: -11.876473426818848
    6. '(side' → logprob: -11.876473426818848
    7. '(' → logprob: -13.251473426818848
    8. '   ' → logprob: -15.501473426818848
    9. '
' → logprob: -15.751473426818848
    10. '```' → logprob: -16.126474380493164

Token 729: '-side' (ID: 34433)
  Prédit: '-side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-side' → logprob: -0.10628678649663925
    2. ' -' → logprob: -2.3562867641448975
    3. '-' → logprob: -5.106287002563477
    4. '-sidebar' → logprob: -13.856287002563477
    5. '-S' → logprob: -13.981287002563477
    6. '-
' → logprob: -15.231287002563477
    7. '^' → logprob: -15.481287002563477
    8. '-sided' → logprob: -15.606287002563477
    9. '
' → logprob: -15.731287002563477
    10. 'side' → logprob: -16.106287002563477

Token 730: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0328130722045898
    2. ' for' → logprob: -1.2828130722045898
    3. '
' → logprob: -1.4078130722045898
    4. 'for' → logprob: -2.65781307220459
    5. '<|end|>' → logprob: -3.28281307220459
    6. '<|end|>' → logprob: -4.90781307220459
    7. '            
' → logprob: -5.53281307220459
    8. ',' → logprob: -6.90781307220459
    9. '       ' → logprob: -7.78281307220459
    10. '  
' → logprob: -8.15781307220459

Token 731: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5173968076705933
    2. ' for' → logprob: -1.2673968076705933
    3. '<|end|>' → logprob: -3.017396926879883
    4. 'for' → logprob: -3.392396926879883
    5. '
' → logprob: -4.392396926879883
    6. '	for' → logprob: -5.017396926879883
    7. '       ' → logprob: -5.267396926879883
    8. ',' → logprob: -5.767396926879883
    9. '<|end|>' → logprob: -5.892396926879883
    10. '		' → logprob: -6.517396926879883

Token 732: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004998935619369149
    2. ' for' → logprob: -8.125499725341797
    3. '           ' → logprob: -8.500499725341797
    4. '```' → logprob: -15.750499725341797
    5. '	for' → logprob: -16.500499725341797
    6. '            
' → logprob: -17.000499725341797
    7. 'next' → logprob: -17.250499725341797
    8. '       ' → logprob: -17.375499725341797
    9. '
' → logprob: -17.625499725341797
    10. '   ' → logprob: -17.750499725341797

Token 733: ' df' (ID: 13742)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.19880154728889465
    2. 'offset' → logprob: -2.9488015174865723
    3. 'next' → logprob: -3.4488015174865723
    4. 'nf' → logprob: -3.8238015174865723
    5. 'floor' → logprob: -3.9488015174865723
    6. 'delta' → logprob: -4.198801517486572
    7. 'df' → logprob: -4.573801517486572
    8. ' f' → logprob: -5.448801517486572
    9. 'diff' → logprob: -5.448801517486572
    10. 'target' → logprob: -5.573801517486572

Token 734: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028164091054350138
    2. 'in' → logprob: -5.877816200256348
    3. ' ' → logprob: -11.877816200256348
    4. 'd' → logprob: -13.502816200256348
    5. 'f' → logprob: -14.002816200256348
    6. '	in' → logprob: -14.377816200256348
    7. '=' → logprob: -15.502816200256348
    8. 's' → logprob: -15.627816200256348
    9. '```' → logprob: -15.627816200256348
    10. '  ' → logprob: -15.877816200256348

Token 735: ' (' (ID: 350)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08103475719690323
    2. 'range' → logprob: -2.5810346603393555
    3. '0' → logprob: -6.3310346603393555
    4. ' ' → logprob: -8.206034660339355
    5. ' floor' → logprob: -10.206034660339355
    6. 'floor' → logprob: -11.581034660339355
    7. ' df' → logprob: -11.706034660339355
    8. ' (' → logprob: -11.831034660339355
    9. '(range' → logprob: -12.206034660339355
    10. 'df' → logprob: -12.456034660339355

Token 736: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007882834412157536
    2. ' ' → logprob: -5.132883071899414
    3. 'floor' → logprob: -6.507883071899414
    4. ' floor' → logprob: -7.757883071899414
    5. '-' → logprob: -11.507883071899414
    6. ' -' → logprob: -12.507883071899414
    7. ',' → logprob: -12.695383071899414
    8. '1' → logprob: -12.820383071899414
    9. '-floor' → logprob: -12.820383071899414
    10. '   ' → logprob: -12.882883071899414

Token 737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015247372211888433
    2. ' ,' → logprob: -6.501524925231934
    3. ',+' → logprob: -11.626524925231934
    4. '1' → logprob: -12.626524925231934
    5. ',d' → logprob: -12.751524925231934
    6. ',
' → logprob: -12.751524925231934
    7. ',next' → logprob: -13.751524925231934
    8. ' ' → logprob: -14.376524925231934
    9. '   ' → logprob: -14.626524925231934
    10. ',len' → logprob: -15.376524925231934

Token 738: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.625296592712402
    4. '+' → logprob: -17.250295639038086
    5. '  ' → logprob: -17.750295639038086
    6. '
' → logprob: -19.250295639038086
    7. '    ' → logprob: -20.125295639038086
    8. ' ' → logprob: -20.125295639038086
    9. ' +' → logprob: -20.750295639038086
    10. ',' → logprob: -20.750295639038086

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011951096821576357
    2. ' ,' → logprob: -6.751194953918457
    3. '2' → logprob: -11.251194953918457
    4. ',
' → logprob: -11.626194953918457
    5. '):
' → logprob: -14.376194953918457
    6. ' ' → logprob: -14.626194953918457
    7. '   ' → logprob: -14.751194953918457
    8. ',+' → logprob: -14.751194953918457
    9. '       ' → logprob: -15.626194953918457
    10. ',next' → logprob: -15.751194953918457

Token 740: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.375261306762695
    4. '  ' → logprob: -16.250261306762695
    5. '
' → logprob: -17.375261306762695
    6. ')' → logprob: -17.625261306762695
    7. '۲' → logprob: -18.125261306762695
    8. '２' → logprob: -18.250261306762695
    9. ',' → logprob: -18.375261306762695
    10. '    ' → logprob: -18.375261306762695

Token 741: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2519606649875641
    2. '):' → logprob: -1.5019606351852417
    3. '):
' → logprob: -10.876960754394531
    4. '):

' → logprob: -12.001960754394531
    5. ')' → logprob: -13.001960754394531
    6. '       ' → logprob: -13.876960754394531
    7. '   ' → logprob: -13.876960754394531
    8. ':' → logprob: -14.001960754394531
    9. ',' → logprob: -14.751960754394531
    10. ' ):
' → logprob: -15.126960754394531

Token 742: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00583838764578104
    2. '<|end|>' → logprob: -6.130838394165039
    3. ',' → logprob: -6.880838394165039
    4. ':
' → logprob: -7.380838394165039
    5. '	           ' → logprob: -7.880838394165039
    6. '           ' → logprob: -8.380838394165039
    7. '                
' → logprob: -8.755838394165039
    8. '<|end|>' → logprob: -8.880838394165039
    9. ':' → logprob: -9.130838394165039
    10. '			' → logprob: -9.255838394165039

Token 743: ' nf' (ID: 89636)
  Prédit: ' nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nf' → logprob: -0.7048519253730774
    2. 'nf' (adapté à ' nf') → logprob: -1.0798518657684326
    3. ' new' → logprob: -2.5798518657684326
    4. ' next' → logprob: -3.2048518657684326
    5. 'next' → logprob: -4.454852104187012
    6. 'new' → logprob: -4.579852104187012
    7. ' if' → logprob: -5.329852104187012
    8. '                   ' → logprob: -5.329852104187012
    9. ' floor' → logprob: -5.454852104187012
    10. ' nxt' → logprob: -5.829852104187012

Token 744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25440195202827454
    2. ' =' → logprob: -1.5044019222259521
    3. '=f' → logprob: -6.004402160644531
    4. '=
' → logprob: -13.879402160644531
    5. '=n' → logprob: -14.629402160644531
    6. ' =
' → logprob: -16.75440216064453
    7. 'floor' → logprob: -16.75440216064453
    8. '＝' → logprob: -16.87940216064453
    9. '=

' → logprob: -16.87940216064453
    10. '=int' → logprob: -17.00440216064453

Token 745: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.3485066294670105
    2. ' floor' → logprob: -1.2235066890716553
    3. 'other' → logprob: -11.098506927490234
    4. 'f' → logprob: -11.348506927490234
    5. ' ' → logprob: -11.973506927490234
    6. ' other' → logprob: -12.223506927490234
    7. 'flo' → logprob: -12.223506927490234
    8. '   ' → logprob: -12.848506927490234
    9. '_floor' → logprob: -13.098506927490234
    10. '  ' → logprob: -13.223506927490234

Token 746: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740793704986572
    2. '+' → logprob: -0.9740793704986572
    3. '+n' → logprob: -13.349079132080078
    4. '+k' → logprob: -15.849079132080078
    5. '＋' → logprob: -16.349079132080078
    6. '+d' → logprob: -16.474079132080078
    7. ')+' → logprob: -16.474079132080078
    8. '+
' → logprob: -16.474079132080078
    9. '+j' → logprob: -16.724079132080078
    10. ' ' → logprob: -17.224079132080078

Token 747: 'df' (ID: 4750)
  Prédit: 'df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -9.615255839889869e-05
    2. ' df' → logprob: -9.250096321105957
    3. '	df' → logprob: -18.50009536743164
    4. '_df' → logprob: -20.00009536743164
    5. '(df' → logprob: -20.25009536743164
    6. '   ' → logprob: -20.87509536743164
    7. '[df' → logprob: -21.00009536743164
    8. 'dfs' → logprob: -21.25009536743164
    9. '.df' → logprob: -21.50009536743164
    10. ' ' → logprob: -22.00009536743164

Token 748: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 749: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02926761843264103
    2. '<|end|>' → logprob: -3.9042675495147705
    3. ' if' → logprob: -5.65426778793335
    4. '			' → logprob: -6.52926778793335
    5. '<|end|>' → logprob: -7.27926778793335
    6. '                   ' → logprob: -7.77926778793335
    7. 'if' → logprob: -7.90426778793335
    8. '                ' → logprob: -7.90426778793335
    9. '                
' → logprob: -8.154267311096191
    10. '
' → logprob: -8.404267311096191

Token 750: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19165033102035522
    2. ' if' → logprob: -1.816650390625
    3. 'if' (adapté à ' if') → logprob: -4.941650390625
    4. '
' → logprob: -5.816650390625
    5. '                ' → logprob: -7.816650390625
    6. '<|end|>' → logprob: -7.941650390625
    7. '                
' → logprob: -8.066650390625
    8. ' 
' → logprob: -8.441650390625
    9. ',' → logprob: -9.316650390625
    10. '                   ' → logprob: -9.941650390625

Token 751: ' nf' (ID: 89636)
  Prédit: ' nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nf' → logprob: -0.056044794619083405
    2. 'nf' → logprob: -2.931044816970825
    3. '<n' → logprob: -7.556044578552246
    4. '0' → logprob: -7.931044578552246
    5. 'n' → logprob: -8.431044578552246
    6. ' n' → logprob: -11.056044578552246
    7. ' ' → logprob: -11.306044578552246
    8. '_nf' → logprob: -11.556044578552246
    9. '<' → logprob: -11.681044578552246
    10. ' <' → logprob: -12.181044578552246

Token 752: '>=' (ID: 20974)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.16092544794082642
    2. ' <' → logprob: -2.1609253883361816
    3. '<' → logprob: -3.4109253883361816
    4. '<len' → logprob: -8.91092586517334
    5. '<num' → logprob: -9.53592586517334
    6. '<N' → logprob: -9.53592586517334
    7. '<|end|>' → logprob: -9.53592586517334
    8. '<size' → logprob: -10.41092586517334
    9. '<int' → logprob: -11.41092586517334
    10. 'n' → logprob: -12.53592586517334

Token 753: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007099286303855479
    2. ' n' → logprob: -7.2507100105285645
    3. '0' → logprob: -17.875709533691406
    4. '	n' → logprob: -18.500709533691406
    5. '
' → logprob: -19.125709533691406
    6. ')n' → logprob: -19.500709533691406
    7. '<n' → logprob: -20.125709533691406
    8. '   ' → logprob: -20.125709533691406
    9. '_n' → logprob: -21.000709533691406
    10. '<|end|>' → logprob: -21.125709533691406

Token 754: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49806779623031616
    2. ':
' → logprob: -1.373067855834961
    3. ' or' → logprob: -1.998067855834961
    4. '                   ' → logprob: -7.123067855834961
    5. '               ' → logprob: -7.248067855834961
    6. 'or' → logprob: -7.248067855834961
    7. ':return' → logprob: -7.248067855834961
    8. '                       ' → logprob: -8.373067855834961
    9. '           ' → logprob: -9.873067855834961
    10. '<|end|>' → logprob: -10.373067855834961

Token 755: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20117345452308655
    2. ':
' → logprob: -2.2011735439300537
    3. ':' → logprob: -2.8261735439300537
    4. ' continue' → logprob: -5.451173305511475
    5. '                       ' → logprob: -5.701173305511475
    6. '               ' → logprob: -6.826173305511475
    7. ' and' → logprob: -6.826173305511475
    8. 'continue' → logprob: -7.201173305511475
    9. ' or' → logprob: -7.451173305511475
    10. '	continue' → logprob: -8.451173782348633

Token 756: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.20706920325756073
    2. '                   ' → logprob: -1.7070691585540771
    3. ' continue' → logprob: -5.207069396972656
    4. '   ' → logprob: -9.957069396972656
    5. '	continue' → logprob: -10.207069396972656
    6. '                       ' → logprob: -10.332069396972656
    7. '               ' → logprob: -11.082069396972656
    8. 'break' → logprob: -11.082069396972656
    9. '           ' → logprob: -12.207069396972656
    10. '
' → logprob: -12.207069396972656

Token 757: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021641887724399567
    2. '                   ' → logprob: -4.521641731262207
    3. '                
' → logprob: -5.146641731262207
    4. '
' → logprob: -6.521641731262207
    5. '                    
' → logprob: -7.521641731262207
    6. '<|end|>' → logprob: -7.521641731262207
    7. ' and' → logprob: -7.896641731262207
    8. '```' → logprob: -8.021641731262207
    9. '                       ' → logprob: -8.771641731262207
    10. '                ' → logprob: -8.896641731262207

Token 758: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11105872690677643
    2. 'next' → logprob: -3.1110587120056152
    3. 'other' → logprob: -3.3610587120056152
    4. '
' → logprob: -4.861058712005615
    5. '                
' → logprob: -4.861058712005615
    6. ' next' → logprob: -5.111058712005615
    7. ' other' → logprob: -6.986058712005615
    8. 'new' → logprob: -7.111058712005615
    9. 'side' → logprob: -7.236058712005615
    10. 'nf' → logprob: -7.486058712005615

Token 759: ' nf' (ID: 89636)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.20777428150177002
    2. 'next' → logprob: -2.5827741622924805
    3. 'nf' (adapté à ' nf') → logprob: -2.9577741622924805
    4. 'n' → logprob: -3.5827741622924805
    5. 'new' → logprob: -3.9577741622924805
    6. '               ' → logprob: -5.3327741622924805
    7. 'nj' → logprob: -5.5827741622924805
    8. 'side' → logprob: -6.3327741622924805
    9. 'npos' → logprob: -7.7077741622924805
    10. 'nt' → logprob: -7.8327741622924805

Token 760: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018207652494311333
    2. ' =' → logprob: -4.018207550048828
    3. '=
' → logprob: -11.143207550048828
    4. '_next' → logprob: -11.268207550048828
    5. 'next' → logprob: -11.893207550048828
    6. ')' → logprob: -12.143207550048828
    7. ')=' → logprob: -12.643207550048828
    8. '_=' → logprob: -13.268207550048828
    9. ',next' → logprob: -13.268207550048828
    10. ',' → logprob: -13.393207550048828

Token 761: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038044244050979614
    2. ' =' → logprob: -3.2880442142486572
    3. '=
' → logprob: -13.288043975830078
    4. ')' → logprob: -14.788043975830078
    5. ')=' → logprob: -15.288043975830078
    6. ',' → logprob: -16.163043975830078
    7. '=n' → logprob: -16.288043975830078
    8. ']=' → logprob: -17.038043975830078
    9. ',next' → logprob: -17.038043975830078
    10. 'next' → logprob: -17.163043975830078

Token 762: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.020689258351922035
    2. ' next' → logprob: -3.8956892490386963
    3. 'nf' → logprob: -9.270689010620117
    4. '(next' → logprob: -11.645689010620117
    5. 'other' → logprob: -11.770689010620117
    6. '
' → logprob: -12.020689010620117
    7. '	next' → logprob: -12.395689010620117
    8. '           ' → logprob: -12.520689010620117
    9. '   ' → logprob: -12.520689010620117
    10. ' nf' → logprob: -13.083189010620117

Token 763: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -1.3856492842023727e-06
    2. 'Floor' → logprob: -14.250000953674316
    3. 'floor' → logprob: -14.500000953674316
    4. '```' → logprob: -16.500001907348633
    5. '(' → logprob: -17.375001907348633
    6. '_' → logprob: -17.500001907348633
    7. '_f' → logprob: -17.625001907348633
    8. '(_' → logprob: -17.750001907348633
    9. '_side' → logprob: -18.625001907348633
    10. '(f' → logprob: -18.875001907348633

Token 764: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -12.12501049041748
    3. '(side' → logprob: -12.25001049041748
    4. ' (' → logprob: -16.250011444091797
    5. '(one' → logprob: -17.000011444091797
    6. '(
' → logprob: -17.125011444091797
    7. '(the' → logprob: -17.625011444091797
    8. 'other' → logprob: -17.875011444091797
    9. '(old' → logprob: -19.125011444091797
    10. '```' → logprob: -19.250011444091797

Token 765: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.0794290155172348
    2. ',' → logprob: -2.7044289112091064
    3. '(n' → logprob: -4.7044291496276855
    4. ' ,' → logprob: -9.079428672790527
    5. ' (' → logprob: -9.329428672790527
    6. '(' → logprob: -9.704428672790527
    7. ',(' → logprob: -10.079428672790527
    8. ')' → logprob: -10.579428672790527
    9. '(side' → logprob: -11.579428672790527
    10. ',f' → logprob: -11.829428672790527

Token 766: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.3856492842023727e-06
    2. 'ф' → logprob: -14.375000953674316
    3. 'nf' → logprob: -15.625000953674316
    4. '
' → logprob: -16.000001907348633
    5. '[f' → logprob: -16.125001907348633
    6. '```' → logprob: -16.250001907348633
    7. '_nf' → logprob: -16.750001907348633
    8. '_f' → logprob: -17.000001907348633
    9. '	f' → logprob: -17.500001907348633
    10. '[' → logprob: -17.875001907348633

Token 767: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017345275729894638
    2. ')
' → logprob: -4.142345428466797
    3. '               ' → logprob: -6.642345428466797
    4. ')
' → logprob: -12.642345428466797
    5. ' )' → logprob: -14.517345428466797
    6. '           ' → logprob: -14.767345428466797
    7. '                   ' → logprob: -14.892345428466797
    8. ')

' → logprob: -14.892345428466797
    9. '              ' → logprob: -15.517345428466797
    10. '),' → logprob: -15.517345428466797

Token 768: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00807950459420681
    2. '<|end|>' → logprob: -5.008079528808594
    3. '                
' → logprob: -7.758079528808594
    4. '```' → logprob: -8.258079528808594
    5. ')' → logprob: -8.883079528808594
    6. ' if' → logprob: -9.258079528808594
    7. '                   ' → logprob: -9.383079528808594
    8. '<|end|>' → logprob: -9.633079528808594
    9. '                ' → logprob: -10.008079528808594
    10. '			' → logprob: -10.383079528808594

Token 769: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6204540729522705
    2. ' if' → logprob: -1.1204540729522705
    3. 'if' (adapté à ' if') → logprob: -1.9954540729522705
    4. '```' → logprob: -8.870453834533691
    5. 'visited' → logprob: -11.120453834533691
    6. '                   ' → logprob: -11.120453834533691
    7. '                ' → logprob: -11.495453834533691
    8. '
' → logprob: -11.495453834533691
    9. '              ' → logprob: -12.120453834533691
    10. '                
' → logprob: -12.620453834533691

Token 770: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12697052955627441
    2. 'not' → logprob: -2.1269705295562744
    3. ' nf' → logprob: -10.626970291137695
    4. 'nf' → logprob: -11.126970291137695
    5. '(not' → logprob: -13.251970291137695
    6. '	not' → logprob: -13.876970291137695
    7. 'visited' → logprob: -14.376970291137695
    8. '_nf' → logprob: -16.501970291137695
    9. ' visited' → logprob: -17.126970291137695
    10. 'n' → logprob: -17.251970291137695

Token 771: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0059290360659360886
    2. ' visited' → logprob: -5.130928993225098
    3. 'visible' → logprob: -15.755928993225098
    4. 'visit' → logprob: -16.505929946899414
    5. '   ' → logprob: -16.630929946899414
    6. '
' → logprob: -17.130929946899414
    7. 'Visited' → logprob: -17.130929946899414
    8. ' ' → logprob: -17.630929946899414
    9. '(' → logprob: -18.005929946899414
    10. 'vis' → logprob: -18.380929946899414

Token 772: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.988221684878226e-06
    2. 'other' → logprob: -12.250006675720215
    3. '[next' → logprob: -14.500006675720215
    4. '
' → logprob: -15.375006675720215
    5. '```' → logprob: -15.750006675720215
    6. '(other' → logprob: -15.875006675720215
    7. '[n' → logprob: -16.00000762939453
    8. ' other' → logprob: -16.12500762939453
    9. '[user' → logprob: -16.25000762939453
    10. '<|end|>' → logprob: -16.50000762939453

Token 773: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.5048530030981055e-06
    2. ' other' → logprob: -13.500001907348633
    3. '[' → logprob: -16.875001907348633
    4. '(other' → logprob: -19.000001907348633
    5. '.other' → logprob: -21.875001907348633
    6. '][' → logprob: -22.000001907348633
    7. '
' → logprob: -22.125001907348633
    8. '_other' → logprob: -22.375001907348633
    9. 'side' → logprob: -22.875001907348633
    10. ']' → logprob: -23.000001907348633

Token 774: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2812076807022095
    2. '[' → logprob: -1.4062076807022095
    3. '[n' → logprob: -10.906208038330078
    4. ''][' → logprob: -11.531208038330078
    5. '"][' → logprob: -11.906208038330078
    6. ' ][' → logprob: -12.156208038330078
    7. ')[' → logprob: -12.781208038330078
    8. '               ' → logprob: -12.906208038330078
    9. ']' → logprob: -13.031208038330078
    10. '```' → logprob: -13.156208038330078

Token 775: 'nf' (ID: 51054)
  Prédit: 'nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.38725313544273376
    2. 'other' → logprob: -1.1372531652450562
    3. ' nf' → logprob: -8.012252807617188
    4. '_nf' → logprob: -11.012252807617188
    5. '
' → logprob: -11.262252807617188
    6. '[n' → logprob: -12.137252807617188
    7. '[' → logprob: -12.512252807617188
    8. '][' → logprob: -12.637252807617188
    9. '
' → logprob: -13.887252807617188
    10. '```' → logprob: -14.012252807617188

Token 776: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001895935565698892
    2. '[' → logprob: -8.750189781188965
    3. '][' → logprob: -10.875189781188965
    4. ']' → logprob: -11.750189781188965
    5. '```' → logprob: -13.375189781188965
    6. '
' → logprob: -14.250189781188965
    7. '               ' → logprob: -14.375189781188965
    8. '   ' → logprob: -14.625189781188965
    9. '       ' → logprob: -15.000189781188965
    10. '[n' → logprob: -15.500189781188965

Token 777: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.030377456918358803
    2. ']:' → logprob: -3.5303773880004883
    3. ']' → logprob: -7.655377388000488
    4. ']:

' → logprob: -9.655377388000488
    5. '[' → logprob: -10.405377388000488
    6. ']:
' → logprob: -10.655377388000488
    7. ']]:
' → logprob: -11.155377388000488
    8. ':
' → logprob: -12.030377388000488
    9. '']:
' → logprob: -12.405377388000488
    10. '][' → logprob: -12.655377388000488

Token 778: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007252985378727317
    2. '               ' → logprob: -7.750725269317627
    3. '                       ' → logprob: -9.125725746154785
    4. '                           ' → logprob: -10.250725746154785
    5. '```' → logprob: -10.375725746154785
    6. '                               ' → logprob: -10.625725746154785
    7. '   ' → logprob: -10.750725746154785
    8. ' visited' → logprob: -11.125725746154785
    9. '<|end|>' → logprob: -11.375725746154785
    10. 'visited' → logprob: -11.625725746154785

Token 779: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.12168487906455994
    2. '                   ' → logprob: -2.3716847896575928
    3. '                       ' → logprob: -4.496685028076172
    4. ' visited' → logprob: -4.621685028076172
    5. '               ' → logprob: -9.246685028076172
    6. '                    ' → logprob: -10.121685028076172
    7. '```' → logprob: -10.496685028076172
    8. '   ' → logprob: -10.621685028076172
    9. '       ' → logprob: -10.871685028076172
    10. '           ' → logprob: -10.996685028076172

Token 780: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -17.25
    3. '                   ' → logprob: -17.375
    4. '   ' → logprob: -17.625
    5. '```' → logprob: -17.75
    6. '
' → logprob: -18.75
    7. '][' → logprob: -19.125
    8. '[
' → logprob: -19.375
    9. '[[' → logprob: -19.375
    10. '               ' → logprob: -19.375

Token 781: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0052354102954268456
    2. '[' → logprob: -5.255235195159912
    3. '
' → logprob: -14.25523567199707
    4. '(other' → logprob: -14.75523567199707
    5. ' other' → logprob: -15.50523567199707
    6. '0' → logprob: -16.38023567199707
    7. '(' → logprob: -16.75523567199707
    8. '[
' → logprob: -17.13023567199707
    9. '][' → logprob: -17.25523567199707
    10. '`' → logprob: -17.50523567199707

Token 782: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.029755927622318268
    2. '[' → logprob: -3.5297558307647705
    3. ']' → logprob: -12.904755592346191
    4. ''][' → logprob: -13.904755592346191
    5. ')[' → logprob: -14.529755592346191
    6. ' ][' → logprob: -14.654755592346191
    7. '"][' → logprob: -14.904755592346191
    8. '```' → logprob: -15.029755592346191
    9. '   ' → logprob: -16.029756546020508
    10. '                   ' → logprob: -16.529756546020508

Token 783: 'nf' (ID: 51054)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3132867217063904
    2. 'nf' → logprob: -1.3132867813110352
    3. ' nf' → logprob: -10.938286781311035
    4. '_nf' → logprob: -12.563286781311035
    5. '[' → logprob: -14.438286781311035
    6. ' other' → logprob: -14.563286781311035
    7. '(other' → logprob: -14.813286781311035
    8. 'oth' → logprob: -14.938286781311035
    9. '_other' → logprob: -14.938286781311035
    10. 'old' → logprob: -15.313286781311035

Token 784: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000498701527249068
    2. '[' → logprob: -7.6254987716674805
    3. '][' → logprob: -11.87549877166748
    4. ']' → logprob: -13.75049877166748
    5. '   ' → logprob: -13.75049877166748
    6. '```' → logprob: -13.87549877166748
    7. '[
' → logprob: -15.00049877166748
    8. '       ' → logprob: -16.250497817993164
    9. '
' → logprob: -16.500497817993164
    10. ']
' → logprob: -17.625497817993164

Token 785: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.01326728705316782
    2. ']' → logprob: -4.513267517089844
    3. '=True' → logprob: -6.763267517089844
    4. '=' → logprob: -6.888267517089844
    5. '                   ' → logprob: -10.763267517089844
    6. ')=' → logprob: -11.263267517089844
    7. '']=' → logprob: -12.638267517089844
    8. '=False' → logprob: -13.388267517089844
    9. '                       ' → logprob: -14.263267517089844
    10. ']==' → logprob: -14.888267517089844

Token 786: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.128163257315464e-07
    2. ' True' → logprob: -15.25
    3. '=True' → logprob: -21.125
    4. '(True' → logprob: -22.0
    5. '[' → logprob: -23.0
    6. 'true' → logprob: -23.5
    7. '   ' → logprob: -24.125
    8. 'False' → logprob: -24.25
    9. '1' → logprob: -24.625
    10. '
' → logprob: -24.75

Token 787: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011701007373631
    2. '				' → logprob: -5.5117011070251465
    3. 'q' → logprob: -6.0117011070251465
    4. '```' → logprob: -6.0117011070251465
    5. '                       ' → logprob: -7.1367011070251465
    6. '               ' → logprob: -7.2617011070251465
    7. ' q' → logprob: -8.636700630187988
    8. '
' → logprob: -8.636700630187988
    9. '	q' → logprob: -8.761700630187988
    10. '``' → logprob: -9.261700630187988

Token 788: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03928838297724724
    2. 'q' → logprob: -3.914288282394409
    3. '				' → logprob: -4.914288520812988
    4. '```' → logprob: -5.289288520812988
    5. '                       ' → logprob: -6.664288520812988
    6. '	q' → logprob: -6.664288520812988
    7. '               ' → logprob: -6.664288520812988
    8. ' q' → logprob: -7.164288520812988
    9. '``' → logprob: -8.789288520812988
    10. '			       ' → logprob: -8.914288520812988

Token 789: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -3.292907877039397e-06
    2. '                   ' → logprob: -13.37500286102295
    3. ' q' → logprob: -13.50000286102295
    4. '	q' → logprob: -15.62500286102295
    5. '                       ' → logprob: -16.625003814697266
    6. 'deque' → logprob: -17.625003814697266
    7. '   ' → logprob: -18.500003814697266
    8. '```' → logprob: -19.125003814697266
    9. '                    ' → logprob: -19.750003814697266
    10. '               ' → logprob: -20.375003814697266

Token 790: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.9186317482963204e-05
    2. '.' → logprob: -10.500049591064453
    3. '.extend' → logprob: -11.125049591064453
    4. '.enqueue' → logprob: -12.250049591064453
    5. '.app' → logprob: -14.625049591064453
    6. '.Append' → logprob: -14.875049591064453
    7. '```' → logprob: -15.125049591064453
    8. '.push' → logprob: -15.250049591064453
    9. '                   ' → logprob: -15.625049591064453
    10. ').' → logprob: -15.750049591064453

Token 791: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.009842499159276485
    2. '(' → logprob: -4.634842395782471
    3. '(
' → logprob: -10.009842872619629
    4. '```' → logprob: -11.384842872619629
    5. '   ' → logprob: -11.759842872619629
    6. ' ((' → logprob: -11.884842872619629
    7. '(((' → logprob: -11.884842872619629
    8. ' (' → logprob: -12.884842872619629
    9. '(('' → logprob: -13.884842872619629
    10. '(([' → logprob: -14.259842872619629

Token 792: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -9.088346359931165e-07
    2. ' other' → logprob: -14.000000953674316
    3. '(other' → logprob: -19.0
    4. '.other' → logprob: -21.125
    5. '   ' → logprob: -23.625
    6. 'Other' → logprob: -23.75
    7. '_other' → logprob: -24.0
    8. 'others' → logprob: -24.25
    9. '
' → logprob: -24.375
    10. 'othe' → logprob: -25.125

Token 793: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.062157806009054184
    2. ',' → logprob: -2.8121578693389893
    3. ',f' → logprob: -10.06215763092041
    4. ',
' → logprob: -10.06215763092041
    5. ' ,' → logprob: -10.18715763092041
    6. '`,`' → logprob: -10.93715763092041
    7. '                   ' → logprob: -11.56215763092041
    8. ',[' → logprob: -11.56215763092041
    9. '`,' → logprob: -11.68715763092041
    10. '[' → logprob: -12.68715763092041

Token 794: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004628057591617107
    2. '2' → logprob: -5.3796281814575195
    3. 'nf' → logprob: -12.87962818145752
    4. 'floor' → logprob: -13.87962818145752
    5. '[f' → logprob: -14.00462818145752
    6. '
' → logprob: -14.62962818145752
    7. '[' → logprob: -14.75462818145752
    8. '_nf' → logprob: -14.75462818145752
    9. '_f' → logprob: -14.87962818145752
    10. ',f' → logprob: -14.87962818145752

Token 795: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.022675538435578346
    2. ',' → logprob: -4.147675514221191
    3. '+' → logprob: -6.022675514221191
    4. ',n' → logprob: -6.147675514221191
    5. '
' → logprob: -7.647675514221191
    6. '[' → logprob: -7.897675514221191
    7. ',
' → logprob: -8.147675514221191
    8. 'nf' → logprob: -8.397675514221191
    9. ' ,' → logprob: -9.147675514221191
    10. ' +' → logprob: -9.397675514221191

Token 796: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6116262078285217
    2. ',j' → logprob: -1.361626148223877
    3. ',n' → logprob: -1.611626148223877
    4. ',f' → logprob: -6.486626148223877
    5. ' ,' → logprob: -9.486626625061035
    6. ',(' → logprob: -9.736626625061035
    7. '                   ' → logprob: -10.861626625061035
    8. ',q' → logprob: -11.986626625061035
    9. ',new' → logprob: -12.236626625061035
    10. ',d' → logprob: -12.486626625061035

Token 797: 'umps' (ID: 14938)
  Prédit: 'umps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umps' → logprob: -2.696889623621246e-06
    2. 'ump' → logprob: -13.12500286102295
    3. ')' → logprob: -15.75000286102295
    4. '   ' → logprob: -15.75000286102295
    5. '
' → logprob: -17.125001907348633
    6. 'um' → logprob: -17.375001907348633
    7. '+' → logprob: -17.500001907348633
    8. 'urn' → logprob: -17.500001907348633
    9. ')
' → logprob: -17.625001907348633
    10. ' um' → logprob: -17.625001907348633

Token 798: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.627176768844947e-05
    2. ' +' → logprob: -9.250096321105957
    3. '+
' → logprob: -16.87509536743164
    4. ')+' → logprob: -18.37509536743164
    5. '＋' → logprob: -18.37509536743164
    6. '+[' → logprob: -20.12509536743164
    7. '+s' → logprob: -20.75009536743164
    8. '+k' → logprob: -21.62509536743164
    9. '+xml' → logprob: -21.75009536743164
    10. '()+' → logprob: -22.12509536743164

Token 799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. ')' → logprob: -17.250001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '```' → logprob: -18.125001907348633
    6. '))' → logprob: -18.375001907348633
    7. '
' → logprob: -20.875001907348633
    8. '  ' → logprob: -21.125001907348633
    9. '+' → logprob: -21.312501907348633
    10. '`' → logprob: -21.437501907348633

Token 800: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003163969377055764
    2. '))
' → logprob: -8.125316619873047
    3. ')' → logprob: -10.875316619873047
    4. '                   ' → logprob: -14.500316619873047
    5. ')))' → logprob: -14.750316619873047
    6. '               ' → logprob: -15.250316619873047
    7. ' ))' → logprob: -15.875316619873047
    8. '           ' → logprob: -16.375316619873047
    9. ')
' → logprob: -17.000316619873047
    10. '       ' → logprob: -17.625316619873047

Token 801: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 802: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0305311381816864
    2. '   ' → logprob: -3.530531167984009
    3. '
' → logprob: -7.28053092956543
    4. ' print' → logprob: -9.53053092956543
    5. '       ' → logprob: -11.90553092956543
    6. '    
' → logprob: -12.03053092956543
    7. '```' → logprob: -12.53053092956543
    8. '        
' → logprob: -14.40553092956543
    9. '<|end|>' → logprob: -14.65553092956543
    10. 'if' → logprob: -14.78053092956543

Token 803: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.2948405128554441e-05
    2. '()' → logprob: -11.37501335144043
    3. 'ans' → logprob: -14.12501335144043
    4. ' (' → logprob: -15.37501335144043
    5. '(' → logprob: -15.50001335144043
    6. '(answer' → logprob: -16.00001335144043
    7. '(abs' → logprob: -16.12501335144043
    8. '('' → logprob: -17.25001335144043
    9. '((' → logprob: -17.37501335144043
    10. '	ans' → logprob: -18.12501335144043

Token 804: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '())' → logprob: -12.875004768371582
    3. '()' → logprob: -13.875004768371582
    4. ')`' → logprob: -14.500004768371582
    5. '`)' → logprob: -16.500003814697266
    6. ')
' → logprob: -16.500003814697266
    7. '))' → logprob: -16.875003814697266
    8. ')}' → logprob: -17.125003814697266
    9. ' )' → logprob: -17.125003814697266
    10. '),' → logprob: -17.750003814697266

Token 805: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12697619199752808
    2. ' ans' → logprob: -2.126976251602173
    3. '(ans' → logprob: -10.001976013183594
    4. '	ans' → logprob: -13.001976013183594
    5. '_ans' → logprob: -15.501976013183594
    6. '   ' → logprob: -15.626976013183594
    7. '!=' → logprob: -16.126976013183594
    8. '>' → logprob: -16.876976013183594
    9. 'Ans' → logprob: -17.251976013183594
    10. '
' → logprob: -17.876976013183594

Token 806: '!=-' (ID: 146584)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.40861842036247253
    2. '!=-' → logprob: -1.158618450164795
    3. ' !=' → logprob: -4.033618450164795
    4. 'else' → logprob: -5.908618450164795
    5. '>' → logprob: -6.908618450164795
    6. '>=' → logprob: -10.908617973327637
    7. '==-' → logprob: -10.908617973327637
    8. '   ' → logprob: -11.283617973327637
    9. ' else' → logprob: -11.408617973327637
    10. '```' → logprob: -11.658617973327637

Token 807: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.000000953674316
    3. '2' → logprob: -20.125
    4. ''' → logprob: -20.25
    5. ' ' → logprob: -20.5
    6. ' -' → logprob: -20.5
    7. '=' → logprob: -20.75
    8. '"' → logprob: -21.0
    9. '
' → logprob: -21.125
    10. '`' → logprob: -21.25

Token 808: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06197149679064751
    2. ' else' → logprob: -2.811971426010132
    3. '```' → logprob: -12.686971664428711
    4. '
' → logprob: -15.061971664428711
    5. ')' → logprob: -16.18697166442871
    6. '        ' → logprob: -17.06197166442871
    7. '   ' → logprob: -17.06197166442871
    8. '       ' → logprob: -17.06197166442871
    9. '``' → logprob: -17.31197166442871
    10. '	else' → logprob: -17.31197166442871

Token 809: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4452407956123352
    2. '-' → logprob: -1.3202407360076904
    3. ''' → logprob: -2.4452407360076904
    4. '"No' → logprob: -5.6952409744262695
    5. ' -' → logprob: -7.5702409744262695
    6. ' "' → logprob: -7.8202409744262695
    7. '0' → logprob: -7.9452409744262695
    8. '"N' → logprob: -8.69524097442627
    9. '"The' → logprob: -9.19524097442627
    10. '   ' → logprob: -9.19524097442627

Token 810: 'NA' (ID: 9555)
  Prédit: 'Impossible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Impossible' → logprob: -1.0724098682403564
    2. '-' → logprob: -1.3224098682403564
    3. 'IMP' → logprob: -1.8224098682403564
    4. '"' → logprob: -1.9474098682403564
    5. 'NA' → logprob: -3.5724098682403564
    6. 'No' → logprob: -3.8224098682403564
    7. 'None' → logprob: -4.822409629821777
    8. 'im' → logprob: -4.947409629821777
    9. 'Im' → logprob: -5.447409629821777
    10. 'NO' → logprob: -6.197409629821777

Token 811: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00032402228680439293
    2. ')")' → logprob: -8.125324249267578
    3. '"' → logprob: -11.500324249267578
    4. '")
' → logprob: -11.625324249267578
    5. ')' → logprob: -12.250324249267578
    6. 'M' → logprob: -15.000324249267578
    7. '");' → logprob: -15.000324249267578
    8. 'P' → logprob: -15.000324249267578
    9. '")}' → logprob: -15.000324249267578
    10. '!")' → logprob: -15.000324249267578

Token 812: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 813: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07890322804450989
    2. '__' → logprob: -2.5789031982421875
    3. '___' → logprob: -12.203903198242188
    4. 'name' → logprob: -12.328903198242188
    5. ' ' → logprob: -13.078903198242188
    6. '_name' → logprob: -14.328903198242188
    7. ' ' → logprob: -14.828903198242188
    8. '  ' → logprob: -15.328903198242188
    9. '_' → logprob: -15.578903198242188
    10. ' "__' → logprob: -16.203903198242188

Token 814: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004897973965853453
    2. ' ==' → logprob: -6.0048980712890625
    3. '```' → logprob: -7.2548980712890625
    4. '==' → logprob: -7.3798980712890625
    5. ' __' → logprob: -7.6298980712890625
    6. 'name' → logprob: -8.254898071289062
    7. '.__' → logprob: -8.879898071289062
    8. '__.__' → logprob: -9.129898071289062
    9. 'if' → logprob: -10.504898071289062
    10. '__.' → logprob: -11.129898071289062

Token 815: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001720742875477299
    2. '__.__' → logprob: -8.750171661376953
    3. '__.' → logprob: -11.875171661376953
    4. '==' → logprob: -12.875171661376953
    5. '___' → logprob: -13.875171661376953
    6. '```' → logprob: -13.875171661376953
    7. '____' → logprob: -14.000171661376953
    8. '__
' → logprob: -14.500171661376953
    9. '__('' → logprob: -15.250171661376953
    10. '__["' → logprob: -15.500171661376953

Token 816: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1558290272951126
    2. '==' → logprob: -2.2808289527893066
    3. ' ==' → logprob: -3.9058289527893066
    4. '=="' → logprob: -4.030828952789307
    5. '=='' → logprob: -5.530828952789307
    6. '__.__' → logprob: -8.905829429626465
    7. '```' → logprob: -10.280829429626465
    8. '==
' → logprob: -11.405829429626465
    9. '()==' → logprob: -11.655829429626465
    10. '[' → logprob: -11.905829429626465

Token 817: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002505743643268943
    2. ''' → logprob: -6.002505779266357
    3. '__' → logprob: -10.5025053024292
    4. ' "__' → logprob: -12.8775053024292
    5. ' '__' → logprob: -17.502506256103516
    6. '   ' → logprob: -18.002506256103516
    7. 'main' → logprob: -18.502506256103516
    8. '("__' → logprob: -18.627506256103516
    9. '"user' → logprob: -18.752506256103516
    10. '"name' → logprob: -19.252506256103516

Token 818: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16180141270160675
    2. 'main' → logprob: -1.9118014574050903
    3. '"' → logprob: -6.661801338195801
    4. ''' → logprob: -8.2868013381958
    5. '__":
' → logprob: -11.0368013381958
    6. 'name' → logprob: -11.7868013381958
    7. '_main' → logprob: -11.7868013381958
    8. '___' → logprob: -12.1618013381958
    9. '```' → logprob: -13.2868013381958
    10. '__':
' → logprob: -13.7868013381958

Token 819: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03580264002084732
    2. '__' → logprob: -3.7858026027679443
    3. '__':
' → logprob: -4.410802841186523
    4. '__.' → logprob: -8.660802841186523
    5. '__.__' → logprob: -9.660802841186523
    6. '():
' → logprob: -10.410802841186523
    7. '.' → logprob: -10.535802841186523
    8. '.__' → logprob: -11.535802841186523
    9. '__["' → logprob: -11.535802841186523
    10. '__()
' → logprob: -12.285802841186523

Token 820: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049088019877672195
    2. 'solve' → logprob: -3.0490880012512207
    3. ' solve' → logprob: -7.924088001251221
    4. '.solve' → logprob: -9.674088478088379
    5. '```' → logprob: -10.299088478088379
    6. '	s' → logprob: -10.799088478088379
    7. '    
' → logprob: -11.549088478088379
    8. '  ' → logprob: -12.799088478088379
    9. '   ' → logprob: -13.049088478088379
    10. '<|end|>' → logprob: -13.049088478088379

Token 821: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -3.128163257315464e-07
    2. ' solve' → logprob: -15.25
    3. 'resolve' → logprob: -18.625
    4. '.solve' → logprob: -19.25
    5. '   ' → logprob: -19.625
    6. 'import' → logprob: -20.625
    7. 'save' → logprob: -21.5
    8. 's' → logprob: -22.0
    9. 'solver' → logprob: -22.25
    10. 'sol' → logprob: -23.125

Token 822: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 820
Tokens correctement prédits (1ère position, stricte): 317
Tokens correctement prédits (1ère position, avec adaptation): 347
Tokens correctement prédits (top 10): 635
Précision stricte (1ère position): 38.66%
Précision adaptée (1ère position): 42.32%
Précision (top 10): 77.44%
================================================================================
