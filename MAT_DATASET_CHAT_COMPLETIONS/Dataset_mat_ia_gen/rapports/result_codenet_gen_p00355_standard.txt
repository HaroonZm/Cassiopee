================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, input().split())
N = int(input())
reservations = [tuple(map(int, input().split())) for _ in range(N)]
print(1 if any(not (b <= s or a >= f) for s, f in reservations) else 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04346052557229996
    2. '+' → logprob: -3.2934606075286865
    3. ' =' → logprob: -5.668460369110107
    4. ',' → logprob: -6.543460369110107
    5. '+=' → logprob: -9.043460845947266
    6. '```' → logprob: -9.668460845947266
    7. ' ' → logprob: -10.043460845947266
    8. '.' → logprob: -10.168460845947266
    9. '_' → logprob: -10.293460845947266
    10. '*' → logprob: -10.293460845947266

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15540887415409088
    2. '1' → logprob: -2.1554088592529297
    3. '0' → logprob: -3.7804088592529297
    4. '10' → logprob: -5.65540885925293
    5. '5' → logprob: -7.03040885925293
    6. ' b' → logprob: -8.78040885925293
    7. '[' → logprob: -9.15540885925293
    8. '42' → logprob: -9.40540885925293
    9. '3' → logprob: -9.53040885925293
    10. 'input' → logprob: -9.65540885925293

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10027891397476196
    2. '(lambda' → logprob: -2.475278854370117
    3. '```' → logprob: -5.225278854370117
    4. '<|end|>' → logprob: -5.725278854370117
    5. '(int' → logprob: -7.725278854370117
    6. '(str' → logprob: -7.975278854370117
    7. ')' → logprob: -8.225278854370117
    8. '(token' → logprob: -8.725278854370117
    9. '<|end|>' → logprob: -8.850278854370117
    10. '(user' → logprob: -8.975278854370117

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7522457838058472
    2. ')' → logprob: -0.8772457838058472
    3. '(' → logprob: -2.5022459030151367
    4. '<|end|>' → logprob: -4.752245903015137
    5. '(token' → logprob: -5.502245903015137
    6. '(user' → logprob: -5.752245903015137
    7. '(next' → logprob: -6.502245903015137
    8. '(raw' → logprob: -6.502245903015137
    9. '(data' → logprob: -6.627245903015137
    10. '```' → logprob: -7.002245903015137

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03606749698519707
    2. ' input' → logprob: -3.536067485809326
    3. '(input' → logprob: -5.161067485809326
    4. ')' → logprob: -7.536067485809326
    5. ',input' → logprob: -12.036067962646484
    6. '=input' → logprob: -12.536067962646484
    7. '```' → logprob: -12.661067962646484
    8. ' )' → logprob: -12.661067962646484
    9. 'user' → logprob: -12.786067962646484
    10. '<input' → logprob: -13.036067962646484

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22056008875370026
    2. ')' → logprob: -2.095560073852539
    3. '())' → logprob: -2.970560073852539
    4. '(token' → logprob: -5.095560073852539
    5. '()' → logprob: -5.470560073852539
    6. '('' → logprob: -6.595560073852539
    7. '<|end|>' → logprob: -6.720560073852539
    8. '(""))' → logprob: -6.845560073852539
    9. '```' → logprob: -7.345560073852539
    10. '(
' → logprob: -7.345560073852539

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00038801267510280013
    2. 'strip' → logprob: -8.000388145446777
    3. 'read' → logprob: -10.875388145446777
    4. 'rstrip' → logprob: -10.875388145446777
    5. ' split' → logprob: -11.500388145446777
    6. ')' → logprob: -12.500388145446777
    7. '(split' → logprob: -14.875388145446777
    8. 'startswith' → logprob: -15.875388145446777
    9. 'spl' → logprob: -16.25038719177246
    10. '```' → logprob: -16.87538719177246

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12451061606407166
    2. '())' → logprob: -2.6245105266571045
    3. '))' → logprob: -3.1245105266571045
    4. '()' → logprob: -8.124510765075684
    5. '()))' → logprob: -8.374510765075684
    6. '`)' → logprob: -9.999510765075684
    7. ')`' → logprob: -10.749510765075684
    8. '(' → logprob: -11.374510765075684
    9. ')))' → logprob: -11.874510765075684
    10. ' )' → logprob: -12.374510765075684

Token 11: 'N' (ID: 45)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08337190002202988
    2. '#' → logprob: -3.708371877670288
    3. 'c' → logprob: -3.833371877670288
    4. 'if' → logprob: -4.083372116088867
    5. '*' → logprob: -4.708372116088867
    6. '+c' → logprob: -6.208372116088867
    7. 'i' → logprob: -6.708372116088867
    8. '+
' → logprob: -7.083372116088867
    9. 'a' → logprob: -7.333372116088867
    10. '>' → logprob: -7.458372116088867

Token 12: ' =' (ID: 314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.442391037940979
    2. '+' → logprob: -1.567391037940979
    3. '=' → logprob: -1.817391037940979
    4. '**' → logprob: -2.0673909187316895
    5. '_' → logprob: -2.3173909187316895
    6. '-' → logprob: -3.0673909187316895
    7. '[' → logprob: -3.6923909187316895
    8. '*' → logprob: -3.8173909187316895
    9. ' =' → logprob: -3.9423909187316895
    10. ')' → logprob: -4.9423909187316895

Token 13: ' int' (ID: 677)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23288443684577942
    2. 'int' → logprob: -1.732884407043457
    3. '10' → logprob: -4.607884407043457
    4. ' int' → logprob: -4.607884407043457
    5. ' a' → logprob: -5.357884407043457
    6. '100' → logprob: -6.107884407043457
    7. '0' → logprob: -6.357884407043457
    8. '5' → logprob: -7.107884407043457
    9. ' ' → logprob: -7.357884407043457
    10. 'b' → logprob: -7.857884407043457

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04337972030043602
    2. '('' → logprob: -3.793379783630371
    3. '()' → logprob: -4.543379783630371
    4. '(a' → logprob: -5.168379783630371
    5. '(input' → logprob: -6.168379783630371
    6. '(`' → logprob: -7.418379783630371
    7. '("' → logprob: -8.418379783630371
    8. '```' → logprob: -9.043379783630371
    9. '`' → logprob: -9.418379783630371
    10. ')' → logprob: -10.043379783630371

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05119190365076065
    2. '())' → logprob: -3.051191806793213
    3. '()' → logprob: -6.426191806793213
    4. '))' → logprob: -7.426191806793213
    5. '`)' → logprob: -8.176192283630371
    6. '')' → logprob: -9.801192283630371
    7. '(' → logprob: -10.926192283630371
    8. '")' → logprob: -11.801192283630371
    9. ' )' → logprob: -12.176192283630371
    10. '()))' → logprob: -12.426192283630371

Token 16: 'reserv' (ID: 130760)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2617068886756897
    2. 'c' → logprob: -1.636706829071045
    3. 'result' → logprob: -4.636706829071045
    4. 's' → logprob: -4.886706829071045
    5. 'a' → logprob: -5.136706829071045
    6. 'x' → logprob: -6.011706829071045
    7. 'f' → logprob: -6.511706829071045
    8. 'if' → logprob: -6.761706829071045
    9. ' for' → logprob: -7.011706829071045
    10. 'r' → logprob: -7.136706829071045

Token 17: 'ations' (ID: 929)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5960426926612854
    2. 'e' → logprob: -0.9710426926612854
    3. 'ation' → logprob: -2.9710426330566406
    4. 'ations' → logprob: -4.221042633056641
    5. 'ed' → logprob: -6.221042633056641
    6. 'oir' → logprob: -6.346042633056641
    7. 'a' → logprob: -7.971042633056641
    8. 'o' → logprob: -8.97104263305664
    9. 'ers' → logprob: -10.09604263305664
    10. 'ees' → logprob: -10.47104263305664

Token 18: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6630488038063049
    2. '[' → logprob: -1.1630487442016602
    3. ' =' → logprob: -2.03804874420166
    4. '_' → logprob: -4.03804874420166
    5. '=' → logprob: -4.41304874420166
    6. '.setdefault' → logprob: -5.16304874420166
    7. ')' → logprob: -6.41304874420166
    8. '[:]' → logprob: -6.78804874420166
    9. '.append' → logprob: -6.91304874420166
    10. 's' → logprob: -7.78804874420166

Token 19: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6947831511497498
    2. ' []' → logprob: -0.6947831511497498
    3. '[' → logprob: -6.8197832107543945
    4. ' [' → logprob: -7.8197832107543945
    5. '{}' → logprob: -9.319783210754395
    6. ' {}' → logprob: -11.194783210754395
    7. 'set' → logprob: -11.319783210754395
    8. '[int' → logprob: -11.944783210754395
    9. '[input' → logprob: -12.694783210754395
    10. 'list' → logprob: -12.819783210754395

Token 20: 'tuple' (ID: 52834)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.145041823387146
    2. 'tuple' → logprob: -2.6450419425964355
    3. '[]' → logprob: -3.5200419425964355
    4. 'map' → logprob: -4.0200419425964355
    5. ']' → logprob: -4.3950419425964355
    6. 'int' → logprob: -6.8950419425964355
    7. 'input' → logprob: -7.3950419425964355
    8. '()]' → logprob: -7.5200419425964355
    9. '[' → logprob: -7.6450419425964355
    10. ' list' → logprob: -7.8950419425964355

Token 21: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00044890373828820884
    2. '(' → logprob: -8.500449180603027
    3. 'map' → logprob: -9.125449180603027
    4. '(int' → logprob: -9.125449180603027
    5. '(input' → logprob: -10.750449180603027
    6. '()' → logprob: -12.750449180603027
    7. 'input' → logprob: -14.125449180603027
    8. ' map' → logprob: -14.250449180603027
    9. '(
' → logprob: -14.500449180603027
    10. 'int' → logprob: -15.000449180603027

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002583594177849591
    2. 'int' → logprob: -8.375258445739746
    3. '<int' → logprob: -11.500258445739746
    4. '(' → logprob: -11.750258445739746
    5. ',int' → logprob: -13.000258445739746
    6. '=int' → logprob: -13.000258445739746
    7. ' int' → logprob: -13.375258445739746
    8. '(str' → logprob: -13.375258445739746
    9. ']int' → logprob: -14.000258445739746
    10. '[int' → logprob: -14.625258445739746

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18061453104019165
    2. ',input' → logprob: -1.8056144714355469
    3. '(input' → logprob: -7.430614471435547
    4. 'input' → logprob: -8.805614471435547
    5. ',int' → logprob: -9.805614471435547
    6. '(' → logprob: -10.055614471435547
    7. ' ,' → logprob: -11.430614471435547
    8. '```' → logprob: -12.180614471435547
    9. '(),' → logprob: -12.680614471435547
    10. ' input' → logprob: -13.555614471435547

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868768811225891
    2. ' input' → logprob: -1.1368768215179443
    3. ',input' → logprob: -12.761877059936523
    4. ')' → logprob: -13.886877059936523
    5. '(input' → logprob: -14.136877059936523
    6. '=input' → logprob: -14.886877059936523
    7. '	input' → logprob: -15.511877059936523
    8. ' ' → logprob: -15.636877059936523
    9. '[input' → logprob: -15.636877059936523
    10. '_input' → logprob: -15.761877059936523

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. ' ().' → logprob: -13.875001907348633
    3. '()' → logprob: -14.500001907348633
    4. '.' → logprob: -16.250001907348633
    5. '.readline' → logprob: -16.875001907348633
    6. ' .' → logprob: -17.500001907348633
    7. '.split' → logprob: -17.500001907348633
    8. '().__' → logprob: -18.375001907348633
    9. '(' → logprob: -18.875001907348633
    10. '[].' → logprob: -19.000001907348633

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3902033970225602e-05
    2. 'strip' → logprob: -11.250014305114746
    3. ' split' → logprob: -14.250014305114746
    4. 'rstrip' → logprob: -15.875014305114746
    5. '(split' → logprob: -16.37501335144043
    6. 'plit' → logprob: -18.12501335144043
    7. '.split' → logprob: -18.12501335144043
    8. 'spl' → logprob: -18.25001335144043
    9. ')' → logprob: -19.25001335144043
    10. '```' → logprob: -20.12501335144043

Token 27: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006576815620064735
    2. '))' → logprob: -5.131577014923096
    3. '())' → logprob: -8.006576538085938
    4. '()' → logprob: -8.256576538085938
    5. '()))
' → logprob: -10.131576538085938
    6. '())))' → logprob: -12.756576538085938
    7. '(' → logprob: -13.131576538085938
    8. '()),' → logprob: -13.506576538085938
    9. '()));' → logprob: -13.506576538085938
    10. '()))

' → logprob: -13.756576538085938

Token 28: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04115169867873192
    2. '()' → logprob: -3.416151762008667
    3. 'for' → logprob: -5.791151523590088
    4. '())' → logprob: -6.416151523590088
    5. ')]' → logprob: -6.541151523590088
    6. '(' → logprob: -7.166151523590088
    7. '()]' → logprob: -8.791152000427246
    8. ' for' → logprob: -8.791152000427246
    9. ']' → logprob: -9.166152000427246
    10. '),' → logprob: -10.166152000427246

Token 29: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0381552129983902
    2. ' _' → logprob: -3.5381553173065186
    3. ' range' → logprob: -4.7881550788879395
    4. '_range' → logprob: -10.913155555725098
    5. 'range' → logprob: -11.913155555725098
    6. ' ' → logprob: -11.913155555725098
    7. ' ' → logprob: -12.288155555725098
    8. ' i' → logprob: -12.663155555725098
    9. ' in' → logprob: -13.788155555725098
    10. '(range' → logprob: -14.788155555725098

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.571985125541687
    2. ' range' → logprob: -1.196985125541687
    3. '(' → logprob: -2.4469852447509766
    4. 'range' → logprob: -3.4469852447509766
    5. 'in' → logprob: -5.071985244750977
    6. '_' → logprob: -5.446985244750977
    7. '(range' → logprob: -5.696985244750977
    8. '	range' → logprob: -8.571985244750977
    9. '_range' → logprob: -8.696985244750977
    10. '(n' → logprob: -8.946985244750977

Token 31: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.518582762917504e-05
    2. ' range' → logprob: -9.37508487701416
    3. '(range' → logprob: -16.250085830688477
    4. '	range' → logprob: -17.375085830688477
    5. ' ' → logprob: -18.250085830688477
    6. 'r' → logprob: -19.000085830688477
    7. 'rang' → logprob: -19.125085830688477
    8. '   ' → logprob: -19.500085830688477
    9. '```' → logprob: -19.500085830688477
    10. 'a' → logprob: -19.750085830688477

Token 32: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007188651943579316
    2. '(' → logprob: -7.25071907043457
    3. 'N' → logprob: -12.00071907043457
    4. '(n' → logprob: -13.12571907043457
    5. '(
' → logprob: -14.87571907043457
    6. '(

' → logprob: -16.37571907043457
    7. ')' → logprob: -16.62571907043457
    8. ' (' → logprob: -16.62571907043457
    9. '(a' → logprob: -17.12571907043457
    10. '(int' → logprob: -18.00071907043457

Token 33: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00019698418327607214
    2. ')' → logprob: -8.750197410583496
    3. ']' → logprob: -10.375197410583496
    4. ')])' → logprob: -13.125197410583496
    5. '')]' → logprob: -13.500197410583496
    6. ' )' → logprob: -13.875197410583496
    7. '])]' → logprob: -14.250197410583496
    8. ')]
' → logprob: -14.375197410583496
    9. '))' → logprob: -14.750197410583496
    10. ')].' → logprob: -15.500197410583496

Token 34: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8410543203353882
    2. '\n' → logprob: -1.2160543203353882
    3. 'r' → logprob: -3.0910544395446777
    4. 'a' → logprob: -3.2160544395446777
    5. '```' → logprob: -3.3410544395446777
    6. ' 
' → logprob: -3.3410544395446777
    7. '#' → logprob: -3.5910544395446777
    8. 'n' → logprob: -3.7160544395446777
    9. '\' → logprob: -4.466054439544678
    10. '' → logprob: -4.841054439544678

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012189284898340702
    2. '(a' → logprob: -7.251218795776367
    3. '('' → logprob: -8.626218795776367
    4. '("("' → logprob: -9.376218795776367
    5. '((' → logprob: -9.501218795776367
    6. '(sum' → logprob: -10.126218795776367
    7. '(res' → logprob: -10.376218795776367
    8. '(len' → logprob: -10.376218795776367
    9. '()' → logprob: -11.126218795776367
    10. '(s' → logprob: -11.501218795776367

Token 36: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08042807877063751
    2. 'max' → logprob: -4.080428123474121
    3. 'b' → logprob: -4.205428123474121
    4. 'reserv' → logprob: -4.580428123474121
    5. 'sum' → logprob: -4.705428123474121
    6. 'res' → logprob: -5.080428123474121
    7. 'min' → logprob: -5.330428123474121
    8. '"' → logprob: -5.580428123474121
    9. ')' → logprob: -5.705428123474121
    10. 'len' → logprob: -5.955428123474121

Token 37: ' if' (ID: 538)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6872188448905945
    2. ')' → logprob: -0.9372188448905945
    3. ' ,' → logprob: -2.8122189044952393
    4. ',' → logprob: -3.6872189044952393
    5. '+' → logprob: -4.18721866607666
    6. ' +' → logprob: -5.81221866607666
    7. ' ' → logprob: -7.18721866607666
    8. '0' → logprob: -8.18721866607666
    9. '-' → logprob: -8.43721866607666
    10. ',)' → logprob: -8.56221866607666

Token 38: ' any' (ID: 1062)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8157604932785034
    2. ' any' → logprob: -1.5657604932785034
    3. 'a' → logprob: -2.065760612487793
    4. ' b' → logprob: -2.565760612487793
    5. ' all' → logprob: -2.815760612487793
    6. ' (' → logprob: -3.190760612487793
    7. 'b' → logprob: -4.065760612487793
    8. '(a' → logprob: -4.315760612487793
    9. ' reservations' → logprob: -5.940760612487793
    10. 'any' → logprob: -6.440760612487793

Token 39: '(not' (ID: 44576)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4274784326553345
    2. '(a' → logprob: -1.4274784326553345
    3. '(res' → logprob: -3.802478313446045
    4. '(abs' → logprob: -3.802478313446045
    5. '(lambda' → logprob: -3.802478313446045
    6. '((' → logprob: -4.177478313446045
    7. '(x' → logprob: -4.427478313446045
    8. '(b' → logprob: -4.927478313446045
    9. '(r' → logprob: -5.802478313446045
    10. '(not' → logprob: -7.302478313446045

Token 40: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2830558717250824
    2. '(b' → logprob: -2.5330557823181152
    3. '(' → logprob: -2.6580557823181152
    4. ' (' → logprob: -2.6580557823181152
    5. '(x' → logprob: -5.408055782318115
    6. '((' → logprob: -5.408055782318115
    7. '(i' → logprob: -5.408055782318115
    8. 'a' → logprob: -5.908055782318115
    9. '(res' → logprob: -6.408055782318115
    10. ' a' → logprob: -6.908055782318115

Token 41: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.035651493817567825
    2. ' a' → logprob: -4.160651683807373
    3. '(a' → logprob: -4.660651683807373
    4. 'b' → logprob: -4.910651683807373
    5. ' (' → logprob: -7.660651683807373
    6. ' b' → logprob: -7.910651683807373
    7. '1' → logprob: -8.160651206970215
    8. ')' → logprob: -8.160651206970215
    9. '(' → logprob: -8.285651206970215
    10. '0' → logprob: -8.410651206970215

Token 42: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7423507571220398
    2. ' <=' → logprob: -1.1173508167266846
    3. '>' → logprob: -2.6173508167266846
    4. '>=' → logprob: -2.7423508167266846
    5. ' >=' → logprob: -3.6173508167266846
    6. ' >' → logprob: -3.8673508167266846
    7. '<' → logprob: -4.8673505783081055
    8. ' <' → logprob: -6.1173505783081055
    9. '[' → logprob: -7.6173505783081055
    10. ' ' → logprob: -8.367350578308105

Token 43: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0530451536178589
    2. 'start' → logprob: -1.0530451536178589
    3. 'r' → logprob: -2.0530452728271484
    4. 's' → logprob: -2.5530452728271484
    5. 'c' → logprob: -4.303045272827148
    6. 'l' → logprob: -4.303045272827148
    7. 'y' → logprob: -4.303045272827148
    8. ' start' → logprob: -4.303045272827148
    9. 'res' → logprob: -4.678045272827148
    10. 'end' → logprob: -4.928045272827148

Token 44: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04025345668196678
    2. 'or' → logprob: -3.2902534008026123
    3. ' and' → logprob: -7.165253639221191
    4. ' <=' → logprob: -7.540253639221191
    5. '<=' → logprob: -8.290253639221191
    6. 't' → logprob: -8.665253639221191
    7. 'and' → logprob: -8.790253639221191
    8. ')' → logprob: -9.540253639221191
    9. ' <' → logprob: -9.790253639221191
    10. '	or' → logprob: -10.165253639221191

Token 45: ' a' (ID: 261)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05185641720890999
    2. 'f' → logprob: -3.551856517791748
    3. 's' → logprob: -5.051856517791748
    4. ' e' → logprob: -5.176856517791748
    5. 'd' → logprob: -5.301856517791748
    6. 't' → logprob: -6.051856517791748
    7. 'b' → logprob: -7.301856517791748
    8. 'a' → logprob: -7.426856517791748
    9. 'r' → logprob: -7.926856517791748
    10. '   ' → logprob: -8.17685604095459

Token 46: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.9650219082832336
    2. ' >=' → logprob: -1.3400218486785889
    3. '<=' → logprob: -1.7150218486785889
    4. ' <=' → logprob: -1.8400218486785889
    5. '>' → logprob: -4.340022087097168
    6. ' >' → logprob: -5.715022087097168
    7. 's' → logprob: -7.465022087097168
    8. '<' → logprob: -7.590022087097168
    9. ' ' → logprob: -7.965022087097168
    10. ' <' → logprob: -8.215022087097168

Token 47: ' f' (ID: 285)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011247287504374981
    2. ' e' → logprob: -4.636247158050537
    3. ' ' → logprob: -7.511247158050537
    4. 't' → logprob: -8.011247634887695
    5. 'f' → logprob: -8.511247634887695
    6. 'd' → logprob: -8.761247634887695
    7. '   ' → logprob: -9.261247634887695
    8. '```' → logprob: -10.386247634887695
    9. '	e' → logprob: -10.636247634887695
    10. 's' → logprob: -11.136247634887695

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013148818397894502
    2. ' )' → logprob: -7.251315116882324
    3. '-' → logprob: -7.626315116882324
    4. ' ' → logprob: -10.876315116882324
    5. '))' → logprob: -10.876315116882324
    6. ' -' → logprob: -11.001315116882324
    7. ')
' → logprob: -11.251315116882324
    8. ' for' → logprob: -11.501315116882324
    9. 'for' → logprob: -11.501315116882324
    10. '+' → logprob: -11.751315116882324

Token 49: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5252473950386047
    2. 'for' → logprob: -0.9002473950386047
    3. ' in' → logprob: -6.400247573852539
    4. 'in' → logprob: -8.650247573852539
    5. ')' → logprob: -9.400247573852539
    6. ' ' → logprob: -10.150247573852539
    7. '   ' → logprob: -10.525247573852539
    8. ' and' → logprob: -10.650247573852539
    9. 'and' → logprob: -10.775247573852539
    10. ' (' → logprob: -11.150247573852539

Token 50: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5594943761825562
    2. ' s' → logprob: -0.9344943761825562
    3. '(s' → logprob: -4.309494495391846
    4. '_,' → logprob: -4.559494495391846
    5. ' (' → logprob: -5.184494495391846
    6. '(_,' → logprob: -6.184494495391846
    7. 'f' → logprob: -6.684494495391846
    8. ' _,' → logprob: -7.059494495391846
    9. ' f' → logprob: -7.559494495391846
    10. '(f' → logprob: -7.684494495391846

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04868990182876587
    2. ',f' → logprob: -3.048689842224121
    3. ' ,' → logprob: -9.923689842224121
    4. 'f' → logprob: -10.048689842224121
    5. '_,' → logprob: -12.548689842224121
    6. ' f' → logprob: -13.423689842224121
    7. ',_' → logprob: -13.798689842224121
    8. ',
' → logprob: -14.048689842224121
    9. ',a' → logprob: -14.923689842224121
    10. ' ' → logprob: -15.486189842224121

Token 52: ' f' (ID: 285)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.257392555475235
    2. 'f' → logprob: -2.007392644882202
    3. ' e' → logprob: -2.507392644882202
    4. ' f' → logprob: -4.507392406463623
    5. ' ' → logprob: -9.632392883300781
    6. 't' → logprob: -12.007392883300781
    7. '   ' → logprob: -12.507392883300781
    8. '	e' → logprob: -12.507392883300781
    9. 'd' → logprob: -12.632392883300781
    10. '```' → logprob: -13.507392883300781

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18035168945789337
    2. 'in' → logprob: -1.805351734161377
    3. ')' → logprob: -7.555351734161377
    4. 's' → logprob: -10.305351257324219
    5. ',' → logprob: -11.430351257324219
    6. ' ' → logprob: -11.555351257324219
    7. ' )' → logprob: -11.555351257324219
    8. '),' → logprob: -12.055351257324219
    9. '```' → logprob: -12.555351257324219
    10. 'a' → logprob: -13.867851257324219

Token 54: ' reservations' (ID: 51148)
  Prédit: ' reservations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reservations' → logprob: -0.6931572556495667
    2. 'reserv' → logprob: -0.6931572556495667
    3. 'res' → logprob: -12.943157196044922
    4. ' reservas' → logprob: -13.068157196044922
    5. 'reservation' → logprob: -13.568157196044922
    6. 'Reservations' → logprob: -13.818157196044922
    7. ' ' → logprob: -13.943157196044922
    8. '```' → logprob: -14.443157196044922
    9. ' reservation' → logprob: -14.693157196044922
    10. 'reserve' → logprob: -15.443157196044922

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012070851516909897
    2. ' )' → logprob: -9.375121116638184
    3. '))' → logprob: -11.250121116638184
    4. ' else' → logprob: -11.625121116638184
    5. 'else' → logprob: -11.875121116638184
    6. ')`' → logprob: -13.375121116638184
    7. ')
' → logprob: -13.875121116638184
    8. ' ' → logprob: -13.875121116638184
    9. '`)' → logprob: -14.250121116638184
    10. '')' → logprob: -14.625121116638184

Token 56: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010831133840838447
    2. ' )' → logprob: -9.62510871887207
    3. ' else' → logprob: -10.50010871887207
    4. '))' → logprob: -12.00010871887207
    5. '`)' → logprob: -12.87510871887207
    6. '')' → logprob: -12.87510871887207
    7. 'else' → logprob: -13.62510871887207
    8. '")' → logprob: -14.50010871887207
    9. ' ' → logprob: -15.12510871887207
    10. ')`' → logprob: -15.12510871887207

Token 57: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4751804769039154
    2. '0' → logprob: -0.9751805067062378
    3. '1' → logprob: -7.475180625915527
    4. '2' → logprob: -8.350180625915527
    5. ''' → logprob: -9.225180625915527
    6. ')' → logprob: -9.600180625915527
    7. '32' → logprob: -10.100180625915527
    8. '"' → logprob: -10.725180625915527
    9. ' ' → logprob: -10.725180625915527
    10. '10' → logprob: -11.475180625915527

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028500445187091827
    2. ' ' → logprob: -5.87785005569458
    3. '1' → logprob: -10.252849578857422
    4. '2' → logprob: -12.002849578857422
    5. 'a' → logprob: -14.127849578857422
    6. '`' → logprob: -14.252849578857422
    7. ')' → logprob: -14.252849578857422
    8. 'b' → logprob: -15.127849578857422
    9. '-' → logprob: -15.440349578857422
    10. '```' → logprob: -15.440349578857422

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -13.750003814697266
    3. ' )' → logprob: -13.875003814697266
    4. '`)' → logprob: -14.250003814697266
    5. '))' → logprob: -14.500003814697266
    6. '')' → logprob: -15.250003814697266
    7. ')#' → logprob: -16.375003814697266
    8. '")' → logprob: -17.000003814697266
    9. ')`' → logprob: -17.375003814697266
    10. '）' → logprob: -17.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 44
Précision stricte (1ère position): 35.09%
Précision adaptée (1ère position): 35.09%
Précision (top 10): 77.19%
================================================================================
