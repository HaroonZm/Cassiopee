================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:01:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
max_fish = -1
winner = -1
for _ in range(n):
    a, v = map(int, input().split())
    if v > max_fish:
        max_fish = v
        winner = a
    elif v == max_fish and a < winner:
        winner = a
print(winner, max_fish)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'max' (ID: 3228)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0307916346937418
    2. '(' → logprob: -3.5307915210723877
    3. '_length' → logprob: -8.655791282653809
    4. '(_)' → logprob: -8.780791282653809
    5. '_val' → logprob: -8.905791282653809
    6. '_value' → logprob: -9.030791282653809
    7. '_len' → logprob: -9.280791282653809
    8. ')' → logprob: -9.780791282653809
    9. ' _' → logprob: -9.780791282653809
    10. '_space' → logprob: -9.905791282653809

Token 7: 'ish' (ID: 1109)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.09297003597021103
    2. 'or' → logprob: -3.592970132827759
    3. 'act' → logprob: -3.967970132827759
    4. 'req' → logprob: -3.967970132827759
    5. '_' → logprob: -4.34296989440918
    6. 'requency' → logprob: -6.09296989440918
    7. '_act' → logprob: -6.84296989440918
    8. '_value' → logprob: -7.34296989440918
    9. 'actors' → logprob: -7.46796989440918
    10. '_actor' → logprob: -7.71796989440918

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03823380917310715
    2. '_count' → logprob: -4.038233757019043
    3. ' =' → logprob: -4.913233757019043
    4. '=' → logprob: -5.288233757019043
    5. '_space' → logprob: -5.913233757019043
    6. '_size' → logprob: -6.288233757019043
    7. '_length' → logprob: -7.038233757019043
    8. '_counts' → logprob: -8.288233757019043
    9. '_len' → logprob: -8.413233757019043
    10. 's' → logprob: -8.538233757019043

Token 9: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19221961498260498
    2. ' ' → logprob: -1.817219614982605
    3. ' n' → logprob: -5.6922197341918945
    4. '-' → logprob: -5.8172197341918945
    5. 'float' → logprob: -6.3172197341918945
    6. ' -' → logprob: -6.6922197341918945
    7. ' float' → logprob: -6.6922197341918945
    8. 'n' → logprob: -6.8172197341918945
    9. 'max' → logprob: -8.192219734191895
    10. 'int' → logprob: -9.067219734191895

Token 10: '1' (ID: 16)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.577383279800415
    2. '1' → logprob: -0.952383279800415
    3. '10' → logprob: -3.077383279800415
    4. '100' → logprob: -5.952383041381836
    5. 'inf' → logprob: -6.077383041381836
    6. '999' → logprob: -7.202383041381836
    7. 'int' → logprob: -7.577383041381836
    8. ' float' → logprob: -7.827383041381836
    9. '-' → logprob: -9.827383041381836
    10. '9' → logprob: -10.702383041381836

Token 11: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26406142115592957
    2. '\n' → logprob: -2.139061450958252
    3. 'for' → logprob: -2.889061450958252
    4. '\' → logprob: -3.264061450958252
    5. '```' → logprob: -4.639061450958252
    6. '
' → logprob: -5.389061450958252
    7. ' 
' → logprob: -5.764061450958252
    8. ' for' → logprob: -7.014061450958252
    9. '``' → logprob: -7.639061450958252
    10. '' → logprob: -7.639061450958252

Token 12: 'winner' (ID: 99794)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2998097240924835
    2. '
' → logprob: -2.174809694290161
    3. ' 
' → logprob: -3.549809694290161
    4. 'for' → logprob: -3.674809694290161
    5. 'max' → logprob: -3.924809694290161
    6. '\' → logprob: -3.924809694290161
    7. '  
' → logprob: -4.29980993270874
    8. '```' → logprob: -4.54980993270874
    9. 'f' → logprob: -4.67480993270874
    10. 'fish' → logprob: -5.04980993270874

Token 13: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008826419361867011
    2. '=' → logprob: -7.625882625579834
    3. ' =' → logprob: -8.125883102416992
    4. '_=' → logprob: -9.750883102416992
    5. '_name' → logprob: -11.375883102416992
    6. ')' → logprob: -12.000883102416992
    7. ' _' → logprob: -12.625883102416992
    8. '_idx' → logprob: -12.875883102416992
    9. '_id' → logprob: -12.875883102416992
    10. '_score' → logprob: -13.625883102416992

Token 14: ' -' (ID: 533)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.11642000079154968
    2. 'None' → logprob: -2.241420030593872
    3. ' ' → logprob: -6.741419792175293
    4. '1' → logprob: -7.116419792175293
    5. '"' → logprob: -7.991419792175293
    6. '""' → logprob: -7.991419792175293
    7. '''' → logprob: -8.366419792175293
    8. '0' → logprob: -8.616419792175293
    9. ' -' → logprob: -8.616419792175293
    10. ''' → logprob: -9.116419792175293

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.5
    3. ' ' → logprob: -16.375
    4. '```' → logprob: -17.25
    5. '-' → logprob: -17.875
    6. '۱' → logprob: -19.0625
    7. '１' → logprob: -19.5625
    8. '   ' → logprob: -19.8125
    9. '१' → logprob: -20.0625
    10. '+' → logprob: -20.375

Token 16: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5150794982910156
    2. '
' → logprob: -1.1400794982910156
    3. '\n' → logprob: -3.3900794982910156
    4. '```' → logprob: -3.6400794982910156
    5. ' for' → logprob: -3.8900794982910156
    6. ' 
' → logprob: -7.015079498291016
    7. '
' → logprob: -7.515079498291016
    8. '``' → logprob: -8.265079498291016
    9. 'n' → logprob: -8.390079498291016
    10. '<|end|>' → logprob: -9.265079498291016

Token 17: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11550450325012207
    2. '
' → logprob: -2.240504503250122
    3. ' for' → logprob: -6.615504264831543
    4. '\n' → logprob: -7.365504264831543
    5. '```' → logprob: -7.490504264831543
    6. ' 
' → logprob: -9.865504264831543
    7. '
' → logprob: -9.990504264831543
    8. '``' → logprob: -10.740504264831543
    9. '

' → logprob: -12.115504264831543
    10. '<|end|>' → logprob: -12.115504264831543

Token 18: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05501396581530571
    2. ' i' → logprob: -2.93001389503479
    3. '  ' → logprob: -10.055013656616211
    4. 'i' → logprob: -10.555013656616211
    5. ' _' → logprob: -11.055013656616211
    6. ' n' → logprob: -11.180013656616211
    7. ' fish' → logprob: -11.430013656616211
    8. '_' → logprob: -12.305013656616211
    9. ' ' → logprob: -12.555013656616211
    10. ' ‌' → logprob: -12.555013656616211

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017350364942103624
    2. ' ' → logprob: -7.001735210418701
    3. 'in' → logprob: -7.126735210418701
    4. ',' → logprob: -12.751734733581543
    5. ' i' → logprob: -13.001734733581543
    6. 'range' → logprob: -13.126734733581543
    7. ' n' → logprob: -13.376734733581543
    8. ' _' → logprob: -13.376734733581543
    9. '	in' → logprob: -13.501734733581543
    10. ' ,' → logprob: -13.501734733581543

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31329628825187683
    2. ' range' → logprob: -1.3132963180541992
    3. 'n' → logprob: -10.6882963180542
    4. '	range' → logprob: -13.0632963180542
    5. '```' → logprob: -13.1882963180542
    6. '(range' → logprob: -13.3132963180542
    7. ' n' → logprob: -13.5632963180542
    8. 'ran' → logprob: -14.0632963180542
    9. 'rang' → logprob: -14.3132963180542
    10. ' ' → logprob: -14.4382963180542

Token 21: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025129852816462517
    2. '(n' → logprob: -3.900129795074463
    3. ' (' → logprob: -5.400129795074463
    4. '(len' → logprob: -10.650130271911621
    5. '(
' → logprob: -11.150130271911621
    6. '(range' → logprob: -11.525130271911621
    7. '(int' → logprob: -11.775130271911621
    8. '(s' → logprob: -13.525130271911621
    9. '```' → logprob: -14.525130271911621
    10. '(space' → logprob: -14.775130271911621

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00600629486143589
    2. ')' → logprob: -5.256006240844727
    3. ' ):' → logprob: -7.756006240844727
    4. ':' → logprob: -8.131006240844727
    5. '):
' → logprob: -10.381006240844727
    6. ' )' → logprob: -12.006006240844727
    7. ',' → logprob: -12.256006240844727
    8. '+' → logprob: -12.881006240844727
    9. ' :' → logprob: -14.006006240844727
    10. '```' → logprob: -14.381006240844727

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012624780647456646
    2. '    ' → logprob: -5.262624740600586
    3. '    
' → logprob: -6.137624740600586
    4. ' fish' → logprob: -6.137624740600586
    5. ' f' → logprob: -8.012624740600586
    6. ' 
' → logprob: -8.012624740600586
    7. '   ' → logprob: -8.137624740600586
    8. ' ' → logprob: -8.262624740600586
    9. '```' → logprob: -8.387624740600586
    10. ' ```' → logprob: -8.512624740600586

Token 24: ' a' (ID: 261)
  Prédit: ' fish'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fish' → logprob: -0.7987862229347229
    2. ' f' → logprob: -1.7987861633300781
    3. '   ' → logprob: -1.9237861633300781
    4. '    ' → logprob: -3.173786163330078
    5. ' line' → logprob: -3.173786163330078
    6. ' name' → logprob: -3.798786163330078
    7. 'fish' → logprob: -3.798786163330078
    8. 'f' → logprob: -4.298786163330078
    9. ' fisherman' → logprob: -4.423786163330078
    10. ' amount' → logprob: -4.548786163330078

Token 25: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2873440086841583
    2. ',' → logprob: -3.037343978881836
    3. ' ' → logprob: -3.037343978881836
    4. '_' → logprob: -3.412343978881836
    5. '=' → logprob: -3.537343978881836
    6. 'i' → logprob: -3.662343978881836
    7. ' ,' → logprob: -4.037343978881836
    8. 'r' → logprob: -4.412343978881836
    9. '_i' → logprob: -4.912343978881836
    10. 'rr' → logprob: -5.662343978881836

Token 26: ' v' (ID: 323)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.010006329976022243
    2. ' b' → logprob: -4.635006427764893
    3. ' ' → logprob: -8.510005950927734
    4. '=' → logprob: -11.260005950927734
    5. '_' → logprob: -11.885005950927734
    6. 's' → logprob: -12.385005950927734
    7. 'm' → logprob: -12.385005950927734
    8. ' =' → logprob: -12.635005950927734
    9. 'd' → logprob: -12.760005950927734
    10. '  ' → logprob: -13.010005950927734

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7252330183982849
    2. ' =' → logprob: -0.8502330183982849
    3. ',' → logprob: -2.4752330780029297
    4. ' ' → logprob: -6.35023307800293
    5. '_' → logprob: -7.47523307800293
    6. ')' → logprob: -7.60023307800293
    7. ' ,' → logprob: -8.35023307800293
    8. '_f' → logprob: -8.35023307800293
    9. '<|end|>' → logprob: -8.60023307800293
    10. 'al' → logprob: -9.22523307800293

Token 28: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.038209136575460434
    2. 'map' → logprob: -3.2882091999053955
    3. ' [' → logprob: -9.788208961486816
    4. ' list' → logprob: -9.788208961486816
    5. ' ' → logprob: -10.913208961486816
    6. '[' → logprob: -11.038208961486816
    7. 'list' → logprob: -12.413208961486816
    8. '	map' → logprob: -12.413208961486816
    9. '   ' → logprob: -12.663208961486816
    10. ' input' → logprob: -12.788208961486816

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014288791455328465
    2. '(' → logprob: -4.389288902282715
    3. '(input' → logprob: -6.514288902282715
    4. '(str' → logprob: -8.764288902282715
    5. '(lambda' → logprob: -10.139288902282715
    6. '<int' → logprob: -10.389288902282715
    7. 'int' → logprob: -10.514288902282715
    8. '[int' → logprob: -10.764288902282715
    9. '(list' → logprob: -11.889288902282715
    10. '(
' → logprob: -12.764288902282715

Token 30: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5468298196792603
    2. ',' → logprob: -1.2968298196792603
    3. '(input' → logprob: -1.9218298196792603
    4. 'input' → logprob: -6.796829700469971
    5. ' ,' → logprob: -8.796830177307129
    6. '(' → logprob: -9.171830177307129
    7. ' input' → logprob: -9.546830177307129
    8. '=input' → logprob: -11.296830177307129
    9. ')' → logprob: -12.171830177307129
    10. ' (' → logprob: -12.421830177307129

Token 31: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04858827963471413
    2. ' input' → logprob: -3.048588275909424
    3. ')' → logprob: -14.923588752746582
    4. '(input' → logprob: -15.423588752746582
    5. '=input' → logprob: -16.048587799072266
    6. ',input' → logprob: -16.048587799072266
    7. ' ' → logprob: -16.923587799072266
    8. '	input' → logprob: -16.923587799072266
    9. '<input' → logprob: -17.673587799072266
    10. '[input' → logprob: -17.923587799072266

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.0100624169572257e-05
    2. '()' → logprob: -10.875020027160645
    3. '())' → logprob: -14.375020027160645
    4. ')' → logprob: -14.875020027160645
    5. ' ().' → logprob: -16.25002098083496
    6. '()
' → logprob: -17.12502098083496
    7. '(' → logprob: -17.62502098083496
    8. '.split' → logprob: -18.25002098083496
    9. '()

' → logprob: -19.25002098083496
    10. '()))' → logprob: -19.37502098083496

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.363617962459102e-05
    2. 'strip' → logprob: -9.500083923339844
    3. 'rstrip' → logprob: -12.000083923339844
    4. ' split' → logprob: -13.375083923339844
    5. '(split' → logprob: -14.125083923339844
    6. ')' → logprob: -15.375083923339844
    7. 'spl' → logprob: -17.125083923339844
    8. 's' → logprob: -17.500083923339844
    9. '```' → logprob: -18.250083923339844
    10. ' ' → logprob: -18.875083923339844

Token 34: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.27884379029273987
    2. ')' → logprob: -1.7788437604904175
    3. '))' → logprob: -3.153843879699707
    4. '()))' → logprob: -3.653843879699707
    5. '()' → logprob: -5.153843879699707
    6. '())
' → logprob: -9.528843879699707
    7. '(' → logprob: -11.278843879699707
    8. '`)' → logprob: -11.403843879699707
    9. '()))
' → logprob: -11.403843879699707
    10. ''))' → logprob: -11.653843879699707

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11784723401069641
    2. ')' → logprob: -3.742847204208374
    3. '<|end|>' → logprob: -3.867847204208374
    4. ' ' → logprob: -4.117847442626953
    5. ' if' → logprob: -4.742847442626953
    6. '    
' → logprob: -4.742847442626953
    7. 'if' → logprob: -4.992847442626953
    8. ' 
' → logprob: -5.117847442626953
    9. '    ' → logprob: -5.367847442626953
    10. '  ' → logprob: -6.117847442626953

Token 36: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18163727223873138
    2. 'if' (adapté à ' if') → logprob: -2.3066372871398926
    3. ' ' → logprob: -3.5566372871398926
    4. '    ' → logprob: -4.806637287139893
    5. ' fish' → logprob: -4.931637287139893
    6. '   ' → logprob: -5.431637287139893
    7. '```' → logprob: -5.806637287139893
    8. 's' → logprob: -6.681637287139893
    9. 'fish' → logprob: -6.681637287139893
    10. '<|end|>' → logprob: -6.681637287139893

Token 37: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.1382339596748352
    2. ' a' → logprob: -2.1382339000701904
    3. 'v' → logprob: -5.0132341384887695
    4. 'a' → logprob: -5.8882341384887695
    5. ' ' → logprob: -6.3882341384887695
    6. ' max' → logprob: -9.26323413848877
    7. ' ' → logprob: -11.13823413848877
    8. 'max' → logprob: -11.76323413848877
    9. ' vmax' → logprob: -12.26323413848877
    10. ' (' → logprob: -13.13823413848877

Token 38: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.062031090259552
    2. '>' → logprob: -2.8120310306549072
    3. ' ' → logprob: -9.937030792236328
    4. ' <' → logprob: -12.687030792236328
    5. ' >=' → logprob: -12.687030792236328
    6. ' ' → logprob: -13.687030792236328
    7. '[' → logprob: -14.312030792236328
    8. '   ' → logprob: -14.312030792236328
    9. ' ==' → logprob: -14.437030792236328
    10. ' <=' → logprob: -14.562030792236328

Token 39: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20142163336277008
    2. ' max' → logprob: -1.7014216184616089
    3. ' ' → logprob: -12.201421737670898
    4. '0' → logprob: -13.076421737670898
    5. '	max' → logprob: -15.201421737670898
    6. '1' → logprob: -15.326421737670898
    7. 'v' → logprob: -15.826421737670898
    8. '   ' → logprob: -16.3264217376709
    9. '(max' → logprob: -16.3264217376709
    10. '10' → logprob: -16.7014217376709

Token 40: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0018583188066259027
    2. '_' → logprob: -6.376858234405518
    3. ' _' → logprob: -8.876858711242676
    4. '_v' → logprob: -11.251858711242676
    5. '__' → logprob: -14.501858711242676
    6. '_max' → logprob: -14.751858711242676
    7. ' ' → logprob: -15.001858711242676
    8. ')_' → logprob: -15.001858711242676
    9. '```' → logprob: -15.376858711242676
    10. '_g' → logprob: -15.751858711242676

Token 41: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -8.470901229884475e-05
    2. 'is' → logprob: -10.12508487701416
    3. 'fish' → logprob: -10.87508487701416
    4. 'sh' → logprob: -11.62508487701416
    5. ' ish' → logprob: -11.62508487701416
    6. 'i' → logprob: -12.37508487701416
    7. '-ish' → logprob: -14.62508487701416
    8. 'ash' → logprob: -14.87508487701416
    9. '```' → logprob: -15.00008487701416
    10. '   ' → logprob: -15.37508487701416

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022435210645198822
    2. ' :' → logprob: -3.897435188293457
    3. '):' → logprob: -7.397435188293457
    4. '<|end|>' → logprob: -7.522435188293457
    5. ' and' → logprob: -8.022435188293457
    6. '<|end|>' → logprob: -9.022435188293457
    7. 'and' → logprob: -10.022435188293457
    8. '   ' → logprob: -10.147435188293457
    9. '=' → logprob: -10.272435188293457
    10. ':
' → logprob: -10.772435188293457

Token 43: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05177774652838707
    2. '       ' → logprob: -4.3017778396606445
    3. '=' → logprob: -4.5517778396606445
    4. ' =' → logprob: -4.6767778396606445
    5. ' :' → logprob: -4.8017778396606445
    6. '   ' → logprob: -5.8017778396606445
    7. 'v' → logprob: -6.1767778396606445
    8. '    ' → logprob: -7.1767778396606445
    9. ' v' → logprob: -7.3017778396606445
    10. '<|end|>' → logprob: -7.5517778396606445

Token 44: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.28080400824546814
    2. ' v' → logprob: -1.9058040380477905
    3. 'max' (adapté à ' max') → logprob: -2.905803918838501
    4. 'v' → logprob: -3.530803918838501
    5. ' ' → logprob: -4.90580415725708
    6. ' 
' → logprob: -6.78080415725708
    7. ' vmax' → logprob: -7.53080415725708
    8. '        ' → logprob: -7.65580415725708
    9. ' winner' → logprob: -7.65580415725708
    10. '_' → logprob: -8.280803680419922

Token 45: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -8.77627644513268e-06
    2. '_' → logprob: -12.250008583068848
    3. '_v' → logprob: -13.750008583068848
    4. ' _' → logprob: -14.000008583068848
    5. '_s' → logprob: -14.250008583068848
    6. ')' → logprob: -15.125008583068848
    7. '<|end|>' → logprob: -15.125008583068848
    8. '```' → logprob: -15.375008583068848
    9. 'f' → logprob: -16.125009536743164
    10. '_w' → logprob: -17.000009536743164

Token 46: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -0.060589950531721115
    2. '_f' → logprob: -3.3105900287628174
    3. 'fish' → logprob: -3.9355900287628174
    4. 'is' → logprob: -7.185589790344238
    5. '_' → logprob: -7.560589790344238
    6. 'ishes' → logprob: -8.310589790344238
    7. 'v' → logprob: -8.435589790344238
    8. 'isher' → logprob: -8.560589790344238
    9. 'f' → logprob: -8.810589790344238
    10. 'ishing' → logprob: -8.935589790344238

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02637624368071556
    2. '=' → logprob: -3.651376247406006
    3. '=v' → logprob: -9.651375770568848
    4. ' ' → logprob: -11.651375770568848
    5. ' =
' → logprob: -14.276375770568848
    6. ',' → logprob: -14.276375770568848
    7. 'v' → logprob: -14.901375770568848
    8. ' v' → logprob: -15.026375770568848
    9. '<|end|>' → logprob: -15.901375770568848
    10. '```' → logprob: -16.151376724243164

Token 48: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.17974640429019928
    2. 'v' → logprob: -1.804746389389038
    3. ' ' → logprob: -13.804746627807617
    4. ' ' → logprob: -15.054746627807617
    5. '	v' → logprob: -15.554746627807617
    6. ' a' → logprob: -17.054746627807617
    7. '_v' → logprob: -17.617246627807617
    8. '```' → logprob: -17.679746627807617
    9. ')v' → logprob: -17.867246627807617
    10. ' 
' → logprob: -17.929746627807617

Token 49: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013736311346292496
    2. 'winner' → logprob: -4.888736248016357
    3. ' winner' → logprob: -5.263736248016357
    4. '```' → logprob: -8.138736724853516
    5. '
' → logprob: -8.388736724853516
    6. '        
' → logprob: -8.763736724853516
    7. '   ' → logprob: -9.513736724853516
    8. ' 
' → logprob: -10.388736724853516
    9. '``' → logprob: -10.513736724853516
    10. '\' → logprob: -11.138736724853516

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007470945129171014
    2. '```' → logprob: -7.500747203826904
    3. 'winner' → logprob: -9.750746726989746
    4. ' winner' → logprob: -9.875746726989746
    5. '
' → logprob: -10.625746726989746
    6. '``' → logprob: -10.625746726989746
    7. '   ' → logprob: -11.500746726989746
    8. '        
' → logprob: -11.750746726989746
    9. '_' → logprob: -12.625746726989746
    10. '`' → logprob: -13.125746726989746

Token 51: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -0.0018081029411405325
    2. ' winner' → logprob: -7.001808166503906
    3. 'a' → logprob: -7.251808166503906
    4. '       ' → logprob: -9.376808166503906
    5. 'w' → logprob: -9.876808166503906
    6. '   ' → logprob: -10.251808166503906
    7. '_' → logprob: -12.501808166503906
    8. '    ' → logprob: -12.751808166503906
    9. ' a' → logprob: -13.501808166503906
    10. '```' → logprob: -13.751808166503906

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00868004746735096
    2. '=' → logprob: -4.7586798667907715
    3. ' ' → logprob: -10.00868034362793
    4. '_' → logprob: -11.38368034362793
    5. '<|end|>' → logprob: -11.88368034362793
    6. ' +=' → logprob: -14.75868034362793
    7. ' =
' → logprob: -15.50868034362793
    8. ' |=' → logprob: -15.63368034362793
    9. '_space' → logprob: -15.75868034362793
    10. 'space' → logprob: -15.75868034362793

Token 53: ' a' (ID: 261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02057867869734764
    2. 'a' → logprob: -4.020578861236572
    3. ' _' → logprob: -6.270578861236572
    4. '_a' → logprob: -7.770578861236572
    5. ' a' → logprob: -9.270578384399414
    6. '_
' → logprob: -12.145578384399414
    7. ' ' → logprob: -13.145578384399414
    8. '_
' → logprob: -13.395578384399414
    9. '   ' → logprob: -13.395578384399414
    10. '_=' → logprob: -13.645578384399414

Token 54: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0028744153678417206
    2. '```' → logprob: -6.877874374389648
    3. '<|end|>' → logprob: -7.877874374389648
    4. '\n' → logprob: -8.002874374389648
    5. '
' → logprob: -8.252874374389648
    6. '#' → logprob: -8.627874374389648
    7. 'n' → logprob: -8.877874374389648
    8. ')' → logprob: -9.002874374389648
    9. ' 
' → logprob: -9.127874374389648
    10. 'winner' → logprob: -9.627874374389648

Token 55: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002494191285222769
    2. '```' → logprob: -8.875249862670898
    3. 'p' → logprob: -9.375249862670898
    4. ')' → logprob: -12.250249862670898
    5. '
' → logprob: -12.500249862670898
    6. ' print' → logprob: -12.875249862670898
    7. '#' → logprob: -13.000249862670898
    8. 'pr' → logprob: -13.375249862670898
    9. 'w' → logprob: -13.500249862670898
    10. 'prin' → logprob: -13.750249862670898

Token 56: ' elif' (ID: 9497)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3115054965019226
    2. '\n' → logprob: -1.6865055561065674
    3. '```' → logprob: -3.3115055561065674
    4. '<|end|>' → logprob: -3.9365055561065674
    5. '
' → logprob: -4.811505317687988
    6. 'n' → logprob: -4.936505317687988
    7. 'newline' → logprob: -5.936505317687988
    8. 'return' → logprob: -6.811505317687988
    9. 'w' → logprob: -7.061505317687988
    10. '#' → logprob: -7.186505317687988

Token 57: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.0025083590298891068
    2. 'v' → logprob: -6.002508163452148
    3. ' ' → logprob: -10.502508163452148
    4. ' ' → logprob: -12.627508163452148
    5. '	v' → logprob: -14.502508163452148
    6. ' a' → logprob: -15.377508163452148
    7. '  ' → logprob: -15.752508163452148
    8. ' (' → logprob: -15.815008163452148
    9. '   ' → logprob: -15.877508163452148
    10. '```' → logprob: -15.940008163452148

Token 58: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16719599068164825
    2. ' >' → logprob: -1.9171960353851318
    3. ' >=' → logprob: -5.417195796966553
    4. '==' → logprob: -6.167195796966553
    5. ' ' → logprob: -8.917196273803711
    6. '>' → logprob: -8.917196273803711
    7. ' <' → logprob: -9.917196273803711
    8. ' <=' → logprob: -9.917196273803711
    9. ' =' → logprob: -10.792196273803711
    10. '=' → logprob: -11.292196273803711

Token 59: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1602456420660019
    2. 'max' → logprob: -1.910245656967163
    3. ' ' → logprob: -11.535245895385742
    4. 'v' → logprob: -12.160245895385742
    5. '_max' → logprob: -12.785245895385742
    6. ' v' → logprob: -14.160245895385742
    7. '(max' → logprob: -14.535245895385742
    8. '	max' → logprob: -14.785245895385742
    9. ' ' → logprob: -14.910245895385742
    10. '=max' → logprob: -14.910245895385742

Token 60: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.000170882252859883
    2. '_' → logprob: -8.750170707702637
    3. ' _' → logprob: -12.375170707702637
    4. '   ' → logprob: -13.125170707702637
    5. ')' → logprob: -13.750170707702637
    6. '_v' → logprob: -13.750170707702637
    7. 'fish' → logprob: -14.250170707702637
    8. '_max' → logprob: -14.375170707702637
    9. '```' → logprob: -14.500170707702637
    10. 'f' → logprob: -15.750170707702637

Token 61: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -0.0010778261348605156
    2. 'fish' → logprob: -7.126077651977539
    3. 'is' → logprob: -8.376077651977539
    4. 'isht' → logprob: -11.376077651977539
    5. 'i' → logprob: -11.876077651977539
    6. '_f' → logprob: -12.126077651977539
    7. 'ishlist' → logprob: -12.501077651977539
    8. '_' → logprob: -13.626077651977539
    9. ' ish' → logprob: -13.626077651977539
    10. 'isher' → logprob: -13.751077651977539

Token 62: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00808695238083601
    2. 'and' → logprob: -4.883087158203125
    3. '   ' → logprob: -8.008087158203125
    4. '       ' → logprob: -9.508087158203125
    5. ':' → logprob: -9.758087158203125
    6. ' ' → logprob: -12.008087158203125
    7. ':
' → logprob: -13.133087158203125
    8. '    ' → logprob: -13.133087158203125
    9. ' a' → logprob: -13.633087158203125
    10. '	and' → logprob: -14.008087158203125

Token 63: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.011120688170194626
    2. 'a' → logprob: -4.511120796203613
    3. '   ' → logprob: -10.511120796203613
    4. '	a' → logprob: -10.636120796203613
    5. ' winner' → logprob: -12.011120796203613
    6. ' ' → logprob: -13.011120796203613
    7. '    ' → logprob: -13.073620796203613
    8. '(a' → logprob: -13.448620796203613
    9. 'winner' → logprob: -13.573620796203613
    10. ' ' → logprob: -13.573620796203613

Token 64: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.026483168825507164
    2. '<' → logprob: -3.7764830589294434
    3. ' >' → logprob: -6.026483058929443
    4. '<w' → logprob: -7.401483058929443
    5. ' ' → logprob: -8.901483535766602
    6. '>' → logprob: -9.651483535766602
    7. 'w' → logprob: -13.526483535766602
    8. '<n' → logprob: -14.276483535766602
    9. '<|end|>' → logprob: -14.276483535766602
    10. '>w' → logprob: -14.651483535766602

Token 65: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.0009794592624530196
    2. ' winner' → logprob: -7.000979423522949
    3. 'w' → logprob: -9.62597942352295
    4. '   ' → logprob: -13.62597942352295
    5. '	w' → logprob: -15.50097942352295
    6. 'win' → logprob: -15.50097942352295
    7. '>w' → logprob: -16.125980377197266
    8. ' ' → logprob: -16.750980377197266
    9. '<w' → logprob: -16.750980377197266
    10. '       ' → logprob: -16.750980377197266

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11433503776788712
    2. '       ' → logprob: -2.614335060119629
    3. ':
' → logprob: -3.364335060119629
    4. ' :' → logprob: -9.989335060119629
    5. '):
' → logprob: -10.114335060119629
    6. '):' → logprob: -10.114335060119629
    7. '   ' → logprob: -10.364335060119629
    8. '<|end|>' → logprob: -10.489335060119629
    9. ')' → logprob: -11.614335060119629
    10. ' :
' → logprob: -11.739335060119629

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044314246624708176
    2. ' winner' → logprob: -3.16931414604187
    3. 'winner' → logprob: -6.794314384460449
    4. '   ' → logprob: -9.04431438446045
    5. '```' → logprob: -9.91931438446045
    6. '           ' → logprob: -12.41931438446045
    7. '        
' → logprob: -12.41931438446045
    8. '
' → logprob: -12.91931438446045
    9. ' 
' → logprob: -13.16931438446045
    10. '<w' → logprob: -13.54431438446045

Token 68: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -0.014211805537343025
    2. ' winner' → logprob: -4.264211654663086
    3. '       ' → logprob: -10.764211654663086
    4. '   ' → logprob: -10.889211654663086
    5. '```' → logprob: -11.889211654663086
    6. 'w' → logprob: -13.889211654663086
    7. 'win' → logprob: -15.389211654663086
    8. '           ' → logprob: -15.514211654663086
    9. '``' → logprob: -16.014211654663086
    10. 'Winner' → logprob: -16.639211654663086

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197071075439453
    2. '=' → logprob: -2.8119707107543945
    3. '<|end|>' → logprob: -13.061970710754395
    4. ' ' → logprob: -14.686970710754395
    5. ' =
' → logprob: -14.811970710754395
    6. ' =)' → logprob: -16.186969757080078
    7. '＝' → logprob: -17.686969757080078
    8. ' =
' → logprob: -18.186969757080078
    9. '_' → logprob: -18.561969757080078
    10. ' |=' → logprob: -18.561969757080078

Token 70: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25193002820014954
    2. ' a' → logprob: -1.5019299983978271
    3. '	a' → logprob: -14.876930236816406
    4. '_a' → logprob: -15.626930236816406
    5. ' ' → logprob: -15.876930236816406
    6. '   ' → logprob: -16.251930236816406
    7. ' ' → logprob: -16.626930236816406
    8. '    ' → logprob: -18.126930236816406
    9. '>a' → logprob: -18.439430236816406
    10. 'а' → logprob: -18.751930236816406

Token 71: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004781119059771299
    2. '
' → logprob: -5.379781246185303
    3. '```' → logprob: -9.504780769348145
    4. ' print' → logprob: -11.129780769348145
    5. ')' → logprob: -11.129780769348145
    6. ' 
' → logprob: -11.254780769348145
    7. '<|end|>' → logprob: -11.379780769348145
    8. '  
' → logprob: -11.629780769348145
    9. '
' → logprob: -11.629780769348145
    10. '\n' → logprob: -12.379780769348145

Token 72: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003675133048091084
    2. '```' → logprob: -9.125367164611816
    3. '\n' → logprob: -9.625367164611816
    4. '
' → logprob: -9.875367164611816
    5. ' print' → logprob: -9.875367164611816
    6. ')' → logprob: -10.250367164611816
    7. '<|end|>' → logprob: -10.500367164611816
    8. '#' → logprob: -11.750367164611816
    9. '#print' → logprob: -12.125367164611816
    10. ' 
' → logprob: -12.625367164611816

Token 73: '(w' (ID: 7420)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008389392867684364
    2. '('' → logprob: -5.258389472961426
    3. '(w' → logprob: -6.258389472961426
    4. '("("' → logprob: -6.883389472961426
    5. '()' → logprob: -8.633389472961426
    6. '(f' → logprob: -11.008389472961426
    7. '("' → logprob: -11.758389472961426
    8. '(`' → logprob: -13.383389472961426
    9. '(
' → logprob: -13.633389472961426
    10. '((' → logprob: -13.633389472961426

Token 74: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -3.79811754100956e-05
    2. 'inn' → logprob: -10.375038146972656
    3. 'inne' → logprob: -13.000038146972656
    4. 'in' → logprob: -13.500038146972656
    5. '_inner' → logprob: -13.750038146972656
    6. 'iner' → logprob: -14.250038146972656
    7. ' inner' → logprob: -14.500038146972656
    8. 'i' → logprob: -14.875038146972656
    9. 'inning' → logprob: -15.625038146972656
    10. 'winner' → logprob: -16.375038146972656

Token 75: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.5
    3. '))' → logprob: -17.125
    4. ' )' → logprob: -17.25
    5. ')`' → logprob: -18.125
    6. ')}' → logprob: -19.0
    7. '')' → logprob: -19.125
    8. '`)' → logprob: -19.5
    9. '```' → logprob: -19.875
    10. '}' → logprob: -19.875

Token 76: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -6.12258882028982e-05
    2. ' max' → logprob: -10.00006103515625
    3. ')' → logprob: -11.12506103515625
    4. 'end' → logprob: -14.62506103515625
    5. '(max' → logprob: -15.37506103515625
    6. 'v' → logprob: -15.87506103515625
    7. '	max' → logprob: -17.50006103515625
    8. '   ' → logprob: -17.50006103515625
    9. 'min' → logprob: -17.62506103515625
    10. ',max' → logprob: -17.62506103515625

Token 77: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.125000953674316
    3. ')' → logprob: -15.625000953674316
    4. 'fish' → logprob: -17.250001907348633
    5. ')_' → logprob: -17.375001907348633
    6. ' _' → logprob: -17.625001907348633
    7. '_v' → logprob: -17.875001907348633
    8. 'f' → logprob: -18.375001907348633
    9. '-f' → logprob: -18.625001907348633
    10. '_)' → logprob: -18.875001907348633

Token 78: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -0.000516813131980598
    2. 'is' → logprob: -7.875516891479492
    3. 'fish' → logprob: -9.500516891479492
    4. 'sh' → logprob: -10.625516891479492
    5. 'i' → logprob: -11.375516891479492
    6. '_f' → logprob: -11.500516891479492
    7. '_' → logprob: -12.500516891479492
    8. '```' → logprob: -13.375516891479492
    9. ' ish' → logprob: -13.375516891479492
    10. '-ish' → logprob: -14.000516891479492

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.125
    3. ' )' → logprob: -16.75
    4. ')`' → logprob: -18.75
    5. '))' → logprob: -19.375
    6. '')' → logprob: -19.875
    7. '`)' → logprob: -20.625
    8. '）' → logprob: -20.75
    9. ')#' → logprob: -20.75
    10. '```' → logprob: -21.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 48.05%
Précision adaptée (1ère position): 50.65%
Précision (top 10): 85.71%
================================================================================
