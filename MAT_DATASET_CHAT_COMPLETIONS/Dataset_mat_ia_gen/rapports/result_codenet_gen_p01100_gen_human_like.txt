================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import collections

def can_assign(m, edges, n, low, high):
    # Construct a flow network to check if an orientation exists
    # such that each student's indegree (received gifts) is between low and high
    #
    # We use a circulation with demands approach:
    # For each student:
    #   demand = low
    # Each edge (friend pair) is assigned direction in flow network from u to v or v to u
    # We want to choose directions to satisfy demands
    #
    # Build graph:
    # S - super source
    # T - super sink
    # For each edge:
    #   Introduce an edge node, connect S->edge node (capacity 1) (each edge must be assigned)
    #   edge node -> u and edge node -> v capacity 1, direction chosen by flow
    # For each student node:
    #   connect student -> T with capacity (high - low)
    #
    # total demand = m * low, total flow = m
    #
    # If max flow equals m, feasible assignment exists.

    S = 0
    T = 1
    # nodes: S=0, T=1, edge nodes: 2..m+1, student nodes: m+2 .. m+1+n
    # total nodes = 2 + m + n
    size = 2 + m + n

    graph = [[] for _ in range(size)]

    def add_edge(u, v, cap):
        graph[u].append([v, cap, len(graph[v])])
        graph[v].append([u, 0, len(graph[u]) - 1])

    # Add edges from S to edge nodes with capacity 1
    for i in range(m):
        add_edge(S, 2 + i, 1)
    # Add edges from student nodes to T with capacity high - low
    for i in range(n):
        add_edge(2 + m + i, T, high - low)

    # For each edge node i corresponds to friendship pair edges[i]=(u,v)
    # Add edges from edge node to u node and v node with capacity 1
    # selecting direction means flow goes from edge node to student node
    for i, (u, v) in enumerate(edges):
        u_node = 2 + m + (u - 1)
        v_node = 2 + m + (v - 1)
        edge_node = 2 + i
        add_edge(edge_node, u_node, 1)
        add_edge(edge_node, v_node, 1)

    # Now check if max flow is m
    # max flow implementation (Dinic)
    level = [0]*size
    iter = [0]*size

    def bfs():
        for i in range(size):
            level[i] = -1
        level[S] = 0
        queue = collections.deque([S])
        while queue:
            u = queue.popleft()
            for i,(v,c,rev) in enumerate(graph[u]):
                if c > 0 and level[v] < 0:
                    level[v] = level[u] + 1
                    queue.append(v)
        return level[T] != -1

    def dfs(u, flow):
        if u == T:
            return flow
        for i in range(iter[u], len(graph[u])):
            v, c, rev = graph[u][i]
            if c > 0 and level[u] < level[v]:
                d = dfs(v, min(flow, c))
                if d > 0:
                    graph[u][i][1] -= d
                    graph[v][rev][1] += d
                    return d
            iter[u] += 1
        return 0

    flow = 0
    while bfs():
        iter = [0]*size
        f = dfs(S, 10**9)
        while f > 0:
            flow += f
            f = dfs(S, 10**9)
    return flow == m


def main():
    input = sys.stdin.readline
    while True:
        line = ''
        while line.strip() == '':
            line = input()
            if line == '':
                return
        n, m = map(int, line.strip().split())
        if n == 0 and m == 0:
            break
        edges = []
        for _ in range(m):
            while True:
                l = input()
                if l.strip() != '':
                    break
            u,v = map(int, l.strip().split())
            edges.append((u,v))

        # Binary search for minimal difference (h - l)
        # l and h in [0, m]
        left, right = 0, m
        best_diff = m + 1
        best_l = -1
        best_h = -1
        # For minimal difference, for fixed difference d,
        # try all l from 0 to m - d to find feasible with that diff
        # Among those, choose max l.

        for d in range(m+1):
            found = False
            cur_l = -1
            cur_h = -1
            for l in range(m - d +1):
                h = l + d
                if can_assign(m, edges, n, l, h):
                    found = True
                    cur_l = l
                    cur_h = h
                    # since want max l for this diff, continue checking
            if found:
                best_diff = d
                best_l = cur_l
                best_h = cur_h
                break
        print(best_l, best_h)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00016110755677800626
    2. 'os' → logprob: -8.750161170959473
    3. ' math' → logprob: -13.625161170959473
    4. '"os' → logprob: -14.875161170959473
    5. ' re' → logprob: -15.250161170959473
    6. ' o' → logprob: -15.625161170959473
    7. ' ' → logprob: -15.875161170959473
    8. ' json' → logprob: -16.000160217285156
    9. '	os' → logprob: -16.125160217285156
    10. '_os' → logprob: -16.750160217285156

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11584419757127762
    2. 'import' → logprob: -3.115844249725342
    3. '\' → logprob: -3.615844249725342
    4. '\n' → logprob: -3.865844249725342
    5. 'newline' → logprob: -5.365844249725342
    6. '
' → logprob: -5.615844249725342
    7. '

' → logprob: -5.740844249725342
    8. ',' → logprob: -6.615844249725342
    9. '.
' → logprob: -6.740844249725342
    10. '```' → logprob: -6.990844249725342

Token 6: 'def' (ID: 1314)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -1.5830039978027344
    2. 'deque' → logprob: -1.8330039978027344
    3. 'from' → logprob: -2.0830039978027344
    4. 'import' → logprob: -2.3330039978027344
    5. '
' → logprob: -2.7080039978027344
    6. 'default' → logprob: -2.7080039978027344
    7. 'def' → logprob: -2.9580039978027344
    8. '

' → logprob: -3.4580039978027344
    9. ',' → logprob: -3.7080039978027344
    10. '_' → logprob: -3.8330039978027344

Token 7: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010058735497295856
    2. '_' → logprob: -5.260058879852295
    3. ' process' → logprob: -6.510058879852295
    4. ' space' → logprob: -7.010058879852295
    5. ' main' → logprob: -7.385058879852295
    6. ' _' → logprob: -8.385058403015137
    7. ' read' → logprob: -8.385058403015137
    8. ' calculate' → logprob: -9.010058403015137
    9. '_space' → logprob: -9.260058403015137
    10. ' parse' → logprob: -9.385058403015137

Token 8: '_assign' (ID: 55018)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016515925526618958
    2. ' _' → logprob: -4.391515731811523
    3. ' ' → logprob: -7.016515731811523
    4. '_accept' → logprob: -7.016515731811523
    5. '_append' → logprob: -8.016515731811523
    6. '_c' → logprob: -8.391515731811523
    7. '_continue' → logprob: -8.641515731811523
    8. '_construct' → logprob: -8.891515731811523
    9. '_cons' → logprob: -9.141515731811523
    10. '_access' → logprob: -9.141515731811523

Token 9: '(m' (ID: 2145)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007004493847489357
    2. '(' → logprob: -5.632004261016846
    3. ' _' → logprob: -6.632004261016846
    4. '_space' → logprob: -7.007004261016846
    5. ' (' → logprob: -8.257004737854004
    6. '_token' → logprob: -8.507004737854004
    7. '_to' → logprob: -8.757004737854004
    8. '_tokens' → logprob: -9.382004737854004
    9. '_spaces' → logprob: -9.382004737854004
    10. '_task' → logprob: -10.132004737854004

Token 10: ',' (ID: 11)
  Prédit: 'anager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anager' → logprob: -0.6685094237327576
    2. 'emory' → logprob: -2.2935094833374023
    3. 'essage' → logprob: -2.7935094833374023
    4. 'odule' → logprob: -3.4185094833374023
    5. 'ember' → logprob: -3.4185094833374023
    6. 'ap' → logprob: -3.5435094833374023
    7. 'apping' → logprob: -3.7935094833374023
    8. 'ail' → logprob: -3.7935094833374023
    9. 'embership' → logprob: -3.7935094833374023
    10. 'em' → logprob: -4.043509483337402

Token 11: ' edges' (ID: 22569)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.36344096064567566
    2. ' t' → logprob: -3.113440990447998
    3. ' task' → logprob: -3.363440990447998
    4. 'n' → logprob: -3.363440990447998
    5. ' tasks' → logprob: -3.613440990447998
    6. ' p' → logprob: -3.738440990447998
    7. ' s' → logprob: -3.988440990447998
    8. ' k' → logprob: -3.988440990447998
    9. ' b' → logprob: -4.613440990447998
    10. ' d' → logprob: -4.988440990447998

Token 12: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05510275065898895
    2. ')' → logprob: -3.055102825164795
    3. ',' → logprob: -5.055102825164795
    4. '):
' → logprob: -10.305102348327637
    5. ':' → logprob: -10.930102348327637
    6. ' ):' → logprob: -11.305102348327637
    7. '[' → logprob: -11.305102348327637
    8. ''):' → logprob: -12.180102348327637
    9. ')):' → logprob: -12.305102348327637
    10. '=' → logprob: -12.680102348327637

Token 13: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3043313026428223
    2. ' tasks' → logprob: -1.3043313026428223
    3. ' workers' → logprob: -2.4293313026428223
    4. ' colors' → logprob: -3.0543313026428223
    5. ' people' → logprob: -3.5543313026428223
    6. ' nodes' → logprob: -3.6793313026428223
    7. 'n' → logprob: -3.9293313026428223
    8. ' employees' → logprob: -4.116831302642822
    9. ' capacity' → logprob: -4.116831302642822
    10. 'tasks' → logprob: -4.304331302642822

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019641997292637825
    2. ',' → logprob: -4.269641876220703
    3. ')' → logprob: -5.394641876220703
    4. '_nodes' → logprob: -7.769641876220703
    5. ' ):' → logprob: -8.519641876220703
    6. '_' → logprob: -9.519641876220703
    7. '):
' → logprob: -9.519641876220703
    8. ':' → logprob: -10.269641876220703
    9. '_vertices' → logprob: -10.644641876220703
    10. '=' → logprob: -10.769641876220703

Token 15: ' low' (ID: 4465)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6625874042510986
    2. ' k' → logprob: -1.4125874042510986
    3. ' colors' → logprob: -3.1625874042510986
    4. 'm' → logprob: -3.2875874042510986
    5. 'k' → logprob: -3.4125874042510986
    6. ' tasks' → logprob: -4.1625871658325195
    7. ' t' → logprob: -4.5375871658325195
    8. ' p' → logprob: -4.5375871658325195
    9. ' color' → logprob: -4.5375871658325195
    10. ' s' → logprob: -4.8500871658325195

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7406306266784668
    2. 'er' → logprob: -0.7406306266784668
    3. '):' → logprob: -3.240630626678467
    4. ')' → logprob: -6.365630626678467
    5. 'est' → logprob: -6.615630626678467
    6. '=' → logprob: -6.990630626678467
    7. ' ,' → logprob: -7.365630626678467
    8. 'erval' → logprob: -7.865630626678467
    9. '_' → logprob: -7.990630626678467
    10. ':' → logprob: -8.615631103515625

Token 17: ' high' (ID: 1932)
  Prédit: ' high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.11136484891176224
    2. 'high' → logprob: -2.3613648414611816
    3. ' mid' → logprob: -5.611364841461182
    4. ' ' → logprob: -6.861364841461182
    5. ' up' → logprob: -6.986364841461182
    6. ' k' → logprob: -7.611364841461182
    7. '   ' → logprob: -7.923864841461182
    8. 'mid' → logprob: -8.42386531829834
    9. ' v' → logprob: -8.61136531829834
    10. ' upp' → logprob: -8.73636531829834

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007085930090397596
    2. ')' → logprob: -5.132085800170898
    3. ',' → logprob: -6.882085800170898
    4. ' ):' → logprob: -9.507085800170898
    5. '):
' → logprob: -11.007085800170898
    6. ':' → logprob: -11.132085800170898
    7. '=' → logprob: -11.382085800170898
    8. '_' → logprob: -12.882085800170898
    9. '):
' → logprob: -13.382085800170898
    10. ' ' → logprob: -13.382085800170898

Token 19: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051787033677101135
    2. '):' → logprob: -3.4267871379852295
    3. ' :' → logprob: -4.30178689956665
    4. '   ' → logprob: -6.92678689956665
    5. ':
' → logprob: -6.92678689956665
    6. '    ' → logprob: -7.17678689956665
    7. ',' → logprob: -7.92678689956665
    8. '():' → logprob: -8.176787376403809
    9. ')' → logprob: -8.301787376403809
    10. '):
' → logprob: -8.676787376403809

Token 20: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05832751467823982
    2. ' :' → logprob: -3.1833274364471436
    3. '   ' → logprob: -4.558327674865723
    4. '):' → logprob: -5.808327674865723
    5. '    ' → logprob: -7.683327674865723
    6. ' ' → logprob: -8.558327674865723
    7. ' ):' → logprob: -9.058327674865723
    8. ')' → logprob: -9.183327674865723
    9. ',' → logprob: -9.183327674865723
    10. '_' → logprob: -9.308327674865723

Token 21: ' Construct' (ID: 36230)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3759610652923584
    2. ' pass' → logprob: -2.2509610652923584
    3. ' graph' → logprob: -2.6259610652923584
    4. ' flow' → logprob: -2.6259610652923584
    5. ' dp' → logprob: -2.8759610652923584
    6. ' if' → logprob: -3.2509610652923584
    7. ' max' → logprob: -3.3759610652923584
    8. ' n' → logprob: -3.5009610652923584
    9. ' def' → logprob: -3.6259610652923584
    10. '    ' → logprob: -3.6259610652923584

Token 22: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0203372240066528
    2. ' bip' → logprob: -1.1453372240066528
    3. '_' → logprob: -2.8953371047973633
    4. ' the' → logprob: -3.3953371047973633
    5. ' graph' → logprob: -3.3953371047973633
    6. ' flow' → logprob: -3.3953371047973633
    7. '_graph' → logprob: -3.5203371047973633
    8. ' ' → logprob: -3.6453371047973633
    9. '   ' → logprob: -3.8953371047973633
    10. ' an' → logprob: -4.145337104797363

Token 23: ' flow' (ID: 7845)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6033358573913574
    2. ' flow' → logprob: -0.9783358573913574
    3. ' bip' → logprob: -2.9783358573913574
    4. 'graph' → logprob: -4.353335857391357
    5. 'flow' → logprob: -5.603335857391357
    6. ' ' → logprob: -5.978335857391357
    7. '   ' → logprob: -6.353335857391357
    8. ' network' → logprob: -6.728335857391357
    9. ' defaultdict' → logprob: -7.228335857391357
    10. ' capacity' → logprob: -7.978335857391357

Token 24: ' network' (ID: 5402)
  Prédit: ' network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' network' → logprob: -0.65888911485672
    2. ' ' → logprob: -1.6588890552520752
    3. '_' → logprob: -1.7838890552520752
    4. '_network' → logprob: -2.283889055252075
    5. ' graph' → logprob: -4.408889293670654
    6. ' _' → logprob: -5.533889293670654
    7. 'network' → logprob: -6.408889293670654
    8. ' =' → logprob: -7.158889293670654
    9. '   ' → logprob: -7.533889293670654
    10. ')' → logprob: -7.908889293670654

Token 25: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029915131628513336
    2. '   ' → logprob: -5.0299153327941895
    3. '<|end|>' → logprob: -5.2799153327941895
    4. '_' → logprob: -5.4049153327941895
    5. ' :' → logprob: -6.1549153327941895
    6. '
' → logprob: -6.4049153327941895
    7. ')' → logprob: -6.6549153327941895
    8. ' =' → logprob: -6.6549153327941895
    9. '):' → logprob: -6.9049153327941895
    10. '<|end|>' → logprob: -6.9049153327941895

Token 26: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.05575644597411156
    2. ' test' → logprob: -3.9307563304901123
    3. ' determine' → logprob: -4.555756568908691
    4. ' find' → logprob: -4.930756568908691
    5. 'check' → logprob: -5.430756568908691
    6. ' model' → logprob: -5.930756568908691
    7. '<|end|>' → logprob: -6.055756568908691
    8. ' ' → logprob: -6.430756568908691
    9. ' represent' → logprob: -6.680756568908691
    10. ' use' → logprob: -7.930756568908691

Token 27: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014283384196460247
    2. '<|end|>' → logprob: -5.264283180236816
    3. ' the' → logprob: -5.389283180236816
    4. ' ' → logprob: -6.764283180236816
    5. '_' → logprob: -6.764283180236816
    6. ' whether' → logprob: -7.389283180236816
    7. 'if' → logprob: -7.639283180236816
    8. ' for' → logprob: -7.639283180236816
    9. '<|end|>' → logprob: -8.639283180236816
    10. ' feasibility' → logprob: -10.014283180236816

Token 28: ' an' (ID: 448)
  Prédit: ' there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' there' → logprob: -0.1297985166311264
    2. ' a' → logprob: -3.379798412322998
    3. ' we' → logprob: -3.754798412322998
    4. ' the' → logprob: -4.004798412322998
    5. ' all' → logprob: -4.004798412322998
    6. ' m' → logprob: -4.629798412322998
    7. ' there's' → logprob: -5.004798412322998
    8. ' an' → logprob: -5.629798412322998
    9. ' each' → logprob: -6.379798412322998
    10. ' you' → logprob: -6.379798412322998

Token 29: ' orientation' (ID: 29546)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6224649548530579
    2. ' assignment' → logprob: -2.122464895248413
    3. '=' → logprob: -2.872464895248413
    4. ' flow' → logprob: -3.122464895248413
    5. ' edge' → logprob: -3.372464895248413
    6. '```' → logprob: -3.372464895248413
    7. ' augment' → logprob: -4.122465133666992
    8. 'assignment' → logprob: -4.122465133666992
    9. ' m' → logprob: -4.372465133666992
    10. ')' → logprob: -4.497465133666992

Token 30: ' exists' (ID: 13031)
  Prédit: ' exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exists' → logprob: -0.3195887506008148
    2. ' of' → logprob: -2.1945886611938477
    3. ' that' → logprob: -2.6945886611938477
    4. ' can' → logprob: -3.0695886611938477
    5. ' is' → logprob: -3.8195886611938477
    6. ' ' → logprob: -5.194588661193848
    7. ' for' → logprob: -5.194588661193848
    8. ' consistent' → logprob: -6.194588661193848
    9. '   ' → logprob: -6.319588661193848
    10. '_' → logprob: -6.569588661193848

Token 31: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04519194737076759
    2. ' :' → logprob: -3.295192003250122
    3. ' ' → logprob: -6.295191764831543
    4. ',' → logprob: -6.920191764831543
    5. '<|end|>' → logprob: -7.045191764831543
    6. '.' → logprob: -7.170191764831543
    7. '_' → logprob: -7.420191764831543
    8. '   ' → logprob: -8.045191764831543
    9. ' for' → logprob: -8.045191764831543
    10. ')' → logprob: -8.795191764831543

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010997242294251919
    2. '):' → logprob: -5.760997295379639
    3. '   ' → logprob: -6.010997295379639
    4. ' :' → logprob: -6.635997295379639
    5. ')' → logprob: -6.760997295379639
    6. '_' → logprob: -6.885997295379639
    7. ' ' → logprob: -7.010997295379639
    8. ',' → logprob: -8.51099681854248
    9. '<|end|>' → logprob: -8.88599681854248
    10. '.' → logprob: -9.13599681854248

Token 33: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08002429455518723
    2. ' :' → logprob: -2.705024242401123
    3. ' ' → logprob: -6.080024242401123
    4. '_' → logprob: -6.330024242401123
    5. '):' → logprob: -6.830024242401123
    6. '   ' → logprob: -7.080024242401123
    7. '.' → logprob: -7.080024242401123
    8. ')' → logprob: -7.205024242401123
    9. '```' → logprob: -7.330024242401123
    10. ',' → logprob: -8.330024719238281

Token 34: ' such' (ID: 2238)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.8143190145492554
    2. ':' → logprob: -0.9393190145492554
    3. ' ' → logprob: -2.314319133758545
    4. '   ' → logprob: -4.314319133758545
    5. ')' → logprob: -4.814319133758545
    6. '_' → logprob: -5.064319133758545
    7. 'u' → logprob: -5.564319133758545
    8. '```' → logprob: -5.564319133758545
    9. ' )' → logprob: -5.814319133758545
    10. 'n' → logprob: -5.814319133758545

Token 35: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.1034688800573349
    2. 'that' → logprob: -2.853468894958496
    3. ' as' → logprob: -3.228468894958496
    4. ')' → logprob: -8.478468894958496
    5. '_that' → logprob: -8.603468894958496
    6. 'as' → logprob: -8.978468894958496
    7. '<|end|>' → logprob: -8.978468894958496
    8. ' a' → logprob: -9.603468894958496
    9. 'That' → logprob: -9.603468894958496
    10. '<|end|>' → logprob: -9.728468894958496

Token 36: ' each' (ID: 2454)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.10808251798152924
    2. ' each' → logprob: -2.8580825328826904
    3. ' every' → logprob: -3.6080825328826904
    4. ' the' → logprob: -4.608082294464111
    5. 'all' → logprob: -5.733082294464111
    6. ' ' → logprob: -5.858082294464111
    7. ' for' → logprob: -7.358082294464111
    8. 'each' → logprob: -8.23308277130127
    9. ' no' → logprob: -8.60808277130127
    10. ' a' → logprob: -8.85808277130127

Token 37: ' student's' (ID: 119115)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.6576160192489624
    2. ' node' → logprob: -1.1576160192489624
    3. ' vertex' → logprob: -1.9076160192489624
    4. 'node' → logprob: -5.157616138458252
    5. 'edge' → logprob: -5.157616138458252
    6. 'vertex' → logprob: -5.407616138458252
    7. ' task' → logprob: -8.032615661621094
    8. ' user' → logprob: -8.157615661621094
    9. ' of' → logprob: -8.282615661621094
    10. ' edges' → logprob: -8.532615661621094

Token 38: ' inde' (ID: 6741)
  Prédit: ' degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' degree' → logprob: -1.055854320526123
    2. ' in' → logprob: -2.305854320526123
    3. ' edges' → logprob: -2.430854320526123
    4. ' out' → logprob: -2.555854320526123
    5. 'degree' → logprob: -2.555854320526123
    6. ' demands' → logprob: -3.180854320526123
    7. ' demand' → logprob: -3.180854320526123
    8. ' assigned' → logprob: -3.180854320526123
    9. ' node' → logprob: -3.930854320526123
    10. ' minimum' → logprob: -4.180854320526123

Token 39: 'gree' (ID: 44021)
  Prédit: 'gree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gree' → logprob: -0.001208922709338367
    2. 'grees' → logprob: -7.251208782196045
    3. 'g' → logprob: -8.126209259033203
    4. '```' → logprob: -9.501209259033203
    5. 'x' → logprob: -9.626209259033203
    6. 'egree' → logprob: -11.001209259033203
    7. 'nt' → logprob: -11.751209259033203
    8. '``' → logprob: -11.751209259033203
    9. 'ree' → logprob: -11.876209259033203
    10. 'gr' → logprob: -12.001209259033203

Token 40: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.05937524884939194
    2. ' ' → logprob: -4.059375286102295
    3. 's' → logprob: -4.434375286102295
    4. ' does' → logprob: -4.934375286102295
    5. ' and' → logprob: -5.059375286102295
    6. ' constraints' → logprob: -5.809375286102295
    7. ' <=' → logprob: -5.934375286102295
    8. ' constraint' → logprob: -6.059375286102295
    9. ' can' → logprob: -6.559375286102295
    10. '<|end|>' → logprob: -7.059375286102295

Token 41: 'received' (ID: 79385)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05438113212585449
    2. ' is' → logprob: -3.5543811321258545
    3. ' )' → logprob: -4.554381370544434
    4. ' ' → logprob: -5.679381370544434
    5. ' at' → logprob: -6.429381370544434
    6. ' and' → logprob: -6.429381370544434
    7. ' <=' → logprob: -6.554381370544434
    8. ' constraint' → logprob: -6.929381370544434
    9. ' constraints' → logprob: -7.179381370544434
    10. 's' → logprob: -7.429381370544434

Token 42: ' gifts' (ID: 22524)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12635822594165802
    2. ' ' → logprob: -4.0013580322265625
    3. ' from' → logprob: -4.1263580322265625
    4. ' edges' → logprob: -4.2513580322265625
    5. '```' → logprob: -4.2513580322265625
    6. ' is' → logprob: -4.5013580322265625
    7. 'from' → logprob: -5.3763580322265625
    8. ' at' → logprob: -5.3763580322265625
    9. ' messages' → logprob: -5.5013580322265625
    10. ' )' → logprob: -5.6263580322265625

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008901375345885754
    2. ' from' → logprob: -5.758901596069336
    3. ' )' → logprob: -6.008901596069336
    4. 's' → logprob: -6.633901596069336
    5. 'from' → logprob: -7.133901596069336
    6. ' is' → logprob: -7.258901596069336
    7. ' and' → logprob: -9.258901596069336
    8. ' ' → logprob: -9.758901596069336
    9. '   ' → logprob: -9.883901596069336
    10. '```' → logprob: -10.258901596069336

Token 44: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09001530706882477
    2. ' can' → logprob: -3.215015411376953
    3. ' ' → logprob: -4.090015411376953
    4. ')' → logprob: -4.465015411376953
    5. ' does' → logprob: -5.215015411376953
    6. '<|end|>' → logprob: -5.340015411376953
    7. 's' → logprob: -5.965015411376953
    8. ' from' → logprob: -6.590015411376953
    9. ' stays' → logprob: -7.465015411376953
    10. ' remains' → logprob: -7.840015411376953

Token 45: ' between' (ID: 2870)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.13954496383666992
    2. ' between' → logprob: -2.13954496383667
    3. ' within' → logprob: -5.88954496383667
    4. ' ' → logprob: -5.88954496383667
    5. '```' → logprob: -6.38954496383667
    6. 'at' → logprob: -6.88954496383667
    7. 'between' → logprob: -7.01454496383667
    8. ' exactly' → logprob: -7.13954496383667
    9. ' no' → logprob: -7.13954496383667
    10. ' in' → logprob: -7.51454496383667

Token 46: ' low' (ID: 4465)
  Prédit: ' low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.1822074055671692
    2. 'low' → logprob: -1.9322073459625244
    3. ' ' → logprob: -4.5572075843811035
    4. '<|end|>' → logprob: -4.5572075843811035
    5. '(low' → logprob: -8.807207107543945
    6. '  ' → logprob: -9.057207107543945
    7. ' and' → logprob: -9.182207107543945
    8. ' ' → logprob: -9.557207107543945
    9. ' the' → logprob: -9.557207107543945
    10. '_low' → logprob: -9.807207107543945

Token 47: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08038683235645294
    2. ' ' → logprob: -3.2053868770599365
    3. 'and' → logprob: -3.4553868770599365
    4. '+' → logprob: -6.205386638641357
    5. '_' → logprob: -7.080386638641357
    6. ' +' → logprob: -7.330386638641357
    7. '   ' → logprob: -7.705386638641357
    8. '```' → logprob: -8.205387115478516
    9. ' _' → logprob: -8.205387115478516
    10. ',' → logprob: -8.455387115478516

Token 48: ' high' (ID: 1932)
  Prédit: ' high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.06274161487817764
    2. 'high' → logprob: -2.81274151802063
    3. ' ' → logprob: -7.312741756439209
    4. ' and' → logprob: -9.43774127960205
    5. ' m' → logprob: -11.56274127960205
    6. '```' → logprob: -12.68774127960205
    7. '_high' → logprob: -12.93774127960205
    8. ' ' → logprob: -13.18774127960205
    9. '(high' → logprob: -13.18774127960205
    10. ' h' → logprob: -13.18774127960205

Token 49: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033733759075403214
    2. '):' → logprob: -3.90873384475708
    3. ' :' → logprob: -5.40873384475708
    4. '   ' → logprob: -5.78373384475708
    5. ',' → logprob: -5.90873384475708
    6. '(' → logprob: -6.90873384475708
    7. ')' → logprob: -7.65873384475708
    8. ' ' → logprob: -8.283733367919922
    9. ':
' → logprob: -8.283733367919922
    10. '_' → logprob: -8.908733367919922

Token 50: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01398707740008831
    2. '):' → logprob: -5.013987064361572
    3. '   ' → logprob: -5.763987064361572
    4. ':
' → logprob: -6.388987064361572
    5. ' :' → logprob: -6.638987064361572
    6. ')' → logprob: -8.01398754119873
    7. ',' → logprob: -8.76398754119873
    8. '):
' → logprob: -8.88898754119873
    9. ' ' → logprob: -9.26398754119873
    10. ' :
' → logprob: -9.38898754119873

Token 51: ' #
' (ID: 21888)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022244831547141075
    2. '   ' → logprob: -4.397244930267334
    3. ' :' → logprob: -5.022244930267334
    4. '):' → logprob: -6.522244930267334
    5. ':
' → logprob: -7.147244930267334
    6. '```' → logprob: -8.647244453430176
    7. ',' → logprob: -9.272244453430176
    8. '
' → logprob: -9.272244453430176
    9. ' :
' → logprob: -9.647244453430176
    10. '    ' → logprob: -9.897244453430176

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0458449125289917
    2. ':' → logprob: -4.170845031738281
    3. '    ' → logprob: -4.295845031738281
    4. ' :' → logprob: -4.670845031738281
    5. '):' → logprob: -6.545845031738281
    6. ' ' → logprob: -7.170845031738281
    7. 'def' → logprob: -7.420845031738281
    8. ',' → logprob: -7.420845031738281
    9. '_' → logprob: -7.920845031738281
    10. ' ):' → logprob: -8.170845031738281

Token 53: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11826704442501068
    2. '    ' → logprob: -3.993267059326172
    3. ' n' → logprob: -4.243267059326172
    4. 'n' → logprob: -4.368267059326172
    5. ' m' → logprob: -4.618267059326172
    6. ' source' → logprob: -4.743267059326172
    7. ' flow' → logprob: -5.368267059326172
    8. 'm' → logprob: -5.493267059326172
    9. '    
' → logprob: -5.868267059326172
    10. '#' (adapté à ' #') → logprob: -5.868267059326172

Token 54: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8099068999290466
    2. ' m' → logprob: -1.6849069595336914
    3. ' flow' → logprob: -2.4349069595336914
    4. ' graph' → logprob: -2.5599069595336914
    5. 'graph' → logprob: -3.8099069595336914
    6. ' source' → logprob: -3.9349069595336914
    7. 'm' → logprob: -4.059906959533691
    8. ' #' → logprob: -4.184906959533691
    9. 'from' → logprob: -4.309906959533691
    10. ' capacity' → logprob: -4.309906959533691

Token 55: ' use' (ID: 1199)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5227087736129761
    2. '   ' → logprob: -2.5227088928222656
    3. ' use' → logprob: -2.6477088928222656
    4. ' need' → logprob: -2.7727088928222656
    5. ' create' → logprob: -3.1477088928222656
    6. ' will' → logprob: -3.5227088928222656
    7. ' want' → logprob: -3.8977088928222656
    8. ''ll' → logprob: -4.022708892822266
    9. ' build' → logprob: -4.147708892822266
    10. ' add' → logprob: -4.147708892822266

Token 56: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1253810077905655
    2. ' the' → logprob: -3.8753809928894043
    3. ' bip' → logprob: -4.125380992889404
    4. ' max' → logprob: -4.375380992889404
    5. ' network' → logprob: -4.500380992889404
    6. ' ' → logprob: -4.750380992889404
    7. ' collections' → logprob: -4.750380992889404
    8. ' flow' → logprob: -5.000380992889404
    9. ' an' → logprob: -5.125380992889404
    10. ' m' → logprob: -5.500380992889404

Token 57: ' circulation' (ID: 41920)
  Prédit: ' flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flow' → logprob: -0.8707958459854126
    2. ' bip' → logprob: -0.8707958459854126
    3. ' defaultdict' → logprob: -2.995795726776123
    4. ' network' → logprob: -3.370795726776123
    5. ' graph' → logprob: -3.745795726776123
    6. ' max' → logprob: -4.370795726776123
    7. ' dict' → logprob: -4.495795726776123
    8. ' ' → logprob: -5.495795726776123
    9. ' Bip' → logprob: -6.120795726776123
    10. 'n' → logprob: -6.245795726776123

Token 58: ' with' (ID: 483)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.8523630499839783
    2. ' with' → logprob: -1.477363109588623
    3. ' network' → logprob: -2.977363109588623
    4. ' model' → logprob: -3.102363109588623
    5. 'problem' → logprob: -3.352363109588623
    6. 'with' → logprob: -3.477363109588623
    7. '_problem' → logprob: -3.602363109588623
    8. 'model' → logprob: -3.977363109588623
    9. 'network' → logprob: -4.352363109588623
    10. '_network' → logprob: -4.352363109588623

Token 59: ' demands' (ID: 27241)
  Prédit: ' demands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' demands' → logprob: -0.028585737571120262
    2. ' lower' → logprob: -3.77858567237854
    3. 'lower' → logprob: -5.903585910797119
    4. ' demand' → logprob: -6.153585910797119
    5. ' bounds' → logprob: -8.528585433959961
    6. ' node' → logprob: -9.778585433959961
    7. ' a' → logprob: -10.403585433959961
    8. '```' → logprob: -10.778585433959961
    9. ' circulation' → logprob: -10.903585433959961
    10. ' upper' → logprob: -11.028585433959961

Token 60: ' approach' (ID: 7139)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35048478841781616
    2. ' :' → logprob: -2.225484848022461
    3. '.' → logprob: -3.225484848022461
    4. 'def' → logprob: -3.475484848022461
    5. '   ' → logprob: -3.725484848022461
    6. '
' → logprob: -3.725484848022461
    7. ',' → logprob: -3.975484848022461
    8. ' =' → logprob: -4.100484848022461
    9. ' ' → logprob: -4.975484848022461
    10. 'import' → logprob: -5.725484848022461

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045409996062517166
    2. '   ' → logprob: -3.420409917831421
    3. ' :' → logprob: -5.42041015625
    4. '
' → logprob: -5.54541015625
    5. 'def' → logprob: -7.29541015625
    6. '):' → logprob: -7.67041015625
    7. '\' → logprob: -7.92041015625
    8. ':
' → logprob: -8.17041015625
    9. ',' → logprob: -8.17041015625
    10. '    
' → logprob: -8.67041015625

Token 62: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2573753297328949
    2. ' 
' → logprob: -2.3823752403259277
    3. '    ' → logprob: -2.8823752403259277
    4. '   ' → logprob: -3.6323752403259277
    5. '     
' → logprob: -4.507375240325928
    6. '<|end|>' → logprob: -4.757375240325928
    7. '\' → logprob: -5.007375240325928
    8. 'n' → logprob: -5.132375240325928
    9. '    
' → logprob: -5.132375240325928
    10. '\n' → logprob: -5.382375240325928

Token 63: ' #' (ID: 1069)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7525196671485901
    2. '   ' → logprob: -1.2525196075439453
    3. ' ' → logprob: -2.6275196075439453
    4. ' 
' → logprob: -2.8775196075439453
    5. '    
' → logprob: -3.1275196075439453
    6. '     
' → logprob: -3.2525196075439453
    7. 'n' → logprob: -5.252519607543945
    8. '   
' → logprob: -6.252519607543945
    9. ' n' → logprob: -6.252519607543945
    10. '  
' → logprob: -6.377519607543945

Token 64: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5282186269760132
    2. ' flow' → logprob: -1.6532186269760132
    3. ' n' → logprob: -2.2782187461853027
    4. 'def' → logprob: -2.7782187461853027
    5. '```' → logprob: -3.1532187461853027
    6. ' source' → logprob: -3.2782187461853027
    7. ' 
' → logprob: -3.5282187461853027
    8. 'n' → logprob: -3.6532187461853027
    9. ' m' → logprob: -3.7782187461853027
    10. ' ' → logprob: -3.7782187461853027

Token 65: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.10795657336711884
    2. ' node' → logprob: -3.357956647872925
    3. ' u' → logprob: -3.732956647872925
    4. 'each' → logprob: -3.857956647872925
    5. ' ' → logprob: -5.482956409454346
    6. ' edge' → logprob: -5.732956409454346
    7. ' e' → logprob: -5.857956409454346
    8. ' i' → logprob: -5.982956409454346
    9. ' every' → logprob: -6.607956409454346
    10. ' v' → logprob: -7.107956409454346

Token 66: ' student' (ID: 6760)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.04726073518395424
    2. 'edge' → logprob: -3.5472607612609863
    3. ' node' → logprob: -4.547260761260986
    4. ' student' → logprob: -6.297260761260986
    5. 'node' → logprob: -6.797260761260986
    6. 'u' → logprob: -7.047260761260986
    7. ' u' → logprob: -7.047260761260986
    8. ' edges' → logprob: -7.672260761260986
    9. ' vertex' → logprob: -7.922260761260986
    10. 'student' → logprob: -8.297260284423828

Token 67: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16238145530223846
    2. ' ,' → logprob: -2.037381410598755
    3. '<|end|>' → logprob: -4.662381649017334
    4. ':' → logprob: -5.412381649017334
    5. ' and' → logprob: -6.787381649017334
    6. ' ' → logprob: -6.787381649017334
    7. ')' → logprob: -7.037381649017334
    8. ' in' → logprob: -7.162381649017334
    9. '):' → logprob: -7.912381649017334
    10. '<|end|>' → logprob: -8.162381172180176

Token 68: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.3342152535915375
    2. ' ' → logprob: -1.3342152833938599
    3. ')' → logprob: -5.45921516418457
    4. '   ' → logprob: -5.45921516418457
    5. '     
' → logprob: -5.95921516418457
    6. '     ' → logprob: -6.45921516418457
    7. ' ' → logprob: -6.83421516418457
    8. '<|end|>' → logprob: -6.83421516418457
    9. ',' → logprob: -6.95921516418457
    10. ' )' → logprob: -7.08421516418457

Token 69: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8985387682914734
    2. '    ' → logprob: -1.0235388278961182
    3. '   ' → logprob: -2.898538827896118
    4. ' demand' → logprob: -3.523538827896118
    5. ' #' → logprob: -4.023538589477539
    6. 'd' → logprob: -4.148538589477539
    7. ' for' → logprob: -4.273538589477539
    8. ' demands' → logprob: -4.523538589477539
    9. ')' → logprob: -4.648538589477539
    10. '<|end|>' → logprob: -5.148538589477539

Token 70: '  ' (ID: 256)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.2719237506389618
    2. 'd' → logprob: -2.396923780441284
    3. '   ' → logprob: -2.521923780441284
    4. ' ' → logprob: -4.271923542022705
    5. ' d' → logprob: -4.771923542022705
    6. ' demand' → logprob: -4.771923542022705
    7. ',' → logprob: -5.271923542022705
    8. 'n' → logprob: -5.646923542022705
    9. ')' → logprob: -5.771923542022705
    10. ' demands' → logprob: -5.771923542022705

Token 71: ' demand' (ID: 8492)
  Prédit: ' demand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' demand' → logprob: -0.617774486541748
    2. 'd' → logprob: -0.992774486541748
    3. ' demands' → logprob: -2.992774486541748
    4. ' d' → logprob: -4.242774486541748
    5. 'dem' → logprob: -5.367774486541748
    6. ' in' → logprob: -6.117774486541748
    7. 'degree' → logprob: -6.242774486541748
    8. ' demanded' → logprob: -6.492774486541748
    9. '   ' → logprob: -6.617774486541748
    10. ' ' → logprob: -6.742774486541748

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028322190046310425
    2. '[' → logprob: -6.627832412719727
    3. ':' → logprob: -7.627832412719727
    4. ' ' → logprob: -8.002832412719727
    5. '=' → logprob: -8.252832412719727
    6. 's' → logprob: -9.502832412719727
    7. ' +=' → logprob: -10.002832412719727
    8. ',' → logprob: -10.127832412719727
    9. ' -=' → logprob: -10.252832412719727
    10. '   ' → logprob: -10.252832412719727

Token 73: ' low' (ID: 4465)
  Prédit: ' low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.10940168052911758
    2. 'low' → logprob: -2.3594017028808594
    3. ' m' → logprob: -5.609401702880859
    4. ' high' → logprob: -6.359401702880859
    5. ' ' → logprob: -6.484401702880859
    6. 'm' → logprob: -7.359401702880859
    7. ' n' → logprob: -7.859401702880859
    8. '0' → logprob: -8.48440170288086
    9. 'high' → logprob: -8.98440170288086
    10. '(low' → logprob: -8.98440170288086

Token 74: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5924809575080872
    2. ' -' → logprob: -1.5924808979034424
    3. '<|end|>' → logprob: -2.2174808979034424
    4. ' *' → logprob: -3.8424808979034424
    5. ')' → logprob: -4.2174811363220215
    6. ',' → logprob: -4.3424811363220215
    7. '[' → logprob: -4.7174811363220215
    8. '<|end|>' → logprob: -4.8424811363220215
    9. '[i' → logprob: -4.9674811363220215
    10. '   ' → logprob: -5.0924811363220215

Token 75: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44423043727874756
    2. '   ' → logprob: -2.069230556488037
    3. '\n' → logprob: -2.569230556488037
    4. '\' → logprob: -3.319230556488037
    5. ' ' → logprob: -3.819230556488037
    6. ',' → logprob: -4.194230556488037
    7. ' 
' → logprob: -4.444230556488037
    8. '    ' → logprob: -4.694230556488037
    9. '    
' → logprob: -4.694230556488037
    10. '  
' → logprob: -4.944230556488037

Token 77: ' Each' (ID: 11555)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7454000115394592
    2. '
' → logprob: -1.1203999519348145
    3. '\n' → logprob: -2.9953999519348145
    4. ' 
' → logprob: -3.3703999519348145
    5. ' ' → logprob: -3.8703999519348145
    6. '<|end|>' → logprob: -4.2453999519348145
    7. '```' → logprob: -4.2453999519348145
    8. '    
' → logprob: -4.4953999519348145
    9. '\' → logprob: -4.4953999519348145
    10. '  
' → logprob: -4.6203999519348145

Token 78: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.37408503890037537
    2. 'edge' → logprob: -2.249084949493408
    3. ' node' → logprob: -2.624084949493408
    4. ' student' → logprob: -2.749084949493408
    5. 'student' → logprob: -3.374084949493408
    6. 'node' → logprob: -4.249084949493408
    7. ' student's' → logprob: -5.374084949493408
    8. ' vertex' → logprob: -5.499084949493408
    9. 'vertex' → logprob: -6.374084949493408
    10. ''s' → logprob: -6.499084949493408

Token 79: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7073584794998169
    2. ' from' → logprob: -2.4573583602905273
    3. ' =' → logprob: -2.9573583602905273
    4. ' is' → logprob: -3.0823583602905273
    5. ' represents' → logprob: -3.2073583602905273
    6. ' ' → logprob: -3.2073583602905273
    7. ' has' → logprob: -3.4573583602905273
    8. 'from' → logprob: -3.7073583602905273
    9. ' :' → logprob: -3.7073583602905273
    10. ' in' → logprob: -3.8323583602905273

Token 80: 'friend' (ID: 18924)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5352065563201904
    2. ' u' → logprob: -1.7852065563201904
    3. ',' → logprob: -2.5352065563201904
    4. 'u' → logprob: -2.7852065563201904
    5. ' )' → logprob: -3.4102065563201904
    6. ' ,' → logprob: -4.2852067947387695
    7. ' from' → logprob: -4.4102067947387695
    8. '   ' → logprob: -4.7852067947387695
    9. 'from' → logprob: -5.0352067947387695
    10. ' ' → logprob: -5.5352067947387695

Token 81: ' pair' (ID: 10610)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7533587217330933
    2. ')' → logprob: -0.8783587217330933
    3. 'ship' → logprob: -2.378358840942383
    4. '   ' → logprob: -5.253358840942383
    5. '_' → logprob: -6.253358840942383
    6. ')s' → logprob: -6.378358840942383
    7. 'ships' → logprob: -6.378358840942383
    8. ' ' → logprob: -6.628358840942383
    9. ''s' → logprob: -6.878358840942383
    10. ' )' → logprob: -6.878358840942383

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029772823676466942
    2. ' )' → logprob: -3.6547727584838867
    3. '):' → logprob: -6.029772758483887
    4. ',' → logprob: -7.779772758483887
    5. '   ' → logprob: -8.529772758483887
    6. '),' → logprob: -9.529772758483887
    7. ' ' → logprob: -10.154772758483887
    8. 's' → logprob: -10.154772758483887
    9. ' ):' → logprob: -10.279772758483887
    10. ' ,' → logprob: -10.279772758483887

Token 83: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3413673639297485
    2. ' =' → logprob: -1.4663673639297485
    3. ':' → logprob: -2.091367244720459
    4. ' ' → logprob: -2.341367244720459
    5. '   ' → logprob: -2.841367244720459
    6. '<|end|>' → logprob: -2.966367244720459
    7. ' can' → logprob: -3.341367244720459
    8. '):' → logprob: -3.966367244720459
    9. ' is' → logprob: -4.091367244720459
    10. ' has' → logprob: -4.216367244720459

Token 84: ' assigned' (ID: 21482)
  Prédit: ' split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.7408052682876587
    2. ' represented' → logprob: -1.1158052682876587
    3. 'split' → logprob: -3.240805149078369
    4. ' given' → logprob: -3.615805149078369
    5. ' assigned' → logprob: -4.115805149078369
    6. ' splitted' → logprob: -4.240805149078369
    7. ' transformed' → logprob: -4.365805149078369
    8. ' converted' → logprob: -4.615805149078369
    9. ' replaced' → logprob: -4.615805149078369
    10. ' a' → logprob: -4.740805149078369

Token 85: ' direction' (ID: 9262)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.18068338930606842
    2. ' at' → logprob: -3.0556833744049072
    3. ' capacity' → logprob: -3.1806833744049072
    4. ' to' → logprob: -3.5556833744049072
    5. ' an' → logprob: -4.055683612823486
    6. ' either' → logprob: -4.805683612823486
    7. 'capacity' → logprob: -5.180683612823486
    8. 'a' → logprob: -5.305683612823486
    9. ' ' → logprob: -5.930683612823486
    10. ' with' → logprob: -7.055683612823486

Token 86: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10060247033834457
    2. ' ' → logprob: -3.350602388381958
    3. '<|end|>' → logprob: -4.350602626800537
    4. ',' → logprob: -4.600602626800537
    5. ' =' → logprob: -4.850602626800537
    6. ' s' → logprob: -4.975602626800537
    7. ':' → logprob: -5.100602626800537
    8. '   ' → logprob: -5.350602626800537
    9. ')' → logprob: -6.225602626800537
    10. '=' → logprob: -6.350602626800537

Token 87: ' flow' (ID: 7845)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6386839747428894
    2. ' [' → logprob: -1.1386840343475342
    3. ' one' → logprob: -3.013684034347534
    4. ' {' → logprob: -3.763684034347534
    5. 'tern' → logprob: -4.263683795928955
    6. ' either' → logprob: -4.263683795928955
    7. ' ' → logprob: -4.763683795928955
    8. ' the' → logprob: -4.763683795928955
    9. ' range' → logprob: -5.138683795928955
    10. '{' → logprob: -5.388683795928955

Token 88: ' network' (ID: 5402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.585811197757721
    2. '   ' → logprob: -2.085811138153076
    3. ' :' → logprob: -2.585811138153076
    4. ' =' → logprob: -2.585811138153076
    5. '
' → logprob: -3.335811138153076
    6. '):' → logprob: -3.460811138153076
    7. ' ' → logprob: -3.960811138153076
    8. 'def' → logprob: -3.960811138153076
    9. ')' → logprob: -4.710811138153076
    10. '_' → logprob: -4.960811138153076

Token 89: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08508826047182083
    2. '):' → logprob: -3.2100882530212402
    3. '   ' → logprob: -3.9600882530212402
    4. '
' → logprob: -5.21008825302124
    5. ',' → logprob: -5.83508825302124
    6. ')' → logprob: -5.83508825302124
    7. ':
' → logprob: -6.08508825302124
    8. ' :' → logprob: -6.21008825302124
    9. '):
' → logprob: -6.71008825302124
    10. 'def' → logprob: -6.96008825302124

Token 90: ' u' (ID: 337)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -1.027086615562439
    2. 'u' → logprob: -1.652086615562439
    3. 'm' → logprob: -2.6520867347717285
    4. ' a' → logprob: -2.7770867347717285
    5. 'a' → logprob: -2.9020867347717285
    6. ' student' → logprob: -3.0270867347717285
    7. ' the' → logprob: -3.1520867347717285
    8. ' u' → logprob: -3.2770867347717285
    9. 'student' → logprob: -3.9020867347717285
    10. 'one' → logprob: -4.1520867347717285

Token 91: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0017612135270610452
    2. ' ' → logprob: -7.251761436462402
    3. 'to' → logprob: -7.501761436462402
    4. ',' → logprob: -8.751761436462402
    5. ' ->' → logprob: -9.001761436462402
    6. ')' → logprob: -9.626761436462402
    7. ' ,' → logprob: -10.001761436462402
    8. '<|end|>' → logprob: -10.876761436462402
    9. 's' → logprob: -11.251761436462402
    10. '  ' → logprob: -11.376761436462402

Token 92: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.07000301033258438
    2. 'v' → logprob: -2.695003032684326
    3. ' ' → logprob: -9.820002555847168
    4. ' u' → logprob: -12.695002555847168
    5. 'u' → logprob: -13.195002555847168
    6. '	v' → logprob: -13.445002555847168
    7. '  ' → logprob: -13.695002555847168
    8. 's' → logprob: -14.195002555847168
    9. '<|end|>' → logprob: -14.445002555847168
    10. ' a' → logprob: -14.445002555847168

Token 93: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6117110252380371
    2. '   ' → logprob: -1.861711025238037
    3. '):' → logprob: -1.986711025238037
    4. '
' → logprob: -2.611711025238037
    5. ' :' → logprob: -3.861711025238037
    6. ',' → logprob: -3.861711025238037
    7. ')' → logprob: -4.736711025238037
    8. '):
' → logprob: -4.736711025238037
    9. 'def' → logprob: -5.361711025238037
    10. ' ' → logprob: -5.361711025238037

Token 94: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.005514176562428474
    2. ' ' → logprob: -5.880514144897461
    3. 'v' → logprob: -6.130514144897461
    4. ' from' → logprob: -8.630514144897461
    5. 'from' → logprob: -8.755514144897461
    6. '  ' → logprob: -9.630514144897461
    7. ' reverse' → logprob: -10.130514144897461
    8. ' the' → logprob: -10.880514144897461
    9. ' vice' → logprob: -11.255514144897461
    10. ' w' → logprob: -11.380514144897461

Token 95: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08156963437795639
    2. 'to' → logprob: -2.5815696716308594
    3. '<|end|>' → logprob: -6.331569671630859
    4. '_to' → logprob: -7.581569671630859
    5. ' ' → logprob: -8.95656967163086
    6. ',' → logprob: -9.33156967163086
    7. ')' → logprob: -10.08156967163086
    8. '+' → logprob: -10.08156967163086
    9. ' or' → logprob: -10.58156967163086
    10. '.' → logprob: -10.83156967163086

Token 96: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.47413355112075806
    2. 'u' → logprob: -0.9741335511207581
    3. '	u' → logprob: -10.224133491516113
    4. ' ' → logprob: -11.099133491516113
    5. '<|end|>' → logprob: -13.224133491516113
    6. '_u' → logprob: -13.849133491516113
    7. ' ' → logprob: -14.099133491516113
    8. '```' → logprob: -14.724133491516113
    9. '[u' → logprob: -15.474133491516113
    10. ',u' → logprob: -15.474133491516113

Token 97: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5229652523994446
    2. '   ' → logprob: -1.2729651927947998
    3. '):' → logprob: -3.0229651927948
    4. '
' → logprob: -3.1479651927948
    5. ' :' → logprob: -4.647965431213379
    6. ',' → logprob: -5.397965431213379
    7. ')' → logprob: -5.522965431213379
    8. ':
' → logprob: -5.647965431213379
    9. '    
' → logprob: -6.022965431213379
    10. '):
' → logprob: -6.022965431213379

Token 98: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5493565797805786
    2. '   ' → logprob: -1.0493565797805786
    3. '):' → logprob: -3.549356460571289
    4. '
' → logprob: -3.674356460571289
    5. ' :' → logprob: -5.424356460571289
    6. ')' → logprob: -6.299356460571289
    7. '    
' → logprob: -6.299356460571289
    8. '):
' → logprob: -6.299356460571289
    9. '\n' → logprob: -6.424356460571289
    10. ':
' → logprob: -6.549356460571289

Token 99: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6930838823318481
    2. '   ' → logprob: -1.3180838823318481
    3. '
' → logprob: -1.8180838823318481
    4. '):' → logprob: -3.4430837631225586
    5. '\n' → logprob: -4.318083763122559
    6. '):
' → logprob: -5.068083763122559
    7. ':
' → logprob: -5.318083763122559
    8. ')' → logprob: -6.068083763122559
    9. '    
' → logprob: -6.068083763122559
    10. ' 
' → logprob: -6.443083763122559

Token 100: ' We' (ID: 1416)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7197211980819702
    2. '   ' → logprob: -1.0947211980819702
    3. '
' → logprob: -2.2197213172912598
    4. '):' → logprob: -4.34472131729126
    5. ' 
' → logprob: -4.34472131729126
    6. '\n' → logprob: -5.09472131729126
    7. '    
' → logprob: -5.21972131729126
    8. ' :' → logprob: -5.34472131729126
    9. '<|end|>' → logprob: -5.34472131729126
    10. 'def' → logprob: -5.46972131729126

Token 101: ' want' (ID: 1682)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.5402463674545288
    2. ' need' → logprob: -1.1652463674545288
    3. ' can' → logprob: -3.7902464866638184
    4. ' want' → logprob: -3.7902464866638184
    5. ' create' → logprob: -4.540246486663818
    6. ' will' → logprob: -5.040246486663818
    7. ' use' → logprob: -5.290246486663818
    8. 'add' → logprob: -5.290246486663818
    9. ' have' → logprob: -5.415246486663818
    10. 'need' → logprob: -5.665246486663818

Token 102: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0035154952201992273
    2. 'to' → logprob: -6.003515720367432
    3. ' a' → logprob: -7.128515720367432
    4. ' ' → logprob: -9.378515243530273
    5. ' the' → logprob: -9.378515243530273
    6. '   ' → logprob: -11.128515243530273
    7. '  ' → logprob: -11.253515243530273
    8. ' flow' → logprob: -12.003515243530273
    9. ' an' → logprob: -12.003515243530273
    10. '<|end|>' → logprob: -12.003515243530273

Token 103: ' choose' (ID: 5655)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.8222464919090271
    2. ' ensure' → logprob: -0.9472464919090271
    3. 'ensure' → logprob: -2.447246551513672
    4. ' check' → logprob: -3.822246551513672
    5. 'find' → logprob: -4.197246551513672
    6. 'assign' → logprob: -4.572246551513672
    7. ' assign' → logprob: -5.072246551513672
    8. ' satisfy' → logprob: -5.697246551513672
    9. ' create' → logprob: -5.822246551513672
    10. 'check' → logprob: -5.822246551513672

Token 104: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.6175878643989563
    2. ' the' → logprob: -2.2425878047943115
    3. ' a' → logprob: -2.3675878047943115
    4. ' direction' → logprob: -2.6175878047943115
    5. ' one' → logprob: -3.2425878047943115
    6. ' an' → logprob: -3.3675878047943115
    7. ' orientations' → logprob: -3.4925878047943115
    8. ' orientation' → logprob: -3.8675878047943115
    9. 'dire' → logprob: -3.9925878047943115
    10. 'direction' → logprob: -4.242588043212891

Token 105: ' to' (ID: 316)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.9510143399238586
    2. '<|end|>' → logprob: -1.0760142803192139
    3. ' ' → logprob: -2.076014280319214
    4. ' to' → logprob: -2.826014280319214
    5. ' for' → logprob: -3.326014280319214
    6. ',' → logprob: -3.701014280319214
    7. ' such' → logprob: -4.951014518737793
    8. '<|end|>' → logprob: -5.201014518737793
    9. '   ' → logprob: -6.076014518737793
    10. ')' → logprob: -6.076014518737793

Token 106: ' satisfy' (ID: 35441)
  Prédit: ' satisfy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' satisfy' → logprob: -0.3911956250667572
    2. 's' → logprob: -2.14119553565979
    3. ' ensure' → logprob: -2.51619553565979
    4. 'ensure' → logprob: -3.26619553565979
    5. ' balance' → logprob: -4.391195774078369
    6. 'balance' → logprob: -4.516195774078369
    7. ' fulfill' → logprob: -4.641195774078369
    8. ' achieve' → logprob: -4.891195774078369
    9. 'ach' → logprob: -5.016195774078369
    10. 'maximize' → logprob: -5.516195774078369

Token 107: ' demands' (ID: 27241)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6727015376091003
    2. ' all' → logprob: -1.0477015972137451
    3. ' demands' → logprob: -2.422701597213745
    4. '   ' → logprob: -4.047701358795166
    5. 'all' → logprob: -4.422701358795166
    6. 'the' → logprob: -4.797701358795166
    7. ' their' → logprob: -6.297701358795166
    8. ' demand' → logprob: -6.422701358795166
    9. ' each' → logprob: -6.547701358795166
    10. 'd' → logprob: -6.672701358795166

Token 108: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49171745777130127
    2. ':' → logprob: -1.1167174577713013
    3. ',' → logprob: -4.241717338562012
    4. '
' → logprob: -4.366717338562012
    5. '):' → logprob: -4.366717338562012
    6. '.' → logprob: -4.866717338562012
    7. 'def' → logprob: -5.991717338562012
    8. ')' → logprob: -5.991717338562012
    9. ' and' → logprob: -6.241717338562012
    10. '<|end|>' → logprob: -6.991717338562012

Token 109: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5489141345024109
    2. '   ' → logprob: -1.4239141941070557
    3. '
' → logprob: -2.4239141941070557
    4. '):' → logprob: -3.5489141941070557
    5. ':
' → logprob: -4.173913955688477
    6. ',' → logprob: -4.673913955688477
    7. 'def' → logprob: -4.923913955688477
    8. '):
' → logprob: -5.423913955688477
    9. ' :' → logprob: -5.548913955688477
    10. ')' → logprob: -5.548913955688477

Token 110: ' #
' (ID: 21888)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3215186297893524
    2. '
' → logprob: -2.071518659591675
    3. '   ' → logprob: -2.321518659591675
    4. ':
' → logprob: -4.071518421173096
    5. ' :' → logprob: -4.571518421173096
    6. '):' → logprob: -5.446518421173096
    7. 'def' → logprob: -5.946518421173096
    8. ',' → logprob: -6.196518421173096
    9. '    
' → logprob: -6.196518421173096
    10. ' 
' → logprob: -6.196518421173096

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05786387622356415
    2. '    
' → logprob: -3.30786395072937
    3. '
' → logprob: -4.557863712310791
    4. 'def' → logprob: -5.182863712310791
    5. 'import' → logprob: -6.432863712310791
    6. '    ' → logprob: -7.932863712310791
    7. ' 
' → logprob: -8.05786418914795
    8. '<|end|>' → logprob: -8.80786418914795
    9. '```' → logprob: -8.93286418914795
    10. '     
' → logprob: -9.30786418914795

Token 112: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.362099826335907
    2. ' source' → logprob: -1.8620998859405518
    3. 'source' → logprob: -2.9870998859405518
    4. 'def' → logprob: -4.237099647521973
    5. ' m' → logprob: -4.487099647521973
    6. 'n' → logprob: -4.487099647521973
    7. ' n' → logprob: -4.612099647521973
    8. ' flow' → logprob: -4.862099647521973
    9. 'm' → logprob: -5.237099647521973
    10. '
' → logprob: -5.237099647521973

Token 113: ' Build' (ID: 10885)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9297458529472351
    2. ' source' → logprob: -1.4297459125518799
    3. ' #' → logprob: -2.30474591255188
    4. ' n' → logprob: -2.80474591255188
    5. ' m' → logprob: -3.17974591255188
    6. '#' → logprob: -3.42974591255188
    7. 'source' → logprob: -3.67974591255188
    8. 'n' → logprob: -4.429745674133301
    9. ' total' → logprob: -4.429745674133301
    10. 'def' → logprob: -4.554745674133301

Token 114: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.25379928946495056
    2. ' a' → logprob: -1.753799319267273
    3. ' the' → logprob: -4.1287994384765625
    4. 'graph' → logprob: -4.5037994384765625
    5. ' flow' → logprob: -4.7537994384765625
    6. ' adjacency' → logprob: -6.0037994384765625
    7. ' G' → logprob: -6.3787994384765625
    8. ' edges' → logprob: -6.7537994384765625
    9. '   ' → logprob: -6.8787994384765625
    10. ' an' → logprob: -6.8787994384765625

Token 115: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20971883833408356
    2. ':' → logprob: -2.209718942642212
    3. '   ' → logprob: -3.459718942642212
    4. ' with' → logprob: -4.709718704223633
    5. '(m' → logprob: -4.959718704223633
    6. '(graph' → logprob: -5.334718704223633
    7. ':
' → logprob: -5.334718704223633
    8. '(n' → logprob: -5.709718704223633
    9. '=' → logprob: -5.834718704223633
    10. 'def' → logprob: -6.209718704223633

Token 116: '   ' (ID: 271)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.9818158745765686
    2. '   ' → logprob: -1.2318158149719238
    3. ' n' → logprob: -2.231815814971924
    4. 'graph' → logprob: -2.731815814971924
    5. ' G' → logprob: -3.231815814971924
    6. '
' → logprob: -3.356815814971924
    7. 'n' → logprob: -3.731815814971924
    8. ' 
' → logprob: -4.606815814971924
    9. ' m' → logprob: -4.856815814971924
    10. '    ' → logprob: -4.981815814971924

Token 117: ' #' (ID: 1069)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.12366117537021637
    2. 'graph' → logprob: -2.4986612796783447
    3. '   ' → logprob: -4.498661041259766
    4. ' n' → logprob: -4.498661041259766
    5. ' G' → logprob: -5.498661041259766
    6. ' g' → logprob: -6.373661041259766
    7. 'n' → logprob: -6.748661041259766
    8. 'G' → logprob: -7.373661041259766
    9. '```' → logprob: -7.498661041259766
    10. ' flow' → logprob: -7.623661041259766

Token 118: ' S' (ID: 336)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.2810826897621155
    2. 'graph' → logprob: -2.0310826301574707
    3. ' n' → logprob: -3.1560826301574707
    4. '   ' → logprob: -3.2810826301574707
    5. ' g' → logprob: -4.781082630157471
    6. ' G' → logprob: -5.156082630157471
    7. 'n' → logprob: -5.406082630157471
    8. 'g' → logprob: -6.281082630157471
    9. 'G' → logprob: -6.656082630157471
    10. '
' → logprob: -6.656082630157471

Token 119: ' -' (ID: 533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3987649083137512
    2. 'ource' → logprob: -1.6487648487091064
    3. 'rc' → logprob: -2.2737648487091064
    4. 'OURCE' → logprob: -3.6487648487091064
    5. '=' → logprob: -5.1487650871276855
    6. ',' → logprob: -7.5237650871276855
    7. 'RC' → logprob: -7.6487650871276855
    8. 'ources' → logprob: -8.523764610290527
    9. '   ' → logprob: -9.148764610290527
    10. 't' → logprob: -9.273764610290527

Token 120: ' super' (ID: 2539)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9901862144470215
    2. ' source' → logprob: -1.9901862144470215
    3. '<|end|>' → logprob: -2.1151862144470215
    4. '-' → logprob: -2.2401862144470215
    5. ' ' → logprob: -2.9901862144470215
    6. ' s' → logprob: -3.6151862144470215
    7. '->' → logprob: -3.7401862144470215
    8. ' >' → logprob: -3.8651862144470215
    9. 'source' → logprob: -4.2401862144470215
    10. 'ource' → logprob: -4.3651862144470215

Token 121: ' source' (ID: 4256)
  Prédit: '_source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.0737273171544075
    2. 'source' → logprob: -3.5737273693084717
    3. '_' → logprob: -3.6987273693084717
    4. ' source' → logprob: -4.323727130889893
    5. '_s' → logprob: -6.198727130889893
    6. 's' → logprob: -6.448727130889893
    7. '_src' → logprob: -7.948727130889893
    8. '-source' → logprob: -8.07372760772705
    9. '_sink' → logprob: -8.69872760772705
    10. '_SOURCE' → logprob: -8.94872760772705

Token 122: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019168829545378685
    2. '=' → logprob: -4.769168853759766
    3. ',' → logprob: -5.019168853759766
    4. '
' → logprob: -6.519168853759766
    5. ' =
' → logprob: -7.394168853759766
    6. '   ' → logprob: -7.644168853759766
    7. ')' → logprob: -8.519168853759766
    8. ',
' → logprob: -8.894168853759766
    9. '

' → logprob: -9.019168853759766
    10. ' and' → logprob: -9.019168853759766

Token 123: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07445909082889557
    2. ',' → logprob: -3.5744590759277344
    3. '=' → logprob: -3.8244590759277344
    4. ' and' → logprob: -5.699459075927734
    5. '<|end|>' → logprob: -5.949459075927734
    6. 's' → logprob: -6.324459075927734
    7. ' =
' → logprob: -6.324459075927734
    8. ' (' → logprob: -6.449459075927734
    9. ',
' → logprob: -6.699459075927734
    10. ' ' → logprob: -6.699459075927734

Token 124: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10877807438373566
    2. '=' → logprob: -3.3587779998779297
    3. ',' → logprob: -3.8587779998779297
    4. ' ' → logprob: -4.85877799987793
    5. '<|end|>' → logprob: -4.98377799987793
    6. 'T' → logprob: -5.73377799987793
    7. ' T' → logprob: -5.73377799987793
    8. 't' → logprob: -5.73377799987793
    9. ' (' → logprob: -6.23377799987793
    10. 'S' → logprob: -6.23377799987793

Token 125: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.10547535866498947
    2. 'T' → logprob: -2.355475425720215
    3. ' S' → logprob: -6.230475425720215
    4. ' s' → logprob: -6.980475425720215
    5. ' super' → logprob: -7.105475425720215
    6. 'S' → logprob: -7.605475425720215
    7. 's' → logprob: -8.605475425720215
    8. ' ' → logprob: -8.605475425720215
    9. ' t' → logprob: -8.605475425720215
    10. ' Ss' → logprob: -10.042975425720215

Token 126: ' -' (ID: 533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001758956117555499
    2. '=' → logprob: -6.876759052276611
    3. ' -' → logprob: -7.626759052276611
    4. ' ' → logprob: -8.626758575439453
    5. ',' → logprob: -10.376758575439453
    6. '  ' → logprob: -11.751758575439453
    7. '<|end|>' → logprob: -12.001758575439453
    8. 'import' → logprob: -12.751758575439453
    9. '   ' → logprob: -13.501758575439453
    10. '-' → logprob: -13.501758575439453

Token 127: ' super' (ID: 2539)
  Prédit: ' super'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' super' → logprob: -0.0234440416097641
    2. 'super' → logprob: -3.7734439373016357
    3. ' ' → logprob: -10.148444175720215
    4. '#' → logprob: -10.773444175720215
    5. ' sink' → logprob: -10.773444175720215
    6. '_super' → logprob: -11.273444175720215
    7. '	super' → logprob: -11.273444175720215
    8. ' супер' → logprob: -11.273444175720215
    9. '(super' → logprob: -11.398444175720215
    10. 'uper' → logprob: -11.398444175720215

Token 128: ' sink' (ID: 22834)
  Prédit: ' source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' source' → logprob: -0.25631237030029297
    2. '_source' → logprob: -1.756312370300293
    3. 'source' → logprob: -3.006312370300293
    4. ' sink' → logprob: -6.631312370300293
    5. '_sink' → logprob: -6.631312370300293
    6. '_' → logprob: -7.881312370300293
    7. ' ' → logprob: -8.631312370300293
    8. '-source' → logprob: -8.631312370300293
    9. '_target' → logprob: -8.881312370300293
    10. 'target' → logprob: -9.631312370300293

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4339038133621216
    2. ' =' → logprob: -1.3089038133621216
    3. '   ' → logprob: -3.308903694152832
    4. 'def' → logprob: -4.683903694152832
    5. 'import' → logprob: -5.058903694152832
    6. '

' → logprob: -5.183903694152832
    7. '=' → logprob: -5.683903694152832
    8. ',' → logprob: -5.683903694152832
    9. ':' → logprob: -5.808903694152832
    10. ':
' → logprob: -6.183903694152832

Token 130: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45783039927482605
    2. '   ' → logprob: -1.7078304290771484
    3. ':' → logprob: -2.8328304290771484
    4. ' =' → logprob: -3.4578304290771484
    5. ',' → logprob: -3.9578304290771484
    6. '<|end|>' → logprob: -4.582830429077148
    7. 'def' → logprob: -4.957830429077148
    8. '\n' → logprob: -5.082830429077148
    9. 'import' → logprob: -5.207830429077148
    10. ',
' → logprob: -5.332830429077148

Token 131: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.083264708518982
    2. '
' → logprob: -1.583264708518982
    3. ':' → logprob: -1.958264708518982
    4. '   ' → logprob: -2.3332648277282715
    5. ',' → logprob: -3.2082648277282715
    6. 'S' → logprob: -3.8332648277282715
    7. '\n' → logprob: -4.0832648277282715
    8. ':
' → logprob: -4.3332648277282715
    9. 'def' → logprob: -4.4582648277282715
    10. '=' → logprob: -4.4582648277282715

Token 132: ' For' (ID: 2214)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7689012289047241
    2. ' S' → logprob: -0.8939012289047241
    3. '
' → logprob: -3.1439013481140137
    4. ' 
' → logprob: -3.7689013481140137
    5. '   ' → logprob: -3.8939013481140137
    6. '    
' → logprob: -5.143901348114014
    7. ' source' → logprob: -5.268901348114014
    8. '```' → logprob: -5.393901348114014
    9. ' ' → logprob: -5.893901348114014
    10. ' s' → logprob: -6.143901348114014

Token 133: ' each' (ID: 2454)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.11406492441892624
    2. ' i' → logprob: -2.739064931869507
    3. ' node' → logprob: -4.239064693450928
    4. 'u' → logprob: -4.864064693450928
    5. ' each' → logprob: -4.864064693450928
    6. ' ' → logprob: -4.989064693450928
    7. '   ' → logprob: -6.739064693450928
    8. ' _' → logprob: -7.114064693450928
    9. ' edge' → logprob: -7.239064693450928
    10. ' e' → logprob: -7.364064693450928

Token 134: ' edge' (ID: 11165)
  Prédit: ' student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' student' → logprob: -0.4857259690761566
    2. ' node' → logprob: -1.360725998878479
    3. ' edge' → logprob: -2.8607258796691895
    4. 'student' → logprob: -3.2357258796691895
    5. 'node' → logprob: -4.7357258796691895
    6. ' vertex' → logprob: -5.4857258796691895
    7. ' u' → logprob: -5.6107258796691895
    8. ' i' → logprob: -5.6107258796691895
    9. ' friend' → logprob: -5.7357258796691895
    10. 'edge' → logprob: -5.8607258796691895

Token 135: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.281633734703064
    2. 's' → logprob: -1.281633734703064
    3. ' =' → logprob: -2.1566338539123535
    4. ':' → logprob: -2.5316338539123535
    5. 'from' → logprob: -3.0316338539123535
    6. '_' → logprob: -3.2816338539123535
    7. '   ' → logprob: -3.6566338539123535
    8. '_u' → logprob: -4.1566338539123535
    9. ' in' → logprob: -4.4066338539123535
    10. ' ,' → logprob: -4.4066338539123535

Token 136: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.20721280574798584
    2. '   ' → logprob: -2.0822129249572754
    3. ' u' → logprob: -3.3322129249572754
    4. ' ' → logprob: -4.082212924957275
    5. '     
' → logprob: -6.332212924957275
    6. 'u' → logprob: -6.582212924957275
    7. ' 
' → logprob: -7.332212924957275
    8. '     ' → logprob: -7.457212924957275
    9. '    
' → logprob: -7.707212924957275
    10. ' ,' → logprob: -7.707212924957275

Token 137: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3244880139827728
    2. ' u' → logprob: -2.0744879245758057
    3. ' for' → logprob: -2.6994879245758057
    4. '    ' → logprob: -3.4494879245758057
    5. 'for' → logprob: -4.199488162994385
    6. 'u' → logprob: -4.699488162994385
    7. ' graph' → logprob: -4.824488162994385
    8. '    
' → logprob: -4.949488162994385
    9. ' m' → logprob: -6.199488162994385
    10. ' edges' → logprob: -6.449488162994385

Token 138: '  ' (ID: 256)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.7475294470787048
    2. ' for' → logprob: -1.6225295066833496
    3. '   ' → logprob: -1.6225295066833496
    4. 'for' → logprob: -3.1225295066833496
    5. 'u' → logprob: -3.3725295066833496
    6. '    ' → logprob: -3.9975295066833496
    7. ' graph' → logprob: -4.62252950668335
    8. ' add' → logprob: -5.12252950668335
    9. ' ' → logprob: -5.99752950668335
    10. ' edges' → logprob: -5.99752950668335

Token 139: ' Introdu' (ID: 63470)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1196248531341553
    2. ' u' → logprob: -1.2446248531341553
    3. ' add' → logprob: -1.3696248531341553
    4. 'add' → logprob: -3.7446248531341553
    5. '   ' → logprob: -3.8696248531341553
    6. 'for' → logprob: -3.9946248531341553
    7. 'from' → logprob: -4.494625091552734
    8. ' capacity' → logprob: -4.744625091552734
    9. ' for' → logprob: -4.869625091552734
    10. 'Add' → logprob: -5.119625091552734

Token 140: 'ce' (ID: 400)
  Prédit: 'ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.04614558443427086
    2. 'ct' → logprob: -3.1711456775665283
    3. 'ction' → logprob: -6.546145439147949
    4. 'ced' → logprob: -7.046145439147949
    5. 'cing' → logprob: -7.796145439147949
    6. 'ces' → logprob: -8.92114543914795
    7. 'c' → logprob: -9.67114543914795
    8. 'cts' → logprob: -9.79614543914795
    9. 'ctions' → logprob: -10.42114543914795
    10. '#' → logprob: -10.54614543914795

Token 141: ' an' (ID: 448)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.04866015538573265
    2. ' a' → logprob: -4.1736602783203125
    3. ' an' → logprob: -4.5486602783203125
    4. ' ' → logprob: -5.0486602783203125
    5. ' nodes' → logprob: -5.1736602783203125
    6. ' edges' → logprob: -5.4236602783203125
    7. 'two' → logprob: -6.2986602783203125
    8. ' intermediate' → logprob: -6.2986602783203125
    9. 'a' → logprob: -7.6736602783203125
    10. '   ' → logprob: -8.673660278320312

Token 142: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.042180340737104416
    2. ' intermediate' → logprob: -4.16718053817749
    3. ' auxiliary' → logprob: -4.91718053817749
    4. ' extra' → logprob: -5.04218053817749
    5. 'edge' → logprob: -5.29218053817749
    6. ' ' → logprob: -6.16718053817749
    7. ' additional' → logprob: -6.79218053817749
    8. ' artificial' → logprob: -7.04218053817749
    9. ' internal' → logprob: -7.04218053817749
    10. ' intermediary' → logprob: -7.79218053817749

Token 143: ' node' (ID: 4596)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.2698121666908264
    2. 'from' → logprob: -1.6448121070861816
    3. 's' → logprob: -4.019812107086182
    4. '<|end|>' → logprob: -4.519812107086182
    5. ' ' → logprob: -5.269812107086182
    6. ' =' → logprob: -6.644812107086182
    7. '<|end|>' → logprob: -6.644812107086182
    8. 'u' → logprob: -6.644812107086182
    9. ',' → logprob: -6.894812107086182
    10. '(s' → logprob: -7.144812107086182

Token 144: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5692846775054932
    2. ' =' → logprob: -2.069284677505493
    3. ':' → logprob: -2.444284677505493
    4. '   ' → logprob: -2.819284677505493
    5. ',' → logprob: -3.319284677505493
    6. '<|end|>' → logprob: -3.569284677505493
    7. ' and' → logprob: -3.694284677505493
    8. '(s' → logprob: -4.944284439086914
    9. ' for' → logprob: -5.194284439086914
    10. '<|end|>' → logprob: -5.194284439086914

Token 145: ' connect' (ID: 4837)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' S' (ID: 336)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.7769112586975098
    2. ' to' → logprob: -1.7769112586975098
    3. ' S' → logprob: -1.7769112586975098
    4. ' super' → logprob: -3.2769112586975098
    5. 's' → logprob: -3.4019112586975098
    6. 'ion' → logprob: -3.6519112586975098
    7. 'from' → logprob: -4.02691125869751
    8. ' ' → logprob: -4.40191125869751
    9. ' source' → logprob: -4.40191125869751
    10. ' the' → logprob: -4.52691125869751

Token 147: '->' (ID: 609)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.008083290420472622
    2. ' ->' → logprob: -5.008083343505859
    3. 'to' → logprob: -7.133083343505859
    4. ',' → logprob: -8.75808334350586
    5. '->' → logprob: -8.75808334350586
    6. ' ' → logprob: -8.88308334350586
    7. ' with' → logprob: -10.00808334350586
    8. ' and' → logprob: -10.63308334350586
    9. ')' → logprob: -11.00808334350586
    10. ' ,' → logprob: -11.75808334350586

Token 148: 'edge' (ID: 13457)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.31885769963264465
    2. 'edge' → logprob: -1.3188576698303223
    3. ' node' → logprob: -6.193857669830322
    4. 'e' → logprob: -6.693857669830322
    5. ' e' → logprob: -6.693857669830322
    6. 'node' → logprob: -8.94385814666748
    7. '_edge' → logprob: -8.94385814666748
    8. ' E' → logprob: -9.19385814666748
    9. ' ed' → logprob: -9.19385814666748
    10. 'E' → logprob: -9.19385814666748

Token 149: ' node' (ID: 4596)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.15903721749782562
    2. '_' → logprob: -2.6590371131896973
    3. ' _' → logprob: -2.9090371131896973
    4. 's' → logprob: -5.659037113189697
    5. '_u' → logprob: -5.659037113189697
    6. '_id' → logprob: -6.034037113189697
    7. '_nodes' → logprob: -6.034037113189697
    8. ')' → logprob: -6.534037113189697
    9. 'node' → logprob: -6.659037113189697
    10. '   ' → logprob: -6.784037113189697

Token 150: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41616228222846985
    2. ' and' → logprob: -1.4161622524261475
    3. '   ' → logprob: -3.4161622524261475
    4. ' with' → logprob: -3.9161622524261475
    5. ' ,' → logprob: -4.291162490844727
    6. '<|end|>' → logprob: -4.416162490844727
    7. ',
' → logprob: -5.791162490844727
    8. ' =' → logprob: -5.791162490844727
    9. ':' → logprob: -5.916162490844727
    10. ')' → logprob: -6.416162490844727

Token 151: 'capacity' (ID: 80851)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17393235862255096
    2. ' ' → logprob: -2.1739323139190674
    3. ' capacity' → logprob: -4.7989325523376465
    4. 'capacity' → logprob: -4.7989325523376465
    5. ')' → logprob: -5.1739325523376465
    6. ' m' → logprob: -5.2989325523376465
    7. 'm' → logprob: -5.2989325523376465
    8. ' edges' → logprob: -6.0489325523376465
    9. ' edge' → logprob: -6.1739325523376465
    10. '   ' → logprob: -6.1739325523376465

Token 152: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013717379420995712
    2. ' =' → logprob: -4.388717174530029
    3. '1' → logprob: -8.013717651367188
    4. '   ' → logprob: -8.388717651367188
    5. ')' → logprob: -8.513717651367188
    6. ',' → logprob: -8.638717651367188
    7. ' ' → logprob: -9.888717651367188
    8. '=m' → logprob: -10.013717651367188
    9. '```' → logprob: -10.513717651367188
    10. '=max' → logprob: -10.638717651367188

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44083377718925476
    2. '=' → logprob: -1.0658338069915771
    3. ' ' → logprob: -4.940833568572998
    4. '2' → logprob: -6.440833568572998
    5. ' =' → logprob: -6.565833568572998
    6. ',' → logprob: -7.190833568572998
    7. '   ' → logprob: -7.815833568572998
    8. 'm' → logprob: -8.065834045410156
    9. ' m' → logprob: -8.440834045410156
    10. ')' → logprob: -9.940834045410156

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11562217772006989
    2. ')
' → logprob: -2.4906222820281982
    3. '),' → logprob: -3.7406222820281982
    4. ')\' → logprob: -6.490622043609619
    5. '   ' → logprob: -8.115622520446777
    6. ',' → logprob: -8.240622520446777
    7. ')

' → logprob: -8.990622520446777
    8. ' )' → logprob: -9.115622520446777
    9. '),
' → logprob: -9.615622520446777
    10. '\n' → logprob: -9.740622520446777

Token 155: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36790382862091064
    2. ',' → logprob: -1.6179038286209106
    3. '
' → logprob: -2.867903709411621
    4. ',
' → logprob: -3.867903709411621
    5. ')' → logprob: -4.117903709411621
    6. ' and' → logprob: -5.117903709411621
    7. '    
' → logprob: -5.742903709411621
    8. ' ,' → logprob: -6.992903709411621
    9. '\n' → logprob: -6.992903709411621
    10. ')
' → logprob: -7.242903709411621

Token 156: 'each' (ID: 21309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032666049897670746
    2. ' )' → logprob: -4.657666206359863
    3. '),' → logprob: -5.032666206359863
    4. ')
' → logprob: -5.407666206359863
    5. '   ' → logprob: -5.782666206359863
    6. ' and' → logprob: -6.532666206359863
    7. 'edge' → logprob: -6.657666206359863
    8. ',' → logprob: -6.907666206359863
    9. ' edge' → logprob: -7.157666206359863
    10. ')\' → logprob: -7.532666206359863

Token 157: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.0427531935274601
    2. ' gift' → logprob: -3.917753219604492
    3. 'edge' → logprob: -4.167753219604492
    4. ')' → logprob: -6.167753219604492
    5. ' friend' → logprob: -6.667753219604492
    6. ' token' → logprob: -7.667753219604492
    7. 'friend' → logprob: -7.792753219604492
    8. 'gift' → logprob: -7.792753219604492
    9. '_edge' → logprob: -7.792753219604492
    10. ' friendship' → logprob: -8.292753219604492

Token 158: ' must' (ID: 2804)
  Prédit: ' represents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' represents' → logprob: -0.5792045593261719
    2. ')' → logprob: -1.8292045593261719
    3. ' node' → logprob: -2.329204559326172
    4. ' has' → logprob: -2.454204559326172
    5. ' can' → logprob: -3.704204559326172
    6. '),' → logprob: -4.454204559326172
    7. ' ' → logprob: -4.704204559326172
    8. ',' → logprob: -4.829204559326172
    9. ' )' → logprob: -5.454204559326172
    10. ' counts' → logprob: -5.579204559326172

Token 159: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.1758253425359726
    2. 'be' → logprob: -1.9258253574371338
    3. 'send' → logprob: -5.050825119018555
    4. ' have' → logprob: -6.050825119018555
    5. 'have' → logprob: -6.050825119018555
    6. ' send' → logprob: -6.175825119018555
    7. 'assign' → logprob: -6.800825119018555
    8. 'give' → logprob: -8.425825119018555
    9. ' ' → logprob: -8.550825119018555
    10. 'choose' → logprob: -9.300825119018555

Token 160: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.8410087823867798
    2. ' assigned' → logprob: -1.3410087823867798
    3. 'or' → logprob: -1.5910087823867798
    4. ' oriented' → logprob: -2.7160086631774902
    5. 'direct' → logprob: -4.21600866317749
    6. ' directed' → logprob: -4.34100866317749
    7. ' ' → logprob: -6.09100866317749
    8. '   ' → logprob: -6.46600866317749
    9. 'orient' → logprob: -6.96600866317749
    10. 'split' → logprob: -7.71600866317749

Token 161: ')
' (ID: 446)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6917712092399597
    2. ' direction' → logprob: -1.6917712688446045
    3. ' to' → logprob: -2.4417712688446045
    4. ')' → logprob: -2.5667712688446045
    5. 'a' → logprob: -3.0667712688446045
    6. 'direction' → logprob: -3.3167712688446045
    7. ' one' → logprob: -3.6917712688446045
    8. ' an' → logprob: -4.066771030426025
    9. 'to' → logprob: -4.691771030426025
    10. ' ' → logprob: -5.316771030426025

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14431987702846527
    2. ',' → logprob: -3.269319772720337
    3. '
' → logprob: -3.394319772720337
    4. ')' → logprob: -3.894319772720337
    5. ')
' → logprob: -4.519320011138916
    6. ':' → logprob: -5.144320011138916
    7. ' =' → logprob: -5.394320011138916
    8. ',
' → logprob: -5.769320011138916
    9. ' and' → logprob: -6.019320011138916
    10. '):
' → logprob: -6.144320011138916

Token 163: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12094247341156006
    2. ',' → logprob: -3.1209425926208496
    3. ')' → logprob: -3.6209425926208496
    4. '
' → logprob: -3.9959425926208496
    5. ')
' → logprob: -4.99594259262085
    6. ',
' → logprob: -5.49594259262085
    7. ' and' → logprob: -5.74594259262085
    8. '#' (adapté à ' #') → logprob: -5.87094259262085
    9. '    
' → logprob: -6.24594259262085
    10. '),' → logprob: -7.12094259262085

Token 164: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021902237087488174
    2. '#' → logprob: -4.521902084350586
    3. '
' → logprob: -5.521902084350586
    4. ',' → logprob: -5.521902084350586
    5. ')' → logprob: -7.021902084350586
    6. ' and' → logprob: -7.646902084350586
    7. ')
' → logprob: -8.646902084350586
    8. ' #' → logprob: -8.896902084350586
    9. 'edges' → logprob: -8.896902084350586
    10. ' for' → logprob: -9.021902084350586

Token 165: ' edge' (ID: 11165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5095734596252441
    2. ' edge' → logprob: -1.0095734596252441
    3. ' for' → logprob: -4.134573459625244
    4. 'edge' (adapté à ' edge') → logprob: -4.384573459625244
    5. ' ' → logprob: -6.259573459625244
    6. 'for' → logprob: -6.634573459625244
    7. '  ' → logprob: -7.134573459625244
    8. '
' → logprob: -7.634573459625244
    9. '#' → logprob: -8.384572982788086
    10. '    ' → logprob: -8.384572982788086

Token 166: ' node' (ID: 4596)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.5691975355148315
    2. ' node' → logprob: -1.6941975355148315
    3. ' _' → logprob: -1.9441975355148315
    4. '_' → logprob: -2.444197654724121
    5. 'node' → logprob: -4.569197654724121
    6. '_nodes' → logprob: -5.319197654724121
    7. ' ' → logprob: -6.069197654724121
    8. '   ' → logprob: -7.944197654724121
    9. 's' → logprob: -8.506697654724121
    10. '  ' → logprob: -8.506697654724121

Token 167: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.16047687828540802
    2. '->' → logprob: -1.9104769229888916
    3. ' -' → logprob: -9.535476684570312
    4. ' ' → logprob: -9.660476684570312
    5. ' -->' → logprob: -10.410476684570312
    6. '-' → logprob: -10.535476684570312
    7. '->[' → logprob: -11.160476684570312
    8. ' to' → logprob: -11.535476684570312
    9. '-->' → logprob: -12.035476684570312
    10. '→' → logprob: -12.285476684570312

Token 168: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.738340437412262
    2. ' u' → logprob: -0.738340437412262
    3. 'm' → logprob: -3.988340377807617
    4. ' edges' → logprob: -4.613340377807617
    5. ' m' → logprob: -4.863340377807617
    6. ' nodes' → logprob: -6.113340377807617
    7. 'edges' → logprob: -6.113340377807617
    8. '   ' → logprob: -6.363340377807617
    9. 'nodes' → logprob: -6.863340377807617
    10. ' ' → logprob: -8.238340377807617

Token 169: ' and' (ID: 326)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03206349536776543
    2. ',' → logprob: -5.1570634841918945
    3. '<|end|>' → logprob: -5.1570634841918945
    4. ' and' → logprob: -5.2820634841918945
    5. '   ' → logprob: -5.4070634841918945
    6. '
' → logprob: -5.6570634841918945
    7. '(' → logprob: -5.9070634841918945
    8. ' ,' → logprob: -7.5320634841918945
    9. ')' → logprob: -7.5320634841918945
    10. ' ' → logprob: -7.7820634841918945

Token 170: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.6866535544395447
    2. ' v' → logprob: -1.1866536140441895
    3. 'edge' → logprob: -2.3116536140441895
    4. 'v' → logprob: -3.5616536140441895
    5. '"' → logprob: -3.6866536140441895
    6. ' ' → logprob: -3.8116536140441895
    7. ''' → logprob: -4.5616536140441895
    8. '   ' → logprob: -6.1866536140441895
    9. '  ' → logprob: -6.6866536140441895
    10. ' '' → logprob: -7.1866536140441895

Token 171: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.02736961655318737
    2. ' _' → logprob: -4.902369499206543
    3. ' ' → logprob: -5.027369499206543
    4. 'node' → logprob: -5.027369499206543
    5. '_node' → logprob: -5.402369499206543
    6. '   ' → logprob: -7.402369499206543
    7. '_' → logprob: -7.527369499206543
    8. ' v' → logprob: -8.902369499206543
    9. '	node' → logprob: -9.277369499206543
    10. '  ' → logprob: -9.277369499206543

Token 172: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.10045316815376282
    2. '->' → logprob: -2.3504531383514404
    3. ' ' → logprob: -9.35045337677002
    4. '   ' → logprob: -10.35045337677002
    5. '->_' → logprob: -10.97545337677002
    6. '-' → logprob: -11.47545337677002
    7. '>' → logprob: -11.47545337677002
    8. '```' → logprob: -11.47545337677002
    9. '<|end|>' → logprob: -11.72545337677002
    10. ')' → logprob: -11.97545337677002

Token 173: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.018190326169133186
    2. 'v' → logprob: -4.018190383911133
    3. ' ' → logprob: -10.393190383911133
    4. ' ' → logprob: -11.768190383911133
    5. '  ' → logprob: -15.018190383911133
    6. '	v' → logprob: -15.268190383911133
    7. ' `' → logprob: -15.518190383911133
    8. '   ' → logprob: -15.518190383911133
    9. ''' → logprob: -15.893190383911133
    10. '"' → logprob: -15.893190383911133

Token 174: ' capacity' (ID: 12241)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2703753411769867
    2. '
' → logprob: -1.895375370979309
    3. ' (' → logprob: -3.2703752517700195
    4. '```' → logprob: -4.6453752517700195
    5. ',' → logprob: -4.8953752517700195
    6. ':' → logprob: -5.5203752517700195
    7. ')' → logprob: -5.5203752517700195
    8. 'def' → logprob: -5.6453752517700195
    9. '(' → logprob: -6.0203752517700195
    10. '    
' → logprob: -6.1453752517700195

Token 175: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2512010633945465
    2. '1' → logprob: -1.7512010335922241
    3. '=' → logprob: -3.3762011528015137
    4. ' =' → logprob: -4.251201152801514
    5. ' ' → logprob: -10.001200675964355
    6. 's' → logprob: -10.126200675964355
    7. '0' → logprob: -11.626200675964355
    8. '   ' → logprob: -11.626200675964355
    9. '  ' → logprob: -12.251200675964355
    10. '```' → logprob: -12.563700675964355

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030979571864008904
    2. ' ' → logprob: -3.655979633331299
    3. '=' → logprob: -5.405979633331299
    4. ' =' → logprob: -9.40597915649414
    5. '   ' → logprob: -10.15597915649414
    6. 'm' → logprob: -11.28097915649414
    7. ' m' → logprob: -11.65597915649414
    8. 'sys' → logprob: -12.15597915649414
    9. '=sys' → logprob: -12.28097915649414
    10. ' sys' → logprob: -12.53097915649414

Token 177: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08813929557800293
    2. '
' → logprob: -2.838139295578003
    3. '\n' → logprob: -4.463139533996582
    4. 'def' → logprob: -5.088139533996582
    5. ')' → logprob: -6.213139533996582
    6. '```' → logprob: -6.838139533996582
    7. '    
' → logprob: -6.963139533996582
    8. '\' → logprob: -7.338139533996582
    9. 'import' → logprob: -7.338139533996582
    10. ':' → logprob: -7.338139533996582

Token 178: ' direction' (ID: 9262)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6466766595840454
    2. '
' → logprob: -1.5216766595840454
    3. '#' → logprob: -2.771676540374756
    4. ' and' → logprob: -3.271676540374756
    5. '    
' → logprob: -3.396676540374756
    6. '```' → logprob: -3.646676540374756
    7. ' 
' → logprob: -4.146676540374756
    8. ' ' → logprob: -4.146676540374756
    9. '\n' → logprob: -4.771676540374756
    10. '  
' → logprob: -5.021676540374756

Token 179: ' chosen' (ID: 16180)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6163941621780396
    2. ' s' → logprob: -1.9913941621780396
    3. ' ' → logprob: -2.61639404296875
    4. 'al' → logprob: -2.86639404296875
    5. ' =' → logprob: -3.24139404296875
    6. '=' → logprob: -3.74139404296875
    7. ':' → logprob: -3.86639404296875
    8. ' from' → logprob: -3.86639404296875
    9. ' is' → logprob: -4.49139404296875
    10. '<|end|>' → logprob: -4.49139404296875

Token 180: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7060031890869141
    2. 's' → logprob: -1.206003189086914
    3. ':' → logprob: -2.706003189086914
    4. '
' → logprob: -2.956003189086914
    5. 'def' → logprob: -4.206003189086914
    6. '\n' → logprob: -4.206003189086914
    7. ')' → logprob: -4.581003189086914
    8. ' =' → logprob: -4.956003189086914
    9. '```' → logprob: -5.206003189086914
    10. ':
' → logprob: -5.206003189086914

Token 181: ' flow' (ID: 7845)
  Prédit: ' capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -1.2727446556091309
    2. ' flow' → logprob: -1.6477446556091309
    3. 'flow' → logprob: -2.022744655609131
    4. 'capacity' → logprob: -2.522744655609131
    5. 'the' → logprob: -2.647744655609131
    6. ' the' → logprob: -2.647744655609131
    7. ' splitting' → logprob: -3.147744655609131
    8. ' assigning' → logprob: -4.147744655609131
    9. ' which' → logprob: -4.647744655609131
    10. 'which' → logprob: -4.772744655609131

Token 182: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20864258706569672
    2. '
' → logprob: -1.958642601966858
    3. ':' → logprob: -3.7086424827575684
    4. '\n' → logprob: -4.958642482757568
    5. ')' → logprob: -5.083642482757568
    6. '    
' → logprob: -6.208642482757568
    7. ',' → logprob: -6.583642482757568
    8. ')
' → logprob: -6.833642482757568
    9. ':
' → logprob: -6.958642482757568
    10. '):' → logprob: -7.458642482757568

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2670912742614746
    2. '
' → logprob: -1.8920912742614746
    3. ')' → logprob: -3.8920912742614746
    4. 's' → logprob: -4.267091274261475
    5. ':' → logprob: -4.642091274261475
    6. '    
' → logprob: -5.017091274261475
    7. 'def' → logprob: -5.017091274261475
    8. ')
' → logprob: -5.642091274261475
    9. ',' → logprob: -5.767091274261475
    10. '#' → logprob: -5.892091274261475

Token 184: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5959752798080444
    2. ':' → logprob: -1.7209752798080444
    3. '
' → logprob: -2.095975399017334
    4. 'def' → logprob: -3.470975399017334
    5. ')' → logprob: -3.720975399017334
    6. '\n' → logprob: -3.720975399017334
    7. ',' → logprob: -4.220975399017334
    8. '):' → logprob: -4.720975399017334
    9. ':
' → logprob: -5.345975399017334
    10. '    
' → logprob: -5.470975399017334

Token 185: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13727658987045288
    2. '
' → logprob: -2.7622766494750977
    3. 'def' → logprob: -3.3872766494750977
    4. ')' → logprob: -4.512276649475098
    5. '    
' → logprob: -5.637276649475098
    6. '#' → logprob: -6.012276649475098
    7. ')
' → logprob: -6.012276649475098
    8. '  
' → logprob: -6.512276649475098
    9. 'u' → logprob: -6.637276649475098
    10. ' 
' → logprob: -6.887276649475098

Token 186: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.49792805314064026
    2. 'each' → logprob: -1.7479280233383179
    3. ' u' → logprob: -1.9979280233383179
    4. ' node' → logprob: -3.3729281425476074
    5. ' v' → logprob: -4.122928142547607
    6. 'u' → logprob: -4.122928142547607
    7. ' ' → logprob: -5.497928142547607
    8. ' student' → logprob: -5.997928142547607
    9. ' t' → logprob: -6.122928142547607
    10. ' edge' → logprob: -6.497928142547607

Token 187: ' student' (ID: 6760)
  Prédit: ' student'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' student' → logprob: -0.11145517975091934
    2. 'student' → logprob: -2.611455202102661
    3. ' node' → logprob: -3.486455202102661
    4. 'node' → logprob: -6.986454963684082
    5. ' vertex' → logprob: -8.361454963684082
    6. ' user' → logprob: -9.861454963684082
    7. '_student' → logprob: -10.236454963684082
    8. ' student's' → logprob: -10.486454963684082
    9. ' u' → logprob: -10.611454963684082
    10. 'vertex' → logprob: -10.611454963684082

Token 188: ' node' (ID: 4596)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07836338877677917
    2. ',' → logprob: -3.0783634185791016
    3. ':
' → logprob: -4.078363418579102
    4. '   ' → logprob: -4.953363418579102
    5. ' :' → logprob: -5.953363418579102
    6. '):' → logprob: -6.953363418579102
    7. '):
' → logprob: -7.953363418579102
    8. ' (' → logprob: -8.328363418579102
    9. ' ,' → logprob: -8.703363418579102
    10. ' node' → logprob: -8.953363418579102

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23435571789741516
    2. ',' → logprob: -2.1093556880950928
    3. ':
' → logprob: -2.8593556880950928
    4. '   ' → logprob: -3.6093556880950928
    5. '):
' → logprob: -6.609355926513672
    6. '):' → logprob: -7.859355926513672
    7. ' (' → logprob: -7.984355926513672
    8. ',
' → logprob: -8.109355926513672
    9. ' :' → logprob: -8.859355926513672
    10. '#' → logprob: -9.109355926513672

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008908696472644806
    2. '    ' → logprob: -5.258908748626709
    3. ' ' → logprob: -6.633908748626709
    4. ')' → logprob: -7.258908748626709
    5. ',' → logprob: -7.633908748626709
    6. '<|end|>' → logprob: -8.25890827178955
    7. '       ' → logprob: -8.63390827178955
    8. '  ' → logprob: -8.88390827178955
    9. '    
' → logprob: -9.00890827178955
    10. '#' → logprob: -9.38390827178955

Token 191: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004055721219629049
    2. ' #' → logprob: -6.254055500030518
    3. '#' (adapté à ' #') → logprob: -6.754055500030518
    4. '    ' → logprob: -7.879055500030518
    5. ' ' → logprob: -8.129055976867676
    6. '  ' → logprob: -9.504055976867676
    7. '```' → logprob: -10.379055976867676
    8. '       ' → logprob: -10.504055976867676
    9. 'def' → logprob: -10.754055976867676
    10. '    
' → logprob: -11.004055976867676

Token 192: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025142058730125427
    2. ' add' → logprob: -4.650142192840576
    3. ' #' → logprob: -6.150142192840576
    4. ' ' → logprob: -6.400142192840576
    5. '  ' → logprob: -6.400142192840576
    6. ' Add' → logprob: -6.400142192840576
    7. ' connect' → logprob: -6.400142192840576
    8. 'Add' → logprob: -6.650142192840576
    9. '#' → logprob: -6.650142192840576
    10. '    ' → logprob: -7.275142192840576

Token 193: ' connect' (ID: 4837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45403289794921875
    2. ' add' → logprob: -2.4540328979492188
    3. 'add' → logprob: -3.0790328979492188
    4. 'graph' → logprob: -3.4540328979492188
    5. ' graph' → logprob: -3.5790328979492188
    6. 'Add' → logprob: -3.8290328979492188
    7. ' Add' → logprob: -3.9540328979492188
    8. 'from' → logprob: -4.204032897949219
    9. 'in' → logprob: -4.454032897949219
    10. '#' → logprob: -4.704032897949219

Token 194: ' student' (ID: 6760)
  Prédit: ' student'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' student' → logprob: -0.10339976847171783
    2. 'student' → logprob: -2.8533997535705566
    3. ' node' → logprob: -4.353399753570557
    4. ' T' → logprob: -4.603399753570557
    5. ' ' → logprob: -5.228399753570557
    6. ' to' → logprob: -6.228399753570557
    7. ' s' → logprob: -6.353399753570557
    8. ' students' → logprob: -6.478399753570557
    9. 's' → logprob: -6.478399753570557
    10. ' S' → logprob: -6.978399753570557

Token 195: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.01783592812716961
    2. '->' → logprob: -4.267836093902588
    3. ' to' → logprob: -6.267836093902588
    4. ' node' → logprob: -6.892836093902588
    5. ' ' → logprob: -8.39283561706543
    6. ')' → logprob: -9.26783561706543
    7. 's' → logprob: -9.39283561706543
    8. ' ->
' → logprob: -9.76783561706543
    9. '   ' → logprob: -9.89283561706543
    10. 'to' → logprob: -10.14283561706543

Token 196: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.020876895636320114
    2. 'T' → logprob: -3.895876884460449
    3. ' sys' → logprob: -8.64587688446045
    4. ' ' → logprob: -9.39587688446045
    5. ' ' → logprob: -10.89587688446045
    6. 'sys' → logprob: -11.39587688446045
    7. ' '' → logprob: -11.64587688446045
    8. '   ' → logprob: -11.89587688446045
    9. ' t' → logprob: -11.89587688446045
    10. '_T' → logprob: -12.77087688446045

Token 197: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6341168284416199
    2. ' (' → logprob: -1.1341168880462646
    3. ' with' → logprob: -2.7591168880462646
    4. '
' → logprob: -4.1341166496276855
    5. '(' → logprob: -4.2591166496276855
    6. ' capacity' → logprob: -4.6341166496276855
    7. ',' → logprob: -4.7591166496276855
    8. ' ' → logprob: -5.3841166496276855
    9. 'with' → logprob: -5.5091166496276855
    10. 'capacity' → logprob: -5.5091166496276855

Token 198: ' capacity' (ID: 12241)
  Prédit: ' capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.02046843059360981
    2. 'capacity' → logprob: -4.020468235015869
    3. ' high' → logprob: -6.645468235015869
    4. ' ' → logprob: -7.020468235015869
    5. ' low' → logprob: -9.770468711853027
    6. 'high' → logprob: -10.895468711853027
    7. ' max' → logprob: -11.270468711853027
    8. ' capacities' → logprob: -11.645468711853027
    9. ' a' → logprob: -12.020468711853027
    10. '(high' → logprob: -12.520468711853027

Token 199: ' (' (ID: 350)
  Prédit: ' high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.048309117555618286
    2. 'high' → logprob: -3.923309087753296
    3. ' f' → logprob: -4.548309326171875
    4. '(high' → logprob: -4.798309326171875
    5. ' low' → logprob: -5.423309326171875
    6. ' ' → logprob: -6.423309326171875
    7. ' (' → logprob: -6.923309326171875
    8. ' max' → logprob: -7.673309326171875
    9. ''' → logprob: -8.548309326171875
    10. '"' → logprob: -8.548309326171875

Token 200: 'high' (ID: 21116)
  Prédit: ' high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.05506766960024834
    2. 'high' → logprob: -2.930067777633667
    3. '(high' → logprob: -8.930068016052246
    4. ' ' → logprob: -10.430068016052246
    5. ' str' → logprob: -11.680068016052246
    6. ' f' → logprob: -13.055068016052246
    7. '   ' → logprob: -13.180068016052246
    8. ' max' → logprob: -13.180068016052246
    9. ' (' → logprob: -13.305068016052246
    10. ')' → logprob: -13.305068016052246

Token 201: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.003258280921727419
    2. '-' → logprob: -5.878258228302002
    3. '-low' → logprob: -7.878258228302002
    4. ')' → logprob: -10.62825870513916
    5. ' ' → logprob: -10.75325870513916
    6. '   ' → logprob: -11.00325870513916
    7. '-l' → logprob: -12.25325870513916
    8. ' ' → logprob: -12.87825870513916
    9. '  ' → logprob: -13.87825870513916
    10. '-high' → logprob: -14.25325870513916

Token 202: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.3132671117782593
    2. ' low' → logprob: -1.3132671117782593
    3. ' ' → logprob: -12.81326675415039
    4. '   ' → logprob: -13.18826675415039
    5. '  ' → logprob: -15.93826675415039
    6. '(low' → logprob: -16.06326675415039
    7. 'Low' → logprob: -16.18826675415039
    8. ' ' → logprob: -16.31326675415039
    9. '0' → logprob: -16.43826675415039
    10. '_low' → logprob: -16.56326675415039

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008195152622647583
    2. ' )' → logprob: -7.250819683074951
    3. '   ' → logprob: -10.125819206237793
    4. '+' → logprob: -10.625819206237793
    5. ')
' → logprob: -11.125819206237793
    6. ' +' → logprob: -11.625819206237793
    7. '),' → logprob: -12.250819206237793
    8. ' ' → logprob: -12.375819206237793
    9. ')

' → logprob: -13.375819206237793
    10. '```' → logprob: -13.375819206237793

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4020490348339081
    2. '
' → logprob: -1.5270490646362305
    3. ':' → logprob: -2.7770490646362305
    4. 'def' → logprob: -3.9020490646362305
    5. '    
' → logprob: -4.4020490646362305
    6. ':
' → logprob: -5.4020490646362305
    7. '):
' → logprob: -5.9020490646362305
    8. '):' → logprob: -6.0270490646362305
    9. ')' → logprob: -6.4020490646362305
    10. ',' → logprob: -6.6520490646362305

Token 205: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36305034160614014
    2. 'def' → logprob: -1.8630503416061401
    3. '
' → logprob: -2.4880504608154297
    4. ')' → logprob: -3.2380504608154297
    5. '    
' → logprob: -4.86305046081543
    6. ':' → logprob: -5.48805046081543
    7. '\n' → logprob: -5.48805046081543
    8. '):' → logprob: -5.98805046081543
    9. ')
' → logprob: -6.48805046081543
    10. '):
' → logprob: -6.86305046081543

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07950609922409058
    2. '
' → logprob: -3.2045061588287354
    3. 'def' → logprob: -4.079505920410156
    4. '    
' → logprob: -4.454505920410156
    5. '\n' → logprob: -5.579505920410156
    6. ')' → logprob: -7.204505920410156
    7. ':' → logprob: -7.204505920410156
    8. '  
' → logprob: -7.704505920410156
    9. ' 
' → logprob: -8.329505920410156
    10. '):
' → logprob: -8.454505920410156

Token 207: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04678226262331009
    2. '
' → logprob: -3.4217822551727295
    3. 'def' → logprob: -5.046782493591309
    4. '    
' → logprob: -5.671782493591309
    5. 'S' → logprob: -7.171782493591309
    6. ' S' → logprob: -7.296782493591309
    7. '    ' → logprob: -8.046782493591309
    8. 'm' → logprob: -8.046782493591309
    9. ' 
' → logprob: -8.421782493591309
    10. 'import' → logprob: -9.171782493591309

Token 208: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34047096967697144
    2. 'S' → logprob: -2.090471029281616
    3. ' S' → logprob: -2.215471029281616
    4. 'def' → logprob: -3.715471029281616
    5. '
' → logprob: -4.590470790863037
    6. ' def' → logprob: -5.715470790863037
    7. 'n' → logprob: -5.715470790863037
    8. ' n' → logprob: -5.840470790863037
    9. '    
' → logprob: -6.715470790863037
    10. 'graph' → logprob: -6.715470790863037

Token 209: ' demand' (ID: 8492)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.6278846263885498
    2. '_flow' → logprob: -1.0028846263885498
    3. '_capacity' → logprob: -3.25288462638855
    4. '_supply' → logprob: -3.25288462638855
    5. '_edges' → logprob: -4.502884864807129
    6. 'd' → logprob: -5.377884864807129
    7. ' =' → logprob: -6.002884864807129
    8. ' demand' → logprob: -7.127884864807129
    9. '_required' → logprob: -7.377884864807129
    10. ' flow' → logprob: -7.752884864807129

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005985797382891178
    2. '=' → logprob: -5.505985736846924
    3. '_flow' → logprob: -7.130985736846924
    4. '_' → logprob: -7.755985736846924
    5. '_d' → logprob: -7.880985736846924
    6. ' +=' → logprob: -9.255986213684082
    7. ' -=' → logprob: -9.880986213684082
    8. '_capacity' → logprob: -10.505986213684082
    9. ' ' → logprob: -10.755986213684082
    10. ' ==' → logprob: -11.380986213684082

Token 211: ' m' (ID: 284)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6882417798042297
    2. ' m' → logprob: -1.688241720199585
    3. ' low' → logprob: -1.938241720199585
    4. 'n' → logprob: -2.563241720199585
    5. ' sum' → logprob: -3.438241720199585
    6. 'm' → logprob: -3.563241720199585
    7. 'low' → logprob: -3.813241720199585
    8. 'sum' → logprob: -4.938241958618164
    9. ' ' → logprob: -7.313241958618164
    10. ' high' → logprob: -7.438241958618164

Token 212: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2837451696395874
    2. '   ' → logprob: -2.283745288848877
    3. 'def' → logprob: -3.283745288848877
    4. ':' → logprob: -3.533745288848877
    5. '\n' → logprob: -3.658745288848877
    6. ')' → logprob: -4.408745288848877
    7. '    
' → logprob: -4.533745288848877
    8. ')
' → logprob: -5.408745288848877
    9. ':
' → logprob: -5.408745288848877
    10. '):' → logprob: -5.658745288848877

Token 213: ' low' (ID: 4465)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1738968938589096
    2. '1' → logprob: -1.9238969087600708
    3. ' m' → logprob: -5.548896789550781
    4. '2' → logprob: -5.923896789550781
    5. ' \' → logprob: -6.173896789550781
    6. ' low' → logprob: -6.298896789550781
    7. ' (' → logprob: -7.798896789550781
    8. 'low' → logprob: -7.798896789550781
    9. '<|end|>' → logprob: -8.298896789550781
    10. ' '' → logprob: -8.423896789550781

Token 214: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0543113574385643
    2. '   ' → logprob: -3.9293112754821777
    3. '\n' → logprob: -3.9293112754821777
    4. '    
' → logprob: -5.179311275482178
    5. 'def' → logprob: -5.429311275482178
    6. '

' → logprob: -6.679311275482178
    7. '  
' → logprob: -7.054311275482178
    8. ' 
' → logprob: -8.304311752319336
    9. '
' → logprob: -8.429311752319336
    10. ':' → logprob: -8.554311752319336

Token 215: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7425519824028015
    2. '
' → logprob: -0.9925519824028015
    3. '    
' → logprob: -3.3675520420074463
    4. ' 
' → logprob: -3.4925520420074463
    5. ')' → logprob: -3.6175520420074463
    6. '\n' → logprob: -3.7425520420074463
    7. ' and' → logprob: -5.117551803588867
    8. '  
' → logprob: -5.492551803588867
    9. ')
' → logprob: -5.992551803588867
    10. '   
' → logprob: -6.117551803588867

Token 216: ' flow' (ID: 7845)
  Prédit: '_flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -0.6174850463867188
    2. '_capacity' → logprob: -1.6174850463867188
    3. '_d' → logprob: -1.8674850463867188
    4. ' flow' → logprob: -3.2424850463867188
    5. ' capacity' → logprob: -3.4924850463867188
    6. 'capacity' → logprob: -3.9924850463867188
    7. 'flow' → logprob: -4.742485046386719
    8. '_supply' → logprob: -5.492485046386719
    9. 'd' → logprob: -5.617485046386719
    10. ' demand' → logprob: -6.117485046386719

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06522392481565475
    2. '=' → logprob: -2.8152239322662354
    3. '_needed' → logprob: -7.190223693847656
    4. '   ' → logprob: -7.315223693847656
    5. '_required' → logprob: -7.565223693847656
    6. ' ' → logprob: -7.690223693847656
    7. ' must' → logprob: -8.440223693847656
    8. ' >=' → logprob: -8.815223693847656
    9. ' ==' → logprob: -9.565223693847656
    10. ' <=' → logprob: -10.065223693847656

Token 218: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.10028742998838425
    2. 'm' → logprob: -2.350287437438965
    3. ' ' → logprob: -9.850287437438965
    4. '0' → logprob: -11.850287437438965
    5. ' ' → logprob: -11.850287437438965
    6. '   ' → logprob: -13.100287437438965
    7. '	m' → logprob: -13.100287437438965
    8. ' total' → logprob: -13.100287437438965
    9. 'total' → logprob: -13.787787437438965
    10. '    ' → logprob: -14.287787437438965

Token 219: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1797124445438385
    2. ':' → logprob: -2.9297125339508057
    3. 'def' → logprob: -3.1797125339508057
    4. '\n' → logprob: -3.6797125339508057
    5. ':
' → logprob: -4.554712295532227
    6. '   ' → logprob: -4.679712295532227
    7. '

' → logprob: -4.929712295532227
    8. '    
' → logprob: -4.929712295532227
    9. '\' → logprob: -6.054712295532227
    10. '  
' → logprob: -6.304712295532227

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08351106196641922
    2. '
' → logprob: -3.2085111141204834
    3. 'def' → logprob: -3.8335111141204834
    4. '    
' → logprob: -4.208510875701904
    5. ':' → logprob: -6.708510875701904
    6. ')' → logprob: -7.958510875701904
    7. ',' → logprob: -8.583511352539062
    8. ' 
' → logprob: -8.708511352539062
    9. ':
' → logprob: -8.708511352539062
    10. '   
' → logprob: -8.833511352539062

Token 221: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5032556056976318
    2. '   ' → logprob: -1.1282556056976318
    3. '    
' → logprob: -3.628255605697632
    4. 'def' → logprob: -3.878255605697632
    5. ':' → logprob: -4.628255844116211
    6. '\n' → logprob: -5.628255844116211
    7. ':
' → logprob: -5.878255844116211
    8. '

' → logprob: -6.253255844116211
    9. ' 
' → logprob: -6.753255844116211
    10. ',' → logprob: -7.128255844116211

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14519403874874115
    2. '
' → logprob: -2.5201940536499023
    3. 'def' → logprob: -3.3951940536499023
    4. '    
' → logprob: -4.020194053649902
    5. ' 
' → logprob: -6.520194053649902
    6. '\n' → logprob: -7.520194053649902
    7. 'import' → logprob: -8.520194053649902
    8. '    ' → logprob: -8.645194053649902
    9. ' def' → logprob: -9.020194053649902
    10. 'n' → logprob: -9.020194053649902

Token 223: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11660026013851166
    2. 'class' → logprob: -3.366600275039673
    3. '
' → logprob: -3.616600275039673
    4. 'def' → logprob: -3.741600275039673
    5. 'graph' → logprob: -4.866600036621094
    6. '    
' → logprob: -5.366600036621094
    7. 'n' → logprob: -5.491600036621094
    8. ' graph' → logprob: -6.366600036621094
    9. ' class' → logprob: -6.741600036621094
    10. 'S' → logprob: -6.866600036621094

Token 224: ' If' (ID: 1843)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.39421868324279785
    2. '   ' → logprob: -1.2692186832427979
    3. 'def' → logprob: -3.519218683242798
    4. 'class' → logprob: -5.269218444824219
    5. 'graph' → logprob: -5.644218444824219
    6. 'N' → logprob: -6.144218444824219
    7. 'n' → logprob: -7.019218444824219
    8. ' S' → logprob: -7.144218444824219
    9. 'source' → logprob: -7.269218444824219
    10. 'from' → logprob: -7.644218444824219

Token 225: ' max' (ID: 2999)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.1030820682644844
    2. ' m' → logprob: -3.6030821800231934
    3. ' not' → logprob: -3.7280821800231934
    4. ' max' → logprob: -4.478082180023193
    5. ' find' → logprob: -4.603082180023193
    6. ' ' → logprob: -4.728082180023193
    7. ' flow' → logprob: -5.603082180023193
    8. 'can' → logprob: -5.728082180023193
    9. ' total' → logprob: -5.978082180023193
    10. ' dfs' → logprob: -7.353082180023193

Token 226: ' flow' (ID: 7845)
  Prédit: '_flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -0.07092013210058212
    2. ' flow' → logprob: -2.94592022895813
    3. 'flow' → logprob: -4.320919990539551
    4. '_' → logprob: -6.570919990539551
    5. 'imum' → logprob: -7.195919990539551
    6. ' _' → logprob: -7.945919990539551
    7. '-flow' → logprob: -9.82091999053955
    8. '(flow' → logprob: -10.69591999053955
    9. '_FLOW' → logprob: -11.07091999053955
    10. '.flow' → logprob: -11.94591999053955

Token 227: ' equals' (ID: 29702)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.3811960220336914
    2. ' >=' → logprob: -1.8811960220336914
    3. ' =' → logprob: -2.1311960220336914
    4. ' equals' → logprob: -2.1311960220336914
    5. '=' → logprob: -2.3811960220336914
    6. '==' → logprob: -3.1311960220336914
    7. '>=' → logprob: -3.2561960220336914
    8. ' from' → logprob: -3.3811960220336914
    9. ' ' → logprob: -3.7561960220336914
    10. 'from' → logprob: -3.8811960220336914

Token 228: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.006832706276327372
    2. 'm' → logprob: -5.006832599639893
    3. ' ' → logprob: -9.13183307647705
    4. ' ' → logprob: -12.25683307647705
    5. ' total' → logprob: -13.13183307647705
    6. '   ' → logprob: -13.88183307647705
    7. ' the' → logprob: -15.13183307647705
    8. '	m' → logprob: -15.63183307647705
    9. 'total' → logprob: -15.88183307647705
    10. ' to' → logprob: -16.131832122802734

Token 229: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1014544740319252
    2. ',' → logprob: -2.351454496383667
    3. ':
' → logprob: -7.226454257965088
    4. '.' → logprob: -9.226454734802246
    5. '):' → logprob: -9.226454734802246
    6. ' :' → logprob: -9.351454734802246
    7. '   ' → logprob: -9.476454734802246
    8. ' ,' → logprob: -9.851454734802246
    9. ':return' → logprob: -10.601454734802246
    10. ' and' → logprob: -10.851454734802246

Token 230: ' feasible' (ID: 58866)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4655439853668213
    2. ' then' → logprob: -1.0905439853668213
    3. ' we' → logprob: -4.215543746948242
    4. ' the' → logprob: -4.590543746948242
    5. ' can' → logprob: -5.590543746948242
    6. ' continue' → logprob: -6.590543746948242
    7. 'return' → logprob: -6.715543746948242
    8. ' there' → logprob: -6.965543746948242
    9. ' it' → logprob: -7.340543746948242
    10. ' possible' → logprob: -7.590543746948242

Token 231: ' assignment' (ID: 24618)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4276776611804962
    2. ':
' → logprob: -1.6776776313781738
    3. '   ' → logprob: -2.052677631378174
    4. '):' → logprob: -4.427677631378174
    5. '):
' → logprob: -4.677677631378174
    6. 'def' → logprob: -4.927677631378174
    7. '
' → logprob: -6.802677631378174
    8. ',' → logprob: -6.802677631378174
    9. '    
' → logprob: -8.427678108215332
    10. ')' → logprob: -8.552678108215332

Token 232: ' exists' (ID: 13031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25884541869163513
    2. '   ' → logprob: -2.008845329284668
    3. ':
' → logprob: -2.508845329284668
    4. '
' → logprob: -5.758845329284668
    5. '):' → logprob: -5.883845329284668
    6. 'def' → logprob: -6.133845329284668
    7. '):
' → logprob: -6.508845329284668
    8. ',' → logprob: -7.258845329284668
    9. ':

' → logprob: -8.133845329284668
    10. '():
' → logprob: -8.258845329284668

Token 233: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.253265380859375
    2. '   ' → logprob: -1.628265380859375
    3. ':
' → logprob: -4.503265380859375
    4. '):' → logprob: -5.128265380859375
    5. 'def' → logprob: -5.378265380859375
    6. '
' → logprob: -6.628265380859375
    7. ',' → logprob: -7.003265380859375
    8. '):
' → logprob: -7.128265380859375
    9. ')' → logprob: -7.753265380859375
    10. '.' → logprob: -7.878265380859375

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7513487935066223
    2. '
' → logprob: -1.0013487339019775
    3. 'def' → logprob: -2.2513487339019775
    4. ':' → logprob: -3.7513487339019775
    5. '    
' → logprob: -4.001348972320557
    6. ':
' → logprob: -5.376348972320557
    7. '\n' → logprob: -5.876348972320557
    8. ' 
' → logprob: -6.126348972320557
    9. '\' → logprob: -6.876348972320557
    10. ' def' → logprob: -7.751348972320557

Token 235: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030737489461898804
    2. 'n' → logprob: -4.905737400054932
    3. 'graph' → logprob: -5.405737400054932
    4. '
' → logprob: -5.655737400054932
    5. 'def' → logprob: -5.780737400054932
    6. ' n' → logprob: -6.030737400054932
    7. '    
' → logprob: -6.155737400054932
    8. ' graph' → logprob: -6.280737400054932
    9. ' source' → logprob: -6.405737400054932
    10. 'source' → logprob: -7.155737400054932

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09014134854078293
    2. '=' → logprob: -2.8401412963867188
    3. ',' → logprob: -3.5901412963867188
    4. ' ,' → logprob: -9.340141296386719
    5. ' ' → logprob: -9.715141296386719
    6. ' =
' → logprob: -10.590141296386719
    7. '_' → logprob: -12.465141296386719
    8. '  ' → logprob: -12.590141296386719
    9. ')' → logprob: -13.090141296386719
    10. '   ' → logprob: -13.715141296386719

Token 237: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5074205994606018
    2. 'n' → logprob: -1.507420539855957
    3. '2' → logprob: -2.257420539855957
    4. 'm' → logprob: -3.882420539855957
    5. ''n' → logprob: -4.007420539855957
    6. ' ' → logprob: -4.257420539855957
    7. '"' → logprob: -5.007420539855957
    8. ' n' → logprob: -5.507420539855957
    9. ''s' → logprob: -6.132420539855957
    10. '-' → logprob: -6.382420539855957

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.057468000799417496
    2. ''n' → logprob: -4.182467937469482
    3. 'n' → logprob: -4.432467937469482
    4. '-' → logprob: -4.682467937469482
    5. ''s' → logprob: -5.182467937469482
    6. '"' → logprob: -5.557467937469482
    7. '2' → logprob: -5.807467937469482
    8. 'm' → logprob: -6.057467937469482
    9. ''m' → logprob: -6.432467937469482
    10. ''' → logprob: -7.057467937469482

Token 239: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' T' (ID: 353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1649467945098877
    2. 'T' (adapté à ' T') → logprob: -2.1649467945098877
    3. 'n' → logprob: -4.289946556091309
    4. 'len' → logprob: -4.289946556091309
    5. 'graph' → logprob: -6.164946556091309
    6. ' ' → logprob: -6.539946556091309
    7. 'N' → logprob: -6.914946556091309
    8. 'm' → logprob: -7.039946556091309
    9. 'S' → logprob: -7.039946556091309
    10. ' T' → logprob: -7.414946556091309

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02981865406036377
    2. '=' → logprob: -3.529818534851074
    3. ' =
' → logprob: -10.154818534851074
    4. ' ' → logprob: -10.904818534851074
    5. ',' → logprob: -12.279818534851074
    6. '   ' → logprob: -12.654818534851074
    7. '=
' → logprob: -13.154818534851074
    8. '```' → logprob: -15.154818534851074
    9. '  ' → logprob: -15.404818534851074
    10. ' 
' → logprob: -16.15481948852539

Token 243: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0544360876083374
    2. '1' → logprob: -1.3044360876083374
    3. 'm' → logprob: -1.3044360876083374
    4. 'n' → logprob: -2.429436206817627
    5. ' ' → logprob: -4.804436206817627
    6. 'len' → logprob: -4.804436206817627
    7. ' m' → logprob: -6.179436206817627
    8. ' n' → logprob: -6.304436206817627
    9. 'S' → logprob: -9.054435729980469
    10. '   ' → logprob: -9.304435729980469

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4967573583126068
    2. 'm' → logprob: -1.3717573881149292
    3. 'n' → logprob: -2.6217572689056396
    4. '2' → logprob: -2.9967572689056396
    5. 'len' → logprob: -4.371757507324219
    6. ' ' → logprob: -6.621757507324219
    7. ' m' → logprob: -7.496757507324219
    8. ' n' → logprob: -7.996757507324219
    9. '(' → logprob: -9.246757507324219
    10. '   ' → logprob: -9.621757507324219

Token 245: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09089748561382294
    2. '   ' → logprob: -4.090897560119629
    3. '<|end|>' → logprob: -4.215897560119629
    4. '    
' → logprob: -4.340897560119629
    5. 'n' → logprob: -5.215897560119629
    6. 'graph' → logprob: -5.340897560119629
    7. ',' → logprob: -5.340897560119629
    8. 'm' → logprob: -5.465897560119629
    9. ' 
' → logprob: -5.840897560119629
    10. 'def' → logprob: -5.965897560119629

Token 247: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3008343577384949
    2. ' graph' → logprob: -1.5508344173431396
    3. '   ' → logprob: -4.8008341789245605
    4. 'next' → logprob: -4.8008341789245605
    5. ' next' → logprob: -4.9258341789245605
    6. 'node' → logprob: -5.1758341789245605
    7. 'from' → logprob: -5.8008341789245605
    8. ' node' → logprob: -5.8008341789245605
    9. 'class' → logprob: -6.0508341789245605
    10. 'idx' → logprob: -6.1758341789245605

Token 248: ' nodes' (ID: 15749)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.441862553358078
    2. 'offset' → logprob: -2.4418625831604004
    3. ' graph' → logprob: -2.9418625831604004
    4. 'node' → logprob: -2.9418625831604004
    5. 'class' → logprob: -3.4418625831604004
    6. 'idx' → logprob: -3.8168625831604004
    7. ' offset' → logprob: -4.1918625831604
    8. 'n' → logprob: -4.1918625831604
    9. 'next' → logprob: -4.3168625831604
    10. 'adj' → logprob: -4.5668625831604

Token 249: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5548992156982422
    2. '_count' → logprob: -0.9298992156982422
    3. '=' → logprob: -4.304899215698242
    4. '_cnt' → logprob: -5.179899215698242
    5. '_num' → logprob: -5.554899215698242
    6. 'count' → logprob: -6.429899215698242
    7. ',' → logprob: -6.929899215698242
    8. '_' → logprob: -7.054899215698242
    9. ')' → logprob: -7.054899215698242
    10. '_size' → logprob: -7.179899215698242

Token 250: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5716599225997925
    2. '2' → logprob: -2.071660041809082
    3. '<|end|>' → logprob: -2.321660041809082
    4. ' m' → logprob: -2.696660041809082
    5. ' S' → logprob: -3.071660041809082
    6. ' n' → logprob: -3.821660041809082
    7. 'S' → logprob: -4.071660041809082
    8. '   ' → logprob: -4.946660041809082
    9. 'range' → logprob: -5.071660041809082
    10. '<|end|>' → logprob: -5.196660041809082

Token 251: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11099664121866226
    2. '+' → logprob: -3.235996723175049
    3. ' +' → logprob: -3.610996723175049
    4. ',
' → logprob: -4.610996723175049
    5. ' ,' → logprob: -4.985996723175049
    6. '<|end|>' → logprob: -5.360996723175049
    7. ' =' → logprob: -5.485996723175049
    8. ')' → logprob: -5.610996723175049
    9. '2' → logprob: -6.110996723175049
    10. 'import' → logprob: -6.235996723175049

Token 252: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014222737401723862
    2. ' ' → logprob: -4.264222621917725
    3. '   ' → logprob: -10.639223098754883
    4. '0' → logprob: -11.264223098754883
    5. '  ' → logprob: -12.264223098754883
    6. 'S' → logprob: -12.639223098754883
    7. '    ' → logprob: -12.889223098754883
    8. ',' → logprob: -13.264223098754883
    9. ' S' → logprob: -13.264223098754883
    10. 'T' → logprob: -13.576723098754883

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018000677227973938
    2. '<|end|>' → logprob: -4.643000602722168
    3. ',
' → logprob: -5.643000602722168
    4. '<|end|>' → logprob: -6.018000602722168
    5. ' ,' → logprob: -6.643000602722168
    6. '
' → logprob: -7.893000602722168
    7. ' ' → logprob: -8.643000602722168
    8. '   ' → logprob: -9.518000602722168
    9. ';' → logprob: -9.643000602722168
    10. 'import' → logprob: -10.143000602722168

Token 254: ' T' (ID: 353)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5936914086341858
    2. ' ' → logprob: -0.8436914086341858
    3. ' S' → logprob: -4.593691349029541
    4. 'S' → logprob: -6.843691349029541
    5. ' n' → logprob: -6.968691349029541
    6. ' edge' → logprob: -7.093691349029541
    7. ' T' → logprob: -7.093691349029541
    8. ' edges' → logprob: -7.343691349029541
    9. '   ' → logprob: -7.593691349029541
    10. '1' → logprob: -7.593691349029541

Token 255: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31652820110321045
    2. ',' → logprob: -2.0665283203125
    3. '2' → logprob: -2.1915283203125
    4. ' =' → logprob: -3.5665283203125
    5. '+' → logprob: -6.4415283203125
    6. ' ' → logprob: -7.3165283203125
    7. '   ' → logprob: -7.5665283203125
    8. ',
' → logprob: -7.5665283203125
    9. '<|end|>' → logprob: -7.9415283203125
    10. '<|end|>' → logprob: -7.9415283203125

Token 256: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017131395870819688
    2. ' ' → logprob: -6.376713275909424
    3. '   ' → logprob: -11.876712799072266
    4. '  ' → logprob: -13.126712799072266
    5. 'len' → logprob: -14.501712799072266
    6. '```' → logprob: -15.001712799072266
    7. '    ' → logprob: -15.251712799072266
    8. 'n' → logprob: -15.564212799072266
    9. 'range' → logprob: -16.314212799072266
    10. '     ' → logprob: -16.876712799072266

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12134557962417603
    2. '
' → logprob: -2.9963455200195312
    3. ',
' → logprob: -3.1213455200195312
    4. '2' → logprob: -4.746345520019531
    5. '   ' → logprob: -5.496345520019531
    6. ' ,' → logprob: -5.871345520019531
    7. '<|end|>' → logprob: -7.121345520019531
    8. '    
' → logprob: -7.371345520019531
    9. '<|end|>' → logprob: -7.621345520019531
    10. 'import' → logprob: -7.996345520019531

Token 258: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.5272994637489319
    2. 'edge' → logprob: -1.777299404144287
    3. '2' → logprob: -3.027299404144287
    4. '   ' → logprob: -3.152299404144287
    5. ' edges' → logprob: -3.277299404144287
    6. ' next' → logprob: -3.652299404144287
    7. ' ' → logprob: -4.277299404144287
    8. ' node' → logprob: -4.652299404144287
    9. ' idx' → logprob: -4.652299404144287
    10. 'edges' → logprob: -4.902299404144287

Token 259: ' nodes' (ID: 15749)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.38624298572540283
    2. '_node' → logprob: -1.5112429857254028
    3. '_' → logprob: -2.3862428665161133
    4. '_n' → logprob: -6.011242866516113
    5. 's' → logprob: -6.261242866516113
    6. ' _' → logprob: -7.636242866516113
    7. 'node' → logprob: -7.761242866516113
    8. '_list' → logprob: -7.886242866516113
    9. '_count' → logprob: -7.886242866516113
    10. '_u' → logprob: -8.011242866516113

Token 260: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8421801328659058
    2. ' =' → logprob: -0.9671801328659058
    3. '=' → logprob: -2.4671802520751953
    4. 's' → logprob: -3.2171802520751953
    5. '2' → logprob: -4.092180252075195
    6. '_nodes' → logprob: -4.217180252075195
    7. '   ' → logprob: -4.842180252075195
    8. '_' → logprob: -5.717180252075195
    9. ',
' → logprob: -5.842180252075195
    10. '_ids' → logprob: -6.092180252075195

Token 261: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16931141912937164
    2. 'i' → logprob: -2.7943115234375
    3. 'range' → logprob: -2.9193115234375
    4. '[' → logprob: -4.6693115234375
    5. ' i' → logprob: -4.7943115234375
    6. ' ' → logprob: -5.2943115234375
    7. 'for' → logprob: -5.7943115234375
    8. 'from' → logprob: -6.1693115234375
    9. 'list' → logprob: -6.5443115234375
    10. '[i' → logprob: -6.6693115234375

Token 262: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.764971137046814
    2. '2' → logprob: -1.389971137046814
    3. '[i' → logprob: -1.514971137046814
    4. 'range' → logprob: -3.0149712562561035
    5. '[' → logprob: -5.0149712562561035
    6. 'list' → logprob: -5.6399712562561035
    7. '[e' → logprob: -6.3899712562561035
    8. ' i' → logprob: -7.2649712562561035
    9. 'idx' → logprob: -7.5149712562561035
    10. '[
' → logprob: -7.7649712562561035

Token 263: '..' (ID: 485)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.26442772150039673
    2. '2' → logprob: -1.514427661895752
    3. '(' → logprob: -4.764427661895752
    4. '(m' → logprob: -5.639427661895752
    5. '   ' → logprob: -8.38942813873291
    6. ' m' → logprob: -10.13942813873291
    7. ' ' → logprob: -10.26442813873291
    8. ' (' → logprob: -11.13942813873291
    9. '1' → logprob: -11.63942813873291
    10. '+m' → logprob: -13.01442813873291

Token 265: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09437163919210434
    2. '+m' → logprob: -2.9693715572357178
    3. ' +' → logprob: -3.3443715572357178
    4. '   ' → logprob: -7.094371795654297
    5. ',' → logprob: -7.219371795654297
    6. '+n' → logprob: -7.469371795654297
    7. 'm' → logprob: -8.094371795654297
    8. '*' → logprob: -8.219371795654297
    9. '*m' → logprob: -8.344371795654297
    10. '2' → logprob: -8.469371795654297

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. '2' → logprob: -10.875019073486328
    3. 'm' → logprob: -17.875019073486328
    4. '   ' → logprob: -18.500019073486328
    5. ' ' → logprob: -19.250019073486328
    6. '3' → logprob: -20.125019073486328
    7. '

' → logprob: -20.250019073486328
    8. '+' → logprob: -21.000019073486328
    9. '```' → logprob: -21.000019073486328
    10. '１' → logprob: -21.125019073486328

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0666005611419678
    2. '   ' → logprob: -1.3166005611419678
    3. '<|end|>' → logprob: -1.5666005611419678
    4. '
' → logprob: -1.9416005611419678
    5. ',
' → logprob: -4.441600799560547
    6. '```' → logprob: -5.066600799560547
    7. '<|end|>' → logprob: -5.191600799560547
    8. '    
' → logprob: -6.066600799560547
    9. 'nodes' → logprob: -6.441600799560547
    10. ' nodes' → logprob: -7.191600799560547

Token 268: ' student' (ID: 6760)
  Prédit: 'students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'students' → logprob: -1.0542957782745361
    2. ' student' → logprob: -1.4292957782745361
    3. 'student' → logprob: -1.4292957782745361
    4. ' students' → logprob: -1.9292957782745361
    5. '   ' → logprob: -3.929295778274536
    6. ' n' → logprob: -6.679295539855957
    7. 'n' → logprob: -7.054295539855957
    8. ' vertices' → logprob: -7.429295539855957
    9. 'stu' → logprob: -7.429295539855957
    10. 'vertices' → logprob: -7.554295539855957

Token 269: ' nodes' (ID: 15749)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11843721568584442
    2. '_nodes' → logprob: -2.2434372901916504
    3. 'nodes' → logprob: -5.49343729019165
    4. ' nodes' → logprob: -6.99343729019165
    5. '2' → logprob: -8.618436813354492
    6. '=' → logprob: -8.743436813354492
    7. ' =' → logprob: -8.993436813354492
    8. '_' → logprob: -10.868436813354492
    9. '_s' → logprob: -10.993436813354492
    10. '_count' → logprob: -11.493436813354492

Token 270: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.525926411151886
    2. ' =' → logprob: -0.900926411151886
    3. ':' → logprob: -6.02592658996582
    4. '=m' → logprob: -8.15092658996582
    5. '2' → logprob: -10.40092658996582
    6. 'import' → logprob: -11.15092658996582
    7. '=
' → logprob: -11.52592658996582
    8. 'm' → logprob: -11.77592658996582
    9. '   ' → logprob: -12.02592658996582
    10. ' ' → logprob: -12.15092658996582

Token 271: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5781913995742798
    2. ' m' → logprob: -0.8281913995742798
    3. '2' → logprob: -6.70319128036499
    4. ' ' → logprob: -7.70319128036499
    5. 'range' → logprob: -7.95319128036499
    6. ' range' → logprob: -8.953191757202148
    7. '[m' → logprob: -10.453191757202148
    8. '   ' → logprob: -10.828191757202148
    9. '[' → logprob: -11.328191757202148
    10. ' [' → logprob: -11.953191757202148

Token 272: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002993544621858746
    2. ' +' → logprob: -8.125299453735352
    3. '2' → logprob: -12.750299453735352
    4. '+m' → logprob: -15.625299453735352
    5. '   ' → logprob: -16.87529945373535
    6. '＋' → logprob: -17.62529945373535
    7. '+
' → logprob: -18.12529945373535
    8. 'import' → logprob: -18.25029945373535
    9. 's' → logprob: -18.25029945373535
    10. '+n' → logprob: -18.37529945373535

Token 273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.750001907348633
    5. '3' → logprob: -16.875001907348633
    6. '+' → logprob: -18.375001907348633
    7. '
' → logprob: -18.500001907348633
    8. '```' → logprob: -18.875001907348633
    9. '  ' → logprob: -19.000001907348633
    10. '4' → logprob: -19.000001907348633

Token 274: ' ..' (ID: 8548)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0877639651298523
    2. '+' → logprob: -3.837764024734497
    3. 'import' → logprob: -4.587763786315918
    4. '...' → logprob: -4.837763786315918
    5. '   ' → logprob: -4.837763786315918
    6. ':' → logprob: -4.962763786315918
    7. '+m' → logprob: -4.962763786315918
    8. ',m' → logprob: -5.337763786315918
    9. 'm' → logprob: -6.087763786315918
    10. '=' → logprob: -6.462763786315918

Token 275: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.000377049611415714
    2. ' m' → logprob: -8.12537670135498
    3. '   ' → logprob: -9.50037670135498
    4. ' ' → logprob: -12.62537670135498
    5. '+m' → logprob: -14.12537670135498
    6. '(m' → logprob: -14.25037670135498
    7. '  ' → logprob: -14.87537670135498
    8. '2' → logprob: -15.12537670135498
    9. '	m' → logprob: -15.87537670135498
    10. '    ' → logprob: -16.250377655029297

Token 276: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.1054253011243418e-05
    2. ' +' → logprob: -10.875020980834961
    3. '2' → logprob: -13.250020980834961
    4. '+m' → logprob: -15.750020980834961
    5. '＋' → logprob: -16.25002098083496
    6. '+n' → logprob: -17.25002098083496
    7. '+
' → logprob: -17.75002098083496
    8. 'plus' → logprob: -18.00002098083496
    9. '*' → logprob: -18.00002098083496
    10. 's' → logprob: -18.25002098083496

Token 277: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06056380271911621
    2. '2' → logprob: -3.060563802719116
    3. '1' → logprob: -4.435564041137695
    4. 'N' → logprob: -10.560564041137695
    5. ' n' → logprob: -11.310564041137695
    6. '3' → logprob: -12.560564041137695
    7. 'len' → logprob: -12.810564041137695
    8. '(n' → logprob: -12.935564041137695
    9. '+n' → logprob: -13.060564041137695
    10. '+' → logprob: -13.185564041137695

Token 278: '+n' (ID: 87683)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4210420846939087
    2. '+m' → logprob: -1.6710420846939087
    3. ' +' → logprob: -2.046041965484619
    4. '+n' → logprob: -3.671041965484619
    5. '+
' → logprob: -7.296041965484619
    6. 'import' → logprob: -9.796042442321777
    7. '   ' → logprob: -10.296042442321777
    8. ',' → logprob: -10.421042442321777
    9. ' +
' → logprob: -11.171042442321777
    10. '+

' → logprob: -11.546042442321777

Token 279: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7966546416282654
    2. '
' → logprob: -0.9216546416282654
    3. 'graph' → logprob: -2.17165470123291
    4. ' graph' → logprob: -3.54665470123291
    5. '    
' → logprob: -5.42165470123291
    6. 'class' → logprob: -7.17165470123291
    7. 'edges' → logprob: -7.29665470123291
    8. '	graph' → logprob: -7.29665470123291
    9. 'nodes' → logprob: -8.04665470123291
    10. ' edges' → logprob: -8.54665470123291

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14865179359912872
    2. '
' → logprob: -2.8986518383026123
    3. 'graph' → logprob: -3.5236518383026123
    4. '    
' → logprob: -3.7736518383026123
    5. ' graph' → logprob: -4.273651599884033
    6. 'def' → logprob: -5.898651599884033
    7. 'class' → logprob: -6.148651599884033
    8. ',' → logprob: -6.273651599884033
    9. ':' → logprob: -6.523651599884033
    10. '```' → logprob: -6.648651599884033

Token 281: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09505577385425568
    2. ' graph' → logprob: -2.8450558185577393
    3. 'class' → logprob: -4.09505558013916
    4. '   ' → logprob: -4.34505558013916
    5. 'size' → logprob: -7.09505558013916
    6. ' class' → logprob: -7.84505558013916
    7. 'adj' → logprob: -7.84505558013916
    8. ' size' → logprob: -8.34505558013916
    9. 'def' → logprob: -8.47005558013916
    10. 'from' → logprob: -8.84505558013916

Token 282: ' total' (ID: 3609)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0777086690068245
    2. 'class' → logprob: -2.8277087211608887
    3. ' graph' → logprob: -4.577708721160889
    4. '   ' → logprob: -6.452708721160889
    5. 'adj' → logprob: -6.702708721160889
    6. 'def' → logprob: -7.452708721160889
    7. 'size' → logprob: -7.452708721160889
    8. 'g' → logprob: -8.07770824432373
    9. 'from' → logprob: -8.45270824432373
    10. ' class' → logprob: -8.45270824432373

Token 283: ' nodes' (ID: 15749)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -4.4849443838757e-06
    2. '_' → logprob: -13.625004768371582
    3. ' =' → logprob: -13.875004768371582
    4. '_vertices' → logprob: -13.875004768371582
    5. 'nodes' → logprob: -15.000004768371582
    6. '_n' → logprob: -15.250004768371582
    7. '_node' → logprob: -15.875004768371582
    8. 'Nodes' → logprob: -15.875004768371582
    9. '_size' → logprob: -16.000003814697266
    10. '=' → logprob: -16.250003814697266

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804229199886322
    2. '=' → logprob: -3.2880423069000244
    3. ' =
' → logprob: -14.413042068481445
    4. ',' → logprob: -16.163042068481445
    5. ' ' → logprob: -16.788042068481445
    6. '=m' → logprob: -16.788042068481445
    7. '=int' → logprob: -16.913042068481445
    8. '=n' → logprob: -17.163042068481445
    9. '=
' → logprob: -17.288042068481445
    10. ' ' → logprob: -17.788042068481445

Token 285: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04032238572835922
    2. '2' → logprob: -3.4153223037719727
    3. ' m' → logprob: -5.040322303771973
    4. ' ' → logprob: -8.915322303771973
    5. '   ' → logprob: -10.165322303771973
    6. '(m' → logprob: -12.290322303771973
    7. '1' → logprob: -12.790322303771973
    8. '(' → logprob: -13.915322303771973
    9. '	m' → logprob: -14.415322303771973
    10. 'n' → logprob: -15.040322303771973

Token 286: '2' (ID: 17)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02327762544155121
    2. '2' → logprob: -3.773277521133423
    3. '(m' → logprob: -11.148277282714844
    4. '(' → logprob: -11.773277282714844
    5. ' m' → logprob: -11.773277282714844
    6. '   ' → logprob: -13.648277282714844
    7. '1' → logprob: -14.023277282714844
    8. ' ' → logprob: -15.648277282714844
    9. 'n' → logprob: -16.023277282714844
    10. '	m' → logprob: -17.148277282714844

Token 287: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.201909601688385
    2. '+' → logprob: -1.7019095420837402
    3. '+m' → logprob: -7.70190954208374
    4. '+(' → logprob: -12.076910018920898
    5. '*' → logprob: -12.076910018920898
    6. ' ' → logprob: -12.201910018920898
    7. '+
' → logprob: -12.201910018920898
    8. '   ' → logprob: -12.326910018920898
    9. ' +
' → logprob: -12.576910018920898
    10. ' *' → logprob: -12.951910018920898

Token 288: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023246755823493004
    2. ' m' → logprob: -3.7732467651367188
    3. '(m' → logprob: -14.523246765136719
    4. '   ' → logprob: -14.648246765136719
    5. '2' → logprob: -15.273246765136719
    6. '	m' → logprob: -16.02324676513672
    7. '1' → logprob: -17.14824676513672
    8. ' ' → logprob: -17.27324676513672
    9. '(' → logprob: -17.77324676513672
    10. ' (' → logprob: -17.77324676513672

Token 289: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2875489592552185
    2. '+' → logprob: -1.5375490188598633
    3. '+m' → logprob: -3.4125490188598633
    4. '+n' → logprob: -6.787549018859863
    5. '+
' → logprob: -8.662549018859863
    6. ',' → logprob: -8.662549018859863
    7. ' +
' → logprob: -8.912549018859863
    8. '*m' → logprob: -9.287549018859863
    9. '*' → logprob: -9.912549018859863
    10. 'm' → logprob: -9.912549018859863

Token 290: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005234475247561932
    2. ' n' → logprob: -5.255234241485596
    3. '   ' → logprob: -14.380234718322754
    4. '	n' → logprob: -16.130233764648438
    5. '(n' → logprob: -17.255233764648438
    6. ' ' → logprob: -17.755233764648438
    7. '(' → logprob: -18.130233764648438
    8. '2' → logprob: -19.005233764648438
    9. '1' → logprob: -19.005233764648438
    10. '+' → logprob: -19.255233764648438

Token 291: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1824430376291275
    2. ',' → logprob: -3.432443141937256
    3. 'graph' → logprob: -3.682443141937256
    4. '   ' → logprob: -3.932443141937256
    5. 'n' → logprob: -4.682443141937256
    6. '+' → logprob: -4.682443141937256
    7. 'total' → logprob: -4.682443141937256
    8. ',
' → logprob: -4.932443141937256
    9. 'nodes' → logprob: -5.057443141937256
    10. ' =' → logprob: -5.182443141937256

Token 292: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5014838576316833
    2. '   ' → logprob: -1.0014839172363281
    3. '    
' → logprob: -5.126483917236328
    4. ' graph' → logprob: -5.126483917236328
    5. 'graph' → logprob: -5.251483917236328
    6. '```' → logprob: -6.001483917236328
    7. 'nodes' → logprob: -6.126483917236328
    8. 'n' → logprob: -7.126483917236328
    9. ' 
' → logprob: -7.376483917236328
    10. ',' → logprob: -7.501483917236328

Token 293: ' size' (ID: 2349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5892350077629089
    2. ' graph' → logprob: -2.5892350673675537
    3. 'n' → logprob: -2.7142350673675537
    4. 'graph' → logprob: -2.9642350673675537
    5. ' nodes' → logprob: -2.9642350673675537
    6. 'nodes' → logprob: -3.0892350673675537
    7. ' n' → logprob: -3.5892350673675537
    8. '```' → logprob: -3.9642350673675537
    9. 'total' → logprob: -4.089234828948975
    10. 'class' → logprob: -4.214234828948975

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1427219659090042
    2. '=' → logprob: -2.0177218914031982
    3. ' ' → logprob: -10.642722129821777
    4. ')' → logprob: -11.642722129821777
    5. 's' → logprob: -12.392722129821777
    6. ',' → logprob: -13.392722129821777
    7. '_' → logprob: -13.642722129821777
    8. '   ' → logprob: -13.767722129821777
    9. '  ' → logprob: -13.892722129821777
    10. ' =
' → logprob: -14.017722129821777

Token 295: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002518031978979707
    2. ' ' → logprob: -8.500251770019531
    3. 'm' → logprob: -10.125251770019531
    4. '   ' → logprob: -11.875251770019531
    5. '(' → logprob: -13.750251770019531
    6. ' m' → logprob: -15.625251770019531
    7. '1' → logprob: -17.50025177001953
    8. '(m' → logprob: -17.87525177001953
    9. 'n' → logprob: -18.25025177001953
    10. '3' → logprob: -18.37525177001953

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -11.375024795532227
    3. 'm' → logprob: -11.625024795532227
    4. '(' → logprob: -12.375024795532227
    5. '   ' → logprob: -14.750024795532227
    6. '(m' → logprob: -16.375024795532227
    7. '           ' → logprob: -19.500024795532227
    8. ' m' → logprob: -19.625024795532227
    9. '1' → logprob: -19.625024795532227
    10. '       ' → logprob: -20.125024795532227

Token 297: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0791337788105011
    2. '+' → logprob: -2.5791337490081787
    3. '+m' → logprob: -8.329133987426758
    4. '   ' → logprob: -13.829133987426758
    5. ' ' → logprob: -14.829133987426758
    6. ' ' → logprob: -15.079133987426758
    7. ' +
' → logprob: -15.329133987426758
    8. '+
' → logprob: -16.329133987426758
    9. '+n' → logprob: -16.329133987426758
    10. '    ' → logprob: -16.454133987426758

Token 298: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.061967797577381134
    2. ' m' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.436967849731445
    4. '	m' → logprob: -16.686967849731445
    5. '(m' → logprob: -18.186967849731445
    6. ' ' → logprob: -18.936967849731445
    7. '+m' → logprob: -19.061967849731445
    8. '[m' → logprob: -19.436967849731445
    9. 'n' → logprob: -19.686967849731445
    10. '```' → logprob: -20.061967849731445

Token 299: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20181608200073242
    2. '+' → logprob: -1.7018160820007324
    3. '+n' → logprob: -7.826816082000732
    4. '+
' → logprob: -13.45181655883789
    5. ' +
' → logprob: -13.82681655883789
    6. '   ' → logprob: -14.57681655883789
    7. '+m' → logprob: -15.32681655883789
    8. 'import' → logprob: -15.57681655883789
    9. 'n' → logprob: -15.95181655883789
    10. '<|end|>' → logprob: -16.45181655883789

Token 300: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0788901224732399
    2. ' n' → logprob: -2.578890085220337
    3. '	n' → logprob: -15.703889846801758
    4. '   ' → logprob: -15.828889846801758
    5. ' ' → logprob: -16.703889846801758
    6. ' ' → logprob: -17.703889846801758
    7. '_n' → logprob: -19.203889846801758
    8. '
' → logprob: -19.578889846801758
    9. '  ' → logprob: -19.578889846801758
    10. '    ' → logprob: -19.703889846801758

Token 301: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15029370784759521
    2. 'graph' → logprob: -2.4002938270568848
    3. ' graph' → logprob: -3.6502938270568848
    4. '   ' → logprob: -4.150293827056885
    5. '    
' → logprob: -5.400293827056885
    6. '	graph' → logprob: -7.275293827056885
    7. '_graph' → logprob: -7.775293827056885
    8. ' 
' → logprob: -8.275293350219727
    9. 'class' → logprob: -8.525293350219727
    10. '```' → logprob: -8.775293350219727

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5144026279449463
    2. 'graph' → logprob: -1.0144026279449463
    3. ' graph' → logprob: -3.3894026279449463
    4. '
' → logprob: -6.264402389526367
    5. 'class' → logprob: -6.264402389526367
    6. '    
' → logprob: -6.389402389526367
    7. '	graph' → logprob: -9.389402389526367
    8. 'adj' → logprob: -9.889402389526367
    9. '```' → logprob: -10.264402389526367
    10. 'from' → logprob: -10.389402389526367

Token 303: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0012963043991476297
    2. 'class' → logprob: -6.751296520233154
    3. '   ' → logprob: -9.501296043395996
    4. ' graph' → logprob: -10.376296043395996
    5. 'adj' → logprob: -11.251296043395996
    6. 'def' → logprob: -12.501296043395996
    7. '    
' → logprob: -13.876296043395996
    8. 'g' → logprob: -14.251296043395996
    9. 'inf' → logprob: -15.376296043395996
    10. 'flow' → logprob: -15.376296043395996

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06999212503433228
    2. '=' → logprob: -2.6949920654296875
    3. '[' → logprob: -10.444992065429688
    4. '   ' → logprob: -11.569992065429688
    5. ' ' → logprob: -12.444992065429688
    6. '.append' → logprob: -12.569992065429688
    7. ' =[' → logprob: -13.319992065429688
    8. '.setdefault' → logprob: -13.444992065429688
    9. ']' → logprob: -13.569992065429688
    10. '=[' → logprob: -13.819992065429688

Token 305: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0027679058257490396
    2. 'collections' → logprob: -6.002768039703369
    3. ' [' → logprob: -8.752767562866211
    4. ' [[]' → logprob: -9.002767562866211
    5. ' collections' → logprob: -11.752767562866211
    6. '[{' → logprob: -13.752767562866211
    7. ' [{}' → logprob: -14.752767562866211
    8. '[[' → logprob: -15.377767562866211
    9. '[n' → logprob: -15.502767562866211
    10. '[col' → logprob: -15.627767562866211

Token 306: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25006765127182007
    2. '(' → logprob: -2.500067710876465
    3. '()]' → logprob: -2.625067710876465
    4. '()' → logprob: -3.375067710876465
    5. '(size' → logprob: -5.250067710876465
    6. ',' → logprob: -5.500067710876465
    7. 'for' → logprob: -5.625067710876465
    8. '[' → logprob: -5.625067710876465
    9. ']()' → logprob: -5.625067710876465
    10. '.append' → logprob: -5.875067710876465

Token 307: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05174752697348595
    2. ' _' → logprob: -3.4267475605010986
    3. ' range' → logprob: -4.0517473220825195
    4. 'range' → logprob: -7.6767473220825195
    5. ' in' → logprob: -9.80174732208252
    6. '_range' → logprob: -11.17674732208252
    7. 'in' → logprob: -12.05174732208252
    8. '_i' → logprob: -13.05174732208252
    9. '_=' → logprob: -13.30174732208252
    10. '(range' → logprob: -13.42674732208252

Token 308: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015802091220393777
    2. 'in' → logprob: -6.501580238342285
    3. ' range' → logprob: -9.501580238342285
    4. ' in' → logprob: -12.876580238342285
    5. '(range' → logprob: -14.751580238342285
    6. 'size' → logprob: -16.50157928466797
    7. ' ' → logprob: -17.00157928466797
    8. '_' → logprob: -17.37657928466797
    9. '	range' → logprob: -18.50157928466797
    10. '  ' → logprob: -18.87657928466797

Token 309: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -18.750335693359375
    4. 'size' → logprob: -19.625335693359375
    5. '   ' → logprob: -19.875335693359375
    6. ' ' → logprob: -20.750335693359375
    7. '	range' → logprob: -21.875335693359375
    8. '  ' → logprob: -22.125335693359375
    9. '
' → logprob: -24.125335693359375
    10. '    ' → logprob: -24.125335693359375

Token 310: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. ' (' → logprob: -15.625000953674316
    4. 'size' → logprob: -16.625001907348633
    5. '=size' → logprob: -18.875001907348633
    6. ',size' → logprob: -19.750001907348633
    7. ' size' → logprob: -20.125001907348633
    8. '<size' → logprob: -20.125001907348633
    9. '[size' → logprob: -21.000001907348633
    10. '(
' → logprob: -22.000001907348633

Token 311: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.054500666621607e-06
    2. ')' → logprob: -13.62500286102295
    3. ']' → logprob: -13.62500286102295
    4. ' )' → logprob: -15.00000286102295
    5. ')]
' → logprob: -16.500003814697266
    6. '   ' → logprob: -17.000003814697266
    7. '])' → logprob: -17.250003814697266
    8. ')]

' → logprob: -17.250003814697266
    9. ')],' → logprob: -17.750003814697266
    10. '')]' → logprob: -17.875003814697266

Token 312: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6163308620452881
    2. 'class' → logprob: -0.9913308620452881
    3. '   ' → logprob: -2.741330862045288
    4. ' class' → logprob: -3.866330862045288
    5. ' def' → logprob: -6.116331100463867
    6. '
' → logprob: -7.116331100463867
    7. '    
' → logprob: -8.491331100463867
    8. ' 
' → logprob: -9.616331100463867
    9. 'import' → logprob: -9.616331100463867
    10. ')' → logprob: -10.241331100463867

Token 313: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1312582641839981
    2. 'class' → logprob: -2.131258249282837
    3. '   ' → logprob: -5.756258487701416
    4. ' class' → logprob: -7.256258487701416
    5. ' def' → logprob: -8.131258010864258
    6. 'for' → logprob: -9.631258010864258
    7. '
' → logprob: -9.881258010864258
    8. 'import' → logprob: -11.131258010864258
    9. '```' → logprob: -11.631258010864258
    10. 'de' → logprob: -12.256258010864258

Token 314: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.007670864462852478
    2. 'add' → logprob: -4.882670879364014
    3. ' addedge' → logprob: -10.257670402526855
    4. '_add' → logprob: -11.382670402526855
    5. ' bfs' → logprob: -11.757670402526855
    6. 'Add' → logprob: -12.382670402526855
    7. ' ' → logprob: -13.632670402526855
    8. '	add' → logprob: -13.632670402526855
    9. 'b' → logprob: -14.132670402526855
    10. 'adde' → logprob: -14.132670402526855

Token 315: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0007292322698049247
    2. '_' → logprob: -7.250729084014893
    3. '_flow' → logprob: -12.37572956085205
    4. 'Edge' → logprob: -12.50072956085205
    5. ' _' → logprob: -12.62572956085205
    6. '(_' → logprob: -13.00072956085205
    7. '_node' → logprob: -13.25072956085205
    8. '_vertex' → logprob: -14.50072956085205
    9. '_line' → logprob: -14.62572956085205
    10. '```' → logprob: -15.12572956085205

Token 316: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0004900033236481249
    2. '(' → logprob: -8.125490188598633
    3. ' (' → logprob: -9.250490188598633
    4. '(s' → logprob: -9.875490188598633
    5. '(a' → logprob: -10.375490188598633
    6. '(from' → logprob: -11.750490188598633
    7. '(S' → logprob: -13.125490188598633
    8. '(node' → logprob: -13.625490188598633
    9. '(frm' → logprob: -13.625490188598633
    10. '(
' → logprob: -14.125490188598633

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022824073676019907
    2. ' ,' → logprob: -6.127282619476318
    3. ',u' → logprob: -9.25228214263916
    4. '‌,' → logprob: -14.37728214263916
    5. ',v' → logprob: -15.00228214263916
    6. ',int' → logprob: -15.87728214263916
    7. ',user' → logprob: -16.502283096313477
    8. ',
' → logprob: -16.627283096313477
    9. '_,' → logprob: -16.752283096313477
    10. ',a' → logprob: -17.252283096313477

Token 318: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005239564459770918
    2. ' v' → logprob: -5.255239486694336
    3. 'u' → logprob: -12.880239486694336
    4. '   ' → logprob: -13.630239486694336
    5. '	v' → logprob: -14.255239486694336
    6. ',v' → logprob: -14.880239486694336
    7. ' ' → logprob: -15.005239486694336
    8. '  ' → logprob: -15.630239486694336
    9. ',' → logprob: -15.755239486694336
    10. ' u' → logprob: -16.005239486694336

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012368128227535635
    2. ' ,' → logprob: -9.000123977661133
    3. '‌,' → logprob: -16.750123977661133
    4. ',
' → logprob: -17.000123977661133
    5. ',int' → logprob: -17.000123977661133
    6. ',u' → logprob: -17.500123977661133
    7. '_,' → logprob: -17.875123977661133
    8. ',size' → logprob: -18.500123977661133
    9. ',value' → logprob: -18.875123977661133
    10. ',b' → logprob: -19.125123977661133

Token 320: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.34724265336990356
    2. 'capacity' → logprob: -1.3472425937652588
    3. ' capacity' → logprob: -4.222242832183838
    4. '1' → logprob: -4.847242832183838
    5. 'c' → logprob: -4.972242832183838
    6. ' cap' → logprob: -5.722242832183838
    7. ' c' → logprob: -7.972242832183838
    8. ' ' → logprob: -8.09724235534668
    9. '   ' → logprob: -11.22224235534668
    10. '-cap' → logprob: -12.09724235534668

Token 321: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0701657235622406
    2. '):
' → logprob: -2.6951656341552734
    3. '):
' → logprob: -9.070165634155273
    4. ',' → logprob: -9.320165634155273
    5. 'acity' → logprob: -11.195165634155273
    6. '):

' → logprob: -12.445165634155273
    7. ')' → logprob: -13.070165634155273
    8. '=' → logprob: -13.570165634155273
    9. ' ):' → logprob: -13.570165634155273
    10. '   ' → logprob: -14.320165634155273

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02032732591032982
    2. '   ' → logprob: -4.395327091217041
    3. '<|end|>' → logprob: -6.145327091217041
    4. ',' → logprob: -6.770327091217041
    5. '    ' → logprob: -6.895327091217041
    6. ':' → logprob: -7.020327091217041
    7. '):
' → logprob: -7.145327091217041
    8. ')' → logprob: -7.895327091217041
    9. '):' → logprob: -7.895327091217041
    10. ':
' → logprob: -9.1453275680542

Token 323: ' graph' (ID: 7465)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9080417156219482
    2. ' graph' → logprob: -0.9080417156219482
    3. 'graph' (adapté à ' graph') → logprob: -1.6580417156219482
    4. '	graph' → logprob: -6.158041954040527
    5. '       ' → logprob: -7.283041954040527
    6. '    ' → logprob: -9.908041954040527
    7. '(graph' → logprob: -13.033041954040527
    8. '_graph' → logprob: -13.783041954040527
    9. '    
' → logprob: -13.908041954040527
    10. '   ' → logprob: -13.908041954040527

Token 324: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. '[' → logprob: -18.25
    3. 'u' → logprob: -19.25
    4. '[v' → logprob: -19.75
    5. '[user' → logprob: -20.875
    6. '	u' → logprob: -22.125
    7. '   ' → logprob: -22.875
    8. '[int' → logprob: -22.875
    9. ' [' → logprob: -22.875
    10. '(u' → logprob: -23.125

Token 325: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.04934006929397583
    2. '.append' → logprob: -3.049340009689331
    3. ').' → logprob: -7.54934024810791
    4. '   ' → logprob: -9.42434024810791
    5. '.' → logprob: -9.54934024810791
    6. '[u' → logprob: -9.92434024810791
    7. ' ].' → logprob: -12.17434024810791
    8. ']' → logprob: -12.42434024810791
    9. 'append' → logprob: -12.79934024810791
    10. '[].' → logprob: -12.92434024810791

Token 326: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.5
    3. '.append' → logprob: -17.0
    4. '_append' → logprob: -19.0
    5. 'app' → logprob: -19.125
    6. ' ' → logprob: -21.5
    7. '	append' → logprob: -22.875
    8. '  ' → logprob: -22.875
    9. 'add' → logprob: -23.0
    10. 'appen' → logprob: -23.125

Token 327: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0008977661491371691
    2. '((' → logprob: -7.5008978843688965
    3. '({'' → logprob: -8.000897407531738
    4. '[' → logprob: -12.250897407531738
    5. '({"' → logprob: -13.125897407531738
    6. '(' → logprob: -13.250897407531738
    7. '({' → logprob: -14.375897407531738
    8. '[v' → logprob: -15.750897407531738
    9. '(([' → logprob: -16.250898361206055
    10. ' ([' → logprob: -17.375898361206055

Token 328: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. ' v' → logprob: -16.0
    3. '	v' → logprob: -18.375
    4. '[v' → logprob: -19.125
    5. '   ' → logprob: -20.5
    6. '
' → logprob: -20.5
    7. 'len' → logprob: -21.375
    8. ',v' → logprob: -21.375
    9. ')v' → logprob: -21.625
    10. 'int' → logprob: -21.75

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',
' → logprob: -16.3750057220459
    4. ',len' → logprob: -17.1250057220459
    5. '‌,' → logprob: -17.6250057220459
    6. ',int' → logprob: -17.7500057220459
    7. ',c' → logprob: -18.1250057220459
    8. ',size' → logprob: -19.0000057220459
    9. '<|end|>' → logprob: -19.5000057220459
    10. ',v' → logprob: -20.0000057220459

Token 330: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.0019287518225610256
    2. ' cap' → logprob: -6.251928806304932
    3. 'len' → logprob: -17.501928329467773
    4. 'caps' → logprob: -17.501928329467773
    5. '(cap' → logprob: -17.626928329467773
    6. ' ' → logprob: -18.001928329467773
    7. '   ' → logprob: -18.376928329467773
    8. '-cap' → logprob: -18.501928329467773
    9. 'capacity' → logprob: -18.626928329467773
    10. 'capac' → logprob: -18.751928329467773

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.337155355140567e-05
    2. ' ,' → logprob: -9.750062942504883
    3. ',len' → logprob: -13.125062942504883
    4. '])' → logprob: -13.375062942504883
    5. ',
' → logprob: -13.750062942504883
    6. ',None' → logprob: -16.500062942504883
    7. ',int' → logprob: -16.625062942504883
    8. ',n' → logprob: -17.125062942504883
    9. ',user' → logprob: -17.625062942504883
    10. ',index' → logprob: -17.750062942504883

Token 332: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.941850526549388e-06
    2. ' len' → logprob: -11.875007629394531
    3. '[len' → logprob: -15.125007629394531
    4. 'None' → logprob: -15.750007629394531
    5. '(len' → logprob: -15.750007629394531
    6. ',len' → logprob: -15.875007629394531
    7. '0' → logprob: -16.62500762939453
    8. '
' → logprob: -17.37500762939453
    9. ' ' → logprob: -17.75000762939453
    10. '   ' → logprob: -17.87500762939453

Token 333: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -1.9504606825648807e-05
    2. 'graph' → logprob: -10.875019073486328
    3. '(' → logprob: -14.500019073486328
    4. '	graph' → logprob: -16.875019073486328
    5. '(game' → logprob: -18.000019073486328
    6. ' (' → logprob: -19.250019073486328
    7. '(
' → logprob: -19.625019073486328
    8. ' graph' → logprob: -19.750019073486328
    9. '(g' → logprob: -20.625019073486328
    10. '((' → logprob: -20.750019073486328

Token 334: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.249780638725497e-05
    2. '[' → logprob: -10.375032424926758
    3. 'graph' → logprob: -13.750032424926758
    4. 'v' → logprob: -16.125032424926758
    5. '[u' → logprob: -18.500032424926758
    6. ' [' → logprob: -18.625032424926758
    7. '   ' → logprob: -19.250032424926758
    8. '[V' → logprob: -19.375032424926758
    9. '(graph' → logprob: -19.625032424926758
    10. '(v' → logprob: -20.125032424926758

Token 335: '])' (ID: 4636)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0011813003802672029
    2. ')' → logprob: -7.001181125640869
    3. '])' → logprob: -8.751181602478027
    4. '[u' → logprob: -10.126181602478027
    5. '])]' → logprob: -10.876181602478027
    6. '[' → logprob: -11.376181602478027
    7. ')]' → logprob: -11.501181602478027
    8. ')])
' → logprob: -11.626181602478027
    9. '),' → logprob: -12.001181602478027
    10. ' )' → logprob: -12.126181602478027

Token 336: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.09014897793531418
    2. ',' → logprob: -3.09014892578125
    3. '])' → logprob: -3.21514892578125
    4. ' ])
' → logprob: -7.96514892578125
    5. '   ' → logprob: -9.09014892578125
    6. ')
' → logprob: -10.71514892578125
    7. ' ,' → logprob: -10.84014892578125
    8. ',
' → logprob: -10.96514892578125
    9. '       ' → logprob: -11.21514892578125
    10. ' ' → logprob: -11.84014892578125

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024881156161427498
    2. '   ' → logprob: -4.274881362915039
    3. ')' → logprob: -4.649881362915039
    4. ')
' → logprob: -7.024881362915039
    5. '
' → logprob: -9.024881362915039
    6. ',' → logprob: -10.399881362915039
    7. ' ' → logprob: -11.274881362915039
    8. '<|end|>' → logprob: -11.649881362915039
    9. '    
' → logprob: -12.024881362915039
    10. '  
' → logprob: -12.774881362915039

Token 338: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.010683455504477024
    2. ' graph' → logprob: -4.635683536529541
    3. '       ' → logprob: -7.260683536529541
    4. '	graph' → logprob: -8.635683059692383
    5. '   ' → logprob: -10.010683059692383
    6. ' ' → logprob: -13.885683059692383
    7. '_graph' → logprob: -15.635683059692383
    8. '    ' → logprob: -16.010683059692383
    9. '(graph' → logprob: -16.385683059692383
    10. '           ' → logprob: -16.385683059692383

Token 339: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00016396844875998795
    2. '[u' → logprob: -9.000164031982422
    3. 'v' → logprob: -10.125164031982422
    4. '[' → logprob: -14.875164031982422
    5. '[user' → logprob: -16.750164031982422
    6. '```' → logprob: -16.875164031982422
    7. ' [' → logprob: -17.625164031982422
    8. '][' → logprob: -18.500164031982422
    9. '	v' → logprob: -18.625164031982422
    10. '<v' → logprob: -18.750164031982422

Token 340: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0015220028581097722
    2. '.append' → logprob: -7.251522064208984
    3. '   ' → logprob: -8.001522064208984
    4. '.' → logprob: -8.501522064208984
    5. '[u' → logprob: -9.126522064208984
    6. '       ' → logprob: -10.251522064208984
    7. ').' → logprob: -10.251522064208984
    8. '[].' → logprob: -10.501522064208984
    9. ' ].' → logprob: -10.626522064208984
    10. '[' → logprob: -10.876522064208984

Token 341: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.465036105713807e-06
    2. '.append' → logprob: -12.250007629394531
    3. ' append' → logprob: -12.875007629394531
    4. 'appen' → logprob: -17.00000762939453
    5. '_append' → logprob: -17.37500762939453
    6. '   ' → logprob: -17.62500762939453
    7. 'push' → logprob: -18.25000762939453
    8. 'app' → logprob: -18.37500762939453
    9. '	append' → logprob: -18.37500762939453
    10. '0' → logprob: -19.25000762939453

Token 342: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.576621949672699
    2. '(u' → logprob: -0.826621949672699
    3. '[u' → logprob: -7.326622009277344
    4. '(' → logprob: -10.701622009277344
    5. '(
' → logprob: -14.201622009277344
    6. ' (' → logprob: -14.326622009277344
    7. '[' → logprob: -15.576622009277344
    8. '((' → logprob: -15.951622009277344
    9. ' ([' → logprob: -16.326622009277344
    10. '   ' → logprob: -16.701622009277344

Token 343: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00012451570364646614
    2. ' u' → logprob: -9.00012493133545
    3. '[u' → logprob: -15.00012493133545
    4. '   ' → logprob: -15.12512493133545
    5. ',' → logprob: -15.50012493133545
    6. '	u' → logprob: -16.000123977661133
    7. '(u' → logprob: -16.500123977661133
    8. ',u' → logprob: -16.750123977661133
    9. '
' → logprob: -17.250123977661133
    10. '       ' → logprob: -18.375123977661133

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040517066372558475
    2. ' ,' → logprob: -7.875405311584473
    3. ',u' → logprob: -10.625405311584473
    4. 'u' → logprob: -15.375405311584473
    5. '0' → logprob: -15.375405311584473
    6. '   ' → logprob: -16.125404357910156
    7. ',
' → logprob: -16.375404357910156
    8. '  ' → logprob: -17.125404357910156
    9. ' ' → logprob: -17.500404357910156
    10. ' u' → logprob: -17.875404357910156

Token 345: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8789383830153383e-05
    2. ' ' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.750019073486328
    4. ',' → logprob: -15.000019073486328
    5. '
' → logprob: -15.125019073486328
    6. 'u' → logprob: -16.125019073486328
    7. '  ' → logprob: -17.437519073486328
    8. '```' → logprob: -17.500019073486328
    9. '00' → logprob: -17.687519073486328
    10. '    ' → logprob: -17.750019073486328

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. '
' → logprob: -14.750001907348633
    4. 'u' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.625001907348633
    6. 'cap' → logprob: -17.125001907348633
    7. ',' → logprob: -17.375001907348633
    8. '

' → logprob: -17.750001907348633
    9. '```' → logprob: -18.687501907348633
    10. '1' → logprob: -18.687501907348633

Token 347: ',' (ID: 11)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00837131217122078
    2. ',' → logprob: -5.008371353149414
    3. ' ])' → logprob: -6.508371353149414
    4. ')])' → logprob: -9.883371353149414
    5. ')' → logprob: -10.133371353149414
    6. '])]' → logprob: -10.633371353149414
    7. ' ,' → logprob: -10.883371353149414
    8. ']);' → logprob: -11.758371353149414
    9. ']])' → logprob: -12.508371353149414
    10. ']' → logprob: -12.633371353149414

Token 348: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011740362970158458
    2. ' len' → logprob: -6.751173973083496
    3. 'u' → logprob: -12.876173973083496
    4. '   ' → logprob: -14.251173973083496
    5. '  ' → logprob: -15.876173973083496
    6. ' ' → logprob: -15.876173973083496
    7. '     ' → logprob: -16.126174926757812
    8. '	len' → logprob: -16.126174926757812
    9. '(len' → logprob: -16.251174926757812
    10. '       ' → logprob: -16.626174926757812

Token 349: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -5.512236498361744e-07
    2. 'graph' → logprob: -15.125000953674316
    3. '(' → logprob: -16.125
    4. ' (' → logprob: -18.125
    5. '(game' → logprob: -18.5
    6. '	graph' → logprob: -18.875
    7. '(grammar' → logprob: -19.125
    8. '(
' → logprob: -19.5
    9. '(Graph' → logprob: -19.75
    10. '(gr' → logprob: -21.25

Token 350: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0002558561391197145
    2. '(u' → logprob: -8.500255584716797
    3. '(graph' → logprob: -9.875255584716797
    4. 'graph' → logprob: -14.625255584716797
    5. 'u' → logprob: -15.250255584716797
    6. '[' → logprob: -15.625255584716797
    7. '[user' → logprob: -16.625255584716797
    8. '[node' → logprob: -19.125255584716797
    9. '	graph' → logprob: -20.000255584716797
    10. '[v' → logprob: -20.125255584716797

Token 351: '])' (ID: 4636)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0003704933915287256
    2. ')' → logprob: -8.250370025634766
    3. ')-' → logprob: -9.500370025634766
    4. '[v' → logprob: -10.750370025634766
    5. '[-' → logprob: -12.250370025634766
    6. '])-' → logprob: -12.625370025634766
    7. '])' → logprob: -13.125370025634766
    8. '[' → logprob: -13.625370025634766
    9. '(u' → logprob: -14.125370025634766
    10. 'u' → logprob: -14.375370025634766

Token 352: ' -' (ID: 533)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0006360700353980064
    2. ')-' → logprob: -7.875636100769043
    3. ')' → logprob: -8.625636100769043
    4. '[-' → logprob: -9.875636100769043
    5. '[v' → logprob: -11.375636100769043
    6. 'u' → logprob: -12.750636100769043
    7. '[' → logprob: -12.875636100769043
    8. ']-' → logprob: -13.000636100769043
    9. '(u' → logprob: -13.125636100769043
    10. ']' → logprob: -13.625636100769043

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '2' → logprob: -15.000005722045898
    4. '   ' → logprob: -16.7500057220459
    5. '  ' → logprob: -19.0000057220459
    6. '```' → logprob: -19.3750057220459
    7. '3' → logprob: -19.8125057220459
    8. '0' → logprob: -20.0000057220459
    9. '１' → logprob: -20.0625057220459
    10. '۱' → logprob: -20.9375057220459

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.000000953674316
    3. '2' → logprob: -15.250000953674316
    4. '   ' → logprob: -17.062501907348633
    5. '11' → logprob: -17.437501907348633
    6. '0' → logprob: -17.500001907348633
    7. '```' → logprob: -17.562501907348633
    8. '3' → logprob: -18.500001907348633
    9. '  ' → logprob: -18.625001907348633
    10. '１' → logprob: -18.687501907348633

Token 355: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0001446611131541431
    2. ' ])' → logprob: -9.375144958496094
    3. ')])' → logprob: -10.250144958496094
    4. '])
' → logprob: -11.125144958496094
    5. '   ' → logprob: -12.125144958496094
    6. ')' → logprob: -13.500144958496094
    7. '       ' → logprob: -13.500144958496094
    8. '])]' → logprob: -14.500144958496094
    9. ']])' → logprob: -15.375144958496094
    10. ']))' → logprob: -15.750144958496094

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2891359031200409
    2. '
' → logprob: -1.9141359329223633
    3. '<|end|>' → logprob: -3.0391359329223633
    4. '    
' → logprob: -3.6641359329223633
    5. 'def' → logprob: -4.039135932922363
    6. ' 
' → logprob: -5.414135932922363
    7. '  
' → logprob: -5.539135932922363
    8. '<|end|>' → logprob: -6.789135932922363
    9. ')' → logprob: -7.414135932922363
    10. '```' → logprob: -7.789135932922363

Token 357: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08703146874904633
    2. 'for' → logprob: -2.587031364440918
    3. '   ' → logprob: -4.837031364440918
    4. '    
' → logprob: -9.587031364440918
    5. '
' → logprob: -10.837031364440918
    6. '#' (adapté à ' #') → logprob: -10.962031364440918
    7. ' 
' → logprob: -11.087031364440918
    8. 'm' → logprob: -11.212031364440918
    9. '  
' → logprob: -11.962031364440918
    10. 'def' → logprob: -12.462031364440918

Token 358: ' Add' (ID: 4063)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03855697065591812
    2. ' for' → logprob: -3.4135570526123047
    3. 'offset' → logprob: -5.413557052612305
    4. 'edge' → logprob: -8.538557052612305
    5. ' offset' → logprob: -9.163557052612305
    6. '   ' → logprob: -9.288557052612305
    7. 'idx' → logprob: -11.038557052612305
    8. '#' → logprob: -11.663557052612305
    9. ' edge' → logprob: -11.913557052612305
    10. 'edges' → logprob: -12.663557052612305

Token 359: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.3509446680545807
    2. '_edge' → logprob: -1.3509446382522583
    3. ' edge' → logprob: -3.350944757461548
    4. 'edge' → logprob: -7.350944519042969
    5. 'edges' → logprob: -7.475944519042969
    6. '_edges' → logprob: -8.100944519042969
    7. ' ' → logprob: -8.725944519042969
    8. '   ' → logprob: -9.850944519042969
    9. ' for' → logprob: -10.225944519042969
    10. 's' → logprob: -10.350944519042969

Token 360: ' from' (ID: 591)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2522566616535187
    2. ' for' → logprob: -2.1272566318511963
    3. '(S' → logprob: -3.1272566318511963
    4. ' (' → logprob: -3.6272566318511963
    5. '   ' → logprob: -4.252256870269775
    6. 'for' → logprob: -4.377256870269775
    7. ' from' → logprob: -5.752256870269775
    8. 'from' → logprob: -5.877256870269775
    9. '(s' → logprob: -8.877256393432617
    10. '(
' → logprob: -9.627256393432617

Token 361: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5759792327880859
    2. ' S' → logprob: -0.8259792327880859
    3. ' ' → logprob: -10.200979232788086
    4. '   ' → logprob: -13.450979232788086
    5. '  ' → logprob: -14.575979232788086
    6. '(S' → logprob: -15.450979232788086
    7. ' source' → logprob: -16.200979232788086
    8. '    ' → logprob: -16.200979232788086
    9. 's' → logprob: -16.325979232788086
    10. 'source' → logprob: -16.700979232788086

Token 362: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5662268400192261
    2. ',' → logprob: -0.9412268400192261
    3. 'to' → logprob: -3.1912269592285156
    4. '   ' → logprob: -7.691226959228516
    5. ' ,' → logprob: -7.816226959228516
    6. '->' → logprob: -9.566226959228516
    7. ',to' → logprob: -10.191226959228516
    8. ' ' → logprob: -10.441226959228516
    9. ' ->' → logprob: -11.691226959228516
    10. '_to' → logprob: -11.816226959228516

Token 363: ' edge' (ID: 11165)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8919793367385864
    2. 'range' → logprob: -1.2669793367385864
    3. 'edge' → logprob: -2.141979217529297
    4. ' range' → logprob: -2.891979217529297
    5. 'i' → logprob: -3.141979217529297
    6. 'for' → logprob: -3.516979217529297
    7. ' ' → logprob: -3.766979217529297
    8. '   ' → logprob: -4.266979217529297
    9. ' i' → logprob: -4.766979217529297
    10. ' for' → logprob: -4.891979217529297

Token 364: ' nodes' (ID: 15749)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.053616613149642944
    2. ' nodes' → logprob: -3.678616523742676
    3. 'nodes' → logprob: -3.928616523742676
    4. '_node' → logprob: -5.803616523742676
    5. 's' → logprob: -6.053616523742676
    6. 'node' → logprob: -7.053616523742676
    7. ' node' → logprob: -7.678616523742676
    8. '_' → logprob: -7.928616523742676
    9. 'Nodes' → logprob: -9.928616523742676
    10. ' ' → logprob: -10.303616523742676

Token 365: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17518089711666107
    2. ' for' → logprob: -2.4251809120178223
    3. '   ' → logprob: -2.6751809120178223
    4. '
' → logprob: -5.925180912017822
    5. '	for' → logprob: -7.675180912017822
    6. '    
' → logprob: -8.800180435180664
    7. ',' → logprob: -11.175180435180664
    8. '```' → logprob: -11.800180435180664
    9. '<|end|>' → logprob: -12.050180435180664
    10. ' ' → logprob: -12.175180435180664

Token 366: ' capacity' (ID: 12241)
  Prédit: ' capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.5057093501091003
    2. 'capacity' → logprob: -1.0057094097137451
    3. 'cap' → logprob: -4.880709171295166
    4. 'm' → logprob: -5.380709171295166
    5. ' capacities' → logprob: -5.380709171295166
    6. ' range' → logprob: -5.630709171295166
    7. 'range' → logprob: -5.755709171295166
    8. ' cap' → logprob: -5.755709171295166
    9. ' m' → logprob: -6.755709171295166
    10. '_capacity' → logprob: -8.005709648132324

Token 367: ' ' (ID: 220)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.14256010949611664
    2. 'm' → logprob: -2.3925600051879883
    3. '1' → logprob: -3.3925600051879883
    4. ' ' → logprob: -5.017560005187988
    5. '(m' → logprob: -8.017560005187988
    6. ' (' → logprob: -8.142560005187988
    7. '   ' → logprob: -8.267560005187988
    8. '(' → logprob: -9.267560005187988
    9. '=' → logprob: -9.517560005187988
    10. ',' → logprob: -9.517560005187988

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.12504005432129
    4. '```' → logprob: -16.12504005432129
    5. '
' → logprob: -17.37504005432129
    6. ',' → logprob: -18.62504005432129
    7. '=' → logprob: -18.75004005432129
    8. '(' → logprob: -19.50004005432129
    9. '[' → logprob: -19.62504005432129
    10. '' → logprob: -19.75004005432129

Token 369: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7945067286491394
    2. '
' → logprob: -1.4195067882537842
    3. '   ' → logprob: -1.5445067882537842
    4. ' for' → logprob: -2.419506788253784
    5. '    
' → logprob: -5.794506549835205
    6. '	for' → logprob: -7.669506549835205
    7. '  
' → logprob: -8.669507026672363
    8. ',' → logprob: -10.169507026672363
    9. ')' → logprob: -10.419507026672363
    10. '```' → logprob: -10.419507026672363

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11884461343288422
    2. '
' → logprob: -2.993844509124756
    3. ' for' → logprob: -3.493844509124756
    4. 'for' → logprob: -3.493844509124756
    5. '    
' → logprob: -6.993844509124756
    6. '  
' → logprob: -9.493844985961914
    7. '	for' → logprob: -9.993844985961914
    8. '<|end|>' → logprob: -10.618844985961914
    9. '  ' → logprob: -10.868844985961914
    10. ',' → logprob: -10.868844985961914

Token 371: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39338627457618713
    2. 'for' (adapté à ' for') → logprob: -1.1433862447738647
    3. '   ' → logprob: -5.518386363983154
    4. '
' → logprob: -6.018386363983154
    5. '    
' → logprob: -10.643385887145996
    6. '```' → logprob: -11.643385887145996
    7. ' 
' → logprob: -11.768385887145996
    8. '	for' → logprob: -12.268385887145996
    9. '  
' → logprob: -13.393385887145996
    10. '   
' → logprob: -14.768385887145996

Token 372: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20632044970989227
    2. ' i' → logprob: -1.7063204050064087
    3. 'edge' → logprob: -6.206320285797119
    4. ' edge' → logprob: -6.581320285797119
    5. 'e' → logprob: -6.706320285797119
    6. ' e' → logprob: -8.706320762634277
    7. '   ' → logprob: -11.206320762634277
    8. '_edge' → logprob: -11.331320762634277
    9. '(i' → logprob: -11.456320762634277
    10. ' eid' → logprob: -11.456320762634277

Token 373: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03367036581039429
    2. 'in' → logprob: -3.408670425415039
    3. ' ' → logprob: -11.158670425415039
    4. ',' → logprob: -12.283670425415039
    5. ')' → logprob: -13.408670425415039
    6. '	in' → logprob: -13.783670425415039
    7. 'n' → logprob: -14.533670425415039
    8. '   ' → logprob: -14.783670425415039
    9. 'range' → logprob: -15.033670425415039
    10. 'import' → logprob: -15.033670425415039

Token 374: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889022678136826
    2. ' range' → logprob: -2.578890323638916
    3. '(range' → logprob: -15.828889846801758
    4. '	range' → logprob: -16.203889846801758
    5. ' ' → logprob: -16.703889846801758
    6. '   ' → logprob: -17.078889846801758
    7. 'in' → logprob: -18.078889846801758
    8. 'm' → logprob: -18.328889846801758
    9. '  ' → logprob: -18.453889846801758
    10. ' xrange' → logprob: -19.078889846801758

Token 375: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0011774895247071981
    2. '(' → logprob: -6.7511773109436035
    3. ' (' → logprob: -11.876177787780762
    4. 'm' → logprob: -15.626177787780762
    5. '(i' → logprob: -17.251176834106445
    6. '(
' → logprob: -17.876176834106445
    7. ' m' → logprob: -17.876176834106445
    8. '(M' → logprob: -18.626176834106445
    9. ' ' → logprob: -18.876176834106445
    10. ')' → logprob: -19.626176834106445

Token 376: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048618365079164505
    2. '):' → logprob: -3.0486183166503906
    3. ' ):
' → logprob: -11.29861831665039
    4. '):
' → logprob: -11.67361831665039
    5. ' ):' → logprob: -12.79861831665039
    6. '   ' → logprob: -12.92361831665039
    7. ':' → logprob: -13.17361831665039
    8. ')' → logprob: -13.42361831665039
    9. ':
' → logprob: -14.42361831665039
    10. '):

' → logprob: -15.04861831665039

Token 377: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.236250638961792
    2. '       ' → logprob: -1.611250638961792
    3. ' add' → logprob: -4.611250877380371
    4. 'add' → logprob: -7.736250877380371
    5. ':
' → logprob: -9.361250877380371
    6. ':' → logprob: -9.736250877380371
    7. '):
' → logprob: -9.861250877380371
    8. '    
' → logprob: -9.986250877380371
    9. ',' → logprob: -10.111250877380371
    10. '(add' → logprob: -10.236250877380371

Token 378: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.5367836356163025
    2. 'add' (adapté à ' add') → logprob: -1.1617836952209473
    3. '   ' → logprob: -2.2867836952209473
    4. ' u' → logprob: -7.536783695220947
    5. 'u' → logprob: -8.536783218383789
    6. '       ' → logprob: -10.286783218383789
    7. '_add' → logprob: -10.661783218383789
    8. '    ' → logprob: -11.661783218383789
    9. '	add' → logprob: -11.661783218383789
    10. '```' → logprob: -11.661783218383789

Token 379: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0001329791557509452
    2. '_' → logprob: -9.00013256072998
    3. ' _' → logprob: -12.50013256072998
    4. '_edges' → logprob: -12.75013256072998
    5. '_line' → logprob: -14.25013256072998
    6. '_e' → logprob: -14.50013256072998
    7. '_node' → logprob: -15.00013256072998
    8. '_ed' → logprob: -15.37513256072998
    9. '_face' → logprob: -15.50013256072998
    10. '_vertex' → logprob: -16.000133514404297

Token 380: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.018177097663283348
    2. '(' → logprob: -4.018177032470703
    3. '(
' → logprob: -10.768177032470703
    4. ' (' → logprob: -12.393177032470703
    5. '(s' → logprob: -13.518177032470703
    6. '((' → logprob: -14.518177032470703
    7. '(

' → logprob: -15.768177032470703
    8. '(T' → logprob: -17.768177032470703
    9. 'S' → logprob: -17.893177032470703
    10. '   ' → logprob: -18.018177032470703

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005381741560995579
    2. ' ,' → logprob: -5.2553815841674805
    3. ',i' → logprob: -9.13038158416748
    4. '2' → logprob: -10.88038158416748
    5. '),' → logprob: -12.38038158416748
    6. ',
' → logprob: -12.50538158416748
    7. ' ' → logprob: -12.75538158416748
    8. ' i' → logprob: -13.00538158416748
    9. '(i' → logprob: -13.25538158416748
    10. ')' → logprob: -13.63038158416748

Token 382: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3688834011554718
    2. 'i' → logprob: -1.2438833713531494
    3. ' ' → logprob: -4.4938836097717285
    4. ' i' → logprob: -4.7438836097717285
    5. '   ' → logprob: -7.9938836097717285
    6. '  ' → logprob: -12.74388313293457
    7. '(i' → logprob: -13.24388313293457
    8. '    ' → logprob: -13.36888313293457
    9. '     ' → logprob: -14.24388313293457
    10. '```' → logprob: -14.30638313293457

Token 383: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5233948826789856
    2. 'i' → logprob: -0.8983948826789856
    3. ' i' → logprob: -8.773394584655762
    4. ' ' → logprob: -9.273394584655762
    5. '   ' → logprob: -11.023394584655762
    6. '(i' → logprob: -13.023394584655762
    7. 'm' → logprob: -13.773394584655762
    8. '[i' → logprob: -14.023394584655762
    9. '```' → logprob: -14.148394584655762
    10. '  ' → logprob: -15.523394584655762

Token 384: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31381216645240784
    2. '+' → logprob: -1.5638121366500854
    3. '+i' → logprob: -2.813812255859375
    4. ' ' → logprob: -11.688812255859375
    5. 'i' → logprob: -12.188812255859375
    6. '[i' → logprob: -12.438812255859375
    7. '   ' → logprob: -13.188812255859375
    8. '```' → logprob: -13.563812255859375
    9. ',' → logprob: -13.688812255859375
    10. '+
' → logprob: -13.688812255859375

Token 385: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.1008713702030946e-06
    2. ' i' → logprob: -13.125001907348633
    3. '	i' → logprob: -20.250001907348633
    4. '[i' → logprob: -21.500001907348633
    5. ')i' → logprob: -22.500001907348633
    6. '(i' → logprob: -23.125001907348633
    7. '   ' → logprob: -23.250001907348633
    8. '
' → logprob: -24.125001907348633
    9. '*i' → logprob: -24.500001907348633
    10. ' ' → logprob: -24.625001907348633

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001933873863890767
    2. ' ,' → logprob: -6.251934051513672
    3. '   ' → logprob: -13.251934051513672
    4. ')' → logprob: -13.751934051513672
    5. ',
' → logprob: -14.126934051513672
    6. '`,' → logprob: -14.751934051513672
    7. '),' → logprob: -14.876934051513672
    8. '```' → logprob: -15.376934051513672
    9. '       ' → logprob: -15.626934051513672
    10. ',i' → logprob: -16.001934051513672

Token 387: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -17.50103187561035
    4. ')' → logprob: -18.62603187561035
    5. '<|end|>' → logprob: -18.62603187561035
    6. '  ' → logprob: -19.25103187561035
    7. '```' → logprob: -19.62603187561035
    8. '۱' → logprob: -19.93853187561035
    9. '    ' → logprob: -20.43853187561035
    10. '[' → logprob: -20.93853187561035

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '
' → logprob: -21.000001907348633
    5. '```' → logprob: -21.125001907348633
    6. ')' → logprob: -22.250001907348633
    7. '  ' → logprob: -22.875001907348633
    8. '۱' → logprob: -23.500001907348633
    9. '' → logprob: -24.000001907348633
    10. '

' → logprob: -24.437501907348633

Token 389: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033796546631492674
    2. ')
' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.750337600708008
    4. ' )' → logprob: -14.000337600708008
    5. '       ' → logprob: -15.000337600708008
    6. ')
' → logprob: -16.250337600708008
    7. ')

' → logprob: -16.875337600708008
    8. '),' → logprob: -17.375337600708008
    9. ');' → logprob: -18.000337600708008
    10. '))' → logprob: -18.250337600708008

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6443542242050171
    2. '       ' → logprob: -0.7693542242050171
    3. ' for' → logprob: -5.019354343414307
    4. 'for' → logprob: -6.019354343414307
    5. '        
' → logprob: -7.394354343414307
    6. '
' → logprob: -7.394354343414307
    7. ',' → logprob: -7.894354343414307
    8. '    
' → logprob: -7.894354343414307
    9. '<|end|>' → logprob: -8.394353866577148
    10. '  
' → logprob: -9.394353866577148

Token 391: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11797500401735306
    2. 'for' → logprob: -2.3679749965667725
    3. ' for' → logprob: -4.242975234985352
    4. '
' → logprob: -5.992975234985352
    5. '    
' → logprob: -7.492975234985352
    6. '<|end|>' → logprob: -9.617975234985352
    7. ',' → logprob: -9.992975234985352
    8. '  
' → logprob: -11.117975234985352
    9. '#' (adapté à ' #') → logprob: -11.242975234985352
    10. '```' → logprob: -11.742975234985352

Token 392: ' Add' (ID: 4063)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03561663627624512
    2. '   ' → logprob: -3.410616636276245
    3. ' for' → logprob: -6.285616874694824
    4. '#' → logprob: -9.535616874694824
    5. '
' → logprob: -10.660616874694824
    6. '    
' → logprob: -12.410616874694824
    7. '```' → logprob: -12.910616874694824
    8. 'For' → logprob: -14.285616874694824
    9. ' ' → logprob: -14.410616874694824
    10. '	for' → logprob: -14.785616874694824

Token 393: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.874370276927948
    2. '_edge' → logprob: -1.1243703365325928
    3. ' for' → logprob: -1.6243703365325928
    4. 'for' → logprob: -3.7493703365325928
    5. '_edges' → logprob: -4.249370098114014
    6. 'edges' → logprob: -4.749370098114014
    7. '   ' → logprob: -4.874370098114014
    8. ' edge' → logprob: -5.624370098114014
    9. 'edge' → logprob: -7.124370098114014
    10. 's' → logprob: -7.749370098114014

Token 394: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11306284368038177
    2. ' from' → logprob: -2.363062858581543
    3. '(' → logprob: -4.988062858581543
    4. '   ' → logprob: -6.113062858581543
    5. 'for' → logprob: -6.238062858581543
    6. ' for' → logprob: -6.863062858581543
    7. '(from' → logprob: -8.238062858581543
    8. ' to' → logprob: -8.988062858581543
    9. 'to' → logprob: -10.113062858581543
    10. ' (' → logprob: -10.238062858581543

Token 395: ' student' (ID: 6760)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.30167290568351746
    2. 'edge' → logprob: -2.05167293548584
    3. ' ' → logprob: -2.42667293548584
    4. ' edge' → logprob: -4.05167293548584
    5. '   ' → logprob: -4.55167293548584
    6. 'for' → logprob: -5.05167293548584
    7. '(' → logprob: -5.80167293548584
    8. 'range' → logprob: -6.42667293548584
    9. ' for' → logprob: -7.17667293548584
    10. 'edges' → logprob: -7.42667293548584

Token 396: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.16859661042690277
    2. 's' → logprob: -2.4185965061187744
    3. '_nodes' → logprob: -3.5435965061187744
    4. 'nodes' → logprob: -4.0435967445373535
    5. '(' → logprob: -4.4185967445373535
    6. ' ' → logprob: -5.9185967445373535
    7. ' (' → logprob: -6.6685967445373535
    8. ' s' → logprob: -6.6685967445373535
    9. ' node' → logprob: -7.6685967445373535
    10. ',' → logprob: -7.9185967445373535

Token 397: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.571755588054657
    2. '(' → logprob: -1.4467556476593018
    3. ' (' → logprob: -2.6967556476593018
    4. ',' → logprob: -3.1967556476593018
    5. '   ' → logprob: -3.3217556476593018
    6. ' for' → logprob: -3.4467556476593018
    7. 'to' → logprob: -4.571755409240723
    8. 'for' → logprob: -4.821755409240723
    9. 'def' → logprob: -6.446755409240723
    10. '
' → logprob: -7.196755409240723

Token 398: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.038076501339673996
    2. ' T' → logprob: -3.288076400756836
    3. '   ' → logprob: -10.913076400756836
    4. ' ' → logprob: -11.913076400756836
    5. '(T' → logprob: -12.163076400756836
    6. '  ' → logprob: -13.413076400756836
    7. '(' → logprob: -13.663076400756836
    8. ' (' → logprob: -14.413076400756836
    9. '    ' → logprob: -14.913076400756836
    10. '
' → logprob: -15.038076400756836

Token 399: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011062316596508026
    2. ' for' → logprob: -5.261062145233154
    3. 'for' → logprob: -5.886062145233154
    4. '
' → logprob: -5.886062145233154
    5. '    
' → logprob: -8.636062622070312
    6. ',' → logprob: -10.136062622070312
    7. '	for' → logprob: -11.886062622070312
    8. ':' → logprob: -12.386062622070312
    9. '  
' → logprob: -12.386062622070312
    10. '```' → logprob: -12.386062622070312

Token 400: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.4610949754714966
    2. ' capacity' → logprob: -1.2110949754714966
    3. ' ' → logprob: -3.586094856262207
    4. 'cap' → logprob: -4.836094856262207
    5. '   ' → logprob: -5.086094856262207
    6. ' capacities' → logprob: -5.711094856262207
    7. 'range' → logprob: -6.086094856262207
    8. '(cap' → logprob: -6.086094856262207
    9. '_capacity' → logprob: -6.336094856262207
    10. 'high' → logprob: -6.336094856262207

Token 401: ' high' (ID: 1932)
  Prédit: '(high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(high' → logprob: -0.2592941224575043
    2. ' (' → logprob: -2.384294033050537
    3. ' high' → logprob: -2.634294033050537
    4. 'high' → logprob: -2.759294033050537
    5. '   ' → logprob: -7.509294033050537
    6. '(' → logprob: -8.384294509887695
    7. ' ' → logprob: -8.884294509887695
    8. '(h' → logprob: -9.134294509887695
    9. '(max' → logprob: -9.884294509887695
    10. '(low' → logprob: -10.509294509887695

Token 402: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012572518549859524
    2. '-' → logprob: -4.387572288513184
    3. '-low' → logprob: -10.012572288513184
    4. '   ' → logprob: -11.887572288513184
    5. ' ' → logprob: -12.137572288513184
    6. ',' → logprob: -13.762572288513184
    7. '  ' → logprob: -13.887572288513184
    8. '[' → logprob: -13.887572288513184
    9. '-high' → logprob: -14.512572288513184
    10. ')' → logprob: -14.512572288513184

Token 403: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0890805795788765
    2. ' low' → logprob: -2.464080572128296
    3. '   ' → logprob: -9.589080810546875
    4. 'high' → logprob: -10.339080810546875
    5. '(low' → logprob: -11.339080810546875
    6. ' ' → logprob: -11.714080810546875
    7. '_low' → logprob: -12.089080810546875
    8. ' high' → logprob: -12.214080810546875
    9. '  ' → logprob: -12.339080810546875
    10. '    ' → logprob: -14.089080810546875

Token 404: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13207313418388367
    2. '
' → logprob: -2.132073163986206
    3. 'for' → logprob: -6.132072925567627
    4. '    
' → logprob: -6.257072925567627
    5. ' for' → logprob: -7.382072925567627
    6. '   
' → logprob: -9.257073402404785
    7. '  
' → logprob: -9.382073402404785
    8. '```' → logprob: -9.632073402404785
    9. '  ' → logprob: -9.882073402404785
    10. ',' → logprob: -10.132073402404785

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01366246584802866
    2. '
' → logprob: -4.388662338256836
    3. 'for' → logprob: -7.638662338256836
    4. ' for' → logprob: -8.013662338256836
    5. '    
' → logprob: -8.138662338256836
    6. '  
' → logprob: -11.138662338256836
    7. '```' → logprob: -11.388662338256836
    8. '<|end|>' → logprob: -12.013662338256836
    9. ',' → logprob: -12.263662338256836
    10. '        
' → logprob: -13.138662338256836

Token 406: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4199395775794983
    2. 'for' (adapté à ' for') → logprob: -1.4199395179748535
    3. ' for' → logprob: -2.2949395179748535
    4. '
' → logprob: -8.044939994812012
    5. '	for' → logprob: -9.669939994812012
    6. '    
' → logprob: -10.669939994812012
    7. '```' → logprob: -11.919939994812012
    8. ' ' → logprob: -14.044939994812012
    9. ',' → logprob: -14.544939994812012
    10. ' 
' → logprob: -14.919939994812012

Token 407: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06223352253437042
    2. ' i' → logprob: -2.8122334480285645
    3. 'j' → logprob: -8.437233924865723
    4. ' j' → logprob: -10.437233924865723
    5. 'u' → logprob: -11.687233924865723
    6. '   ' → logprob: -12.062233924865723
    7. 'student' → logprob: -13.437233924865723
    8. ' u' → logprob: -13.937233924865723
    9. ' ' → logprob: -14.062233924865723
    10. 'v' → logprob: -14.562233924865723

Token 408: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0380852073431015
    2. 'in' → logprob: -3.2880852222442627
    3. '   ' → logprob: -10.913084983825684
    4. ' ' → logprob: -11.788084983825684
    5. ',' → logprob: -12.163084983825684
    6. '  ' → logprob: -12.413084983825684
    7. 'n' → logprob: -13.163084983825684
    8. 'range' → logprob: -13.163084983825684
    9. '	in' → logprob: -14.288084983825684
    10. ')' → logprob: -14.288084983825684

Token 409: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38688376545906067
    2. ' range' → logprob: -1.1368837356567383
    3. '(range' → logprob: -11.386883735656738
    4. ' ' → logprob: -14.011883735656738
    5. '   ' → logprob: -15.511883735656738
    6. '	range' → logprob: -15.511883735656738
    7. '  ' → logprob: -16.386884689331055
    8. '    ' → logprob: -17.011884689331055
    9. '(' → logprob: -17.386884689331055
    10. '.range' → logprob: -18.636884689331055

Token 410: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00733613409101963
    2. '(m' → logprob: -5.132336139678955
    3. 'n' → logprob: -6.632336139678955
    4. 'range' → logprob: -9.757335662841797
    5. '(' → logprob: -10.757335662841797
    6. '(range' → logprob: -12.257335662841797
    7. 'm' → logprob: -12.507335662841797
    8. '   ' → logprob: -14.382335662841797
    9. ' range' → logprob: -14.882335662841797
    10. ' n' → logprob: -15.007335662841797

Token 411: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009961363859474659
    2. '):' → logprob: -4.634961128234863
    3. '   ' → logprob: -8.759961128234863
    4. '       ' → logprob: -11.259961128234863
    5. ':
' → logprob: -11.634961128234863
    6. ')' → logprob: -11.884961128234863
    7. ':' → logprob: -12.009961128234863
    8. ',' → logprob: -12.259961128234863
    9. ' ):
' → logprob: -12.634961128234863
    10. '):
' → logprob: -13.259961128234863

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009672041051089764
    2. '   ' → logprob: -5.134672164916992
    3. ' add' → logprob: -5.759672164916992
    4. 'add' → logprob: -7.884672164916992
    5. ':
' → logprob: -9.634672164916992
    6. '):
' → logprob: -10.134672164916992
    7. ':' → logprob: -10.259672164916992
    8. ',' → logprob: -10.634672164916992
    9. '```' → logprob: -11.759672164916992
    10. '(add' → logprob: -11.884672164916992

Token 413: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.49918824434280396
    2. 'add' (adapté à ' add') → logprob: -0.999188244342804
    3. '   ' → logprob: -3.749188184738159
    4. '       ' → logprob: -6.749188423156738
    5. ' if' → logprob: -10.249188423156738
    6. ' ' → logprob: -10.874188423156738
    7. 'if' → logprob: -11.374188423156738
    8. '  ' → logprob: -11.874188423156738
    9. '    ' → logprob: -12.124188423156738
    10. '	add' → logprob: -12.249188423156738

Token 414: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -6.704273118884885e-07
    2. 'edge' → logprob: -14.500000953674316
    3. 'Edge' → logprob: -16.375
    4. '_EDGE' → logprob: -16.875
    5. '   ' → logprob: -17.75
    6. '_' → logprob: -18.0
    7. '_node' → logprob: -18.5
    8. '```' → logprob: -18.625
    9. 'add' → logprob: -18.75
    10. ' edge' → logprob: -19.125

Token 415: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006823116447776556
    2. '(m' → logprob: -5.0068230628967285
    3. '(
' → logprob: -10.006823539733887
    4. '((' → logprob: -10.006823539733887
    5. ' (' → logprob: -11.381823539733887
    6. '(i' → logprob: -12.381823539733887
    7. '(M' → logprob: -14.381823539733887
    8. '2' → logprob: -15.131823539733887
    9. 'm' → logprob: -15.256823539733887
    10. '(n' → logprob: -15.756823539733887

Token 416: '2' (ID: 17)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11522005498409271
    2. '2' → logprob: -2.240220069885254
    3. '   ' → logprob: -6.990220069885254
    4. ' m' → logprob: -7.490220069885254
    5. '(' → logprob: -7.615220069885254
    6. '(m' → logprob: -8.490220069885254
    7. ' ' → logprob: -8.740220069885254
    8. '1' → logprob: -11.240220069885254
    9. 'i' → logprob: -11.490220069885254
    10. '    ' → logprob: -11.865220069885254

Token 417: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22871793806552887
    2. '+' → logprob: -1.6037179231643677
    3. '+m' → logprob: -5.728717803955078
    4. '+i' → logprob: -10.353717803955078
    5. '   ' → logprob: -11.478717803955078
    6. ' ' → logprob: -12.728717803955078
    7. '+
' → logprob: -14.228717803955078
    8. ' +
' → logprob: -14.853717803955078
    9. ' ' → logprob: -14.853717803955078
    10. 'm' → logprob: -14.853717803955078

Token 418: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.723973582556937e-05
    2. ' m' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.125017166137695
    4. '	m' → logprob: -16.375017166137695
    5. '+m' → logprob: -16.375017166137695
    6. '(m' → logprob: -17.500017166137695
    7. '[m' → logprob: -18.125017166137695
    8. '```' → logprob: -19.125017166137695
    9. '+' → logprob: -19.500017166137695
    10. '
' → logprob: -19.875017166137695

Token 419: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47544094920158386
    2. ' +' → logprob: -0.9754409790039062
    3. '+i' → logprob: -6.600440979003906
    4. '+
' → logprob: -13.975440979003906
    5. '   ' → logprob: -14.475440979003906
    6. ' ' → logprob: -14.600440979003906
    7. ',' → logprob: -14.975440979003906
    8. 'i' → logprob: -14.975440979003906
    9. ' +
' → logprob: -15.725440979003906
    10. ' i' → logprob: -16.225440979003906

Token 420: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00043138445471413434
    2. ' i' → logprob: -7.750431537628174
    3. '   ' → logprob: -15.125431060791016
    4. ' ' → logprob: -15.250431060791016
    5. '[i' → logprob: -16.875431060791016
    6. '	i' → logprob: -17.750431060791016
    7. '
' → logprob: -18.000431060791016
    8. '       ' → logprob: -18.875431060791016
    9. '  ' → logprob: -19.000431060791016
    10. 'n' → logprob: -19.000431060791016

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011081460979767144
    2. ' ,' → logprob: -9.125110626220703
    3. ',
' → logprob: -14.250110626220703
    4. 'T' → logprob: -14.500110626220703
    5. ',T' → logprob: -14.500110626220703
    6. '   ' → logprob: -15.875110626220703
    7. '```' → logprob: -16.875110626220703
    8. '
' → logprob: -17.250110626220703
    9. ' ' → logprob: -17.375110626220703
    10. ')' → logprob: -17.625110626220703

Token 422: ' T' (ID: 353)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.038209136575460434
    2. ' high' → logprob: -3.2882091999053955
    3. '   ' → logprob: -9.413208961486816
    4. '(high' → logprob: -9.538208961486816
    5. 'max' → logprob: -12.163208961486816
    6. ' ' → logprob: -12.288208961486816
    7. '  ' → logprob: -13.788208961486816
    8. ' max' → logprob: -14.038208961486816
    9. ' (' → logprob: -14.038208961486816
    10. '
' → logprob: -15.163208961486816

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011778471525758505
    2. ' ,' → logprob: -6.751177787780762
    3. '   ' → logprob: -12.501177787780762
    4. ',
' → logprob: -13.751177787780762
    5. 'high' → logprob: -14.001177787780762
    6. '),' → logprob: -14.126177787780762
    7. ')' → logprob: -15.001177787780762
    8. ' high' → logprob: -15.001177787780762
    9. '       ' → logprob: -15.626177787780762
    10. '    ' → logprob: -16.001178741455078

Token 424: ' high' (ID: 1932)
  Prédit: ' high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.5762218832969666
    2. 'high' → logprob: -0.8262218832969666
    3. '(high' → logprob: -8.451221466064453
    4. ' max' → logprob: -10.951221466064453
    5. '   ' → logprob: -11.076221466064453
    6. ' (' → logprob: -11.201221466064453
    7. ' ' → logprob: -11.326221466064453
    8. 'max' → logprob: -11.826221466064453
    9. '  ' → logprob: -14.451221466064453
    10. ' ' → logprob: -14.951221466064453

Token 425: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018165627494454384
    2. '-' → logprob: -4.018165588378906
    3. '-low' → logprob: -11.268165588378906
    4. ' ' → logprob: -14.018165588378906
    5. '   ' → logprob: -14.143165588378906
    6. '-l' → logprob: -14.393165588378906
    7. ')' → logprob: -14.893165588378906
    8. ' ' → logprob: -15.393165588378906
    9. '	' → logprob: -16.018165588378906
    10. ' -
' → logprob: -17.143165588378906

Token 426: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.043009236454963684
    2. ' low' → logprob: -3.1680092811584473
    3. '   ' → logprob: -11.918008804321289
    4. '_low' → logprob: -13.918008804321289
    5. ' ' → logprob: -14.418008804321289
    6. '0' → logprob: -14.418008804321289
    7. '  ' → logprob: -15.168008804321289
    8. '1' → logprob: -15.293008804321289
    9. '(low' → logprob: -15.293008804321289
    10. ')' → logprob: -15.668008804321289

Token 427: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.070975071750581e-05
    2. ')
' → logprob: -11.000030517578125
    3. ' )' → logprob: -11.375030517578125
    4. '   ' → logprob: -13.000030517578125
    5. ')

' → logprob: -16.375030517578125
    6. '       ' → logprob: -17.000030517578125
    7. '<|end|>' → logprob: -17.500030517578125
    8. ')
' → logprob: -17.750030517578125
    9. '),' → logprob: -17.875030517578125
    10. '))' → logprob: -17.875030517578125

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018674956634640694
    2. ' for' → logprob: -4.518674850463867
    3. 'for' → logprob: -5.018674850463867
    4. '<|end|>' → logprob: -7.268674850463867
    5. '```' → logprob: -8.643674850463867
    6. ')' → logprob: -9.643674850463867
    7. '<|end|>' → logprob: -11.393674850463867
    8. ',' → logprob: -11.768674850463867
    9. '       ' → logprob: -12.143674850463867
    10. '
' → logprob: -12.393674850463867

Token 429: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.585097074508667
    2. 'for' → logprob: -0.835097074508667
    3. ' for' → logprob: -4.710097312927246
    4. '
' → logprob: -10.585097312927246
    5. '```' → logprob: -10.585097312927246
    6. '    
' → logprob: -10.835097312927246
    7. '<|end|>' → logprob: -11.335097312927246
    8. '#' (adapté à ' #') → logprob: -11.460097312927246
    9. ')' → logprob: -11.585097312927246
    10. '	for' → logprob: -12.460097312927246

Token 430: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16070082783699036
    2. ' for' → logprob: -1.910700798034668
    3. '   ' → logprob: -7.660700798034668
    4. '
' → logprob: -12.910700798034668
    5. '#' → logprob: -13.535700798034668
    6. '    
' → logprob: -14.660700798034668
    7. 'For' → logprob: -15.285700798034668
    8. ' ' → logprob: -15.410700798034668
    9. '	for' → logprob: -15.410700798034668
    10. '```' → logprob: -15.785700798034668

Token 431: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05493859201669693
    2. 'i' → logprob: -2.929938554763794
    3. ' each' → logprob: -10.929938316345215
    4. ' ' → logprob: -11.304938316345215
    5. ' edge' → logprob: -12.554938316345215
    6. '   ' → logprob: -12.679938316345215
    7. '  ' → logprob: -12.679938316345215
    8. ' u' → logprob: -12.679938316345215
    9. 'each' → logprob: -12.804938316345215
    10. '	i' → logprob: -13.304938316345215

Token 432: ' edge' (ID: 11165)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2165846973657608
    2. 'i' → logprob: -1.7165846824645996
    3. ' edge' → logprob: -4.4665846824646
    4. '   ' → logprob: -6.2165846824646
    5. 'edge' → logprob: -7.2165846824646
    6. ' (' → logprob: -8.091585159301758
    7. ',' → logprob: -8.841585159301758
    8. '(i' → logprob: -9.216585159301758
    9. ' ' → logprob: -10.341585159301758
    10. 'friend' → logprob: -10.591585159301758

Token 433: ' node' (ID: 4596)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6991761922836304
    2. ',' → logprob: -1.4491761922836304
    3. ' (' → logprob: -2.19917631149292
    4. '   ' → logprob: -2.69917631149292
    5. ' for' → logprob: -3.19917631149292
    6. ' u' → logprob: -4.07417631149292
    7. '(u' → logprob: -4.07417631149292
    8. ':' → logprob: -5.57417631149292
    9. ' i' → logprob: -6.19917631149292
    10. ' ,' → logprob: -6.32417631149292

Token 434: ' i' (ID: 575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06156883016228676
    2. ' ,' → logprob: -4.186568737030029
    3. ',u' → logprob: -4.436568737030029
    4. ' (' → logprob: -4.936568737030029
    5. ' u' → logprob: -5.061568737030029
    6. '(u' → logprob: -5.186568737030029
    7. '   ' → logprob: -5.686568737030029
    8. 'u' → logprob: -5.936568737030029
    9. ':' → logprob: -5.936568737030029
    10. ':
' → logprob: -6.186568737030029

Token 435: ' corresponds' (ID: 66938)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07849785685539246
    2. ':' → logprob: -3.453497886657715
    3. '   ' → logprob: -3.703497886657715
    4. ':
' → logprob: -4.828497886657715
    5. ' ,' → logprob: -5.453497886657715
    6. '       ' → logprob: -5.703497886657715
    7. '):
' → logprob: -6.203497886657715
    8. ',
' → logprob: -8.078497886657715
    9. '):' → logprob: -8.453497886657715
    10. ',u' → logprob: -8.578497886657715

Token 436: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2016846388578415
    2. 'to' → logprob: -1.701684594154358
    3. '   ' → logprob: -8.576684951782227
    4. ',' → logprob: -10.201684951782227
    5. ' ' → logprob: -11.701684951782227
    6. 'edges' → logprob: -11.826684951782227
    7. ' edges' → logprob: -11.951684951782227
    8. '    ' → logprob: -12.576684951782227
    9. ' in' → logprob: -12.951684951782227
    10. '_to' → logprob: -13.326684951782227

Token 437: ' friendship' (ID: 38020)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.161163330078125
    2. 'edges' → logprob: -2.036163330078125
    3. ' the' → logprob: -2.161163330078125
    4. ' edge' → logprob: -2.411163330078125
    5. ' an' → logprob: -2.536163330078125
    6. ' (' → logprob: -2.661163330078125
    7. 'edge' → logprob: -2.661163330078125
    8. '(u' → logprob: -3.161163330078125
    9. 'u' → logprob: -3.786163330078125
    10. 'the' → logprob: -4.286163330078125

Token 438: ' pair' (ID: 10610)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8445258736610413
    2. '   ' → logprob: -1.8445258140563965
    3. ',' → logprob: -1.9695258140563965
    4. '(u' → logprob: -2.3445258140563965
    5. ' u' → logprob: -2.4695258140563965
    6. 'pair' → logprob: -3.9695258140563965
    7. ' pair' → logprob: -4.2195258140563965
    8. ' (' → logprob: -4.4695258140563965
    9. 'edge' → logprob: -4.7195258140563965
    10. ' =' → logprob: -4.8445258140563965

Token 439: ' edges' (ID: 22569)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.9140451550483704
    2. ',' → logprob: -1.7890450954437256
    3. 'u' → logprob: -2.1640450954437256
    4. '(u' → logprob: -2.1640450954437256
    5. ' (' → logprob: -2.5390450954437256
    6. '   ' → logprob: -2.5390450954437256
    7. ' =' → logprob: -3.9140450954437256
    8. ' ,' → logprob: -4.789045333862305
    9. ',u' → logprob: -5.039045333862305
    10. ':' → logprob: -6.414045333862305

Token 440: '[i' (ID: 1768)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7086266875267029
    2. '(u' → logprob: -1.3336267471313477
    3. ' =' → logprob: -2.8336267471313477
    4. ',' → logprob: -2.9586267471313477
    5. 'u' → logprob: -3.3336267471313477
    6. '[u' → logprob: -3.3336267471313477
    7. ' u' → logprob: -3.7086267471313477
    8. ',u' → logprob: -4.958626747131348
    9. ' (' → logprob: -5.333626747131348
    10. ' in' → logprob: -5.333626747131348

Token 441: ']=(' (ID: 138510)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.358796626329422
    2. '],' → logprob: -1.4837965965270996
    3. ']:
' → logprob: -3.4837965965270996
    4. ']' → logprob: -3.7337965965270996
    5. ']
' → logprob: -4.6087965965271
    6. '],
' → logprob: -5.6087965965271
    7. '[' → logprob: -5.7337965965271
    8. ']:' → logprob: -6.8587965965271
    9. ' ][' → logprob: -8.108797073364258
    10. ']:

' → logprob: -8.108797073364258

Token 442: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.19249922037124634
    2. 'edges' → logprob: -1.8174991607666016
    3. ' edges' → logprob: -4.942499160766602
    4. '(u' → logprob: -6.442499160766602
    5. ' u' → logprob: -6.442499160766602
    6. '(edges' → logprob: -7.442499160766602
    7. ')' → logprob: -7.567499160766602
    8. '   ' → logprob: -7.692499160766602
    9. ',u' → logprob: -8.942499160766602
    10. ',' → logprob: -9.317499160766602

Token 443: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005824160296469927
    2. ',v' → logprob: -5.630824089050293
    3. ' ,' → logprob: -7.005824089050293
    4. '[' → logprob: -7.380824089050293
    5. ',u' → logprob: -7.505824089050293
    6. '   ' → logprob: -10.130824089050293
    7. ' ' → logprob: -10.755824089050293
    8. '[i' → logprob: -11.505824089050293
    9. 'u' → logprob: -11.505824089050293
    10. ',m' → logprob: -11.755824089050293

Token 444: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.44949203729629517
    2. ')' → logprob: -1.0744919776916504
    3. '):
' → logprob: -4.57449197769165
    4. '),' → logprob: -5.44949197769165
    5. '):' → logprob: -6.32449197769165
    6. ',' → logprob: -6.82449197769165
    7. ')

' → logprob: -7.07449197769165
    8. '   ' → logprob: -7.19949197769165
    9. ')
' → logprob: -7.57449197769165
    10. '):

' → logprob: -8.449492454528809

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012607370503246784
    2. ',' → logprob: -5.012607574462891
    3. ' for' → logprob: -5.637607574462891
    4. 'for' → logprob: -6.512607574462891
    5. '       ' → logprob: -7.762607574462891
    6. '
' → logprob: -9.01260757446289
    7. '    
' → logprob: -9.38760757446289
    8. ':' → logprob: -9.88760757446289
    9. '  ' → logprob: -10.38760757446289
    10. ' ,' → logprob: -10.88760757446289

Token 446: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1570805013179779
    2. ' for' → logprob: -2.2820804119110107
    3. 'for' → logprob: -3.1570804119110107
    4. ',' → logprob: -7.53208065032959
    5. '
' → logprob: -9.65708065032959
    6. ' u' → logprob: -10.28208065032959
    7. '    
' → logprob: -10.78208065032959
    8. 'u' → logprob: -10.78208065032959
    9. '  ' → logprob: -11.90708065032959
    10. ':' → logprob: -12.15708065032959

Token 447: ' Add' (ID: 4063)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6134430170059204
    2. 'u' → logprob: -1.1134430170059204
    3. '   ' → logprob: -2.113442897796631
    4. ' for' → logprob: -5.238442897796631
    5. 'for' → logprob: -5.863442897796631
    6. ' edge' → logprob: -8.363443374633789
    7. ',u' → logprob: -8.738443374633789
    8. '(u' → logprob: -8.988443374633789
    9. ',' → logprob: -9.113443374633789
    10. 'edge' → logprob: -9.363443374633789

Token 448: ' edges' (ID: 22569)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.018458008766174316
    2. '   ' → logprob: -4.893457889556885
    3. ' edges' → logprob: -5.143457889556885
    4. ' edge' → logprob: -5.518457889556885
    5. 'edge' → logprob: -7.518457889556885
    6. ' ' → logprob: -9.268458366394043
    7. '_edges' → logprob: -9.393458366394043
    8. ' Edge' → logprob: -9.893458366394043
    9. 'Edge' → logprob: -9.893458366394043
    10. 'edges' → logprob: -10.143458366394043

Token 449: ' from' (ID: 591)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17172299325466156
    2. 'from' → logprob: -2.796722888946533
    3. '   ' → logprob: -2.921722888946533
    4. ' from' → logprob: -3.296722888946533
    5. ' (' → logprob: -6.296722888946533
    6. 'graph' → logprob: -7.296722888946533
    7. ' to' → logprob: -7.421722888946533
    8. 'def' → logprob: -7.546722888946533
    9. '[' → logprob: -7.796722888946533
    10. ' for' → logprob: -8.296723365783691

Token 450: ' edge' (ID: 11165)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0701495036482811
    2. ' ' → logprob: -2.6951494216918945
    3. '   ' → logprob: -8.945149421691895
    4. 'edge' → logprob: -10.320149421691895
    5. '(' → logprob: -10.820149421691895
    6. '  ' → logprob: -11.945149421691895
    7. '    ' → logprob: -12.195149421691895
    8. ' edge' → logprob: -12.570149421691895
    9. '       ' → logprob: -13.257649421691895
    10. 'graph' → logprob: -13.570149421691895

Token 451: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.3581915497779846
    2. ' nodes' → logprob: -1.6081914901733398
    3. '_nodes' → logprob: -2.98319149017334
    4. 'node' → logprob: -3.60819149017334
    5. 'nodes' → logprob: -4.23319149017334
    6. '_node' → logprob: -5.23319149017334
    7. '   ' → logprob: -6.23319149017334
    8. ' ' → logprob: -7.23319149017334
    9. '	nodes' → logprob: -8.85819149017334
    10. '	node' → logprob: -9.35819149017334

Token 452: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.22278432548046112
    2. '[' → logprob: -2.4727842807769775
    3. ',' → logprob: -2.7227842807769775
    4. 'to' → logprob: -3.7227842807769775
    5. '   ' → logprob: -4.972784519195557
    6. '[i' → logprob: -4.972784519195557
    7. '(' → logprob: -5.472784519195557
    8. ' (' → logprob: -5.972784519195557
    9. ' ' → logprob: -6.722784519195557
    10. ' i' → logprob: -6.847784519195557

Token 453: ' u' (ID: 337)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4295652210712433
    2. ' ' → logprob: -1.054565191268921
    3. '   ' → logprob: -7.6795654296875
    4. 'student' → logprob: -9.3045654296875
    5. ' u' → logprob: -9.5545654296875
    6. '(' → logprob: -9.6795654296875
    7. ' student' → logprob: -10.1795654296875
    8. 'u' → logprob: -10.5545654296875
    9. '  ' → logprob: -10.6795654296875
    10. 'graph' → logprob: -11.1795654296875

Token 454: ' node' (ID: 4596)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2692606449127197
    2. '   ' → logprob: -1.2692606449127197
    3. ' and' → logprob: -2.0192606449127197
    4. ' +' → logprob: -2.0192606449127197
    5. ' =' → logprob: -3.0192606449127197
    6. '+' → logprob: -3.3942606449127197
    7. ' ,' → logprob: -3.5192606449127197
    8. ' ' → logprob: -3.8942606449127197
    9. '=' → logprob: -5.019260406494141
    10. 'and' → logprob: -5.269260406494141

Token 455: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3060467541217804
    2. ' and' → logprob: -2.056046724319458
    3. ',' → logprob: -2.431046724319458
    4. ' (' → logprob: -4.056046962738037
    5. '(' → logprob: -4.431046962738037
    6. ' =' → logprob: -4.931046962738037
    7. ' ,' → logprob: -6.306046962738037
    8. '=' → logprob: -6.681046962738037
    9. ' for' → logprob: -6.931046962738037
    10. ')' → logprob: -6.931046962738037

Token 456: ' v' (ID: 323)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5001707673072815
    2. ' v' → logprob: -1.2501707077026367
    3. 'v' → logprob: -3.5001707077026367
    4. '   ' → logprob: -3.7501707077026367
    5. '2' → logprob: -3.7501707077026367
    6. ' to' → logprob: -4.500170707702637
    7. 'to' → logprob: -5.625170707702637
    8. ' edge' → logprob: -5.625170707702637
    9. ' student' → logprob: -6.000170707702637
    10. '(' → logprob: -6.000170707702637

Token 457: ' node' (ID: 4596)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.750188946723938
    2. '+' → logprob: -1.500188946723938
    3. ' node' → logprob: -1.500188946723938
    4. '   ' → logprob: -3.2501888275146484
    5. 'node' → logprob: -3.5001888275146484
    6. ' ' → logprob: -5.125188827514648
    7. ' to' → logprob: -6.625188827514648
    8. ',' → logprob: -6.875188827514648
    9. ' nodes' → logprob: -7.375188827514648
    10. ')' → logprob: -7.500188827514648

Token 458: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03802840784192085
    2. ' for' → logprob: -3.5380284786224365
    3. ',' → logprob: -5.288028240203857
    4. 'for' → logprob: -6.788028240203857
    5. ':' → logprob: -7.413028240203857
    6. ' (' → logprob: -8.163028717041016
    7. '    
' → logprob: -8.538028717041016
    8. '
' → logprob: -8.663028717041016
    9. '(u' → logprob: -9.038028717041016
    10. '(' → logprob: -9.163028717041016

Token 459: ' capacity' (ID: 12241)
  Prédit: ' capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.5244457721710205
    2. 'capacity' → logprob: -1.3994457721710205
    3. '1' → logprob: -2.0244457721710205
    4. ' ' → logprob: -4.274445533752441
    5. 'cap' → logprob: -5.274445533752441
    6. '[' → logprob: -5.524445533752441
    7. ' capacities' → logprob: -6.274445533752441
    8. ' cap' → logprob: -6.774445533752441
    9. '   ' → logprob: -6.899445533752441
    10. ' [' → logprob: -6.899445533752441

Token 460: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5232117772102356
    2. '1' → logprob: -0.8982117772102356
    3. '   ' → logprob: -10.023211479187012
    4. '(' → logprob: -10.773211479187012
    5. ' ' → logprob: -12.148211479187012
    6. '=' → logprob: -12.398211479187012
    7. '```' → logprob: -12.898211479187012
    8. 's' → logprob: -12.898211479187012
    9. '  ' → logprob: -13.148211479187012
    10. '    ' → logprob: -13.648211479187012

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.375035285949707
    3. '   ' → logprob: -12.625035285949707
    4. '```' → logprob: -15.125035285949707
    5. '
' → logprob: -15.375035285949707
    6. '=' → logprob: -15.500035285949707
    7. '[' → logprob: -15.937535285949707
    8. '  ' → logprob: -16.187536239624023
    9. '0' → logprob: -17.250036239624023
    10. '           ' → logprob: -17.312536239624023

Token 462: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007741609122604132
    2. ' for' → logprob: -5.757741451263428
    3. '
' → logprob: -6.132741451263428
    4. 'for' → logprob: -6.632741451263428
    5. '    
' → logprob: -7.757741451263428
    6. ',' → logprob: -7.757741451263428
    7. '       ' → logprob: -9.882741928100586
    8. ')' → logprob: -10.507741928100586
    9. '  
' → logprob: -10.632741928100586
    10. ':' → logprob: -11.257741928100586

Token 463: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06726475059986115
    2. ' for' → logprob: -2.8172647953033447
    3. 'for' → logprob: -5.567264556884766
    4. '<|end|>' → logprob: -7.567264556884766
    5. ',' → logprob: -7.692264556884766
    6. '    
' → logprob: -8.442264556884766
    7. '
' → logprob: -9.067264556884766
    8. ')' → logprob: -10.442264556884766
    9. ':' → logprob: -10.942264556884766
    10. ' ' → logprob: -10.942264556884766

Token 464: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38331809639930725
    2. ' for' → logprob: -1.6333180665969849
    3. 'for' → logprob: -2.1333181858062744
    4. '
' → logprob: -5.508317947387695
    5. '    
' → logprob: -7.633317947387695
    6. ',' → logprob: -10.258317947387695
    7. '  
' → logprob: -10.633317947387695
    8. 'edges' → logprob: -11.133317947387695
    9. '	for' → logprob: -11.258317947387695
    10. ' 
' → logprob: -11.258317947387695

Token 465: ' selecting' (ID: 31615)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4201487600803375
    2. '   ' → logprob: -1.1701487302780151
    3. ' for' → logprob: -3.4201488494873047
    4. '    
' → logprob: -11.420148849487305
    5. '
' → logprob: -11.670148849487305
    6. '```' → logprob: -13.420148849487305
    7. '	for' → logprob: -13.795148849487305
    8. ' 
' → logprob: -16.045148849487305
    9. '  
' → logprob: -16.170148849487305
    10. '       ' → logprob: -16.545148849487305

Token 466: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.8469283580780029
    2. ' direction' → logprob: -1.346928358078003
    3. '   ' → logprob: -2.471928358078003
    4. ' u' → logprob: -2.846928358078003
    5. 'u' → logprob: -2.971928358078003
    6. ' the' → logprob: -3.721928358078003
    7. ' ' → logprob: -3.846928358078003
    8. 'the' → logprob: -4.346928596496582
    9. ' between' → logprob: -4.846928596496582
    10. '(u' → logprob: -5.471928596496582

Token 467: ' means' (ID: 4748)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3265763521194458
    2. 'for' → logprob: -2.0765762329101562
    3. ' for' → logprob: -2.0765762329101562
    4. '       ' → logprob: -4.076576232910156
    5. '(u' → logprob: -4.826576232910156
    6. '
' → logprob: -7.451576232910156
    7. ',' → logprob: -7.826576232910156
    8. '[u' → logprob: -8.201576232910156
    9. ':' → logprob: -8.326576232910156
    10. '(' → logprob: -8.576576232910156

Token 468: ' flow' (ID: 7845)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -1.8196051120758057
    2. ' graph' → logprob: -1.9446051120758057
    3. ' assigning' → logprob: -1.9446051120758057
    4. 'graph' → logprob: -2.3196051120758057
    5. ' pushing' → logprob: -2.8196051120758057
    6. 'flow' → logprob: -2.8196051120758057
    7. ' directing' → logprob: -2.9446051120758057
    8. ' choosing' → logprob: -3.0696051120758057
    9. ' sending' → logprob: -3.1946051120758057
    10. ' flow' → logprob: -3.4446051120758057

Token 469: ' goes' (ID: 8805)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.9708222150802612
    2. '   ' → logprob: -1.2208222150802612
    3. '=' → logprob: -1.9708222150802612
    4. 'from' → logprob: -2.220822334289551
    5. ' =' → logprob: -3.720822334289551
    6. ' to' → logprob: -4.470822334289551
    7. ' ' → logprob: -4.720822334289551
    8. ' goes' → logprob: -5.095822334289551
    9. '[' → logprob: -5.470822334289551
    10. ' through' → logprob: -5.720822334289551

Token 470: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.30688443779945374
    2. 'from' → logprob: -1.5568844079971313
    3. ' either' → logprob: -3.181884527206421
    4. ' through' → logprob: -5.431884288787842
    5. ' ' → logprob: -5.806884288787842
    6. 'either' → logprob: -5.931884288787842
    7. ' along' → logprob: -7.556884288787842
    8. 'through' → logprob: -7.806884288787842
    9. '   ' → logprob: -8.431884765625
    10. ' to' → logprob: -8.556884765625

Token 471: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.2976418733596802
    2. ' edge' → logprob: -2.0476417541503906
    3. '2' → logprob: -2.1726417541503906
    4. ' ' → logprob: -4.422641754150391
    5. 'graph' → logprob: -6.297641754150391
    6. '   ' → logprob: -7.797641754150391
    7. ' graph' → logprob: -9.42264175415039
    8. 'the' → logprob: -10.42264175415039
    9. 'node' → logprob: -11.17264175415039
    10. '[' → logprob: -11.17264175415039

Token 472: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.031172897666692734
    2. 'node' → logprob: -3.53117299079895
    3. '_node' → logprob: -7.531172752380371
    4. '   ' → logprob: -7.906172752380371
    5. ' nodes' → logprob: -8.281172752380371
    6. '_nodes' → logprob: -9.031172752380371
    7. '[node' → logprob: -9.906172752380371
    8. 'nodes' → logprob: -10.781172752380371
    9. ' ' → logprob: -11.031172752380371
    10. '	node' → logprob: -11.156172752380371

Token 473: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.02955665811896324
    2. 'to' → logprob: -3.7795567512512207
    3. ',' → logprob: -5.279556751251221
    4. '   ' → logprob: -6.904556751251221
    5. ')' → logprob: -10.404556274414062
    6. ' ->' → logprob: -10.654556274414062
    7. ' ' → logprob: -10.904556274414062
    8. '->' → logprob: -10.904556274414062
    9. ' ,' → logprob: -11.279556274414062
    10. '[' → logprob: -11.404556274414062

Token 474: ' student' (ID: 6760)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.008203148841858
    2. 'student' → logprob: -1.383203148841858
    3. ' ' → logprob: -1.508203148841858
    4. ' student' → logprob: -2.0082030296325684
    5. 'u' → logprob: -4.508203029632568
    6. ' u' → logprob: -5.258203029632568
    7. ' either' → logprob: -5.508203029632568
    8. '   ' → logprob: -6.133203029632568
    9. 'either' → logprob: -6.383203029632568
    10. ' the' → logprob: -6.508203029632568

Token 475: ' node' (ID: 4596)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7421863675117493
    2. ' node' → logprob: -1.2421863079071045
    3. 'node' → logprob: -2.3671863079071045
    4. ' nodes' → logprob: -2.4921863079071045
    5. 'nodes' → logprob: -4.242186546325684
    6. '
' → logprob: -4.367186546325684
    7. '_node' → logprob: -4.617186546325684
    8. ' for' → logprob: -4.992186546325684
    9. '_nodes' → logprob: -5.617186546325684
    10. 'u' → logprob: -5.742186546325684

Token 476: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019926123321056366
    2. ' for' → logprob: -4.144926071166992
    3. 'for' → logprob: -6.019926071166992
    4. '    
' → logprob: -7.144926071166992
    5. '
' → logprob: -8.394926071166992
    6. ',' → logprob: -8.394926071166992
    7. '<|end|>' → logprob: -9.894926071166992
    8. '  
' → logprob: -10.019926071166992
    9. ')' → logprob: -11.019926071166992
    10. '	for' → logprob: -11.144926071166992

Token 477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04325927421450615
    2. ' for' → logprob: -3.418259382247925
    3. 'for' → logprob: -4.668259143829346
    4. '    
' → logprob: -10.043259620666504
    5. '<|end|>' → logprob: -10.418259620666504
    6. '
' → logprob: -10.668259620666504
    7. '```' → logprob: -10.668259620666504
    8. '	for' → logprob: -10.918259620666504
    9. ',' → logprob: -11.043259620666504
    10. ')' → logprob: -11.918259620666504

Token 478: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.269623726606369
    2. ' for' → logprob: -2.0196237564086914
    3. 'for' (adapté à ' for') → logprob: -2.2696237564086914
    4. '    
' → logprob: -9.394623756408691
    5. '```' → logprob: -9.519623756408691
    6. '
' → logprob: -10.269623756408691
    7. ',' → logprob: -10.894623756408691
    8. '	for' → logprob: -11.269623756408691
    9. '<|end|>' → logprob: -11.519623756408691
    10. ')' → logprob: -11.644623756408691

Token 479: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868740200996399
    2. ' i' → logprob: -1.1368739604949951
    3. ' ' → logprob: -13.511874198913574
    4. '   ' → logprob: -14.136874198913574
    5. '	i' → logprob: -14.636874198913574
    6. '0' → logprob: -16.011873245239258
    7. '_i' → logprob: -16.261873245239258
    8. '(i' → logprob: -16.386873245239258
    9. '  ' → logprob: -16.636873245239258
    10. 'u' → logprob: -17.261873245239258

Token 480: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013350572437047958
    2. 'in' → logprob: -4.388350486755371
    3. ',' → logprob: -7.138350486755371
    4. ' ,' → logprob: -10.888350486755371
    5. '   ' → logprob: -11.013350486755371
    6. ' ' → logprob: -12.263350486755371
    7. 'import' → logprob: -13.013350486755371
    8. ')' → logprob: -13.513350486755371
    9. '	in' → logprob: -14.263350486755371
    10. '  ' → logprob: -14.763350486755371

Token 481: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.003006942570209503
    2. ' (' → logprob: -5.878006935119629
    3. '(edge' → logprob: -9.128006935119629
    4. '(' → logprob: -9.753006935119629
    5. '(e' → logprob: -11.628006935119629
    6. 'edge' → logprob: -11.753006935119629
    7. '   ' → logprob: -12.003006935119629
    8. '((' → logprob: -13.503006935119629
    9. ' ' → logprob: -13.628006935119629
    10. 'u' → logprob: -13.628006935119629

Token 482: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0001777960715116933
    2. '   ' → logprob: -9.375177383422852
    3. ' u' → logprob: -9.875177383422852
    4. 'edges' → logprob: -10.625177383422852
    5. '	u' → logprob: -12.625177383422852
    6. '(u' → logprob: -12.625177383422852
    7. ')' → logprob: -13.125177383422852
    8. '_u' → logprob: -13.250177383422852
    9. '    
' → logprob: -13.500177383422852
    10. '[u' → logprob: -13.750177383422852

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014740334590896964
    2. ',v' → logprob: -6.751473903656006
    3. ' ,' → logprob: -8.126474380493164
    4. ',u' → logprob: -12.001474380493164
    5. 'v' → logprob: -14.376474380493164
    6. ',
' → logprob: -14.876474380493164
    7. '_,' → logprob: -15.501474380493164
    8. ' v' → logprob: -15.626474380493164
    9. ',b' → logprob: -16.001474380493164
    10. '   ' → logprob: -16.126474380493164

Token 484: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0024758970830589533
    2. ' v' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.50247573852539
    4. '	v' → logprob: -16.50247573852539
    5. ' ' → logprob: -17.37747573852539
    6. ',v' → logprob: -17.75247573852539
    7. ',' → logprob: -18.00247573852539
    8. '  ' → logprob: -18.37747573852539
    9. '
' → logprob: -18.75247573852539
    10. ')v' → logprob: -18.75247573852539

Token 485: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. ' )' → logprob: -11.50001049041748
    3. ')
' → logprob: -15.25001049041748
    4. ')=' → logprob: -15.37501049041748
    5. '   ' → logprob: -16.250011444091797
    6. '))' → logprob: -16.625011444091797
    7. ' in' → logprob: -16.625011444091797
    8. 'in' → logprob: -17.250011444091797
    9. '),' → logprob: -17.875011444091797
    10. ' ' → logprob: -17.875011444091797

Token 486: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3585650324821472
    2. 'in' → logprob: -1.233565092086792
    3. ')' → logprob: -4.608564853668213
    4. '   ' → logprob: -10.358565330505371
    5. ' )' → logprob: -10.733565330505371
    6. '
' → logprob: -11.108565330505371
    7. '):
' → logprob: -11.858565330505371
    8. '=' → logprob: -12.108565330505371
    9. ',' → logprob: -12.233565330505371
    10. '	in' → logprob: -12.858565330505371

Token 487: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.011048528365790844
    2. ' enumerate' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.261048316955566
    4. 'en' → logprob: -15.386048316955566
    5. 'enum' → logprob: -17.011049270629883
    6. ' ' → logprob: -17.136049270629883
    7. '(en' → logprob: -17.886049270629883
    8. '(' → logprob: -18.011049270629883
    9. '```' → logprob: -18.011049270629883
    10. 'm' → logprob: -18.136049270629883

Token 488: '(edges' (ID: 185298)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0960448756814003
    2. ' edges' → logprob: -2.9710447788238525
    3. '(edges' → logprob: -3.2210447788238525
    4. 'enumer' → logprob: -8.971044540405273
    5. ')' → logprob: -9.471044540405273
    6. '   ' → logprob: -9.846044540405273
    7. '(' → logprob: -9.971044540405273
    8. ' (' → logprob: -10.971044540405273
    9. 'm' → logprob: -11.096044540405273
    10. '.edges' → logprob: -11.471044540405273

Token 489: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.045542243868112564
    2. '):' → logprob: -3.1705422401428223
    3. '   ' → logprob: -6.170542240142822
    4. '       ' → logprob: -7.920542240142822
    5. '):
' → logprob: -10.04554271697998
    6. ' ):
' → logprob: -10.79554271697998
    7. '):

' → logprob: -12.04554271697998
    8. ':' → logprob: -12.67054271697998
    9. ' ' → logprob: -12.92054271697998
    10. ':
' → logprob: -13.04554271697998

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08409735560417175
    2. '   ' → logprob: -2.584097385406494
    3. ' add' → logprob: -5.584097385406494
    4. 'add' → logprob: -6.834097385406494
    5. ',' → logprob: -8.709096908569336
    6. '```' → logprob: -9.834096908569336
    7. ')' → logprob: -9.959096908569336
    8. '    
' → logprob: -10.959096908569336
    9. '):
' → logprob: -11.209096908569336
    10. '        
' → logprob: -11.334096908569336

Token 491: ' u' (ID: 337)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.767845869064331
    2. ' add' → logprob: -1.267845869064331
    3. 'add' → logprob: -1.392845869064331
    4. 'u' (adapté à ' u') → logprob: -5.89284610748291
    5. ' u' → logprob: -5.89284610748291
    6. '       ' → logprob: -7.51784610748291
    7. ' edge' → logprob: -11.01784610748291
    8. ' ' → logprob: -11.26784610748291
    9. 'edge' → logprob: -11.39284610748291
    10. '	add' → logprob: -11.51784610748291

Token 492: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.015111055225133896
    2. 'node' → logprob: -4.640110969543457
    3. ' =' → logprob: -6.140110969543457
    4. '_student' → logprob: -7.015110969543457
    5. '=' → logprob: -7.265110969543457
    6. '_idx' → logprob: -7.515110969543457
    7. ' +=' → logprob: -8.140110969543457
    8. '+=' → logprob: -8.390110969543457
    9. 'u' → logprob: -8.640110969543457
    10. '_offset' → logprob: -10.015110969543457

Token 493: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10025400668382645
    2. ' =' → logprob: -2.3502540588378906
    3. '=
' → logprob: -10.97525405883789
    4. ',' → logprob: -11.35025405883789
    5. ')' → logprob: -12.10025405883789
    6. '   ' → logprob: -12.60025405883789
    7. '=u' → logprob: -13.22525405883789
    8. '_idx' → logprob: -13.72525405883789
    9. 'u' → logprob: -13.72525405883789
    10. '=

' → logprob: -14.10025405883789

Token 494: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011713240382960066
    2. ' ' → logprob: -9.375117301940918
    3. '   ' → logprob: -10.375117301940918
    4. 'm' → logprob: -14.500117301940918
    5. '       ' → logprob: -15.875117301940918
    6. '           ' → logprob: -16.2501163482666
    7. '(' → logprob: -16.6251163482666
    8. '    ' → logprob: -16.7501163482666
    9. '  ' → logprob: -16.7501163482666
    10. '     ' → logprob: -18.0001163482666

Token 495: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.263011578586884e-05
    2. ' ' → logprob: -10.250042915344238
    3. '   ' → logprob: -12.000042915344238
    4. '(' → logprob: -14.250042915344238
    5. 'm' → logprob: -15.250042915344238
    6. '  ' → logprob: -17.375041961669922
    7. '    ' → logprob: -17.875041961669922
    8. '(m' → logprob: -18.125041961669922
    9. '       ' → logprob: -18.250041961669922
    10. '
' → logprob: -18.500041961669922

Token 496: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11887753009796143
    2. ' +' → logprob: -2.368877410888672
    3. '+m' → logprob: -3.993877410888672
    4. '   ' → logprob: -9.618877410888672
    5. 'm' → logprob: -13.743877410888672
    6. '+i' → logprob: -14.743877410888672
    7. ' ' → logprob: -14.868877410888672
    8. '＋' → logprob: -15.368877410888672
    9. '+
' → logprob: -15.743877410888672
    10. '+c' → logprob: -16.118877410888672

Token 497: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -8.625866030342877e-05
    2. ' m' → logprob: -9.375085830688477
    3. '   ' → logprob: -13.875085830688477
    4. 'u' → logprob: -15.250085830688477
    5. '(m' → logprob: -16.250085830688477
    6. '           ' → logprob: -17.125085830688477
    7. '	m' → logprob: -17.500085830688477
    8. '    ' → logprob: -17.750085830688477
    9. '[m' → logprob: -18.750085830688477
    10. '       ' → logprob: -19.000085830688477

Token 498: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.028365483507514
    2. ' +' → logprob: -3.77836537361145
    3. '+i' → logprob: -5.278365612030029
    4. 'u' → logprob: -12.778365135192871
    5. '+m' → logprob: -14.028365135192871
    6. '+n' → logprob: -14.403365135192871
    7. '   ' → logprob: -15.153365135192871
    8. '+(' → logprob: -15.653365135192871
    9. '+c' → logprob: -15.653365135192871
    10. '+#' → logprob: -15.903365135192871

Token 499: ' (' (ID: 350)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.006734199821949005
    2. '(u' → logprob: -5.006734371185303
    3. ' u' → logprob: -11.381733894348145
    4. '(' → logprob: -13.006733894348145
    5. ' (' → logprob: -13.631733894348145
    6. 'min' → logprob: -14.006733894348145
    7. '[u' → logprob: -14.006733894348145
    8. '   ' → logprob: -14.881733894348145
    9. 'i' → logprob: -15.006733894348145
    10. '
' → logprob: -15.756733894348145

Token 500: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -5.512236498361744e-07
    2. ' u' → logprob: -14.875000953674316
    3. '(u' → logprob: -16.125
    4. '   ' → logprob: -17.0
    5. '	u' → logprob: -19.125
    6. '[u' → logprob: -19.125
    7. ' ' → logprob: -19.75
    8. 'user' → logprob: -20.5
    9. 'min' → logprob: -20.75
    10. '  ' → logprob: -21.375

Token 501: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5833336710929871
    2. '-' → logprob: -0.8333336710929871
    3. ' -' → logprob: -5.083333492279053
    4. '<|end|>' → logprob: -7.583333492279053
    5. ')
' → logprob: -8.583333969116211
    6. '   ' → logprob: -9.333333969116211
    7. '#' → logprob: -9.708333969116211
    8. ')-' → logprob: -9.833333969116211
    9. ')#' → logprob: -9.958333969116211
    10. ')i' → logprob: -10.333333969116211

Token 502: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '0' → logprob: -17.0000057220459
    4. '   ' → logprob: -18.2500057220459
    5. ')' → logprob: -18.5000057220459
    6. '<|end|>' → logprob: -18.5000057220459
    7. '=' → logprob: -19.5000057220459
    8. '  ' → logprob: -20.0000057220459
    9. '```' → logprob: -20.1875057220459
    10. '+' → logprob: -20.6250057220459

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. '0' → logprob: -11.875012397766113
    3. ' ' → logprob: -12.125012397766113
    4. '   ' → logprob: -15.375012397766113
    5. '-' → logprob: -16.62501335144043
    6. ')' → logprob: -17.00001335144043
    7. '
' → logprob: -17.06251335144043
    8. '  ' → logprob: -17.75001335144043
    9. '2' → logprob: -18.31251335144043
    10. '(' → logprob: -18.50001335144043

Token 504: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4742301404476166
    2. ')' → logprob: -0.974230170249939
    3. '       ' → logprob: -8.97422981262207
    4. ')

' → logprob: -11.97422981262207
    5. '
' → logprob: -12.09922981262207
    6. '   ' → logprob: -12.47422981262207
    7. '<|end|>' → logprob: -12.84922981262207
    8. ')add' → logprob: -12.97422981262207
    9. ')
' → logprob: -13.84922981262207
    10. ']' → logprob: -13.84922981262207

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008785889949649572
    2. 'add' → logprob: -7.375878810882568
    3. 'v' → logprob: -8.62587833404541
    4. ' add' → logprob: -10.12587833404541
    5. '   ' → logprob: -11.00087833404541
    6. ',' → logprob: -12.50087833404541
    7. ' v' → logprob: -12.50087833404541
    8. '```' → logprob: -12.87587833404541
    9. ')' → logprob: -13.12587833404541
    10. ',v' → logprob: -13.87587833404541

Token 506: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.00014060820103622973
    2. ' v' → logprob: -9.375140190124512
    3. '   ' → logprob: -10.000140190124512
    4. 'add' → logprob: -11.750140190124512
    5. '       ' → logprob: -13.000140190124512
    6. '	v' → logprob: -16.375141143798828
    7. ' ' → logprob: -17.750141143798828
    8. 'edge' → logprob: -17.875141143798828
    9. ' add' → logprob: -17.875141143798828
    10. '  ' → logprob: -18.000141143798828

Token 507: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00923982635140419
    2. '_' → logprob: -5.259239673614502
    3. '=' → logprob: -5.759239673614502
    4. ' =' → logprob: -7.384239673614502
    5. 'node' → logprob: -10.25924015045166
    6. '_user' → logprob: -10.25924015045166
    7. '   ' → logprob: -10.75924015045166
    8. '+' → logprob: -10.88424015045166
    9. '=_' → logprob: -11.25924015045166
    10. '_nodes' → logprob: -11.25924015045166

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687145709991455
    2. '=' → logprob: -1.1368714570999146
    3. '   ' → logprob: -15.011871337890625
    4. ' ' → logprob: -16.136871337890625
    5. '    ' → logprob: -17.761871337890625
    6. '=
' → logprob: -18.261871337890625
    7. ' =
' → logprob: -18.636871337890625
    8. ')' → logprob: -18.761871337890625
    9. '  ' → logprob: -19.136871337890625
    10. '	' → logprob: -19.511871337890625

Token 509: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6931481957435608
    2. ' ' → logprob: -0.6931481957435608
    3. '   ' → logprob: -14.193148612976074
    4. '  ' → logprob: -15.693148612976074
    5. '(' → logprob: -16.943147659301758
    6. '    ' → logprob: -17.193147659301758
    7. ' ' → logprob: -18.193147659301758
    8. '0' → logprob: -18.318147659301758
    9. '`' → logprob: -19.068147659301758
    10. '[' → logprob: -19.505647659301758

Token 510: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.500075340270996
    4. '  ' → logprob: -17.75007438659668
    5. '(' → logprob: -18.87507438659668
    6. '    ' → logprob: -20.75007438659668
    7. '       ' → logprob: -21.18757438659668
    8. '`' → logprob: -21.25007438659668
    9. '	' → logprob: -21.37507438659668
    10. '     ' → logprob: -21.68757438659668

Token 511: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932631731033325
    2. ' +' → logprob: -0.6932631731033325
    3. '+m' → logprob: -9.068263053894043
    4. ' ' → logprob: -15.068263053894043
    5. '＋' → logprob: -15.818263053894043
    6. '+
' → logprob: -16.56826400756836
    7. '   ' → logprob: -16.94326400756836
    8. ' ' → logprob: -17.44326400756836
    9. ' +
' → logprob: -17.44326400756836
    10. '<|end|>' → logprob: -17.94326400756836

Token 512: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -7.493430894101039e-05
    2. ' m' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.75007438659668
    4. '	m' → logprob: -18.87507438659668
    5. ' ' → logprob: -19.75007438659668
    6. '(m' → logprob: -20.00007438659668
    7. '  ' → logprob: -20.75007438659668
    8. '    ' → logprob: -21.75007438659668
    9. '+m' → logprob: -22.12507438659668
    10. '[m' → logprob: -22.25007438659668

Token 513: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04300832375884056
    2. ' +' → logprob: -3.168008327484131
    3. '+(' → logprob: -11.668007850646973
    4. '   ' → logprob: -15.043007850646973
    5. ' ' → logprob: -16.04300880432129
    6. ' +(' → logprob: -16.16800880432129
    7. '＋' → logprob: -18.41800880432129
    8. '+
' → logprob: -18.41800880432129
    9. '+i' → logprob: -18.79300880432129
    10. '=' → logprob: -18.91800880432129

Token 514: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.1279291957616806
    2. '(v' → logprob: -2.127929210662842
    3. ' (' → logprob: -7.002929210662842
    4. 'm' → logprob: -9.877928733825684
    5. '(' → logprob: -10.627928733825684
    6. '   ' → logprob: -11.377928733825684
    7. '(i' → logprob: -13.127928733825684
    8. '(u' → logprob: -13.627928733825684
    9. ' ' → logprob: -15.002928733825684
    10. '(n' → logprob: -15.377928733825684

Token 515: 'v' (ID: 85)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.011053716763854027
    2. 'v' → logprob: -4.511053562164307
    3. ' (' → logprob: -13.386054039001465
    4. '(' → logprob: -13.511054039001465
    5. '   ' → logprob: -14.011054039001465
    6. '(u' → logprob: -14.011054039001465
    7. '(m' → logprob: -14.511054039001465
    8. ' v' → logprob: -14.761054039001465
    9. 'm' → logprob: -15.511054039001465
    10. '[v' → logprob: -16.88605308532715

Token 516: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0789157897233963
    2. ' -' → logprob: -2.57891583442688
    3. '+' → logprob: -10.9539155960083
    4. ' ' → logprob: -11.8289155960083
    5. ')' → logprob: -14.3289155960083
    6. '   ' → logprob: -15.3289155960083
    7. '[' → logprob: -16.328916549682617
    8. '−' → logprob: -16.453916549682617
    9. '  ' → logprob: -16.703916549682617
    10. ' +' → logprob: -16.703916549682617

Token 517: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003436872211750597
    2. ' ' → logprob: -8.000343322753906
    3. '0' → logprob: -13.125343322753906
    4. '(' → logprob: -13.125343322753906
    5. '-' → logprob: -13.375343322753906
    6. '   ' → logprob: -13.875343322753906
    7. '(i' → logprob: -14.250343322753906
    8. 'i' → logprob: -14.500343322753906
    9. '  ' → logprob: -15.250343322753906
    10. '(u' → logprob: -16.125343322753906

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.85104202805087e-05
    2. ' ' → logprob: -9.625078201293945
    3. '0' → logprob: -12.375078201293945
    4. '-' → logprob: -12.625078201293945
    5. 'i' → logprob: -13.625078201293945
    6. '   ' → logprob: -13.750078201293945
    7. '(i' → logprob: -14.125078201293945
    8. '(' → logprob: -14.500078201293945
    9. '
' → logprob: -14.500078201293945
    10. '  ' → logprob: -15.562578201293945

Token 519: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000968987587839365
    2. ')
' → logprob: -7.125968933105469
    3. '       ' → logprob: -8.875968933105469
    4. '   ' → logprob: -11.375968933105469
    5. ' )' → logprob: -11.625968933105469
    6. ']' → logprob: -14.125968933105469
    7. ',' → logprob: -14.625968933105469
    8. ')
' → logprob: -14.750968933105469
    9. '),' → logprob: -15.000968933105469
    10. ')]' → logprob: -15.000968933105469

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01900029182434082
    2. '   ' → logprob: -4.019000053405762
    3. 'add' → logprob: -7.144000053405762
    4. '
' → logprob: -10.144000053405762
    5. ' add' → logprob: -11.269000053405762
    6. '        
' → logprob: -13.019000053405762
    7. '```' → logprob: -13.144000053405762
    8. '    
' → logprob: -14.019000053405762
    9. '     ' → logprob: -14.519000053405762
    10. '           ' → logprob: -14.769000053405762

Token 521: ' edge' (ID: 11165)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.004500735085457563
    2. ' add' → logprob: -5.754500865936279
    3. '   ' → logprob: -6.629500865936279
    4. '       ' → logprob: -14.379500389099121
    5. '
' → logprob: -14.629500389099121
    6. '	add' → logprob: -15.879500389099121
    7. ' ' → logprob: -16.629501342773438
    8. '#' → logprob: -16.629501342773438
    9. '  ' → logprob: -17.254501342773438
    10. '```' → logprob: -17.629501342773438

Token 522: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.10658815503120422
    2. 'node' → logprob: -2.606588125228882
    3. ' =' → logprob: -4.731588363647461
    4. '=' → logprob: -4.981588363647461
    5. '_nodes' → logprob: -5.481588363647461
    6. '   ' → logprob: -6.231588363647461
    7. ' node' → logprob: -6.856588363647461
    8. '_' → logprob: -6.981588363647461
    9. 's' → logprob: -7.481588363647461
    10. '=node' → logprob: -7.981588363647461

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5763829350471497
    2. '=' → logprob: -0.8263829350471497
    3. ')' → logprob: -8.576382637023926
    4. ',' → logprob: -8.951382637023926
    5. ']' → logprob: -9.451382637023926
    6. ' ' → logprob: -12.076382637023926
    7. '=edge' → logprob: -12.076382637023926
    8. 'add' → logprob: -12.201382637023926
    9. ']=' → logprob: -12.576382637023926
    10. 'to' → logprob: -12.701382637023926

Token 524: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07889088988304138
    2. ' ' → logprob: -2.578890800476074
    3. '   ' → logprob: -13.953890800476074
    4. '  ' → logprob: -15.578890800476074
    5. '    ' → logprob: -18.14139175415039
    6. '(' → logprob: -18.51639175415039
    7. '```' → logprob: -18.89139175415039
    8. '`' → logprob: -18.95389175415039
    9. '۲' → logprob: -19.32889175415039
    10. '=' → logprob: -19.32889175415039

Token 525: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -14.625019073486328
    4. '  ' → logprob: -17.750019073486328
    5. '(' → logprob: -18.375019073486328
    6. '    ' → logprob: -19.125019073486328
    7. '```' → logprob: -19.187519073486328
    8. '     ' → logprob: -20.000019073486328
    9. '２' → logprob: -20.375019073486328
    10. '       ' → logprob: -20.562519073486328

Token 526: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22550328075885773
    2. ' +' → logprob: -1.6005033254623413
    3. '+i' → logprob: -9.350502967834473
    4. '+m' → logprob: -13.225502967834473
    5. '＋' → logprob: -14.475502967834473
    6. ' plus' → logprob: -14.975502967834473
    7. ' ' → logprob: -15.600502967834473
    8. '+
' → logprob: -15.725502967834473
    9. '[' → logprob: -15.975502967834473
    10. '```' → logprob: -16.41300392150879

Token 527: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9027791495318525e-05
    2. ' i' → logprob: -10.875019073486328
    3. 'm' → logprob: -20.375019073486328
    4. '[i' → logprob: -20.750019073486328
    5. '	i' → logprob: -20.875019073486328
    6. '(i' → logprob: -21.000019073486328
    7. '<|end|>' → logprob: -21.750019073486328
    8. '*i' → logprob: -22.000019073486328
    9. '```' → logprob: -22.125019073486328
    10. '_i' → logprob: -22.125019073486328

Token 528: '
' (ID: 198)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5720003247261047
    2. '   ' → logprob: -1.19700026512146
    3. '       ' → logprob: -2.19700026512146
    4. ' add' → logprob: -4.572000503540039
    5. ',' → logprob: -4.697000503540039
    6. '	add' → logprob: -7.197000503540039
    7. '.add' → logprob: -7.322000503540039
    8. ')' → logprob: -7.947000503540039
    9. ')add' → logprob: -8.197000503540039
    10. '(add' → logprob: -8.697000503540039

Token 529: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6874042749404907
    2. '       ' → logprob: -1.4374042749404907
    3. 'add' → logprob: -1.4374042749404907
    4. ' add' → logprob: -3.937404155731201
    5. '        
' → logprob: -7.437404155731201
    6. ')add' → logprob: -7.812404155731201
    7. '(add' → logprob: -8.18740463256836
    8. '	add' → logprob: -8.31240463256836
    9. '.add' → logprob: -8.43740463256836
    10. '    
' → logprob: -8.56240463256836

Token 530: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.5813061594963074
    2. ' add' → logprob: -1.2063062191009521
    3. '   ' → logprob: -1.9563062191009521
    4. '       ' → logprob: -9.081306457519531
    5. '	add' → logprob: -11.456306457519531
    6. '
' → logprob: -11.831306457519531
    7. ' ' → logprob: -12.331306457519531
    8. '  ' → logprob: -12.706306457519531
    9. '    
' → logprob: -12.831306457519531
    10. ')add' → logprob: -13.206306457519531

Token 531: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.250000953674316
    3. '_line' → logprob: -15.250000953674316
    4. '_edges' → logprob: -16.000001907348633
    5. '_ed' → logprob: -17.875001907348633
    6. 'edge' → logprob: -18.000001907348633
    7. '```' → logprob: -18.125001907348633
    8. ' _' → logprob: -18.250001907348633
    9. '_face' → logprob: -18.250001907348633
    10. '_e' → logprob: -18.375001907348633

Token 532: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -8.061054359131958e-06
    2. 'edge' → logprob: -12.000007629394531
    3. '(' → logprob: -13.500007629394531
    4. '=edge' → logprob: -15.000007629394531
    5. ' edge' → logprob: -17.25000762939453
    6. ' (' → logprob: -18.37500762939453
    7. '(
' → logprob: -20.50000762939453
    8. '(edges' → logprob: -21.00000762939453
    9. '_edge' → logprob: -21.37500762939453
    10. '.edge' → logprob: -21.62500762939453

Token 533: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.2664456789934775e-06
    2. 'node' → logprob: -13.625000953674316
    3. '_NODE' → logprob: -19.875001907348633
    4. '_' → logprob: -20.500001907348633
    5. '_token' → logprob: -20.625001907348633
    6. '(node' → logprob: -20.875001907348633
    7. 'Node' → logprob: -21.000001907348633
    8. '_nodes' → logprob: -21.250001907348633
    9. '```' → logprob: -21.250001907348633
    10. '_code' → logprob: -21.375001907348633

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013679367839358747
    2. ',v' → logprob: -9.625136375427246
    3. ',u' → logprob: -10.250136375427246
    4. ' ,' → logprob: -10.375136375427246
    5. 'v' → logprob: -12.875136375427246
    6. ',
' → logprob: -14.500136375427246
    7. 'u' → logprob: -15.125136375427246
    8. '(' → logprob: -15.625136375427246
    9. '(v' → logprob: -15.875136375427246
    10. ' v' → logprob: -16.625137329101562

Token 535: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10020871460437775
    2. ' u' → logprob: -2.3502087593078613
    3. '	u' → logprob: -14.100208282470703
    4. '   ' → logprob: -14.350208282470703
    5. '[u' → logprob: -15.475208282470703
    6. '(u' → logprob: -15.725208282470703
    7. ' ' → logprob: -16.350208282470703
    8. ')' → logprob: -16.725208282470703
    9. ',u' → logprob: -17.100208282470703
    10. 'user' → logprob: -17.225208282470703

Token 536: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.0280383548888494e-06
    2. ')_' → logprob: -15.250000953674316
    3. '_user' → logprob: -15.500000953674316
    4. '_nodes' → logprob: -15.750000953674316
    5. 'node' → logprob: -16.500001907348633
    6. '_' → logprob: -16.500001907348633
    7. ')' → logprob: -16.625001907348633
    8. ' _' → logprob: -17.125001907348633
    9. '_NODE' → logprob: -17.375001907348633
    10. '_n' → logprob: -18.250001907348633

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.176947600673884e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',
' → logprob: -15.750021934509277
    4. '   ' → logprob: -16.87502098083496
    5. '1' → logprob: -17.62502098083496
    6. '```' → logprob: -17.75002098083496
    7. '<|end|>' → logprob: -18.00002098083496
    8. '       ' → logprob: -18.50002098083496
    9. ' ' → logprob: -19.25002098083496
    10. '‌,' → logprob: -19.37502098083496

Token 538: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.875024795532227
    4. '```' → logprob: -18.625024795532227
    5. '۱' → logprob: -20.250024795532227
    6. '0' → logprob: -20.937524795532227
    7. ')' → logprob: -21.000024795532227
    8. '  ' → logprob: -21.125024795532227
    9. '<|end|>' → logprob: -21.750024795532227
    10. '
' → logprob: -21.937524795532227

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -20.375
    5. '
' → logprob: -21.625
    6. '0' → logprob: -22.25
    7. ')' → logprob: -22.375
    8. '۱' → logprob: -22.75
    9. '[' → logprob: -23.25
    10. '１' → logprob: -23.4375

Token 540: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10031028836965561
    2. ')
' → logprob: -2.3503103256225586
    3. '   ' → logprob: -9.350310325622559
    4. '       ' → logprob: -11.475310325622559
    5. ' )' → logprob: -12.975310325622559
    6. ')
' → logprob: -13.225310325622559
    7. ')add' → logprob: -13.600310325622559
    8. ' )
' → logprob: -14.725310325622559
    9. ')

' → logprob: -15.475310325622559
    10. '),' → logprob: -15.600310325622559

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006702631362713873
    2. '   ' → logprob: -7.625670433044434
    3. '
' → logprob: -9.750670433044434
    4. '<|end|>' → logprob: -9.875670433044434
    5. 'add' → logprob: -10.000670433044434
    6. '        
' → logprob: -12.375670433044434
    7. ')add' → logprob: -12.375670433044434
    8. ' add' → logprob: -12.375670433044434
    9. ',' → logprob: -12.625670433044434
    10. ')' → logprob: -12.750670433044434

Token 542: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.4050374925136566
    2. ' add' → logprob: -1.155037522315979
    3. '       ' → logprob: -4.0300374031066895
    4. '   ' → logprob: -8.405037879943848
    5. '	add' → logprob: -13.280037879943848
    6. '.add' → logprob: -14.155037879943848
    7. '```' → logprob: -14.155037879943848
    8. ' ' → logprob: -14.655037879943848
    9. 'edge' → logprob: -15.155037879943848
    10. '(add' → logprob: -15.530037879943848

Token 543: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: 0.0
    2. '_' → logprob: -16.75
    3. 'edge' → logprob: -17.375
    4. '_edges' → logprob: -18.375
    5. '_line' → logprob: -18.75
    6. '_ed' → logprob: -18.875
    7. 'Edge' → logprob: -19.125
    8. '_EDGE' → logprob: -20.0
    9. '_node' → logprob: -20.125
    10. '_face' → logprob: -20.875

Token 544: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -6.704273118884885e-07
    2. '=edge' → logprob: -14.500000953674316
    3. '(' → logprob: -16.5
    4. 'edge' → logprob: -17.875
    5. '_edge' → logprob: -19.875
    6. '(line' → logprob: -20.5
    7. '(node' → logprob: -20.75
    8. '(edges' → logprob: -21.25
    9. '(angle' → logprob: -21.5
    10. ' (' → logprob: -21.5

Token 545: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.836499985889532e-05
    2. 'node' → logprob: -9.7500581741333
    3. 'Node' → logprob: -17.500059127807617
    4. '_NODE' → logprob: -17.750059127807617
    5. '-node' → logprob: -18.375059127807617
    6. ' node' → logprob: -19.000059127807617
    7. '_edge' → logprob: -19.375059127807617
    8. '```' → logprob: -19.500059127807617
    9. '(node' → logprob: -19.625059127807617
    10. '	node' → logprob: -19.875059127807617

Token 546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.288163083605468e-05
    2. ',v' → logprob: -10.000052452087402
    3. ' ,' → logprob: -11.875052452087402
    4. ',
' → logprob: -15.375052452087402
    5. 'v' → logprob: -16.37505340576172
    6. '```' → logprob: -18.25005340576172
    7. '_,' → logprob: -18.37505340576172
    8. 'to' → logprob: -18.37505340576172
    9. ',node' → logprob: -18.50005340576172
    10. '   ' → logprob: -18.62505340576172

Token 547: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10020699352025986
    2. ' v' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.225207328796387
    4. '   ' → logprob: -16.35020637512207
    5. '	v' → logprob: -16.35020637512207
    6. '  ' → logprob: -18.60020637512207
    7. '(v' → logprob: -18.85020637512207
    8. '    ' → logprob: -19.22520637512207
    9. ' ' → logprob: -19.22520637512207
    10. '
' → logprob: -19.47520637512207

Token 548: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.128163257315464e-07
    2. 'node' → logprob: -15.875
    3. ',' → logprob: -17.125
    4. '_NODE' → logprob: -17.5
    5. ' ' → logprob: -17.75
    6. '+' → logprob: -17.75
    7. '-node' → logprob: -18.375
    8. 'Node' → logprob: -18.875
    9. '_' → logprob: -19.0
    10. '   ' → logprob: -19.625

Token 549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015872348740231246
    2. ' ,' → logprob: -8.750158309936523
    3. '(' → logprob: -16.625158309936523
    4. '   ' → logprob: -18.000158309936523
    5. ',
' → logprob: -18.125158309936523
    6. ' ' → logprob: -18.375158309936523
    7. '       ' → logprob: -18.500158309936523
    8. '```' → logprob: -18.500158309936523
    9. ')' → logprob: -18.750158309936523
    10. '<|end|>' → logprob: -19.625158309936523

Token 550: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889033854007721
    2. ' ' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.578890800476074
    4. '```' → logprob: -17.328889846801758
    5. '  ' → logprob: -17.953889846801758
    6. '0' → logprob: -18.078889846801758
    7. '       ' → logprob: -18.203889846801758
    8. ' ' → logprob: -18.328889846801758
    9. '[' → logprob: -18.453889846801758
    10. '	' → logprob: -18.828889846801758

Token 551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -18.2500057220459
    4. '   ' → logprob: -19.1250057220459
    5. '<|end|>' → logprob: -19.8750057220459
    6. '0' → logprob: -20.9375057220459
    7. '[' → logprob: -21.0625057220459
    8. '
' → logprob: -21.3125057220459
    9. ')' → logprob: -21.5625057220459
    10. '  ' → logprob: -21.6875057220459

Token 552: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.888114098226652e-05
    2. ')
' → logprob: -9.375088691711426
    3. '<|end|>' → logprob: -13.625088691711426
    4. '   ' → logprob: -13.875088691711426
    5. ' )' → logprob: -13.875088691711426
    6. ')return' → logprob: -15.250088691711426
    7. ')

' → logprob: -15.750088691711426
    8. '
' → logprob: -16.000089645385742
    9. '),' → logprob: -16.250089645385742
    10. '```' → logprob: -16.625089645385742

Token 553: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.546792209148407
    2. 'def' → logprob: -1.4217922687530518
    3. '   ' → logprob: -2.2967922687530518
    4. 'level' → logprob: -3.2967922687530518
    5. '```' → logprob: -3.6717922687530518
    6. '    
' → logprob: -4.796792030334473
    7. 'from' → logprob: -5.296792030334473
    8. '  
' → logprob: -6.671792030334473
    9. ' level' → logprob: -8.046792030334473
    10. '<|end|>' → logprob: -8.421792030334473

Token 554: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15684615075588226
    2. '   ' → logprob: -2.156846046447754
    3. 'def' → logprob: -4.281846046447754
    4. '```' → logprob: -4.906846046447754
    5. 'level' → logprob: -5.406846046447754
    6. '    
' → logprob: -5.656846046447754
    7. 'from' → logprob: -8.531846046447754
    8. '        
' → logprob: -10.531846046447754
    9. '  
' → logprob: -11.031846046447754
    10. '``' → logprob: -11.906846046447754

Token 555: ' Now' (ID: 6549)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.4027111828327179
    2. 'def' → logprob: -1.1527111530303955
    3. '   ' → logprob: -4.402711391448975
    4. '
' → logprob: -6.902711391448975
    5. 'dist' → logprob: -7.402711391448975
    6. 'from' → logprob: -7.527711391448975
    7. '```' → logprob: -7.652711391448975
    8. 'queue' → logprob: -8.402710914611816
    9. ' level' → logprob: -8.402710914611816
    10. '    
' → logprob: -9.402710914611816

Token 556: ' check' (ID: 2371)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.447307825088501
    2. ' def' → logprob: -1.572307825088501
    3. '   ' → logprob: -2.322307825088501
    4. ' level' → logprob: -3.697307825088501
    5. 'level' → logprob: -3.947307825088501
    6. '
' → logprob: -5.447307586669922
    7. 'from' → logprob: -6.322307586669922
    8. ' flow' → logprob: -6.822307586669922
    9. ' dist' → logprob: -6.947307586669922
    10. '#' → logprob: -7.447307586669922

Token 557: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5723798274993896
    2. 'def' → logprob: -1.1973798274993896
    3. 'level' → logprob: -2.8223798274993896
    4. ' def' → logprob: -3.9473798274993896
    5. ' level' → logprob: -3.9473798274993896
    6. 'from' → logprob: -4.697380065917969
    7. '    
' → logprob: -4.822380065917969
    8. '
' → logprob: -5.447380065917969
    9. ' flow' → logprob: -5.572380065917969
    10. 'flow' → logprob: -6.447380065917969

Token 558: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6402631402015686
    2. ' max' → logprob: -2.390263080596924
    3. 'flow' → logprob: -2.640263080596924
    4. ' flow' → logprob: -2.640263080596924
    5. 'the' → logprob: -3.140263080596924
    6. 'def' → logprob: -3.140263080596924
    7. ' the' → logprob: -3.515263080596924
    8. 'm' → logprob: -4.265263080596924
    9. 'size' → logprob: -4.265263080596924
    10. 'b' → logprob: -4.515263080596924

Token 559: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.8114908337593079
    2. ' flow' → logprob: -1.061490774154663
    3. '_flow' → logprob: -1.561490774154663
    4. '(flow' → logprob: -10.561491012573242
    5. '   ' → logprob: -11.561491012573242
    6. '-flow' → logprob: -13.436491012573242
    7. 'def' → logprob: -13.561491012573242
    8. '.flow' → logprob: -13.561491012573242
    9. '_FLOW' → logprob: -13.561491012573242
    10. 'Flow' → logprob: -14.811491012573242

Token 560: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.848915159702301
    2. ' =' → logprob: -1.4739151000976562
    3. '==' → logprob: -2.0989151000976562
    4. '=' → logprob: -2.7239151000976562
    5. ' equals' → logprob: -2.8489151000976562
    6. '   ' → logprob: -3.0989151000976562
    7. ' can' → logprob: -3.5989151000976562
    8. 'equals' → logprob: -4.973915100097656
    9. 'def' → logprob: -5.098915100097656
    10. '()' → logprob: -6.223915100097656

Token 561: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8744470477104187
    2. 'size' → logprob: -0.9994470477104187
    3. ' size' → logprob: -1.9994471073150635
    4. ' m' → logprob: -2.9994471073150635
    5. ' at' → logprob: -4.374446868896484
    6. 'equal' → logprob: -5.124446868896484
    7. ' equal' → logprob: -5.124446868896484
    8. 'at' → logprob: -6.624446868896484
    9. '   ' → logprob: -7.124446868896484
    10. '=size' → logprob: -7.249446868896484

Token 562: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06502097845077515
    2. '
' → logprob: -2.81502103805542
    3. '    
' → logprob: -6.44002103805542
    4. 'def' → logprob: -7.44002103805542
    5. 'level' → logprob: -7.69002103805542
    6. 'from' → logprob: -8.940020561218262
    7. '```' → logprob: -9.190020561218262
    8. ' level' → logprob: -9.690020561218262
    9. '        
' → logprob: -10.940020561218262
    10. ',' → logprob: -11.065020561218262

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06765955686569214
    2. '
' → logprob: -2.817659616470337
    3. 'level' → logprob: -6.067659378051758
    4. '    
' → logprob: -6.192659378051758
    5. 'def' → logprob: -6.817659378051758
    6. 'from' → logprob: -9.442659378051758
    7. ' level' → logprob: -9.567659378051758
    8. 'class' → logprob: -10.567659378051758
    9. '```' → logprob: -11.067659378051758
    10. '        
' → logprob: -11.942659378051758

Token 564: ' #' (ID: 1069)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.40312185883522034
    2. '   ' → logprob: -1.153121829032898
    3. 'def' → logprob: -4.7781219482421875
    4. 'from' → logprob: -6.0281219482421875
    5. '
' → logprob: -6.0281219482421875
    6. ' level' → logprob: -6.5281219482421875
    7. '```' → logprob: -7.2781219482421875
    8. '    
' → logprob: -8.028121948242188
    9. 'class' → logprob: -8.153121948242188
    10. 'queue' → logprob: -11.028121948242188

Token 565: ' max' (ID: 2999)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.04450182616710663
    2. 'def' → logprob: -3.669501781463623
    3. 'from' → logprob: -5.044501781463623
    4. '   ' → logprob: -5.169501781463623
    5. ' level' → logprob: -5.544501781463623
    6. '
' → logprob: -6.794501781463623
    7. 'class' → logprob: -7.544501781463623
    8. 'queue' → logprob: -8.919502258300781
    9. '```' → logprob: -9.669502258300781
    10. '    
' → logprob: -10.919502258300781

Token 566: ' flow' (ID: 7845)
  Prédit: '_flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -0.3873707056045532
    2. 'flow' → logprob: -1.1373707056045532
    3. 'def' → logprob: -8.262371063232422
    4. ' flow' → logprob: -8.762371063232422
    5. '_level' → logprob: -10.387371063232422
    6. 'level' → logprob: -10.512371063232422
    7. 'Flow' → logprob: -11.012371063232422
    8. '(flow' → logprob: -12.387371063232422
    9. '```' → logprob: -13.387371063232422
    10. '-flow' → logprob: -13.762371063232422

Token 567: ' implementation' (ID: 13847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2347337007522583
    2. ' =' → logprob: -2.3597335815429688
    3. '=' → logprob: -2.6097335815429688
    4. 'from' → logprob: -3.9847335815429688
    5. ' def' → logprob: -5.234733581542969
    6. '   ' → logprob: -5.234733581542969
    7. 'graph' → logprob: -6.484733581542969
    8. 'size' → logprob: -6.484733581542969
    9. '(graph' → logprob: -6.734733581542969
    10. '(S' → logprob: -6.859733581542969

Token 568: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3712058365345001
    2. 'def' → logprob: -1.3712058067321777
    3. 'from' → logprob: -3.8712058067321777
    4. 'class' → logprob: -4.121205806732178
    5. '

' → logprob: -5.246205806732178
    6. '   ' → logprob: -5.371205806732178
    7. '```' → logprob: -5.871205806732178
    8. ' from' → logprob: -6.246205806732178
    9. '    
' → logprob: -6.621205806732178
    10. ' def' → logprob: -7.496205806732178

Token 569: 'Din' (ID: 94982)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2548476457595825
    2. 'level' → logprob: -2.629847526550293
    3. 'from' → logprob: -2.754847526550293
    4. 'deque' → logprob: -3.004847526550293
    5. '   ' → logprob: -3.504847526550293
    6. '
' → logprob: -5.254847526550293
    7. '```' → logprob: -6.254847526550293
    8. ' level' → logprob: -7.629847526550293
    9. 'd' → logprob: -8.379847526550293
    10. 'b' → logprob: -8.379847526550293

Token 570: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.03432196378707886
    2. '```' → logprob: -4.4093217849731445
    3. 'ics' → logprob: -4.9093217849731445
    4. 'ijkstra' → logprob: -5.6593217849731445
    5. 'jk' → logprob: -5.7843217849731445
    6. 'j' → logprob: -5.9093217849731445
    7. 'js' → logprob: -6.4093217849731445
    8. '``' → logprob: -7.2843217849731445
    9. '.py' → logprob: -7.5343217849731445
    10. 'ik' → logprob: -7.9093217849731445

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4168204665184021
    2. '):' → logprob: -1.7918205261230469
    3. '):
' → logprob: -2.166820526123047
    4. ')
' → logprob: -3.666820526123047
    5. '   ' → logprob: -4.041820526123047
    6. '):

' → logprob: -5.041820526123047
    7. ' )' → logprob: -5.666820526123047
    8. 'def' → logprob: -5.791820526123047
    9. ')

' → logprob: -7.541820526123047
    10. '(graph' → logprob: -7.666820526123047

Token 572: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13533204793930054
    2. 'def' → logprob: -2.8853321075439453
    3. '```' → logprob: -3.8853321075439453
    4. 'class' → logprob: -4.135332107543945
    5. '   ' → logprob: -4.510332107543945
    6. '    
' → logprob: -4.635332107543945
    7. '

' → logprob: -5.385332107543945
    8. '  
' → logprob: -5.635332107543945
    9. ' 
' → logprob: -6.010332107543945
    10. '``' → logprob: -7.260332107543945

Token 573: ' level' (ID: 3211)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4935111701488495
    2. '
' → logprob: -1.4935111999511719
    3. 'level' (adapté à ' level') → logprob: -2.743511199951172
    4. '    
' → logprob: -2.993511199951172
    5. 'class' → logprob: -3.368511199951172
    6. 'def' → logprob: -4.868511199951172
    7. ' level' → logprob: -5.118511199951172
    8. '```' → logprob: -6.868511199951172
    9. ' class' → logprob: -7.868511199951172
    10. '  
' → logprob: -8.618511199951172

Token 574: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2847875654697418
    2. '=' → logprob: -1.5347875356674194
    3. '[' → logprob: -3.659787654876709
    4. '[]' → logprob: -6.659787654876709
    5. '[:]' → logprob: -7.034787654876709
    6. ',' → logprob: -7.159787654876709
    7. ' ' → logprob: -7.159787654876709
    8. '=[]' → logprob: -7.409787654876709
    9. '   ' → logprob: -7.909787654876709
    10. '  ' → logprob: -7.909787654876709

Token 575: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.03926145285367966
    2. '[' → logprob: -3.2892613410949707
    3. ' [-' → logprob: -6.789261341094971
    4. ' [' → logprob: -9.289261817932129
    5. '[len' → logprob: -14.539261817932129
    6. '[:]' → logprob: -15.914261817932129
    7. ' ' → logprob: -16.414260864257812
    8. '[S' → logprob: -16.789260864257812
    9. '[s' → logprob: -17.164260864257812
    10. '   ' → logprob: -17.289260864257812

Token 576: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.822646693966817e-06
    2. ' -' → logprob: -12.000007629394531
    3. '-size' → logprob: -13.500007629394531
    4. '-f' → logprob: -16.12500762939453
    5. '   ' → logprob: -18.12500762939453
    6. '-depth' → logprob: -18.62500762939453
    7. '[-' → logprob: -19.00000762939453
    8. '0' → logprob: -19.25000762939453
    9. '-s' → logprob: -19.75000762939453
    10. '\-' → logprob: -19.75000762939453

Token 577: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019030701369047165
    2. ']*' → logprob: -4.894030570983887
    3. ' ]' → logprob: -4.894030570983887
    4. ' for' → logprob: -5.769030570983887
    5. ',' → logprob: -7.519030570983887
    6. 'for' → logprob: -9.019030570983887
    7. '   ' → logprob: -10.269030570983887
    8. ']*(' → logprob: -11.394030570983887
    9. '[:]' → logprob: -11.519030570983887
    10. 'None' → logprob: -12.144030570983887

Token 578: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -7.3458322731312364e-06
    2. '(size' → logprob: -12.250007629394531
    3. ' size' → logprob: -13.125007629394531
    4. '   ' → logprob: -14.625007629394531
    5. '[size' → logprob: -17.37500762939453
    6. 'len' → logprob: -18.75000762939453
    7. '=size' → logprob: -19.50000762939453
    8. '	size' → logprob: -19.62500762939453
    9. '```' → logprob: -20.12500762939453
    10. '
' → logprob: -20.75000762939453

Token 579: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028000758960843086
    2. 'def' → logprob: -3.653000831604004
    3. ' def' → logprob: -7.153000831604004
    4. ' 
' → logprob: -7.778000831604004
    5. '<|end|>' → logprob: -8.778000831604004
    6. ',' → logprob: -9.403000831604004
    7. '  
' → logprob: -9.903000831604004
    8. '
' → logprob: -10.153000831604004
    9. '    
' → logprob: -10.153000831604004
    10. ',
' → logprob: -10.403000831604004

Token 580: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20544932782649994
    2. '
' → logprob: -1.7054493427276611
    3. ' def' → logprob: -6.330449104309082
    4. '```' → logprob: -7.205449104309082
    5. '    
' → logprob: -7.455449104309082
    6. '   ' → logprob: -7.455449104309082
    7. ' 
' → logprob: -8.830449104309082
    8. '  
' → logprob: -9.455449104309082
    9. '	def' → logprob: -10.205449104309082
    10. '	
' → logprob: -10.455449104309082

Token 581: ' iter' (ID: 10621)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004026673559565097
    2. '
' → logprob: -8.875402450561523
    3. 'from' → logprob: -9.125402450561523
    4. ' def' → logprob: -9.875402450561523
    5. '    
' → logprob: -9.875402450561523
    6. '```' → logprob: -10.625402450561523
    7. '   ' → logprob: -11.250402450561523
    8. 'queue' → logprob: -12.000402450561523
    9. 'deque' → logprob: -13.125402450561523
    10. 'import' → logprob: -14.125402450561523

Token 582: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6849796772003174
    2. ' =' → logprob: -0.8099796772003174
    3. ']' → logprob: -4.434979438781738
    4. '_' → logprob: -4.434979438781738
    5. '(' → logprob: -4.559979438781738
    6. '[' → logprob: -5.059979438781738
    7. '=[]' → logprob: -5.309979438781738
    8. 'ation' → logprob: -6.434979438781738
    9. '   ' → logprob: -7.184979438781738
    10. '[:]' → logprob: -7.184979438781738

Token 583: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.534558552724775e-05
    2. ' [' → logprob: -10.750025749206543
    3. '0' → logprob: -12.500025749206543
    4. '[size' → logprob: -16.250024795532227
    5. ' ' → logprob: -17.500024795532227
    6. 'None' → logprob: -18.125024795532227
    7. '[-' → logprob: -18.250024795532227
    8. '[int' → logprob: -18.625024795532227
    9. '   ' → logprob: -18.625024795532227
    10. '(' → logprob: -18.750024795532227

Token 584: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'None' → logprob: -18.250001907348633
    4. '[' → logprob: -19.625001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '```' → logprob: -20.000001907348633
    7. '۰' → logprob: -20.125001907348633
    8. ']' → logprob: -20.625001907348633
    9. '-' → logprob: -21.000001907348633
    10. '(' → logprob: -21.250001907348633

Token 585: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016153192846104503
    2. ']*' → logprob: -7.626615524291992
    3. ' ]' → logprob: -7.626615524291992
    4. ']
' → logprob: -8.626615524291992
    5. '   ' → logprob: -8.751615524291992
    6. '<|end|>' → logprob: -10.001615524291992
    7. ']int' → logprob: -10.376615524291992
    8. '(size' → logprob: -10.501615524291992
    9. '*' → logprob: -10.501615524291992
    10. ')' → logprob: -10.876615524291992

Token 586: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -3.128163257315464e-07
    2. ' size' → logprob: -15.5
    3. '(size' → logprob: -17.75
    4. '[size' → logprob: -19.125
    5. '<size' → logprob: -21.0
    6. '```' → logprob: -21.375
    7. '	size' → logprob: -21.625
    8. '
' → logprob: -22.375
    9. ' ' → logprob: -22.375
    10. 'range' → logprob: -22.375

Token 587: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6372406482696533
    2. 'def' → logprob: -0.7622406482696533
    3. ' def' → logprob: -5.887240409851074
    4. '

' → logprob: -6.762240409851074
    5. '```' → logprob: -9.137240409851074
    6. ' 
' → logprob: -9.262240409851074
    7. '   ' → logprob: -9.512240409851074
    8. '  
' → logprob: -9.637240409851074
    9. ',
' → logprob: -9.762240409851074
    10. '<|end|>' → logprob: -9.887240409851074

Token 588: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3570273816585541
    2. '
' → logprob: -1.4820274114608765
    3. '   ' → logprob: -3.107027292251587
    4. ' def' → logprob: -4.107027530670166
    5. ' 
' → logprob: -5.107027530670166
    6. '    
' → logprob: -6.107027530670166
    7. '\n' → logprob: -6.607027530670166
    8. '  
' → logprob: -7.107027530670166
    9. '\' → logprob: -7.607027530670166
    10. ':' → logprob: -8.857027053833008

Token 589: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00038467496051453054
    2. '
' → logprob: -8.750384330749512
    3. ' def' → logprob: -9.375384330749512
    4. 'from' → logprob: -9.625384330749512
    5. 'import' → logprob: -10.500384330749512
    6. '   ' → logprob: -11.125384330749512
    7. '```' → logprob: -11.500384330749512
    8. 'de' → logprob: -11.875384330749512
    9. 'deque' → logprob: -12.250384330749512
    10. '    
' → logprob: -12.250384330749512

Token 590: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002043748099822551
    2. ' bfs' → logprob: -8.500204086303711
    3. 'build' → logprob: -14.500204086303711
    4. '_b' → logprob: -15.250204086303711
    5. 'B' → logprob: -16.37520408630371
    6. 'level' → logprob: -17.12520408630371
    7. '-b' → logprob: -18.25020408630371
    8. '	b' → logprob: -18.75020408630371
    9. '.b' → logprob: -19.12520408630371
    10. 'dfs' → logprob: -19.87520408630371

Token 591: '():
' (ID: 8595)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0654301866889
    2. '(start' → logprob: -3.190430164337158
    3. '(q' → logprob: -4.315430164337158
    4. '(' → logprob: -5.940430164337158
    5. '(S' → logprob: -6.440430164337158
    6. '(source' → logprob: -6.690430164337158
    7. '(queue' → logprob: -6.815430164337158
    8. '(node' → logprob: -7.315430164337158
    9. '(root' → logprob: -7.440430164337158
    10. '(level' → logprob: -7.690430164337158

Token 592: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020451019518077374
    2. ' queue' → logprob: -6.502045154571533
    3. '       ' → logprob: -8.752044677734375
    4. 'queue' → logprob: -9.252044677734375
    5. '(queue' → logprob: -9.377044677734375
    6. '	queue' → logprob: -9.627044677734375
    7. '    
' → logprob: -9.752044677734375
    8. '```' → logprob: -11.002044677734375
    9. '
' → logprob: -11.252044677734375
    10. 'q' → logprob: -12.002044677734375

Token 593: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10049057006835938
    2. 'queue' → logprob: -2.7254905700683594
    3. ' queue' → logprob: -4.100490570068359
    4. 'from' → logprob: -4.850490570068359
    5. '	queue' → logprob: -6.100490570068359
    6. 'q' → logprob: -6.475490570068359
    7. ' from' → logprob: -7.475490570068359
    8. 'import' → logprob: -7.850490570068359
    9. '```' → logprob: -8.85049057006836
    10. 'deque' → logprob: -8.97549057006836

Token 594: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759404301643372
    2. 'i' → logprob: -0.8259404301643372
    3. '	i' → logprob: -14.450940132141113
    4. ' ' → logprob: -15.325940132141113
    5. '_i' → logprob: -16.70094108581543
    6. '   ' → logprob: -16.82594108581543
    7. 'v' → logprob: -17.20094108581543
    8. '  ' → logprob: -17.45094108581543
    9. '_' → logprob: -18.20094108581543
    10. '(i' → logprob: -18.57594108581543

Token 595: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0041173421777784824
    2. 'in' → logprob: -5.504117488861084
    3. ',' → logprob: -10.629117012023926
    4. '   ' → logprob: -12.129117012023926
    5. '	in' → logprob: -12.879117012023926
    6. '  ' → logprob: -13.129117012023926
    7. ' ' → logprob: -13.379117012023926
    8. 'n' → logprob: -14.254117012023926
    9. 'In' → logprob: -15.004117012023926
    10. '_in' → logprob: -15.254117012023926

Token 596: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002036595979006961
    2. ' range' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.62520408630371
    4. ' ' → logprob: -17.50020408630371
    5. '  ' → logprob: -17.75020408630371
    6. 'size' → logprob: -18.00020408630371
    7. '(range' → logprob: -18.87520408630371
    8. '	range' → logprob: -19.25020408630371
    9. '    ' → logprob: -20.87520408630371
    10. 'level' → logprob: -21.12520408630371

Token 597: '(size' (ID: 15192)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0035159720573574305
    2. ' size' → logprob: -5.75351619720459
    3. '(size' → logprob: -8.00351619720459
    4. '   ' → logprob: -13.00351619720459
    5. '0' → logprob: -14.37851619720459
    6. '=size' → logprob: -15.12851619720459
    7. '
' → logprob: -15.87851619720459
    8. ',size' → logprob: -16.003515243530273
    9. 'len' → logprob: -16.128515243530273
    10. '	size' → logprob: -16.253515243530273

Token 598: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010105467401444912
    2. '):' → logprob: -4.635105609893799
    3. '       ' → logprob: -9.26010513305664
    4. '           ' → logprob: -9.26010513305664
    5. '   ' → logprob: -9.76010513305664
    6. ':
' → logprob: -10.13510513305664
    7. '):
' → logprob: -10.38510513305664
    8. ':' → logprob: -11.38510513305664
    9. ' ):
' → logprob: -11.51010513305664
    10. '():
' → logprob: -12.26010513305664

Token 599: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008945681154727936
    2. ' level' → logprob: -5.008945465087891
    3. 'level' → logprob: -6.883945465087891
    4. ',' → logprob: -7.883945465087891
    5. '
' → logprob: -8.13394546508789
    6. ' if' → logprob: -8.38394546508789
    7. '[level' → logprob: -9.38394546508789
    8. '(level' → logprob: -9.88394546508789
    9. '	       ' → logprob: -10.75894546508789
    10. ' 
' → logprob: -11.13394546508789

Token 600: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.018165510147809982
    2. ' level' → logprob: -4.018165588378906
    3. '           ' → logprob: -11.268165588378906
    4. '	level' → logprob: -13.268165588378906
    5. '   ' → logprob: -14.143165588378906
    6. '       ' → logprob: -15.893165588378906
    7. '(level' → logprob: -16.518165588378906
    8. 'if' → logprob: -17.393165588378906
    9. '_level' → logprob: -17.518165588378906
    10. '[level' → logprob: -17.518165588378906

Token 601: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -13.250004768371582
    3. '=' → logprob: -14.125004768371582
    4. '[I' → logprob: -14.375004768371582
    5. ' [' → logprob: -14.500004768371582
    6. ' =' → logprob: -15.375004768371582
    7. '[:]' → logprob: -15.625004768371582
    8. '   ' → logprob: -15.750004768371582
    9. '=i' → logprob: -16.0000057220459
    10. '```' → logprob: -16.3750057220459

Token 602: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31242281198501587
    2. ' =' → logprob: -1.687422752380371
    3. ']' → logprob: -2.687422752380371
    4. ']=' → logprob: -4.187422752380371
    5. ')' → logprob: -10.187422752380371
    6. ']=-' → logprob: -11.562422752380371
    7. ')=' → logprob: -11.937422752380371
    8. '   ' → logprob: -12.312422752380371
    9. ' ]' → logprob: -12.312422752380371
    10. '       ' → logprob: -12.437422752380371

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474581241607666
    2. '=' → logprob: -0.974581241607666
    3. '=-' → logprob: -7.599581241607666
    4. '=None' → logprob: -14.474580764770508
    5. '   ' → logprob: -14.599580764770508
    6. '           ' → logprob: -14.849580764770508
    7. '         ' → logprob: -15.099580764770508
    8. ']=-' → logprob: -15.224580764770508
    9. '=
' → logprob: -15.474580764770508
    10. ']=' → logprob: -15.474580764770508

Token 604: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -16.25
    3. '-inf' → logprob: -18.625
    4. '0' → logprob: -19.625
    5. '-f' → logprob: -20.0
    6. '-INF' → logprob: -21.125
    7. '   ' → logprob: -21.25
    8. '-depth' → logprob: -22.5
    9. '−' → logprob: -23.125
    10. '-ex' → logprob: -23.375

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -22.75
    5. '１' → logprob: -23.5
    6. '  ' → logprob: -23.625
    7. '' → logprob: -23.625
    8. '۱' → logprob: -23.625
    9. 'sys' → logprob: -23.75
    10. '
' → logprob: -24.0

Token 606: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7270951867103577
    2. '       ' → logprob: -1.102095127105713
    3. '   ' → logprob: -2.727095127105713
    4. 'level' → logprob: -3.227095127105713
    5. ' level' → logprob: -3.852095127105713
    6. '[' → logprob: -3.977095127105713
    7. '           ' → logprob: -5.102095127105713
    8. ' S' → logprob: -5.102095127105713
    9. ' 
' → logprob: -5.352095127105713
    10. 'S' → logprob: -5.352095127105713

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13724520802497864
    2. '
' → logprob: -2.6372451782226562
    3. 'level' → logprob: -4.012245178222656
    4. '   ' → logprob: -4.137245178222656
    5. ' level' → logprob: -4.637245178222656
    6. 'b' → logprob: -5.512245178222656
    7. ' 
' → logprob: -6.012245178222656
    8. '           ' → logprob: -6.387245178222656
    9. '0' → logprob: -6.762245178222656
    10. 'def' → logprob: -7.512245178222656

Token 608: ' level' (ID: 3211)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.619283139705658
    2. '
' → logprob: -2.2442831993103027
    3. '       ' → logprob: -2.2442831993103027
    4. 'queue' → logprob: -2.2442831993103027
    5. '0' → logprob: -2.3692831993103027
    6. ' queue' → logprob: -4.119283199310303
    7. '```' → logprob: -4.244283199310303
    8. 'level' (adapté à ' level') → logprob: -5.619283199310303
    9. '    
' → logprob: -5.994283199310303
    10. 'q' → logprob: -5.994283199310303

Token 609: '[S' (ID: 85566)
  Prédit: '[S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.000929091009311378
    2. '[' → logprob: -7.00092887878418
    3. '[T' → logprob: -11.12592887878418
    4. '[s' → logprob: -13.75092887878418
    5. ' [' → logprob: -14.12592887878418
    6. '[B' → logprob: -15.37592887878418
    7. '   ' → logprob: -16.12592887878418
    8. '[node' → logprob: -16.25092887878418
    9. '[start' → logprob: -16.50092887878418
    10. '```' → logprob: -16.50092887878418

Token 610: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005358144640922546
    2. ']=' → logprob: -5.3803582191467285
    3. '=' → logprob: -7.5053582191467285
    4. ' =' → logprob: -8.88035774230957
    5. ' ]' → logprob: -10.13035774230957
    6. ')' → logprob: -12.25535774230957
    7. '   ' → logprob: -14.13035774230957
    8. '[' → logprob: -14.25535774230957
    9. ']+=' → logprob: -14.25535774230957
    10. ',' → logprob: -15.13035774230957

Token 611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407880425453186
    2. ' =' → logprob: -0.9740787744522095
    3. '   ' → logprob: -14.474079132080078
    4. ',' → logprob: -14.849079132080078
    5. ' ' → logprob: -15.099079132080078
    6. '       ' → logprob: -16.349079132080078
    7. '    ' → logprob: -16.474079132080078
    8. ')' → logprob: -16.474079132080078
    9. '[' → logprob: -16.599079132080078
    10. '<|end|>' → logprob: -17.099079132080078

Token 612: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -22.125
    4. '   ' → logprob: -22.75
    5. '０' → logprob: -23.25
    6. '
' → logprob: -24.625
    7. '```' → logprob: -24.875
    8. '	' → logprob: -25.125
    9. '00' → logprob: -25.5
    10. '  ' → logprob: -25.875

Token 613: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. 's' → logprob: -21.0
    4. '   ' → logprob: -21.25
    5. '
' → logprob: -21.375
    6. '۰' → logprob: -21.75
    7. '０' → logprob: -22.125
    8. 'b' → logprob: -23.0
    9. 'start' → logprob: -23.25
    10. '00' → logprob: -23.375

Token 614: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030671951826661825
    2. '   ' → logprob: -6.3780670166015625
    3. '
' → logprob: -6.7530670166015625
    4. '        
' → logprob: -9.503067016601562
    5. ',' → logprob: -10.503067016601562
    6. '<|end|>' → logprob: -10.753067016601562
    7. '	' → logprob: -11.753067016601562
    8. 'queue' → logprob: -11.878067016601562
    9. '```' → logprob: -11.878067016601562
    10. '  
' → logprob: -11.878067016601562

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016599172726273537
    2. '   ' → logprob: -4.141599178314209
    3. '        
' → logprob: -9.01659870147705
    4. ' queue' → logprob: -9.14159870147705
    5. '
' → logprob: -9.39159870147705
    6. '	queue' → logprob: -9.51659870147705
    7. '```' → logprob: -9.89159870147705
    8. ' ' → logprob: -10.26659870147705
    9. '    
' → logprob: -10.39159870147705
    10. 'queue' → logprob: -10.76659870147705

Token 616: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.014484312385320663
    2. 'from' → logprob: -5.014484405517578
    3. 'q' → logprob: -5.514484405517578
    4. ' queue' → logprob: -6.514484405517578
    5. '   ' → logprob: -6.764484405517578
    6. 'deque' → logprob: -7.764484405517578
    7. 'import' → logprob: -8.014484405517578
    8. '```' → logprob: -8.639484405517578
    9. 'dq' → logprob: -9.764484405517578
    10. 'que' → logprob: -10.139484405517578

Token 617: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759445428848267
    2. ' =' → logprob: -0.8259445428848267
    3. '=sys' → logprob: -12.950944900512695
    4. 'collections' → logprob: -13.950944900512695
    5. '.append' → logprob: -14.700944900512695
    6. '=[]' → logprob: -14.950944900512695
    7. 'deque' → logprob: -15.075944900512695
    8. ' ' → logprob: -15.700944900512695
    9. '   ' → logprob: -15.700944900512695
    10. ' collections' → logprob: -16.075944900512695

Token 618: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0040785204619169235
    2. ' collections' → logprob: -5.504078388214111
    3. '[' → logprob: -16.754077911376953
    4. 'collect' → logprob: -17.379077911376953
    5. 'collection' → logprob: -18.379077911376953
    6. ' [' → logprob: -19.004077911376953
    7. '.collections' → logprob: -19.004077911376953
    8. 'sys' → logprob: -19.004077911376953
    9. '   ' → logprob: -19.379077911376953
    10. 'col' → logprob: -21.254077911376953

Token 619: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -0.0001310719089815393
    2. '.dequeue' → logprob: -9.250130653381348
    3. 'deque' → logprob: -10.500130653381348
    4. '.' → logprob: -12.500130653381348
    5. ' deque' → logprob: -12.875130653381348
    6. ' .' → logprob: -14.875130653381348
    7. '   ' → logprob: -15.250130653381348
    8. '	de' → logprob: -15.375130653381348
    9. '```' → logprob: -16.625131607055664
    10. '(de' → logprob: -16.875131607055664

Token 620: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0005156210972927511
    2. 'queue' → logprob: -7.875515460968018
    3. 'q' → logprob: -9.500515937805176
    4. 'deque' → logprob: -10.125515937805176
    5. 'qu' → logprob: -11.625515937805176
    6. 'ques' → logprob: -12.000515937805176
    7. 'queued' → logprob: -13.375515937805176
    8. 'ue' → logprob: -13.375515937805176
    9. 'qe' → logprob: -13.875515937805176
    10. 'quee' → logprob: -14.375515937805176

Token 621: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00048524985322728753
    2. '()
' → logprob: -7.750485420227051
    3. '()' → logprob: -9.87548542022705
    4. '(S' → logprob: -13.62548542022705
    5. '([(' → logprob: -14.00048542022705
    6. '[S' → logprob: -14.12548542022705
    7. '[' → logprob: -15.87548542022705
    8. '()

' → logprob: -16.750484466552734
    9. '(' → logprob: -17.375484466552734
    10. '([
' → logprob: -17.625484466552734

Token 622: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.1472419600977446e-06
    2. ' S' → logprob: -13.750000953674316
    3. '[S' → logprob: -17.750001907348633
    4. 'T' → logprob: -17.875001907348633
    5. '(S' → logprob: -18.000001907348633
    6. '	S' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.750001907348633
    8. ']' → logprob: -20.500001907348633
    9. '
' → logprob: -20.875001907348633
    10. '0' → logprob: -21.375001907348633

Token 623: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.014212043955922127
    2. '])' → logprob: -4.264212131500244
    3. '       ' → logprob: -10.389211654663086
    4. '])
' → logprob: -11.514211654663086
    5. '])

' → logprob: -12.889211654663086
    6. '   ' → logprob: -13.014211654663086
    7. ')
' → logprob: -13.514211654663086
    8. ' ])
' → logprob: -13.764211654663086
    9. '()])
' → logprob: -14.889211654663086
    10. ')' → logprob: -17.014211654663086

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.209963900502771e-05
    2. 'while' → logprob: -10.250092506408691
    3. '   ' → logprob: -10.500092506408691
    4. ' while' → logprob: -11.375092506408691
    5. '
' → logprob: -12.000092506408691
    6. '	while' → logprob: -12.250092506408691
    7. '<|end|>' → logprob: -13.250092506408691
    8. '	' → logprob: -13.625092506408691
    9. '```' → logprob: -13.625092506408691
    10. '        
' → logprob: -13.750092506408691

Token 625: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.011583416722714901
    2. ' while' → logprob: -4.51158332824707
    3. '       ' → logprob: -7.76158332824707
    4. '   ' → logprob: -9.51158332824707
    5. '	while' → logprob: -10.26158332824707
    6. 'While' → logprob: -15.26158332824707
    7. '```' → logprob: -15.63658332824707
    8. '
' → logprob: -15.76158332824707
    9. ' ' → logprob: -16.01158332824707
    10. 'for' → logprob: -17.38658332824707

Token 626: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.006716913543641567
    2. ' queue' → logprob: -5.006716728210449
    3. '(queue' → logprob: -13.63171672821045
    4. '	queue' → logprob: -15.50671672821045
    5. 'len' → logprob: -15.63171672821045
    6. ' ' → logprob: -18.756717681884766
    7. '.queue' → logprob: -18.881717681884766
    8. '   ' → logprob: -19.006717681884766
    9. 'que' → logprob: -19.381717681884766
    10. '  ' → logprob: -20.256717681884766

Token 627: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.005209802184253931
    2. ':' → logprob: -5.380209922790527
    3. '():
' → logprob: -8.005209922790527
    4. '):
' → logprob: -8.380209922790527
    5. '   ' → logprob: -11.505209922790527
    6. '```' → logprob: -12.880209922790527
    7. 'not' → logprob: -13.005209922790527
    8. '       ' → logprob: -13.255209922790527
    9. ']:
' → logprob: -13.505209922790527
    10. ':

' → logprob: -13.630209922790527

Token 628: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02657708153128624
    2. 'u' → logprob: -4.401576995849609
    3. 'v' → logprob: -5.401576995849609
    4. ' v' → logprob: -5.651576995849609
    5. ' u' → logprob: -5.776576995849609
    6. '	       ' → logprob: -6.776576995849609
    7. '```' → logprob: -7.526576995849609
    8. '       ' → logprob: -7.776576995849609
    9. '   ' → logprob: -8.15157699584961
    10. '    	   ' → logprob: -10.02657699584961

Token 629: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.02758069895207882
    2. 'v' → logprob: -3.777580738067627
    3. ' u' → logprob: -5.527580738067627
    4. ' v' → logprob: -8.652580261230469
    5. '   ' → logprob: -8.777580261230469
    6. 'node' → logprob: -11.152580261230469
    7. 'x' → logprob: -13.152580261230469
    8. '```' → logprob: -13.402580261230469
    9. 'current' → logprob: -13.902580261230469
    10. ' node' → logprob: -14.652580261230469

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327730417251587
    2. '=' → logprob: -1.313277244567871
    3. '   ' → logprob: -11.688277244567871
    4. ' ' → logprob: -13.438277244567871
    5. '.append' → logprob: -13.813277244567871
    6. '=u' → logprob: -13.813277244567871
    7. '=p' → logprob: -14.688277244567871
    8. '=int' → logprob: -14.813277244567871
    9. '=query' → logprob: -15.438277244567871
    10. '=user' → logprob: -15.688277244567871

Token 631: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.01416350994259119
    2. ' queue' → logprob: -4.264163494110107
    3. '	queue' → logprob: -17.014163970947266
    4. '(queue' → logprob: -17.764163970947266
    5. ' ' → logprob: -18.389163970947266
    6. 'que' → logprob: -18.514163970947266
    7. '   ' → logprob: -19.264163970947266
    8. '.queue' → logprob: -19.514163970947266
    9. '  ' → logprob: -21.139163970947266
    10. 'query' → logprob: -21.264163970947266

Token 632: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.25000286102295
    3. '.pop' → logprob: -14.75000286102295
    4. '=' → logprob: -16.250001907348633
    5. 'p' → logprob: -16.750001907348633
    6. '=p' → logprob: -16.750001907348633
    7. ' .' → logprob: -17.375001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '.append' → logprob: -19.000001907348633
    10. 'opleft' → logprob: -19.500001907348633

Token 633: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -5.7888184528565034e-05
    2. 'op' → logprob: -9.8750581741333
    3. 'ople' → logprob: -12.0000581741333
    4. 'append' → logprob: -16.125057220458984
    5. 'p' → logprob: -16.250057220458984
    6. 'opl' → logprob: -17.125057220458984
    7. 'left' → logprob: -17.375057220458984
    8. '.p' → logprob: -18.250057220458984
    9. '```' → logprob: -18.625057220458984
    10. 'opy' → logprob: -19.125057220458984

Token 634: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011242342181503773
    2. ')
' → logprob: -4.636242389678955
    3. '()
' → logprob: -6.886242389678955
    4. '
' → logprob: -8.636241912841797
    5. ')' → logprob: -8.886241912841797
    6. '               ' → logprob: -10.136241912841797
    7. 'for' → logprob: -10.636241912841797
    8. '()' → logprob: -10.886241912841797
    9. '       ' → logprob: -11.011241912841797
    10. '):
' → logprob: -11.386241912841797

Token 635: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.6537622034084052e-05
    2. ' for' → logprob: -11.50002670288086
    3. '       ' → logprob: -12.00002670288086
    4. 'for' → logprob: -12.25002670288086
    5. '	       ' → logprob: -13.75002670288086
    6. '<|end|>' → logprob: -13.75002670288086
    7. '               ' → logprob: -14.25002670288086
    8. '            
' → logprob: -14.37502670288086
    9. '```' → logprob: -14.87502670288086
    10. '<|end|>' → logprob: -15.25002670288086

Token 636: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018909110222011805
    2. '           ' → logprob: -6.751891136169434
    3. ' for' → logprob: -7.251891136169434
    4. '   ' → logprob: -12.126891136169434
    5. '               ' → logprob: -12.501891136169434
    6. '       ' → logprob: -13.251891136169434
    7. '	for' → logprob: -14.626891136169434
    8. '```' → logprob: -15.751891136169434
    9. '
' → logprob: -16.626890182495117
    10. '                   ' → logprob: -17.001890182495117

Token 637: ' i' (ID: 575)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00041732576210051775
    2. ' v' → logprob: -8.500417709350586
    3. '(v' → logprob: -8.500417709350586
    4. 'idx' → logprob: -12.625417709350586
    5. 'to' → logprob: -13.000417709350586
    6. 'e' → logprob: -13.625417709350586
    7. '[v' → logprob: -13.750417709350586
    8. 'vv' → logprob: -13.750417709350586
    9. 'i' → logprob: -14.625417709350586
    10. 'vx' → logprob: -15.375417709350586

Token 638: ',(' (ID: 27243)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2051365077495575
    2. ',v' → logprob: -1.7051365375518799
    3. ',u' → logprob: -5.830136299133301
    4. 'in' → logprob: -7.955136299133301
    5. ' ,' → logprob: -8.7051362991333
    6. ',j' → logprob: -9.3301362991333
    7. ',t' → logprob: -10.0801362991333
    8. ' in' → logprob: -10.5801362991333
    9. ',in' → logprob: -11.0801362991333
    10. ',b' → logprob: -12.0801362991333

Token 639: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.4855663721391466e-05
    2. '(v' → logprob: -11.250015258789062
    3. 'to' → logprob: -14.125015258789062
    4. 'w' → logprob: -14.250015258789062
    5. ' v' → logprob: -15.250015258789062
    6. 'vv' → logprob: -16.500015258789062
    7. '[v' → logprob: -16.500015258789062
    8. ',v' → logprob: -18.125015258789062
    9. '	v' → logprob: -19.000015258789062
    10. 'vi' → logprob: -19.250015258789062

Token 640: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001439459010725841
    2. ' ,' → logprob: -9.000144004821777
    3. ',w' → logprob: -12.000144004821777
    4. '_,' → logprob: -12.375144004821777
    5. ',c' → logprob: -12.750144004821777
    6. ',k' → logprob: -13.250144004821777
    7. ',d' → logprob: -13.250144004821777
    8. '[' → logprob: -14.250144004821777
    9. ',t' → logprob: -14.500144004821777
    10. ',l' → logprob: -15.000144004821777

Token 641: ',' (ID: 11)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0424976572394371
    2. ',u' → logprob: -4.292497634887695
    3. ',p' → logprob: -4.667497634887695
    4. ',' → logprob: -4.667497634887695
    5. ',l' → logprob: -5.667497634887695
    6. ',a' → logprob: -5.917497634887695
    7. ',v' → logprob: -6.917497634887695
    8. ')' → logprob: -7.042497634887695
    9. ',d' → logprob: -8.167497634887695
    10. ',c' → logprob: -8.542497634887695

Token 642: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.06302393972873688
    2. '_)' → logprob: -3.3130240440368652
    3. '_' → logprob: -4.938024044036865
    4. 'r' → logprob: -4.938024044036865
    5. '_rev' → logprob: -4.938024044036865
    6. '_r' → logprob: -7.313024044036865
    7. 'f' → logprob: -7.313024044036865
    8. ' rev' → logprob: -8.063023567199707
    9. '_]' → logprob: -8.063023567199707
    10. '_f' → logprob: -8.313023567199707

Token 643: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')=' → logprob: -14.750001907348633
    3. '_idx' → logprob: -15.125001907348633
    4. 'index' → logprob: -15.625001907348633
    5. ' )' → logprob: -16.000001907348633
    6. 'idx' → logprob: -16.250001907348633
    7. ')
' → logprob: -16.250001907348633
    8. ')is' → logprob: -16.875001907348633
    9. ')d' → logprob: -17.000001907348633
    10. '_index' → logprob: -17.000001907348633

Token 644: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.006006828509271e-05
    2. 'in' → logprob: -9.875080108642578
    3. ' )' → logprob: -10.750080108642578
    4. ' in' → logprob: -12.125080108642578
    5. ')
' → logprob: -14.500080108642578
    6. '   ' → logprob: -15.000080108642578
    7. '
' → logprob: -15.750080108642578
    8. ' ' → logprob: -16.000080108642578
    9. '  ' → logprob: -16.625080108642578
    10. ')=' → logprob: -17.000080108642578

Token 645: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.014175849966704845
    2. ' enumerate' → logprob: -4.264175891876221
    3. 'graph' → logprob: -11.514175415039062
    4. 'en' → logprob: -13.889175415039062
    5. 'in' → logprob: -14.389175415039062
    6. '
' → logprob: -15.014175415039062
    7. '   ' → logprob: -15.889175415039062
    8. 'enum' → logprob: -16.014175415039062
    9. '```' → logprob: -16.514175415039062
    10. 'enqueue' → logprob: -17.389175415039062

Token 646: '(graph' (ID: 51300)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0004527182609308511
    2. ' graph' → logprob: -7.750452518463135
    3. '(graph' → logprob: -10.750452995300293
    4. 'enumer' → logprob: -15.500452995300293
    5. '	graph' → logprob: -15.875452995300293
    6. ' ' → logprob: -16.500452041625977
    7. '   ' → logprob: -17.125452041625977
    8. '(' → logprob: -18.500452041625977
    9. ' (' → logprob: -18.625452041625977
    10. '  ' → logprob: -19.000452041625977

Token 647: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.320199877838604e-07
    2. 'u' → logprob: -16.0
    3. '[v' → logprob: -16.5
    4. '[' → logprob: -16.625
    5. ',u' → logprob: -16.75
    6. '   ' → logprob: -17.75
    7. '[
' → logprob: -20.5
    8. '	u' → logprob: -20.625
    9. '[node' → logprob: -20.625
    10. ' [' → logprob: -20.75

Token 648: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006785350851714611
    2. '):' → logprob: -5.0067853927612305
    3. '       ' → logprob: -10.50678539276123
    4. '   ' → logprob: -10.88178539276123
    5. '):
' → logprob: -11.38178539276123
    6. ')' → logprob: -13.25678539276123
    7. '           ' → logprob: -13.38178539276123
    8. ']):
' → logprob: -13.38178539276123
    9. ' ):
' → logprob: -13.38178539276123
    10. ']:
' → logprob: -13.63178539276123

Token 649: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013761838199570775
    2. '           ' → logprob: -6.876376152038574
    3. '	           ' → logprob: -9.126376152038574
    4. ' if' → logprob: -9.751376152038574
    5. ':
' → logprob: -10.251376152038574
    6. ':' → logprob: -10.376376152038574
    7. '		       ' → logprob: -10.751376152038574
    8. '):
' → logprob: -11.001376152038574
    9. '              ' → logprob: -11.126376152038574
    10. '	       ' → logprob: -11.501376152038574

Token 650: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7350491285324097
    2. '                   ' → logprob: -0.8600491285324097
    3. '               ' → logprob: -3.110049247741699
    4. '                ' → logprob: -3.235049247741699
    5. 'if' (adapté à ' if') → logprob: -4.610049247741699
    6. '                    ' → logprob: -7.235049247741699
    7. '                 ' → logprob: -7.235049247741699
    8. '                       ' → logprob: -7.485049247741699
    9. '	               ' → logprob: -7.860049247741699
    10. '           ' → logprob: -8.4850492477417

Token 651: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4750165641307831
    2. ' c' → logprob: -0.9750165939331055
    3. 'level' → logprob: -7.3500165939331055
    4. ' level' → logprob: -8.225016593933105
    5. '   ' → logprob: -11.600016593933105
    6. '	c' → logprob: -12.100016593933105
    7. '    ' → logprob: -12.225016593933105
    8. ' ' → logprob: -12.975016593933105
    9. '(c' → logprob: -13.475016593933105
    10. '(level' → logprob: -13.850016593933105

Token 652: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02327529713511467
    2. ' >' → logprob: -3.773275375366211
    3. '[' → logprob: -11.648275375366211
    4. ')>' → logprob: -12.148275375366211
    5. '   ' → logprob: -12.523275375366211
    6. ' ' → logprob: -13.148275375366211
    7. '           ' → logprob: -13.398275375366211
    8. '">' → logprob: -13.398275375366211
    9. 'and' → logprob: -13.648275375366211
    10. '  ' → logprob: -14.398275375366211

Token 653: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. 'level' → logprob: -21.375059127807617
    4. '   ' → logprob: -22.750059127807617
    5. '=' → logprob: -24.000059127807617
    6. '  ' → logprob: -24.125059127807617
    7. '[' → logprob: -25.375059127807617
    8. '>' → logprob: -25.500059127807617
    9. '۰' → logprob: -25.500059127807617
    10. '```' → logprob: -25.500059127807617

Token 654: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -22.125
    4. 'level' → logprob: -22.625
    5. '   ' → logprob: -22.875
    6. '  ' → logprob: -24.375
    7. '```' → logprob: -25.0
    8. '۰' → logprob: -25.125
    9. '=' → logprob: -25.125
    10. '  ' → logprob: -25.5

Token 655: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07891171425580978
    2. 'and' → logprob: -2.578911781311035
    3. '               ' → logprob: -11.078911781311035
    4. '                   ' → logprob: -12.328911781311035
    5. '                ' → logprob: -14.078911781311035
    6. '           ' → logprob: -14.828911781311035
    7. ' ' → logprob: -15.703911781311035
    8. '                       ' → logprob: -15.953911781311035
    9. '	and' → logprob: -15.953911781311035
    10. ',' → logprob: -16.32891082763672

Token 656: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.005233763717114925
    2. ' level' → logprob: -5.2552337646484375
    3. '(level' → logprob: -17.005233764648438
    4. '	level' → logprob: -17.630233764648438
    5. ' ' → logprob: -19.380233764648438
    6. '[level' → logprob: -19.880233764648438
    7. '   ' → logprob: -20.005233764648438
    8. '  ' → logprob: -20.505233764648438
    9. 'levels' → logprob: -20.880233764648438
    10. '-level' → logprob: -21.255233764648438

Token 657: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. 'v' → logprob: -15.125
    3. '[' → logprob: -17.875
    4. ' [' → logprob: -18.875
    5. '[
' → logprob: -19.25
    6. '<v' → logprob: -19.625
    7. '[u' → logprob: -19.625
    8. '   ' → logprob: -19.875
    9. '```' → logprob: -20.125
    10. '(v' → logprob: -20.5

Token 658: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.024145519360899925
    2. '[u' → logprob: -3.8991456031799316
    3. '==' → logprob: -5.899145603179932
    4. '==-' → logprob: -7.899145603179932
    5. '[' → logprob: -8.024145126342773
    6. 'v' → logprob: -9.899145126342773
    7. ']==' → logprob: -10.024145126342773
    8. ' ==' → logprob: -10.899145126342773
    9. ']' → logprob: -10.899145126342773
    10. '<' → logprob: -11.399145126342773

Token 659: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26503005623817444
    2. '<' → logprob: -2.2650301456451416
    3. '==-' → logprob: -2.2650301456451416
    4. ' ==' → logprob: -3.8900301456451416
    5. '[u' → logprob: -6.2650299072265625
    6. '[' → logprob: -6.2650299072265625
    7. '[v' → logprob: -8.140029907226562
    8. '=' → logprob: -8.765029907226562
    9. ']==' → logprob: -9.015029907226562
    10. '==
' → logprob: -9.015029907226562

Token 660: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -19.000017166137695
    4. '   ' → logprob: -20.375017166137695
    5. '```' → logprob: -20.625017166137695
    6. '=' → logprob: -22.125017166137695
    7. '1' → logprob: -22.125017166137695
    8. '０' → logprob: -22.250017166137695
    9. ' ' → logprob: -22.375017166137695
    10. '00' → logprob: -22.625017166137695

Token 661: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '۰' → logprob: -17.75
    4. '```' → logprob: -20.5
    5. '０' → logprob: -20.75
    6. '00' → logprob: -21.625
    7. 'zero' → logprob: -22.375
    8. '000' → logprob: -22.375
    9. '   ' → logprob: -22.625
    10. '٠' → logprob: -22.625

Token 662: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.025156592950224876
    2. '                   ' → logprob: -4.650156497955322
    3. ':' → logprob: -4.900156497955322
    4. '               ' → logprob: -5.400156497955322
    5. '           ' → logprob: -6.400156497955322
    6. '                       ' → logprob: -7.025156497955322
    7. '                           ' → logprob: -8.40015697479248
    8. '):
' → logprob: -8.65015697479248
    9. ' :
' → logprob: -9.40015697479248
    10. '=' → logprob: -9.65015697479248

Token 663: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005675395485013723
    2. '                       ' → logprob: -6.005675315856934
    3. ':
' → logprob: -6.880675315856934
    4. ' and' → logprob: -7.005675315856934
    5. '               ' → logprob: -7.005675315856934
    6. '                           ' → logprob: -8.880675315856934
    7. '                  ' → logprob: -10.005675315856934
    8. '                    ' → logprob: -10.505675315856934
    9. ',' → logprob: -10.755675315856934
    10. '           ' → logprob: -11.005675315856934

Token 664: ' level' (ID: 3211)
  Prédit: ' level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.7262255549430847
    2. 'level' (adapté à ' level') → logprob: -0.7262255549430847
    3. '                   ' → logprob: -3.4762256145477295
    4. '                       ' → logprob: -6.47622537612915
    5. '	level' → logprob: -10.851225852966309
    6. '               ' → logprob: -11.476225852966309
    7. '(level' → logprob: -11.601225852966309
    8. '[level' → logprob: -11.851225852966309
    9. '           ' → logprob: -11.976225852966309
    10. '                           ' → logprob: -12.101225852966309

Token 665: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.723352049040841e-06
    2. 'v' → logprob: -12.375004768371582
    3. '                   ' → logprob: -15.000004768371582
    4. '=v' → logprob: -17.625003814697266
    5. '[' → logprob: -18.000003814697266
    6. '[
' → logprob: -18.500003814697266
    7. '=' → logprob: -18.625003814697266
    8. '[u' → logprob: -19.250003814697266
    9. '<v' → logprob: -19.500003814697266
    10. '   ' → logprob: -19.625003814697266

Token 666: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0392911359667778
    2. ']=' → logprob: -3.9142911434173584
    3. '[v' → logprob: -4.164290904998779
    4. '=' → logprob: -5.914290904998779
    5. ' =' → logprob: -8.539291381835938
    6. '[u' → logprob: -9.539291381835938
    7. 'v' → logprob: -10.664291381835938
    8. '[' → logprob: -10.914291381835938
    9. '=v' → logprob: -11.914291381835938
    10. ' ]' → logprob: -12.414291381835938

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132653534412384
    2. ' =' → logprob: -1.313265323638916
    3. '                   ' → logprob: -13.938265800476074
    4. '   ' → logprob: -14.563265800476074
    5. '                       ' → logprob: -14.688265800476074
    6. '                           ' → logprob: -15.188265800476074
    7. ' ' → logprob: -15.438265800476074
    8. '[' → logprob: -15.438265800476074
    9. '=v' → logprob: -15.563265800476074
    10. '=
' → logprob: -15.688265800476074

Token 668: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.02975442260503769
    2. ' level' → logprob: -3.529754400253296
    3. '	level' → logprob: -13.279754638671875
    4. '   ' → logprob: -14.029754638671875
    5. '(level' → logprob: -14.904754638671875
    6. '[level' → logprob: -15.154754638671875
    7. '    ' → logprob: -15.154754638671875
    8. ' ' → logprob: -15.779754638671875
    9. '0' → logprob: -16.029754638671875
    10. '                   ' → logprob: -16.279754638671875

Token 669: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.4660462737083435
    2. 'level' → logprob: -1.4660463333129883
    3. '[level' → logprob: -1.9660463333129883
    4. ' level' → logprob: -6.591046333312988
    5. '[' → logprob: -9.216046333312988
    6. ' [' → logprob: -9.466046333312988
    7. 'u' → logprob: -9.841046333312988
    8. '   ' → logprob: -10.216046333312988
    9. '0' → logprob: -11.841046333312988
    10. '           ' → logprob: -12.466046333312988

Token 670: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49322566390037537
    2. ']+' → logprob: -1.4932256937026978
    3. '+' → logprob: -1.8682256937026978
    4. ' +' → logprob: -4.618225574493408
    5. ' ]' → logprob: -8.368226051330566
    6. '[' → logprob: -9.868226051330566
    7. '+]' → logprob: -10.868226051330566
    8. '                   ' → logprob: -11.118226051330566
    9. '[level' → logprob: -11.118226051330566
    10. ')' → logprob: -11.243226051330566

Token 671: ' +' (ID: 659)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.36328980326652527
    2. '+' → logprob: -1.9882898330688477
    3. '[level' → logprob: -2.1132898330688477
    4. ' +' → logprob: -3.3632898330688477
    5. '                   ' → logprob: -5.613289833068848
    6. ' level' → logprob: -5.863289833068848
    7. '[u' → logprob: -6.113289833068848
    8. '1' → logprob: -7.238289833068848
    9. '(level' → logprob: -7.488289833068848
    10. 'u' → logprob: -7.613289833068848

Token 672: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.125015258789062
    4. '                   ' → logprob: -17.625015258789062
    5. '                       ' → logprob: -18.000015258789062
    6. '```' → logprob: -18.625015258789062
    7. '                           ' → logprob: -19.500015258789062
    8. '                                           ' → logprob: -19.625015258789062
    9. '
' → logprob: -20.500015258789062
    10. '                               ' → logprob: -20.625015258789062

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.500001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '
' → logprob: -20.375001907348633
    6. '[' → logprob: -20.875001907348633
    7. '``' → logprob: -21.625001907348633
    8. '  ' → logprob: -22.000001907348633
    9. '<|end|>' → logprob: -22.062501907348633
    10. '' → logprob: -22.250001907348633

Token 674: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.309382373117842e-05
    2. '               ' → logprob: -11.250033378601074
    3. '           ' → logprob: -12.125033378601074
    4. '				' → logprob: -12.375033378601074
    5. '                       ' → logprob: -12.750033378601074
    6. ',' → logprob: -13.250033378601074
    7. '                  ' → logprob: -13.625033378601074
    8. '       ' → logprob: -13.875033378601074
    9. '<|end|>' → logprob: -14.250033378601074
    10. '                    ' → logprob: -14.625033378601074

Token 675: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00010831133840838447
    2. '               ' → logprob: -10.37510871887207
    3. '                       ' → logprob: -10.50010871887207
    4. '           ' → logprob: -10.62510871887207
    5. 'queue' → logprob: -12.00010871887207
    6. '```' → logprob: -12.00010871887207
    7. '                  ' → logprob: -12.87510871887207
    8. '
' → logprob: -13.00010871887207
    9. '                    ' → logprob: -13.00010871887207
    10. ' queue' → logprob: -13.37510871887207

Token 676: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0007121934904716909
    2. ' queue' → logprob: -7.2507123947143555
    3. '                   ' → logprob: -13.125712394714355
    4. '```' → logprob: -15.875712394714355
    5. '	queue' → logprob: -16.62571144104004
    6. '                       ' → logprob: -17.00071144104004
    7. '.queue' → logprob: -19.00071144104004
    8. '(queue' → logprob: -19.00071144104004
    9. '   ' → logprob: -20.00071144104004
    10. '               ' → logprob: -20.12571144104004

Token 677: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.0126840758603066e-05
    2. '.' → logprob: -11.000040054321289
    3. 'append' → logprob: -11.000040054321289
    4. '.enqueue' → logprob: -13.125040054321289
    5. ' .' → logprob: -13.625040054321289
    6. '.Append' → logprob: -13.875040054321289
    7. '.extend' → logprob: -13.875040054321289
    8. '_append' → logprob: -14.500040054321289
    9. ' append' → logprob: -14.875040054321289
    10. ').' → logprob: -15.875040054321289

Token 678: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.375005722045898
    3. 'v' → logprob: -13.375005722045898
    4. '((' → logprob: -15.500005722045898
    5. ' (' → logprob: -18.1250057220459
    6. '(
' → logprob: -18.6250057220459
    7. '(V' → logprob: -19.6250057220459
    8. '	v' → logprob: -20.5000057220459
    9. '(

' → logprob: -21.6250057220459
    10. '[v' → logprob: -21.7500057220459

Token 679: ')
' (ID: 446)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.3349020481109619
    2. 'v' → logprob: -1.834902048110962
    3. ')' → logprob: -2.084902048110962
    4. '[v' → logprob: -8.334901809692383
    5. ')v' → logprob: -8.459901809692383
    6. ',v' → logprob: -9.834901809692383
    7. ')
' → logprob: -10.084901809692383
    8. ' v' → logprob: -10.209901809692383
    9. '
' → logprob: -10.959901809692383
    10. '	v' → logprob: -11.334901809692383

Token 680: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 681: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2858807146549225
    2. '   ' → logprob: -1.7858806848526
    3. 'return' (adapté à ' return') → logprob: -2.7858808040618896
    4. ' return' → logprob: -4.4108805656433105
    5. '       ' → logprob: -5.4108805656433105
    6. ' ' → logprob: -7.1608805656433105
    7. ' def' → logprob: -7.4108805656433105
    8. 'while' → logprob: -8.035881042480469
    9. '           ' → logprob: -8.285881042480469
    10. '```' → logprob: -8.660881042480469

Token 682: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.7728631496429443
    2. 'None' → logprob: -1.0228631496429443
    3. 'True' → logprob: -2.2728631496429443
    4. ' None' → logprob: -3.5228631496429443
    5. ' True' → logprob: -4.147863388061523
    6. ' level' → logprob: -4.147863388061523
    7. 'False' → logprob: -4.647863388061523
    8. 'bool' → logprob: -6.647863388061523
    9. '(level' → logprob: -6.647863388061523
    10. 'len' → logprob: -7.022863388061523

Token 683: '[T' (ID: 51540)
  Prédit: '[T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[T' → logprob: -0.0011517672101035714
    2. '<|end|>' → logprob: -7.7511515617370605
    3. 'T' → logprob: -8.251152038574219
    4. '[' → logprob: -8.876152038574219
    5. '```' → logprob: -9.126152038574219
    6. '[S' → logprob: -9.126152038574219
    7. '[end' → logprob: -10.376152038574219
    8. '[-' → logprob: -10.626152038574219
    9. ')' → logprob: -11.376152038574219
    10. '[size' → logprob: -11.376152038574219

Token 684: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021621601190418005
    2. ']>=' → logprob: -6.627161979675293
    3. ']>' → logprob: -7.752161979675293
    4. ']!=' → logprob: -8.252161979675293
    5. ' ]' → logprob: -9.502161979675293
    6. '])' → logprob: -10.252161979675293
    7. '[' → logprob: -11.377161979675293
    8. ')' → logprob: -11.877161979675293
    9. ']==' → logprob: -12.127161979675293
    10. ']
' → logprob: -12.252161979675293

Token 685: ' !=' (ID: 1666)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.12861190736293793
    2. '>=' → logprob: -2.2536118030548096
    3. '<|end|>' → logprob: -4.253612041473389
    4. ' >' → logprob: -7.628612041473389
    5. ')>=' → logprob: -8.00361156463623
    6. ' !=' → logprob: -8.25361156463623
    7. '>' → logprob: -9.25361156463623
    8. '   ' → logprob: -9.37861156463623
    9. ']>=' → logprob: -9.37861156463623
    10. '[' → logprob: -10.50361156463623

Token 686: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.130576806142926e-05
    2. ' -' → logprob: -10.375031471252441
    3. ' ' → logprob: -17.500030517578125
    4. '   ' → logprob: -18.750030517578125
    5. '−' → logprob: -20.375030517578125
    6. '  ' → logprob: -21.750030517578125
    7. '```' → logprob: -22.000030517578125
    8. '0' → logprob: -22.750030517578125
    9. '	' → logprob: -23.875030517578125
    10. '-​' → logprob: -24.000030517578125

Token 687: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '2' → logprob: -15.500000953674316
    5. '0' → logprob: -16.125001907348633
    6. '-' → logprob: -17.312501907348633
    7. '``' → logprob: -17.437501907348633
    8. '
' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.687501907348633
    10. '１' → logprob: -18.750001907348633

Token 688: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19964371621608734
    2. '   ' → logprob: -2.449643611907959
    3. ')' → logprob: -3.074643611907959
    4. '```' → logprob: -3.699643611907959
    5. '       ' → logprob: -4.324643611907959
    6. '<|end|>' → logprob: -5.074643611907959
    7. '):' → logprob: -6.574643611907959
    8. '    ' → logprob: -8.074644088745117
    9. ':return' → logprob: -8.324644088745117
    10. '(' → logprob: -8.449644088745117

Token 689: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4000374972820282
    2. 'def' → logprob: -1.9000375270843506
    3. '```' → logprob: -2.0250375270843506
    4. ' def' → logprob: -4.4000372886657715
    5. ':' → logprob: -4.5250372886657715
    6. '       ' → logprob: -5.0250372886657715
    7. '    ' → logprob: -5.5250372886657715
    8. '`' → logprob: -6.0250372886657715
    9. '<|end|>' → logprob: -6.2750372886657715
    10. 'b' → logprob: -6.2750372886657715

Token 690: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.034628886729478836
    2. ' def' → logprob: -3.7846288681030273
    3. '   ' → logprob: -4.784628868103027
    4. ' while' → logprob: -6.284628868103027
    5. '```' → logprob: -7.909628868103027
    6. 'while' → logprob: -9.159628868103027
    7. ' 
' → logprob: -9.159628868103027
    8. ' ' → logprob: -9.534628868103027
    9. ' for' → logprob: -9.659628868103027
    10. '       ' → logprob: -9.659628868103027

Token 691: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0012496389681473374
    2. ' dfs' → logprob: -7.00124979019165
    3. 'din' → logprob: -8.001249313354492
    4. 'send' → logprob: -13.626249313354492
    5. 'df' → logprob: -14.251249313354492
    6. 'def' → logprob: -14.501249313354492
    7. 'd' → logprob: -15.001249313354492
    8. 'flow' → logprob: -15.876249313354492
    9. 'dig' → logprob: -16.376249313354492
    10. ' din' → logprob: -16.876249313354492

Token 692: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0003963569179177284
    2. '(v' → logprob: -8.000396728515625
    3. '(s' → logprob: -10.875396728515625
    4. '(node' → logprob: -10.875396728515625
    5. '(' → logprob: -11.375396728515625
    6. ' (' → logprob: -11.750396728515625
    7. '(
' → logprob: -14.250396728515625
    8. '(S' → logprob: -14.375396728515625
    9. '   ' → logprob: -14.500396728515625
    10. '(graph' → logprob: -14.625396728515625

Token 693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010124455438926816
    2. ',u' → logprob: -7.251012325286865
    3. ',v' → logprob: -8.376012802124023
    4. ' ,' → logprob: -10.251012802124023
    5. '   ' → logprob: -11.001012802124023
    6. '       ' → logprob: -11.876012802124023
    7. ',int' → logprob: -12.501012802124023
    8. 'u' → logprob: -13.751012802124023
    9. ',k' → logprob: -13.876012802124023
    10. ',i' → logprob: -14.251012802124023

Token 694: ' flow' (ID: 7845)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0017703777411952615
    2. 't' → logprob: -6.501770496368408
    3. 'flow' → logprob: -8.50177001953125
    4. 'f' → logprob: -10.25177001953125
    5. ' T' → logprob: -10.87677001953125
    6. 'F' → logprob: -13.00177001953125
    7. '   ' → logprob: -13.12677001953125
    8. '1' → logprob: -13.37677001953125
    9. 'level' → logprob: -13.62677001953125
    10. 'min' → logprob: -13.62677001953125

Token 695: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014168102643452585
    2. ',u' → logprob: -9.875142097473145
    3. ' ,' → logprob: -10.000142097473145
    4. '   ' → logprob: -10.875142097473145
    5. '_,' → logprob: -12.125142097473145
    6. ',size' → logprob: -12.625142097473145
    7. ',k' → logprob: -12.750142097473145
    8. '):
' → logprob: -12.875142097473145
    9. ',int' → logprob: -13.000142097473145
    10. ',n' → logprob: -13.250142097473145

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015617369674146175
    2. '   ' → logprob: -4.265617370605469
    3. '```' → logprob: -7.765617370605469
    4. ',' → logprob: -8.640617370605469
    5. '           ' → logprob: -9.015617370605469
    6. '        
' → logprob: -9.265617370605469
    7. ' 
' → logprob: -9.515617370605469
    8. ' if' → logprob: -9.640617370605469
    9. '    ' → logprob: -9.765617370605469
    10. '        ' → logprob: -9.890617370605469

Token 697: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6599324941635132
    2. ' if' → logprob: -0.7849324941635132
    3. '   ' → logprob: -3.9099326133728027
    4. '       ' → logprob: -5.284932613372803
    5. 'for' → logprob: -7.659932613372803
    6. ' for' → logprob: -7.784932613372803
    7. '```' → logprob: -8.159932136535645
    8. '    ' → logprob: -8.159932136535645
    9. '
' → logprob: -9.409932136535645
    10. '           ' → logprob: -9.534932136535645

Token 698: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04858839511871338
    2. ' u' → logprob: -3.048588275909424
    3. '   ' → logprob: -14.423588752746582
    4. '	u' → logprob: -15.048588752746582
    5. ' ' → logprob: -16.048587799072266
    6. '  ' → logprob: -17.423587799072266
    7. '(u' → logprob: -17.673587799072266
    8. ' not' → logprob: -17.923587799072266
    9. '    ' → logprob: -18.298587799072266
    10. '_u' → logprob: -18.423587799072266

Token 699: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759552121162415
    2. '==' → logprob: -0.8259552121162415
    3. ')==' → logprob: -12.200955390930176
    4. ')' → logprob: -12.700955390930176
    5. '=' → logprob: -13.075955390930176
    6. ']==' → logprob: -13.325955390930176
    7. '==
' → logprob: -13.575955390930176
    8. ',' → logprob: -14.450955390930176
    9. '===' → logprob: -14.450955390930176
    10. '   ' → logprob: -14.950955390930176

Token 700: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -7.541112427134067e-05
    2. ' T' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.500075340270996
    4. '	T' → logprob: -18.625076293945312
    5. ' ' → logprob: -20.500076293945312
    6. '
' → logprob: -20.500076293945312
    7. '  ' → logprob: -20.625076293945312
    8. '       ' → logprob: -21.250076293945312
    9. '    ' → logprob: -22.625076293945312
    10. '=T' → logprob: -23.000076293945312

Token 701: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9045655727386475
    2. ':return' → logprob: -1.1545655727386475
    3. ' or' → logprob: -1.6545655727386475
    4. ':
' → logprob: -3.2795655727386475
    5. '       ' → logprob: -3.2795655727386475
    6. '   ' → logprob: -4.654565811157227
    7. 'return' → logprob: -6.904565811157227
    8. '           ' → logprob: -7.154565811157227
    9. '	' → logprob: -7.404565811157227
    10. ' and' → logprob: -7.654565811157227

Token 702: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28257855772972107
    2. ' return' → logprob: -2.032578468322754
    3. '           ' → logprob: -2.657578468322754
    4. 'return' → logprob: -3.657578468322754
    5. '   ' → logprob: -4.032578468322754
    6. ':return' → logprob: -7.282578468322754
    7. ':
' → logprob: -8.782578468322754
    8. '               ' → logprob: -8.907578468322754
    9. ':' → logprob: -8.907578468322754
    10. '	return' → logprob: -9.782578468322754

Token 703: ' return' (ID: 622)
  Prédit: ' flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flow' → logprob: -0.0005247961380518973
    2. 'flow' → logprob: -7.875524997711182
    3. ' return' → logprob: -8.875524520874023
    4. 'return' (adapté à ' return') → logprob: -12.750524520874023
    5. '(flow' → logprob: -13.875524520874023
    6. '       ' → logprob: -14.500524520874023
    7. '   ' → logprob: -15.250524520874023
    8. ' ' → logprob: -15.625524520874023
    9. '.flow' → logprob: -16.750524520874023
    10. '_flow' → logprob: -17.250524520874023

Token 704: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.3132634460926056
    2. ' flow' → logprob: -1.3132634162902832
    3. '(flow' → logprob: -13.313263893127441
    4. '.flow' → logprob: -17.938262939453125
    5. '_flow' → logprob: -18.188262939453125
    6. '   ' → logprob: -18.313262939453125
    7. ' ' → logprob: -18.438262939453125
    8. 'Flow' → logprob: -19.688262939453125
    9. 'flux' → logprob: -19.813262939453125
    10. '
' → logprob: -19.813262939453125

Token 705: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8424976468086243
    2. '       ' → logprob: -0.9674976468086243
    3. '
' → logprob: -2.2174975872039795
    4. '   ' → logprob: -3.7174975872039795
    5. 'if' → logprob: -3.7174975872039795
    6. '<|end|>' → logprob: -3.8424975872039795
    7. '           ' → logprob: -5.592497825622559
    8. '        
' → logprob: -6.592497825622559
    9. '<|end|>' → logprob: -7.217497825622559
    10. '               ' → logprob: -7.217497825622559

Token 706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16016897559165955
    2. '
' → logprob: -2.1601688861846924
    3. '   ' → logprob: -4.0351691246032715
    4. ' 
' → logprob: -5.4101691246032715
    5. '<|end|>' → logprob: -5.5351691246032715
    6. '  
' → logprob: -6.1601691246032715
    7. '        
' → logprob: -6.4101691246032715
    8. '    
' → logprob: -7.0351691246032715
    9. '	' → logprob: -8.285168647766113
    10. ' if' → logprob: -8.410168647766113

Token 707: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13260520994663239
    2. '   ' → logprob: -3.0076053142547607
    3. ' for' → logprob: -3.0076053142547607
    4. '       ' → logprob: -3.7576053142547607
    5. '	for' → logprob: -6.257605075836182
    6. '           ' → logprob: -10.50760555267334
    7. ' ' → logprob: -10.75760555267334
    8. '	' → logprob: -11.38260555267334
    9. '	   ' → logprob: -11.63260555267334
    10. 'idx' → logprob: -11.63260555267334

Token 708: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19144488871097565
    2. ' i' → logprob: -2.1914448738098145
    3. 'iter' → logprob: -3.0664448738098145
    4. ' iter' → logprob: -4.1914448738098145
    5. ' ' → logprob: -8.066445350646973
    6. 'idx' → logprob: -9.316445350646973
    7. '   ' → logprob: -9.566445350646973
    8. 'it' → logprob: -10.316445350646973
    9. '_i' → logprob: -10.316445350646973
    10. '_iter' → logprob: -10.316445350646973

Token 709: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12696149945259094
    2. 'in' → logprob: -2.1269614696502686
    3. ',' → logprob: -11.126961708068848
    4. ' ' → logprob: -11.626961708068848
    5. '[' → logprob: -12.501961708068848
    6. '   ' → logprob: -13.251961708068848
    7. '	in' → logprob: -13.751961708068848
    8. '
' → logprob: -14.251961708068848
    9. '[in' → logprob: -14.626961708068848
    10. '=' → logprob: -14.751961708068848

Token 710: ' range' (ID: 3352)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.23734056949615479
    2. ' iter' → logprob: -1.7373405694961548
    3. 'range' → logprob: -3.4873404502868652
    4. ' range' → logprob: -5.362340450286865
    5. ' ' → logprob: -11.862340927124023
    6. '(iter' → logprob: -12.362340927124023
    7. '0' → logprob: -12.987340927124023
    8. '	iter' → logprob: -13.112340927124023
    9. 'in' → logprob: -14.487340927124023
    10. '   ' → logprob: -14.987340927124023

Token 711: '(iter' (ID: 61014)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.01821444369852543
    2. ' iter' → logprob: -4.018214225769043
    3. '(iter' → logprob: -9.768214225769043
    4. '	iter' → logprob: -11.893214225769043
    5. '   ' → logprob: -15.018214225769043
    6. 'len' → logprob: -16.89321517944336
    7. '_iter' → logprob: -17.39321517944336
    8. ' ' → logprob: -17.39321517944336
    9. '.iter' → logprob: -19.76821517944336
    10. '  ' → logprob: -19.89321517944336

Token 712: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.618001053633634e-05
    2. '[' → logprob: -10.875025749206543
    3. 'u' → logprob: -12.375025749206543
    4. '[i' → logprob: -12.875025749206543
    5. '(u' → logprob: -16.50002670288086
    6. ' [' → logprob: -16.50002670288086
    7. '[len' → logprob: -16.75002670288086
    8. '   ' → logprob: -17.12502670288086
    9. ' u' → logprob: -17.25002670288086
    10. '	u' → logprob: -17.37502670288086

Token 713: '],' (ID: 2155)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.17152629792690277
    2. ',' → logprob: -1.921526312828064
    3. '[' → logprob: -5.4215264320373535
    4. ',u' → logprob: -5.9215264320373535
    5. ' ,' → logprob: -6.4215264320373535
    6. ',len' → logprob: -6.6715264320373535
    7. '   ' → logprob: -8.171525955200195
    8. '[i' → logprob: -8.421525955200195
    9. 'len' → logprob: -8.546525955200195
    10. '[len' → logprob: -9.421525955200195

Token 714: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007130279554985464
    2. ' len' → logprob: -7.250712871551514
    3. '   ' → logprob: -13.250713348388672
    4. '	len' → logprob: -14.625713348388672
    5. '(len' → logprob: -14.875713348388672
    6. ',len' → logprob: -15.500713348388672
    7. ' ' → logprob: -16.250713348388672
    8. '       ' → logprob: -16.500713348388672
    9. '[len' → logprob: -16.875713348388672
    10. '  ' → logprob: -17.000713348388672

Token 715: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.0031781906727701426
    2. 'graph' → logprob: -5.753178119659424
    3. ' graph' → logprob: -15.378178596496582
    4. '	graph' → logprob: -15.628178596496582
    5. '(' → logprob: -17.253177642822266
    6. ' (' → logprob: -17.378177642822266
    7. '   ' → logprob: -18.753177642822266
    8. '(game' → logprob: -20.378177642822266
    9. '```' → logprob: -20.378177642822266
    10. ' ' → logprob: -20.628177642822266

Token 716: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.512236498361744e-07
    2. 'u' → logprob: -14.500000953674316
    3. '(u' → logprob: -18.125
    4. '[' → logprob: -18.5
    5. '```' → logprob: -21.375
    6. '[
' → logprob: -21.5
    7. ' [' → logprob: -21.5
    8. '	u' → logprob: -21.5
    9. '[user' → logprob: -21.75
    10. ')[' → logprob: -21.75

Token 717: '])):
' (ID: 145266)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.08213049173355103
    2. '[u' → logprob: -2.5821304321289062
    3. '])):
' → logprob: -6.207130432128906
    4. ')):' → logprob: -7.207130432128906
    5. ']):
' → logprob: -9.082130432128906
    6. '   ' → logprob: -9.082130432128906
    7. ')):
' → logprob: -9.707130432128906
    8. '):
' → logprob: -9.832130432128906
    9. '[' → logprob: -10.082130432128906
    10. ' ' → logprob: -10.332130432128906

Token 718: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32975253462791443
    2. '           ' → logprob: -1.3297525644302368
    3. '	       ' → logprob: -5.204752445220947
    4. '   ' → logprob: -5.829752445220947
    5. '	   ' → logprob: -6.454752445220947
    6. '               ' → logprob: -6.704752445220947
    7. ':' → logprob: -7.079752445220947
    8. '[' → logprob: -7.329752445220947
    9. '	' → logprob: -7.579752445220947
    10. ',' → logprob: -7.829752445220947

Token 719: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.04210512712597847
    2. '           ' → logprob: -3.792105197906494
    3. '       ' → logprob: -4.792105197906494
    4. 'e' → logprob: -5.792105197906494
    5. ' v' → logprob: -6.167105197906494
    6. 'u' → logprob: -6.542105197906494
    7. '(v' → logprob: -6.792105197906494
    8. '   ' → logprob: -7.167105197906494
    9. 'i' → logprob: -8.167104721069336
    10. 'edge' → logprob: -8.417104721069336

Token 720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01246008649468422
    2. ',v' → logprob: -4.637460231781006
    3. ',u' → logprob: -7.012460231781006
    4. ',c' → logprob: -7.262460231781006
    5. ' ,' → logprob: -8.637459754943848
    6. '=' → logprob: -9.012459754943848
    7. ',i' → logprob: -9.137459754943848
    8. ',b' → logprob: -9.512459754943848
    9. ',user' → logprob: -9.762459754943848
    10. ',p' → logprob: -10.137459754943848

Token 721: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014185008592903614
    2. ' c' → logprob: -4.264184951782227
    3. 'graph' → logprob: -11.514184951782227
    4. '   ' → logprob: -12.514184951782227
    5. '	c' → logprob: -13.264184951782227
    6. 'cap' → logprob: -13.639184951782227
    7. ',c' → logprob: -13.764184951782227
    8. ' graph' → logprob: -14.264184951782227
    9. ' ' → logprob: -14.264184951782227
    10. '    ' → logprob: -14.514184951782227

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01435165572911501
    2. '=' → logprob: -4.264351844787598
    3. ' ,' → logprob: -8.889351844787598
    4. ' =' → logprob: -10.389351844787598
    5. ',c' → logprob: -12.389351844787598
    6. '   ' → logprob: -12.889351844787598
    7. ',v' → logprob: -13.264351844787598
    8. '_,' → logprob: -13.889351844787598
    9. ',d' → logprob: -13.889351844787598
    10. ',b' → logprob: -14.014351844787598

Token 723: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -1.0683535037969705e-05
    2. ' rev' → logprob: -11.50001049041748
    3. 'r' → logprob: -14.50001049041748
    4. 'rv' → logprob: -17.250011444091797
    5. '_rev' → logprob: -17.625011444091797
    6. 'rep' → logprob: -18.125011444091797
    7. '   ' → logprob: -19.500011444091797
    8. 're' → logprob: -20.000011444091797
    9. '.rev' → logprob: -20.125011444091797
    10. 'rel' → logprob: -20.500011444091797

Token 724: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052362410351634026
    2. ' =' → logprob: -5.2552361488342285
    3. '   ' → logprob: -13.005236625671387
    4. '    ' → logprob: -17.00523567199707
    5. '       ' → logprob: -17.00523567199707
    6. ' ' → logprob: -17.00523567199707
    7. '  ' → logprob: -17.13023567199707
    8. '=line' → logprob: -17.63023567199707
    9. '(graph' → logprob: -17.75523567199707
    10. '           ' → logprob: -17.88023567199707

Token 725: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.018185412511229515
    2. ' graph' → logprob: -4.018185615539551
    3. '	graph' → logprob: -10.76818561553955
    4. '   ' → logprob: -11.39318561553955
    5. '       ' → logprob: -12.89318561553955
    6. '(graph' → logprob: -14.89318561553955
    7. '           ' → logprob: -15.26818561553955
    8. '    ' → logprob: -16.643184661865234
    9. '        ' → logprob: -18.018184661865234
    10. ' ' → logprob: -18.768184661865234

Token 726: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0007199380779638886
    2. 'u' → logprob: -7.250720024108887
    3. '[v' → logprob: -12.500720024108887
    4. ',u' → logprob: -13.375720024108887
    5. '[i' → logprob: -13.625720024108887
    6. '   ' → logprob: -14.375720024108887
    7. '[' → logprob: -14.750720024108887
    8. '	u' → logprob: -14.875720024108887
    9. '
' → logprob: -15.125720024108887
    10. ',' → logprob: -15.125720024108887

Token 727: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6862042546272278
    2. '][' → logprob: -0.8112042546272278
    3. '[u' → logprob: -3.936204195022583
    4. ']' → logprob: -4.061204433441162
    5. '[' → logprob: -5.436204433441162
    6. '],' → logprob: -5.686204433441162
    7. '   ' → logprob: -6.686204433441162
    8. ']
' → logprob: -6.936204433441162
    9. '       ' → logprob: -6.936204433441162
    10. '           ' → logprob: -7.061204433441162

Token 728: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2664456789934775e-06
    2. ' i' → logprob: -13.625000953674316
    3. '	i' → logprob: -17.375001907348633
    4. '
' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.000001907348633
    6. 'v' → logprob: -19.000001907348633
    7. '[i' → logprob: -19.250001907348633
    8. 'u' → logprob: -19.625001907348633
    9. '0' → logprob: -20.250001907348633
    10. '_i' → logprob: -20.375001907348633

Token 729: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.840319037437439
    2. ']' → logprob: -1.215319037437439
    3. '           ' → logprob: -2.2153191566467285
    4. '
' → logprob: -2.5903191566467285
    5. '][' → logprob: -3.2153191566467285
    6. '[' → logprob: -3.5903191566467285
    7. '       ' → logprob: -4.7153191566467285
    8. '               ' → logprob: -5.8403191566467285
    9. '<|end|>' → logprob: -6.2153191566467285
    10. '            
' → logprob: -6.9653191566467285

Token 730: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009720315225422382
    2. '	       ' → logprob: -5.259720325469971
    3. '               ' → logprob: -6.134720325469971
    4. '		' → logprob: -7.009720325469971
    5. '	   ' → logprob: -7.634720325469971
    6. '	           ' → logprob: -8.134719848632812
    7. ' if' → logprob: -8.509719848632812
    8. '       ' → logprob: -8.884719848632812
    9. '   ' → logprob: -9.634719848632812
    10. '                   ' → logprob: -10.134719848632812

Token 731: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4128306210041046
    2. '           ' → logprob: -1.7878305912017822
    3. 'if' (adapté à ' if') → logprob: -1.9128305912017822
    4. '               ' → logprob: -3.9128305912017822
    5. '       ' → logprob: -6.287830829620361
    6. '   ' → logprob: -7.287830829620361
    7. '                   ' → logprob: -8.787830352783203
    8. '	if' → logprob: -9.537830352783203
    9. '	       ' → logprob: -9.787830352783203
    10. ' ' → logprob: -9.912830352783203

Token 732: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.07891688495874405
    2. 'c' → logprob: -2.5789167881011963
    3. '   ' → logprob: -11.953916549682617
    4. ' level' → logprob: -12.078916549682617
    5. 'level' → logprob: -12.078916549682617
    6. '	c' → logprob: -12.828916549682617
    7. '           ' → logprob: -12.953916549682617
    8. ' ' → logprob: -13.203916549682617
    9. '    ' → logprob: -13.703916549682617
    10. '  ' → logprob: -14.578916549682617

Token 733: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16024160385131836
    2. '>' → logprob: -1.9102416038513184
    3. ' and' → logprob: -11.285242080688477
    4. 'and' → logprob: -13.035242080688477
    5. ' ' → logprob: -13.160242080688477
    6. '   ' → logprob: -15.035242080688477
    7. '           ' → logprob: -15.660242080688477
    8. '  ' → logprob: -16.785242080688477
    9. ' <=' → logprob: -17.035242080688477
    10. '            ' → logprob: -17.785242080688477

Token 734: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02975349873304367
    2. ' ' → logprob: -3.5297534465789795
    3. '=' → logprob: -12.779753684997559
    4. '   ' → logprob: -16.404752731323242
    5. '  ' → logprob: -16.654752731323242
    6. '>' → logprob: -16.904752731323242
    7. ' ' → logprob: -18.404752731323242
    8. '       ' → logprob: -18.654752731323242
    9. '           ' → logprob: -18.779752731323242
    10. '    ' → logprob: -19.279752731323242

Token 735: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '           ' → logprob: -20.12501335144043
    4. '               ' → logprob: -20.37501335144043
    5. '   ' → logprob: -20.50001335144043
    6. '                   ' → logprob: -21.50001335144043
    7. '       ' → logprob: -21.75001335144043
    8. '=' → logprob: -22.37501335144043
    9. '                       ' → logprob: -23.37501335144043
    10. '  ' → logprob: -24.37501335144043

Token 736: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038094162940979004
    2. 'and' → logprob: -3.2880940437316895
    3. '           ' → logprob: -10.663094520568848
    4. '               ' → logprob: -10.663094520568848
    5. '                   ' → logprob: -12.788094520568848
    6. '            ' → logprob: -13.663094520568848
    7. '                ' → logprob: -14.663094520568848
    8. '                       ' → logprob: -15.163094520568848
    9. '	and' → logprob: -15.288094520568848
    10. '              ' → logprob: -15.538094520568848

Token 737: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.018150178715586662
    2. ' level' → logprob: -4.018150329589844
    3. '	level' → logprob: -16.393150329589844
    4. '(level' → logprob: -17.018150329589844
    5. '   ' → logprob: -17.643150329589844
    6. '           ' → logprob: -18.018150329589844
    7. '  ' → logprob: -18.393150329589844
    8. ' ' → logprob: -19.018150329589844
    9. '[level' → logprob: -20.018150329589844
    10. '    ' → logprob: -20.268150329589844

Token 738: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.016383890062570572
    2. '[v' → logprob: -4.516384124755859
    3. 'u' → logprob: -5.266384124755859
    4. 'v' → logprob: -8.76638412475586
    5. '[' → logprob: -14.01638412475586
    6. '	u' → logprob: -14.01638412475586
    7. ' u' → logprob: -14.01638412475586
    8. '   ' → logprob: -14.76638412475586
    9. '```' → logprob: -15.51638412475586
    10. ' [' → logprob: -15.76638412475586

Token 739: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03558868169784546
    2. ']+' → logprob: -3.7855887413024902
    3. '[u' → logprob: -4.41058874130249
    4. ']==' → logprob: -9.785588264465332
    5. ']<' → logprob: -10.410588264465332
    6. '[v' → logprob: -11.035588264465332
    7. ' ]' → logprob: -12.035588264465332
    8. '[' → logprob: -12.910588264465332
    9. ']+=' → logprob: -13.035588264465332
    10. '[i' → logprob: -13.160588264465332

Token 740: ' <' (ID: 464)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.010395623743534088
    2. ']' → logprob: -5.010395526885986
    3. ']+' → logprob: -6.010395526885986
    4. '[v' → logprob: -6.760395526885986
    5. ']==' → logprob: -11.010396003723145
    6. ']<' → logprob: -11.135396003723145
    7. '[' → logprob: -11.385396003723145
    8. 'u' → logprob: -11.885396003723145
    9. '[i' → logprob: -12.385396003723145
    10. '<u' → logprob: -12.510396003723145

Token 741: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.0004306692280806601
    2. ' level' → logprob: -7.750430583953857
    3. '	level' → logprob: -17.625431060791016
    4. '[level' → logprob: -18.125431060791016
    5. '(level' → logprob: -19.000431060791016
    6. '-level' → logprob: -19.750431060791016
    7. 'levels' → logprob: -20.125431060791016
    8. 'layer' → logprob: -20.625431060791016
    9. '.level' → logprob: -21.250431060791016
    10. 'v' → logprob: -21.375431060791016

Token 742: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00017541198758408427
    2. 'v' → logprob: -8.750175476074219
    3. '[u' → logprob: -11.000175476074219
    4. '[' → logprob: -15.500175476074219
    5. '	v' → logprob: -17.25017547607422
    6. ' v' → logprob: -18.62517547607422
    7. '   ' → logprob: -19.12517547607422
    8. '=v' → logprob: -19.75017547607422
    9. '(v' → logprob: -20.00017547607422
    10. ' [' → logprob: -20.62517547607422

Token 743: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07368334382772446
    2. ']:
' → logprob: -3.448683261871338
    3. ' and' → logprob: -3.948683261871338
    4. '               ' → logprob: -5.323683261871338
    5. '           ' → logprob: -5.573683261871338
    6. ':' → logprob: -5.573683261871338
    7. 'and' → logprob: -6.073683261871338
    8. '[u' → logprob: -6.448683261871338
    9. '[i' → logprob: -7.198683261871338
    10. '                   ' → logprob: -7.823683261871338

Token 744: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002751598076429218
    2. '                   ' → logprob: -9.000275611877441
    3. '           ' → logprob: -9.875275611877441
    4. '                       ' → logprob: -10.000275611877441
    5. '              ' → logprob: -11.375275611877441
    6. '                               ' → logprob: -11.625275611877441
    7. '	           ' → logprob: -12.250275611877441
    8. ' and' → logprob: -12.250275611877441
    9. '                           ' → logprob: -12.625275611877441
    10. '                
' → logprob: -12.750275611877441

Token 745: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.06872519105672836
    2. 'f' → logprob: -3.943725109100342
    3. 'flow' → logprob: -4.693725109100342
    4. ' d' → logprob: -5.068725109100342
    5. 'sent' → logprob: -5.193725109100342
    6. 'res' → logprob: -5.318725109100342
    7. '                   ' → logprob: -5.818725109100342
    8. '           ' → logprob: -5.818725109100342
    9. ' pushed' → logprob: -5.818725109100342
    10. 'delta' → logprob: -6.068725109100342

Token 746: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416738796979189
    2. ' =' → logprob: -4.264167308807373
    3. '=int' → logprob: -13.514167785644531
    4. '   ' → logprob: -14.639167785644531
    5. '=_' → logprob: -14.639167785644531
    6. '=f' → logprob: -14.764167785644531
    7. 'f' → logprob: -15.139167785644531
    8. '=min' → logprob: -15.264167785644531
    9. '=d' → logprob: -16.13916778564453
    10. '=
' → logprob: -16.76416778564453

Token 747: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.21512459218502045
    2. ' dfs' → logprob: -2.0901246070861816
    3. 'min' → logprob: -3.0901246070861816
    4. ' min' → logprob: -3.7151246070861816
    5. '	min' → logprob: -10.840124130249023
    6. '   ' → logprob: -11.840124130249023
    7. ' ' → logprob: -12.840124130249023
    8. '	' → logprob: -13.340124130249023
    9. ' ' → logprob: -13.465124130249023
    10. '	d' → logprob: -13.590124130249023

Token 748: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.173704271830502e-06
    2. 'v' → logprob: -13.00000286102295
    3. '(' → logprob: -14.25000286102295
    4. '(
' → logprob: -16.875003814697266
    5. '	v' → logprob: -17.125003814697266
    6. '[v' → logprob: -17.875003814697266
    7. ',v' → logprob: -17.875003814697266
    8. '               ' → logprob: -18.375003814697266
    9. ' v' → logprob: -18.500003814697266
    10. '                   ' → logprob: -18.750003814697266

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034893216798081994
    2. ',min' → logprob: -8.125349044799805
    3. 'min' → logprob: -10.250349044799805
    4. ' ,' → logprob: -11.125349044799805
    5. ' min' → logprob: -13.375349044799805
    6. ',d' → logprob: -14.750349044799805
    7. ',c' → logprob: -15.000349044799805
    8. '               ' → logprob: -15.125349044799805
    9. '   ' → logprob: -16.250349044799805
    10. '           ' → logprob: -16.875349044799805

Token 750: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029751643538475037
    2. ' min' → logprob: -3.5297515392303467
    3. '	min' → logprob: -14.279751777648926
    4. '               ' → logprob: -15.154751777648926
    5. '_min' → logprob: -16.77975082397461
    6. '                   ' → logprob: -16.90475082397461
    7. '           ' → logprob: -18.15475082397461
    8. '(min' → logprob: -18.52975082397461
    9. '   ' → logprob: -18.90475082397461
    10. '1' → logprob: -18.90475082397461

Token 751: '(flow' (ID: 150968)
  Prédit: '(flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flow' → logprob: -3.2855416066013277e-05
    2. 'flow' → logprob: -10.375032424926758
    3. ' (' → logprob: -14.000032424926758
    4. '(' → logprob: -14.875032424926758
    5. ' flow' → logprob: -14.875032424926758
    6. '(c' → logprob: -17.375032424926758
    7. '(
' → logprob: -17.375032424926758
    8. ' ' → logprob: -18.000032424926758
    9. '.flow' → logprob: -18.625032424926758
    10. '_flow' → logprob: -18.750032424926758

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001432620221748948
    2. ',c' → logprob: -6.751432418823242
    3. ' ,' → logprob: -8.251432418823242
    4. '_,' → logprob: -13.876432418823242
    5. ',d' → logprob: -14.751432418823242
    6. ',k' → logprob: -16.751432418823242
    7. '   ' → logprob: -17.501432418823242
    8. ',int' → logprob: -17.501432418823242
    9. 'c' → logprob: -17.501432418823242
    10. ',
' → logprob: -18.376432418823242

Token 753: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0011703446507453918
    2. ' c' → logprob: -6.7511701583862305
    3. '	c' → logprob: -16.626171112060547
    4. ')c' → logprob: -18.126171112060547
    5. '               ' → logprob: -18.626171112060547
    6. '           ' → logprob: -18.876171112060547
    7. '   ' → logprob: -19.376171112060547
    8. '                   ' → logprob: -19.751171112060547
    9. '_c' → logprob: -20.376171112060547
    10. '[c' → logprob: -20.876171112060547

Token 754: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3872013986110687
    2. '))
' → logprob: -1.1372014284133911
    3. ')' → logprob: -8.137201309204102
    4. ')
' → logprob: -10.512201309204102
    5. ' ))
' → logprob: -12.262201309204102
    6. '))
' → logprob: -12.637201309204102
    7. ' ))' → logprob: -13.512201309204102
    8. '))

' → logprob: -14.512201309204102
    9. ' ' → logprob: -15.137201309204102
    10. '   ' → logprob: -15.512201309204102

Token 755: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007666490040719509
    2. '                   ' → logprob: -5.88266658782959
    3. ' if' → logprob: -6.25766658782959
    4. '           ' → logprob: -6.88266658782959
    5. '                       ' → logprob: -7.63266658782959
    6. 'if' → logprob: -8.00766658782959
    7. ')' → logprob: -8.25766658782959
    8. '                               ' → logprob: -8.50766658782959
    9. '              ' → logprob: -9.25766658782959
    10. '
' → logprob: -9.63266658782959

Token 756: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31560084223747253
    2. '               ' → logprob: -1.565600872039795
    3. ' if' → logprob: -2.815600872039795
    4. '                   ' → logprob: -6.440600872039795
    5. '                       ' → logprob: -9.190600395202637
    6. '           ' → logprob: -9.565600395202637
    7. '                ' → logprob: -10.940600395202637
    8. 'graph' → logprob: -11.815600395202637
    9. '                               ' → logprob: -12.565600395202637
    10. '                 ' → logprob: -12.565600395202637

Token 757: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06196768581867218
    2. ' d' → logprob: -2.811967611312866
    3. '	d' → logprob: -17.936967849731445
    4. ' ' → logprob: -18.436967849731445
    5. '>d' → logprob: -18.686967849731445
    6. '
' → logprob: -18.811967849731445
    7. '   ' → logprob: -18.936967849731445
    8. '  ' → logprob: -19.186967849731445
    9. '_d' → logprob: -19.811967849731445
    10. '(d' → logprob: -20.061967849731445

Token 758: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0020252352114766836
    2. ' >' → logprob: -6.252025127410889
    3. '   ' → logprob: -10.752025604248047
    4. ':' → logprob: -10.752025604248047
    5. ')>' → logprob: -11.127025604248047
    6. ')' → logprob: -11.252025604248047
    7. '           ' → logprob: -12.252025604248047
    8. ':
' → logprob: -12.377025604248047
    9. '==' → logprob: -12.502025604248047
    10. '       ' → logprob: -12.752025604248047

Token 759: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.750097274780273
    4. '=' → logprob: -16.875097274780273
    5. '                   ' → logprob: -19.125097274780273
    6. '               ' → logprob: -19.500097274780273
    7. '                       ' → logprob: -20.375097274780273
    8. '           ' → logprob: -20.375097274780273
    9. '```' → logprob: -20.375097274780273
    10. '  ' → logprob: -20.750097274780273

Token 760: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -19.375009536743164
    4. '   ' → logprob: -19.750009536743164
    5. '۰' → logprob: -20.500009536743164
    6. 'zero' → logprob: -21.250009536743164
    7. '  ' → logprob: -21.875009536743164
    8. '=' → logprob: -22.000009536743164
    9. '<|end|>' → logprob: -23.125009536743164
    10. '٠' → logprob: -23.125009536743164

Token 761: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.044499196112155914
    2. ':
' → logprob: -3.169499158859253
    3. '               ' → logprob: -7.544499397277832
    4. '                       ' → logprob: -7.794499397277832
    5. ':' → logprob: -7.919499397277832
    6. '                  ' → logprob: -9.919499397277832
    7. '():
' → logprob: -10.169499397277832
    8. '):
' → logprob: -10.419499397277832
    9. '                           ' → logprob: -10.669499397277832
    10. '                 ' → logprob: -11.669499397277832

Token 762: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00453657703474164
    2. 'graph' → logprob: -5.6295366287231445
    3. ' graph' → logprob: -7.1295366287231445
    4. '                       ' → logprob: -9.254536628723145
    5. '               ' → logprob: -11.504536628723145
    6. '                    ' → logprob: -11.879536628723145
    7. '                  ' → logprob: -11.879536628723145
    8. '(graph' → logprob: -11.879536628723145
    9. '                 ' → logprob: -12.754536628723145
    10. '                ' → logprob: -13.754536628723145

Token 763: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0020892347674816847
    2. ' graph' → logprob: -6.252089023590088
    3. '                       ' → logprob: -9.377089500427246
    4. '                   ' → logprob: -9.502089500427246
    5. '	graph' → logprob: -14.002089500427246
    6. '   ' → logprob: -16.25208854675293
    7. '(graph' → logprob: -16.50208854675293
    8. '                    ' → logprob: -16.62708854675293
    9. '_graph' → logprob: -17.00208854675293
    10. '                           ' → logprob: -17.37708854675293

Token 764: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. 'u' → logprob: -16.125
    3. '[v' → logprob: -18.75
    4. '[' → logprob: -18.75
    5. '	u' → logprob: -19.625
    6. '```' → logprob: -20.75
    7. '[user' → logprob: -21.0
    8. '                   ' → logprob: -21.25
    9. ' [' → logprob: -21.375
    10. '   ' → logprob: -21.75

Token 765: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.30778875946998596
    2. '][' → logprob: -1.6827887296676636
    3. '[i' → logprob: -3.182788848876953
    4. '[v' → logprob: -3.307788848876953
    5. '[' → logprob: -7.057788848876953
    6. '[node' → logprob: -9.432788848876953
    7. '[I' → logprob: -11.807788848876953
    8. '}[' → logprob: -12.182788848876953
    9. '```' → logprob: -12.182788848876953
    10. ' [' → logprob: -12.307788848876953

Token 766: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.511406809295295e-06
    2. ' i' → logprob: -12.000006675720215
    3. '[i' → logprob: -15.250006675720215
    4. '	i' → logprob: -17.0000057220459
    5. '][' → logprob: -17.1250057220459
    6. ',i' → logprob: -18.3750057220459
    7. '   ' → logprob: -19.2500057220459
    8. '
' → logprob: -19.3750057220459
    9. ')i' → logprob: -19.8750057220459
    10. ' ' → logprob: -20.1250057220459

Token 767: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008062947308644652
    2. '[' → logprob: -7.1258063316345215
    3. '=' → logprob: -13.750805854797363
    4. ' ][' → logprob: -14.750805854797363
    5. ']' → logprob: -15.750805854797363
    6. ''][' → logprob: -16.12580680847168
    7. '"][' → logprob: -17.00080680847168
    8. '][-' → logprob: -17.50080680847168
    9. '   ' → logprob: -17.87580680847168
    10. ')[' → logprob: -17.87580680847168

Token 768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804241120815277
    2. '2' → logprob: -3.2880423069000244
    3. '
' → logprob: -14.163042068481445
    4. '```' → logprob: -16.913042068481445
    5. '[' → logprob: -17.288042068481445
    6. '3' → logprob: -18.538042068481445
    7. ' ' → logprob: -19.163042068481445
    8. '...' → logprob: -19.413042068481445
    9. '   ' → logprob: -19.663042068481445
    10. '``' → logprob: -19.913042068481445

Token 769: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07298234850168228
    2. ' -=' → logprob: -2.6979823112487793
    3. '-' → logprob: -6.322982311248779
    4. ']' → logprob: -7.197982311248779
    5. ']-' → logprob: -8.072982788085938
    6. '   ' → logprob: -8.822982788085938
    7. '=' → logprob: -11.447982788085938
    8. '    ' → logprob: -11.447982788085938
    9. '	' → logprob: -12.572982788085938
    10. ']+=' → logprob: -12.697982788085938

Token 770: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.000720891694072634
    2. ' -=' → logprob: -7.250720977783203
    3. '=' → logprob: -11.750720977783203
    4. '-' → logprob: -12.875720977783203
    5. '   ' → logprob: -15.000720977783203
    6. ']-' → logprob: -17.125720977783203
    7. '+=' → logprob: -17.250720977783203
    8. '	' → logprob: -18.000720977783203
    9. '```' → logprob: -18.000720977783203
    10. '    ' → logprob: -18.750720977783203

Token 771: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020354038861114532
    2. ' d' → logprob: -8.500203132629395
    3. '                   ' → logprob: -18.25020408630371
    4. '	d' → logprob: -20.12520408630371
    5. '                       ' → logprob: -21.75020408630371
    6. '               ' → logprob: -22.12520408630371
    7. ')d' → logprob: -22.37520408630371
    8. '```' → logprob: -22.87520408630371
    9. '
' → logprob: -23.12520408630371
    10. '   ' → logprob: -23.37520408630371

Token 772: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008992933668196201
    2. '
' → logprob: -4.758993148803711
    3. '               ' → logprob: -9.133993148803711
    4. '<|end|>' → logprob: -9.383993148803711
    5. '           ' → logprob: -9.508993148803711
    6. '                       ' → logprob: -10.883993148803711
    7. ',' → logprob: -11.008993148803711
    8. '                  ' → logprob: -11.383993148803711
    9. '				' → logprob: -11.633993148803711
    10. '                    
' → logprob: -11.758993148803711

Token 773: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007145775598473847
    2. '
' → logprob: -7.3757147789001465
    3. '                    
' → logprob: -10.375714302062988
    4. '```' → logprob: -10.750714302062988
    5. '               ' → logprob: -11.375714302062988
    6. '           ' → logprob: -11.875714302062988
    7. '                       ' → logprob: -12.125714302062988
    8. '                  ' → logprob: -12.875714302062988
    9. '                    ' → logprob: -13.375714302062988
    10. '				' → logprob: -13.375714302062988

Token 774: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0007236333331093192
    2. ' graph' → logprob: -7.250723838806152
    3. '                   ' → logprob: -11.250723838806152
    4. '           ' → logprob: -14.750723838806152
    5. '                       ' → logprob: -15.875723838806152
    6. '	graph' → logprob: -16.000722885131836
    7. '               ' → logprob: -16.750722885131836
    8. '   ' → logprob: -17.125722885131836
    9. '       ' → logprob: -18.875722885131836
    10. '                           ' → logprob: -19.375722885131836

Token 775: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9623810658231378e-05
    2. 'v' → logprob: -11.125020027160645
    3. '[u' → logprob: -12.250020027160645
    4. '[' → logprob: -16.375019073486328
    5. '	v' → logprob: -19.250019073486328
    6. '<v' → logprob: -19.500019073486328
    7. '```' → logprob: -19.500019073486328
    8. '[][' → logprob: -20.375019073486328
    9. '[
' → logprob: -20.750019073486328
    10. '[node' → logprob: -21.125019073486328

Token 776: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003110327525064349
    2. '[i' → logprob: -8.375310897827148
    3. '[u' → logprob: -10.125310897827148
    4. '[' → logprob: -10.625310897827148
    5. ' ][' → logprob: -12.000310897827148
    6. ']' → logprob: -12.500310897827148
    7. 's' → logprob: -13.625310897827148
    8. '[v' → logprob: -14.125310897827148
    9. '```' → logprob: -14.125310897827148
    10. '   ' → logprob: -14.125310897827148

Token 777: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0006612073048017919
    2. 'graph' → logprob: -7.625661373138428
    3. '[' → logprob: -9.00066089630127
    4. '][' → logprob: -10.75066089630127
    5. ' rev' → logprob: -10.87566089630127
    6. '   ' → logprob: -13.00066089630127
    7. '.rev' → logprob: -13.75066089630127
    8. '  ' → logprob: -14.25066089630127
    9. 'recv' → logprob: -14.25066089630127
    10. '3' → logprob: -14.37566089630127

Token 778: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00976387970149517
    2. '[' → logprob: -4.634763717651367
    3. ' ][' → logprob: -12.259763717651367
    4. '   ' → logprob: -13.384763717651367
    5. ''][' → logprob: -14.634763717651367
    6. '       ' → logprob: -15.509763717651367
    7. '           ' → logprob: -15.509763717651367
    8. '"][' → logprob: -15.759763717651367
    9. ']' → logprob: -16.009763717651367
    10. '    ' → logprob: -16.259763717651367

Token 779: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25200480222702026
    2. '2' → logprob: -1.502004861831665
    3. ' ' → logprob: -10.877004623413086
    4. '
' → logprob: -11.377004623413086
    5. '0' → logprob: -11.502004623413086
    6. 'd' → logprob: -11.877004623413086
    7. 'c' → logprob: -12.002004623413086
    8. '-' → logprob: -12.127004623413086
    9. '```' → logprob: -12.502004623413086
    10. ']' → logprob: -12.627004623413086

Token 780: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0488489605486393
    2. ' +=' → logprob: -3.048848867416382
    3. ']+=' → logprob: -8.298849105834961
    4. '+' → logprob: -11.673849105834961
    5. '                   ' → logprob: -13.423849105834961
    6. '   ' → logprob: -13.798849105834961
    7. '    ' → logprob: -13.798849105834961
    8. '                    ' → logprob: -15.173849105834961
    9. ']' → logprob: -15.923849105834961
    10. ' ' → logprob: -16.67384910583496

Token 781: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01416750717908144
    2. ' +=' → logprob: -4.264167308807373
    3. ']+=' → logprob: -13.014167785644531
    4. '+' → logprob: -13.514167785644531
    5. '   ' → logprob: -15.139167785644531
    6. '    ' → logprob: -16.13916778564453
    7. '                   ' → logprob: -16.76416778564453
    8. '+=(' → logprob: -18.51416778564453
    9. '  ' → logprob: -18.63916778564453
    10. '```' → logprob: -18.63916778564453

Token 782: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020354038861114532
    2. ' d' → logprob: -8.500203132629395
    3. '	d' → logprob: -20.37520408630371
    4. '   ' → logprob: -21.37520408630371
    5. '                   ' → logprob: -23.00020408630371
    6. '           ' → logprob: -23.37520408630371
    7. '               ' → logprob: -23.62520408630371
    8. '_d' → logprob: -23.75020408630371
    9. '  ' → logprob: -24.50020408630371
    10. ' ' → logprob: -24.87520408630371

Token 783: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.15441757265944e-05
    2. '
' → logprob: -11.250031471252441
    3. '				' → logprob: -12.250031471252441
    4. '               ' → logprob: -12.250031471252441
    5. '                  ' → logprob: -13.000031471252441
    6. '           ' → logprob: -13.125031471252441
    7. '                       ' → logprob: -13.750031471252441
    8. 'd' → logprob: -14.000031471252441
    9. 'return' → logprob: -14.125031471252441
    10. '   ' → logprob: -14.375031471252441

Token 784: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.666993507067673e-05
    2. '               ' → logprob: -11.500036239624023
    3. '                       ' → logprob: -11.500036239624023
    4. '                  ' → logprob: -11.750036239624023
    5. '				' → logprob: -13.125036239624023
    6. '           ' → logprob: -13.250036239624023
    7. '
' → logprob: -13.500036239624023
    8. '                    ' → logprob: -13.750036239624023
    9. '       ' → logprob: -14.625036239624023
    10. '                 ' → logprob: -14.750036239624023

Token 785: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00725744292140007
    2. ' return' → logprob: -5.507257461547852
    3. '                   ' → logprob: -5.757257461547852
    4. '	return' → logprob: -11.632257461547852
    5. '{return' → logprob: -13.132257461547852
    6. ':return' → logprob: -13.757257461547852
    7. '   ' → logprob: -14.257257461547852
    8. '```' → logprob: -14.507257461547852
    9. '                       ' → logprob: -15.132257461547852
    10. '				' → logprob: -15.882257461547852

Token 786: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0031777136027812958
    2. ' d' → logprob: -5.753177642822266
    3. '	d' → logprob: -17.628177642822266
    4. '                   ' → logprob: -17.878177642822266
    5. '   ' → logprob: -19.878177642822266
    6. '               ' → logprob: -20.503177642822266
    7. '           ' → logprob: -20.878177642822266
    8. ' ' → logprob: -21.128177642822266
    9. '                       ' → logprob: -21.503177642822266
    10. ' ' → logprob: -21.753177642822266

Token 787: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04607056826353073
    2. '               ' → logprob: -3.1710705757141113
    3. '       ' → logprob: -6.671070575714111
    4. '		' → logprob: -7.296070575714111
    5. '                   ' → logprob: -7.296070575714111
    6. '          ' → logprob: -9.046070098876953
    7. '   ' → logprob: -9.546070098876953
    8. '            
' → logprob: -10.171070098876953
    9. '	       ' → logprob: -10.546070098876953
    10. '              ' → logprob: -10.796070098876953

Token 788: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6091957688331604
    2. '               ' → logprob: -0.8591957688331604
    3. '                   ' → logprob: -4.234195709228516
    4. '		' → logprob: -4.484195709228516
    5. '	       ' → logprob: -6.609195709228516
    6. '	           ' → logprob: -6.609195709228516
    7. '       ' → logprob: -7.109195709228516
    8. '			' → logprob: -7.234195709228516
    9. '	' → logprob: -7.859195709228516
    10. '		   ' → logprob: -8.484195709228516

Token 789: ' iter' (ID: 10621)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25634750723838806
    2. '       ' → logprob: -2.006347417831421
    3. '               ' → logprob: -2.756347417831421
    4. '   ' → logprob: -4.00634765625
    5. '                   ' → logprob: -6.00634765625
    6. '		' → logprob: -6.38134765625
    7. 'i' → logprob: -6.88134765625
    8. '	' → logprob: -7.13134765625
    9. '     ' → logprob: -7.63134765625
    10. '         ' → logprob: -7.88134765625

Token 790: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.081584716506768e-05
    2. '[' → logprob: -10.875020980834961
    3. 'u' → logprob: -14.500020980834961
    4. '	u' → logprob: -14.625020980834961
    5. '[i' → logprob: -14.750020980834961
    6. '[user' → logprob: -16.12502098083496
    7. ' u' → logprob: -16.12502098083496
    8. '[v' → logprob: -16.62502098083496
    9. '   ' → logprob: -17.25002098083496
    10. '[++' → logprob: -17.37502098083496

Token 791: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6984826326370239
    2. ']+=' → logprob: -0.6984826326370239
    3. '+=' → logprob: -5.573482513427734
    4. ']=' → logprob: -7.448482513427734
    5. ']+' → logprob: -7.948482513427734
    6. '[i' → logprob: -8.448482513427734
    7. '[' → logprob: -8.698482513427734
    8. '   ' → logprob: -10.198482513427734
    9. '[u' → logprob: -10.448482513427734
    10. ' +=' → logprob: -10.448482513427734

Token 792: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10168030858039856
    2. '+=' → logprob: -2.351680278778076
    3. ' +=' → logprob: -6.726680278778076
    4. ' =' → logprob: -8.351680755615234
    5. '[' → logprob: -11.476680755615234
    6. '=i' → logprob: -11.476680755615234
    7. ']+=' → logprob: -11.726680755615234
    8. '[i' → logprob: -11.976680755615234
    9. '+' → logprob: -13.726680755615234
    10. '   ' → logprob: -14.351680755615234

Token 793: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -22.25
    4. '
' → logprob: -23.5
    5. '```' → logprob: -23.75
    6. '１' → logprob: -24.0
    7. '  ' → logprob: -24.0
    8. '0' → logprob: -24.75
    9. 'd' → logprob: -25.0625
    10. '+' → logprob: -25.125

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -21.625
    4. '```' → logprob: -21.625
    5. '
' → logprob: -22.75
    6. '１' → logprob: -23.125
    7. '  ' → logprob: -23.875
    8. '-' → logprob: -24.5
    9. '0' → logprob: -24.5
    10. '``' → logprob: -24.5625

Token 795: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0919681116938591
    2. '
' → logprob: -3.841968059539795
    3. '   ' → logprob: -3.966968059539795
    4. '	return' → logprob: -4.591968059539795
    5. 'return' → logprob: -4.591968059539795
    6. ' return' → logprob: -4.841968059539795
    7. '<|end|>' → logprob: -5.216968059539795
    8. '        
' → logprob: -5.716968059539795
    9. '           ' → logprob: -5.841968059539795
    10. ' 
' → logprob: -6.216968059539795

Token 796: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5111716389656067
    2. '       ' → logprob: -1.136171579360962
    3. '	return' → logprob: -3.636171579360962
    4. '<|end|>' → logprob: -3.636171579360962
    5. 'return' → logprob: -4.761171817779541
    6. '```' → logprob: -5.011171817779541
    7. '           ' → logprob: -6.011171817779541
    8. ' return' → logprob: -6.386171817779541
    9. '<|end|>' → logprob: -6.511171817779541
    10. '\' → logprob: -6.636171817779541

Token 797: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32729262113571167
    2. '       ' → logprob: -1.5772926807403564
    3. 'return' (adapté à ' return') → logprob: -2.8272926807403564
    4. '	return' → logprob: -4.452292442321777
    5. ' return' → logprob: -6.702292442321777
    6. '           ' → logprob: -8.202292442321777
    7. '	' → logprob: -9.577292442321777
    8. '```' → logprob: -9.952292442321777
    9. '	   ' → logprob: -10.702292442321777
    10. ' ' → logprob: -10.702292442321777

Token 798: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.250059127807617
    4. ' ' → logprob: -21.500059127807617
    5. '  ' → logprob: -21.625059127807617
    6. 'None' → logprob: -23.500059127807617
    7. '۰' → logprob: -23.750059127807617
    8. '```' → logprob: -24.250059127807617
    9. '    ' → logprob: -24.500059127807617
    10. '	' → logprob: -24.500059127807617

Token 799: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -21.75
    4. '۰' → logprob: -24.25
    5. '０' → logprob: -24.375
    6. '  ' → logprob: -24.625
    7. '```' → logprob: -24.875
    8. '000' → logprob: -25.125
    9. '00' → logprob: -25.25
    10. ' ' → logprob: -25.5

Token 800: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4576973617076874
    2. 'def' → logprob: -1.2076973915100098
    3. '   ' → logprob: -2.7076973915100098
    4. '    
' → logprob: -6.95769739151001
    5. 'return' → logprob: -8.332696914672852
    6. '
' → logprob: -8.707696914672852
    7. ' 
' → logprob: -9.207696914672852
    8. 'while' → logprob: -9.957696914672852
    9. '  
' → logprob: -10.207696914672852
    10. ' def' → logprob: -10.582696914672852

Token 801: '   ' (ID: 271)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.008205321617424488
    2. 'def' → logprob: -5.133205413818359
    3. '   ' → logprob: -6.883205413818359
    4. ' flow' → logprob: -7.633205413818359
    5. 'total' → logprob: -8.00820541381836
    6. 'max' → logprob: -9.13320541381836
    7. 'f' → logprob: -9.25820541381836
    8. 'while' → logprob: -9.75820541381836
    9. 'result' → logprob: -9.88320541381836
    10. '
' → logprob: -9.88320541381836

Token 802: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' (adapté à ' flow') → logprob: -3.881560041918419e-05
    2. 'def' → logprob: -11.125039100646973
    3. ' flow' → logprob: -11.125039100646973
    4. 'max' → logprob: -12.125039100646973
    5. '   ' → logprob: -13.000039100646973
    6. 'total' → logprob: -13.875039100646973
    7. 'res' → logprob: -15.500039100646973
    8. '
' → logprob: -15.500039100646973
    9. '    
' → logprob: -16.500038146972656
    10. '_flow' → logprob: -16.500038146972656

Token 803: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687586784362793
    2. '=' → logprob: -1.136875867843628
    3. ' +=' → logprob: -12.886876106262207
    4. ',' → logprob: -14.011876106262207
    5. '   ' → logprob: -14.511876106262207
    6. ' ' → logprob: -15.511876106262207
    7. ')' → logprob: -15.636876106262207
    8. '_' → logprob: -15.761876106262207
    9. '+=' → logprob: -15.761876106262207
    10. '  ' → logprob: -16.63687515258789

Token 804: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.750015258789062
    4. '۰' → logprob: -21.250015258789062
    5. '  ' → logprob: -21.375015258789062
    6. '=' → logprob: -22.125015258789062
    7. '０' → logprob: -22.125015258789062
    8. 'm' → logprob: -22.500015258789062
    9. '     ' → logprob: -22.625015258789062
    10. '```' → logprob: -22.625015258789062

Token 805: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. 'm' → logprob: -20.125
    4. '   ' → logprob: -20.25
    5. '```' → logprob: -21.5
    6. '۰' → logprob: -22.125
    7. '=' → logprob: -22.625
    8. '
' → logprob: -22.75
    9. '０' → logprob: -22.75
    10. 'flow' → logprob: -23.625

Token 806: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10132661461830139
    2. '   ' → logprob: -3.8513267040252686
    3. '    
' → logprob: -3.9763267040252686
    4. ' while' → logprob: -4.1013264656066895
    5. '  
' → logprob: -4.1013264656066895
    6. 'while' → logprob: -4.3513264656066895
    7. ' 
' → logprob: -5.8513264656066895
    8. '<|end|>' → logprob: -5.8513264656066895
    9. '   
' → logprob: -6.3513264656066895
    10. '	
' → logprob: -7.1013264656066895

Token 807: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5953360795974731
    2. '   ' → logprob: -1.3453360795974731
    3. '
' → logprob: -2.3453359603881836
    4. ' while' → logprob: -2.4703359603881836
    5. '    
' → logprob: -5.845335960388184
    6. '	while' → logprob: -6.095335960388184
    7. ' 
' → logprob: -7.095335960388184
    8. '  
' → logprob: -7.095335960388184
    9. '```' → logprob: -7.470335960388184
    10. '   
' → logprob: -9.220335960388184

Token 808: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.041094500571489334
    2. ' while' → logprob: -3.4160945415496826
    3. '   ' → logprob: -5.0410943031311035
    4. '	while' → logprob: -7.4160943031311035
    5. '
' → logprob: -8.666094779968262
    6. '    
' → logprob: -9.791094779968262
    7. 'While' → logprob: -10.291094779968262
    8. ' 
' → logprob: -10.791094779968262
    9. '<|end|>' → logprob: -11.041094779968262
    10. '```' → logprob: -11.166094779968262

Token 809: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31354236602783203
    2. ' bfs' → logprob: -1.313542366027832
    3. ' True' → logprob: -8.563542366027832
    4. 'True' → logprob: -9.563542366027832
    5. '(b' → logprob: -11.063542366027832
    6. '(True' → logprob: -14.313542366027832
    7. ' ' → logprob: -14.563542366027832
    8. '[b' → logprob: -14.688542366027832
    9. 'bs' → logprob: -15.063542366027832
    10. '\b' → logprob: -15.188542366027832

Token 810: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0025342830922454596
    2. '():
' → logprob: -6.50253438949585
    3. '()' → logprob: -7.12753438949585
    4. '()>' → logprob: -8.502533912658691
    5. '(' → logprob: -10.752533912658691
    6. ':' → logprob: -13.502533912658691
    7. ' ():' → logprob: -13.502533912658691
    8. '():
' → logprob: -14.377533912658691
    9. '()!=' → logprob: -15.502533912658691
    10. '>' → logprob: -15.502533912658691

Token 811: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035406213253736496
    2. '   ' → logprob: -3.4104061126708984
    3. '
' → logprob: -6.660406112670898
    4. '    
' → logprob: -8.910406112670898
    5. '        
' → logprob: -9.535406112670898
    6. '    ' → logprob: -9.535406112670898
    7. '```' → logprob: -9.660406112670898
    8. '  
' → logprob: -10.660406112670898
    9. ' for' → logprob: -10.785406112670898
    10. '     ' → logprob: -10.910406112670898

Token 812: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' (adapté à ' iter') → logprob: -0.08427246659994125
    2. ' iter' → logprob: -2.9592723846435547
    3. 'for' → logprob: -4.084272384643555
    4. '       ' → logprob: -4.834272384643555
    5. '   ' → logprob: -5.959272384643555
    6. ' for' → logprob: -6.709272384643555
    7. '	iter' → logprob: -8.834272384643555
    8. 'while' → logprob: -8.959272384643555
    9. '           ' → logprob: -10.584272384643555
    10. '    ' → logprob: -10.709272384643555

Token 813: ' =' (ID: 314)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.18670333921909332
    2. '[' → logprob: -2.8117034435272217
    3. '[S' → logprob: -3.0617034435272217
    4. '=' → logprob: -3.1867034435272217
    5. ' =' → logprob: -3.9367034435272217
    6. '=[' → logprob: -7.311703205108643
    7. '[:' → logprob: -7.936703205108643
    8. '[]=' → logprob: -8.0617036819458
    9. '[]' → logprob: -8.5617036819458
    10. '[u' → logprob: -9.0617036819458

Token 814: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033546582562848926
    2. ' [' → logprob: -8.000335693359375
    3. ' ' → logprob: -17.500335693359375
    4. '[len' → logprob: -18.500335693359375
    5. '   ' → logprob: -18.875335693359375
    6. '[size' → logprob: -19.500335693359375
    7. '[i' → logprob: -20.500335693359375
    8. '{' → logprob: -21.000335693359375
    9. '=[' → logprob: -21.000335693359375
    10. '  ' → logprob: -21.000335693359375

Token 815: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۰' → logprob: -20.000001907348633
    4. '   ' → logprob: -21.625001907348633
    5. '
' → logprob: -21.750001907348633
    6. '  ' → logprob: -22.500001907348633
    7. '000' → logprob: -22.750001907348633
    8. '00' → logprob: -22.875001907348633
    9. '  ' → logprob: -23.125001907348633
    10. '０' → logprob: -23.250001907348633

Token 816: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.024046368896961212
    2. ']' → logprob: -3.7740464210510254
    3. ' for' → logprob: -7.774046421051025
    4. '*' → logprob: -7.899046421051025
    5. 'for' → logprob: -12.649045944213867
    6. ' *' → logprob: -13.399045944213867
    7. '[size' → logprob: -13.774045944213867
    8. ']*(' → logprob: -13.774045944213867
    9. ' ]' → logprob: -14.399045944213867
    10. '```' → logprob: -15.024045944213867

Token 817: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -1.5048530030981055e-06
    2. '(size' → logprob: -13.750001907348633
    3. ' size' → logprob: -15.500001907348633
    4. '[size' → logprob: -16.875001907348633
    5. 'len' → logprob: -17.250001907348633
    6. '	size' → logprob: -19.500001907348633
    7. '
' → logprob: -19.625001907348633
    8. '<size' → logprob: -20.125001907348633
    9. '=size' → logprob: -20.250001907348633
    10. '   ' → logprob: -20.500001907348633

Token 818: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024808252230286598
    2. '
' → logprob: -3.899808168411255
    3. '<|end|>' → logprob: -6.899808406829834
    4. 'while' → logprob: -7.149808406829834
    5. '   ' → logprob: -7.524808406829834
    6. '        
' → logprob: -7.774808406829834
    7. '	while' → logprob: -8.024807929992676
    8. ' while' → logprob: -8.149807929992676
    9. ',' → logprob: -8.149807929992676
    10. ',
' → logprob: -8.774807929992676

Token 819: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2638358175754547
    2. ' while' → logprob: -1.8888357877731323
    3. 'while' → logprob: -3.138835906982422
    4. '
' → logprob: -4.138835906982422
    5. '   ' → logprob: -4.138835906982422
    6. ',' → logprob: -6.763835906982422
    7. '	while' → logprob: -6.763835906982422
    8. ' flow' → logprob: -7.263835906982422
    9. '           ' → logprob: -7.763835906982422
    10. '        
' → logprob: -8.013835906982422

Token 820: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.005385656841099262
    2. 'while' → logprob: -5.630385875701904
    3. 'd' → logprob: -6.755385875701904
    4. ' f' → logprob: -7.630385875701904
    5. ' while' → logprob: -9.755385398864746
    6. 'df' → logprob: -10.380385398864746
    7. 'delta' → logprob: -10.380385398864746
    8. ' pushed' → logprob: -12.755385398864746
    9. '   ' → logprob: -12.880385398864746
    10. 'flow' → logprob: -13.255385398864746

Token 821: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19796612858772278
    2. ' =' → logprob: -2.0729660987854004
    3. 'or' → logprob: -3.4479660987854004
    4. 'low' → logprob: -4.1979660987854
    5. '+=' → logprob: -5.3229660987854
    6. '   ' → logprob: -6.6979660987854
    7. ' ' → logprob: -8.197966575622559
    8. ' +=' → logprob: -8.197966575622559
    9. '  ' → logprob: -9.697966575622559
    10. '	' → logprob: -10.072966575622559

Token 822: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.01105890329927206
    2. ' dfs' → logprob: -4.511058807373047
    3. '0' → logprob: -12.011058807373047
    4. ' ' → logprob: -13.761058807373047
    5. 'df' → logprob: -13.761058807373047
    6. '   ' → logprob: -14.011058807373047
    7. 'f' → logprob: -14.636058807373047
    8. 'd' → logprob: -14.761058807373047
    9. 'din' → logprob: -15.386058807373047
    10. '1' → logprob: -15.636058807373047

Token 823: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.003102138638496399
    2. '(T' → logprob: -6.2531023025512695
    3. '(' → logprob: -6.7531023025512695
    4. '(
' → logprob: -12.62810230255127
    5. '   ' → logprob: -14.37810230255127
    6. ' (' → logprob: -14.50310230255127
    7. '(s' → logprob: -15.37810230255127
    8. ' ' → logprob: -15.62810230255127
    9. '(I' → logprob: -15.75310230255127
    10. 'S' → logprob: -16.003101348876953

Token 824: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008197750896215439
    2. ',f' → logprob: -5.008197784423828
    3. ' ,' → logprob: -7.383197784423828
    4. ',m' → logprob: -8.258197784423828
    5. '(flow' → logprob: -8.383197784423828
    6. '(f' → logprob: -9.508197784423828
    7. ',
' → logprob: -9.633197784423828
    8. '   ' → logprob: -10.008197784423828
    9. ')' → logprob: -10.133197784423828
    10. 'f' → logprob: -10.258197784423828

Token 825: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005654775071889162
    2. 'float' → logprob: -5.255654811859131
    3. '1' → logprob: -8.630654335021973
    4. 'm' → logprob: -8.755654335021973
    5. 'int' → logprob: -9.630654335021973
    6. '100' → logprob: -11.505654335021973
    7. ' ' → logprob: -12.130654335021973
    8. 'sys' → logprob: -12.880654335021973
    9. ' float' → logprob: -14.505654335021973
    10. '   ' → logprob: -15.380654335021973

Token 826: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0049416315741837025
    2. 'float' → logprob: -5.504941463470459
    3. 'm' → logprob: -7.254941463470459
    4. 'int' → logprob: -9.254941940307617
    5. '1' → logprob: -10.004941940307617
    6. 'sys' → logprob: -11.504941940307617
    7. '100' → logprob: -12.379941940307617
    8. ' ' → logprob: -14.254941940307617
    9. ' float' → logprob: -15.754941940307617
    10. '999' → logprob: -16.504941940307617

Token 827: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.06198852136731148
    2. '9' → logprob: -2.811988592147827
    3. '^' → logprob: -11.311988830566406
    4. ' **' → logprob: -12.686988830566406
    5. '999' → logprob: -12.936988830566406
    6. '000' → logprob: -14.061988830566406
    7. '```' → logprob: -14.936988830566406
    8. '10' → logprob: -14.936988830566406
    9. '7' → logprob: -15.061988830566406
    10. '+' → logprob: -15.061988830566406

Token 828: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.054500666621607e-06
    2. '18' → logprob: -13.00000286102295
    3. '15' → logprob: -14.12500286102295
    4. '7' → logprob: -17.625003814697266
    5. '8' → logprob: -17.625003814697266
    6. '10' → logprob: -17.625003814697266
    7. '12' → logprob: -19.250003814697266
    8. '14' → logprob: -20.250003814697266
    9. '+' → logprob: -20.875003814697266
    10. 'nine' → logprob: -21.250003814697266

Token 829: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741498529911041
    2. ')' → logprob: -0.9741498231887817
    3. '       ' → logprob: -10.224149703979492
    4. ' )
' → logprob: -11.349149703979492
    5. ')
' → logprob: -11.349149703979492
    6. '           ' → logprob: -12.349149703979492
    7. '   ' → logprob: -12.474149703979492
    8. ' )' → logprob: -12.849149703979492
    9. ')

' → logprob: -15.099149703979492
    10. '               ' → logprob: -15.099149703979492

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15320098400115967
    2. '
' → logprob: -2.028201103210449
    3. '   ' → logprob: -5.903201103210449
    4. '<|end|>' → logprob: -5.903201103210449
    5. '           ' → logprob: -6.903201103210449
    6. ' while' → logprob: -7.653201103210449
    7. 'while' → logprob: -7.778201103210449
    8. '(flow' → logprob: -7.778201103210449
    9. '=' → logprob: -8.02820110321045
    10. '+' → logprob: -8.27820110321045

Token 831: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.294616162776947
    2. 'while' (adapté à ' while') → logprob: -1.9196162223815918
    3. ' while' → logprob: -2.419616222381592
    4. '+' → logprob: -5.044616222381592
    5. ' flow' → logprob: -5.919616222381592
    6. '           ' → logprob: -6.169616222381592
    7. 'if' → logprob: -6.294616222381592
    8. '
' → logprob: -6.419616222381592
    9. 'flow' → logprob: -6.544616222381592
    10. ' if' → logprob: -6.669616222381592

Token 832: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06196768581867218
    2. ' f' → logprob: -2.811967611312866
    3. '   ' → logprob: -16.811967849731445
    4. '	f' → logprob: -17.061967849731445
    5. ' ' → logprob: -17.436967849731445
    6. '(f' → logprob: -17.936967849731445
    7. ' ' → logprob: -19.186967849731445
    8. '    ' → logprob: -19.561967849731445
    9. '  ' → logprob: -20.186967849731445
    10. '     ' → logprob: -20.811967849731445

Token 833: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01107234600931406
    2. ' >' → logprob: -4.511072158813477
    3. ':' → logprob: -10.886072158813477
    4. '   ' → logprob: -12.761072158813477
    5. ')>' → logprob: -14.386072158813477
    6. '!=' → logprob: -14.636072158813477
    7. ':
' → logprob: -14.886072158813477
    8. ' and' → logprob: -15.386072158813477
    9. '()>' → logprob: -15.386072158813477
    10. '&gt' → logprob: -15.386072158813477

Token 834: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '=' → logprob: -17.750709533691406
    4. '   ' → logprob: -18.750709533691406
    5. '<|end|>' → logprob: -20.875709533691406
    6. '  ' → logprob: -21.375709533691406
    7. '۰' → logprob: -21.500709533691406
    8. 'f' → logprob: -21.750709533691406
    9. ',' → logprob: -22.125709533691406
    10. '       ' → logprob: -22.375709533691406

Token 835: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.875261306762695
    4. '=' → logprob: -19.125261306762695
    5. '  ' → logprob: -20.125261306762695
    6. '۰' → logprob: -20.750261306762695
    7. '    ' → logprob: -21.250261306762695
    8. '```' → logprob: -21.250261306762695
    9. '<|end|>' → logprob: -21.625261306762695
    10. 'f' → logprob: -21.687761306762695

Token 836: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.006993249990046024
    2. ':' → logprob: -5.006993293762207
    3. '):
' → logprob: -8.631993293762207
    4. '       ' → logprob: -9.756993293762207
    5. '           ' → logprob: -10.381993293762207
    6. ' :
' → logprob: -12.381993293762207
    7. ':
' → logprob: -12.881993293762207
    8. ',' → logprob: -14.131993293762207
    9. '   ' → logprob: -14.381993293762207
    10. '```' → logprob: -14.756993293762207

Token 837: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038067339919507504
    2. 'flow' → logprob: -6.6288065910339355
    3. '
' → logprob: -7.0038065910339355
    4. '```' → logprob: -7.2538065910339355
    5. ' flow' → logprob: -7.5038065910339355
    6. '       ' → logprob: -9.128807067871094
    7. '               ' → logprob: -9.628807067871094
    8. '(flow' → logprob: -9.878807067871094
    9. '``' → logprob: -10.628807067871094
    10. '	       ' → logprob: -11.128807067871094

Token 838: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' (adapté à ' flow') → logprob: -0.13684573769569397
    2. ' flow' → logprob: -2.136845827102661
    3. '           ' → logprob: -4.636845588684082
    4. '               ' → logprob: -9.136845588684082
    5. '(flow' → logprob: -10.011845588684082
    6. '
' → logprob: -11.636845588684082
    7. '.flow' → logprob: -11.886845588684082
    8. '       ' → logprob: -12.011845588684082
    9. '   ' → logprob: -12.886845588684082
    10. '_flow' → logprob: -13.011845588684082

Token 839: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47409579157829285
    2. ' +=' → logprob: -0.9740958213806152
    3. ']+=' → logprob: -11.224095344543457
    4. '   ' → logprob: -12.349095344543457
    5. '	' → logprob: -15.474095344543457
    6. '+' → logprob: -15.474095344543457
    7. '    ' → logprob: -15.724095344543457
    8. '       ' → logprob: -15.974095344543457
    9. '=' → logprob: -15.974095344543457
    10. '```' → logprob: -16.349096298217773

Token 840: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.029750484973192215
    2. ' f' → logprob: -3.5297505855560303
    3. '	f' → logprob: -17.77975082397461
    4. ' ' → logprob: -20.02975082397461
    5. '   ' → logprob: -21.02975082397461
    6. '_f' → logprob: -21.90475082397461
    7. '
' → logprob: -22.52975082397461
    8. ' ' → logprob: -22.77975082397461
    9. '```' → logprob: -22.90475082397461
    10. 'd' → logprob: -23.27975082397461

Token 841: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020240433514118195
    2. '
' → logprob: -6.627024173736572
    3. ' f' → logprob: -8.002023696899414
    4. 'f' → logprob: -8.627023696899414
    5. ',' → logprob: -9.627023696899414
    6. ',
' → logprob: -10.377023696899414
    7. '<|end|>' → logprob: -10.752023696899414
    8. '(f' → logprob: -11.627023696899414
    9. ',f' → logprob: -11.752023696899414
    10. '                   ' → logprob: -11.877023696899414

Token 842: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011832444579340518
    2. ' f' → logprob: -9.500118255615234
    3. '
' → logprob: -10.750118255615234
    4. 'f' → logprob: -11.375118255615234
    5. ',' → logprob: -12.125118255615234
    6. '       ' → logprob: -13.375118255615234
    7. '               ' → logprob: -14.375118255615234
    8. '		' → logprob: -14.750118255615234
    9. '          ' → logprob: -14.750118255615234
    10. '                   ' → logprob: -14.875118255615234

Token 843: ' f' (ID: 285)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5647638440132141
    2. 'f' (adapté à ' f') → logprob: -1.3147637844085693
    3. ' f' → logprob: -1.8147637844085693
    4. '       ' → logprob: -9.689764022827148
    5. '               ' → logprob: -11.064764022827148
    6. '          ' → logprob: -12.689764022827148
    7. '   ' → logprob: -12.939764022827148
    8. '	f' → logprob: -13.064764022827148
    9. '                   ' → logprob: -13.439764022827148
    10. '
' → logprob: -14.189764022827148

Token 844: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395360946655
    2. ' =' → logprob: -0.8259395360946655
    3. '           ' → logprob: -17.200939178466797
    4. '=f' → logprob: -17.700939178466797
    5. '       ' → logprob: -17.950939178466797
    6. '   ' → logprob: -18.325939178466797
    7. '=
' → logprob: -19.325939178466797
    8. '＝' → logprob: -19.575939178466797
    9. ' ' → logprob: -19.700939178466797
    10. '    ' → logprob: -20.200939178466797

Token 845: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.20141421258449554
    2. ' dfs' → logprob: -1.7014142274856567
    3. 'dns' → logprob: -15.576414108276367
    4. ' ' → logprob: -15.701414108276367
    5. 'DFS' → logprob: -16.076414108276367
    6. 'd' → logprob: -16.201414108276367
    7. 'df' → logprob: -16.201414108276367
    8. '0' → logprob: -16.826414108276367
    9. ' ' → logprob: -16.826414108276367
    10. 'ds' → logprob: -16.826414108276367

Token 846: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. '(T' → logprob: -18.250001907348633
    4. '(
' → logprob: -19.000001907348633
    5. 'S' → logprob: -19.125001907348633
    6. '<|end|>' → logprob: -19.125001907348633
    7. ' (' → logprob: -19.500001907348633
    8. '(s' → logprob: -20.125001907348633
    9. '```' → logprob: -20.875001907348633
    10. '(ST' → logprob: -20.875001907348633

Token 847: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445127372804563e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',S' → logprob: -14.12501049041748
    4. ',T' → logprob: -15.25001049041748
    5. ' ' → logprob: -15.87501049041748
    6. '(' → logprob: -16.125009536743164
    7. '(S' → logprob: -16.500009536743164
    8. ',
' → logprob: -17.125009536743164
    9. 'T' → logprob: -17.375009536743164
    10. 'S' → logprob: -18.000009536743164

Token 848: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0010076811304315925
    2. '10' → logprob: -7.001007556915283
    3. ' S' → logprob: -9.626008033752441
    4. ' ' → logprob: -11.251008033752441
    5. '0' → logprob: -11.376008033752441
    6. 'T' → logprob: -12.376008033752441
    7. '   ' → logprob: -14.001008033752441
    8. ')' → logprob: -15.251008033752441
    9. '(S' → logprob: -16.001007080078125
    10. '1' → logprob: -16.126007080078125

Token 849: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.347765181795694e-05
    2. ' ' → logprob: -10.000053405761719
    3. '0' → logprob: -12.125053405761719
    4. 'S' → logprob: -13.375053405761719
    5. '(' → logprob: -15.000053405761719
    6. '   ' → logprob: -15.000053405761719
    7. 'T' → logprob: -15.875053405761719
    8. '  ' → logprob: -16.00005340576172
    9. '
' → logprob: -16.75005340576172
    10. '1' → logprob: -16.87505340576172

Token 850: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.9153885558771435e-06
    2. '**' → logprob: -12.125005722045898
    3. '-' → logprob: -15.500005722045898
    4. '```' → logprob: -15.875005722045898
    5. ' ' → logprob: -16.2500057220459
    6. '``' → logprob: -16.7500057220459
    7. '
' → logprob: -17.8750057220459
    8. '   ' → logprob: -19.1250057220459
    9. '8' → logprob: -19.5000057220459
    10. '09' → logprob: -19.5000057220459

Token 851: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '
' → logprob: -16.250001907348633
    5. '```' → logprob: -16.625001907348633
    6. '``' → logprob: -16.750001907348633
    7. '{' → logprob: -17.000001907348633
    8. '-' → logprob: -17.375001907348633
    9. 'm' → logprob: -17.375001907348633
    10. '1' → logprob: -18.000001907348633

Token 852: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ')
' → logprob: -11.50001049041748
    3. ' )' → logprob: -15.50001049041748
    4. '       ' → logprob: -16.250011444091797
    5. '())' → logprob: -16.250011444091797
    6. ')return' → logprob: -17.000011444091797
    7. '   ' → logprob: -17.500011444091797
    8. '))' → logprob: -18.125011444091797
    9. '()' → logprob: -18.250011444091797
    10. '<|end|>' → logprob: -18.500011444091797

Token 853: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016210438683629036
    2. '<|end|>' → logprob: -4.391210556030273
    3. 'return' → logprob: -6.766210556030273
    4. '    
' → logprob: -7.141210556030273
    5. '
' → logprob: -7.266210556030273
    6. ' return' → logprob: -7.766210556030273
    7. '       ' → logprob: -8.891210556030273
    8. '```' → logprob: -8.891210556030273
    9. '<|end|>' → logprob: -8.891210556030273
    10. ')' → logprob: -9.766210556030273

Token 854: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002636653371155262
    2. '
' → logprob: -6.002636432647705
    3. 'return' (adapté à ' return') → logprob: -9.002636909484863
    4. '    
' → logprob: -10.752636909484863
    5. ' return' → logprob: -11.127636909484863
    6. '```' → logprob: -13.752636909484863
    7. '
' → logprob: -14.877636909484863
    8. '	return' → logprob: -15.127636909484863
    9. '  
' → logprob: -16.002635955810547
    10. '       ' → logprob: -17.127635955810547

Token 855: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.048595886677503586
    2. ' flow' → logprob: -3.048595905303955
    3. '(flow' → logprob: -11.673595428466797
    4. 'flows' → logprob: -19.673595428466797
    5. '_flow' → logprob: -20.923595428466797
    6. '.flow' → logprob: -21.048595428466797
    7. 'flux' → logprob: -21.048595428466797
    8. '   ' → logprob: -21.173595428466797
    9. ' ' → logprob: -21.173595428466797
    10. 'Flow' → logprob: -21.298595428466797

Token 856: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026303434744477272
    2. '==' → logprob: -3.65130352973938
    3. '   ' → logprob: -14.6513032913208
    4. ' =' → logprob: -14.9013032913208
    5. ')==' → logprob: -15.1513032913208
    6. '===' → logprob: -15.1513032913208
    7. '<|end|>' → logprob: -15.1513032913208
    8. '=' → logprob: -15.2763032913208
    9. '==
' → logprob: -15.4013032913208
    10. 'm' → logprob: -15.6513032913208

Token 857: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005530327325686812
    2. ' m' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.750553131103516
    4. '	m' → logprob: -19.375553131103516
    5. ' ' → logprob: -21.000553131103516
    6. ')m' → logprob: -22.500553131103516
    7. '```' → logprob: -22.875553131103516
    8. '    ' → logprob: -23.250553131103516
    9. 'м' → logprob: -23.750553131103516
    10. '
' → logprob: -23.875553131103516

Token 858: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 859: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03940105065703392
    2. '<|end|>' → logprob: -4.289401054382324
    3. '```' → logprob: -4.414401054382324
    4. '#' → logprob: -4.539401054382324
    5. 'import' → logprob: -7.289401054382324
    6. '<|end|>' → logprob: -7.914401054382324
    7. 'n' → logprob: -8.539401054382324
    8. '
' → logprob: -9.039401054382324
    9. ' def' → logprob: -9.164401054382324
    10. '\' → logprob: -9.289401054382324

Token 860: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9490197896957397
    2. ' find' → logprob: -1.6990197896957397
    3. ' solve' → logprob: -1.9490197896957397
    4. ' max' → logprob: -2.0740199089050293
    5. ' balanced' → logprob: -2.9490199089050293
    6. ' binary' → logprob: -3.1990199089050293
    7. ' possible' → logprob: -3.9490199089050293
    8. ' min' → logprob: -4.074019908905029
    9. ' maximum' → logprob: -5.199019908905029
    10. ' assign' → logprob: -5.449019908905029

Token 861: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0017280145548284054
    2. '():
' → logprob: -6.376728057861328
    3. '()' → logprob: -11.251728057861328
    4. ' ():' → logprob: -12.251728057861328
    5. '():
' → logprob: -12.376728057861328
    6. '_' → logprob: -13.251728057861328
    7. '(' → logprob: -13.751728057861328
    8. '():

' → logprob: -14.251728057861328
    9. '().' → logprob: -16.626728057861328
    10. '(argv' → logprob: -17.251728057861328

Token 862: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004013934172689915
    2. ' import' → logprob: -6.129014015197754
    3. ' n' → logprob: -7.254014015197754
    4. 'import' → logprob: -7.504014015197754
    5. '```' → logprob: -7.754014015197754
    6. 'n' → logprob: -9.879014015197754
    7. ' pass' → logprob: -11.004014015197754
    8. ' sys' → logprob: -11.254014015197754
    9. ' line' → logprob: -11.379014015197754
    10. ' input' → logprob: -11.379014015197754

Token 863: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.41869208216667175
    2. ' n' → logprob: -1.4186921119689941
    3. 'import' → logprob: -3.418692111968994
    4. ' input' → logprob: -3.543692111968994
    5. '   ' → logprob: -3.793692111968994
    6. 'input' (adapté à ' input') → logprob: -4.668692111968994
    7. ' import' → logprob: -5.043692111968994
    8. 't' → logprob: -11.293691635131836
    9. '	n' → logprob: -12.168691635131836
    10. 'r' → logprob: -12.293691635131836

Token 864: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01332669798284769
    2. '_line' → logprob: -4.763326644897461
    3. '_data' → logprob: -5.513326644897461
    4. '_' → logprob: -8.763326644897461
    5. '_lines' → logprob: -9.138326644897461
    6. ' =' → logprob: -9.263326644897461
    7. '().' → logprob: -9.263326644897461
    8. '_str' → logprob: -9.888326644897461
    9. '=' → logprob: -10.388326644897461
    10. '()
' → logprob: -10.513326644897461

Token 865: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07890135049819946
    2. ' sys' → logprob: -2.5789012908935547
    3. 'lambda' → logprob: -12.203901290893555
    4. '=sys' → logprob: -12.328901290893555
    5. '	sys' → logprob: -13.578901290893555
    6. '(sys' → logprob: -14.328901290893555
    7. ' lambda' → logprob: -15.328901290893555
    8. 'input' → logprob: -16.453901290893555
    9. '```' → logprob: -18.453901290893555
    10. '_sys' → logprob: -18.953901290893555

Token 866: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.9981420336989686e-05
    2. '.readline' → logprob: -11.875020027160645
    3. '.argv' → logprob: -12.250020027160645
    4. '.stdout' → logprob: -12.875020027160645
    5. 'stdin' → logprob: -13.125020027160645
    6. '.' → logprob: -13.500020027160645
    7. '.std' → logprob: -13.500020027160645
    8. '.next' → logprob: -15.750020027160645
    9. '.input' → logprob: -15.750020027160645
    10. '.st' → logprob: -16.625019073486328

Token 867: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011147680692374706
    2. 'read' → logprob: -4.511147499084473
    3. '.read' → logprob: -10.011147499084473
    4. ' readline' → logprob: -10.636147499084473
    5. 'buffer' → logprob: -11.386147499084473
    6. '_read' → logprob: -11.511147499084473
    7. 'rea' → logprob: -12.386147499084473
    8. 'readonly' → logprob: -13.761147499084473
    9. 'reader' → logprob: -14.136147499084473
    10. '.readlines' → logprob: -14.136147499084473

Token 868: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3819625973701477
    2. '()' → logprob: -1.381962537765503
    3. '()
' → logprob: -3.256962537765503
    4. '().' → logprob: -4.256962776184082
    5. '
' → logprob: -4.381962776184082
    6. '    
' → logprob: -8.381962776184082
    7. 'n' → logprob: -8.506962776184082
    8. '()\' → logprob: -8.631962776184082
    9. 'def' → logprob: -8.756962776184082
    10. ' ()' → logprob: -8.881962776184082

Token 869: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014803372323513031
    2. 'n' → logprob: -4.639803409576416
    3. 't' → logprob: -5.514803409576416
    4. '()' → logprob: -8.139802932739258
    5. 'def' → logprob: -8.889802932739258
    6. '
' → logprob: -8.889802932739258
    7. '(n' → logprob: -9.014802932739258
    8. ' t' → logprob: -9.139802932739258
    9. ' n' → logprob: -9.264802932739258
    10. '```' → logprob: -10.639802932739258

Token 870: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0773904100060463
    2. 't' → logprob: -2.827390432357788
    3. 'T' → logprob: -4.327390193939209
    4. 'm' → logprob: -7.077390193939209
    5. '   ' → logprob: -7.077390193939209
    6. 'N' → logprob: -8.577390670776367
    7. ' n' → logprob: -9.577390670776367
    8. 'q' → logprob: -10.077390670776367
    9. '```' → logprob: -10.077390670776367
    10. 'num' → logprob: -10.327390670776367

Token 871: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07895148545503616
    2. ' True' → logprob: -2.578951597213745
    3. '(True' → logprob: -9.703951835632324
    4. '=True' → logprob: -15.078951835632324
    5. '1' → logprob: -15.453951835632324
    6. 'true' → logprob: -16.703950881958008
    7. '_true' → logprob: -17.703950881958008
    8. '_TRUE' → logprob: -18.453950881958008
    9. '
' → logprob: -18.578950881958008
    10. 'TRUE' → logprob: -18.703950881958008

Token 872: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0427181720733643
    2. ':' → logprob: -1.5427181720733643
    3. '():
' → logprob: -1.7927181720733643
    4. ':
' → logprob: -2.1677181720733643
    5. '       ' → logprob: -2.5427181720733643
    6. '():' → logprob: -2.9177181720733643
    7. ' line' → logprob: -4.667717933654785
    8. ',' → logprob: -5.792717933654785
    9. '(line' → logprob: -5.792717933654785
    10. '):
' → logprob: -7.417717933654785

Token 873: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020707828924059868
    2. ' line' → logprob: -3.895707845687866
    3. ' try' → logprob: -9.645708084106445
    4. 'line' → logprob: -9.770708084106445
    5. '       ' → logprob: -10.895708084106445
    6. '	line' → logprob: -11.395708084106445
    7. 'try' → logprob: -12.395708084106445
    8. ' s' → logprob: -12.770708084106445
    9. '   ' → logprob: -13.020708084106445
    10. ' n' → logprob: -13.270708084106445

Token 874: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0074943541549146175
    2. ' line' → logprob: -5.7574944496154785
    3. 'l' → logprob: -6.0074944496154785
    4. 'n' → logprob: -6.8824944496154785
    5. '   ' → logprob: -7.1324944496154785
    6. 'N' → logprob: -11.63249397277832
    7. '	line' → logprob: -13.00749397277832
    8. ' l' → logprob: -13.13249397277832
    9. 'L' → logprob: -13.25749397277832
    10. ' n' → logprob: -13.50749397277832

Token 875: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759876370429993
    2. ' =' → logprob: -0.8259876370429993
    3. '=line' → logprob: -9.950987815856934
    4. '=
' → logprob: -15.950987815856934
    5. 's' → logprob: -16.200986862182617
    6. '   ' → logprob: -16.450986862182617
    7. '(line' → logprob: -16.950986862182617
    8. ' ' → logprob: -16.950986862182617
    9. ' =
' → logprob: -17.075986862182617
    10. '＝' → logprob: -17.075986862182617

Token 876: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029821433126926422
    2. ' input' → logprob: -3.5298213958740234
    3. 'sys' → logprob: -9.779821395874023
    4. ' sys' → logprob: -11.154821395874023
    5. '=input' → logprob: -17.154821395874023
    6. '(input' → logprob: -18.904821395874023
    7. '<input' → logprob: -20.029821395874023
    8. '_input' → logprob: -20.154821395874023
    9. '=sys' → logprob: -20.154821395874023
    10. '	input' → logprob: -20.654821395874023

Token 877: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1474992036819458
    2. ' =' → logprob: -1.3974992036819458
    3. '=line' → logprob: -1.5224992036819458
    4. '       ' → logprob: -2.2724990844726562
    5. 'line' → logprob: -2.3974990844726562
    6. ' line' → logprob: -3.8974990844726562
    7. '(line' → logprob: -6.647499084472656
    8. '   ' → logprob: -7.397499084472656
    9. '#line' → logprob: -8.647499084472656
    10. '	line' → logprob: -8.772499084472656

Token 878: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0019569406285881996
    2. ' line' → logprob: -6.251956939697266
    3. 'while' (adapté à ' while') → logprob: -10.626956939697266
    4. 'try' → logprob: -12.626956939697266
    5. '   ' → logprob: -14.876956939697266
    6. '(line' → logprob: -15.751956939697266
    7. '
' → logprob: -16.376956939697266
    8. ' while' → logprob: -16.376956939697266
    9. '       ' → logprob: -17.126956939697266
    10. '#line' → logprob: -17.501956939697266

Token 879: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06145147234201431
    2. ' line' → logprob: -3.0614514350891113
    3. ' not' → logprob: -4.936451435089111
    4. 'not' → logprob: -5.311451435089111
    5. '(line' → logprob: -7.811451435089111
    6. 'len' → logprob: -9.06145191192627
    7. ' True' → logprob: -9.43645191192627
    8. 'True' → logprob: -9.93645191192627
    9. '(not' → logprob: -11.56145191192627
    10. ' len' → logprob: -13.06145191192627

Token 880: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19023403525352478
    2. '.strip' → logprob: -1.9402340650558472
    3. '=' → logprob: -3.8152339458465576
    4. ' ==' → logprob: -5.315234184265137
    5. ':=' → logprob: -6.190234184265137
    6. '.' → logprob: -8.565234184265137
    7. ' =' → logprob: -8.940234184265137
    8. '!=' → logprob: -9.815234184265137
    9. 'strip' → logprob: -10.190234184265137
    10. '()==' → logprob: -10.565234184265137

Token 881: '()' (ID: 416)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9055309295654297
    2. '()==' → logprob: -0.9055309295654297
    3. '()' → logprob: -1.6555309295654297
    4. ' ==' → logprob: -8.03053092956543
    5. '===' → logprob: -11.03053092956543
    6. '=' → logprob: -11.53053092956543
    7. '```' → logprob: -14.15553092956543
    8. '()=="' → logprob: -14.28053092956543
    9. '====' → logprob: -14.40553092956543
    10. ']==' → logprob: -14.65553092956543

Token 882: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.015862150117754936
    2. '()==' → logprob: -4.265861988067627
    3. ' ==' → logprob: -6.640861988067627
    4. '()' → logprob: -8.140862464904785
    5. '=' → logprob: -9.515862464904785
    6. '===' → logprob: -10.640862464904785
    7. '==
' → logprob: -14.515862464904785
    8. '====' → logprob: -14.765862464904785
    9. '```' → logprob: -14.765862464904785
    10. ')==' → logprob: -15.140862464904785

Token 883: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.006757052149623632
    2. ''' → logprob: -5.0067572593688965
    3. '''
' → logprob: -10.256756782531738
    4. ' '':
' → logprob: -12.506756782531738
    5. '""' → logprob: -13.756756782531738
    6. '"":' → logprob: -14.256756782531738
    7. ''',' → logprob: -14.506756782531738
    8. ''''' → logprob: -14.881756782531738
    9. '''.' → logprob: -16.006757736206055
    10. 'False' → logprob: -16.881757736206055

Token 884: '           ' (ID: 352)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3481704592704773
    2. '=line' → logprob: -2.223170518875122
    3. 'line' → logprob: -2.348170518875122
    4. ' =' → logprob: -3.473170518875122
    5. '=' → logprob: -3.973170518875122
    6. '(line' → logprob: -4.348170280456543
    7. ':
' → logprob: -4.723170280456543
    8. '       ' → logprob: -4.973170280456543
    9. ':' → logprob: -5.473170280456543
    10. ' and' → logprob: -5.723170280456543

Token 885: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.005243360530585051
    2. ' line' → logprob: -5.255243301391602
    3. '           ' → logprob: -11.755243301391602
    4. '	line' → logprob: -14.380243301391602
    5. '   ' → logprob: -14.630243301391602
    6. '       ' → logprob: -14.755243301391602
    7. 'l' → logprob: -15.880243301391602
    8. '#line' → logprob: -16.7552433013916
    9. 'try' → logprob: -16.8802433013916
    10. '(line' → logprob: -17.8802433013916

Token 886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2534370422363281
    2. ' =' → logprob: -1.5034370422363281
    3. '=line' → logprob: -6.503437042236328
    4. 'line' → logprob: -12.253437042236328
    5. '=sys' → logprob: -12.878437042236328
    6. ' line' → logprob: -14.378437042236328
    7. '=
' → logprob: -15.753437042236328
    8. '+=' → logprob: -16.878437042236328
    9. '(line' → logprob: -17.003437042236328
    10. '＝' → logprob: -17.128437042236328

Token 887: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03175600990653038
    2. 'input' → logprob: -3.7817559242248535
    3. ' sys' → logprob: -4.7817559242248535
    4. ' input' → logprob: -9.281756401062012
    5. '=sys' → logprob: -17.781755447387695
    6. 'stdin' → logprob: -18.531755447387695
    7. '(sys' → logprob: -18.906755447387695
    8. 'import' → logprob: -20.406755447387695
    9. 'Sys' → logprob: -20.531755447387695
    10. '	sys' → logprob: -21.031755447387695

Token 888: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006743200588971376
    2. '()
' → logprob: -5.006743431091309
    3. '().' → logprob: -10.756743431091309
    4. '()

' → logprob: -12.631743431091309
    5. '())' → logprob: -13.631743431091309
    6. '();' → logprob: -14.756743431091309
    7. '()
' → logprob: -14.756743431091309
    8. '()\' → logprob: -15.131743431091309
    9. '()`' → logprob: -15.506743431091309
    10. '(' → logprob: -15.631743431091309

Token 889: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16043047606945038
    2. '       ' → logprob: -1.9104304313659668
    3. ' if' → logprob: -9.660430908203125
    4. 'if' → logprob: -10.285430908203125
    5. ',' → logprob: -10.660430908203125
    6. '<|end|>' → logprob: -10.660430908203125
    7. '<|end|>' → logprob: -11.660430908203125
    8. '
' → logprob: -11.910430908203125
    9. '```' → logprob: -12.035430908203125
    10. '        
' → logprob: -12.410430908203125

Token 890: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8303722739219666
    2. 'if' (adapté à ' if') → logprob: -1.2053723335266113
    3. ' if' → logprob: -1.3303723335266113
    4. '       ' → logprob: -8.830371856689453
    5. 'If' → logprob: -12.830371856689453
    6. '
' → logprob: -13.080371856689453
    7. '	if' → logprob: -15.080371856689453
    8. 'break' → logprob: -15.080371856689453
    9. '               ' → logprob: -15.205371856689453
    10. '   ' → logprob: -15.455371856689453

Token 891: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5363549590110779
    2. 'line' → logprob: -1.2863550186157227
    3. 'not' → logprob: -2.0363550186157227
    4. ' line' → logprob: -4.786355018615723
    5. '#line' → logprob: -14.036355018615723
    6. ' ' → logprob: -15.286355018615723
    7. '	line' → logprob: -16.036354064941406
    8. '(line' → logprob: -16.286354064941406
    9. '!' → logprob: -17.036354064941406
    10. '[line' → logprob: -17.036354064941406

Token 892: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.038124337792396545
    2. ' ==' → logprob: -3.2881243228912354
    3. 'is' → logprob: -10.288124084472656
    4. ' is' → logprob: -10.663124084472656
    5. '===' → logprob: -11.663124084472656
    6. '=='' → logprob: -12.788124084472656
    7. '()==' → logprob: -12.788124084472656
    8. '=' → logprob: -12.913124084472656
    9. '==
' → logprob: -12.913124084472656
    10. '.strip' → logprob: -13.288124084472656

Token 893: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.004090866539627314
    2. ''' → logprob: -5.504090785980225
    3. '''
' → logprob: -12.129091262817383
    4. ''''' → logprob: -12.629091262817383
    5. ' '':
' → logprob: -13.129091262817383
    6. '""' → logprob: -14.879091262817383
    7. ' '' → logprob: -15.379091262817383
    8. ''',' → logprob: -15.379091262817383
    9. 'None' → logprob: -15.504091262817383
    10. '```' → logprob: -15.629091262817383

Token 894: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008682293118909001
    2. 'return' → logprob: -8.25086784362793
    3. ':return' → logprob: -8.25086784362793
    4. '           ' → logprob: -9.12586784362793
    5. ' return' → logprob: -9.25086784362793
    6. ':
' → logprob: -9.75086784362793
    7. ':' → logprob: -10.00086784362793
    8. '                   ' → logprob: -11.37586784362793
    9. '                       ' → logprob: -11.87586784362793
    10. '       ' → logprob: -12.00086784362793

Token 895: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0232922974973917
    2. ' return' → logprob: -3.773292303085327
    3. '               ' → logprob: -10.023292541503906
    4. '           ' → logprob: -13.898292541503906
    5. '                   ' → logprob: -14.273292541503906
    6. '
' → logprob: -15.023292541503906
    7. 'break' → logprob: -15.148292541503906
    8. '                       ' → logprob: -16.523292541503906
    9. '	return' → logprob: -16.773292541503906
    10. '       ' → logprob: -17.773292541503906

Token 896: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014651041710749269
    2. '
' → logprob: -6.876465320587158
    3. '<|end|>' → logprob: -8.37646484375
    4. '        
' → logprob: -8.62646484375
    5. '   ' → logprob: -12.00146484375
    6. 'n' → logprob: -12.87646484375
    7. '  
' → logprob: -12.87646484375
    8. '<|end|>' → logprob: -13.12646484375
    9. ',' → logprob: -13.37646484375
    10. '    
' → logprob: -13.87646484375

Token 897: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011468871962279081
    2. '<|end|>' → logprob: -6.8761467933654785
    3. '        
' → logprob: -9.876147270202637
    4. '
' → logprob: -11.251147270202637
    5. 'n' → logprob: -11.501147270202637
    6. 's' → logprob: -11.626147270202637
    7. ',' → logprob: -11.751147270202637
    8. ' s' → logprob: -12.376147270202637
    9. '<|end|>' → logprob: -12.501147270202637
    10. '   ' → logprob: -12.626147270202637

Token 898: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.054459813982248306
    2. ' n' → logprob: -3.179459810256958
    3. '       ' → logprob: -4.929460048675537
    4. '   ' → logprob: -6.054460048675537
    5. ' parts' → logprob: -7.554460048675537
    6. 'N' → logprob: -7.679460048675537
    7. 'parts' → logprob: -8.179459571838379
    8. 'm' → logprob: -8.929459571838379
    9. 'k' → logprob: -9.429459571838379
    10. 'a' → logprob: -9.804459571838379

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012592298910021782
    2. ',m' → logprob: -4.387592315673828
    3. ' ,' → logprob: -9.887592315673828
    4. '=' → logprob: -10.887592315673828
    5. ' =' → logprob: -12.262592315673828
    6. 'm' → logprob: -13.262592315673828
    7. ',n' → logprob: -13.262592315673828
    8. ',int' → logprob: -14.387592315673828
    9. '_,' → logprob: -14.637592315673828
    10. ',p' → logprob: -14.887592315673828

Token 900: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011048054322600365
    2. ' m' → logprob: -4.511047840118408
    3. ' ' → logprob: -15.761048316955566
    4. '   ' → logprob: -17.26104736328125
    5. '  ' → logprob: -17.63604736328125
    6. 'k' → logprob: -18.51104736328125
    7. '    ' → logprob: -19.13604736328125
    8. '	m' → logprob: -19.13604736328125
    9. ' =' → logprob: -19.26104736328125
    10. '=' → logprob: -19.38604736328125

Token 901: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269538253545761
    2. ' =' → logprob: -2.1269538402557373
    3. ',' → logprob: -10.626954078674316
    4. ')' → logprob: -14.376954078674316
    5. '=line' → logprob: -14.751954078674316
    6. '=int' → logprob: -16.251953125
    7. '<|end|>' → logprob: -16.251953125
    8. ' ' → logprob: -16.501953125
    9. '=list' → logprob: -17.001953125
    10. ')=' → logprob: -17.251953125

Token 902: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0788901224732399
    2. 'map' → logprob: -2.578890085220337
    3. '	map' → logprob: -15.203889846801758
    4. 'list' → logprob: -16.828889846801758
    5. '
' → logprob: -17.578889846801758
    6. '[' → logprob: -17.828889846801758
    7. '(map' → logprob: -17.953889846801758
    8. ' list' → logprob: -18.078889846801758
    9. 'm' → logprob: -18.328889846801758
    10. ' ' → logprob: -18.453889846801758

Token 903: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004743637517094612
    2. '(str' → logprob: -5.504743576049805
    3. '(line' → logprob: -8.129743576049805
    4. '(' → logprob: -8.754743576049805
    5. '(map' → logprob: -9.254743576049805
    6. '(lambda' → logprob: -9.629743576049805
    7. 'int' → logprob: -10.754743576049805
    8. '(list' → logprob: -10.879743576049805
    9. '(tuple' → logprob: -12.879743576049805
    10. '[int' → logprob: -13.004743576049805

Token 904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11170031130313873
    2. '(line' → logprob: -2.8617002964019775
    3. ',line' → logprob: -3.1117002964019775
    4. 'line' → logprob: -5.986700534820557
    5. ',input' → logprob: -6.986700534820557
    6. 'input' → logprob: -8.361700057983398
    7. '=line' → logprob: -8.861700057983398
    8. '(input' → logprob: -9.236700057983398
    9. '[line' → logprob: -10.236700057983398
    10. '#line' → logprob: -10.986700057983398

Token 905: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00012368128227535635
    2. ' line' → logprob: -9.000123977661133
    3. 'map' → logprob: -15.750123977661133
    4. 'list' → logprob: -17.125123977661133
    5. '(line' → logprob: -18.375123977661133
    6. 'str' → logprob: -19.375123977661133
    7. '=line' → logprob: -19.375123977661133
    8. '[line' → logprob: -19.875123977661133
    9. 'int' → logprob: -20.500123977661133
    10. '#line' → logprob: -20.750123977661133

Token 906: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05367231369018555
    2. '.strip' → logprob: -3.0536723136901855
    3. '.split' → logprob: -5.3036723136901855
    4. '.' → logprob: -9.928672790527344
    5. 'split' → logprob: -10.428672790527344
    6. 'strip' → logprob: -11.553672790527344
    7. ' .' → logprob: -12.053672790527344
    8. '.readline' → logprob: -12.678672790527344
    9. '()' → logprob: -13.803672790527344
    10. '   ' → logprob: -15.428672790527344

Token 907: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.625000953674316
    3. '.split' → logprob: -16.125
    4. 'split' → logprob: -18.0
    5. ' ().' → logprob: -18.75
    6. '().'' → logprob: -19.125
    7. '()
' → logprob: -19.5
    8. '(' → logprob: -19.5
    9. '()[' → logprob: -19.625
    10. '())' → logprob: -19.875

Token 908: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.625
    3. 'spl' → logprob: -18.875
    4. '(split' → logprob: -19.375
    5. '.split' → logprob: -20.625
    6. 'rstrip' → logprob: -22.25
    7. '```' → logprob: -22.875
    8. '_split' → logprob: -23.0
    9. 'strip' → logprob: -23.875
    10. 'plit' → logprob: -23.875

Token 909: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003382199676707387
    2. '()' → logprob: -5.753382205963135
    3. ')' → logprob: -8.753381729125977
    4. '())
' → logprob: -10.628381729125977
    5. '(' → logprob: -11.128381729125977
    6. '('' → logprob: -11.878381729125977
    7. '()))' → logprob: -15.503381729125977
    8. '()
' → logprob: -16.003381729125977
    9. ' ())' → logprob: -16.003381729125977
    10. '(),' → logprob: -16.253381729125977

Token 910: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024343330413103104
    2. 'low' → logprob: -4.274343490600586
    3. ' low' → logprob: -5.774343490600586
    4. '   ' → logprob: -6.149343490600586
    5. '        
' → logprob: -6.899343490600586
    6. ' if' → logprob: -7.024343490600586
    7. 'edges' → logprob: -7.524343490600586
    8. 'min' → logprob: -7.649343490600586
    9. ' edges' → logprob: -7.774343490600586
    10. '<|end|>' → logprob: -8.149343490600586

Token 911: ' if' (ID: 538)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.4092225432395935
    2. 'edges' → logprob: -1.5342226028442383
    3. 'if' (adapté à ' if') → logprob: -3.0342226028442383
    4. 'degrees' → logprob: -3.0342226028442383
    5. '       ' → logprob: -5.034222602844238
    6. 'l' → logprob: -5.284222602844238
    7. 'deg' → logprob: -5.659222602844238
    8. 'degree' → logprob: -6.409222602844238
    9. 'lower' → logprob: -6.909222602844238
    10. ' edges' → logprob: -6.909222602844238

Token 912: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20146186649799347
    2. ' n' → logprob: -1.701461911201477
    3. 'm' → logprob: -10.201461791992188
    4. ' m' → logprob: -12.451461791992188
    5. '(n' → logprob: -12.451461791992188
    6. ' not' → logprob: -12.951461791992188
    7. 'not' → logprob: -14.326461791992188
    8. '   ' → logprob: -15.701461791992188
    9. ' ' → logprob: -15.701461791992188
    10. '	n' → logprob: -16.201461791992188

Token 913: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759687423706055
    2. '==' → logprob: -0.8259687423706055
    3. ' <' → logprob: -11.700968742370605
    4. '<' → logprob: -12.200968742370605
    5. '<=' → logprob: -12.450968742370605
    6. '=' → logprob: -12.575968742370605
    7. '   ' → logprob: -12.825968742370605
    8. ' <=' → logprob: -13.200968742370605
    9. '===' → logprob: -13.575968742370605
    10. ' ' → logprob: -14.075968742370605

Token 914: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. 'm' → logprob: -15.250335693359375
    4. '
' → logprob: -16.625335693359375
    5. '۰' → logprob: -17.125335693359375
    6. '```' → logprob: -17.750335693359375
    7. '=' → logprob: -18.062835693359375
    8. 'n' → logprob: -18.312835693359375
    9. '   ' → logprob: -18.375335693359375
    10. ' m' → logprob: -18.437835693359375

Token 915: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'm' → logprob: -15.625004768371582
    4. '۰' → logprob: -18.125003814697266
    5. 'and' → logprob: -18.875003814697266
    6. '<|end|>' → logprob: -19.375003814697266
    7. 'n' → logprob: -19.750003814697266
    8. '
' → logprob: -20.125003814697266
    9. 'o' → logprob: -20.125003814697266
    10. '```' → logprob: -20.562503814697266

Token 916: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2519311308860779
    2. ' and' → logprob: -1.5019311904907227
    3. ' ' → logprob: -13.376931190490723
    4. '	and' → logprob: -15.126931190490723
    5. '   ' → logprob: -16.376930236816406
    6. '  ' → logprob: -17.251930236816406
    7. 'a' → logprob: -17.751930236816406
    8. '0' → logprob: -17.751930236816406
    9. '    ' → logprob: -18.126930236816406
    10. '      ' → logprob: -18.501930236816406

Token 917: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015023599844425917
    2. ' m' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.876502990722656
    4. '	m' → logprob: -17.876502990722656
    5. '  ' → logprob: -19.626502990722656
    6. ' ' → logprob: -21.126502990722656
    7. '    ' → logprob: -22.376502990722656
    8. ' ' → logprob: -22.501502990722656
    9. '_m' → logprob: -24.251502990722656
    10. ')m' → logprob: -24.876502990722656

Token 918: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07004079967737198
    2. ' ==' → logprob: -2.695040702819824
    3. '=' → logprob: -9.570040702819824
    4. '0' → logprob: -10.695040702819824
    5. ')==' → logprob: -12.570040702819824
    6. ' ' → logprob: -13.320040702819824
    7. '<|end|>' → logprob: -13.445040702819824
    8. '==
' → logprob: -13.820040702819824
    9. '===' → logprob: -13.945040702819824
    10. ' =' → logprob: -14.195040702819824

Token 919: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -19.750011444091797
    4. '<|end|>' → logprob: -20.875011444091797
    5. '=' → logprob: -22.000011444091797
    6. '
' → logprob: -22.125011444091797
    7. '০' → logprob: -22.500011444091797
    8. ' ' → logprob: -22.500011444091797
    9. '   ' → logprob: -22.625011444091797
    10. '```' → logprob: -22.625011444091797

Token 920: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۰' → logprob: -20.125
    4. '
' → logprob: -21.75
    5. '০' → logprob: -22.25
    6. '```' → logprob: -22.5
    7. '<|end|>' → logprob: -22.75
    8. '०' → logprob: -23.0
    9. '   ' → logprob: -23.5
    10. '<|end|>' → logprob: -23.5

Token 921: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47423526644706726
    2. ':' → logprob: -0.9742352962493896
    3. ':return' → logprob: -9.349235534667969
    4. '       ' → logprob: -10.099235534667969
    5. '   ' → logprob: -10.724235534667969
    6. ':
' → logprob: -12.349235534667969
    7. '           ' → logprob: -13.474235534667969
    8. '):
' → logprob: -13.974235534667969
    9. '():
' → logprob: -14.349235534667969
    10. ' :
' → logprob: -14.849235534667969

Token 922: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006048606592230499
    2. ':' → logprob: -8.000604629516602
    3. ':
' → logprob: -8.500604629516602
    4. '       ' → logprob: -9.875604629516602
    5. '          ' → logprob: -12.500604629516602
    6. '   ' → logprob: -12.625604629516602
    7. ',' → logprob: -13.375604629516602
    8. '	       ' → logprob: -13.500604629516602
    9. '               ' → logprob: -13.750604629516602
    10. '		' → logprob: -13.750604629516602

Token 923: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8320901393890381
    2. '           ' → logprob: -1.082090139389038
    3. 'break' (adapté à ' break') → logprob: -1.832090139389038
    4. ' return' → logprob: -3.457090139389038
    5. ' break' → logprob: -3.457090139389038
    6. '               ' → logprob: -6.082090377807617
    7. '       ' → logprob: -7.707090377807617
    8. '	break' → logprob: -9.957090377807617
    9. '
' → logprob: -10.832090377807617
    10. '	       ' → logprob: -11.082090377807617

Token 924: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006418351549655199
    2. '        
' → logprob: -5.631418228149414
    3. '
' → logprob: -6.381418228149414
    4. '<|end|>' → logprob: -8.131418228149414
    5. '   ' → logprob: -8.256418228149414
    6. 'low' → logprob: -9.131418228149414
    7. '```' → logprob: -9.256418228149414
    8. ' low' → logprob: -9.506418228149414
    9. ',' → logprob: -9.881418228149414
    10. '    
' → logprob: -10.381418228149414

Token 925: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00145297113340348
    2. ' edges' → logprob: -7.876452922821045
    3. '        
' → logprob: -8.001453399658203
    4. '   ' → logprob: -8.626453399658203
    5. 'edges' → logprob: -8.876453399658203
    6. '```' → logprob: -9.126453399658203
    7. 'low' → logprob: -9.251453399658203
    8. '<|end|>' → logprob: -9.876453399658203
    9. ' low' → logprob: -10.001453399658203
    10. 's' → logprob: -10.751453399658203

Token 926: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.1146446242928505
    2. '       ' → logprob: -2.4896445274353027
    3. ' edges' → logprob: -3.7396445274353027
    4. 'friends' → logprob: -8.239645004272461
    5. 'degrees' → logprob: -8.239645004272461
    6. '```' → logprob: -8.739645004272461
    7. '   ' → logprob: -8.989645004272461
    8. 'low' → logprob: -9.114645004272461
    9. 'd' → logprob: -9.364645004272461
    10. '        
' → logprob: -9.489645004272461

Token 927: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014293223619461
    2. ' =' → logprob: -1.7014293670654297
    3. '=[]' → logprob: -11.07642936706543
    4. '=[]
' → logprob: -15.20142936706543
    5. ',' → logprob: -16.20142936706543
    6. '＝' → logprob: -16.57642936706543
    7. '=[]
' → logprob: -17.32642936706543
    8. '   ' → logprob: -17.57642936706543
    9. '[]' → logprob: -17.57642936706543
    10. '=[' → logprob: -17.95142936706543

Token 928: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.032694779336452484
    2. '[]
' → logprob: -3.5326948165893555
    3. '[]' → logprob: -6.2826948165893555
    4. '[int' → logprob: -8.532694816589355
    5. '[e' → logprob: -8.782694816589355
    6. '[array' → logprob: -9.282694816589355
    7. '[n' → logprob: -9.532694816589355
    8. '[class' → logprob: -9.532694816589355
    9. '[i' → logprob: -9.907694816589355
    10. ' [' → logprob: -10.282694816589355

Token 929: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24143560230731964
    2. '       ' → logprob: -2.1164355278015137
    3. 'for' → logprob: -3.1164355278015137
    4. '<|end|>' → logprob: -3.4914355278015137
    5. '        
' → logprob: -4.866435527801514
    6. '	for' → logprob: -5.741435527801514
    7. '   ' → logprob: -6.616435527801514
    8. '```' → logprob: -6.991435527801514
    9. '  
' → logprob: -7.366435527801514
    10. '<|end|>' → logprob: -7.491435527801514

Token 930: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0030277445912361145
    2. ' for' → logprob: -6.00302791595459
    3. '       ' → logprob: -7.50302791595459
    4. '	for' → logprob: -15.50302791595459
    5. '
' → logprob: -16.003026962280273
    6. '   ' → logprob: -16.628026962280273
    7. '```' → logprob: -17.628026962280273
    8. 'while' → logprob: -19.003026962280273
    9. ' ' → logprob: -20.378026962280273
    10. '        
' → logprob: -20.753026962280273

Token 931: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.113290095934644e-05
    2. ' _' → logprob: -10.000081062316895
    3. '_i' → logprob: -10.250081062316895
    4. '_in' → logprob: -15.875081062316895
    5. '_j' → logprob: -16.12508201599121
    6. '_range' → logprob: -17.25008201599121
    7. '_=' → logprob: -17.62508201599121
    8. ' i' → logprob: -18.00008201599121
    9. 'i' → logprob: -18.00008201599121
    10. '_
' → logprob: -19.12508201599121

Token 932: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005999067332595587
    2. 'in' → logprob: -5.1309990882873535
    3. 'range' → logprob: -10.130998611450195
    4. '_' → logprob: -10.755998611450195
    5. 'i' → logprob: -12.630998611450195
    6. ' ' → logprob: -12.630998611450195
    7. '  ' → logprob: -14.130998611450195
    8. 's' → logprob: -14.505998611450195
    9. 'import' → logprob: -15.380998611450195
    10. '0' → logprob: -15.630998611450195

Token 933: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '	range' → logprob: -20.12509536743164
    4. 'in' → logprob: -20.50009536743164
    5. '(range' → logprob: -20.50009536743164
    6. '   ' → logprob: -21.00009536743164
    7. '[' → logprob: -21.50009536743164
    8. '
' → logprob: -21.75009536743164
    9. '_range' → logprob: -22.25009536743164
    10. '```' → logprob: -22.50009536743164

Token 934: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.759734732331708e-05
    2. 'm' → logprob: -11.000017166137695
    3. '(' → logprob: -14.250017166137695
    4. ' m' → logprob: -17.375017166137695
    5. '	m' → logprob: -17.375017166137695
    6. ' (' → logprob: -17.625017166137695
    7. '(
' → logprob: -19.125017166137695
    8. ',m' → logprob: -19.375017166137695
    9. '(M' → logprob: -20.000017166137695
    10. ')m' → logprob: -20.375017166137695

Token 935: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.015323799103498459
    2. ':
' → logprob: -5.140323638916016
    3. '):' → logprob: -5.515323638916016
    4. '():
' → logprob: -5.515323638916016
    5. ':' → logprob: -7.390323638916016
    6. '       ' → logprob: -7.640323638916016
    7. '           ' → logprob: -10.515323638916016
    8. '   ' → logprob: -10.515323638916016
    9. '):
' → logprob: -10.640323638916016
    10. '<|end|>' → logprob: -10.640323638916016

Token 936: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014964108122512698
    2. '   ' → logprob: -7.876496315002441
    3. ' line' → logprob: -7.876496315002441
    4. '```' → logprob: -8.751496315002441
    5. '<|end|>' → logprob: -8.876496315002441
    6. 'line' → logprob: -9.376496315002441
    7. '	       ' → logprob: -9.751496315002441
    8. ' edges' → logprob: -9.876496315002441
    9. '       ' → logprob: -10.376496315002441
    10. 'edges' → logprob: -10.501496315002441

Token 937: ' while' (ID: 2049)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.053067684173583984
    2. ' u' → logprob: -3.303067684173584
    3. 'line' → logprob: -4.803067684173584
    4. ' line' → logprob: -5.178067684173584
    5. '           ' → logprob: -7.053067684173584
    6. '	u' → logprob: -9.803068161010742
    7. '   ' → logprob: -10.678068161010742
    8. '(u' → logprob: -11.053068161010742
    9. 'a' → logprob: -11.178068161010742
    10. '       ' → logprob: -11.303068161010742

Token 938: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1002611368894577
    2. ' True' → logprob: -2.3502612113952637
    3. 'line' → logprob: -10.225260734558105
    4. ' line' → logprob: -11.725260734558105
    5. '(True' → logprob: -12.475260734558105
    6. 'edges' → logprob: -12.725260734558105
    7. '   ' → logprob: -13.725260734558105
    8. ' ' → logprob: -13.975260734558105
    9. 'len' → logprob: -14.725260734558105
    10. '1' → logprob: -14.850260734558105

Token 939: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17986074090003967
    2. ' line' → logprob: -2.179860830307007
    3. 'line' → logprob: -3.804860830307007
    4. '           ' → logprob: -3.804860830307007
    5. '(line' → logprob: -5.679860591888428
    6. '	line' → logprob: -7.304860591888428
    7. '   ' → logprob: -7.304860591888428
    8. '	           ' → logprob: -8.054861068725586
    9. 'token' → logprob: -8.304861068725586
    10. '#line' → logprob: -8.429861068725586

Token 940: '               ' (ID: 506)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5652455687522888
    2. ' line' → logprob: -0.9402455687522888
    3. '           ' → logprob: -3.4402456283569336
    4. '               ' → logprob: -4.815245628356934
    5. '	line' → logprob: -7.315245628356934
    6. '   ' → logprob: -8.565245628356934
    7. '#line' → logprob: -9.690245628356934
    8. '	           ' → logprob: -10.440245628356934
    9. '(line' → logprob: -10.565245628356934
    10. '                   ' → logprob: -10.690245628356934

Token 941: ' l' (ID: 305)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.09977586567401886
    2. ' line' → logprob: -2.599775791168213
    3. 'l' (adapté à ' l') → logprob: -4.849775791168213
    4. 'edge' → logprob: -5.474775791168213
    5. 'parts' → logprob: -5.849775791168213
    6. '               ' → logprob: -6.724775791168213
    7. '           ' → logprob: -6.849775791168213
    8. ' parts' → logprob: -7.349775791168213
    9. 'e' → logprob: -7.724775791168213
    10. 's' → logprob: -7.849775791168213

Token 942: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4520100951194763
    2. ' =' → logprob: -1.702010154724121
    3. '=line' → logprob: -1.827010154724121
    4. 'ine' → logprob: -3.952010154724121
    5. 'line' → logprob: -6.827010154724121
    6. '_line' → logprob: -9.952010154724121
    7. '                   ' → logprob: -10.577010154724121
    8. ' line' → logprob: -11.077010154724121
    9. '           ' → logprob: -11.702010154724121
    10. '(line' → logprob: -11.827010154724121

Token 943: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006718809716403484
    2. ' input' → logprob: -5.006718635559082
    3. '               ' → logprob: -13.631718635559082
    4. '           ' → logprob: -14.381718635559082
    5. '                   ' → logprob: -14.881718635559082
    6. 'sys' → logprob: -15.006718635559082
    7. '=input' → logprob: -15.006718635559082
    8. 'line' → logprob: -15.756718635559082
    9. '(input' → logprob: -15.881718635559082
    10. '	input' → logprob: -16.1317195892334

Token 944: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.332634836435318
    2. '()' → logprob: -1.7076348066329956
    3. '()
' → logprob: -2.332634925842285
    4. '           ' → logprob: -6.707634925842285
    5. '               ' → logprob: -6.707634925842285
    6. '():
' → logprob: -7.332634925842285
    7. '=' → logprob: -7.582634925842285
    8. '                   ' → logprob: -8.582634925842285
    9. '()='' → logprob: -9.082634925842285
    10. '=line' → logprob: -9.457634925842285

Token 945: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043749481439590454
    2. '().' → logprob: -4.1687493324279785
    3. '                   ' → logprob: -4.9187493324279785
    4. '           ' → logprob: -4.9187493324279785
    5. '.strip' → logprob: -5.0437493324279785
    6. ' =' → logprob: -5.9187493324279785
    7. '<|end|>' → logprob: -7.0437493324279785
    8. '	           ' → logprob: -7.9187493324279785
    9. '<|end|>' → logprob: -8.043749809265137
    10. '
' → logprob: -8.668749809265137

Token 946: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04194306209683418
    2. '               ' → logprob: -3.541943073272705
    3. 'if' (adapté à ' if') → logprob: -4.416943073272705
    4. '           ' → logprob: -11.291942596435547
    5. '                   ' → logprob: -11.416942596435547
    6. '	if' → logprob: -11.791942596435547
    7. '                ' → logprob: -12.916942596435547
    8. ' ' → logprob: -12.916942596435547
    9. '	           ' → logprob: -12.916942596435547
    10. '			' → logprob: -13.916942596435547

Token 947: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018150178715586662
    2. ' l' → logprob: -4.018150329589844
    3. ' ' → logprob: -16.643150329589844
    4. '	l' → logprob: -16.643150329589844
    5. 'len' → logprob: -17.018150329589844
    6. '           ' → logprob: -17.643150329589844
    7. '
' → logprob: -17.768150329589844
    8. 'not' → logprob: -17.893150329589844
    9. '   ' → logprob: -18.268150329589844
    10. '               ' → logprob: -19.018150329589844

Token 948: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.002652944065630436
    2. 'strip' → logprob: -6.252653121948242
    3. '.' → logprob: -7.627653121948242
    4. 's' → logprob: -10.127653121948242
    5. ' .' → logprob: -10.252653121948242
    6. '_strip' → logprob: -10.377653121948242
    7. 'and' → logprob: -10.752653121948242
    8. ' strip' → logprob: -10.752653121948242
    9. '               ' → logprob: -10.877653121948242
    10. '                   ' → logprob: -10.877653121948242

Token 949: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6563595533370972
    2. '():
' → logprob: -0.9063595533370972
    3. '():' → logprob: -3.2813596725463867
    4. '()!=' → logprob: -3.2813596725463867
    5. ' !=' → logprob: -7.031359672546387
    6. '()==' → logprob: -7.531359672546387
    7. '!='' → logprob: -8.906359672546387
    8. '()>' → logprob: -9.156359672546387
    9. ':
' → logprob: -9.406359672546387
    10. ':' → logprob: -9.406359672546387

Token 950: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2980175018310547
    2. '!=' → logprob: -2.0480175018310547
    3. ':
' → logprob: -2.6730175018310547
    4. '!='' → logprob: -3.4230175018310547
    5. '():
' → logprob: -4.798017501831055
    6. '()!=' → logprob: -5.048017501831055
    7. ':' → logprob: -5.548017501831055
    8. '                   ' → logprob: -6.048017501831055
    9. '               ' → logprob: -6.798017501831055
    10. '```' → logprob: -6.923017501831055

Token 951: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0007223221473395824
    2. ''' → logprob: -7.250722408294678
    3. ' '':
' → logprob: -11.62572193145752
    4. '''
' → logprob: -13.62572193145752
    5. '""' → logprob: -13.87572193145752
    6. ''''' → logprob: -14.75072193145752
    7. '"":' → logprob: -14.87572193145752
    8. ''',' → logprob: -15.75072193145752
    9. '"' → logprob: -16.000722885131836
    10. '```' → logprob: -16.625722885131836

Token 952: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0036794093903154135
    2. 'break' → logprob: -6.253679275512695
    3. ':
' → logprob: -7.128679275512695
    4. ' break' → logprob: -8.128679275512695
    5. '               ' → logprob: -8.378679275512695
    6. ':' → logprob: -9.003679275512695
    7. '                       ' → logprob: -9.253679275512695
    8. ',' → logprob: -9.878679275512695
    9. '           ' → logprob: -10.503679275512695
    10. '<|end|>' → logprob: -10.753679275512695

Token 953: ' break' (ID: 2338)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.9877699613571167
    2. 'u' → logprob: -1.3627699613571167
    3. ' break' → logprob: -1.8627699613571167
    4. 'break' (adapté à ' break') → logprob: -1.9877699613571167
    5. '                   ' → logprob: -2.9877700805664062
    6. ' edges' → logprob: -4.487770080566406
    7. 'edges' → logprob: -4.612770080566406
    8. '                       ' → logprob: -5.112770080566406
    9. '               ' → logprob: -7.237770080566406
    10. '(u' → logprob: -7.737770080566406

Token 954: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002569289645180106
    2. '               ' → logprob: -9.000256538391113
    3. '       ' → logprob: -9.750256538391113
    4. ',' → logprob: -10.250256538391113
    5. '                   ' → logprob: -11.125256538391113
    6. '
' → logprob: -12.000256538391113
    7. ' edges' → logprob: -12.250256538391113
    8. '<|end|>' → logprob: -12.750256538391113
    9. 'tokens' → logprob: -13.000256538391113
    10. ':
' → logprob: -13.625256538391113

Token 955: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009450533543713391
    2. '       ' → logprob: -7.875945091247559
    3. ' edges' → logprob: -8.000945091247559
    4. 'edges' → logprob: -8.625945091247559
    5. '               ' → logprob: -10.750945091247559
    6. '
' → logprob: -11.875945091247559
    7. '   ' → logprob: -12.125945091247559
    8. '                   ' → logprob: -12.375945091247559
    9. 'u' → logprob: -12.375945091247559
    10. '```' → logprob: -13.625945091247559

Token 956: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.0019372005481272936
    2. ' u' → logprob: -6.376937389373779
    3. '           ' → logprob: -8.501936912536621
    4. 'a' → logprob: -11.251936912536621
    5. '       ' → logprob: -11.876936912536621
    6. '	u' → logprob: -12.626936912536621
    7. '   ' → logprob: -12.876936912536621
    8. '               ' → logprob: -13.001936912536621
    9. 'x' → logprob: -13.251936912536621
    10. '```' → logprob: -13.751936912536621

Token 957: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011507763527333736
    2. ',v' → logprob: -4.761507987976074
    3. ',u' → logprob: -5.886507987976074
    4. ' ,' → logprob: -9.886507987976074
    5. '=' → logprob: -10.511507987976074
    6. ',user' → logprob: -11.261507987976074
    7. ',
' → logprob: -12.761507987976074
    8. ',w' → logprob: -13.136507987976074
    9. ' =' → logprob: -13.386507987976074
    10. ',n' → logprob: -13.386507987976074

Token 958: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889000326395035
    2. ' =' → logprob: -2.578890085220337
    3. ')' → logprob: -16.703889846801758
    4. '=line' → logprob: -17.203889846801758
    5. ')=' → logprob: -17.703889846801758
    6. ',' → logprob: -17.703889846801758
    7. ' ' → logprob: -18.328889846801758
    8. '           ' → logprob: -18.328889846801758
    9. '＝' → logprob: -18.953889846801758
    10. '   ' → logprob: -18.953889846801758

Token 959: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16022422909736633
    2. 'map' → logprob: -1.910224199295044
    3. '	map' → logprob: -16.78522491455078
    4. 'm' → logprob: -18.78522491455078
    5. '_map' → logprob: -18.78522491455078
    6. ' tuple' → logprob: -19.41022491455078
    7. '.map' → logprob: -19.53522491455078
    8. ' mapa' → logprob: -19.66022491455078
    9. 'tuple' → logprob: -19.78522491455078
    10. 'list' → logprob: -19.78522491455078

Token 960: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007213685312308371
    2. 'int' → logprob: -7.250721454620361
    3. '[int' → logprob: -12.375720977783203
    4. '(str' → logprob: -13.000720977783203
    5. '(lambda' → logprob: -13.000720977783203
    6. ' int' → logprob: -13.875720977783203
    7. '=int' → logprob: -13.875720977783203
    8. '<int' → logprob: -14.625720977783203
    9. '(' → logprob: -16.250720977783203
    10. 'lambda' → logprob: -16.250720977783203

Token 961: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.006398919504135847
    2. ',l' → logprob: -5.506399154663086
    3. ',' → logprob: -6.381399154663086
    4. 'l' → logprob: -7.631399154663086
    5. ')' → logprob: -9.381399154663086
    6. '(' → logprob: -10.256399154663086
    7. '                   ' → logprob: -12.006399154663086
    8. ' l' → logprob: -12.756399154663086
    9. '               ' → logprob: -12.756399154663086
    10. ' (' → logprob: -13.506399154663086

Token 962: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0002613358374219388
    2. ' l' → logprob: -8.250261306762695
    3. '	l' → logprob: -19.125261306762695
    4. '           ' → logprob: -20.000261306762695
    5. '_l' → logprob: -20.375261306762695
    6. ')' → logprob: -21.125261306762695
    7. '   ' → logprob: -21.500261306762695
    8. '(l' → logprob: -21.500261306762695
    9. '
' → logprob: -22.500261306762695
    10. 'li' → logprob: -22.625261306762695

Token 963: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0036593338008970022
    2. '().' → logprob: -5.628659248352051
    3. '.split' → logprob: -10.37865924835205
    4. '.' → logprob: -10.87865924835205
    5. 'strip' → logprob: -11.87865924835205
    6. '(strip' → logprob: -13.75365924835205
    7. ' .' → logprob: -14.50365924835205
    8. '.trim' → logprob: -15.37865924835205
    9. '.rstrip' → logprob: -15.75365924835205
    10. '.readline' → logprob: -16.253660202026367

Token 964: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '.split' → logprob: -12.500003814697266
    3. '()' → logprob: -15.750003814697266
    4. 'split' → logprob: -17.250003814697266
    5. '.' → logprob: -18.750003814697266
    6. '(' → logprob: -19.125003814697266
    7. ' ().' → logprob: -19.500003814697266
    8. '   ' → logprob: -20.375003814697266
    9. ' .' → logprob: -20.750003814697266
    10. '.Split' → logprob: -20.750003814697266

Token 965: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -16.75
    3. '.split' → logprob: -17.625
    4. 'spl' → logprob: -20.625
    5. '(split' → logprob: -20.875
    6. '_split' → logprob: -23.5
    7. '```' → logprob: -24.875
    8. 'strip' → logprob: -25.375
    9. ' ' → logprob: -25.625
    10. 'Split' → logprob: -25.875

Token 966: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04860270395874977
    2. ')
' → logprob: -3.048602819442749
    3. '())' → logprob: -12.173603057861328
    4. ')
' → logprob: -12.923603057861328
    5. '())
' → logprob: -13.423603057861328
    6. '       ' → logprob: -13.548603057861328
    7. '()' → logprob: -13.673603057861328
    8. ' )' → logprob: -14.548603057861328
    9. ')`
' → logprob: -14.548603057861328
    10. '           ' → logprob: -14.673603057861328

Token 967: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012567104771733284
    2. '       ' → logprob: -4.637567043304443
    3. 'edges' → logprob: -6.262567043304443
    4. ' edges' → logprob: -7.762567043304443
    5. '<|end|>' → logprob: -8.012567520141602
    6. '   ' → logprob: -9.762567520141602
    7. '(edges' → logprob: -10.762567520141602
    8. '<|end|>' → logprob: -11.012567520141602
    9. '               ' → logprob: -11.762567520141602
    10. '.edges' → logprob: -11.762567520141602

Token 968: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.17003870010375977
    2. ' edges' → logprob: -1.9200387001037598
    3. '           ' → logprob: -4.67003870010376
    4. '       ' → logprob: -7.92003870010376
    5. '.edges' → logprob: -11.545038223266602
    6. '(edges' → logprob: -11.545038223266602
    7. '   ' → logprob: -11.670038223266602
    8. '_edges' → logprob: -13.920038223266602
    9. '```' → logprob: -14.170038223266602
    10. '               ' → logprob: -15.295038223266602

Token 969: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4736459888808895e-05
    2. '.' → logprob: -11.500014305114746
    3. 'append' → logprob: -13.375014305114746
    4. '.app' → logprob: -13.500014305114746
    5. ' .' → logprob: -14.375014305114746
    6. '.extend' → logprob: -15.125014305114746
    7. ').' → logprob: -15.500014305114746
    8. '_append' → logprob: -15.750014305114746
    9. '.Append' → logprob: -15.875014305114746
    10. '.py' → logprob: -16.625015258789062

Token 970: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000933017407078296
    2. '(u' → logprob: -7.0009331703186035
    3. '(' → logprob: -10.750932693481445
    4. '(
' → logprob: -16.625932693481445
    5. '[(' → logprob: -17.625932693481445
    6. ' ((' → logprob: -18.500932693481445
    7. '([' → logprob: -19.125932693481445
    8. ' (' → logprob: -19.500932693481445
    9. '   ' → logprob: -19.625932693481445
    10. '((_' → logprob: -20.250932693481445

Token 971: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -5.5577775128767826e-06
    2. ' u' → logprob: -12.125005722045898
    3. '	u' → logprob: -17.1250057220459
    4. '(u' → logprob: -18.7500057220459
    5. '   ' → logprob: -19.2500057220459
    6. '[u' → logprob: -20.0000057220459
    7. 'user' → logprob: -20.0000057220459
    8. ',u' → logprob: -20.7500057220459
    9. ''u' → logprob: -21.0000057220459
    10. '           ' → logprob: -21.2500057220459

Token 972: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06200734153389931
    2. ',v' → logprob: -2.812007427215576
    3. ',
' → logprob: -11.187006950378418
    4. ' ,' → logprob: -11.437006950378418
    5. 'v' → logprob: -11.687006950378418
    6. ',u' → logprob: -12.562006950378418
    7. '-' → logprob: -13.187006950378418
    8. ',user' → logprob: -15.562006950378418
    9. '
' → logprob: -15.687006950378418
    10. ',w' → logprob: -15.937006950378418

Token 973: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00022034443099983037
    2. '))
' → logprob: -8.62522029876709
    3. ')' → logprob: -10.12522029876709
    4. ' ))' → logprob: -15.12522029876709
    5. '   ' → logprob: -16.250221252441406
    6. ')
' → logprob: -16.375221252441406
    7. '));' → logprob: -16.625221252441406
    8. '))

' → logprob: -16.875221252441406
    9. ')))' → logprob: -17.125221252441406
    10. '),' → logprob: -17.625221252441406

Token 974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20290906727313995
    2. '   ' → logprob: -2.702908992767334
    3. '
' → logprob: -3.327908992767334
    4. 'low' → logprob: -3.327908992767334
    5. '```' → logprob: -3.827908992767334
    6. ' low' → logprob: -4.702908992767334
    7. 'def' → logprob: -5.827908992767334
    8. '        
' → logprob: -5.952908992767334
    9. '<|end|>' → logprob: -6.077908992767334
    10. '(low' → logprob: -6.702908992767334

Token 975: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.007749778684228659
    2. 'left' → logprob: -5.257749557495117
    3. '   ' → logprob: -6.757749557495117
    4. 'l' → logprob: -7.632749557495117
    5. 'lo' → logprob: -7.882749557495117
    6. '```' → logprob: -8.507749557495117
    7. ' low' → logprob: -8.757749557495117
    8. '
' → logprob: -10.507749557495117
    9. '``' → logprob: -10.632749557495117
    10. 'def' → logprob: -10.757749557495117

Token 976: ' Binary' (ID: 32672)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.03334769979119301
    2. ' low' → logprob: -3.5333476066589355
    3. 'left' → logprob: -6.0333476066589355
    4. 'l' → logprob: -7.1583476066589355
    5. '   ' → logprob: -9.158348083496094
    6. ' left' → logprob: -9.533348083496094
    7. 'lo' → logprob: -9.658348083496094
    8. '
' → logprob: -10.408348083496094
    9. '#' → logprob: -10.533348083496094
    10. ' lo' → logprob: -10.658348083496094

Token 977: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.022693946957588196
    2. 'search' → logprob: -4.022694110870361
    3. '_search' → logprob: -5.397694110870361
    4. '   ' → logprob: -13.022693634033203
    5. '_' → logprob: -14.272693634033203
    6. '```' → logprob: -14.397693634033203
    7. ' searches' → logprob: -14.397693634033203
    8. '	search' → logprob: -14.647693634033203
    9. ' searching' → logprob: -14.772693634033203
    10. '    ' → logprob: -15.022693634033203

Token 978: ' for' (ID: 395)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.13483838737010956
    2. 'low' → logprob: -2.884838342666626
    3. '       ' → logprob: -3.134838342666626
    4. '(low' → logprob: -3.759838342666626
    5. ' for' → logprob: -6.134838581085205
    6. '   ' → logprob: -7.509838581085205
    7. ' lo' → logprob: -8.259838104248047
    8. 'for' → logprob: -9.134838104248047
    9. ' left' → logprob: -9.259838104248047
    10. 'lo' → logprob: -10.134838104248047

Token 979: ' minimal' (ID: 19957)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.25693637132644653
    2. ' low' → logprob: -1.5069363117218018
    3. 'max' → logprob: -6.131936550140381
    4. ' max' → logprob: -7.506936550140381
    5. 'high' → logprob: -7.506936550140381
    6. ' high' → logprob: -7.756936550140381
    7. 'min' → logprob: -8.506936073303223
    8. 'left' → logprob: -8.631936073303223
    9. 'mid' → logprob: -9.506936073303223
    10. 'answer' → logprob: -9.506936073303223

Token 980: ' difference' (ID: 9809)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.1338128298521042
    2. ' max' → logprob: -2.75881290435791
    3. 'low' → logprob: -3.00881290435791
    4. 'max' → logprob: -5.25881290435791
    5. '   ' → logprob: -6.63381290435791
    6. ' high' → logprob: -6.88381290435791
    7. ' minimal' → logprob: -7.38381290435791
    8. ' maximal' → logprob: -7.50881290435791
    9. ' ans' → logprob: -7.88381290435791
    10. ' mid' → logprob: -7.88381290435791

Token 981: ' (' (ID: 350)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.30378153920173645
    2. ' low' → logprob: -2.178781509399414
    3. 'lo' → logprob: -3.553781509399414
    4. 'left' → logprob: -3.928781509399414
    5. '       ' → logprob: -4.178781509399414
    6. 'l' → logprob: -4.303781509399414
    7. '
' → logprob: -4.303781509399414
    8. '```' → logprob: -4.553781509399414
    9. '(low' → logprob: -4.553781509399414
    10. ' between' → logprob: -4.678781509399414

Token 982: 'h' (ID: 71)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5074999332427979
    2. 'diff' → logprob: -1.3824999332427979
    3. 'd' → logprob: -3.632499933242798
    4. 'left' → logprob: -3.632499933242798
    5. 'lo' → logprob: -3.882499933242798
    6. 'high' → logprob: -3.882499933242798
    7. 'max' → logprob: -4.007499694824219
    8. ' low' → logprob: -4.632499694824219
    9. '0' → logprob: -5.007499694824219
    10. '
' → logprob: -5.882499694824219

Token 983: ' -' (ID: 533)
  Prédit: 'igh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'igh' → logprob: -0.40170958638191223
    2. '   ' → logprob: -1.9017095565795898
    3. ' =' → logprob: -2.40170955657959
    4. '=' → logprob: -2.65170955657959
    5. ' ' → logprob: -5.02670955657959
    6. ',' → logprob: -5.15170955657959
    7. '  ' → logprob: -5.90170955657959
    8. ')' → logprob: -6.77670955657959
    9. 'ight' → logprob: -6.90170955657959
    10. 'i' → logprob: -6.90170955657959

Token 984: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.8444881536415778e-05
    2. ' l' → logprob: -10.625028610229492
    3. '	l' → logprob: -13.875028610229492
    4. '   ' → logprob: -14.250028610229492
    5. '```' → logprob: -14.250028610229492
    6. ' ' → logprob: -14.375028610229492
    7. '
' → logprob: -14.875028610229492
    8. 'low' → logprob: -15.375028610229492
    9. ')' → logprob: -15.375028610229492
    10. 'L' → logprob: -16.750028610229492

Token 985: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9441978931427002
    2. ')
' → logprob: -1.0691978931427002
    3. ' =' → logprob: -1.6941978931427002
    4. '=' → logprob: -2.9441978931427
    5. '   ' → logprob: -4.194197654724121
    6. '
' → logprob: -5.069197654724121
    7. ',' → logprob: -5.444197654724121
    8. '):
' → logprob: -6.194197654724121
    9. '       ' → logprob: -7.069197654724121
    10. ')

' → logprob: -7.194197654724121

Token 986: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03580367565155029
    2. '
' → logprob: -3.53580379486084
    3. ' low' → logprob: -5.66080379486084
    4. '   ' → logprob: -6.78580379486084
    5. ',' → logprob: -8.16080379486084
    6. '```' → logprob: -8.16080379486084
    7. '        
' → logprob: -8.28580379486084
    8. 'low' → logprob: -8.41080379486084
    9. '(low' → logprob: -8.78580379486084
    10. ' l' → logprob: -9.91080379486084

Token 987: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0517304353415966
    2. ' low' → logprob: -3.6767303943634033
    3. 'left' → logprob: -4.176730632781982
    4. 'l' → logprob: -5.051730632781982
    5. '   ' → logprob: -6.176730632781982
    6. ' left' → logprob: -7.051730632781982
    7. '       ' → logprob: -8.801730155944824
    8. ' l' → logprob: -9.176730155944824
    9. 'lo' → logprob: -9.551730155944824
    10. '```' → logprob: -9.551730155944824

Token 988: ' l' (ID: 305)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.6446684002876282
    2. ' low' → logprob: -0.7696684002876282
    3. 'l' → logprob: -5.0196685791015625
    4. ' l' → logprob: -5.6446685791015625
    5. ' left' → logprob: -7.0196685791015625
    6. 'left' → logprob: -7.1446685791015625
    7. '   ' → logprob: -10.019668579101562
    8. '```' → logprob: -10.269668579101562
    9. '
' → logprob: -10.394668579101562
    10. ' lo' → logprob: -10.519668579101562

Token 989: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5692712068557739
    2. ',' → logprob: -1.569271206855774
    3. '=' → logprob: -2.0692710876464844
    4. 'low' → logprob: -2.8192710876464844
    5. 'ow' → logprob: -3.3192710876464844
    6. '_low' → logprob: -5.819271087646484
    7. '   ' → logprob: -8.694271087646484
    8. ' low' → logprob: -9.069271087646484
    9. ' ,' → logprob: -9.194271087646484
    10. 'l' → logprob: -9.194271087646484

Token 990: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.027532804757356644
    2. 'r' → logprob: -3.9025328159332275
    3. ' h' → logprob: -5.027532577514648
    4. ' r' → logprob: -7.902532577514648
    5. 'u' → logprob: -10.277532577514648
    6. '   ' → logprob: -12.902532577514648
    7. '
' → logprob: -13.152532577514648
    8. ' u' → logprob: -14.277532577514648
    9. '	h' → logprob: -14.277532577514648
    10. 'l' → logprob: -14.402532577514648

Token 991: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39784562587738037
    2. '=' → logprob: -1.1478456258773804
    3. ',' → logprob: -4.52284574508667
    4. ' ,' → logprob: -10.022845268249512
    5. ' ' → logprob: -12.522845268249512
    6. ',l' → logprob: -13.647845268249512
    7. 'low' → logprob: -13.772845268249512
    8. '_low' → logprob: -14.022845268249512
    9. '   ' → logprob: -14.147845268249512
    10. ' l' → logprob: -14.147845268249512

Token 992: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2929719388484955
    2. '0' → logprob: -1.4179719686508179
    3. ' range' → logprob: -5.042972087860107
    4. '[' → logprob: -5.417972087860107
    5. ' ' → logprob: -7.917972087860107
    6. '1' → logprob: -9.16797161102295
    7. '   ' → logprob: -9.16797161102295
    8. '
' → logprob: -9.41797161102295
    9. '(range' → logprob: -10.54297161102295
    10. '7' → logprob: -10.54297161102295

Token 993: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024084746837615967
    2. ' ' → logprob: -8.50024127960205
    3. '(' → logprob: -11.12524127960205
    4. '1' → logprob: -11.25024127960205
    5. ' (' → logprob: -13.43774127960205
    6. '   ' → logprob: -13.43774127960205
    7. '[' → logprob: -13.56274127960205
    8. '
' → logprob: -13.62524127960205
    9. ',' → logprob: -13.87524127960205
    10. 'low' → logprob: -15.00024127960205

Token 994: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040456000715494156
    2. ' ,' → logprob: -3.2904560565948486
    3. ',m' → logprob: -6.5404558181762695
    4. ',n' → logprob: -7.6654558181762695
    5. ',
' → logprob: -8.16545581817627
    6. '0' → logprob: -9.66545581817627
    7. 'm' → logprob: -10.29045581817627
    8. '   ' → logprob: -10.66545581817627
    9. ' ,
' → logprob: -10.79045581817627
    10. 'n' → logprob: -11.41545581817627

Token 995: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0013260759878903627
    2. 'n' → logprob: -8.001325607299805
    3. 'max' → logprob: -8.001325607299805
    4. '   ' → logprob: -8.126325607299805
    5. ' m' → logprob: -9.126325607299805
    6. '       ' → logprob: -9.751325607299805
    7. '           ' → logprob: -10.126325607299805
    8. '100' → logprob: -10.376325607299805
    9. ' ' → logprob: -10.501325607299805
    10. '10' → logprob: -10.751325607299805

Token 996: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9511626958847046
    2. ']' → logprob: -0.9511626958847046
    3. '+' → logprob: -1.7011626958847046
    4. ']
' → logprob: -3.451162815093994
    5. ' +' → logprob: -5.076162815093994
    6. ' ,' → logprob: -6.076162815093994
    7. '   ' → logprob: -6.576162815093994
    8. '...' → logprob: -7.701162815093994
    9. '//' → logprob: -7.701162815093994
    10. ']

' → logprob: -7.701162815093994

Token 997: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001161173335276544
    2. '
' → logprob: -7.376161098480225
    3. '   ' → logprob: -7.626161098480225
    4. '        
' → logprob: -10.876161575317383
    5. '```' → logprob: -11.126161575317383
    6. ' l' → logprob: -12.251161575317383
    7. '      ' → logprob: -13.501161575317383
    8. '           ' → logprob: -13.501161575317383
    9. '    
' → logprob: -13.626161575317383
    10. ',' → logprob: -14.126161575317383

Token 998: ' left' (ID: 3561)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.15292909741401672
    2. ' low' → logprob: -2.5279290676116943
    3. 'l' → logprob: -3.2779290676116943
    4. ' l' → logprob: -3.9029290676116943
    5. '```' → logprob: -6.902929306030273
    6. '       ' → logprob: -7.027929306030273
    7. 'left' (adapté à ' left') → logprob: -7.027929306030273
    8. 'lo' → logprob: -7.777929306030273
    9. '
' → logprob: -7.777929306030273
    10. ' lo' → logprob: -8.652929306030273

Token 999: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4794567823410034
    2. ' =' → logprob: -0.9794567823410034
    3. ',' → logprob: -5.229456901550293
    4. ' ,' → logprob: -12.104456901550293
    5. ' =
' → logprob: -14.104456901550293
    6. '=
' → logprob: -14.354456901550293
    7. ' ' → logprob: -14.604456901550293
    8. ',right' → logprob: -14.979456901550293
    9. '   ' → logprob: -15.104456901550293
    10. '<|end|>' → logprob: -15.604456901550293

Token 1000: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02975812554359436
    2. ' right' → logprob: -3.5297582149505615
    3. '=' → logprob: -11.90475845336914
    4. ' =' → logprob: -14.77975845336914
    5. '	right' → logprob: -16.15475845336914
    6. '   ' → logprob: -16.15475845336914
    7. ',right' → logprob: -16.27975845336914
    8. '```' → logprob: -17.02975845336914
    9. ' ' → logprob: -17.40475845336914
    10. '
' → logprob: -17.90475845336914

Token 1001: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ',' → logprob: -16.599077224731445
    4. '   ' → logprob: -17.599077224731445
    5. ' =
' → logprob: -17.849077224731445
    6. ' ' → logprob: -18.224077224731445
    7. '=
' → logprob: -18.349077224731445
    8. '＝' → logprob: -18.474077224731445
    9. '    ' → logprob: -20.224077224731445
    10. ' ' → logprob: -20.599077224731445

Token 1002: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '1' → logprob: -15.125036239624023
    4. '   ' → logprob: -16.062536239624023
    5. '=' → logprob: -17.687536239624023
    6. '(' → logprob: -17.812536239624023
    7. '```' → logprob: -17.937536239624023
    8. '[' → logprob: -18.000036239624023
    9. '۰' → logprob: -18.250036239624023
    10. 'm' → logprob: -18.312536239624023

Token 1003: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.968312951968983e-06
    2. 'm' → logprob: -11.875009536743164
    3. ' ' → logprob: -12.750009536743164
    4. '1' → logprob: -18.000009536743164
    5. '(' → logprob: -18.125009536743164
    6. ' m' → logprob: -18.375009536743164
    7. '[' → logprob: -18.625009536743164
    8. 'max' → logprob: -19.125009536743164
    9. '۰' → logprob: -19.500009536743164
    10. '(m' → logprob: -19.687509536743164

Token 1004: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12166546285152435
    2. '=' → logprob: -2.6216654777526855
    3. ' =' → logprob: -3.3716654777526855
    4. ' ,' → logprob: -5.3716654777526855
    5. ' 
' → logprob: -6.7466654777526855
    6. ',
' → logprob: -7.4966654777526855
    7. '
' → logprob: -7.8716654777526855
    8. '<|end|>' → logprob: -8.246665000915527
    9. ',right' → logprob: -9.121665000915527
    10. '=
' → logprob: -9.371665000915527

Token 1005: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004307884373702109
    2. ' m' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.500431060791016
    4. '	m' → logprob: -19.000431060791016
    5. ' ' → logprob: -19.875431060791016
    6. '    ' → logprob: -21.000431060791016
    7. 'max' → logprob: -21.625431060791016
    8. ' ' → logprob: -22.250431060791016
    9. '
' → logprob: -22.375431060791016
    10. '  ' → logprob: -22.750431060791016

Token 1006: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0300454031676054
    2. '<|end|>' → logprob: -4.530045509338379
    3. '  
' → logprob: -5.155045509338379
    4. ' 
' → logprob: -5.405045509338379
    5. '   ' → logprob: -5.780045509338379
    6. '    
' → logprob: -6.280045509338379
    7. '```' → logprob: -6.405045509338379
    8. '<|end|>' → logprob: -8.155045509338379
    9. 'while' → logprob: -8.405045509338379
    10. '   
' → logprob: -8.530045509338379

Token 1007: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14216896891593933
    2. '
' → logprob: -2.7671689987182617
    3. '   ' → logprob: -3.2671689987182617
    4. '<|end|>' → logprob: -4.267168998718262
    5. ' while' → logprob: -4.892168998718262
    6. '        
' → logprob: -5.642168998718262
    7. 'while' → logprob: -6.142168998718262
    8. '  
' → logprob: -6.642168998718262
    9. '    
' → logprob: -7.017168998718262
    10. '	while' → logprob: -7.267168998718262

Token 1008: ' best' (ID: 1636)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.010866113938391209
    2. '       ' → logprob: -4.760866165161133
    3. ' while' → logprob: -6.135866165161133
    4. '
' → logprob: -10.260866165161133
    5. '```' → logprob: -10.635866165161133
    6. '	while' → logprob: -11.510866165161133
    7. 'mid' → logprob: -11.885866165161133
    8. '   ' → logprob: -12.260866165161133
    9. '        
' → logprob: -12.760866165161133
    10. '``' → logprob: -14.510866165161133

Token 1009: '_diff' (ID: 41047)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07093179225921631
    2. '=' → logprob: -2.695931911468506
    3. '_diff' → logprob: -7.445931911468506
    4. ' ' → logprob: -8.945931434631348
    5. 'diff' → logprob: -9.445931434631348
    6. '_difference' → logprob: -9.445931434631348
    7. '_' → logprob: -10.195931434631348
    8. ',' → logprob: -10.570931434631348
    9. ' _' → logprob: -10.820931434631348
    10. 'difference' → logprob: -11.195931434631348

Token 1010: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489109992981
    2. ' =' → logprob: -0.6931489109992981
    3. ',' → logprob: -13.568148612976074
    4. ' ' → logprob: -15.818148612976074
    5. ' =
' → logprob: -16.69314956665039
    6. '=None' → logprob: -17.06814956665039
    7. ')' → logprob: -17.06814956665039
    8. '=
' → logprob: -17.31814956665039
    9. '<|end|>' → logprob: -17.56814956665039
    10. '_' → logprob: -17.69314956665039

Token 1011: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.003677990287542343
    2. 'right' → logprob: -5.878677845001221
    3. ' m' → logprob: -7.128677845001221
    4. ' right' → logprob: -10.378678321838379
    5. '10' → logprob: -10.503678321838379
    6. '0' → logprob: -11.378678321838379
    7. '	m' → logprob: -15.628678321838379
    8. '1' → logprob: -15.753678321838379
    9. 'None' → logprob: -15.753678321838379
    10. ' ' → logprob: -16.003677368164062

Token 1012: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22682413458824158
    2. '+' → logprob: -1.726824164390564
    3. ' +' → logprob: -4.1018242835998535
    4. ' 
' → logprob: -5.3518242835998535
    5. '+
' → logprob: -6.4768242835998535
    6. '<|end|>' → logprob: -7.7268242835998535
    7. '   ' → logprob: -8.226823806762695
    8. '  
' → logprob: -8.226823806762695
    9. '```' → logprob: -8.351823806762695
    10. ',' → logprob: -8.601823806762695

Token 1013: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '2' → logprob: -11.87501335144043
    3. ' ' → logprob: -12.62501335144043
    4. '10' → logprob: -13.25001335144043
    5. '   ' → logprob: -14.12501335144043
    6. '100' → logprob: -15.62501335144043
    7. '  ' → logprob: -17.37501335144043
    8. '5' → logprob: -18.12501335144043
    9. '
' → logprob: -18.37501335144043
    10. '```' → logprob: -18.62501335144043

Token 1014: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001037815964082256
    2. '10' → logprob: -9.250103950500488
    3. '2' → logprob: -12.000103950500488
    4. '5' → logprob: -14.000103950500488
    5. '100' → logprob: -14.500103950500488
    6. ' ' → logprob: -16.375102996826172
    7. '0' → logprob: -17.875102996826172
    8. '
' → logprob: -18.125102996826172
    9. '3' → logprob: -18.375102996826172
    10. '   ' → logprob: -18.875102996826172

Token 1015: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02924700640141964
    2. ' while' → logprob: -4.029246807098389
    3. 'while' → logprob: -4.904246807098389
    4. ' 
' → logprob: -5.904246807098389
    5. '<|end|>' → logprob: -8.404247283935547
    6. '       ' → logprob: -8.529247283935547
    7. '   ' → logprob: -9.029247283935547
    8. '  
' → logprob: -9.404247283935547
    9. '```' → logprob: -9.654247283935547
    10. '    
' → logprob: -9.904247283935547

Token 1016: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03417854383587837
    2. '
' → logprob: -3.9091784954071045
    3. ' while' → logprob: -4.909178733825684
    4. 'while' → logprob: -5.409178733825684
    5. '        
' → logprob: -7.534178733825684
    6. '```' → logprob: -7.909178733825684
    7. '<|end|>' → logprob: -8.159178733825684
    8. ',' → logprob: -8.784178733825684
    9. ' 
' → logprob: -9.034178733825684
    10. '   ' → logprob: -9.284178733825684

Token 1017: ' best' (ID: 1636)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02539917640388012
    2. '       ' → logprob: -3.7753992080688477
    3. ' while' → logprob: -6.150399208068848
    4. '
' → logprob: -11.650399208068848
    5. 'best' (adapté à ' best') → logprob: -12.275399208068848
    6. '	while' → logprob: -13.275399208068848
    7. '```' → logprob: -13.275399208068848
    8. 'for' → logprob: -14.275399208068848
    9. 'right' → logprob: -14.650399208068848
    10. '        
' → logprob: -15.150399208068848

Token 1018: '_l' (ID: 1478)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.12711918354034424
    2. '=' → logprob: -3.0021190643310547
    3. ' =' → logprob: -3.6271190643310547
    4. 'diff' → logprob: -3.7521190643310547
    5. '_' → logprob: -5.377119064331055
    6. '```' → logprob: -6.002119064331055
    7. '_difference' → logprob: -6.252119064331055
    8. ':' → logprob: -7.002119064331055
    9. '   ' → logprob: -7.127119064331055
    10. '_candidate' → logprob: -7.127119064331055

Token 1019: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26806187629699707
    2. ' =' → logprob: -1.518061876296997
    3. ',' → logprob: -4.143061637878418
    4. '<|end|>' → logprob: -10.018061637878418
    5. ' ,' → logprob: -10.518061637878418
    6. ')' → logprob: -11.518061637878418
    7. '_token' → logprob: -12.143061637878418
    8. '...' → logprob: -12.268061637878418
    9. 'token' → logprob: -12.268061637878418
    10. '=None' → logprob: -12.268061637878418

Token 1020: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.941161776310764e-05
    2. ' ' → logprob: -10.250039100646973
    3. '-' → logprob: -12.625039100646973
    4. 'None' → logprob: -14.750039100646973
    5. ' -' → logprob: -16.37504005432129
    6. '1' → logprob: -16.75004005432129
    7. '[' → logprob: -17.87504005432129
    8. 'left' → logprob: -17.87504005432129
    9. '<|end|>' → logprob: -17.87504005432129
    10. '   ' → logprob: -17.93754005432129

Token 1021: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. 'left' → logprob: -13.625001907348633
    3. '2' → logprob: -15.125001907348633
    4. '0' → logprob: -15.125001907348633
    5. ' ' → logprob: -15.125001907348633
    6. '10' → logprob: -16.250001907348633
    7. '```' → logprob: -17.250001907348633
    8. '-' → logprob: -17.375001907348633
    9. 'right' → logprob: -18.312501907348633
    10. '100' → logprob: -18.625001907348633

Token 1022: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012890070676803589
    2. '
' → logprob: -4.887889862060547
    3. '<|end|>' → logprob: -5.637889862060547
    4. ' while' → logprob: -6.887889862060547
    5. ',' → logprob: -8.387889862060547
    6. 'while' → logprob: -8.637889862060547
    7. '        
' → logprob: -9.262889862060547
    8. ' 
' → logprob: -10.262889862060547
    9. '   ' → logprob: -10.637889862060547
    10. '<|end|>' → logprob: -10.887889862060547

Token 1023: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8669978976249695
    2. ' 
' → logprob: -1.2419979572296143
    3. '
' → logprob: -1.3669979572296143
    4. '```' → logprob: -4.491997718811035
    5. ' while' → logprob: -5.116997718811035
    6. '        
' → logprob: -5.116997718811035
    7. '<|end|>' → logprob: -5.116997718811035
    8. '  
' → logprob: -6.866997718811035
    9. ',' → logprob: -6.866997718811035
    10. ' ' → logprob: -7.366997718811035

Token 1024: ' best' (ID: 1636)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15507838129997253
    2. 'right' → logprob: -2.405078411102295
    3. ' while' → logprob: -3.280078411102295
    4. 'for' → logprob: -5.405078411102295
    5. '```' → logprob: -5.655078411102295
    6. 'best' (adapté à ' best') → logprob: -5.905078411102295
    7. ' right' → logprob: -5.905078411102295
    8. '
' → logprob: -6.780078411102295
    9. '       ' → logprob: -7.405078411102295
    10. ' for' → logprob: -8.655077934265137

Token 1025: '_h' (ID: 3434)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.1049165204167366
    2. '=' → logprob: -2.854916572570801
    3. '_r' → logprob: -4.104916572570801
    4. ' =' → logprob: -4.604916572570801
    5. '_' → logprob: -5.229916572570801
    6. '_diff' → logprob: -5.604916572570801
    7. '_low' → logprob: -6.854916572570801
    8. '_right' → logprob: -6.979916572570801
    9. '_rhs' → logprob: -7.354916572570801
    10. '_high' → logprob: -7.479916572570801

Token 1026: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11284147202968597
    2. ' =' → logprob: -2.2378413677215576
    3. ',' → logprob: -11.112841606140137
    4. '=
' → logprob: -13.612841606140137
    5. '=-' → logprob: -14.112841606140137
    6. '=None' → logprob: -14.612841606140137
    7. ' ' → logprob: -14.612841606140137
    8. '   ' → logprob: -14.862841606140137
    9. '```' → logprob: -15.737841606140137
    10. '<|end|>' → logprob: -15.862841606140137

Token 1027: ' -' (ID: 533)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.203078955411911
    2. '0' → logprob: -2.2030789852142334
    3. ' m' → logprob: -2.7030789852142334
    4. ' ' → logprob: -6.078078746795654
    5. 'right' → logprob: -6.203078746795654
    6. ' right' → logprob: -6.703078746795654
    7. 'left' → logprob: -7.703078746795654
    8. ' left' → logprob: -9.078079223632812
    9. '-' → logprob: -9.328079223632812
    10. '   ' → logprob: -10.328079223632812

Token 1028: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5028575658798218
    2. 'm' → logprob: -1.0028575658798218
    3. ' m' → logprob: -4.627857685089111
    4. 'left' → logprob: -5.127857685089111
    5. '1' → logprob: -5.252857685089111
    6. 'right' → logprob: -5.627857685089111
    7. ' ' → logprob: -6.502857685089111
    8. 'best' → logprob: -6.627857685089111
    9. ' right' → logprob: -7.752857685089111
    10. ' left' → logprob: -8.127857208251953

Token 1029: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16924349963665009
    2. '<|end|>' → logprob: -2.669243574142456
    3. ' 
' → logprob: -2.919243574142456
    4. '  
' → logprob: -3.919243574142456
    5. '       ' → logprob: -5.669243335723877
    6. '   ' → logprob: -5.794243335723877
    7. '<|end|>' → logprob: -6.794243335723877
    8. '    
' → logprob: -7.044243335723877
    9. '        
' → logprob: -7.044243335723877
    10. '\n' → logprob: -7.544243335723877

Token 1030: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.09539426118135452
    2. '
' → logprob: -3.7203943729400635
    3. '<|end|>' → logprob: -3.9703943729400635
    4. '       ' → logprob: -4.095394134521484
    5. '  
' → logprob: -4.345394134521484
    6. '        
' → logprob: -5.720394134521484
    7. ' ' → logprob: -5.970394134521484
    8. '    
' → logprob: -6.095394134521484
    9. ' while' → logprob: -6.220394134521484
    10. '   ' → logprob: -6.470394134521484

Token 1031: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5163503289222717
    2. 'while' → logprob: -1.266350269317627
    3. '
' → logprob: -2.891350269317627
    4. ' 
' → logprob: -3.141350269317627
    5. '       ' → logprob: -4.016350269317627
    6. '```' → logprob: -5.891350269317627
    7. '	while' → logprob: -7.141350269317627
    8. ' for' → logprob: -8.141350746154785
    9. '        
' → logprob: -8.641350746154785
    10. 'for' → logprob: -8.641350746154785

Token 1032: ' For' (ID: 2214)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004556392319500446
    2. ' while' → logprob: -5.504556179046631
    3. '       ' → logprob: -7.754556179046631
    4. '
' → logprob: -10.504556655883789
    5. 'for' → logprob: -11.129556655883789
    6. '```' → logprob: -12.379556655883789
    7. '   ' → logprob: -13.129556655883789
    8. '	while' → logprob: -14.629556655883789
    9. 'While' → logprob: -15.129556655883789
    10. ' for' → logprob: -17.00455665588379

Token 1033: ' minimal' (ID: 19957)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7867518663406372
    2. '_' → logprob: -0.9117518663406372
    3. ' left' → logprob: -2.6617517471313477
    4. 'mid' → logprob: -3.2867517471313477
    5. ' _' → logprob: -3.9117517471313477
    6. ' mid' → logprob: -5.161751747131348
    7. 'right' → logprob: -5.286751747131348
    8. 'diff' → logprob: -7.161751747131348
    9. 'i' → logprob: -7.286751747131348
    10. ' right' → logprob: -7.661751747131348

Token 1034: ' difference' (ID: 9809)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6459101438522339
    2. ' left' → logprob: -1.3959101438522339
    3. 'diff' → logprob: -2.2709102630615234
    4. 'right' → logprob: -3.6459102630615234
    5. 'difference' → logprob: -4.145910263061523
    6. ' right' → logprob: -4.145910263061523
    7. '_' → logprob: -4.270910263061523
    8. '_diff' → logprob: -4.395910263061523
    9. ' difference' → logprob: -4.645910263061523
    10. ' diff' → logprob: -4.770910263061523

Token 1035: ',' (ID: 11)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1314895749092102
    2. ' while' → logprob: -2.7564895153045654
    3. '       ' → logprob: -2.8814895153045654
    4. '
' → logprob: -6.1314897537231445
    5. ':
' → logprob: -7.5064897537231445
    6. '   ' → logprob: -8.256489753723145
    7. 'mid' → logprob: -8.381489753723145
    8. ' in' → logprob: -9.131489753723145
    9. '           ' → logprob: -9.756489753723145
    10. ',' → logprob: -9.881489753723145

Token 1036: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03804183006286621
    2. ' while' → logprob: -3.413041830062866
    3. 'for' → logprob: -5.663042068481445
    4. '       ' → logprob: -7.288042068481445
    5. ' for' → logprob: -8.788042068481445
    6. 'mid' → logprob: -10.038042068481445
    7. 'diff' → logprob: -11.788042068481445
    8. '   ' → logprob: -12.163042068481445
    9. '
' → logprob: -12.288042068481445
    10. '```' → logprob: -12.288042068481445

Token 1037: ' fixed' (ID: 13213)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.1707392930984497
    2. '_' → logprob: -1.5457392930984497
    3. ' diff' → logprob: -2.29573917388916
    4. 'd' → logprob: -2.42073917388916
    5. ' _' → logprob: -2.92073917388916
    6. ' d' → logprob: -2.92073917388916
    7. 'left' → logprob: -3.17073917388916
    8. ' left' → logprob: -3.29573917388916
    9. 'mid' → logprob: -3.54573917388916
    10. ' mid' → logprob: -4.04573917388916

Token 1038: ' difference' (ID: 9809)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.5632954239845276
    2. ' mid' → logprob: -1.5632953643798828
    3. 'low' → logprob: -2.938295364379883
    4. 'diff' → logprob: -3.063295364379883
    5. ' low' → logprob: -3.563295364379883
    6. ' l' → logprob: -4.188295364379883
    7. ' diff' → logprob: -4.188295364379883
    8. 'l' → logprob: -4.313295364379883
    9. ' difference' → logprob: -4.313295364379883
    10. 'left' → logprob: -4.438295364379883

Token 1039: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0864222049713135
    2. 'diff' → logprob: -1.4614222049713135
    3. 'd' → logprob: -2.2114222049713135
    4. 'while' → logprob: -2.5864222049713135
    5. 'mid' → logprob: -2.5864222049713135
    6. '=' → logprob: -3.2114222049713135
    7. ' while' → logprob: -3.7114222049713135
    8. ' =' → logprob: -3.7114222049713135
    9. ' mid' → logprob: -4.211421966552734
    10. ',
' → logprob: -4.711421966552734

Token 1040: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6244640946388245
    2. ':' → logprob: -1.8744640350341797
    3. '       ' → logprob: -1.9994640350341797
    4. ':
' → logprob: -2.7494640350341797
    5. '=' → logprob: -2.8744640350341797
    6. ' =' → logprob: -3.3744640350341797
    7. ' while' → logprob: -4.87446403503418
    8. 'while' → logprob: -5.37446403503418
    9. '   ' → logprob: -5.99946403503418
    10. '           ' → logprob: -6.12446403503418

Token 1041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8679155111312866
    2. ' while' → logprob: -0.9929155111312866
    3. 'while' → logprob: -1.7429155111312866
    4. ' for' → logprob: -4.367915630340576
    5. ' left' → logprob: -5.492915630340576
    6. 'for' → logprob: -5.492915630340576
    7. '#' → logprob: -5.867915630340576
    8. 'left' → logprob: -6.367915630340576
    9. ' next' → logprob: -6.742915630340576
    10. '```' → logprob: -6.742915630340576

Token 1042: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2549266517162323
    2. ' while' → logprob: -2.8799266815185547
    3. 'for' → logprob: -3.5049266815185547
    4. '#' (adapté à ' #') → logprob: -3.5049266815185547
    5. '       ' → logprob: -3.5049266815185547
    6. 'we' → logprob: -3.7549266815185547
    7. 'mid' → logprob: -3.8799266815185547
    8. ' for' → logprob: -5.254926681518555
    9. 'd' → logprob: -5.379926681518555
    10. ' we' → logprob: -5.629926681518555

Token 1043: ' try' (ID: 2075)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.42036065459251404
    2. 'for' → logprob: -1.6703606843948364
    3. ' while' → logprob: -2.795360565185547
    4. 'low' → logprob: -3.295360565185547
    5. ' for' → logprob: -4.045360565185547
    6. 'mid' → logprob: -4.670360565185547
    7. 'diff' → logprob: -4.795360565185547
    8. 'l' → logprob: -4.920360565185547
    9. 'd' → logprob: -5.170360565185547
    10. 'right' → logprob: -6.170360565185547

Token 1044: ' all' (ID: 722)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.31362879276275635
    2. ' low' → logprob: -1.4386287927627563
    3. 'l' → logprob: -4.563628673553467
    4. 'for' → logprob: -4.563628673553467
    5. ' for' → logprob: -5.313628673553467
    6. '   ' → logprob: -6.188628673553467
    7. ' l' → logprob: -6.188628673553467
    8. 'high' → logprob: -7.563628673553467
    9. ' high' → logprob: -7.813628673553467
    10. '       ' → logprob: -8.563629150390625

Token 1045: ' l' (ID: 305)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.05114003270864487
    2. 'l' → logprob: -3.301140069961548
    3. ' low' → logprob: -5.551139831542969
    4. 'high' → logprob: -5.801139831542969
    5. 'possible' → logprob: -6.176139831542969
    6. '   ' → logprob: -6.551139831542969
    7. 'for' → logprob: -6.676139831542969
    8. '(low' → logprob: -7.551139831542969
    9. 'h' → logprob: -8.426139831542969
    10. '```' → logprob: -9.301139831542969

Token 1046: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05066238343715668
    2. 'in' → logprob: -3.0506622791290283
    3. 'from' → logprob: -6.925662517547607
    4. 'for' → logprob: -8.42566204071045
    5. ' =' → logprob: -8.42566204071045
    6. ',' → logprob: -8.80066204071045
    7. '=' → logprob: -9.05066204071045
    8. '_in' → logprob: -9.80066204071045
    9. 'range' → logprob: -9.92566204071045
    10. ' from' → logprob: -10.05066204071045

Token 1047: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'range' → logprob: -15.50001049041748
    4. '   ' → logprob: -17.500009536743164
    5. ' range' → logprob: -18.250009536743164
    6. '
' → logprob: -18.625009536743164
    7. 'for' → logprob: -19.250009536743164
    8. '[' → logprob: -19.625009536743164
    9. '```' → logprob: -19.750009536743164
    10. '۰' → logprob: -20.000009536743164

Token 1048: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. 'range' → logprob: -16.5
    4. '
' → logprob: -19.25
    5. 'for' → logprob: -20.125
    6. ' range' → logprob: -20.5
    7. '(' → logprob: -21.0
    8. '[' → logprob: -21.125
    9. 'from' → logprob: -21.5
    10. '1' → logprob: -22.0

Token 1049: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6329862475395203
    2. 'to' → logprob: -0.7579862475395203
    3. ',' → logprob: -8.882986068725586
    4. ' up' → logprob: -9.007986068725586
    5. 'for' → logprob: -9.882986068725586
    6. ' for' → logprob: -10.757986068725586
    7. '=' → logprob: -11.382986068725586
    8. 'up' → logprob: -11.757986068725586
    9. ' ' → logprob: -12.132986068725586
    10. '       ' → logprob: -12.632986068725586

Token 1050: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005461901426315308
    2. '(m' → logprob: -5.880461692810059
    3. ' m' → logprob: -6.005461692810059
    4. 'right' → logprob: -9.005461692810059
    5. ' (' → logprob: -10.630461692810059
    6. '   ' → logprob: -11.255461692810059
    7. 'left' → logprob: -11.880461692810059
    8. ' right' → logprob: -12.255461692810059
    9. ' ' → logprob: -12.380461692810059
    10. '	m' → logprob: -12.755461692810059

Token 1051: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6383797526359558
    2. ':
' → logprob: -1.2633798122406006
    3. ' for' → logprob: -2.1383798122406006
    4. 'for' → logprob: -3.2633798122406006
    5. ',' → logprob: -4.8883795738220215
    6. '
' → logprob: -5.6383795738220215
    7. ' if' → logprob: -5.6383795738220215
    8. '       ' → logprob: -5.7633795738220215
    9. '```' → logprob: -6.1383795738220215
    10. ' :
' → logprob: -6.1383795738220215

Token 1052: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014187832362949848
    2. 'right' → logprob: -4.764187812805176
    3. 'diff' → logprob: -5.764187812805176
    4. ' d' → logprob: -6.639187812805176
    5. 'difference' → logprob: -7.764187812805176
    6. 'left' → logprob: -8.389187812805176
    7. '1' → logprob: -8.764187812805176
    8. ' right' → logprob: -9.014187812805176
    9. '```' → logprob: -10.264187812805176
    10. 'm' → logprob: -10.389187812805176

Token 1053: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4480263590812683
    2. '
' → logprob: -1.448026418685913
    3. ' for' → logprob: -2.823026418685913
    4. '```' → logprob: -3.823026418685913
    5. ':' → logprob: -4.448026180267334
    6. ':
' → logprob: -4.823026180267334
    7. 'for' → logprob: -4.948026180267334
    8. '   ' → logprob: -5.448026180267334
    9. ',' → logprob: -5.573026180267334
    10. ' 
' → logprob: -5.823026180267334

Token 1054: ' find' (ID: 1646)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.5464051961898804
    2. 'find' → logprob: -1.5464051961898804
    3. ' check' → logprob: -1.7964051961898804
    4. ' find' → logprob: -2.42140531539917
    5. 'try' → logprob: -2.42140531539917
    6. '       ' → logprob: -3.17140531539917
    7. ' try' → logprob: -3.29640531539917
    8. ' test' → logprob: -3.54640531539917
    9. ' complete' → logprob: -3.92140531539917
    10. '```' → logprob: -4.17140531539917

Token 1055: ' feasible' (ID: 58866)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3718896508216858
    2. ' l' → logprob: -1.621889591217041
    3. 'best' → logprob: -3.121889591217041
    4. ' best' → logprob: -3.871889591217041
    5. 'possible' → logprob: -4.371889591217041
    6. 'left' → logprob: -4.746889591217041
    7. 'the' → logprob: -5.121889591217041
    8. ' possible' → logprob: -5.246889591217041
    9. ' the' → logprob: -5.621889591217041
    10. 'diff' → logprob: -6.496889591217041

Token 1056: ' with' (ID: 483)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09998557716608047
    2. ' l' → logprob: -2.4749855995178223
    3. '_l' → logprob: -5.599985599517822
    4. ' for' → logprob: -6.099985599517822
    5. '```' → logprob: -6.599985599517822
    6. '   ' → logprob: -6.724985599517822
    7. 'for' → logprob: -6.724985599517822
    8. 'd' → logprob: -8.474985122680664
    9. 'left' → logprob: -8.724985122680664
    10. '
' → logprob: -9.224985122680664

Token 1057: ' that' (ID: 484)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24919556081295013
    2. ' l' → logprob: -1.7491955757141113
    3. 'left' → logprob: -3.7491955757141113
    4. 'd' → logprob: -4.874195575714111
    5. ' left' → logprob: -5.249195575714111
    6. ' d' → logprob: -5.624195575714111
    7. 'diff' → logprob: -6.624195575714111
    8. 'difference' → logprob: -6.749195575714111
    9. 'best' → logprob: -6.999195575714111
    10. '```' → logprob: -7.374195575714111

Token 1058: ' diff' (ID: 8868)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15506908297538757
    2. 'difference' → logprob: -2.53006911277771
    3. ' d' → logprob: -3.78006911277771
    4. 'diff' → logprob: -4.155068874359131
    5. '```' → logprob: -4.655068874359131
    6. ' difference' → logprob: -4.780068874359131
    7. 'l' → logprob: -5.155068874359131
    8. ' l' → logprob: -7.030068874359131
    9. '
' → logprob: -8.155069351196289
    10. ' diff' → logprob: -8.280069351196289

Token 1059: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27810803055763245
    2. '       ' → logprob: -1.52810800075531
    3. ' for' → logprob: -3.7781081199645996
    4. 'for' → logprob: -6.7781081199646
    5. ',' → logprob: -7.6531081199646
    6. '        
' → logprob: -8.528107643127441
    7. ':
' → logprob: -8.653107643127441
    8. '<|end|>' → logprob: -8.653107643127441
    9. '   ' → logprob: -8.778107643127441
    10. ',
' → logprob: -8.903107643127441

Token 1060: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008909638971090317
    2. ' for' → logprob: -5.008909702301025
    3. '
' → logprob: -6.633909702301025
    4. '```' → logprob: -7.883909702301025
    5. 'for' → logprob: -8.508909225463867
    6. '   ' → logprob: -9.133909225463867
    7. '        
' → logprob: -9.633909225463867
    8. '           ' → logprob: -10.008909225463867
    9. '<|end|>' → logprob: -10.883909225463867
    10. ',' → logprob: -11.008909225463867

Token 1061: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28302958607673645
    2. ' for' → logprob: -1.533029556274414
    3. 'for' → logprob: -3.783029556274414
    4. '```' → logprob: -6.033029556274414
    5. ' while' → logprob: -6.408029556274414
    6. '
' → logprob: -6.658029556274414
    7. '           ' → logprob: -7.158029556274414
    8. 'while' → logprob: -7.408029556274414
    9. '   ' → logprob: -7.783029556274414
    10. '        
' → logprob: -7.908029556274414

Token 1062: ' Among' (ID: 32417)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24773071706295013
    2. ' for' → logprob: -2.2477307319641113
    3. '       ' → logprob: -2.4977307319641113
    4. 'while' → logprob: -3.4977307319641113
    5. ' while' → logprob: -7.247730731964111
    6. '```' → logprob: -7.997730731964111
    7. '   ' → logprob: -8.747730255126953
    8. '
' → logprob: -10.622730255126953
    9. '           ' → logprob: -11.122730255126953
    10. '``' → logprob: -12.747730255126953

Token 1063: ' those' (ID: 2617)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4075833857059479
    2. 'for' → logprob: -2.157583475112915
    3. 'l' → logprob: -3.032583475112915
    4. ' d' → logprob: -3.532583475112915
    5. 'diff' → logprob: -3.657583475112915
    6. 'best' → logprob: -3.907583475112915
    7. ' for' → logprob: -3.907583475112915
    8. ' l' → logprob: -4.032583236694336
    9. '       ' → logprob: -4.032583236694336
    10. 'while' → logprob: -4.907583236694336

Token 1064: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6096248030662537
    2. ' for' → logprob: -1.2346248626708984
    3. 'd' → logprob: -2.8596248626708984
    4. '       ' → logprob: -2.9846248626708984
    5. ',' → logprob: -3.8596248626708984
    6. 'l' → logprob: -4.984624862670898
    7. 'while' → logprob: -5.109624862670898
    8. 'diff' → logprob: -5.484624862670898
    9. '```' → logprob: -5.859624862670898
    10. ':' → logprob: -5.984624862670898

Token 1065: ' choose' (ID: 5655)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08119457960128784
    2. ' for' → logprob: -2.9561946392059326
    3. '       ' → logprob: -3.9561946392059326
    4. 'best' → logprob: -5.7061944007873535
    5. 'if' → logprob: -6.9561944007873535
    6. 'd' → logprob: -7.0811944007873535
    7. '
' → logprob: -8.081194877624512
    8. 'diff' → logprob: -8.081194877624512
    9. '           ' → logprob: -8.581194877624512
    10. ' best' → logprob: -8.956194877624512

Token 1066: ' max' (ID: 2999)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.5603099465370178
    2. 'l' → logprob: -1.310309886932373
    3. 'the' → logprob: -3.310309886932373
    4. 'left' → logprob: -3.560309886932373
    5. 'for' → logprob: -3.810309886932373
    6. 'lowest' → logprob: -3.810309886932373
    7. ' best' → logprob: -4.060309886932373
    8. 'min' → logprob: -4.935309886932373
    9. ' l' → logprob: -5.060309886932373
    10. 'd' → logprob: -5.685309886932373

Token 1067: ' l' (ID: 305)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.04089495167136192
    2. 'l' → logprob: -3.5408949851989746
    3. 'left' → logprob: -5.790894985198975
    4. '```' → logprob: -6.290894985198975
    5. '_h' → logprob: -6.665894985198975
    6. ' l' → logprob: -7.040894985198975
    7. '_low' → logprob: -7.165894985198975
    8. ' left' → logprob: -7.165894985198975
    9. '_left' → logprob: -7.540894985198975
    10. 'low' → logprob: -8.040894508361816

Token 1068: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015220950357615948
    2. ' for' → logprob: -4.390221118927002
    3. '<|end|>' → logprob: -7.390221118927002
    4. '```' → logprob: -8.140220642089844
    5. ' and' → logprob: -8.390220642089844
    6. ',' → logprob: -8.390220642089844
    7. '	' → logprob: -8.640220642089844
    8. ' =' → logprob: -8.765220642089844
    9. ' with' → logprob: -9.140220642089844
    10. '<|end|>' → logprob: -9.140220642089844

Token 1069: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014161982573568821
    2. ' for' → logprob: -4.639162063598633
    3. '```' → logprob: -6.139162063598633
    4. 'for' → logprob: -6.764162063598633
    5. '
' → logprob: -7.639162063598633
    6. '   ' → logprob: -8.264162063598633
    7. '        
' → logprob: -8.639162063598633
    8. '           ' → logprob: -9.389162063598633
    9. '``' → logprob: -10.889162063598633
    10. ' 
' → logprob: -11.514162063598633

Token 1070: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019610431045293808
    2. ' for' → logprob: -4.269610404968262
    3. 'for' (adapté à ' for') → logprob: -5.644610404968262
    4. '```' → logprob: -6.769610404968262
    5. '
' → logprob: -7.894610404968262
    6. '        
' → logprob: -9.144610404968262
    7. '   ' → logprob: -9.644610404968262
    8. '        ' → logprob: -10.144610404968262
    9. '           ' → logprob: -10.269610404968262
    10. ' while' → logprob: -10.394610404968262

Token 1071: ' d' (ID: 272)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.38728952407836914
    2. 'd' → logprob: -1.1372895240783691
    3. '   ' → logprob: -8.637289047241211
    4. ' diff' → logprob: -8.887289047241211
    5. 'difference' → logprob: -9.512289047241211
    6. ' d' → logprob: -10.637289047241211
    7. '	diff' → logprob: -13.262289047241211
    8. 'dif' → logprob: -13.512289047241211
    9. '       ' → logprob: -14.637289047241211
    10. 'dist' → logprob: -14.637289047241211

Token 1072: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06199805438518524
    2. 'in' → logprob: -2.811998128890991
    3. ' ' → logprob: -11.43699836730957
    4. 'd' → logprob: -11.93699836730957
    5. '_in' → logprob: -13.18699836730957
    6. '	in' → logprob: -13.31199836730957
    7. '_' → logprob: -13.56199836730957
    8. 'space' → logprob: -13.68699836730957
    9. ')' → logprob: -13.93699836730957
    10. 'range' → logprob: -14.06199836730957

Token 1073: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012403888104017824
    2. ' range' → logprob: -9.000123977661133
    3. '0' → logprob: -14.625123977661133
    4. '(range' → logprob: -16.375123977661133
    5. '   ' → logprob: -17.000123977661133
    6. ' ' → logprob: -17.500123977661133
    7. '
' → logprob: -18.875123977661133
    8. '	range' → logprob: -19.250123977661133
    9. '```' → logprob: -19.375123977661133
    10. '  ' → logprob: -20.125123977661133

Token 1074: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5935468077659607
    2. '(' → logprob: -1.4685468673706055
    3. '(right' → logprob: -1.5935468673706055
    4. '(left' → logprob: -4.8435468673706055
    5. 'right' → logprob: -5.7185468673706055
    6. '0' → logprob: -6.5935468673706055
    7. '(best' → logprob: -6.7185468673706055
    8. 'm' → logprob: -8.093546867370605
    9. 'left' → logprob: -10.593546867370605
    10. '(min' → logprob: -10.718546867370605

Token 1075: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18050535023212433
    2. ' +' → logprob: -1.805505394935608
    3. '):
' → logprob: -7.555505275726318
    4. '):' → logprob: -9.180505752563477
    5. ',' → logprob: -9.305505752563477
    6. '   ' → logprob: -11.055505752563477
    7. ')' → logprob: -12.180505752563477
    8. '<|end|>' → logprob: -12.680505752563477
    9. '<|end|>' → logprob: -12.930505752563477
    10. ')+' → logprob: -13.305505752563477

Token 1076: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005784685257822275
    2. '+' → logprob: -5.630784511566162
    3. '0' → logprob: -6.630784511566162
    4. ' ' → logprob: -7.255784511566162
    5. ')' → logprob: -10.25578498840332
    6. '):
' → logprob: -10.38078498840332
    7. ' +' → logprob: -10.38078498840332
    8. 'm' → logprob: -11.25578498840332
    9. '   ' → logprob: -11.25578498840332
    10. '(m' → logprob: -11.88078498840332

Token 1077: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.033742863684892654
    2. ':
' → logprob: -4.283742904663086
    3. ':' → logprob: -4.658742904663086
    4. '):' → logprob: -4.908742904663086
    5. '+' → logprob: -6.533742904663086
    6. '():
' → logprob: -7.658742904663086
    7. ',' → logprob: -8.408742904663086
    8. '   ' → logprob: -8.908742904663086
    9. '       ' → logprob: -9.533742904663086
    10. '```' → logprob: -10.408742904663086

Token 1078: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11414480209350586
    2. '   ' → logprob: -2.739144802093506
    3. ' for' → logprob: -3.239144802093506
    4. '<|end|>' → logprob: -6.364144802093506
    5. '       ' → logprob: -6.989144802093506
    6. '```' → logprob: -7.739144802093506
    7. ',' → logprob: -8.239145278930664
    8. '<|end|>' → logprob: -8.864145278930664
    9. ' ' → logprob: -9.114145278930664
    10. '	       ' → logprob: -9.489145278930664

Token 1079: ' found' (ID: 2491)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27078714966773987
    2. '           ' → logprob: -1.8957871198654175
    3. '   ' → logprob: -2.770787239074707
    4. 'for' → logprob: -3.895787239074707
    5. '               ' → logprob: -5.645787239074707
    6. '       ' → logprob: -8.395787239074707
    7. ' ' → logprob: -8.645787239074707
    8. ' found' → logprob: -10.645787239074707
    9. ' left' → logprob: -11.145787239074707
    10. ',' → logprob: -11.270787239074707

Token 1080: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02752387337386608
    2. '=' → logprob: -3.6525237560272217
    3. '=True' → logprob: -7.902523994445801
    4. '=False' → logprob: -7.902523994445801
    5. ':' → logprob: -8.0275239944458
    6. '   ' → logprob: -9.7775239944458
    7. ':
' → logprob: -11.2775239944458
    8. ',' → logprob: -11.2775239944458
    9. '       ' → logprob: -11.6525239944458
    10. 'for' → logprob: -11.9025239944458

Token 1081: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.003207181114703417
    2. ' False' → logprob: -5.753207206726074
    3. 'True' → logprob: -10.503207206726074
    4. '   ' → logprob: -13.253207206726074
    5. ' True' → logprob: -15.878207206726074
    6. '(False' → logprob: -16.878206253051758
    7. 'false' → logprob: -17.378206253051758
    8. '       ' → logprob: -17.503206253051758
    9. 'found' → logprob: -17.503206253051758
    10. '=False' → logprob: -18.253206253051758

Token 1082: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07762163877487183
    2. ' for' → logprob: -2.7026216983795166
    3. '<|end|>' → logprob: -5.5776214599609375
    4. '   ' → logprob: -6.7026214599609375
    5. '               ' → logprob: -7.4526214599609375
    6. ',' → logprob: -7.4526214599609375
    7. '<|end|>' → logprob: -8.202621459960938
    8. '            
' → logprob: -8.952621459960938
    9. ' =' → logprob: -9.077621459960938
    10. ':
' → logprob: -9.327621459960938

Token 1083: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14337506890296936
    2. ' for' → logprob: -2.0183751583099365
    3. 'for' → logprob: -7.768374919891357
    4. '               ' → logprob: -9.643375396728516
    5. '```' → logprob: -9.893375396728516
    6. '<|end|>' → logprob: -9.893375396728516
    7. '   ' → logprob: -10.768375396728516
    8. ',' → logprob: -11.143375396728516
    9. '            ' → logprob: -11.393375396728516
    10. '            
' → logprob: -11.393375396728516

Token 1084: ' cur' (ID: 4396)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07392250746488571
    2. '           ' → logprob: -2.6989223957061768
    3. 'for' → logprob: -5.948922634124756
    4. '               ' → logprob: -7.573922634124756
    5. '            ' → logprob: -8.323922157287598
    6. '```' → logprob: -8.823922157287598
    7. ' ' → logprob: -8.948922157287598
    8. '	for' → logprob: -9.198922157287598
    9. '	       ' → logprob: -10.323922157287598
    10. '                   ' → logprob: -10.448922157287598

Token 1085: '_l' (ID: 1478)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33375924825668335
    2. '_l' → logprob: -1.7087593078613281
    3. '=' → logprob: -2.708759307861328
    4. '           ' → logprob: -4.708759307861328
    5. ' for' → logprob: -4.958759307861328
    6. 'for' → logprob: -5.083759307861328
    7. ' ' → logprob: -6.708759307861328
    8. '_space' → logprob: -6.708759307861328
    9. '_left' → logprob: -6.833759307861328
    10. 't' → logprob: -6.833759307861328

Token 1086: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20159265398979187
    2. ' =' → logprob: -1.7015926837921143
    3. ' in' → logprob: -9.576592445373535
    4. ',' → logprob: -10.826592445373535
    5. 'for' → logprob: -10.826592445373535
    6. '<|end|>' → logprob: -11.076592445373535
    7. ')' → logprob: -11.201592445373535
    8. ' for' → logprob: -11.576592445373535
    9. 'in' → logprob: -11.576592445373535
    10. ' ' → logprob: -12.201592445373535

Token 1087: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01305822841823101
    2. 'm' → logprob: -5.138058185577393
    3. 'd' → logprob: -5.388058185577393
    4. ' ' → logprob: -6.138058185577393
    5. ' m' → logprob: -8.38805866241455
    6. ' d' → logprob: -9.01305866241455
    7. '           ' → logprob: -12.01305866241455
    8. '   ' → logprob: -12.38805866241455
    9. 'max' → logprob: -13.01305866241455
    10. '                   ' → logprob: -13.45055866241455

Token 1088: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.375006675720215
    3. 'd' → logprob: -13.375006675720215
    4. '2' → logprob: -15.500006675720215
    5. '           ' → logprob: -16.31250762939453
    6. '   ' → logprob: -16.43750762939453
    7. '```' → logprob: -16.50000762939453
    8. '
' → logprob: -16.68750762939453
    9. '=' → logprob: -16.87500762939453
    10. '۱' → logprob: -17.43750762939453

Token 1089: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04737954959273338
    2. ' for' → logprob: -3.422379493713379
    3. '<|end|>' → logprob: -4.672379493713379
    4. '<|end|>' → logprob: -6.672379493713379
    5. '
' → logprob: -6.922379493713379
    6. 'for' → logprob: -7.047379493713379
    7. ',' → logprob: -8.047379493713379
    8. ' =' → logprob: -8.547379493713379
    9. '   ' → logprob: -9.047379493713379
    10. '=' → logprob: -9.797379493713379

Token 1090: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23020409047603607
    2. ' for' → logprob: -1.6052041053771973
    3. '<|end|>' → logprob: -5.980204105377197
    4. ' 
' → logprob: -8.105203628540039
    5. ' =' → logprob: -8.355203628540039
    6. ' in' → logprob: -8.605203628540039
    7. ' ' → logprob: -8.605203628540039
    8. 'for' → logprob: -8.730203628540039
    9. '=' → logprob: -8.855203628540039
    10. '
' → logprob: -9.105203628540039

Token 1091: ' cur' (ID: 4396)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007780294865369797
    2. 'for' → logprob: -5.007780075073242
    3. '           ' → logprob: -6.882780075073242
    4. ' range' → logprob: -11.257780075073242
    5. '```' → logprob: -12.257780075073242
    6. '            ' → logprob: -12.757780075073242
    7. '               ' → logprob: -13.007780075073242
    8. '   ' → logprob: -13.257780075073242
    9. ' ' → logprob: -13.382780075073242
    10. '0' → logprob: -13.382780075073242

Token 1092: '_h' (ID: 3434)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.19985876977443695
    2. '=' → logprob: -2.4498586654663086
    3. ' =' → logprob: -2.6998586654663086
    4. 'l' → logprob: -4.449858665466309
    5. '_d' → logprob: -5.449858665466309
    6. 'for' → logprob: -5.574858665466309
    7. ' for' → logprob: -6.449858665466309
    8. 'd' → logprob: -6.574858665466309
    9. ' l' → logprob: -7.074858665466309
    10. '_r' → logprob: -7.949858665466309

Token 1093: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02630447782576084
    2. ' =' → logprob: -3.6513044834136963
    3. '=
' → logprob: -13.526304244995117
    4. '<|end|>' → logprob: -13.651304244995117
    5. ')' → logprob: -15.276304244995117
    6. '=int' → logprob: -15.651304244995117
    7. '=line' → logprob: -16.026304244995117
    8. '=start' → logprob: -16.276304244995117
    9. '＝' → logprob: -16.276304244995117
    10. ',' → logprob: -16.401304244995117

Token 1094: ' -' (ID: 533)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.010902440175414085
    2. ' cur' → logprob: -4.885902404785156
    3. 'd' → logprob: -5.760902404785156
    4. ' d' → logprob: -9.135902404785156
    5. 'left' → logprob: -11.510902404785156
    6. '(cur' → logprob: -12.010902404785156
    7. '   ' → logprob: -12.010902404785156
    8. '=' → logprob: -12.135902404785156
    9. ' =' → logprob: -13.510902404785156
    10. '[cur' → logprob: -13.510902404785156

Token 1095: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.30807939171791077
    2. 'cur' → logprob: -1.9330793619155884
    3. '(d' → logprob: -3.183079481124878
    4. '(cur' → logprob: -3.433079481124878
    5. ' (' → logprob: -4.183079242706299
    6. ' d' → logprob: -4.308079242706299
    7. '(' → logprob: -4.808079242706299
    8. 'left' → logprob: -5.683079242706299
    9. ' cur' → logprob: -6.058079242706299
    10. 'l' → logprob: -6.308079242706299

Token 1096: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04250543192028999
    2. ' for' → logprob: -3.7925055027008057
    3. '
' → logprob: -4.167505264282227
    4. '<|end|>' → logprob: -6.667505264282227
    5. ':
' → logprob: -7.667505264282227
    6. ' =' → logprob: -7.667505264282227
    7. ',' → logprob: -8.542505264282227
    8. ' 
' → logprob: -8.667505264282227
    9. '<|end|>' → logprob: -8.792505264282227
    10. 'for' → logprob: -8.792505264282227

Token 1097: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12182028591632843
    2. ' for' → logprob: -2.4968202114105225
    3. '<|end|>' → logprob: -3.8718202114105225
    4. ' 
' → logprob: -5.871820449829102
    5. ' =' → logprob: -6.746820449829102
    6. ' ' → logprob: -7.121820449829102
    7. '            ' → logprob: -7.496820449829102
    8. 'for' → logprob: -7.621820449829102
    9. '<|end|>' → logprob: -7.621820449829102
    10. '                           ' → logprob: -7.746820449829102

Token 1098: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3539651334285736
    2. ' 
' → logprob: -1.353965163230896
    3. '           ' → logprob: -4.3539652824401855
    4. 'for' (adapté à ' for') → logprob: -4.9789652824401855
    5. '```' → logprob: -5.6039652824401855
    6. '
' → logprob: -5.8539652824401855
    7. '            ' → logprob: -5.9789652824401855
    8. ' ' → logprob: -5.9789652824401855
    9. ' ' → logprob: -6.3539652824401855
    10. '            
' → logprob: -6.3539652824401855

Token 1099: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0023817114997655153
    2. ' l' → logprob: -6.127381801605225
    3. 'low' → logprob: -8.877381324768066
    4. 'cur' → logprob: -10.002381324768066
    5. ' low' → logprob: -12.127381324768066
    6. ' cur' → logprob: -13.127381324768066
    7. '   ' → logprob: -13.502381324768066
    8. 'i' → logprob: -13.627381324768066
    9. 'left' → logprob: -15.502381324768066
    10. '_l' → logprob: -15.877381324768066

Token 1100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001048646867275238
    2. 'in' → logprob: -6.876048564910889
    3. ' ' → logprob: -11.501049041748047
    4. ' ' → logprob: -13.376049041748047
    5. '	in' → logprob: -13.876049041748047
    6. '_in' → logprob: -15.001049041748047
    7. '0' → logprob: -15.126049041748047
    8. '            ' → logprob: -15.376049041748047
    9. ' i' → logprob: -15.376049041748047
    10. ' 
' → logprob: -15.501049041748047

Token 1101: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06047000735998154
    2. ' range' → logprob: -3.1854701042175293
    3. '0' → logprob: -4.060470104217529
    4. ' ' → logprob: -9.810469627380371
    5. '
' → logprob: -12.060469627380371
    6. 'in' → logprob: -12.185469627380371
    7. '(range' → logprob: -12.310469627380371
    8. '   ' → logprob: -13.435469627380371
    9. ' in' → logprob: -13.560469627380371
    10. 'l' → logprob: -14.060469627380371

Token 1102: '(m' (ID: 2145)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6679221987724304
    2. '(m' → logprob: -0.9179221987724304
    3. 'm' → logprob: -2.792922258377075
    4. '(' → logprob: -3.667922258377075
    5. 'd' → logprob: -7.167922019958496
    6. '(d' → logprob: -8.542922019958496
    7. 'left' → logprob: -10.417922019958496
    8. ' m' → logprob: -10.542922019958496
    9. '           ' → logprob: -11.042922019958496
    10. 'right' → logprob: -11.417922019958496

Token 1103: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16844582557678223
    2. '-d' → logprob: -1.9184458255767822
    3. '+' → logprob: -4.918445587158203
    4. '-' → logprob: -7.668445587158203
    5. ' +' → logprob: -7.918445587158203
    6. 'd' → logprob: -10.668445587158203
    7. '   ' → logprob: -12.418445587158203
    8. '-l' → logprob: -12.793445587158203
    9. '+d' → logprob: -13.043445587158203
    10. '-D' → logprob: -13.418445587158203

Token 1104: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.566264295950532e-05
    2. ' d' → logprob: -9.375085830688477
    3. '           ' → logprob: -15.625085830688477
    4. ' ' → logprob: -16.000085830688477
    5. '       ' → logprob: -16.625085830688477
    6. '   ' → logprob: -16.875085830688477
    7. 'diff' → logprob: -16.875085830688477
    8. 'l' → logprob: -17.000085830688477
    9. '         ' → logprob: -17.250085830688477
    10. 'difference' → logprob: -17.375085830688477

Token 1105: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20143868029117584
    2. ' +' → logprob: -1.7014386653900146
    3. '```' → logprob: -12.201438903808594
    4. '):
' → logprob: -12.326438903808594
    5. '+
' → logprob: -13.201438903808594
    6. '   ' → logprob: -13.201438903808594
    7. ',' → logprob: -13.451438903808594
    8. '<|end|>' → logprob: -13.701438903808594
    9. ' +
' → logprob: -13.826438903808594
    10. ' ' → logprob: -13.826438903808594

Token 1106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.125019073486328
    4. '           ' → logprob: -18.375019073486328
    5. ')' → logprob: -18.500019073486328
    6. '
' → logprob: -18.625019073486328
    7. '0' → logprob: -18.625019073486328
    8. '```' → logprob: -19.187519073486328
    9. '{
' → logprob: -19.250019073486328
    10. ',' → logprob: -19.562519073486328

Token 1107: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.043648261576890945
    2. '):' → logprob: -3.1686482429504395
    3. ':' → logprob: -8.668648719787598
    4. '           ' → logprob: -8.668648719787598
    5. ':
' → logprob: -8.918648719787598
    6. '               ' → logprob: -9.543648719787598
    7. '<|end|>' → logprob: -11.043648719787598
    8. '       ' → logprob: -11.168648719787598
    9. '():
' → logprob: -11.168648719787598
    10. '):
' → logprob: -11.668648719787598

Token 1108: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008572661899961531
    2. '<|end|>' → logprob: -8.25085735321045
    3. '           ' → logprob: -8.87585735321045
    4. ' if' → logprob: -9.00085735321045
    5. '                
' → logprob: -9.75085735321045
    6. '                ' → logprob: -10.00085735321045
    7. '```' → logprob: -10.12585735321045
    8. '              ' → logprob: -10.37585735321045
    9. '                   ' → logprob: -10.50085735321045
    10. '                               ' → logprob: -10.50085735321045

Token 1109: ' h' (ID: 312)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5313091278076172
    2. '                   ' → logprob: -1.0313091278076172
    3. 'if' → logprob: -3.156309127807617
    4. '               ' → logprob: -4.406309127807617
    5. ' can' → logprob: -7.781309127807617
    6. '                       ' → logprob: -8.781309127807617
    7. '```' → logprob: -9.906309127807617
    8. 'can' → logprob: -10.031309127807617
    9. '                           ' → logprob: -10.281309127807617
    10. '   ' → logprob: -10.781309127807617

Token 1110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697923183441162
    2. '=' → logprob: -2.126979351043701
    3. ')' → logprob: -11.626978874206543
    4. '=h' → logprob: -11.626978874206543
    5. '=l' → logprob: -11.876978874206543
    6. ',' → logprob: -11.876978874206543
    7. ' =
' → logprob: -12.501978874206543
    8. '=
' → logprob: -12.501978874206543
    9. '           ' → logprob: -13.501978874206543
    10. '```' → logprob: -13.626978874206543

Token 1111: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01815006136894226
    2. ' l' → logprob: -4.0181498527526855
    3. '	l' → logprob: -15.768150329589844
    4. '```' → logprob: -19.018150329589844
    5. ' ' → logprob: -19.518150329589844
    6. ' ' → logprob: -20.143150329589844
    7. '   ' → logprob: -20.268150329589844
    8. '           ' → logprob: -21.518150329589844
    9. '_l' → logprob: -21.643150329589844
    10. '$l' → logprob: -21.768150329589844

Token 1112: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5767459869384766
    2. '+' → logprob: -0.8267459869384766
    3. '+d' → logprob: -7.576745986938477
    4. '+l' → logprob: -8.201745986938477
    5. '+t' → logprob: -12.201745986938477
    6. '+k' → logprob: -12.701745986938477
    7. '+r' → logprob: -12.951745986938477
    8. '+h' → logprob: -13.076745986938477
    9. '+n' → logprob: -13.076745986938477
    10. '+
' → logprob: -13.701745986938477

Token 1113: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.130576806142926e-05
    2. ' d' → logprob: -10.375031471252441
    3. '
' → logprob: -17.500030517578125
    4. '   ' → logprob: -18.625030517578125
    5. ' ' → logprob: -19.000030517578125
    6. '	d' → logprob: -19.500030517578125
    7. '           ' → logprob: -19.875030517578125
    8. '```' → logprob: -20.125030517578125
    9. '  ' → logprob: -20.750030517578125
    10. '               ' → logprob: -21.000030517578125

Token 1114: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03590511903166771
    2. '<|end|>' → logprob: -3.535905122756958
    3. ' if' → logprob: -6.410904884338379
    4. ':
' → logprob: -6.660904884338379
    5. '
' → logprob: -7.410904884338379
    6. '                   ' → logprob: -7.535904884338379
    7. '<|end|>' → logprob: -7.660904884338379
    8. ':' → logprob: -8.035904884338379
    9. '                
' → logprob: -8.285904884338379
    10. '                ' → logprob: -8.535904884338379

Token 1115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003392767102923244
    2. '<|end|>' → logprob: -8.50033950805664
    3. ' if' → logprob: -9.50033950805664
    4. '                   ' → logprob: -10.62533950805664
    5. ',' → logprob: -11.62533950805664
    6. 'if' → logprob: -12.25033950805664
    7. '                       ' → logprob: -12.62533950805664
    8. '                
' → logprob: -12.75033950805664
    9. '<|end|>' → logprob: -12.87533950805664
    10. '	           ' → logprob: -13.00033950805664

Token 1116: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16237406432628632
    2. '               ' → logprob: -2.2873740196228027
    3. 'if' (adapté à ' if') → logprob: -3.0373740196228027
    4. '                   ' → logprob: -8.037374496459961
    5. ' token' → logprob: -10.912374496459961
    6. 'token' → logprob: -11.162374496459961
    7. '                       ' → logprob: -11.537374496459961
    8. '```' → logprob: -12.162374496459961
    9. '                               ' → logprob: -13.162374496459961
    10. '                           ' → logprob: -13.662374496459961

Token 1117: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.20141743123531342
    2. 'can' → logprob: -1.7014174461364746
    3. ' not' → logprob: -13.451416969299316
    4. '               ' → logprob: -13.701416969299316
    5. '	can' → logprob: -14.326416969299316
    6. '(can' → logprob: -14.576416969299316
    7. '_can' → logprob: -16.326417922973633
    8. 'not' → logprob: -16.326417922973633
    9. '                   ' → logprob: -16.451417922973633
    10. '.can' → logprob: -16.576417922973633

Token 1118: '_assign' (ID: 55018)
  Prédit: '_assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_assign' → logprob: -0.00010080150241265073
    2. '_ass' → logprob: -9.500101089477539
    3. '_can' → logprob: -11.375101089477539
    4. '```' → logprob: -12.375101089477539
    5. ')' → logprob: -13.125101089477539
    6. '_' → logprob: -13.750101089477539
    7. '_append' → logprob: -13.875101089477539
    8. 'assign' → logprob: -14.000101089477539
    9. '_continue' → logprob: -14.125101089477539
    10. '_ASSIGN' → logprob: -14.625101089477539

Token 1119: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0005297990282997489
    2. 'm' → logprob: -7.750529766082764
    3. '(' → logprob: -9.500530242919922
    4. '(
' → logprob: -12.000530242919922
    5. ')' → logprob: -12.125530242919922
    6. '```' → logprob: -12.125530242919922
    7. ')m' → logprob: -12.625530242919922
    8. '(len' → logprob: -14.375530242919922
    9. '(h' → logprob: -14.500530242919922
    10. '
' → logprob: -14.500530242919922

Token 1120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009144739247858524
    2. ',S' → logprob: -4.7591447830200195
    3. ',m' → logprob: -7.7591447830200195
    4. ' ,' → logprob: -9.63414478302002
    5. ',l' → logprob: -11.50914478302002
    6. ',n' → logprob: -11.88414478302002
    7. ',u' → logprob: -12.50914478302002
    8. '`,' → logprob: -12.75914478302002
    9. '```' → logprob: -13.13414478302002
    10. ',
' → logprob: -13.25914478302002

Token 1121: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.018160710111260414
    2. ' edges' → logprob: -4.018160820007324
    3. '(edges' → logprob: -11.768160820007324
    4. '.edges' → logprob: -13.393160820007324
    5. '               ' → logprob: -14.768160820007324
    6. '                   ' → logprob: -15.143160820007324
    7. '           ' → logprob: -15.268160820007324
    8. '```' → logprob: -15.393160820007324
    9. ')' → logprob: -15.768160820007324
    10. '_edges' → logprob: -16.143159866333008

Token 1122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005087645258754492
    2. ',S' → logprob: -5.380087852478027
    3. ',m' → logprob: -7.880087852478027
    4. ' ,' → logprob: -9.880087852478027
    5. ',l' → logprob: -11.255087852478027
    6. ',u' → logprob: -11.630087852478027
    7. '               ' → logprob: -12.505087852478027
    8. '(S' → logprob: -12.880087852478027
    9. ',
' → logprob: -13.380087852478027
    10. '                   ' → logprob: -13.755087852478027

Token 1123: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00016063073417171836
    2. ' n' → logprob: -8.750160217285156
    3. '```' → logprob: -13.875160217285156
    4. '   ' → logprob: -14.375160217285156
    5. '
' → logprob: -15.250160217285156
    6. '                   ' → logprob: -16.250160217285156
    7. '               ' → logprob: -16.375160217285156
    8. '                               ' → logprob: -16.375160217285156
    9. '           ' → logprob: -17.000160217285156
    10. '	n' → logprob: -17.375160217285156

Token 1124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012096378486603498
    2. ',l' → logprob: -7.126209735870361
    3. ',h' → logprob: -8.001209259033203
    4. ' ,' → logprob: -9.751209259033203
    5. ',n' → logprob: -12.751209259033203
    6. ',m' → logprob: -13.001209259033203
    7. ',u' → logprob: -13.251209259033203
    8. ',
' → logprob: -13.751209259033203
    9. '```' → logprob: -13.751209259033203
    10. ',v' → logprob: -15.001209259033203

Token 1125: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0008253490086644888
    2. ' l' → logprob: -7.37582540512085
    3. 'h' → logprob: -8.625824928283691
    4. '```' → logprob: -12.250824928283691
    5. '   ' → logprob: -12.500824928283691
    6. '           ' → logprob: -13.125824928283691
    7. ')' → logprob: -13.250824928283691
    8. '                   ' → logprob: -13.250824928283691
    9. '               ' → logprob: -14.000824928283691
    10. '	l' → logprob: -14.125824928283691

Token 1126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000700045726262033
    2. ',h' → logprob: -7.625699996948242
    3. ' ,' → logprob: -9.250699996948242
    4. '               ' → logprob: -10.125699996948242
    5. ',v' → logprob: -11.125699996948242
    6. '                   ' → logprob: -11.250699996948242
    7. ',u' → logprob: -12.250699996948242
    8. ',k' → logprob: -12.375699996948242
    9. ',l' → logprob: -12.500699996948242
    10. ',
' → logprob: -12.500699996948242

Token 1127: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.054500666621607e-06
    2. ' h' → logprob: -12.87500286102295
    3. '```' → logprob: -15.12500286102295
    4. '           ' → logprob: -16.750003814697266
    5. '                   ' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.000003814697266
    7. '               ' → logprob: -17.125003814697266
    8. '
' → logprob: -18.000003814697266
    9. '                               ' → logprob: -18.125003814697266
    10. ')' → logprob: -18.500003814697266

Token 1128: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14412730932235718
    2. '):' → logprob: -2.019127368927002
    3. '                   ' → logprob: -7.394127368927002
    4. '               ' → logprob: -8.019126892089844
    5. ')' → logprob: -8.644126892089844
    6. '):

' → logprob: -9.769126892089844
    7. '                       ' → logprob: -10.144126892089844
    8. ':' → logprob: -10.144126892089844
    9. ')==' → logprob: -10.144126892089844
    10. '):
' → logprob: -10.644126892089844

Token 1129: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017638947814702988
    2. '                       ' → logprob: -5.14263916015625
    3. '                                           ' → logprob: -5.14263916015625
    4. '                           ' → logprob: -6.01763916015625
    5. '               ' → logprob: -7.64263916015625
    6. '                               ' → logprob: -7.89263916015625
    7. '```' → logprob: -7.89263916015625
    8. '                                   ' → logprob: -8.14263916015625
    9. '                                       ' → logprob: -8.14263916015625
    10. '                  ' → logprob: -8.51763916015625

Token 1130: ' found' (ID: 2491)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.21411128342151642
    2. '                   ' → logprob: -2.214111328125
    3. '                       ' → logprob: -2.714111328125
    4. 'found' (adapté à ' found') → logprob: -4.339111328125
    5. ' cur' → logprob: -5.839111328125
    6. ' found' → logprob: -7.839111328125
    7. '                           ' → logprob: -8.339111328125
    8. '                               ' → logprob: -8.589111328125
    9. '               ' → logprob: -8.589111328125
    10. '```' → logprob: -8.839111328125

Token 1131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19200929999351501
    2. '=' → logprob: -1.9420093297958374
    3. '=True' → logprob: -3.942009210586548
    4. '                       ' → logprob: -4.942009449005127
    5. '                   ' → logprob: -5.442009449005127
    6. '=False' → logprob: -9.067008972167969
    7. '               ' → logprob: -9.192008972167969
    8. '                        
' → logprob: -9.817008972167969
    9. '                           ' → logprob: -10.567008972167969
    10. '           ' → logprob: -10.942008972167969

Token 1132: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0011742709903046489
    2. ' True' → logprob: -6.751174449920654
    3. '                   ' → logprob: -13.001173973083496
    4. '=True' → logprob: -14.001173973083496
    5. '                       ' → logprob: -14.626173973083496
    6. '(True' → logprob: -15.501173973083496
    7. '
' → logprob: -16.001174926757812
    8. '               ' → logprob: -16.501174926757812
    9. 'true' → logprob: -17.126174926757812
    10. '                           ' → logprob: -17.751174926757812

Token 1133: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1482681781053543
    2. '                       ' → logprob: -2.023268222808838
    3. '                           ' → logprob: -5.523268222808838
    4. '               ' → logprob: -7.648268222808838
    5. '<|end|>' → logprob: -8.14826774597168
    6. '                    ' → logprob: -8.77326774597168
    7. '                               ' → logprob: -8.89826774597168
    8. '```' → logprob: -9.02326774597168
    9. '                    
' → logprob: -9.64826774597168
    10. '                        
' → logprob: -9.64826774597168

Token 1134: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.056205857545137405
    2. '                       ' → logprob: -2.9312057495117188
    3. '                           ' → logprob: -7.056205749511719
    4. '               ' → logprob: -8.931205749511719
    5. '```' → logprob: -9.306205749511719
    6. '                    ' → logprob: -9.681205749511719
    7. '                               ' → logprob: -10.181205749511719
    8. '<|end|>' → logprob: -10.556205749511719
    9. '                    
' → logprob: -10.681205749511719
    10. '                        
' → logprob: -11.056205749511719

Token 1135: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.08209667354822159
    2. '                   ' → logprob: -2.832096576690674
    3. '                       ' → logprob: -4.457096576690674
    4. ' cur' → logprob: -4.957096576690674
    5. '```' → logprob: -7.832096576690674
    6. '                               ' → logprob: -7.957096576690674
    7. '                           ' → logprob: -8.332097053527832
    8. ' if' → logprob: -9.332097053527832
    9. 'if' → logprob: -9.457097053527832
    10. '               ' → logprob: -9.707097053527832

Token 1136: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0030544809997081757
    2. ' _' → logprob: -5.878054618835449
    3. '_' → logprob: -9.12805461883545
    4. ' =' → logprob: -10.37805461883545
    5. '=' → logprob: -10.50305461883545
    6. ' l' → logprob: -11.25305461883545
    7. 'l' → logprob: -11.37805461883545
    8. '_h' → logprob: -11.50305461883545
    9. '                   ' → logprob: -11.62805461883545
    10. '```' → logprob: -12.12805461883545

Token 1137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1606437712907791
    2. ' =' → logprob: -1.9106438159942627
    3. '=l' → logprob: -7.785643577575684
    4. '=
' → logprob: -13.035643577575684
    5. ' l' → logprob: -15.035643577575684
    6. ',' → logprob: -15.410643577575684
    7. '<|end|>' → logprob: -15.410643577575684
    8. '=k' → logprob: -15.410643577575684
    9. '＝' → logprob: -16.16064453125
    10. '=d' → logprob: -16.41064453125

Token 1138: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -9.13388703338569e-06
    2. ' l' → logprob: -12.375009536743164
    3. 'h' → logprob: -13.000009536743164
    4. '                   ' → logprob: -13.125009536743164
    5. '	l' → logprob: -15.000009536743164
    6. '```' → logprob: -16.500009536743164
    7. '                       ' → logprob: -16.625009536743164
    8. '   ' → logprob: -16.750009536743164
    9. '                           ' → logprob: -17.875009536743164
    10. '               ' → logprob: -18.875009536743164

Token 1139: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025752661749720573
    2. '<|end|>' → logprob: -4.150752544403076
    3. '
' → logprob: -4.900752544403076
    4. '               ' → logprob: -6.900752544403076
    5. '           ' → logprob: -7.775752544403076
    6. ',' → logprob: -8.650753021240234
    7. '```' → logprob: -9.150753021240234
    8. '				' → logprob: -9.275753021240234
    9. '<|end|>' → logprob: -9.275753021240234
    10. '                    
' → logprob: -9.650753021240234

Token 1140: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01698494888842106
    2. '<|end|>' → logprob: -4.391984939575195
    3. '```' → logprob: -6.391984939575195
    4. '               ' → logprob: -6.891984939575195
    5. '                    
' → logprob: -8.141984939575195
    6. '
' → logprob: -8.141984939575195
    7. '           ' → logprob: -8.391984939575195
    8. '                       ' → logprob: -8.641984939575195
    9. ',' → logprob: -9.391984939575195
    10. '<|end|>' → logprob: -9.391984939575195

Token 1141: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -6.32523515378125e-05
    2. '                   ' → logprob: -10.250062942504883
    3. ' cur' → logprob: -10.500062942504883
    4. '               ' → logprob: -16.250062942504883
    5. '                       ' → logprob: -16.500062942504883
    6. 'curr' → logprob: -17.000062942504883
    7. '           ' → logprob: -17.875062942504883
    8. '```' → logprob: -17.875062942504883
    9. '	cur' → logprob: -18.250062942504883
    10. '[cur' → logprob: -18.625062942504883

Token 1142: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.001048412173986435
    2. 'h' → logprob: -6.876048564910889
    3. '+' → logprob: -12.25104808807373
    4. '_s' → logprob: -13.12604808807373
    5. '_l' → logprob: -13.12604808807373
    6. '                   ' → logprob: -13.75104808807373
    7. '+h' → logprob: -13.75104808807373
    8. '_d' → logprob: -14.37604808807373
    9. '   ' → logprob: -14.50104808807373
    10. '=' → logprob: -14.50104808807373

Token 1143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4318978786468506
    2. '=' → logprob: -1.0568978786468506
    3. '<|end|>' → logprob: -5.93189811706543
    4. '                   ' → logprob: -9.18189811706543
    5. '=h' → logprob: -9.30689811706543
    6. ' +' → logprob: -9.55689811706543
    7. 'h' → logprob: -9.80689811706543
    8. ' ' → logprob: -10.05689811706543
    9. '+' → logprob: -10.18189811706543
    10. '                ' → logprob: -11.30689811706543

Token 1144: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.842555426876061e-06
    2. ' h' → logprob: -12.250004768371582
    3. '                   ' → logprob: -16.8750057220459
    4. '   ' → logprob: -18.1250057220459
    5. '               ' → logprob: -18.3750057220459
    6. '           ' → logprob: -18.7500057220459
    7. '                       ' → logprob: -19.6250057220459
    8. '	h' → logprob: -20.2500057220459
    9. '       ' → logprob: -20.5000057220459
    10. '                               ' → logprob: -21.1250057220459

Token 1145: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001141526736319065
    2. '<|end|>' → logprob: -8.001141548156738
    3. '               ' → logprob: -8.126141548156738
    4. '                       ' → logprob: -8.501141548156738
    5. '                           ' → logprob: -9.626141548156738
    6. '           ' → logprob: -10.126141548156738
    7. '                  ' → logprob: -10.376141548156738
    8. '```' → logprob: -10.501141548156738
    9. '                    ' → logprob: -10.626141548156738
    10. '                    
' → logprob: -11.001141548156738

Token 1146: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010591294849291444
    2. '```' → logprob: -7.751059055328369
    3. '                       ' → logprob: -8.501059532165527
    4. '               ' → logprob: -8.876059532165527
    5. '                           ' → logprob: -9.501059532165527
    6. '<|end|>' → logprob: -9.626059532165527
    7. '           ' → logprob: -9.876059532165527
    8. '                    
' → logprob: -10.876059532165527
    9. '
' → logprob: -11.376059532165527
    10. '                        
' → logprob: -11.626059532165527

Token 1147: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4366496801376343
    2. '                   ' → logprob: -1.0616496801376343
    3. ' break' → logprob: -4.936649799346924
    4. '
' → logprob: -8.436649322509766
    5. '               ' → logprob: -8.936649322509766
    6. '           ' → logprob: -9.186649322509766
    7. 'continue' → logprob: -9.311649322509766
    8. '                       ' → logprob: -10.186649322509766
    9. 'best' → logprob: -10.311649322509766
    10. 'if' → logprob: -10.311649322509766

Token 1148: ' since' (ID: 3630)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2389136254787445
    2. '                   ' → logprob: -1.613913655281067
    3. ' break' → logprob: -4.863913536071777
    4. 'continue' → logprob: -5.488913536071777
    5. '#' → logprob: -7.488913536071777
    6. '                       ' → logprob: -7.988913536071777
    7. '```' → logprob: -8.613913536071777
    8. '               ' → logprob: -8.738913536071777
    9. 'pass' → logprob: -8.988913536071777
    10. '           ' → logprob: -9.238913536071777

Token 1149: ' want' (ID: 1682)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9973415732383728
    2. 'we' → logprob: -1.9973416328430176
    3. 'found' → logprob: -2.1223416328430176
    4. ' not' → logprob: -2.4973416328430176
    5. 'not' → logprob: -2.7473416328430176
    6. 'break' → logprob: -3.1223416328430176
    7. 'cur' → logprob: -3.4973416328430176
    8. 'l' → logprob: -3.7473416328430176
    9. 'best' → logprob: -3.7473416328430176
    10. '                   ' → logprob: -3.8723416328430176

Token 1150: ' max' (ID: 2999)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1880485713481903
    2. '                   ' → logprob: -2.4380486011505127
    3. 'to' → logprob: -2.9380486011505127
    4. 'the' → logprob: -5.313048362731934
    5. '                       ' → logprob: -5.688048362731934
    6. ' the' → logprob: -5.688048362731934
    7. 'max' → logprob: -6.063048362731934
    8. '               ' → logprob: -6.188048362731934
    9. 'maximize' → logprob: -6.188048362731934
    10. 'cur' → logprob: -6.313048362731934

Token 1151: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2540206015110016
    2. ' l' → logprob: -2.0040206909179688
    3. '_l' → logprob: -2.6290206909179688
    4. 'cur' → logprob: -4.754020690917969
    5. '                   ' → logprob: -5.004020690917969
    6. ' cur' → logprob: -6.379020690917969
    7. '_cur' → logprob: -9.379020690917969
    8. '                    ' → logprob: -9.629020690917969
    9. '               ' → logprob: -9.754020690917969
    10. '                       ' → logprob: -10.379020690917969

Token 1152: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00737933162599802
    2. '                       ' → logprob: -5.132379531860352
    3. ',' → logprob: -7.382379531860352
    4. '               ' → logprob: -8.257379531860352
    5. '                           ' → logprob: -8.382379531860352
    6. ' break' → logprob: -8.757379531860352
    7. 'break' → logprob: -10.257379531860352
    8. '                               ' → logprob: -10.632379531860352
    9. '```' → logprob: -10.757379531860352
    10. '
' → logprob: -10.882379531860352

Token 1153: ' this' (ID: 495)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7752841114997864
    2. 'cur' → logprob: -1.0252840518951416
    3. 'd' → logprob: -2.1502840518951416
    4. ' l' → logprob: -3.9002840518951416
    5. 'h' → logprob: -4.650284290313721
    6. ' d' → logprob: -4.775284290313721
    7. 'difference' → logprob: -4.900284290313721
    8. 'the' → logprob: -5.525284290313721
    9. 'that' → logprob: -6.150284290313721
    10. 'diff' → logprob: -6.150284290313721

Token 1154: ' diff' (ID: 8868)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5390346050262451
    2. ' d' → logprob: -0.9140346050262451
    3. 'difference' → logprob: -5.664034843444824
    4. '                   ' → logprob: -5.789034843444824
    5. ' difference' → logprob: -5.914034843444824
    6. 'diff' → logprob: -6.289034843444824
    7. ' range' → logprob: -6.539034843444824
    8. ' for' → logprob: -6.664034843444824
    9. '#' → logprob: -7.414034843444824
    10. 'range' → logprob: -8.539034843444824

Token 1155: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05771997198462486
    2. '                       ' → logprob: -3.6827199459075928
    3. ',' → logprob: -4.182720184326172
    4. '                           ' → logprob: -5.307720184326172
    5. ' break' → logprob: -6.307720184326172
    6. '                               ' → logprob: -6.682720184326172
    7. '               ' → logprob: -6.682720184326172
    8. ':
' → logprob: -6.807720184326172
    9. '<|end|>' → logprob: -7.057720184326172
    10. 'break' → logprob: -7.307720184326172

Token 1156: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8420220017433167
    2. '                       ' → logprob: -1.0920219421386719
    3. ' continue' → logprob: -1.7170219421386719
    4. 'break' → logprob: -3.842021942138672
    5. '                   ' → logprob: -3.967021942138672
    6. ' break' → logprob: -4.342021942138672
    7. '                           ' → logprob: -8.717021942138672
    8. '```' → logprob: -9.592021942138672
    9. 'pass' → logprob: -9.717021942138672
    10. '	continue' → logprob: -9.842021942138672

Token 1157: ' checking' (ID: 19141)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06837978959083557
    2. 'continue' → logprob: -2.8183798789978027
    3. '               ' → logprob: -5.318379878997803
    4. ' continue' → logprob: -7.443379878997803
    5. '           ' → logprob: -7.818379878997803
    6. '                       ' → logprob: -7.818379878997803
    7. '	continue' → logprob: -10.818379402160645
    8. '   ' → logprob: -11.568379402160645
    9. '
' → logprob: -11.568379402160645
    10. '       ' → logprob: -11.693379402160645

Token 1158: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3275308310985565
    2. ' continue' → logprob: -1.702530860900879
    3. 'continue' → logprob: -2.452530860900879
    4. '               ' → logprob: -4.827530860900879
    5. '                       ' → logprob: -6.702530860900879
    6. '           ' → logprob: -7.452530860900879
    7. ' for' → logprob: -8.327530860900879
    8. '	continue' → logprob: -8.577530860900879
    9. '                    ' → logprob: -9.202530860900879
    10. ' to' → logprob: -9.327530860900879

Token 1159: '           ' (ID: 352)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010624007321894169
    2. '```' → logprob: -5.385623931884766
    3. '               ' → logprob: -5.635623931884766
    4. '                       ' → logprob: -7.385623931884766
    5. '           ' → logprob: -7.760623931884766
    6. '                    ' → logprob: -8.260623931884766
    7. ' continue' → logprob: -8.385623931884766
    8. '       ' → logprob: -9.010623931884766
    9. '                           ' → logprob: -9.135623931884766
    10. '<|end|>' → logprob: -9.385623931884766

Token 1160: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9434263110160828
    2. ' continue' → logprob: -1.3184263706207275
    3. '                   ' → logprob: -1.8184263706207275
    4. '           ' → logprob: -2.4434263706207275
    5. ' if' → logprob: -2.6934263706207275
    6. '```' → logprob: -4.818426132202148
    7. 'continue' → logprob: -5.193426132202148
    8. '       ' → logprob: -5.818426132202148
    9. '                       ' → logprob: -5.943426132202148
    10. ' for' → logprob: -6.068426132202148

Token 1161: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.4771067202091217
    2. ' found' → logprob: -0.9771066904067993
    3. ' not' → logprob: -6.47710657119751
    4. 'not' → logprob: -7.35210657119751
    5. '           ' → logprob: -7.60210657119751
    6. '   ' → logprob: -8.852107048034668
    7. '               ' → logprob: -9.727107048034668
    8. '                   ' → logprob: -10.852107048034668
    9. '    ' → logprob: -10.977107048034668
    10. '       ' → logprob: -10.977107048034668

Token 1162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.429958701133728
    2. '               ' → logprob: -1.554958701133728
    3. ':
' → logprob: -2.0549588203430176
    4. ' and' → logprob: -5.304958820343018
    5. '           ' → logprob: -5.554958820343018
    6. '                   ' → logprob: -8.55495834350586
    7. ' =' → logprob: -8.67995834350586
    8. ',' → logprob: -8.67995834350586
    9. ' ==' → logprob: -8.80495834350586
    10. '<|end|>' → logprob: -8.80495834350586

Token 1163: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019543254747986794
    2. '           ' → logprob: -6.876954555511475
    3. '                   ' → logprob: -7.626954555511475
    4. '```' → logprob: -8.251954078674316
    5. ' best' → logprob: -9.376954078674316
    6. '   ' → logprob: -10.376954078674316
    7. '       ' → logprob: -10.626954078674316
    8. '                       ' → logprob: -11.376954078674316
    9. 'best' → logprob: -12.001954078674316
    10. '``' → logprob: -12.501954078674316

Token 1164: ' best' (ID: 1636)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25690585374832153
    2. ' best' → logprob: -1.8819057941436768
    3. '   ' → logprob: -3.5069057941436768
    4. 'best' (adapté à ' best') → logprob: -3.8819057941436768
    5. '           ' → logprob: -4.006906032562256
    6. '       ' → logprob: -5.756906032562256
    7. '                   ' → logprob: -6.756906032562256
    8. ' if' → logprob: -7.006906032562256
    9. '```' → logprob: -9.381905555725098
    10. 'if' → logprob: -10.131905555725098

Token 1165: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.0007555469055660069
    2. '_l' → logprob: -7.250755310058594
    3. '_difference' → logprob: -10.250755310058594
    4. '_d' → logprob: -12.250755310058594
    5. '_left' → logprob: -13.000755310058594
    6. 'diff' → logprob: -14.250755310058594
    7. '```' → logprob: -14.375755310058594
    8. '_best' → logprob: -14.500755310058594
    9. '_DIFF' → logprob: -14.875755310058594
    10. '_h' → logprob: -15.375755310058594

Token 1166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17977160215377808
    2. '=' → logprob: -1.8047716617584229
    3. ',' → logprob: -12.179771423339844
    4. ' =
' → logprob: -12.304771423339844
    5. '           ' → logprob: -12.554771423339844
    6. '<|end|>' → logprob: -12.554771423339844
    7. '               ' → logprob: -13.304771423339844
    8. '=
' → logprob: -13.304771423339844
    9. ')' → logprob: -13.429771423339844
    10. '   ' → logprob: -14.429771423339844

Token 1167: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.639096970204264e-05
    2. ' d' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.250097274780273
    4. '           ' → logprob: -16.625097274780273
    5. '	d' → logprob: -17.750097274780273
    6. '       ' → logprob: -18.125097274780273
    7. '
' → logprob: -19.375097274780273
    8. ' ' → logprob: -19.875097274780273
    9. '$d' → logprob: -20.000097274780273
    10. '```' → logprob: -20.125097274780273

Token 1168: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004228935576975346
    2. '
' → logprob: -5.7542290687561035
    3. '<|end|>' → logprob: -7.2542290687561035
    4. '           ' → logprob: -9.129228591918945
    5. ',' → logprob: -9.129228591918945
    6. '                   ' → logprob: -10.254228591918945
    7. '       ' → logprob: -10.754228591918945
    8. '```' → logprob: -11.254228591918945
    9. '                
' → logprob: -11.629228591918945
    10. ',
' → logprob: -11.754228591918945

Token 1169: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002234437270089984
    2. '```' → logprob: -9.125223159790039
    3. '<|end|>' → logprob: -10.250223159790039
    4. '           ' → logprob: -10.250223159790039
    5. '       ' → logprob: -10.625223159790039
    6. '                   ' → logprob: -12.125223159790039
    7. '
' → logprob: -12.500223159790039
    8. '              ' → logprob: -12.750223159790039
    9. '                       ' → logprob: -13.500223159790039
    10. ',' → logprob: -13.875223159790039

Token 1170: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.008770561777055264
    2. ' best' → logprob: -4.75877046585083
    3. '               ' → logprob: -9.383770942687988
    4. 'break' → logprob: -9.633770942687988
    5. '           ' → logprob: -12.258770942687988
    6. '       ' → logprob: -14.883770942687988
    7. '                   ' → logprob: -14.883770942687988
    8. ' break' → logprob: -15.133770942687988
    9. 'left' → logprob: -15.508770942687988
    10. '
' → logprob: -15.883770942687988

Token 1171: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.512236498361744e-07
    2. '_diff' → logprob: -14.875000953674316
    3. '_n' → logprob: -16.5
    4. '\' → logprob: -17.375
    5. '_r' → logprob: -17.875
    6. '_d' → logprob: -18.125
    7. '_best' → logprob: -18.375
    8. '_left' → logprob: -18.5
    9. '```' → logprob: -18.75
    10. ' _' → logprob: -19.125

Token 1172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048589639365673065
    2. ' =' → logprob: -3.0485897064208984
    3. '=
' → logprob: -13.298589706420898
    4. '               ' → logprob: -15.923589706420898
    5. ',' → logprob: -16.5485897064209
    6. ' =
' → logprob: -17.1735897064209
    7. '           ' → logprob: -17.4235897064209
    8. '＝' → logprob: -17.4235897064209
    9. '<|end|>' → logprob: -17.4235897064209
    10. '=user' → logprob: -17.5485897064209

Token 1173: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0029842406511306763
    2. ' cur' → logprob: -6.252984046936035
    3. 'l' → logprob: -7.002984046936035
    4. 'left' → logprob: -9.627984046936035
    5. '               ' → logprob: -10.502984046936035
    6. '           ' → logprob: -11.377984046936035
    7. 'curr' → logprob: -11.752984046936035
    8. '                   ' → logprob: -12.127984046936035
    9. 'best' → logprob: -12.127984046936035
    10. 'max' → logprob: -12.627984046936035

Token 1174: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.002996124094352126
    2. '+' → logprob: -6.12799596786499
    3. '               ' → logprob: -8.252996444702148
    4. ' +' → logprob: -8.252996444702148
    5. '                   ' → logprob: -8.877996444702148
    6. '+l' → logprob: -9.877996444702148
    7. '```' → logprob: -11.002996444702148
    8. '           ' → logprob: -11.127996444702148
    9. 'l' → logprob: -11.377996444702148
    10. '              ' → logprob: -11.627996444702148

Token 1175: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.214019307051785e-05
    2. '<|end|>' → logprob: -11.125032424926758
    3. '```' → logprob: -11.375032424926758
    4. '                   ' → logprob: -13.375032424926758
    5. '                       ' → logprob: -14.000032424926758
    6. '
' → logprob: -14.000032424926758
    7. '           ' → logprob: -14.125032424926758
    8. '       ' → logprob: -14.750032424926758
    9. ' and' → logprob: -15.250032424926758
    10. '                               ' → logprob: -15.500032424926758

Token 1176: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.061054359131958e-06
    2. '```' → logprob: -13.250007629394531
    3. '           ' → logprob: -13.375007629394531
    4. '                   ' → logprob: -14.000007629394531
    5. '<|end|>' → logprob: -14.000007629394531
    6. '              ' → logprob: -14.375007629394531
    7. '       ' → logprob: -14.500007629394531
    8. '                ' → logprob: -14.750007629394531
    9. '                       ' → logprob: -14.875007629394531
    10. 'break' → logprob: -15.250007629394531

Token 1177: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.006743674166500568
    2. ' best' → logprob: -5.006743907928467
    3. '               ' → logprob: -10.506743431091309
    4. 'break' → logprob: -14.256743431091309
    5. '           ' → logprob: -15.256743431091309
    6. '	best' → logprob: -17.381744384765625
    7. '(best' → logprob: -17.631744384765625
    8. '                   ' → logprob: -17.756744384765625
    9. '.best' → logprob: -18.381744384765625
    10. '_best' → logprob: -19.131744384765625

Token 1178: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -2.2007883671903983e-05
    2. 'h' → logprob: -11.750021934509277
    3. '_l' → logprob: -12.125021934509277
    4. 'diff' → logprob: -12.375021934509277
    5. '=' → logprob: -14.250021934509277
    6. '```' → logprob: -14.250021934509277
    7. '_r' → logprob: -14.750021934509277
    8. '_i' → logprob: -15.250021934509277
    9. '_c' → logprob: -15.250021934509277
    10. '   ' → logprob: -15.500021934509277

Token 1179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014168208464980125
    2. ' =' → logprob: -4.2641682624816895
    3. 'cur' → logprob: -13.139167785644531
    4. ' cur' → logprob: -13.889167785644531
    5. ' ' → logprob: -14.639167785644531
    6. '_cur' → logprob: -15.389167785644531
    7. '               ' → logprob: -15.389167785644531
    8. '_' → logprob: -15.764167785644531
    9. '   ' → logprob: -15.889167785644531
    10. '=
' → logprob: -16.76416778564453

Token 1180: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0002613358374219388
    2. ' cur' → logprob: -8.250261306762695
    3. 'best' → logprob: -16.875261306762695
    4. '	cur' → logprob: -18.500261306762695
    5. '(cur' → logprob: -19.125261306762695
    6. 'curr' → logprob: -19.500261306762695
    7. '   ' → logprob: -19.750261306762695
    8. '       ' → logprob: -20.750261306762695
    9. 'c' → logprob: -20.750261306762695
    10. '               ' → logprob: -20.875261306762695

Token 1181: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0017988269682973623
    2. '_l' → logprob: -6.376798629760742
    3. 'h' → logprob: -9.501798629760742
    4. '_d' → logprob: -11.751798629760742
    5. 'diff' → logprob: -12.626798629760742
    6. '```' → logprob: -13.376798629760742
    7. '_i' → logprob: -13.501798629760742
    8. 'l' → logprob: -13.501798629760742
    9. '
' → logprob: -13.626798629760742
    10. '   ' → logprob: -13.876798629760742

Token 1182: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015187880489975214
    2. '<|end|>' → logprob: -6.751518726348877
    3. '
' → logprob: -9.376519203186035
    4. '```' → logprob: -9.751519203186035
    5. '                   ' → logprob: -9.876519203186035
    6. '           ' → logprob: -9.876519203186035
    7. '       ' → logprob: -10.751519203186035
    8. '<|end|>' → logprob: -11.001519203186035
    9. '              ' → logprob: -11.501519203186035
    10. '                       ' → logprob: -12.001519203186035

Token 1183: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.8312570318812504e-05
    2. '```' → logprob: -12.125018119812012
    3. '                   ' → logprob: -12.250018119812012
    4. '<|end|>' → logprob: -12.625018119812012
    5. '                       ' → logprob: -13.375018119812012
    6. '           ' → logprob: -13.750018119812012
    7. '              ' → logprob: -14.750018119812012
    8. '       ' → logprob: -14.875018119812012
    9. '		       ' → logprob: -15.125018119812012
    10. '			' → logprob: -15.125018119812012

Token 1184: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4888429343700409
    2. 'break' (adapté à ' break') → logprob: -0.9888429641723633
    3. ' break' → logprob: -4.238842964172363
    4. '           ' → logprob: -8.613842964172363
    5. '	break' → logprob: -10.613842964172363
    6. '       ' → logprob: -11.238842964172363
    7. '```' → logprob: -11.863842964172363
    8. '   ' → logprob: -12.988842964172363
    9. 'continue' → logprob: -13.363842964172363
    10. '                   ' → logprob: -13.738842964172363

Token 1185: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08159667253494263
    2. '   ' → logprob: -3.581596612930298
    3. '       ' → logprob: -3.581596612930298
    4. '<|end|>' → logprob: -4.581596851348877
    5. '    
' → logprob: -5.081596851348877
    6. '        
' → logprob: -5.331596851348877
    7. '

' → logprob: -7.706596851348877
    8. '```' → logprob: -8.206596374511719
    9. '<|end|>' → logprob: -8.456596374511719
    10. '
    
' → logprob: -9.581596374511719

Token 1186: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.571300208568573
    2. '
' → logprob: -0.946300208568573
    3. '    
' → logprob: -4.196300029754639
    4. '<|end|>' → logprob: -4.196300029754639
    5. '```' → logprob: -4.696300029754639
    6. '       ' → logprob: -5.446300029754639
    7. '        
' → logprob: -5.821300029754639
    8. '  
' → logprob: -9.196300506591797
    9. '<|end|>' → logprob: -9.321300506591797
    10. 'continue' → logprob: -9.821300506591797

Token 1187: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2341834157705307
    2. '
' → logprob: -2.2341833114624023
    3. '   ' → logprob: -2.3591833114624023
    4. '        
' → logprob: -5.484183311462402
    5. '```' → logprob: -6.609183311462402
    6. '    
' → logprob: -7.109183311462402
    7. '<|end|>' → logprob: -7.359183311462402
    8. '#' → logprob: -10.359183311462402
    9. ' for' → logprob: -10.359183311462402
    10. 'print' (adapté à ' print') → logprob: -10.859183311462402

Token 1188: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.018425006419420242
    2. '(f' → logprob: -4.018424987792969
    3. 'best' → logprob: -8.393424987792969
    4. 'f' → logprob: -10.268424987792969
    5. '(' → logprob: -12.018424987792969
    6. '((' → logprob: -13.143424987792969
    7. '(b' → logprob: -13.643424987792969
    8. '(n' → logprob: -13.643424987792969
    9. '(low' → logprob: -13.893424987792969
    10. '(min' → logprob: -14.393424987792969

Token 1189: '_l' (ID: 1478)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -1.9862216504407115e-05
    2. '_d' → logprob: -11.875020027160645
    3. 'diff' → logprob: -12.750020027160645
    4. '_l' → logprob: -12.750020027160645
    5. ')' → logprob: -13.000020027160645
    6. '_' → logprob: -14.125020027160645
    7. '_best' → logprob: -14.250020027160645
    8. '_dist' → logprob: -14.500020027160645
    9. 'Diff' → logprob: -14.625020027160645
    10. ' _' → logprob: -15.000020027160645

Token 1190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004929054528474808
    2. ')' → logprob: -5.504929065704346
    3. ',end' → logprob: -7.379929065704346
    4. ' ,' → logprob: -8.504928588867188
    5. ',b' → logprob: -11.129928588867188
    6. ',
' → logprob: -12.879928588867188
    7. ')
' → logprob: -13.629928588867188
    8. ',f' → logprob: -14.379928588867188
    9. ',",' → logprob: -14.504928588867188
    10. ' )' → logprob: -14.754928588867188

Token 1191: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -7.493430894101039e-05
    2. ' best' → logprob: -9.500075340270996
    3. '(best' → logprob: -17.37507438659668
    4. '	best' → logprob: -18.87507438659668
    5. '.best' → logprob: -21.25007438659668
    6. '   ' → logprob: -22.12507438659668
    7. 'Best' → logprob: -22.12507438659668
    8. '_best' → logprob: -22.25007438659668
    9. '-best' → logprob: -22.87507438659668
    10. 'b' → logprob: -23.12507438659668

Token 1192: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -2.081584716506768e-05
    2. '_diff' → logprob: -10.875020980834961
    3. 'diff' → logprob: -13.375020980834961
    4. ')' → logprob: -16.12502098083496
    5. '_s' → logprob: -17.50002098083496
    6. '_space' → logprob: -17.75002098083496
    7. '_high' → logprob: -17.75002098083496
    8. '+' → logprob: -17.87502098083496
    9. '-_' → logprob: -18.00002098083496
    10. '_l' → logprob: -18.12502098083496

Token 1193: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004251488950103521
    2. '<|end|>' → logprob: -5.504251480102539
    3. ')
' → logprob: -8.754251480102539
    4. '
' → logprob: -12.754251480102539
    5. '<|end|>' → logprob: -13.004251480102539
    6. ' )' → logprob: -13.504251480102539
    7. '')' → logprob: -13.504251480102539
    8. '")' → logprob: -13.504251480102539
    9. '```' → logprob: -13.504251480102539
    10. ')}' → logprob: -13.879251480102539

Token 1194: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1195: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.029751179739832878
    2. '__' → logprob: -3.5297510623931885
    3. '_' → logprob: -15.40475082397461
    4. '_name' → logprob: -15.52975082397461
    5. '___' → logprob: -16.27975082397461
    6. '(__' → logprob: -16.90475082397461
    7. ' _' → logprob: -17.02975082397461
    8. '```' → logprob: -17.02975082397461
    9. '__
' → logprob: -17.90475082397461
    10. '____' → logprob: -17.90475082397461

Token 1196: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04768044129014015
    2. '==' → logprob: -3.297680377960205
    3. '```' → logprob: -5.172680377960205
    4. '=="' → logprob: -6.297680377960205
    5. ' ==' → logprob: -6.547680377960205
    6. '=='' → logprob: -8.547680854797363
    7. '__.__' → logprob: -8.672680854797363
    8. '__":
' → logprob: -9.797680854797363
    9. '()==' → logprob: -10.672680854797363
    10. '**' → logprob: -10.797680854797363

Token 1197: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006886058254167438
    2. '==' → logprob: -8.000688552856445
    3. '__.__' → logprob: -8.375688552856445
    4. '```' → logprob: -10.500688552856445
    5. '=="' → logprob: -11.000688552856445
    6. '=='' → logprob: -11.500688552856445
    7. '__('' → logprob: -11.500688552856445
    8. '__["' → logprob: -11.625688552856445
    9. ' ==' → logprob: -11.750688552856445
    10. '__[' → logprob: -11.875688552856445

Token 1198: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5549326539039612
    2. '__' → logprob: -1.0549325942993164
    3. '=="' → logprob: -3.3049325942993164
    4. '=='' → logprob: -3.6799325942993164
    5. ' ==' → logprob: -4.179932594299316
    6. '==
' → logprob: -8.929932594299316
    7. '```' → logprob: -8.929932594299316
    8. '__.__' → logprob: -9.929932594299316
    9. '==='' → logprob: -10.804932594299316
    10. '===' → logprob: -11.304932594299316

Token 1199: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31350788474082947
    2. ''' → logprob: -1.3135079145431519
    3. '__' → logprob: -8.313508033752441
    4. ' "__' → logprob: -14.313508033752441
    5. ' '__' → logprob: -16.813507080078125
    6. 'main' → logprob: -16.813507080078125
    7. '`' → logprob: -17.438507080078125
    8. '   ' → logprob: -17.563507080078125
    9. '```' → logprob: -17.563507080078125
    10. ''"' → logprob: -17.688507080078125

Token 1200: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3897150754928589
    2. 'main' → logprob: -1.1397150754928589
    3. '"' → logprob: -5.889715194702148
    4. ''' → logprob: -10.014715194702148
    5. '```' → logprob: -11.889715194702148
    6. '___' → logprob: -12.014715194702148
    7. '__":
' → logprob: -12.014715194702148
    8. 'python' → logprob: -13.014715194702148
    9. '_main' → logprob: -13.639715194702148
    10. 'built' → logprob: -14.264715194702148

Token 1201: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.007457307539880276
    2. '__' → logprob: -5.007457256317139
    3. '__':
' → logprob: -7.257457256317139
    4. '():
' → logprob: -11.132457733154297
    5. '.' → logprob: -12.007457733154297
    6. '__.' → logprob: -12.632457733154297
    7. '```' → logprob: -13.257457733154297
    8. '__["' → logprob: -13.632457733154297
    9. '__.__' → logprob: -13.632457733154297
    10. '__()
' → logprob: -13.757457733154297

Token 1202: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014976482838392258
    2. '   ' → logprob: -4.264976501464844
    3. ' main' → logprob: -7.639976501464844
    4. '	main' → logprob: -8.014976501464844
    5. '_main' → logprob: -14.389976501464844
    6. '```' → logprob: -15.014976501464844
    7. '(main' → logprob: -15.264976501464844
    8. 'import' → logprob: -16.389976501464844
    9. 'run' → logprob: -17.139976501464844
    10. ' ' → logprob: -17.264976501464844

Token 1203: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -20.25
    4. '   ' → logprob: -21.0
    5. '.main' → logprob: -25.25
    6. '(main' → logprob: -25.625
    7. '_main' → logprob: -26.0
    8. 'import' → logprob: -27.125
    9. 'sys' → logprob: -27.25
    10. 'Main' → logprob: -29.125

Token 1204: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1202
Tokens correctement prédits (1ère position, stricte): 458
Tokens correctement prédits (1ère position, avec adaptation): 498
Tokens correctement prédits (top 10): 978
Précision stricte (1ère position): 38.10%
Précision adaptée (1ère position): 41.43%
Précision (top 10): 81.36%
================================================================================
