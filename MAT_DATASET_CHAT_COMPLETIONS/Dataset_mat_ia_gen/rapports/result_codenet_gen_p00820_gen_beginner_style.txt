================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def count_representations(n):
    count = 0
    max_a = int(n**0.5)
    for a in range(1, max_a+1):
        a_sq = a*a
        if a_sq == n:
            count += 1
        elif a_sq < n:
            max_b = int((n - a_sq)**0.5)
            for b in range(a, max_b+1):
                b_sq = b*b
                s = a_sq + b_sq
                if s == n:
                    count += 1
                elif s < n:
                    max_c = int((n - s)**0.5)
                    for c in range(b, max_c+1):
                        c_sq = c*c
                        t = s + c_sq
                        if t == n:
                            count += 1
                        elif t < n:
                            max_d = int((n - t)**0.5)
                            for d in range(c, max_d+1):
                                d_sq = d*d
                                u = t + d_sq
                                if u == n:
                                    count += 1
    return count

for line in sys.stdin:
    n = int(line.strip())
    if n == 0:
        break
    print(count_representations(n))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013940876349806786
    2. ' space' → logprob: -6.388940811157227
    3. ' main' → logprob: -6.388940811157227
    4. ' ' → logprob: -6.888940811157227
    5. '<|end|>' → logprob: -6.888940811157227
    6. ' process' → logprob: -7.013940811157227
    7. '  ' → logprob: -7.013940811157227
    8. ' a' → logprob: -7.263940811157227
    9. ' sys' → logprob: -7.513940811157227
    10. '_' → logprob: -7.763940811157227

Token 5: '_re' (ID: 3067)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08728079497814178
    2. '_words' → logprob: -2.712280750274658
    3. '_tokens' → logprob: -4.837280750274658
    4. '_chars' → logprob: -5.712280750274658
    5. '_items' → logprob: -6.337280750274658
    6. '_lines' → logprob: -7.462280750274658
    7. '(' → logprob: -7.712280750274658
    8. '_occ' → logprob: -7.837280750274658
    9. '_char' → logprob: -7.962280750274658
    10. '_:' → logprob: -7.962280750274658

Token 6: 'present' (ID: 47421)
  Prédit: 'quests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quests' → logprob: -0.7169937491416931
    2. 'f' → logprob: -0.9669937491416931
    3. 's' → logprob: -2.341993808746338
    4. 'quires' → logprob: -5.591993808746338
    5. 'quest' → logprob: -5.716993808746338
    6. 'ferences' → logprob: -5.966993808746338
    7. 'quire' → logprob: -5.966993808746338
    8. 'quired' → logprob: -5.966993808746338
    9. 'aders' → logprob: -5.966993808746338
    10. 'fs' → logprob: -6.091993808746338

Token 7: 'ations' (ID: 929)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.05922246724367142
    2. 'ations' → logprob: -3.059222459793091
    3. 'ation' → logprob: -4.93422269821167
    4. 'ing' → logprob: -6.05922269821167
    5. 'able' → logprob: -7.80922269821167
    6. 's' → logprob: -8.559222221374512
    7. 'atives' → logprob: -8.934222221374512
    8. '_' → logprob: -9.184222221374512
    9. 'a' → logprob: -9.934222221374512
    10. '(s' → logprob: -10.434222221374512

Token 8: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001420472632162273
    2. '_' → logprob: -6.626420497894287
    3. '('' → logprob: -10.501420021057129
    4. ' (' → logprob: -11.251420021057129
    5. '("("' → logprob: -12.126420021057129
    6. 's' → logprob: -12.251420021057129
    7. '```' → logprob: -12.376420021057129
    8. '(token' → logprob: -12.376420021057129
    9. '(user' → logprob: -12.626420021057129
    10. ':' → logprob: -12.626420021057129

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17217381298542023
    2. ')' → logprob: -2.5471737384796143
    3. ',' → logprob: -2.5471737384796143
    4. ':' → logprob: -6.547173976898193
    5. '=' → logprob: -10.422173500061035
    6. ' ):' → logprob: -10.547173500061035
    7. ' ,' → logprob: -11.172173500061035
    8. '):
' → logprob: -11.547173500061035
    9. ',n' → logprob: -12.422173500061035
    10. 's' → logprob: -12.422173500061035

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2286013960838318
    2. '   ' → logprob: -1.7286014556884766
    3. ' :' → logprob: -5.228601455688477
    4. '(' → logprob: -5.228601455688477
    5. ' ' → logprob: -5.353601455688477
    6. '    ' → logprob: -5.978601455688477
    7. '():' → logprob: -6.353601455688477
    8. ''' → logprob: -6.603601455688477
    9. '```' → logprob: -6.853601455688477
    10. '):' → logprob: -6.853601455688477

Token 11: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34857890009880066
    2. ' ' → logprob: -1.848578929901123
    3. '    ' → logprob: -2.723578929901123
    4. ' 
' → logprob: -3.348578929901123
    5. '     
' → logprob: -4.473578929901123
    6. '   
' → logprob: -5.473578929901123
    7. '```' → logprob: -5.848578929901123
    8. '    
' → logprob: -5.973578929901123
    9. 'count' (adapté à ' count') → logprob: -6.223578929901123
    10. '  ' → logprob: -6.473578929901123

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20066502690315247
    2. '=' → logprob: -2.45066499710083
    3. '_' → logprob: -2.95066499710083
    4. ' ' → logprob: -3.82566499710083
    5. '[' → logprob: -4.57566499710083
    6. ')' → logprob: -5.32566499710083
    7. '  ' → logprob: -6.20066499710083
    8. '(' → logprob: -6.95066499710083
    9. ' +=' → logprob: -7.32566499710083
    10. '   ' → logprob: -7.57566499710083

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03365964815020561
    2. '0' → logprob: -3.4086596965789795
    3. '1' → logprob: -11.408659934997559
    4. ' n' → logprob: -13.658659934997559
    5. ' ' → logprob: -14.908659934997559
    6. ' {}' → logprob: -15.533659934997559
    7. ' sum' → logprob: -15.533659934997559
    8. 'n' → logprob: -16.033658981323242
    9. '  ' → logprob: -16.096158981323242
    10. '    ' → logprob: -16.533658981323242

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005644586402922869
    2. ' ' → logprob: -5.255644798278809
    3. '1' → logprob: -7.880644798278809
    4. 'n' → logprob: -11.005644798278809
    5. ' n' → logprob: -12.005644798278809
    6. '{}' → logprob: -12.505644798278809
    7. '2' → logprob: -13.505644798278809
    8. '[' → logprob: -14.005644798278809
    9. '[n' → logprob: -14.130644798278809
    10. '[]' → logprob: -14.380644798278809

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5898159146308899
    2. ' ' → logprob: -1.5898158550262451
    3. '<|end|>' → logprob: -1.9648158550262451
    4. '    ' → logprob: -3.964815855026245
    5. ' for' → logprob: -4.089816093444824
    6. '  ' → logprob: -4.464816093444824
    7. '\' → logprob: -4.714816093444824
    8. ' 
' → logprob: -4.714816093444824
    9. '    
' → logprob: -4.964816093444824
    10. ')' → logprob: -5.089816093444824

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23402294516563416
    2. '    ' → logprob: -2.859022855758667
    3. '\' → logprob: -3.484022855758667
    4. ' ' → logprob: -3.484022855758667
    5. '\n' → logprob: -3.859022855758667
    6. '     
' → logprob: -3.859022855758667
    7. ' 
' → logprob: -4.359023094177246
    8. ' for' → logprob: -4.859023094177246
    9. '
' → logprob: -5.234023094177246
    10. 'for' → logprob: -5.359023094177246

Token 17: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14632919430732727
    2. 'for' → logprob: -2.021329164505005
    3. ' ' → logprob: -5.771329402923584
    4. ' ```' → logprob: -8.521328926086426
    5. '```' → logprob: -8.646328926086426
    6. ' i' → logprob: -9.771328926086426
    7. '    ' → logprob: -10.271328926086426
    8. '   ' → logprob: -11.271328926086426
    9. ' if' → logprob: -11.646328926086426
    10. 'i' → logprob: -12.021328926086426

Token 18: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.033299446105957
    2. '_base' → logprob: -1.158299446105957
    3. '_num' → logprob: -2.033299446105957
    4. '_val' → logprob: -2.408299446105957
    5. '_k' → logprob: -2.783299446105957
    6. '_value' → logprob: -3.658299446105957
    7. '_div' → logprob: -5.033299446105957
    8. '_s' → logprob: -5.533299446105957
    9. '_factor' → logprob: -5.783299446105957
    10. '_sum' → logprob: -6.033299446105957

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004527792800217867
    2. '=' → logprob: -5.629527568817139
    3. ' ' → logprob: -7.004527568817139
    4. '_' → logprob: -11.629528045654297
    5. ',' → logprob: -12.379528045654297
    6. '=int' → logprob: -12.879528045654297
    7. 'x' → logprob: -14.129528045654297
    8. ' +=' → logprob: -14.754528045654297
    9. '  ' → logprob: -15.004528045654297
    10. ' ' → logprob: -15.129528045654297

Token 20: ' int' (ID: 677)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7129926681518555
    2. ' int' → logprob: -1.0879926681518555
    3. 'int' → logprob: -2.4629926681518555
    4. 'n' → logprob: -2.4629926681518555
    5. ' ' → logprob: -6.2129926681518555
    6. '(int' → logprob: -8.462992668151855
    7. '(n' → logprob: -8.962992668151855
    8. ' (' → logprob: -8.962992668151855
    9. '(' → logprob: -10.337992668151855
    10. '  ' → logprob: -11.212992668151855

Token 21: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023598913103342056
    2. '(' → logprob: -3.7735989093780518
    3. '(s' → logprob: -8.398598670959473
    4. '((' → logprob: -9.648598670959473
    5. ' (' → logprob: -10.898598670959473
    6. 'n' → logprob: -11.273598670959473
    7. '```' → logprob: -11.523598670959473
    8. '(len' → logprob: -11.773598670959473
    9. ' n' → logprob: -12.398598670959473
    10. '(pow' → logprob: -12.648598670959473

Token 22: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.012525185011327267
    2. ' **' → logprob: -4.3875250816345215
    3. 'import' → logprob: -12.38752555847168
    4. ')**' → logprob: -12.88752555847168
    5. '```' → logprob: -13.63752555847168
    6. '**)' → logprob: -13.63752555847168
    7. ''s' → logprob: -13.63752555847168
    8. ')' → logprob: -13.76252555847168
    9. '0' → logprob: -13.76252555847168
    10. 'sqrt' → logprob: -14.38752555847168

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012630375567823648
    2. ' ' → logprob: -9.750125885009766
    3. '(' → logprob: -10.000125885009766
    4. '.' → logprob: -10.750125885009766
    5. '-' → logprob: -15.375125885009766
    6. '```' → logprob: -15.500125885009766
    7. '2' → logprob: -15.625125885009766
    8. '{' → logprob: -15.750125885009766
    9. '1' → logprob: -16.062625885009766
    10. ' (' → logprob: -16.500125885009766

Token 24: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.080963092041202e-06
    2. '0' → logprob: -13.000004768371582
    3. '5' → logprob: -13.750004768371582
    4. ' .' → logprob: -14.125004768371582
    5. '1' → logprob: -15.375004768371582
    6. '2' → logprob: -15.625004768371582
    7. '6' → logprob: -15.625004768371582
    8. '3' → logprob: -15.750004768371582
    9. '   ' → logprob: -17.0000057220459
    10. '{' → logprob: -17.0000057220459

Token 25: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.8074162653647363e-05
    2. '```' → logprob: -11.937518119812012
    3. '25' → logprob: -13.750018119812012
    4. 'five' → logprob: -13.937518119812012
    5. '``' → logprob: -14.125018119812012
    6. '4' → logprob: -14.187518119812012
    7. '

' → logprob: -14.375018119812012
    8. '   ' → logprob: -14.500018119812012
    9. '**' → logprob: -14.500018119812012
    10. '75' → logprob: -15.125018119812012

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0386384092271328
    2. ' )' → logprob: -3.4136383533477783
    3. ')+' → logprob: -5.413638591766357
    4. '+' → logprob: -8.0386381149292
    5. ' +' → logprob: -9.6636381149292
    6. '))' → logprob: -9.7886381149292
    7. ' ' → logprob: -10.1636381149292
    8. ' /' → logprob: -12.0386381149292
    9. '   ' → logprob: -12.1636381149292
    10. '//' → logprob: -12.1636381149292

Token 27: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9685801863670349
    2. '<|end|>' → logprob: -1.9685802459716797
    3. ' for' → logprob: -2.0935802459716797
    4. ')' → logprob: -2.4685802459716797
    5. '   ' → logprob: -2.7185802459716797
    6. ' 
' → logprob: -3.3435802459716797
    7. '\n' → logprob: -3.3435802459716797
    8. ':' → logprob: -3.5935802459716797
    9. 'for' → logprob: -3.7185802459716797
    10. '+' → logprob: -3.8435802459716797

Token 28: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22984333336353302
    2. ' ' → logprob: -1.8548433780670166
    3. 'for' (adapté à ' for') → logprob: -3.3548433780670166
    4. '+' → logprob: -5.6048431396484375
    5. '   ' → logprob: -5.7298431396484375
    6. '<|end|>' → logprob: -5.8548431396484375
    7. ' 
' → logprob: -6.6048431396484375
    8. '  ' → logprob: -7.9798431396484375
    9. ')' → logprob: -7.9798431396484375
    10. '  
' → logprob: -8.104843139648438

Token 29: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.05527884513139725
    2. 'a' → logprob: -2.930278778076172
    3. '_a' → logprob: -8.055278778076172
    4. ' ' → logprob: -10.805278778076172
    5. '_' → logprob: -10.930278778076172
    6. '	a' → logprob: -11.305278778076172
    7. ' b' → logprob: -11.430278778076172
    8. ' _' → logprob: -12.430278778076172
    9. ' i' → logprob: -12.930278778076172
    10. '```' → logprob: -12.930278778076172

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002247199881821871
    2. 'in' → logprob: -6.502247333526611
    3. ' ' → logprob: -7.252247333526611
    4. 'a' → logprob: -12.002246856689453
    5. ' =' → logprob: -12.127246856689453
    6. '  ' → logprob: -12.377246856689453
    7. '=' → logprob: -12.627246856689453
    8. '1' → logprob: -12.627246856689453
    9. ',' → logprob: -12.752246856689453
    10. ' ,' → logprob: -13.002246856689453

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0010374527191743255
    2. 'range' → logprob: -6.87603759765625
    3. ' ' → logprob: -12.62603759765625
    4. '	range' → logprob: -14.25103759765625
    5. '  ' → logprob: -15.75103759765625
    6. ' ' → logprob: -15.87603759765625
    7. '   ' → logprob: -16.12603759765625
    8. '(range' → logprob: -16.12603759765625
    9. ' xrange' → logprob: -16.25103759765625
    10. '```' → logprob: -17.62603759765625

Token 32: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04860350117087364
    2. '(max' → logprob: -3.0486035346984863
    3. ' (' → logprob: -11.548603057861328
    4. '(a' → logprob: -12.923603057861328
    5. '1' → logprob: -13.048603057861328
    6. '(len' → logprob: -15.048603057861328
    7. 'max' → logprob: -15.298603057861328
    8. '((' → logprob: -15.423603057861328
    9. '(
' → logprob: -15.423603057861328
    10. ' max' → logprob: -15.423603057861328

Token 33: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2575732469558716
    2. '0' → logprob: -1.7575732469558716
    3. ' max' → logprob: -3.632573127746582
    4. '1' → logprob: -3.632573127746582
    5. ' ' → logprob: -6.757573127746582
    6. '(max' → logprob: -7.757573127746582
    7. ',max' → logprob: -10.257573127746582
    8. '[max' → logprob: -10.882573127746582
    9. ')' → logprob: -11.007573127746582
    10. '	max' → logprob: -11.132573127746582

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003612781874835491
    2. ' ,' → logprob: -5.628612995147705
    3. ',max' → logprob: -12.128612518310547
    4. ' ' → logprob: -12.878612518310547
    5. '+' → logprob: -13.628612518310547
    6. '   ' → logprob: -14.503612518310547
    7. ',n' → logprob: -14.628612518310547
    8. '+,' → logprob: -14.878612518310547
    9. 'a' → logprob: -15.003612518310547
    10. ',a' → logprob: -15.503612518310547

Token 35: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16023549437522888
    2. ' max' → logprob: -1.9102355241775513
    3. '[max' → logprob: -12.410235404968262
    4. '(max' → logprob: -13.160235404968262
    5. ' ' → logprob: -13.535235404968262
    6. '	max' → logprob: -13.660235404968262
    7. ',max' → logprob: -14.035235404968262
    8. ':max' → logprob: -14.160235404968262
    9. '   ' → logprob: -14.785235404968262
    10. '=max' → logprob: -14.910235404968262

Token 36: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -7.941850526549388e-06
    2. '+' → logprob: -12.250007629394531
    3. '_' → logprob: -13.500007629394531
    4. 'a' → logprob: -14.375007629394531
    5. ' _' → logprob: -14.500007629394531
    6. '_i' → logprob: -16.00000762939453
    7. ' +' → logprob: -16.12500762939453
    8. '+a' → logprob: -16.50000762939453
    9. '_b' → logprob: -16.87500762939453
    10. '_e' → logprob: -16.87500762939453

Token 37: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048589982092380524
    2. ' +' → logprob: -3.0485899448394775
    3. ' ' → logprob: -14.048589706420898
    4. '1' → logprob: -14.423589706420898
    5. ' ' → logprob: -15.423589706420898
    6. '＋' → logprob: -15.548589706420898
    7. ')+' → logprob: -16.0485897064209
    8. '_plus' → logprob: -16.4235897064209
    9. '```' → logprob: -16.4235897064209
    10. '   ' → logprob: -16.7985897064209

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '2' → logprob: -16.12548828125
    4. '```' → logprob: -16.87548828125
    5. '   ' → logprob: -17.25048828125
    6. ')' → logprob: -17.25048828125
    7. '

' → logprob: -18.56298828125
    8. '  ' → logprob: -18.56298828125
    9. '-' → logprob: -18.68798828125
    10. '۱' → logprob: -19.25048828125

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002534521510824561
    2. ':' → logprob: -6.62753438949585
    3. '):
' → logprob: -7.00253438949585
    4. ' ):' → logprob: -8.377534866333008
    5. ')' → logprob: -10.877534866333008
    6. '+' → logprob: -11.002534866333008
    7. ',' → logprob: -11.252534866333008
    8. '):
' → logprob: -11.627534866333008
    9. '   ' → logprob: -12.252534866333008
    10. '**' → logprob: -13.627534866333008

Token 40: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10772358626127243
    2. ' :' → logprob: -2.7327234745025635
    3. ' ' → logprob: -4.107723712921143
    4. '   ' → logprob: -4.982723712921143
    5. '):' → logprob: -5.232723712921143
    6. ':
' → logprob: -5.982723712921143
    7. '    ' → logprob: -6.607723712921143
    8. ' :
' → logprob: -6.607723712921143
    9. '       ' → logprob: -6.982723712921143
    10. '  ' → logprob: -7.607723712921143

Token 41: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32412654161453247
    2. ':' → logprob: -1.8241264820098877
    3. ' :' → logprob: -2.4491264820098877
    4. '    ' → logprob: -4.699126720428467
    5. ' for' → logprob: -5.574126720428467
    6. '<|end|>' → logprob: -5.574126720428467
    7. ' ' → logprob: -6.324126720428467
    8. '   ' → logprob: -6.574126720428467
    9. '  ' → logprob: -6.574126720428467
    10. '4' → logprob: -6.824126720428467

Token 42: '_sq' (ID: 125541)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.27723267674446106
    2. '**' → logprob: -1.9022326469421387
    3. '*a' → logprob: -2.9022326469421387
    4. '2' → logprob: -3.4022326469421387
    5. ' ' → logprob: -6.527232646942139
    6. ' *' → logprob: -7.027232646942139
    7. 'a' → logprob: -7.027232646942139
    8. '```' → logprob: -7.902232646942139
    9. '²' → logprob: -8.152233123779297
    10. '_squared' → logprob: -8.652233123779297

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3143082559108734
    2. '=' → logprob: -1.4393082857131958
    3. 'u' → logprob: -3.4393081665039062
    4. '=u' → logprob: -8.314308166503906
    5. ' ' → logprob: -8.939308166503906
    6. '   ' → logprob: -9.439308166503906
    7. '  ' → logprob: -11.439308166503906
    8. ')' → logprob: -11.814308166503906
    9. '=a' → logprob: -11.814308166503906
    10. '*u' → logprob: -11.814308166503906

Token 44: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141783356666565
    2. ' a' → logprob: -1.7014178037643433
    3. '	a' → logprob: -12.451417922973633
    4. ' ' → logprob: -14.576417922973633
    5. ' ' → logprob: -16.451417922973633
    6. '   ' → logprob: -17.576417922973633
    7. '_a' → logprob: -17.701417922973633
    8. '>a' → logprob: -17.701417922973633
    9. ')a' → logprob: -18.201417922973633
    10. '```' → logprob: -18.201417922973633

Token 45: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.0755368173122406
    2. '**' → logprob: -2.7005367279052734
    3. ' *' → logprob: -5.825536727905273
    4. '2' → logprob: -6.700536727905273
    5. '*' → logprob: -6.825536727905273
    6. 'a' → logprob: -8.825536727905273
    7. ' **' → logprob: -9.700536727905273
    8. ' ' → logprob: -10.200536727905273
    9. '   ' → logprob: -11.075536727905273
    10. '*i' → logprob: -11.200536727905273

Token 46: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07107747346162796
    2. '<|end|>' → logprob: -3.321077585220337
    3. '        ' → logprob: -4.321077346801758
    4. ',' → logprob: -5.446077346801758
    5. ' for' → logprob: -5.571077346801758
    6. ' ' → logprob: -5.571077346801758
    7. '    ' → logprob: -6.071077346801758
    8. '   ' → logprob: -6.196077346801758
    9. '        
' → logprob: -7.071077346801758
    10. '<|end|>' → logprob: -7.571077346801758

Token 48: ' if' (ID: 538)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.45366570353507996
    2. 'for' → logprob: -1.2036657333374023
    3. 'if' (adapté à ' if') → logprob: -3.2036657333374023
    4. ' for' → logprob: -4.578665733337402
    5. '   ' → logprob: -4.578665733337402
    6. ' b' → logprob: -6.453665733337402
    7. ' if' → logprob: -7.453665733337402
    8. '       ' → logprob: -7.828665733337402
    9. 'while' → logprob: -8.703665733337402
    10. 'left' → logprob: -8.703665733337402

Token 49: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.282031774520874
    2. 'a' → logprob: -1.407031774520874
    3. 'n' → logprob: -7.532032012939453
    4. '2' → logprob: -8.907032012939453
    5. ' n' → logprob: -9.532032012939453
    6. ' ' → logprob: -10.282032012939453
    7. '(a' → logprob: -10.657032012939453
    8. '	a' → logprob: -10.782032012939453
    9. '   ' → logprob: -11.157032012939453
    10. ' (' → logprob: -11.907032012939453

Token 50: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -0.09642848372459412
    2. '*' → logprob: -3.096428394317627
    3. '_squared' → logprob: -3.346428394317627
    4. '**' → logprob: -4.971428394317627
    5. 'sq' → logprob: -6.346428394317627
    6. 's' → logprob: -7.221428394317627
    7. '2' → logprob: -7.346428394317627
    8. '<=' → logprob: -8.471428871154785
    9. '<|end|>' → logprob: -8.471428871154785
    10. '_' → logprob: -9.096428871154785

Token 51: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.23594780266284943
    2. ' >' → logprob: -2.110947847366333
    3. '>=' → logprob: -3.110947847366333
    4. '<=' → logprob: -3.985947847366333
    5. '==' → logprob: -4.735947608947754
    6. '<' → logprob: -4.985947608947754
    7. ' >=' → logprob: -5.360947608947754
    8. ' <=' → logprob: -5.985947608947754
    9. ' ==' → logprob: -6.985947608947754
    10. '*' → logprob: -7.235947608947754

Token 52: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0040865931659936905
    2. ' n' → logprob: -5.504086494445801
    3. '	n' → logprob: -12.7540864944458
    4. '<|end|>' → logprob: -12.8790864944458
    5. '<|end|>' → logprob: -14.0040864944458
    6. '   ' → logprob: -14.3790864944458
    7. ')n' → logprob: -14.6290864944458
    8. ' ' → logprob: -15.0040864944458
    9. '_n' → logprob: -16.379087448120117
    10. '0' → logprob: -16.754087448120117

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004061242798343301
    2. ':
' → logprob: -8.875406265258789
    3. ' :' → logprob: -8.875406265258789
    4. ' or' → logprob: -9.750406265258789
    5. ':return' → logprob: -10.250406265258789
    6. '):' → logprob: -11.000406265258789
    7. '.' → logprob: -12.625406265258789
    8. ':**' → logprob: -12.875406265258789
    9. ',' → logprob: -13.000406265258789
    10. ' and' → logprob: -13.125406265258789

Token 54: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.696296215057373
    2. '           ' → logprob: -0.696296215057373
    3. ':
' → logprob: -6.571296215057373
    4. '       ' → logprob: -7.321296215057373
    5. ' :' → logprob: -8.071296691894531
    6. ':return' → logprob: -8.696296691894531
    7. '               ' → logprob: -8.946296691894531
    8. '            ' → logprob: -9.571296691894531
    9. ',' → logprob: -9.696296691894531
    10. ' or' → logprob: -10.071296691894531

Token 55: ' count' (ID: 3605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017509281635284424
    2. '               ' → logprob: -4.892509460449219
    3. 'count' (adapté à ' count') → logprob: -5.267509460449219
    4. '       ' → logprob: -6.267509460449219
    5. ' count' → logprob: -6.642509460449219
    6. '```' → logprob: -8.017509460449219
    7. '\n' → logprob: -8.642509460449219
    8. '+' → logprob: -8.767509460449219
    9. '            ' → logprob: -8.892509460449219
    10. ' return' → logprob: -9.517509460449219

Token 56: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11311575025320053
    2. '+=' → logprob: -2.2381157875061035
    3. '+' → logprob: -8.738115310668945
    4. '=' → logprob: -10.363115310668945
    5. ' =' → logprob: -10.613115310668945
    6. '   ' → logprob: -10.863115310668945
    7. '    ' → logprob: -11.113115310668945
    8. ' ' → logprob: -11.363115310668945
    9. '<|end|>' → logprob: -11.613115310668945
    10. '           ' → logprob: -11.738115310668945

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011727249948307872
    2. ' ' → logprob: -6.7511725425720215
    3. '2' → logprob: -13.25117301940918
    4. '0' → logprob: -14.75117301940918
    5. '   ' → logprob: -16.12617301940918
    6. '<|end|>' → logprob: -16.56367301940918
    7. '3' → logprob: -17.00117301940918
    8. '  ' → logprob: -17.31367301940918
    9. '```' → logprob: -17.31367301940918
    10. ' ' → logprob: -17.37617301940918

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002481078845448792
    2. ' ' → logprob: -8.375247955322266
    3. '2' → logprob: -11.250247955322266
    4. '0' → logprob: -13.250247955322266
    5. '4' → logprob: -13.750247955322266
    6. '3' → logprob: -14.812747955322266
    7. '   ' → logprob: -15.000247955322266
    8. '  ' → logprob: -16.312747955322266
    9. '10' → logprob: -16.500247955322266
    10. '-' → logprob: -16.562747955322266

Token 59: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023616258054971695
    2. '<|end|>' → logprob: -4.648616313934326
    3. ' ' → logprob: -5.398616313934326
    4. '   ' → logprob: -5.773616313934326
    5. '           ' → logprob: -6.898616313934326
    6. ' else' → logprob: -7.273616313934326
    7. '
' → logprob: -7.398616313934326
    8. ')' → logprob: -7.648616313934326
    9. '<|end|>' → logprob: -7.648616313934326
    10. ',' → logprob: -7.773616313934326

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018235737225040793
    2. '<|end|>' → logprob: -6.876823425292969
    3. '           ' → logprob: -8.126823425292969
    4. ' else' → logprob: -9.001823425292969
    5. '   ' → logprob: -9.376823425292969
    6. 'else' → logprob: -9.876823425292969
    7. ' ' → logprob: -9.876823425292969
    8. 'elif' → logprob: -10.251823425292969
    9. '<|end|>' → logprob: -10.376823425292969
    10. ')' → logprob: -10.501823425292969

Token 61: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21925678849220276
    2. ' elif' → logprob: -2.34425687789917
    3. 'elif' (adapté à ' elif') → logprob: -2.84425687789917
    4. ' else' → logprob: -3.46925687789917
    5. 'else' → logprob: -4.59425687789917
    6. '<|end|>' → logprob: -7.59425687789917
    7. ' ' → logprob: -7.84425687789917
    8. '   ' → logprob: -8.469256401062012
    9. '	elif' → logprob: -9.344256401062012
    10. '           ' → logprob: -9.594256401062012

Token 62: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07000689953565598
    2. 'a' → logprob: -2.695006847381592
    3. ' n' → logprob: -10.57000732421875
    4. 'n' → logprob: -10.82000732421875
    5. ' ' → logprob: -11.19500732421875
    6. ' ' → logprob: -12.07000732421875
    7. '	a' → logprob: -13.19500732421875
    8. '    ' → logprob: -14.57000732421875
    9. '(a' → logprob: -14.57000732421875
    10. ' (' → logprob: -15.07000732421875

Token 63: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -0.0006525091012008488
    2. 'sq' → logprob: -8.250652313232422
    3. '_squared' → logprob: -8.375652313232422
    4. 's' → logprob: -9.500652313232422
    5. '**' → logprob: -11.250652313232422
    6. '*' → logprob: -11.250652313232422
    7. ' ' → logprob: -11.625652313232422
    8. '<|end|>' → logprob: -11.750652313232422
    9. '2' → logprob: -11.875652313232422
    10. '*_' → logprob: -11.875652313232422

Token 64: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1129707396030426
    2. '<' → logprob: -2.2379708290100098
    3. ' >' → logprob: -10.112970352172852
    4. '<|end|>' → logprob: -10.362970352172852
    5. ' ' → logprob: -10.612970352172852
    6. ' less' → logprob: -10.737970352172852
    7. '>' → logprob: -10.987970352172852
    8. ' <",' → logprob: -13.612970352172852
    9. '<n' → logprob: -13.862970352172852
    10. '<|end|>' → logprob: -13.862970352172852

Token 65: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07891567796468735
    2. 'n' → logprob: -2.578915596008301
    3. ' ' → logprob: -11.5789155960083
    4. ' ' → logprob: -11.5789155960083
    5. '	n' → logprob: -12.9539155960083
    6. '=n' → logprob: -14.0789155960083
    7. '=' → logprob: -14.3289155960083
    8. '+' → logprob: -14.4539155960083
    9. '(n' → logprob: -14.9539155960083
    10. '    ' → logprob: -14.9539155960083

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3230125606060028
    2. ' and' → logprob: -1.3230125904083252
    3. 'and' → logprob: -5.198012351989746
    4. ' :' → logprob: -5.698012351989746
    5. ':
' → logprob: -7.323012351989746
    6. ' ' → logprob: -9.823012351989746
    7. '       ' → logprob: -10.448012351989746
    8. ',' → logprob: -11.198012351989746
    9. ' :
' → logprob: -11.323012351989746
    10. '):' → logprob: -11.448012351989746

Token 67: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5759668946266174
    2. '           ' → logprob: -1.7009668350219727
    3. ':' → logprob: -2.3259668350219727
    4. ' and' → logprob: -2.4509668350219727
    5. ' for' → logprob: -2.8259668350219727
    6. ':
' → logprob: -5.200966835021973
    7. ',' → logprob: -5.950966835021973
    8. '<|end|>' → logprob: -7.450966835021973
    9. '        ' → logprob: -7.825966835021973
    10. 'and' → logprob: -7.950966835021973

Token 68: ' max' (ID: 2999)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3740091025829315
    2. 'for' → logprob: -1.999009132385254
    3. ' for' → logprob: -2.499009132385254
    4. ' b' → logprob: -2.999009132385254
    5. '           ' → logprob: -3.499009132385254
    6. '       ' → logprob: -5.999009132385254
    7. 'max' (adapté à ' max') → logprob: -6.374009132385254
    8. 'import' → logprob: -6.374009132385254
    9. '   ' → logprob: -6.624009132385254
    10. 'remaining' → logprob: -6.624009132385254

Token 69: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.333223139634356e-05
    2. 'b' → logprob: -11.375033378601074
    3. '_a' → logprob: -11.375033378601074
    4. '_c' → logprob: -12.125033378601074
    5. '_' → logprob: -13.375033378601074
    6. '-b' → logprob: -13.625033378601074
    7. '_j' → logprob: -14.125033378601074
    8. ' _' → logprob: -15.125033378601074
    9. ' b' → logprob: -15.250033378601074
    10. '_s' → logprob: -15.375033378601074

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283699423074722
    2. '=' → logprob: -2.237837076187134
    3. '=int' → logprob: -11.612836837768555
    4. ' ' → logprob: -12.737836837768555
    5. '＝' → logprob: -14.612836837768555
    6. '<|end|>' → logprob: -14.862836837768555
    7. '=
' → logprob: -15.112836837768555
    8. '_squared' → logprob: -15.362836837768555
    9. '_sq' → logprob: -15.487836837768555
    10. '=

' → logprob: -16.237836837768555

Token 71: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0010397175792604685
    2. ' int' → logprob: -6.876039505004883
    3. '(int' → logprob: -12.751039505004883
    4. 'n' → logprob: -13.876039505004883
    5. '<int' → logprob: -14.251039505004883
    6. '   ' → logprob: -14.501039505004883
    7. '	int' → logprob: -14.751039505004883
    8. '```' → logprob: -14.751039505004883
    9. '=int' → logprob: -15.001039505004883
    10. 'is' → logprob: -15.501039505004883

Token 72: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0007432799902744591
    2. '(n' → logprob: -7.375743389129639
    3. '(' → logprob: -9.62574291229248
    4. ' ((' → logprob: -10.12574291229248
    5. ' (' → logprob: -12.00074291229248
    6. '(((' → logprob: -12.87574291229248
    7. '```' → logprob: -14.25074291229248
    8. '[(' → logprob: -14.75074291229248
    9. '   ' → logprob: -15.75074291229248
    10. ' ' → logprob: -16.000743865966797

Token 73: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.531417191028595
    2. '(n' → logprob: -0.906417191028595
    3. ' (' → logprob: -5.031417369842529
    4. ' n' → logprob: -6.406417369842529
    5. '   ' → logprob: -10.656416893005371
    6. ' ' → logprob: -10.781416893005371
    7. '(' → logprob: -10.781416893005371
    8. '	n' → logprob: -12.531416893005371
    9. '((' → logprob: -13.156416893005371
    10. '
' → logprob: -13.906416893005371

Token 74: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11408088356256485
    2. '-' → logprob: -2.2390809059143066
    3. '-a' → logprob: -6.989080905914307
    4. '-import' → logprob: -9.489080429077148
    5. 'import' → logprob: -9.614080429077148
    6. ' ' → logprob: -9.739080429077148
    7. 'a' → logprob: -9.864080429077148
    8. '
' → logprob: -10.739080429077148
    9. '-c' → logprob: -12.239080429077148
    10. '   ' → logprob: -12.489080429077148

Token 75: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10022887587547302
    2. ' a' → logprob: -2.350228786468506
    3. '	a' → logprob: -11.600229263305664
    4. '   ' → logprob: -12.475229263305664
    5. '(a' → logprob: -12.600229263305664
    6. ' ' → logprob: -13.225229263305664
    7. ' (' → logprob: -13.725229263305664
    8. '    ' → logprob: -13.725229263305664
    9. ')a' → logprob: -14.600229263305664
    10. ')' → logprob: -14.975229263305664

Token 76: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -0.0010779452277347445
    2. 'sq' → logprob: -7.501078128814697
    3. ')' → logprob: -8.376077651977539
    4. 'a' → logprob: -9.126077651977539
    5. '**' → logprob: -9.751077651977539
    6. 'Sq' → logprob: -10.626077651977539
    7. '_s' → logprob: -11.001077651977539
    8. '_a' → logprob: -11.126077651977539
    9. '*a' → logprob: -11.501077651977539
    10. ')**' → logprob: -11.626077651977539

Token 77: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.012227187864482403
    2. ')' → logprob: -4.5122270584106445
    3. ' )' → logprob: -6.7622270584106445
    4. '**' → logprob: -11.137227058410645
    5. ' ' → logprob: -12.637227058410645
    6. '   ' → logprob: -13.137227058410645
    7. '0' → logprob: -14.637227058410645
    8. '  ' → logprob: -14.762227058410645
    9. '**)' → logprob: -15.387227058410645
    10. ')^' → logprob: -15.512227058410645

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3199920178740285e-05
    2. ' ' → logprob: -10.875022888183594
    3. '(' → logprob: -12.750022888183594
    4. '.' → logprob: -14.000022888183594
    5. '   ' → logprob: -15.000022888183594
    6. '{' → logprob: -16.750022888183594
    7. '    ' → logprob: -16.875022888183594
    8. '```' → logprob: -17.437522888183594
    9. '۰' → logprob: -17.500022888183594
    10. ' ' → logprob: -17.562522888183594

Token 79: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013021418126299977
    2. '5' → logprob: -6.751302242279053
    3. '0' → logprob: -9.001301765441895
    4. '2' → logprob: -12.876301765441895
    5. '```' → logprob: -13.001301765441895
    6. ' .' → logprob: -13.626301765441895
    7. '1' → logprob: -14.001301765441895
    8. ' ' → logprob: -14.626301765441895
    9. '(' → logprob: -16.00130271911621
    10. '   ' → logprob: -16.12630271911621

Token 80: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.65707261255011e-06
    2. '```' → logprob: -12.000008583068848
    3. '4' → logprob: -14.812508583068848
    4. '6' → logprob: -15.750008583068848
    5. '   ' → logprob: -15.750008583068848
    6. '``' → logprob: -16.125009536743164
    7. ')' → logprob: -16.500009536743164
    8. '25' → logprob: -16.562509536743164
    9. '0' → logprob: -16.625009536743164
    10. 'python' → logprob: -16.687509536743164

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001992278266698122
    2. ')+' → logprob: -6.626992225646973
    3. ')
' → logprob: -8.126992225646973
    4. '       ' → logprob: -8.126992225646973
    5. ' )' → logprob: -10.001992225646973
    6. '           ' → logprob: -11.626992225646973
    7. '))' → logprob: -12.251992225646973
    8. '   ' → logprob: -12.251992225646973
    9. '+' → logprob: -13.001992225646973
    10. ')
' → logprob: -13.751992225646973

Token 82: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009291091002523899
    2. '           ' → logprob: -5.634291172027588
    3. 'for' (adapté à ' for') → logprob: -5.634291172027588
    4. '<|end|>' → logprob: -6.634291172027588
    5. '       ' → logprob: -7.509291172027588
    6. ' ' → logprob: -9.25929069519043
    7. '	for' → logprob: -10.00929069519043
    8. '   ' → logprob: -10.00929069519043
    9. '<|end|>' → logprob: -10.63429069519043
    10. '	       ' → logprob: -12.38429069519043

Token 84: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.01815052703022957
    2. 'b' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.518150329589844
    4. ' ' → logprob: -16.893150329589844
    5. '	b' → logprob: -17.518150329589844
    6. '<|end|>' → logprob: -17.518150329589844
    7. ' б' → logprob: -17.768150329589844
    8. '>b' → logprob: -18.393150329589844
    9. '```' → logprob: -18.518150329589844
    10. '_b' → logprob: -18.643150329589844

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007522129453718662
    2. 'in' → logprob: -7.2507524490356445
    3. ' ' → logprob: -10.250752449035645
    4. '<|end|>' → logprob: -12.125752449035645
    5. ' =' → logprob: -15.375752449035645
    6. '=' → logprob: -15.375752449035645
    7. '<|end|>' → logprob: -15.750752449035645
    8. 's' → logprob: -15.875752449035645
    9. '	in' → logprob: -15.875752449035645
    10. ')' → logprob: -16.000751495361328

Token 86: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193214416503906
    2. ' range' → logprob: -1.501932144165039
    3. 'a' → logprob: -14.001932144165039
    4. 'r' → logprob: -14.376932144165039
    5. '(range' → logprob: -14.376932144165039
    6. '	range' → logprob: -14.876932144165039
    7. ' ' → logprob: -15.126932144165039
    8. ' a' → logprob: -16.00193214416504
    9. '   ' → logprob: -16.12693214416504
    10. 'b' → logprob: -16.37693214416504

Token 87: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07891204208135605
    2. '(' → logprob: -2.5789120197296143
    3. 'a' → logprob: -10.953911781311035
    4. '1' → logprob: -13.203911781311035
    5. ' (' → logprob: -14.203911781311035
    6. '(max' → logprob: -14.328911781311035
    7. '(b' → logprob: -14.578911781311035
    8. '(A' → logprob: -15.078911781311035
    9. '(
' → logprob: -15.203911781311035
    10. ' ' → logprob: -16.32891273498535

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014061863766983151
    2. '+' → logprob: -6.751406192779541
    3. ' ,' → logprob: -8.501405715942383
    4. ' +' → logprob: -11.501405715942383
    5. '<|end|>' → logprob: -11.751405715942383
    6. ',+' → logprob: -12.751405715942383
    7. '+,' → logprob: -12.876405715942383
    8. ',b' → logprob: -12.876405715942383
    9. '‌,' → logprob: -13.626405715942383
    10. ',int' → logprob: -13.876405715942383

Token 89: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889441400766373
    2. ' max' → logprob: -2.5788943767547607
    3. '	max' → logprob: -13.45389461517334
    4. ' ' → logprob: -13.57889461517334
    5. '(max' → logprob: -14.07889461517334
    6. '[max' → logprob: -14.20389461517334
    7. '   ' → logprob: -16.078893661499023
    8. ',max' → logprob: -16.203893661499023
    9. '_max' → logprob: -16.453893661499023
    10. ':max' → logprob: -16.578893661499023

Token 90: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002458430244587362
    2. '_a' → logprob: -8.375246047973633
    3. 'b' → logprob: -11.875246047973633
    4. '_' → logprob: -12.500246047973633
    5. '+' → logprob: -14.000246047973633
    6. 'a' → logprob: -14.437746047973633
    7. ' ' → logprob: -14.750246047973633
    8. ' _' → logprob: -15.000246047973633
    9. ' b' → logprob: -15.062746047973633
    10. ')' → logprob: -15.187746047973633

Token 91: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015029559144750237
    2. ' +' → logprob: -6.501502990722656
    3. ')+' → logprob: -14.751502990722656
    4. '1' → logprob: -15.751502990722656
    5. '()+' → logprob: -17.251502990722656
    6. '+
' → logprob: -17.626502990722656
    7. '＋' → logprob: -18.001502990722656
    8. '+)' → logprob: -18.126502990722656
    9. '```' → logprob: -18.501502990722656
    10. ')' → logprob: -18.626502990722656

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8232690460281447e-05
    2. '+' → logprob: -10.500048637390137
    3. '2' → logprob: -11.500048637390137
    4. ' ' → logprob: -11.500048637390137
    5. ' +' → logprob: -15.625048637390137
    6. '```' → logprob: -15.750048637390137
    7. ')' → logprob: -17.25004768371582
    8. '   ' → logprob: -17.50004768371582
    9. ')+' → logprob: -19.31254768371582
    10. '0' → logprob: -19.68754768371582

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05803745612502098
    2. ':' → logprob: -2.933037519454956
    3. '):
' → logprob: -6.308037281036377
    4. '+' → logprob: -6.808037281036377
    5. '():' → logprob: -9.558037757873535
    6. ',' → logprob: -10.058037757873535
    7. '+:' → logprob: -10.058037757873535
    8. '1' → logprob: -11.558037757873535
    9. ':
' → logprob: -11.933037757873535
    10. ' :' → logprob: -11.933037757873535

Token 94: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027725763618946075
    2. ' ' → logprob: -4.902725696563721
    3. '           ' → logprob: -5.277725696563721
    4. '```' → logprob: -5.402725696563721
    5. ':' → logprob: -5.652725696563721
    6. '       ' → logprob: -6.152725696563721
    7. ' :' → logprob: -6.277725696563721
    8. '<|end|>' → logprob: -7.152725696563721
    9. '   ' → logprob: -8.152726173400879
    10. ',' → logprob: -8.277726173400879

Token 95: ' b' (ID: 287)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1758524179458618
    2. '                   ' → logprob: -1.3008524179458618
    3. 'b' (adapté à ' b') → logprob: -2.0508522987365723
    4. ' b' → logprob: -2.0508522987365723
    5. ' if' → logprob: -2.5508522987365723
    6. ' ' → logprob: -2.6758522987365723
    7. 'if' → logprob: -5.550852298736572
    8. '   ' → logprob: -5.925852298736572
    9. '                ' → logprob: -6.425852298736572
    10. '```' → logprob: -6.425852298736572

Token 96: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -0.00011236425780225545
    2. '_squared' → logprob: -10.250112533569336
    3. 'sq' → logprob: -10.375112533569336
    4. '2' → logprob: -11.250112533569336
    5. '_' → logprob: -11.375112533569336
    6. '²' → logprob: -11.875112533569336
    7. ' ' → logprob: -12.000112533569336
    8. 's' → logprob: -13.375112533569336
    9. '**' → logprob: -13.750112533569336
    10. '*' → logprob: -13.875112533569336

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022828221321106
    2. '=' → logprob: -1.9102282524108887
    3. ' ' → logprob: -12.910228729248047
    4. '=b' → logprob: -14.410228729248047
    5. '=s' → logprob: -15.535228729248047
    6. 'b' → logprob: -15.785228729248047
    7. '               ' → logprob: -15.785228729248047
    8. ')' → logprob: -16.035228729248047
    9. '   ' → logprob: -16.160228729248047
    10. ' =
' → logprob: -16.160228729248047

Token 98: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25192955136299133
    2. ' b' → logprob: -1.501929521560669
    3. '	b' → logprob: -15.75192928314209
    4. ' ' → logprob: -15.87692928314209
    5. '   ' → logprob: -16.876930236816406
    6. ')b' → logprob: -16.876930236816406
    7. ' б' → logprob: -17.126930236816406
    8. '(b' → logprob: -18.376930236816406
    9. '>b' → logprob: -18.376930236816406
    10. '<|end|>' → logprob: -18.626930236816406

Token 99: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.0005516022793017328
    2. '*' → logprob: -7.625551700592041
    3. ' *' → logprob: -9.750551223754883
    4. '**' → logprob: -12.750551223754883
    5. 'b' → logprob: -13.125551223754883
    6. '***' → logprob: -15.875551223754883
    7. '*object' → logprob: -17.375551223754883
    8. '```' → logprob: -17.500551223754883
    9. '*s' → logprob: -17.625551223754883
    10. '*a' → logprob: -18.125551223754883

Token 100: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011367986910045147
    2. '<|end|>' → logprob: -4.6363677978515625
    3. '                
' → logprob: -8.011367797851562
    4. '<|end|>' → logprob: -8.136367797851562
    5. ' if' → logprob: -8.386367797851562
    6. '
' → logprob: -9.011367797851562
    7. ' ' → logprob: -9.136367797851562
    8. '       ' → logprob: -9.261367797851562
    9. '           ' → logprob: -9.886367797851562
    10. '                ' → logprob: -10.011367797851562

Token 101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09356752038002014
    2. '<|end|>' → logprob: -2.4685676097869873
    3. '<|end|>' → logprob: -6.468567371368408
    4. '                
' → logprob: -6.593567371368408
    5. '```' → logprob: -7.718567371368408
    6. '
' → logprob: -8.468567848205566
    7. '                ' → logprob: -8.718567848205566
    8. ' if' → logprob: -8.968567848205566
    9. ',' → logprob: -9.343567848205566
    10. ' ' → logprob: -9.468567848205566

Token 102: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4965307414531708
    2. 'if' → logprob: -0.9965307712554932
    3. '               ' → logprob: -3.871530771255493
    4. 'sum' → logprob: -7.746530532836914
    5. 'total' → logprob: -7.996530532836914
    6. ' total' → logprob: -8.871530532836914
    7. '                
' → logprob: -9.121530532836914
    8. ' ' → logprob: -9.246530532836914
    9. ' sum' → logprob: -9.996530532836914
    10. '```' → logprob: -10.371530532836914

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22303587198257446
    2. 'q' → logprob: -2.4730358123779297
    3. 'um' → logprob: -2.5980358123779297
    4. ' =' → logprob: -3.2230358123779297
    5. 'u' → logprob: -7.59803581237793
    6. '=sum' → logprob: -9.22303581237793
    7. '_' → logprob: -9.34803581237793
    8. 'qr' → logprob: -9.59803581237793
    9. 'quares' → logprob: -9.84803581237793
    10. 'quare' → logprob: -9.84803581237793

Token 104: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519367039203644
    2. ' a' → logprob: -1.501936674118042
    3. ' ' → logprob: -12.751936912536621
    4. '	a' → logprob: -13.251936912536621
    5. 'n' → logprob: -13.626936912536621
    6. '   ' → logprob: -14.501936912536621
    7. '_a' → logprob: -15.126936912536621
    8. '(a' → logprob: -15.376936912536621
    9. ' n' → logprob: -15.501936912536621
    10. '               ' → logprob: -16.001935958862305

Token 105: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -0.007414482068270445
    2. '_' → logprob: -5.1324143409729
    3. '+' → logprob: -8.132414817810059
    4. '**' → logprob: -8.382414817810059
    5. ' +' → logprob: -8.382414817810059
    6. '_squared' → logprob: -8.507414817810059
    7. '*' → logprob: -8.757414817810059
    8. ' _' → logprob: -9.257414817810059
    9. ' ' → logprob: -9.507414817810059
    10. '*_' → logprob: -9.632414817810059

Token 106: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47409290075302124
    2. '+' → logprob: -0.9740929007530212
    3. '<|end|>' → logprob: -11.974092483520508
    4. '+b' → logprob: -12.099092483520508
    5. ' +
' → logprob: -13.599092483520508
    6. '+s' → logprob: -13.974092483520508
    7. ' plus' → logprob: -14.599092483520508
    8. '+B' → logprob: -15.099092483520508
    9. '+
' → logprob: -15.599092483520508
    10. '<|end|>' → logprob: -15.849092483520508

Token 107: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0485873706638813
    2. ' b' → logprob: -3.0485873222351074
    3. ' ' → logprob: -17.423587799072266
    4. '   ' → logprob: -18.298587799072266
    5. '	b' → logprob: -18.423587799072266
    6. '```' → logprob: -19.923587799072266
    7. ')b' → logprob: -20.173587799072266
    8. '       ' → logprob: -20.298587799072266
    9. ' б' → logprob: -20.423587799072266
    10. '               ' → logprob: -20.798587799072266

Token 108: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -1.759734732331708e-05
    2. '_sb' → logprob: -11.500017166137695
    3. '_' → logprob: -13.375017166137695
    4. 's' → logprob: -13.500017166137695
    5. 'sq' → logprob: -13.750017166137695
    6. '_s' → logprob: -13.875017166137695
    7. '_squared' → logprob: -14.250017166137695
    8. 'b' → logprob: -14.500017166137695
    9. '_sz' → logprob: -15.125017166137695
    10. '_b' → logprob: -15.250017166137695

Token 109: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08443035185337067
    2. '<|end|>' → logprob: -2.709430456161499
    3. ' if' → logprob: -4.58443021774292
    4. '<|end|>' → logprob: -6.58443021774292
    5. '=' → logprob: -7.70943021774292
    6. '
' → logprob: -7.70943021774292
    7. '==' → logprob: -7.95943021774292
    8. 'if' → logprob: -8.084430694580078
    9. ' ==' → logprob: -8.459430694580078
    10. '                
' → logprob: -8.709430694580078

Token 110: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1462704837322235
    2. '<|end|>' → logprob: -2.146270513534546
    3. ' if' → logprob: -4.646270275115967
    4. '       ' → logprob: -5.396270275115967
    5. '<|end|>' → logprob: -5.896270275115967
    6. ' ' → logprob: -7.771270275115967
    7. '                
' → logprob: -8.021270751953125
    8. '   ' → logprob: -8.521270751953125
    9. '```' → logprob: -8.521270751953125
    10. ' =' → logprob: -8.771270751953125

Token 111: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16162973642349243
    2. '               ' → logprob: -2.5366296768188477
    3. 'if' (adapté à ' if') → logprob: -2.6616296768188477
    4. ' ' → logprob: -9.286629676818848
    5. '                ' → logprob: -10.036629676818848
    6. '       ' → logprob: -10.411629676818848
    7. '
' → logprob: -10.786629676818848
    8. '           ' → logprob: -10.911629676818848
    9. '                
' → logprob: -10.911629676818848
    10. '	if' → logprob: -11.911629676818848

Token 112: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.00861468818038702
    2. 's' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.508615493774414
    4. ' ' → logprob: -17.133615493774414
    5. '(s' → logprob: -18.383615493774414
    6. '                ' → logprob: -19.133615493774414
    7. '               ' → logprob: -19.508615493774414
    8. '                   ' → logprob: -20.633615493774414
    9. '	s' → logprob: -20.633615493774414
    10. '{s' → logprob: -20.758615493774414

Token 113: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12937231361865997
    2. '==' → logprob: -2.1293723583221436
    3. ' <=' → logprob: -6.1293721199035645
    4. '<=' → logprob: -8.254372596740723
    5. ' ' → logprob: -13.504372596740723
    6. '=' → logprob: -14.629372596740723
    7. '===' → logprob: -14.879372596740723
    8. ' >' → logprob: -15.379372596740723
    9. '==
' → logprob: -15.379372596740723
    10. '>' → logprob: -15.629372596740723

Token 114: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10020699352025986
    2. 'n' → logprob: -2.3502070903778076
    3. '	n' → logprob: -14.850207328796387
    4. ' ' → logprob: -17.85020637512207
    5. ' ' → logprob: -18.60020637512207
    6. '_n' → logprob: -19.47520637512207
    7. ' н' → logprob: -19.60020637512207
    8. 'n't' → logprob: -20.22520637512207
    9. '=n' → logprob: -20.35020637512207
    10. '```' → logprob: -20.47520637512207

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008649318479001522
    2. ':
' → logprob: -4.7586493492126465
    3. '                   ' → logprob: -10.633648872375488
    4. ':return' → logprob: -12.508648872375488
    5. ' and' → logprob: -13.758648872375488
    6. '           ' → logprob: -13.758648872375488
    7. ':
' → logprob: -13.883648872375488
    8. '               ' → logprob: -14.258648872375488
    9. ':

' → logprob: -14.383648872375488
    10. '):' → logprob: -14.508648872375488

Token 116: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0043053762055933475
    2. ':' → logprob: -5.504305362701416
    3. ':
' → logprob: -9.504305839538574
    4. '                       ' → logprob: -10.004305839538574
    5. '               ' → logprob: -10.379305839538574
    6. '                  ' → logprob: -11.129305839538574
    7. ',' → logprob: -11.129305839538574
    8. '           ' → logprob: -11.504305839538574
    9. '                    ' → logprob: -12.129305839538574
    10. ' and' → logprob: -12.129305839538574

Token 117: ' count' (ID: 3605)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.726335346698761
    2. ' count' → logprob: -0.976335346698761
    3. 'count' (adapté à ' count') → logprob: -2.101335287094116
    4. '                       ' → logprob: -4.101335525512695
    5. '               ' → logprob: -7.351335525512695
    6. '       ' → logprob: -10.226335525512695
    7. '           ' → logprob: -10.226335525512695
    8. '                    ' → logprob: -10.851335525512695
    9. '[count' → logprob: -11.726335525512695
    10. '```' → logprob: -11.726335525512695

Token 118: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023271916434168816
    2. '+=' → logprob: -3.7732717990875244
    3. '                    ' → logprob: -11.898271560668945
    4. '                   ' → logprob: -12.398271560668945
    5. '+' → logprob: -12.898271560668945
    6. '                ' → logprob: -13.023271560668945
    7. '                       ' → logprob: -13.273271560668945
    8. '    ' → logprob: -13.523271560668945
    9. ']+=' → logprob: -13.523271560668945
    10. '<|end|>' → logprob: -13.648271560668945

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023245595395565033
    2. ' ' → logprob: -3.7732455730438232
    3. '```' → logprob: -16.773244857788086
    4. '   ' → logprob: -17.648244857788086
    5. ' ' → logprob: -18.023244857788086
    6. '2' → logprob: -18.523244857788086
    7. '１' → logprob: -19.148244857788086
    8. '<|end|>' → logprob: -19.398244857788086
    9. '۱' → logprob: -19.460744857788086
    10. '                   ' → logprob: -19.460744857788086

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '2' → logprob: -17.000011444091797
    4. '```' → logprob: -18.062511444091797
    5. '   ' → logprob: -19.062511444091797
    6. '۱' → logprob: -19.312511444091797
    7. '<|end|>' → logprob: -19.500011444091797
    8. '１' → logprob: -19.562511444091797
    9. '0' → logprob: -20.250011444091797
    10. '१' → logprob: -20.875011444091797

Token 121: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04321692883968353
    2. '       ' → logprob: -3.5432169437408447
    3. '\n' → logprob: -5.543216705322266
    4. 'return' → logprob: -5.668216705322266
    5. ' return' → logprob: -5.918216705322266
    6. '<|end|>' → logprob: -7.543216705322266
    7. '                
' → logprob: -7.668216705322266
    8. '   ' → logprob: -7.793216705322266
    9. '
' → logprob: -8.043216705322266
    10. '                ' → logprob: -8.168216705322266

Token 122: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08042928576469421
    2. 'return' → logprob: -2.7054293155670166
    3. ' return' → logprob: -4.8304290771484375
    4. '   ' → logprob: -6.9554290771484375
    5. '       ' → logprob: -7.3304290771484375
    6. 'else' → logprob: -7.5804290771484375
    7. ' else' → logprob: -8.330429077148438
    8. 'elif' → logprob: -10.330429077148438
    9. ' ' → logprob: -11.705429077148438
    10. '           ' → logprob: -11.955429077148438

Token 123: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.18738773465156555
    2. 'else' → logprob: -2.687387704849243
    3. ' elif' → logprob: -2.812387704849243
    4. '               ' → logprob: -3.437387704849243
    5. ' else' → logprob: -4.687387943267822
    6. 'return' → logprob: -6.812387943267822
    7. '       ' → logprob: -8.937387466430664
    8. ' return' → logprob: -9.812387466430664
    9. '	elif' → logprob: -10.812387466430664
    10. '```' → logprob: -10.812387466430664

Token 124: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16022463142871857
    2. ' s' → logprob: -1.9102246761322021
    3. '   ' → logprob: -16.66022491455078
    4. '_s' → logprob: -16.91022491455078
    5. '               ' → logprob: -16.91022491455078
    6. '	s' → logprob: -17.03522491455078
    7. ' ' → logprob: -17.16022491455078
    8. '           ' → logprob: -17.41022491455078
    9. ' ' → logprob: -17.78522491455078
    10. '                   ' → logprob: -18.03522491455078

Token 125: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12756168842315674
    2. '>' → logprob: -2.127561569213867
    3. ' <' → logprob: -7.502561569213867
    4. '<' → logprob: -9.502561569213867
    5. ' ' → logprob: -12.252561569213867
    6. ' greater' → logprob: -14.377561569213867
    7. ' ' → logprob: -15.252561569213867
    8. '()>' → logprob: -15.752561569213867
    9. '<|end|>' → logprob: -15.877561569213867
    10. '   ' → logprob: -16.002561569213867

Token 126: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022473573684692
    2. ' n' → logprob: -1.9102246761322021
    3. 's' → logprob: -15.410224914550781
    4. '0' → logprob: -16.41022491455078
    5. '	n' → logprob: -16.53522491455078
    6. ' ' → logprob: -16.78522491455078
    7. ')n' → logprob: -17.03522491455078
    8. ' s' → logprob: -17.03522491455078
    9. ')' → logprob: -17.16022491455078
    10. '(n' → logprob: -17.91022491455078

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10451318323612213
    2. ':
' → logprob: -2.479513168334961
    3. '                   ' → logprob: -4.604513168334961
    4. '               ' → logprob: -5.479513168334961
    5. 'else' → logprob: -7.229513168334961
    6. '           ' → logprob: -8.729513168334961
    7. ' else' → logprob: -9.354513168334961
    8. 'continue' → logprob: -9.354513168334961
    9. '                       ' → logprob: -9.729513168334961
    10. ' continue' → logprob: -10.104513168334961

Token 128: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.30391544103622437
    2. 'continue' → logprob: -1.6789155006408691
    3. '               ' → logprob: -2.803915500640869
    4. '                       ' → logprob: -5.303915500640869
    5. ' continue' → logprob: -5.553915500640869
    6. '           ' → logprob: -5.928915500640869
    7. 'pass' → logprob: -6.428915500640869
    8. 'break' → logprob: -7.178915500640869
    9. '
' → logprob: -8.178915023803711
    10. '       ' → logprob: -8.303915023803711

Token 129: ' max' (ID: 2999)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.063253253698349
    2. ' continue' → logprob: -2.813253164291382
    3. 'pass' → logprob: -7.063253402709961
    4. '   ' → logprob: -8.938253402709961
    5. 'break' → logprob: -9.313253402709961
    6. '               ' → logprob: -9.688253402709961
    7. ' pass' → logprob: -9.688253402709961
    8. '                   ' → logprob: -9.813253402709961
    9. 'continu' → logprob: -11.688253402709961
    10. ' break' → logprob: -11.938253402709961

Token 130: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.17997018992900848
    2. '_b' → logprob: -1.804970145225525
    3. '_a' → logprob: -8.929969787597656
    4. 'c' → logprob: -9.929969787597656
    5. '_s' → logprob: -10.804969787597656
    6. 'b' → logprob: -11.804969787597656
    7. '_' → logprob: -12.054969787597656
    8. ')' → logprob: -12.929969787597656
    9. 'a' → logprob: -13.554969787597656
    10. '```' → logprob: -13.804969787597656

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632645845413208
    2. ' =' → logprob: -0.757645845413208
    3. '=int' → logprob: -10.132645606994629
    4. '=max' → logprob: -12.632645606994629
    5. 'max' → logprob: -14.507645606994629
    6. '   ' → logprob: -14.632645606994629
    7. ' ' → logprob: -14.632645606994629
    8. '```' → logprob: -14.882645606994629
    9. '=
' → logprob: -15.007645606994629
    10. ',' → logprob: -16.007646560668945

Token 132: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009115827269852161
    2. ' int' → logprob: -7.000911712646484
    3. '(int' → logprob: -16.750911712646484
    4. '                   ' → logprob: -18.750911712646484
    5. '               ' → logprob: -18.875911712646484
    6. '=int' → logprob: -19.250911712646484
    7. '[int' → logprob: -19.500911712646484
    8. '	int' → logprob: -19.625911712646484
    9. '```' → logprob: -20.125911712646484
    10. '           ' → logprob: -20.250911712646484

Token 133: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.041761741042137146
    2. '(n' → logprob: -3.291761636734009
    3. ' (' → logprob: -5.666761875152588
    4. '(' → logprob: -8.66676139831543
    5. ' ((' → logprob: -9.79176139831543
    6. '   ' → logprob: -11.16676139831543
    7. ' ' → logprob: -12.29176139831543
    8. '[(' → logprob: -12.54176139831543
    9. '
' → logprob: -14.04176139831543
    10. '  ' → logprob: -14.41676139831543

Token 134: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04869546368718147
    2. 'n' → logprob: -3.0486955642700195
    3. ' (' → logprob: -9.17369556427002
    4. ' n' → logprob: -13.04869556427002
    5. '
' → logprob: -14.54869556427002
    6. '(' → logprob: -14.67369556427002
    7. '[n' → logprob: -14.79869556427002
    8. '   ' → logprob: -15.17369556427002
    9. '	n' → logprob: -15.92369556427002
    10. ' ' → logprob: -15.92369556427002

Token 135: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12711793184280396
    2. '-' → logprob: -2.127117872238159
    3. '-s' → logprob: -8.627118110656738
    4. '-n' → logprob: -12.127118110656738
    5. 's' → logprob: -13.002118110656738
    6. ' ' → logprob: -13.252118110656738
    7. ' s' → logprob: -14.752118110656738
    8. '   ' → logprob: -15.877118110656738
    9. 'n' → logprob: -15.877118110656738
    10. '-c' → logprob: -16.627117156982422

Token 136: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12698994576931
    2. ' s' → logprob: -2.1269898414611816
    3. 'b' → logprob: -10.50199031829834
    4. 'a' → logprob: -11.37699031829834
    5. ' b' → logprob: -12.37699031829834
    6. '_s' → logprob: -12.37699031829834
    7. ' ' → logprob: -12.87699031829834
    8. '(s' → logprob: -13.00199031829834
    9. ' a' → logprob: -13.12699031829834
    10. '           ' → logprob: -13.50199031829834

Token 137: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.004358790814876556
    2. ')' → logprob: -5.629358768463135
    3. '**' → logprob: -7.254358768463135
    4. ' )' → logprob: -10.004359245300293
    5. ' ' → logprob: -13.129359245300293
    6. '[' → logprob: -13.379359245300293
    7. '   ' → logprob: -13.754359245300293
    8. '0' → logprob: -15.129359245300293
    9. '**)' → logprob: -15.254359245300293
    10. '```' → logprob: -15.504359245300293

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.500017166137695
    3. '.' → logprob: -12.500017166137695
    4. '(' → logprob: -14.000017166137695
    5. '   ' → logprob: -14.375017166137695
    6. '2' → logprob: -14.812517166137695
    7. '```' → logprob: -15.312517166137695
    8. '    ' → logprob: -15.375017166137695
    9. '           ' → logprob: -16.250017166137695
    10. '       ' → logprob: -16.437517166137695

Token 139: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005133562372066081
    2. '-' → logprob: -8.375513076782227
    3. '0' → logprob: -8.375513076782227
    4. '2' → logprob: -10.625513076782227
    5. '```' → logprob: -11.875513076782227
    6. '-.' → logprob: -12.250513076782227
    7. '5' → logprob: -12.625513076782227
    8. ' -' → logprob: -12.875513076782227
    9. '1' → logprob: -13.375513076782227
    10. '(' → logprob: -13.625513076782227

Token 140: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.7372048862162046e-05
    2. '.' → logprob: -12.000027656555176
    3. '0' → logprob: -12.000027656555176
    4. '```' → logprob: -12.250027656555176
    5. ' ' → logprob: -13.937527656555176
    6. '   ' → logprob: -14.125027656555176
    7. '4' → logprob: -14.625027656555176
    8. '{' → logprob: -14.812527656555176
    9. '2' → logprob: -14.937527656555176
    10. '       ' → logprob: -15.125027656555176

Token 141: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034367118030786514
    2. ')
' → logprob: -3.534367084503174
    3. '                   ' → logprob: -5.909367084503174
    4. '               ' → logprob: -6.284367084503174
    5. ')
' → logprob: -11.534367561340332
    6. '           ' → logprob: -11.784367561340332
    7. '                       ' → logprob: -12.034367561340332
    8. '       ' → logprob: -14.159367561340332
    9. ' )' → logprob: -14.784367561340332
    10. ')

' → logprob: -14.784367561340332

Token 142: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09112365543842316
    2. '               ' → logprob: -2.466123580932617
    3. ' for' → logprob: -7.091123580932617
    4. 'for' → logprob: -8.091123580932617
    5. '           ' → logprob: -8.341123580932617
    6. '<|end|>' → logprob: -8.716123580932617
    7. '		           ' → logprob: -8.966123580932617
    8. '                       ' → logprob: -8.966123580932617
    9. '                    
' → logprob: -8.966123580932617
    10. '```' → logprob: -9.591123580932617

Token 143: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01614651083946228
    2. ' for' → logprob: -4.141146659851074
    3. '	for' → logprob: -10.016146659851074
    4. '               ' → logprob: -10.891146659851074
    5. '                   ' → logprob: -10.891146659851074
    6. '<|end|>' → logprob: -11.516146659851074
    7. '           ' → logprob: -11.641146659851074
    8. '       ' → logprob: -11.766146659851074
    9. '   ' → logprob: -13.516146659851074
    10. '```' → logprob: -14.391146659851074

Token 144: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.10020699352025986
    2. 'c' → logprob: -2.3502070903778076
    3. '<|end|>' → logprob: -15.725207328796387
    4. '_c' → logprob: -16.10020637512207
    5. '	c' → logprob: -17.10020637512207
    6. ')c' → logprob: -17.85020637512207
    7. ' ' → logprob: -18.35020637512207
    8. ' ' → logprob: -18.47520637512207
    9. '```' → logprob: -18.60020637512207
    10. '(c' → logprob: -18.78770637512207

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007625080645084381
    2. 'in' → logprob: -4.882625102996826
    3. ' ' → logprob: -11.882624626159668
    4. '<|end|>' → logprob: -11.882624626159668
    5. ',' → logprob: -14.257624626159668
    6. '	in' → logprob: -14.632624626159668
    7. ')' → logprob: -14.757624626159668
    8. '<|end|>' → logprob: -14.757624626159668
    9. 'range' → logprob: -14.882624626159668
    10. 'space' → logprob: -14.882624626159668

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3137216567993164
    2. ' range' → logprob: -1.3137216567993164
    3. '(range' → logprob: -7.688721656799316
    4. 'c' → logprob: -13.813721656799316
    5. 'b' → logprob: -15.063721656799316
    6. '	range' → logprob: -15.688721656799316
    7. '(c' → logprob: -16.313720703125
    8. ' c' → logprob: -16.563720703125
    9. '(b' → logprob: -17.188720703125
    10. '_range' → logprob: -17.188720703125

Token 147: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.292907877039397e-06
    2. 'b' → logprob: -12.75000286102295
    3. '(' → logprob: -15.62500286102295
    4. '(c' → logprob: -16.625003814697266
    5. '	b' → logprob: -17.625003814697266
    6. '[b' → logprob: -17.750003814697266
    7. '>b' → logprob: -18.750003814697266
    8. '=b' → logprob: -19.000003814697266
    9. ' (' → logprob: -19.000003814697266
    10. '(B' → logprob: -19.125003814697266

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039647609810344875
    2. ',max' → logprob: -7.875396251678467
    3. ' ,' → logprob: -11.625396728515625
    4. '+' → logprob: -12.500396728515625
    5. ',c' → logprob: -13.250396728515625
    6. 'c' → logprob: -14.500396728515625
    7. '+,' → logprob: -15.000396728515625
    8. 'max' → logprob: -15.000396728515625
    9. '(max' → logprob: -15.250396728515625
    10. '           ' → logprob: -15.500396728515625

Token 149: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011048054322600365
    2. ' max' → logprob: -4.511047840118408
    3. '(max' → logprob: -15.136048316955566
    4. '[max' → logprob: -17.13604736328125
    5. ' ' → logprob: -18.01104736328125
    6. '	max' → logprob: -18.26104736328125
    7. '   ' → logprob: -19.51104736328125
    8. ':max' → logprob: -19.76104736328125
    9. ',max' → logprob: -19.88604736328125
    10. '=max' → logprob: -20.01104736328125

Token 150: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.4617256056226324e-05
    2. 'max' → logprob: -11.250014305114746
    3. 'c' → logprob: -13.875014305114746
    4. '_max' → logprob: -14.625014305114746
    5. '(max' → logprob: -17.125015258789062
    6. '+' → logprob: -17.375015258789062
    7. '[max' → logprob: -18.500015258789062
    8. ' max' → logprob: -18.500015258789062
    9. 's' → logprob: -18.750015258789062
    10. 'a' → logprob: -19.500015258789062

Token 151: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.872261317563243e-05
    2. ' +' → logprob: -9.750059127807617
    3. ')+' → logprob: -15.500059127807617
    4. '```' → logprob: -16.625059127807617
    5. '()+' → logprob: -16.750059127807617
    6. '}+' → logprob: -17.250059127807617
    7. '+
' → logprob: -17.875059127807617
    8. '1' → logprob: -19.000059127807617
    9. '   ' → logprob: -19.250059127807617
    10. '﻿' → logprob: -19.437559127807617

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002659847668837756
    2. '+' → logprob: -8.250266075134277
    3. ' ' → logprob: -12.500266075134277
    4. '2' → logprob: -14.125266075134277
    5. ' +' → logprob: -16.50026512145996
    6. '```' → logprob: -16.50026512145996
    7. '{' → logprob: -17.12526512145996
    8. ')' → logprob: -17.25026512145996
    9. ')+' → logprob: -17.37526512145996
    10. '   ' → logprob: -17.37526512145996

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05006704106926918
    2. ':' → logprob: -3.5500669479370117
    3. '):
' → logprob: -4.050066947937012
    4. '():' → logprob: -6.175066947937012
    5. '                       ' → logprob: -8.300066947937012
    6. ':
' → logprob: -9.175066947937012
    7. '():
' → logprob: -9.300066947937012
    8. '       ' → logprob: -10.175066947937012
    9. '                   ' → logprob: -10.675066947937012
    10. ',' → logprob: -10.800066947937012

Token 154: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20011292397975922
    2. '       ' → logprob: -1.8251129388809204
    3. '               ' → logprob: -4.825112819671631
    4. 'c' → logprob: -5.200112819671631
    5. '                   ' → logprob: -5.825112819671631
    6. '           ' → logprob: -6.700112819671631
    7. '```' → logprob: -7.200112819671631
    8. '                           ' → logprob: -7.700112819671631
    9. '   ' → logprob: -7.950112819671631
    10. '                               ' → logprob: -8.825113296508789

Token 155: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0008192769018933177
    2. ' c' → logprob: -7.125819206237793
    3. '                       ' → logprob: -11.750819206237793
    4. '                           ' → logprob: -12.125819206237793
    5. '   ' → logprob: -14.875819206237793
    6. '                               ' → logprob: -15.125819206237793
    7. '           ' → logprob: -15.250819206237793
    8. ' ' → logprob: -15.625819206237793
    9. '               ' → logprob: -15.625819206237793
    10. '                   ' → logprob: -15.750819206237793

Token 156: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -0.0003954033018089831
    2. '_squared' → logprob: -8.000395774841309
    3. '_' → logprob: -10.250395774841309
    4. '_square' → logprob: -12.250395774841309
    5. '_s' → logprob: -12.375395774841309
    6. 's' → logprob: -12.750395774841309
    7. '**' → logprob: -12.875395774841309
    8. 'sq' → logprob: -13.000395774841309
    9. '```' → logprob: -13.125395774841309
    10. '<|end|>' → logprob: -13.625395774841309

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022910177707672
    2. '=' → logprob: -1.9102290868759155
    3. '<|end|>' → logprob: -13.410228729248047
    4. '=c' → logprob: -13.785228729248047
    5. ' ' → logprob: -13.910228729248047
    6. '=s' → logprob: -14.785228729248047
    7. 'c' → logprob: -15.035228729248047
    8. 's' → logprob: -15.285228729248047
    9. ')' → logprob: -15.910228729248047
    10. '```' → logprob: -15.910228729248047

Token 158: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03804252669215202
    2. ' c' → logprob: -3.2880425453186035
    3. '                       ' → logprob: -14.413042068481445
    4. '(c' → logprob: -15.913042068481445
    5. '                           ' → logprob: -16.163042068481445
    6. '	c' → logprob: -16.413042068481445
    7. ')c' → logprob: -16.413042068481445
    8. ' ' → logprob: -17.163042068481445
    9. '                               ' → logprob: -17.788042068481445
    10. '<|end|>' → logprob: -18.038042068481445

Token 159: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -4.8232690460281447e-05
    2. '*' → logprob: -10.500048637390137
    3. 'c' → logprob: -10.875048637390137
    4. ' *' → logprob: -13.375048637390137
    5. '**' → logprob: -16.00004768371582
    6. '*s' → logprob: -17.50004768371582
    7. '*C' → logprob: -17.75004768371582
    8. '```' → logprob: -18.00004768371582
    9. '*
' → logprob: -18.37504768371582
    10. ' c' → logprob: -18.50004768371582

Token 160: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.13869740068912506
    2. '<|end|>' → logprob: -2.638697385787964
    3. 's' → logprob: -2.888697385787964
    4. '                        ' → logprob: -8.138697624206543
    5. '
' → logprob: -8.138697624206543
    6. '                        
' → logprob: -8.263697624206543
    7. '       ' → logprob: -8.638697624206543
    8. ' s' → logprob: -8.763697624206543
    9. '               ' → logprob: -9.013697624206543
    10. ')' → logprob: -9.013697624206543

Token 161: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1527354121208191
    2. 's' → logprob: -2.027735471725464
    3. '<|end|>' → logprob: -4.902735233306885
    4. '
' → logprob: -7.027735233306885
    5. ' s' → logprob: -7.402735233306885
    6. '               ' → logprob: -8.277735710144043
    7. '```' → logprob: -8.652735710144043
    8. '                        
' → logprob: -8.777735710144043
    9. '       ' → logprob: -9.152735710144043
    10. '           ' → logprob: -9.652735710144043

Token 162: ' t' (ID: 260)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3035490810871124
    2. 'if' → logprob: -1.55354905128479
    3. '                       ' → logprob: -3.55354905128479
    4. 'sum' → logprob: -4.178549289703369
    5. ' s' → logprob: -5.928549289703369
    6. ' if' → logprob: -6.178549289703369
    7. 'total' → logprob: -7.178549289703369
    8. 't' (adapté à ' t') → logprob: -8.178548812866211
    9. '                           ' → logprob: -8.553548812866211
    10. '                   ' → logprob: -9.553548812866211

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740902781486511
    2. '=' → logprob: -0.9740902781486511
    3. 's' → logprob: -11.349090576171875
    4. '=s' → logprob: -13.599090576171875
    5. ' ' → logprob: -16.474090576171875
    6. '```' → logprob: -17.349090576171875
    7. '           ' → logprob: -17.474090576171875
    8. '                       ' → logprob: -17.599090576171875
    9. '_s' → logprob: -17.724090576171875
    10. ' ' → logprob: -17.724090576171875

Token 164: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04300331324338913
    2. ' s' → logprob: -3.1680033206939697
    3. '   ' → logprob: -13.54300308227539
    4. ' ' → logprob: -13.79300308227539
    5. '                   ' → logprob: -15.41800308227539
    6. '(s' → logprob: -15.41800308227539
    7. 'n' → logprob: -15.66800308227539
    8. '  ' → logprob: -15.66800308227539
    9. '	s' → logprob: -15.79300308227539
    10. 't' → logprob: -15.79300308227539

Token 165: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1310223937034607
    2. ' +' → logprob: -2.1310224533081055
    3. '+c' → logprob: -5.5060224533081055
    4. '+t' → logprob: -10.881022453308105
    5. '+C' → logprob: -12.881022453308105
    6. '+k' → logprob: -13.881022453308105
    7. '＋' → logprob: -15.256022453308105
    8. '+p' → logprob: -15.381022453308105
    9. '+s' → logprob: -15.631022453308105
    10. '+x' → logprob: -16.00602149963379

Token 166: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.505351095460355e-05
    2. ' c' → logprob: -9.500075340270996
    3. '                       ' → logprob: -17.12507438659668
    4. '   ' → logprob: -17.37507438659668
    5. '                   ' → logprob: -18.25007438659668
    6. '	c' → logprob: -18.37507438659668
    7. '(c' → logprob: -19.37507438659668
    8. ' ' → logprob: -19.37507438659668
    9. '```' → logprob: -19.62507438659668
    10. '                           ' → logprob: -19.75007438659668

Token 167: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -1.5048530030981055e-06
    2. '_squared' → logprob: -13.875001907348633
    3. 'sq' → logprob: -15.750001907348633
    4. '*_' → logprob: -16.125001907348633
    5. '_square' → logprob: -17.000001907348633
    6. '_sz' → logprob: -17.375001907348633
    7. '_sb' → logprob: -17.750001907348633
    8. '```' → logprob: -18.000001907348633
    9. '_s' → logprob: -18.625001907348633
    10. '_' → logprob: -18.750001907348633

Token 168: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.014502058736979961
    2. 'if' → logprob: -5.014502048492432
    3. ' if' → logprob: -5.014502048492432
    4. '<|end|>' → logprob: -7.639502048492432
    5. '=' → logprob: -8.01450252532959
    6. '               ' → logprob: -9.76450252532959
    7. '                        ' → logprob: -10.01450252532959
    8. '```' → logprob: -10.13950252532959
    9. ' =' → logprob: -10.51450252532959
    10. '           ' → logprob: -10.63950252532959

Token 169: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00033879990223795176
    2. '<|end|>' → logprob: -8.375338554382324
    3. ' if' → logprob: -10.625338554382324
    4. 'if' → logprob: -11.000338554382324
    5. '               ' → logprob: -11.000338554382324
    6. '                   ' → logprob: -11.750338554382324
    7. '```' → logprob: -11.875338554382324
    8. '                        
' → logprob: -11.875338554382324
    9. '           ' → logprob: -12.125338554382324
    10. '       ' → logprob: -12.250338554382324

Token 170: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07008492946624756
    2. ' if' → logprob: -2.820085048675537
    3. '                       ' → logprob: -4.820085048675537
    4. '                   ' → logprob: -12.070084571838379
    5. '```' → logprob: -12.320084571838379
    6. '               ' → logprob: -13.070084571838379
    7. '           ' → logprob: -13.570084571838379
    8. '<|end|>' → logprob: -13.945084571838379
    9. '                        
' → logprob: -14.070084571838379
    10. '                           ' → logprob: -14.320084571838379

Token 171: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.07889056205749512
    2. 't' → logprob: -2.578890562057495
    3. ' ' → logprob: -14.828890800476074
    4. ' ' → logprob: -15.578890800476074
    5. '
' → logprob: -16.453889846801758
    6. '(t' → logprob: -16.828889846801758
    7. '`t' → logprob: -16.953889846801758
    8. '```' → logprob: -17.203889846801758
    9. '	t' → logprob: -17.391389846801758
    10. '<t' → logprob: -17.453889846801758

Token 172: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931495666503906
    2. ' ==' → logprob: -0.6931495666503906
    3. '===' → logprob: -14.31814956665039
    4. '=' → logprob: -14.56814956665039
    5. '<=' → logprob: -14.94314956665039
    6. ')==' → logprob: -15.19314956665039
    7. ' <=' → logprob: -15.56814956665039
    8. ' ' → logprob: -15.94314956665039
    9. ']==' → logprob: -16.06814956665039
    10. ' ' → logprob: -16.19314956665039

Token 173: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2014138251543045
    2. 'n' → logprob: -1.701413869857788
    3. '	n' → logprob: -15.201414108276367
    4. ' ' → logprob: -16.451414108276367
    5. ' ' → logprob: -16.576414108276367
    6. '_n' → logprob: -16.826414108276367
    7. '(n' → logprob: -17.701414108276367
    8. ' н' → logprob: -17.951414108276367
    9. '```' → logprob: -17.951414108276367
    10. ')n' → logprob: -18.451414108276367

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004775072447955608
    2. ':
' → logprob: -5.879775047302246
    3. '                           ' → logprob: -6.254775047302246
    4. '                       ' → logprob: -10.879775047302246
    5. '           ' → logprob: -11.754775047302246
    6. '<|end|>' → logprob: -12.004775047302246
    7. '                   ' → logprob: -12.129775047302246
    8. ' and' → logprob: -13.254775047302246
    9. ',' → logprob: -13.379775047302246
    10. ':

' → logprob: -13.629775047302246

Token 175: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.11849047988653183
    2. ':' → logprob: -2.24349045753479
    3. ':
' → logprob: -5.243490695953369
    4. '           ' → logprob: -9.243490219116211
    5. '                   ' → logprob: -9.368490219116211
    6. '                       ' → logprob: -9.493490219116211
    7. '):
' → logprob: -10.743490219116211
    8. '                               ' → logprob: -10.868490219116211
    9. '                            ' → logprob: -10.993490219116211
    10. ' :' → logprob: -11.493490219116211

Token 176: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.21594169735908508
    2. ' count' → logprob: -1.7159416675567627
    3. '                           ' → logprob: -4.715941905975342
    4. '                               ' → logprob: -5.215941905975342
    5. '                       ' → logprob: -11.340941429138184
    6. '                            ' → logprob: -12.215941429138184
    7. '           ' → logprob: -12.465941429138184
    8. '                   ' → logprob: -12.465941429138184
    9. '   ' → logprob: -12.590941429138184
    10. '```' → logprob: -12.590941429138184

Token 177: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10064440220594406
    2. '+=' → logprob: -2.35064435005188
    3. '                           ' → logprob: -8.2256441116333
    4. '                            ' → logprob: -8.8506441116333
    5. ']+=' → logprob: -11.9756441116333
    6. '                               ' → logprob: -12.6006441116333
    7. '                        ' → logprob: -12.6006441116333
    8. '+' → logprob: -12.7256441116333
    9. '```' → logprob: -13.4756441116333
    10. '            ' → logprob: -13.7256441116333

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889111340045929
    2. ' ' → logprob: -2.5788910388946533
    3. '```' → logprob: -15.078890800476074
    4. '                       ' → logprob: -15.453890800476074
    5. '<|end|>' → logprob: -15.703890800476074
    6. '(' → logprob: -15.703890800476074
    7. '   ' → logprob: -16.26639175415039
    8. '                           ' → logprob: -16.32889175415039
    9. '0' → logprob: -16.57889175415039
    10. ' ' → logprob: -16.89139175415039

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.500045776367188
    4. '```' → logprob: -17.500045776367188
    5. '<|end|>' → logprob: -18.375045776367188
    6. '                               ' → logprob: -18.562545776367188
    7. '                       ' → logprob: -18.687545776367188
    8. '                           ' → logprob: -19.000045776367188
    9. '１' → logprob: -19.375045776367188
    10. '           ' → logprob: -19.562545776367188

Token 180: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003935564309358597
    2. 'else' → logprob: -6.50393533706665
    3. ' else' → logprob: -6.75393533706665
    4. '               ' → logprob: -7.50393533706665
    5. 'return' → logprob: -8.378935813903809
    6. '                        ' → logprob: -9.378935813903809
    7. '       ' → logprob: -9.378935813903809
    8. '                        
' → logprob: -9.753935813903809
    9. '                               ' → logprob: -9.878935813903809
    10. ' return' → logprob: -10.128935813903809

Token 181: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.014318867586553097
    2. 'else' → logprob: -4.514318943023682
    3. 'return' → logprob: -6.889318943023682
    4. '               ' → logprob: -7.014318943023682
    5. ' else' → logprob: -7.139318943023682
    6. 'elif' → logprob: -8.014318466186523
    7. '                   ' → logprob: -10.264318466186523
    8. ' return' → logprob: -10.264318466186523
    9. '                               ' → logprob: -10.264318466186523
    10. '                           ' → logprob: -10.514318466186523

Token 182: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.6832557916641235
    2. '                       ' → logprob: -0.9332557916641235
    3. 'else' → logprob: -2.308255672454834
    4. ' elif' → logprob: -6.808255672454834
    5. 'return' → logprob: -7.183255672454834
    6. ' else' → logprob: -8.808256149291992
    7. '```' → logprob: -9.183256149291992
    8. '                   ' → logprob: -9.683256149291992
    9. '               ' → logprob: -10.058256149291992
    10. '                           ' → logprob: -10.558256149291992

Token 183: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08894240111112595
    2. ' t' → logprob: -2.463942289352417
    3. ' ' → logprob: -14.588942527770996
    4. '	t' → logprob: -14.713942527770996
    5. 'False' → logprob: -14.838942527770996
    6. '`t' → logprob: -15.088942527770996
    7. 'True' → logprob: -15.463942527770996
    8. '   ' → logprob: -15.588942527770996
    9. ' ' → logprob: -15.588942527770996
    10. '```' → logprob: -15.713942527770996

Token 184: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7616186738014221
    2. '>' → logprob: -1.5116186141967773
    3. ' <' → logprob: -1.5116186141967773
    4. ' >' → logprob: -2.3866186141967773
    5. ' ' → logprob: -11.261618614196777
    6. ' >=' → logprob: -12.011618614196777
    7. '>=' → logprob: -12.261618614196777
    8. '[' → logprob: -12.761618614196777
    9. '```' → logprob: -12.761618614196777
    10. ' ' → logprob: -13.011618614196777

Token 185: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00861528143286705
    2. ' n' → logprob: -4.758615493774414
    3. '	n' → logprob: -15.008615493774414
    4. '<n' → logprob: -15.758615493774414
    5. '                           ' → logprob: -16.508615493774414
    6. '_n' → logprob: -16.758615493774414
    7. '(n' → logprob: -16.883615493774414
    8. ')n' → logprob: -17.008615493774414
    9. '                       ' → logprob: -17.258615493774414
    10. '                   ' → logprob: -17.258615493774414

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19539181888103485
    2. ':
' → logprob: -2.320391893386841
    3. '                           ' → logprob: -2.570391893386841
    4. '                       ' → logprob: -6.195391654968262
    5. '           ' → logprob: -7.945391654968262
    6. '                               ' → logprob: -9.195391654968262
    7. 'continue' → logprob: -9.820391654968262
    8. ' continue' → logprob: -10.070391654968262
    9. '                   ' → logprob: -10.320391654968262
    10. ':

' → logprob: -11.195391654968262

Token 187: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.09406450390815735
    2. 'continue' → logprob: -2.969064474105835
    3. '                               ' → logprob: -3.344064474105835
    4. '                       ' → logprob: -6.094064712524414
    5. '           ' → logprob: -7.969064712524414
    6. '               ' → logprob: -8.969064712524414
    7. '   ' → logprob: -9.094064712524414
    8. ' continue' → logprob: -9.344064712524414
    9. '                   ' → logprob: -9.594064712524414
    10. '```' → logprob: -10.344064712524414

Token 188: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.21035116910934448
    2. 'continue' → logprob: -1.8353512287139893
    3. 'pass' → logprob: -3.9603512287139893
    4. ' continue' → logprob: -5.58535099029541
    5. ' max' → logprob: -5.83535099029541
    6. 'for' → logprob: -6.46035099029541
    7. ' pass' → logprob: -6.83535099029541
    8. 'break' → logprob: -7.21035099029541
    9. 'd' → logprob: -7.33535099029541
    10. 'min' → logprob: -8.58535099029541

Token 189: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0036428342573344707
    2. 'd' → logprob: -5.628643035888672
    3. '_' → logprob: -10.253643035888672
    4. '_c' → logprob: -12.003643035888672
    5. '```' → logprob: -15.253643035888672
    6. '_a' → logprob: -15.628643035888672
    7. '_t' → logprob: -15.753643035888672
    8. ' d' → logprob: -15.878643035888672
    9. '_b' → logprob: -16.128643035888672
    10. 'def' → logprob: -16.378643035888672

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693357467651367
    2. '=' → logprob: -2.1269335746765137
    3. '=int' → logprob: -12.626934051513672
    4. ' ' → logprob: -13.751934051513672
    5. '=max' → logprob: -15.251934051513672
    6. ',' → logprob: -15.626934051513672
    7. '   ' → logprob: -15.876934051513672
    8. '<|end|>' → logprob: -16.001934051513672
    9. '```' → logprob: -16.501934051513672
    10. 'max' → logprob: -16.626934051513672

Token 191: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011703446507453918
    2. ' int' → logprob: -6.7511701583862305
    3. '(int' → logprob: -16.501171112060547
    4. '=int' → logprob: -18.376171112060547
    5. '[int' → logprob: -18.501171112060547
    6. '<int' → logprob: -18.626171112060547
    7. '	int' → logprob: -20.251171112060547
    8. ':int' → logprob: -20.876171112060547
    9. '```' → logprob: -21.126171112060547
    10. ' ' → logprob: -21.376171112060547

Token 192: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.030899707227945328
    2. '(n' → logprob: -3.5308997631073
    3. ' (' → logprob: -7.405899524688721
    4. '(int' → logprob: -7.905899524688721
    5. '(' → logprob: -9.530900001525879
    6. 'int' → logprob: -9.655900001525879
    7. ' ((' → logprob: -10.780900001525879
    8. '   ' → logprob: -12.280900001525879
    9. '```' → logprob: -13.030900001525879
    10. ' ' → logprob: -13.405900001525879

Token 193: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000387535837944597
    2. 'n' → logprob: -8.000387191772461
    3. ' (' → logprob: -9.875387191772461
    4. 'int' → logprob: -15.125387191772461
    5. '(' → logprob: -16.37538719177246
    6. '   ' → logprob: -16.62538719177246
    7. '
' → logprob: -16.75038719177246
    8. '((' → logprob: -16.87538719177246
    9. '```' → logprob: -17.75038719177246
    10. '[n' → logprob: -17.87538719177246

Token 194: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0077320272102952
    2. '-' → logprob: -4.882731914520264
    3. ' ' → logprob: -10.132732391357422
    4. '-t' → logprob: -10.507732391357422
    5. '-s' → logprob: -11.007732391357422
    6. 't' → logprob: -11.257732391357422
    7. ' (' → logprob: -12.257732391357422
    8. '   ' → logprob: -12.382732391357422
    9. '**' → logprob: -12.882732391357422
    10. 'd' → logprob: -13.632732391357422

Token 195: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004114730749279261
    2. ' t' → logprob: -5.504114627838135
    3. 's' → logprob: -10.254115104675293
    4. '   ' → logprob: -15.129115104675293
    5. ' s' → logprob: -15.254115104675293
    6. ' ' → logprob: -15.504115104675293
    7. '	t' → logprob: -15.754115104675293
    8. 'sq' → logprob: -16.879114151000977
    9. '(t' → logprob: -17.504114151000977
    10. '    ' → logprob: -17.504114151000977

Token 196: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -5.56233171664644e-05
    2. '**' → logprob: -10.000055313110352
    3. ')' → logprob: -11.750055313110352
    4. ' )' → logprob: -13.625055313110352
    5. '0' → logprob: -14.625055313110352
    6. ' ' → logprob: -15.375055313110352
    7. '[' → logprob: -15.875055313110352
    8. '   ' → logprob: -16.50005531311035
    9. ')//' → logprob: -16.75005531311035
    10. '```' → logprob: -17.50005531311035

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0087516784551553e-05
    2. '.' → logprob: -12.37501049041748
    3. '2' → logprob: -13.00001049041748
    4. ' ' → logprob: -13.25001049041748
    5. '
' → logprob: -14.62501049041748
    6. '```' → logprob: -15.18751049041748
    7. '1' → logprob: -15.43751049041748
    8. '   ' → logprob: -15.68751049041748
    9. '**' → logprob: -15.75001049041748
    10. '(' → logprob: -16.187509536743164

Token 198: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17984212934970856
    2. '0' → logprob: -1.8048421144485474
    3. '**' → logprob: -10.304841995239258
    4. '```' → logprob: -10.804841995239258
    5. '2' → logprob: -11.929841995239258
    6. '1' → logprob: -12.304841995239258
    7. '                   ' → logprob: -12.429841995239258
    8. 'sq' → logprob: -12.679841995239258
    9. ' .' → logprob: -12.804841995239258
    10. ' ' → logprob: -13.054841995239258

Token 199: '5' (ID: 20)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. '5' → logprob: -8.750179290771484
    3. ' ' → logprob: -11.750179290771484
    4. 'sq' → logprob: -12.500179290771484
    5. 'sqrt' → logprob: -12.750179290771484
    6. '```' → logprob: -12.875179290771484
    7. '**' → logprob: -14.000179290771484
    8. '1' → logprob: -14.000179290771484
    9. '4' → logprob: -14.750179290771484
    10. '2' → logprob: -14.875179290771484

Token 200: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18677900731563568
    2. ')' → logprob: -1.9367790222167969
    3. '                           ' → logprob: -3.686779022216797
    4. '           ' → logprob: -7.561779022216797
    5. ')
' → logprob: -8.436779022216797
    6. '               ' → logprob: -8.561779022216797
    7. '                               ' → logprob: -9.436779022216797
    8. '                       ' → logprob: -9.936779022216797
    9. '):
' → logprob: -10.061779022216797
    10. '                   ' → logprob: -10.811779022216797

Token 201: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.003037962829694152
    2. '           ' → logprob: -6.378037929534912
    3. '               ' → logprob: -7.128037929534912
    4. '                               ' → logprob: -8.25303840637207
    5. ' for' → logprob: -9.62803840637207
    6. '                   ' → logprob: -9.75303840637207
    7. 'for' → logprob: -9.87803840637207
    8. '                       ' → logprob: -10.37803840637207
    9. '                            ' → logprob: -10.50303840637207
    10. '```' → logprob: -11.25303840637207

Token 202: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.027295146137475967
    2. ' for' → logprob: -3.7772951126098633
    3. '                           ' → logprob: -5.527295112609863
    4. '	for' → logprob: -10.402295112609863
    5. '                               ' → logprob: -10.902295112609863
    6. '           ' → logprob: -12.402295112609863
    7. '                            ' → logprob: -12.652295112609863
    8. '   ' → logprob: -12.902295112609863
    9. '                             ' → logprob: -13.152295112609863
    10. '                       ' → logprob: -13.527295112609863

Token 203: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38687369227409363
    2. ' d' → logprob: -1.136873722076416
    3. '	d' → logprob: -13.636873245239258
    4. '   ' → logprob: -14.261873245239258
    5. '_d' → logprob: -15.261873245239258
    6. '```' → logprob: -15.386873245239258
    7. ')d' → logprob: -16.011873245239258
    8. ' ' → logprob: -16.886873245239258
    9. 'c' → logprob: -17.261873245239258
    10. '       ' → logprob: -17.386873245239258

Token 204: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016110146418213844
    2. 'in' → logprob: -4.141109943389893
    3. 'd' → logprob: -9.51611042022705
    4. ' ' → logprob: -13.39111042022705
    5. '<|end|>' → logprob: -15.76611042022705
    6. 'range' → logprob: -16.141109466552734
    7. '	in' → logprob: -16.516109466552734
    8. 'n' → logprob: -16.766109466552734
    9. '```' → logprob: -16.891109466552734
    10. ')' → logprob: -17.266109466552734

Token 205: ' range' (ID: 3352)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.13095630705356598
    2. 'd' → logprob: -3.0059564113616943
    3. '(b' → logprob: -3.2559564113616943
    4. ' d' → logprob: -4.130956172943115
    5. ' (' → logprob: -4.755956172943115
    6. 'range' → logprob: -5.130956172943115
    7. ' range' → logprob: -6.255956172943115
    8. 'b' → logprob: -7.005956172943115
    9. ' b' → logprob: -7.630956172943115
    10. '(range' → logprob: -7.880956172943115

Token 206: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.03008877858519554
    2. '(d' → logprob: -3.5300886631011963
    3. ' (' → logprob: -8.655088424682617
    4. '(' → logprob: -9.530088424682617
    5. '                               ' → logprob: -10.530088424682617
    6. '(b' → logprob: -10.655088424682617
    7. '                           ' → logprob: -10.780088424682617
    8. '                                   ' → logprob: -12.030088424682617
    9. '(k' → logprob: -12.780088424682617
    10. '                                       ' → logprob: -13.530088424682617

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002779014757834375
    2. ',d' → logprob: -8.750277519226074
    3. 'd' → logprob: -10.000277519226074
    4. '+' → logprob: -10.500277519226074
    5. ' ,' → logprob: -10.625277519226074
    6. ',max' → logprob: -10.875277519226074
    7. '                               ' → logprob: -14.250277519226074
    8. '                           ' → logprob: -14.750277519226074
    9. '+,' → logprob: -14.750277519226074
    10. ',t' → logprob: -15.375277519226074

Token 208: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00026288547087460756
    2. ' max' → logprob: -8.250263214111328
    3. '           ' → logprob: -14.250263214111328
    4. '(max' → logprob: -14.750263214111328
    5. '               ' → logprob: -15.625263214111328
    6. '   ' → logprob: -15.875263214111328
    7. '                   ' → logprob: -17.000263214111328
    8. '                       ' → logprob: -17.125263214111328
    9. '                           ' → logprob: -17.375263214111328
    10. 'd' → logprob: -17.375263214111328

Token 209: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.14275111258029938
    2. 'd' → logprob: -2.0177512168884277
    3. '+' → logprob: -10.14275074005127
    4. 'max' → logprob: -10.51775074005127
    5. '+d' → logprob: -12.76775074005127
    6. '	d' → logprob: -13.39275074005127
    7. 'a' → logprob: -14.14275074005127
    8. '```' → logprob: -14.51775074005127
    9. '   ' → logprob: -14.76775074005127
    10. '
' → logprob: -15.26775074005127

Token 210: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.673547563375905e-05
    2. ' +' → logprob: -9.375086784362793
    3. '+d' → logprob: -14.125086784362793
    4. ')+' → logprob: -14.625086784362793
    5. 'd' → logprob: -15.000086784362793
    6. '()+' → logprob: -16.500085830688477
    7. '```' → logprob: -16.625085830688477
    8. '+
' → logprob: -16.875085830688477
    9. ')' → logprob: -17.875085830688477
    10. ',' → logprob: -18.125085830688477

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002943479048553854
    2. '+' → logprob: -8.25029468536377
    3. 'd' → logprob: -10.37529468536377
    4. ' ' → logprob: -13.75029468536377
    5. '+d' → logprob: -15.37529468536377
    6. '```' → logprob: -15.87529468536377
    7. '   ' → logprob: -16.125293731689453
    8. ')' → logprob: -16.625293731689453
    9. ' d' → logprob: -16.750293731689453
    10. '
' → logprob: -16.875293731689453

Token 212: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007866155356168747
    2. '):
' → logprob: -5.132866382598877
    3. ':' → logprob: -7.007866382598877
    4. '():' → logprob: -7.507866382598877
    5. '+' → logprob: -7.757866382598877
    6. '():
' → logprob: -11.507865905761719
    7. '                               ' → logprob: -12.007865905761719
    8. '                           ' → logprob: -12.132865905761719
    9. '**' → logprob: -12.507865905761719
    10. ')' → logprob: -12.632865905761719

Token 213: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.12962260842323303
    2. 'd' → logprob: -2.1296226978302
    3. ' d' → logprob: -6.879622459411621
    4. '<|end|>' → logprob: -8.004622459411621
    5. '                           ' → logprob: -8.254622459411621
    6. '                                   ' → logprob: -8.629622459411621
    7. '                             ' → logprob: -8.629622459411621
    8. '                              ' → logprob: -8.879622459411621
    9. '                                ' → logprob: -9.129622459411621
    10. '                       ' → logprob: -9.379622459411621

Token 214: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0009128939709626138
    2. ' d' → logprob: -7.000912666320801
    3. '                               ' → logprob: -13.5009126663208
    4. '                                   ' → logprob: -17.000913619995117
    5. '                           ' → logprob: -18.375913619995117
    6. '```' → logprob: -18.500913619995117
    7. ')d' → logprob: -18.875913619995117
    8. '   ' → logprob: -19.375913619995117
    9. '	d' → logprob: -19.875913619995117
    10. '                                ' → logprob: -20.000913619995117

Token 215: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -0.0006800267728976905
    2. '_squared' → logprob: -7.500679969787598
    3. '_square' → logprob: -9.750679969787598
    4. '_' → logprob: -10.500679969787598
    5. '```' → logprob: -11.375679969787598
    6. 'd' → logprob: -11.750679969787598
    7. '**' → logprob: -11.875679969787598
    8. '_s' → logprob: -12.875679969787598
    9. '*_' → logprob: -13.250679969787598
    10. ' _' → logprob: -13.375679969787598

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300697147846222
    2. '=' → logprob: -3.1680068969726562
    3. '=d' → logprob: -12.668006896972656
    4. 'd' → logprob: -13.043006896972656
    5. '<|end|>' → logprob: -14.293006896972656
    6. '=s' → logprob: -14.668006896972656
    7. 's' → logprob: -14.793006896972656
    8. ')' → logprob: -15.543006896972656
    9. ' =
' → logprob: -15.543006896972656
    10. '                               ' → logprob: -15.543006896972656

Token 217: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16022422909736633
    2. ' d' → logprob: -1.910224199295044
    3. '	d' → logprob: -17.53522491455078
    4. '   ' → logprob: -19.16022491455078
    5. ' ' → logprob: -19.53522491455078
    6. '                               ' → logprob: -19.66022491455078
    7. '                           ' → logprob: -20.28522491455078
    8. '(d' → logprob: -20.53522491455078
    9. ')d' → logprob: -21.03522491455078
    10. '_d' → logprob: -21.28522491455078

Token 218: '*d' (ID: 81685)
  Prédit: '*d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.00032402228680439293
    2. 'd' → logprob: -8.375324249267578
    3. '*' → logprob: -9.375324249267578
    4. ' *' → logprob: -12.500324249267578
    5. '**' → logprob: -12.625324249267578
    6. '```' → logprob: -14.250324249267578
    7. ' d' → logprob: -14.875324249267578
    8. '*s' → logprob: -15.375324249267578
    9. '*
' → logprob: -16.375324249267578
    10. '***' → logprob: -16.750324249267578

Token 219: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.35038983821868896
    2. '<|end|>' → logprob: -1.225389838218689
    3. '```' → logprob: -7.7253899574279785
    4. 'd' → logprob: -7.9753899574279785
    5. '							' → logprob: -8.60038948059082
    6. '<|end|>' → logprob: -8.72538948059082
    7. '
' → logprob: -8.85038948059082
    8. '                                ' → logprob: -9.35038948059082
    9. '                                
' → logprob: -9.35038948059082
    10. '[' → logprob: -9.85038948059082

Token 220: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.02731730416417122
    2. '<|end|>' → logprob: -4.152317523956299
    3. 'd' → logprob: -4.777317523956299
    4. '```' → logprob: -6.777317523956299
    5. '
' → logprob: -7.652317523956299
    6. 't' → logprob: -8.02731704711914
    7. '                                
' → logprob: -8.52731704711914
    8. 'n' → logprob: -8.90231704711914
    9. '                                ' → logprob: -9.52731704711914
    10. 's' → logprob: -9.65231704711914

Token 221: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.14889124035835266
    2. 's' → logprob: -2.0238912105560303
    3. ' u' → logprob: -5.898891448974609
    4. 'sum' → logprob: -6.273891448974609
    5. 't' → logprob: -7.398891448974609
    6. ' s' → logprob: -7.398891448974609
    7. 'if' → logprob: -9.02389144897461
    8. 'total' → logprob: -9.27389144897461
    9. '```' → logprob: -10.64889144897461
    10. 'v' → logprob: -10.77389144897461

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868756890296936
    2. '=' → logprob: -1.1368756294250488
    3. 's' → logprob: -12.886876106262207
    4. ' =
' → logprob: -14.761876106262207
    5. '=u' → logprob: -14.886876106262207
    6. 'u' → logprob: -15.261876106262207
    7. '=s' → logprob: -15.386876106262207
    8. ' ==' → logprob: -15.761876106262207
    9. '<|end|>' → logprob: -16.01187515258789
    10. '=
' → logprob: -16.26187515258789

Token 223: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.048598047345876694
    2. ' t' → logprob: -3.048598051071167
    3. 's' → logprob: -11.548598289489746
    4. ' s' → logprob: -14.798598289489746
    5. '`t' → logprob: -15.673598289489746
    6. '	t' → logprob: -15.798598289489746
    7. '   ' → logprob: -15.798598289489746
    8. ' ' → logprob: -16.17359733581543
    9. '(t' → logprob: -17.67359733581543
    10. 'u' → logprob: -18.04859733581543

Token 224: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12696129083633423
    2. ' +' → logprob: -2.1269612312316895
    3. '+d' → logprob: -10.626961708068848
    4. '+s' → logprob: -12.626961708068848
    5. '+t' → logprob: -12.751961708068848
    6. '+
' → logprob: -14.251961708068848
    7. ' plus' → logprob: -15.001961708068848
    8. '+i' → logprob: -15.501961708068848
    9. '＋' → logprob: -15.501961708068848
    10. 'u' → logprob: -15.626961708068848

Token 225: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014164801687002182
    2. ' d' → logprob: -4.264164924621582
    3. '                               ' → logprob: -13.764164924621582
    4. '                                   ' → logprob: -15.889164924621582
    5. ' ' → logprob: -16.764163970947266
    6. '   ' → logprob: -16.889163970947266
    7. '                                       ' → logprob: -17.639163970947266
    8. '                                ' → logprob: -17.889163970947266
    9. '	d' → logprob: -18.139163970947266
    10. '                           ' → logprob: -18.264163970947266

Token 226: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -5.512236498361744e-07
    2. '_squared' → logprob: -15.375000953674316
    3. '*_' → logprob: -16.875
    4. '```' → logprob: -17.125
    5. '_square' → logprob: -17.25
    6. '_sz' → logprob: -17.5
    7. '_sb' → logprob: -18.5
    8. 'sq' → logprob: -18.5
    9. '_sql' → logprob: -18.625
    10. '##_' → logprob: -18.75

Token 227: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.016630474478006363
    2. '==' → logprob: -5.64163064956665
    3. '<|end|>' → logprob: -5.64163064956665
    4. '=' → logprob: -5.76663064956665
    5. 'if' → logprob: -5.89163064956665
    6. '```' → logprob: -6.76663064956665
    7. ' if' → logprob: -6.89163064956665
    8. ' ==' → logprob: -7.01663064956665
    9. '                                ' → logprob: -9.391630172729492
    10. '							' → logprob: -9.516630172729492

Token 228: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.00044795009307563305
    2. 'if' → logprob: -8.375448226928711
    3. '```' → logprob: -9.375448226928711
    4. ' if' → logprob: -9.750448226928711
    5. '=' → logprob: -10.750448226928711
    6. '<|end|>' → logprob: -10.875448226928711
    7. '                                ' → logprob: -11.875448226928711
    8. '==' → logprob: -12.125448226928711
    9. '                                
' → logprob: -12.125448226928711
    10. '                              ' → logprob: -12.875448226928711

Token 229: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6651763916015625
    2. 'if' (adapté à ' if') → logprob: -1.4151763916015625
    3. '                               ' → logprob: -1.4151763916015625
    4. '```' → logprob: -11.165176391601562
    5. '                                   ' → logprob: -11.540176391601562
    6. '                                ' → logprob: -11.665176391601562
    7. '                           ' → logprob: -12.790176391601562
    8. 'If' → logprob: -12.790176391601562
    9. '               ' → logprob: -13.290176391601562
    10. '       ' → logprob: -13.290176391601562

Token 230: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.02324605919420719
    2. 'u' → logprob: -3.7732460498809814
    3. '                               ' → logprob: -14.773245811462402
    4. '
' → logprob: -16.27324676513672
    5. '                                   ' → logprob: -17.27324676513672
    6. '                                ' → logprob: -17.27324676513672
    7. '	u' → logprob: -17.52324676513672
    8. '```' → logprob: -17.64824676513672
    9. ' ' → logprob: -17.89824676513672
    10. '    ' → logprob: -18.27324676513672

Token 231: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03804263845086098
    2. '==' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.413043022155762
    4. ' <=' → logprob: -15.663043022155762
    5. '==
' → logprob: -16.413042068481445
    6. '```' → logprob: -16.413042068481445
    7. '=' → logprob: -16.663042068481445
    8. ')==' → logprob: -16.663042068481445
    9. ' ==
' → logprob: -17.038042068481445
    10. ']==' → logprob: -17.038042068481445

Token 232: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020667314529419
    2. ' n' → logprob: -2.3502066135406494
    3. '	n' → logprob: -16.97520637512207
    4. '```' → logprob: -18.47520637512207
    5. '_n' → logprob: -19.10020637512207
    6. ' ' → logprob: -19.10020637512207
    7. ' ' → logprob: -19.72520637512207
    8. '
' → logprob: -19.72520637512207
    9. '   ' → logprob: -20.85020637512207
    10. '(n' → logprob: -21.35020637512207

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003214318538084626
    2. ':
' → logprob: -6.003214359283447
    3. '                                   ' → logprob: -7.253214359283447
    4. '                               ' → logprob: -10.628213882446289
    5. '           ' → logprob: -13.628213882446289
    6. ':

' → logprob: -14.253213882446289
    7. ' and' → logprob: -14.253213882446289
    8. '<|end|>' → logprob: -14.253213882446289
    9. ':return' → logprob: -14.378213882446289
    10. ' :' → logprob: -14.378213882446289

Token 234: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.0004168489249423146
    2. ':
' → logprob: -9.00041675567627
    3. '           ' → logprob: -9.50041675567627
    4. ':' → logprob: -9.75041675567627
    5. '                               ' → logprob: -10.25041675567627
    6. '                   ' → logprob: -10.37541675567627
    7. '                                  ' → logprob: -10.50041675567627
    8. '                                       ' → logprob: -11.12541675567627
    9. '```' → logprob: -11.25041675567627
    10. '                                           ' → logprob: -11.50041675567627

Token 235: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.07900083065032959
    2. ' count' → logprob: -2.579000949859619
    3. '                                       ' → logprob: -9.329000473022461
    4. '                                   ' → logprob: -10.829000473022461
    5. '                               ' → logprob: -13.829000473022461
    6. '                                    ' → logprob: -15.079000473022461
    7. '                                           ' → logprob: -15.704000473022461
    8. 'counts' → logprob: -15.704000473022461
    9. '   ' → logprob: -15.829000473022461
    10. '               ' → logprob: -16.20400047302246

Token 236: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.038125261664390564
    2. '+=' → logprob: -3.2881252765655518
    3. '                                    ' → logprob: -10.163125038146973
    4. '                               ' → logprob: -11.538125038146973
    5. '                                ' → logprob: -11.913125038146973
    6. '            ' → logprob: -12.038125038146973
    7. '+' → logprob: -12.288125038146973
    8. '                                   ' → logprob: -12.538125038146973
    9. '                            ' → logprob: -12.663125038146973
    10. '                ' → logprob: -12.913125038146973

Token 237: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2811616063117981
    2. '1' → logprob: -1.4061615467071533
    3. '                               ' → logprob: -11.906161308288574
    4. '                                   ' → logprob: -13.406161308288574
    5. '```' → logprob: -14.031161308288574
    6. '                                       ' → logprob: -14.781161308288574
    7. ' ' → logprob: -15.343661308288574
    8. '                                           ' → logprob: -15.468661308288574
    9. '+' → logprob: -15.656161308288574
    10. '0' → logprob: -15.843661308288574

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -17.0000057220459
    4. '   ' → logprob: -18.6250057220459
    5. '
' → logprob: -18.6250057220459
    6. '                               ' → logprob: -19.1875057220459
    7. '１' → logprob: -19.7500057220459
    8. '           ' → logprob: -19.8750057220459
    9. '<|end|>' → logprob: -19.9375057220459
    10. '                       ' → logprob: -20.1250057220459

Token 239: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0010793721303343773
    2. '                                
' → logprob: -8.251079559326172
    3. 'else' → logprob: -8.876079559326172
    4. 'return' → logprob: -9.126079559326172
    5. '                                ' → logprob: -9.376079559326172
    6. '       ' → logprob: -9.626079559326172
    7. ' else' → logprob: -9.626079559326172
    8. '                       ' → logprob: -9.751079559326172
    9. '\n' → logprob: -9.876079559326172
    10. '                           ' → logprob: -10.126079559326172

Token 240: '   ' (ID: 271)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0011170001234859228
    2. '                                ' → logprob: -8.251116752624512
    3. '<|end|>' → logprob: -8.251116752624512
    4. 'else' → logprob: -8.626116752624512
    5. '                                
' → logprob: -8.751116752624512
    6. ' else' → logprob: -9.126116752624512
    7. '               ' → logprob: -11.001116752624512
    8. '\' → logprob: -11.126116752624512
    9. '                                   ' → logprob: -11.126116752624512
    10. '```' → logprob: -11.376116752624512

Token 241: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.3273144960403442
    2. '\n' → logprob: -1.3273144960403442
    3. '                               ' → logprob: -1.8273144960403442
    4. '\' → logprob: -2.3273143768310547
    5. '                                
' → logprob: -3.4523143768310547
    6. '```' → logprob: -3.7023143768310547
    7. '<|end|>' → logprob: -3.8273143768310547
    8. ' return' → logprob: -4.077314376831055
    9. ' 
' → logprob: -4.452314376831055
    10. '                        
' → logprob: -4.452314376831055

Token 242: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0009114635176956654
    2. ' count' → logprob: -7.000911235809326
    3. '   ' → logprob: -18.250911712646484
    4. '[count' → logprob: -21.250911712646484
    5. '	count' → logprob: -21.250911712646484
    6. '(count' → logprob: -21.625911712646484
    7. ' ' → logprob: -21.750911712646484
    8. '$count' → logprob: -22.125911712646484
    9. 'counts' → logprob: -22.875911712646484
    10. '
' → logprob: -23.125911712646484

Token 243: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0965824127197266
    2. '
' → logprob: -1.3465824127197266
    3. 'n' → logprob: -1.4715824127197266
    4. 'for' → logprob: -3.0965824127197266
    5. '<|end|>' → logprob: -3.0965824127197266
    6. '#' → logprob: -3.5965824127197266
    7. 'print' → logprob: -3.5965824127197266
    8. 'if' → logprob: -4.596582412719727
    9. 'import' → logprob: -5.346582412719727
    10. '  
' → logprob: -5.596582412719727

Token 245: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5639908909797668
    2. ' i' → logprob: -1.688990831375122
    3. ' num' → logprob: -2.063990831375122
    4. ' line' → logprob: -2.688990831375122
    5. ' number' → logprob: -3.688990831375122
    6. ' x' → logprob: -4.438991069793701
    7. 'n' → logprob: -5.063991069793701
    8. ' arg' → logprob: -5.188991069793701
    9. ' ' → logprob: -6.813991069793701
    10. ' _' → logprob: -7.313991069793701

Token 246: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02325025200843811
    2. 'in' → logprob: -3.7732503414154053
    3. ' ' → logprob: -13.148250579833984
    4. 'import' → logprob: -14.023250579833984
    5. '	in' → logprob: -14.273250579833984
    6. 's' → logprob: -15.398250579833984
    7. '```' → logprob: -15.398250579833984
    8. '_in' → logprob: -15.648250579833984
    9. 'line' → logprob: -15.648250579833984
    10. '[' → logprob: -16.023250579833984

Token 247: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2519320547580719
    2. ' sys' → logprob: -1.5019320249557495
    3. '=sys' → logprob: -13.126932144165039
    4. '	sys' → logprob: -14.126932144165039
    5. '(sys' → logprob: -15.251932144165039
    6. 'stdin' → logprob: -17.50193214416504
    7. 'iter' → logprob: -18.87693214416504
    8. '_sys' → logprob: -19.62693214416504
    9. '```' → logprob: -19.62693214416504
    10. 'in' → logprob: -19.62693214416504

Token 248: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03014278970658779
    2. 'stdin' → logprob: -3.5301427841186523
    3. '(stdin' → logprob: -8.405142784118652
    4. ' stdin' → logprob: -9.030142784118652
    5. 'import' → logprob: -10.780142784118652
    6. 'in' → logprob: -10.905142784118652
    7. '.readline' → logprob: -12.530142784118652
    8. 'input' → logprob: -13.030142784118652
    9. '.readlines' → logprob: -13.655142784118652
    10. '```' → logprob: -14.030142784118652

Token 249: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5174201726913452
    2. ':' → logprob: -1.0174201726913452
    3. '.readlines' → logprob: -3.3924202919006348
    4. ':
' → logprob: -5.017420291900635
    5. '.' → logprob: -6.892420291900635
    6. ' in' → logprob: -7.767420291900635
    7. '<|end|>' → logprob: -8.892419815063477
    8. '```' → logprob: -9.142419815063477
    9. '   ' → logprob: -9.517419815063477
    10. '.rstrip' → logprob: -10.142419815063477

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1017073392868042
    2. ' n' → logprob: -2.7267074584960938
    3. 'n' → logprob: -3.4767074584960938
    4. '    
' → logprob: -8.476707458496094
    5. '```' → logprob: -10.101707458496094
    6. '	n' → logprob: -10.601707458496094
    7. ' number' → logprob: -10.601707458496094
    8. ' line' → logprob: -10.851707458496094
    9. ' input' → logprob: -11.976707458496094
    10. '(n' → logprob: -12.226707458496094

Token 251: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3880549967288971
    2. ' n' → logprob: -1.1380549669265747
    3. 'num' → logprob: -7.388054847717285
    4. '   ' → logprob: -8.388054847717285
    5. ' number' → logprob: -8.513054847717285
    6. ' num' → logprob: -9.388054847717285
    7. 'number' → logprob: -10.388054847717285
    8. ' line' → logprob: -12.263054847717285
    9. '    
' → logprob: -12.388054847717285
    10. 'value' → logprob: -12.638054847717285

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023652255535126
    2. ' =' → logprob: -1.9102364778518677
    3. '=int' → logprob: -11.410236358642578
    4. '=
' → logprob: -15.035236358642578
    5. ' =
' → logprob: -16.035236358642578
    6. '=line' → logprob: -16.035236358642578
    7. ')' → logprob: -16.410236358642578
    8. '.=' → logprob: -16.410236358642578
    9. '＝' → logprob: -16.410236358642578
    10. ' ' → logprob: -16.660236358642578

Token 253: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.627176768844947e-05
    2. ' int' → logprob: -9.250096321105957
    3. 'line' → logprob: -16.75009536743164
    4. '   ' → logprob: -20.62509536743164
    5. '=int' → logprob: -20.75009536743164
    6. ' ' → logprob: -22.12509536743164
    7. '[int' → logprob: -22.12509536743164
    8. '(int' → logprob: -22.75009536743164
    9. ' line' → logprob: -23.25009536743164
    10. '<int' → logprob: -23.37509536743164

Token 254: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0002619318547658622
    2. '(' → logprob: -8.250262260437012
    3. 'line' → logprob: -14.875262260437012
    4. ' line' → logprob: -15.875262260437012
    5. '=line' → logprob: -16.375261306762695
    6. '[line' → logprob: -17.625261306762695
    7. '(
' → logprob: -18.375261306762695
    8. ' (' → logprob: -18.625261306762695
    9. '	line' → logprob: -18.625261306762695
    10. '#line' → logprob: -18.750261306762695

Token 255: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.023298820480704308
    2. ')' → logprob: -3.773298740386963
    3. '.rstrip' → logprob: -10.398299217224121
    4. '.' → logprob: -11.023299217224121
    5. '())' → logprob: -13.398299217224121
    6. 'strip' → logprob: -13.398299217224121
    7. '.readline' → logprob: -13.648299217224121
    8. '().' → logprob: -13.773299217224121
    9. ')
' → logprob: -14.773299217224121
    10. ' .' → logprob: -15.773299217224121

Token 256: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0017320599872618914
    2. '())
' → logprob: -7.001731872558594
    3. '()' → logprob: -7.251731872558594
    4. ')' → logprob: -9.126731872558594
    5. '())
' → logprob: -13.876731872558594
    6. '())

' → logprob: -14.001731872558594
    7. '()
' → logprob: -15.126731872558594
    8. ' ())' → logprob: -15.501731872558594
    9. '()))' → logprob: -16.376731872558594
    10. '(' → logprob: -16.376731872558594

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023826973512768745
    2. 'print' → logprob: -3.773827075958252
    3. ' print' → logprob: -8.148826599121094
    4. 'count' → logprob: -9.148826599121094
    5. 'result' → logprob: -9.398826599121094
    6. '    
' → logprob: -9.523826599121094
    7. '```' → logprob: -11.398826599121094
    8. ' result' → logprob: -12.648826599121094
    9. '
' → logprob: -12.648826599121094
    10. '<|end|>' → logprob: -12.898826599121094

Token 258: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001295222609769553
    2. 'result' → logprob: -9.000129699707031
    3. 'if' (adapté à ' if') → logprob: -12.375129699707031
    4. ' print' → logprob: -14.125129699707031
    5. '   ' → logprob: -14.625129699707031
    6. 'res' → logprob: -15.000129699707031
    7. 'count' → logprob: -15.250129699707031
    8. '    
' → logprob: -16.00012969970703
    9. 'answer' → logprob: -17.37512969970703
    10. 'ans' → logprob: -18.37512969970703

Token 259: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004627598915249109
    2. 'n' → logprob: -5.379627704620361
    3. ' not' → logprob: -11.879627227783203
    4. ' ' → logprob: -15.754627227783203
    5. '	n' → logprob: -15.879627227783203
    6. ' ' → logprob: -16.004627227783203
    7. 'not' → logprob: -17.504627227783203
    8. '(n' → logprob: -17.879627227783203
    9. '```' → logprob: -18.379627227783203
    10. '  ' → logprob: -18.379627227783203

Token 260: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3875187039375305
    2. ' ==' → logprob: -1.1375186443328857
    3. '<=' → logprob: -7.512518882751465
    4. ' <=' → logprob: -9.762518882751465
    5. '<' → logprob: -10.637518882751465
    6. '=' → logprob: -12.137518882751465
    7. ' <' → logprob: -12.762518882751465
    8. '>' → logprob: -13.137518882751465
    9. ')==' → logprob: -13.387518882751465
    10. '===' → logprob: -13.387518882751465

Token 261: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012509774416685104
    2. ' ' → logprob: -4.387509822845459
    3. '   ' → logprob: -16.387510299682617
    4. '  ' → logprob: -17.887510299682617
    5. '-' → logprob: -18.262510299682617
    6. '=' → logprob: -18.512510299682617
    7. ' -' → logprob: -18.637510299682617
    8. '    ' → logprob: -18.950010299682617
    9. '```' → logprob: -19.200010299682617
    10. ' ' → logprob: -19.450010299682617

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.004696090007201e-05
    2. ' ' → logprob: -9.625069618225098
    3. '-' → logprob: -12.500069618225098
    4. ' -' → logprob: -15.625069618225098
    5. '```' → logprob: -17.625070571899414
    6. '   ' → logprob: -18.000070571899414
    7. '=' → logprob: -18.250070571899414
    8. '1' → logprob: -18.500070571899414
    9. '  ' → logprob: -19.250070571899414
    10. '    ' → logprob: -20.125070571899414

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49087080359458923
    2. ':
' → logprob: -0.9908708333969116
    3. '   ' → logprob: -4.115870952606201
    4. '       ' → logprob: -8.115870475769043
    5. ' :
' → logprob: -10.990870475769043
    6. ' :' → logprob: -11.490870475769043
    7. '():
' → logprob: -11.990870475769043
    8. '):
' → logprob: -12.865870475769043
    9. ',' → logprob: -13.740870475769043
    10. '    ' → logprob: -13.990870475769043

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002224364085122943
    2. '   ' → logprob: -6.127224445343018
    3. ' break' → logprob: -10.37722396850586
    4. 'break' → logprob: -12.12722396850586
    5. '	break' → logprob: -13.50222396850586
    6. '```' → logprob: -14.87722396850586
    7. '<|end|>' → logprob: -15.25222396850586
    8. '	   ' → logprob: -15.75222396850586
    9. '           ' → logprob: -15.75222396850586
    10. '     ' → logprob: -16.50222396850586

Token 265: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20191903412342072
    2. ' break' → logprob: -1.7019190788269043
    3. '   ' → logprob: -7.701919078826904
    4. '	break' → logprob: -10.201918601989746
    5. '       ' → logprob: -11.076918601989746
    6. '```' → logprob: -14.076918601989746
    7. '_break' → logprob: -16.326919555664062
    8. 'Break' → logprob: -16.451919555664062
    9. '           ' → logprob: -17.201919555664062
    10. '
' → logprob: -17.326919555664062

Token 266: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005090733524411917
    2. 'print' → logprob: -5.380090713500977
    3. ' print' → logprob: -8.380090713500977
    4. '    
' → logprob: -8.755090713500977
    5. '
' → logprob: -9.630090713500977
    6. '```' → logprob: -11.130090713500977
    7. '  
' → logprob: -14.005090713500977
    8. 'result' → logprob: -15.005090713500977
    9. '        
' → logprob: -15.005090713500977
    10. 'count' → logprob: -15.130090713500977

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02090841718018055
    2. 'print' → logprob: -3.8959083557128906
    3. ' print' → logprob: -8.52090835571289
    4. '    
' → logprob: -9.02090835571289
    5. '```' → logprob: -10.27090835571289
    6. '
' → logprob: -12.39590835571289
    7. 'count' → logprob: -12.77090835571289
    8. 'result' → logprob: -13.27090835571289
    9. 'n' → logprob: -14.14590835571289
    10. 'for' → logprob: -14.52090835571289

Token 268: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001225466257892549
    2. 'result' → logprob: -7.251225471496582
    3. ' print' → logprob: -8.001225471496582
    4. '   ' → logprob: -8.876225471496582
    5. 'count' → logprob: -10.376225471496582
    6. '```' → logprob: -12.501225471496582
    7. '    
' → logprob: -12.626225471496582
    8. 'res' → logprob: -13.751225471496582
    9. 'results' → logprob: -14.876225471496582
    10. ' result' → logprob: -15.001225471496582

Token 269: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0005543439765460789
    2. 'count' → logprob: -7.50055456161499
    3. '(' → logprob: -13.625554084777832
    4. ' count' → logprob: -16.25055503845215
    5. '[count' → logprob: -18.25055503845215
    6. '=count' → logprob: -18.50055503845215
    7. '()' → logprob: -19.25055503845215
    8. ',count' → logprob: -19.25055503845215
    9. '(c' → logprob: -19.87555503845215
    10. '<count' → logprob: -20.12555503845215

Token 270: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -3.6789137084269896e-05
    2. '_rep' → logprob: -10.75003719329834
    3. '_' → logprob: -11.50003719329834
    4. ')' → logprob: -13.62503719329834
    5. ')_' → logprob: -13.62503719329834
    6. '_s' → logprob: -14.25003719329834
    7. '_res' → logprob: -14.50003719329834
    8. '_repr' → logprob: -14.62503719329834
    9. 'represent' → logprob: -15.87503719329834
    10. '_ex' → logprob: -16.125036239624023

Token 271: 'present' (ID: 47421)
  Prédit: 'present'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'present' → logprob: -8.220573363360018e-05
    2. '_present' → logprob: -10.000082015991211
    3. 'resent' → logprob: -10.375082015991211
    4. 'represent' → logprob: -13.125082015991211
    5. 'p' → logprob: -14.125082015991211
    6. 'pres' → logprob: -14.250082015991211
    7. 'sent' → logprob: -14.625082015991211
    8. 'pr' → logprob: -15.375082015991211
    9. ' presentations' → logprob: -15.500082015991211
    10. 'pressions' → logprob: -15.500082015991211

Token 272: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.7432603272027336e-06
    2. 'a' → logprob: -14.000001907348633
    3. 't' → logprob: -15.000001907348633
    4. '_' → logprob: -15.500001907348633
    5. 'ation' → logprob: -16.875001907348633
    6. 's' → logprob: -16.875001907348633
    7. 'ions' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '-' → logprob: -17.625001907348633
    10. 'lations' → logprob: -17.625001907348633

Token 273: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012725738633889705
    2. '(' → logprob: -9.000126838684082
    3. ')' → logprob: -12.625126838684082
    4. ' (' → logprob: -15.125126838684082
    5. '(
' → logprob: -15.625126838684082
    6. ')(' → logprob: -16.0001277923584
    7. ')n' → logprob: -18.6251277923584
    8. '(

' → logprob: -19.2501277923584
    9. ',' → logprob: -19.7501277923584
    10. ',n' → logprob: -20.0001277923584

Token 274: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4742218255996704
    2. ')' → logprob: -0.9742218255996704
    3. '())' → logprob: -8.974222183227539
    4. '()))' → logprob: -11.474222183227539
    5. '()' → logprob: -11.974222183227539
    6. ')))' → logprob: -14.099222183227539
    7. ')
' → logprob: -15.724222183227539
    8. '(' → logprob: -16.22422218322754
    9. '})' → logprob: -16.22422218322754
    10. ' )' → logprob: -16.47422218322754


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 272
Tokens correctement prédits (1ère position, stricte): 143
Tokens correctement prédits (1ère position, avec adaptation): 158
Tokens correctement prédits (top 10): 251
Précision stricte (1ère position): 52.57%
Précision adaptée (1ère position): 58.09%
Précision (top 10): 92.28%
================================================================================
