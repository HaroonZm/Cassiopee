================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = list(map(int, input().split()))
q = int(input())
commands = [tuple(map(int, input().split())) for _ in range(q)]

def is_sorted(arr):
    for i in range(len(arr)-1):
        if arr[i] > arr[i+1]:
            return False
    return True

if is_sorted(a):
    print(0)
else:
    result = -1
    for i, (x, y) in enumerate(commands, 1):
        a[x-1], a[y-1] = a[y-1], a[x-1]
        if is_sorted(a):
            result = i
            break
    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015538577281404287
    2. '(n' → logprob: -10.250155448913574
    3. '(
' → logprob: -10.250155448913574
    4. ''' → logprob: -10.625155448913574
    5. '```' → logprob: -11.000155448913574
    6. '('' → logprob: -11.375155448913574
    7. '`' → logprob: -11.500155448913574
    8. '("("' → logprob: -12.250155448913574
    9. '(input' → logprob: -12.750155448913574
    10. ')' → logprob: -12.750155448913574

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1218075230717659
    2. ')' → logprob: -2.37180757522583
    3. '()' → logprob: -4.12180757522583
    4. '())' → logprob: -5.62180757522583
    5. '(
' → logprob: -7.74680757522583
    6. '```' → logprob: -8.621807098388672
    7. '('' → logprob: -8.746807098388672
    8. '(()' → logprob: -9.121807098388672
    9. '("("' → logprob: -9.246807098388672
    10. '(

' → logprob: -9.746807098388672

Token 5: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.105031132698059
    2. 'i' → logprob: -1.230031132698059
    3. 'for' → logprob: -1.730031132698059
    4. 's' → logprob: -2.4800310134887695
    5. 'x' → logprob: -3.8550310134887695
    6. ' ' → logprob: -3.8550310134887695
    7. 'a' → logprob: -4.6050310134887695
    8. ''' → logprob: -4.8550310134887695
    9. '#' → logprob: -4.9800310134887695
    10. ')' → logprob: -4.9800310134887695

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030097683891654015
    2. ' =' → logprob: -4.405097484588623
    3. '=' → logprob: -5.405097484588623
    4. '[i' → logprob: -5.905097484588623
    5. 'r' → logprob: -6.030097484588623
    6. '.' → logprob: -6.655097484588623
    7. 'a' → logprob: -6.780097484588623
    8. '[a' → logprob: -7.030097484588623
    9. 'rray' → logprob: -7.280097484588623
    10. '[:]' → logprob: -7.530097484588623

Token 7: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.9402151703834534
    2. '[]' → logprob: -1.0652151107788086
    3. 'list' → logprob: -1.8152151107788086
    4. ' list' → logprob: -2.9402151107788086
    5. 'input' → logprob: -4.315215110778809
    6. ' [' → logprob: -4.315215110778809
    7. '[input' → logprob: -5.065215110778809
    8. '[' → logprob: -5.440215110778809
    9. '[int' → logprob: -5.690215110778809
    10. '0' → logprob: -5.690215110778809

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00036156410351395607
    2. '(a' → logprob: -8.625361442565918
    3. '()' → logprob: -9.375361442565918
    4. '(range' → logprob: -10.000361442565918
    5. '(input' → logprob: -11.125361442565918
    6. '(`' → logprob: -12.250361442565918
    7. 'a' → logprob: -12.500361442565918
    8. '(
' → logprob: -12.500361442565918
    9. '("("' → logprob: -13.000361442565918
    10. '((' → logprob: -13.000361442565918

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.17034870386123657
    2. '(' → logprob: -1.9203486442565918
    3. '(str' → logprob: -4.920348644256592
    4. '(lambda' → logprob: -6.670348644256592
    5. 'int' → logprob: -7.545348644256592
    6. '(input' → logprob: -8.04534912109375
    7. '[int' → logprob: -8.92034912109375
    8. '<int' → logprob: -9.17034912109375
    9. '=int' → logprob: -9.67034912109375
    10. '```' → logprob: -9.79534912109375

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007724452763795853
    2. '(' → logprob: -5.382724285125732
    3. '))' → logprob: -6.382724285125732
    4. ',input' → logprob: -7.257724285125732
    5. ')' → logprob: -8.00772476196289
    6. 'input' → logprob: -9.00772476196289
    7. '=input' → logprob: -9.50772476196289
    8. '```' → logprob: -10.88272476196289
    9. '[input' → logprob: -11.13272476196289
    10. '(user' → logprob: -11.25772476196289

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006735026836395264
    2. ' input' → logprob: -5.006734848022461
    3. '(input' → logprob: -10.881734848022461
    4. ',input' → logprob: -15.131734848022461
    5. ')' → logprob: -15.506734848022461
    6. '=input' → logprob: -15.631734848022461
    7. '	input' → logprob: -16.25673484802246
    8. '<input' → logprob: -17.25673484802246
    9. '_input' → logprob: -18.00673484802246
    10. ' ' → logprob: -18.13173484802246

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.8747535943984985
    2. '().' → logprob: -1.1247535943984985
    3. '()' → logprob: -1.6247535943984985
    4. '())' → logprob: -2.874753475189209
    5. '()));' → logprob: -5.749753475189209
    6. '(' → logprob: -7.624753475189209
    7. '())))' → logprob: -7.624753475189209
    8. '()>' → logprob: -8.874753952026367
    9. '());' → logprob: -8.874753952026367
    10. '))' → logprob: -9.374753952026367

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000573167169932276
    2. 'strip' → logprob: -7.50057315826416
    3. 'rstrip' → logprob: -10.87557315826416
    4. ' split' → logprob: -13.87557315826416
    5. '(split' → logprob: -15.75057315826416
    6. 'spl' → logprob: -16.500574111938477
    7. ')' → logprob: -18.375574111938477
    8. 's' → logprob: -18.500574111938477
    9. 'sp' → logprob: -19.250574111938477
    10. 'replace' → logprob: -19.875574111938477

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8085052967071533
    2. '()))' → logprob: -0.8085052967071533
    3. ')' → logprob: -2.9335052967071533
    4. '())' → logprob: -3.0585052967071533
    5. '(' → logprob: -5.308505058288574
    6. '()' → logprob: -6.058505058288574
    7. '('' → logprob: -7.433505058288574
    8. ')))' → logprob: -7.808505058288574
    9. ''))' → logprob: -8.558505058288574
    10. '())))' → logprob: -9.058505058288574

Token 15: 'q' (ID: 80)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7704947590827942
    2. 'a' → logprob: -1.2704946994781494
    3. 'for' → logprob: -2.3954946994781494
    4. 'c' → logprob: -2.8954946994781494
    5. 'sum' → logprob: -3.5204946994781494
    6. 'count' → logprob: -3.8954946994781494
    7. 'm' → logprob: -4.6454949378967285
    8. 'b' → logprob: -4.6454949378967285
    9. 'result' → logprob: -4.8954949378967285
    10. 'd' → logprob: -5.0204949378967285

Token 16: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.27456262707710266
    2. '=' → logprob: -2.1495625972747803
    3. '.' → logprob: -2.2745625972747803
    4. ' =' → logprob: -4.399562835693359
    5. '[' → logprob: -5.149562835693359
    6. '[u' → logprob: -6.774562835693359
    7. '_' → logprob: -7.024562835693359
    8. 'ue' → logprob: -8.39956283569336
    9. '[]' → logprob: -10.02456283569336
    10. ',' → logprob: -10.02456283569336

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759578943252563
    2. ' int' → logprob: -0.8259578943252563
    3. '[int' → logprob: -11.450958251953125
    4. '0' → logprob: -12.450958251953125
    5. ' ' → logprob: -13.825958251953125
    6. '=int' → logprob: -14.575958251953125
    7. '<int' → logprob: -14.825958251953125
    8. '	int' → logprob: -14.950958251953125
    9. ' []' → logprob: -15.075958251953125
    10. 'n' → logprob: -15.325958251953125

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030699459835886955
    2. '(input' → logprob: -3.5306994915008545
    3. '()' → logprob: -7.530699253082275
    4. '(
' → logprob: -8.905699729919434
    5. '('' → logprob: -9.280699729919434
    6. ' (' → logprob: -10.530699729919434
    7. '(open' → logprob: -10.530699729919434
    8. ')' → logprob: -11.030699729919434
    9. '`' → logprob: -11.155699729919434
    10. '(

' → logprob: -11.155699729919434

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16378548741340637
    2. ')' → logprob: -2.413785457611084
    3. '()' → logprob: -2.788785457611084
    4. '()))' → logprob: -10.038785934448242
    5. '))' → logprob: -10.788785934448242
    6. '(' → logprob: -11.663785934448242
    7. ' ())' → logprob: -11.913785934448242
    8. '())
' → logprob: -12.163785934448242
    9. '()
' → logprob: -12.288785934448242
    10. '();)' → logprob: -12.413785934448242

Token 20: 'commands' (ID: 38539)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.5861724831629544e-05
    2. '```' → logprob: -10.000056266784668
    3. ' for' → logprob: -13.000056266784668
    4. '\n' → logprob: -13.125056266784668
    5. '\' → logprob: -13.500056266784668
    6. '	for' → logprob: -14.250056266784668
    7. '``' → logprob: -14.375056266784668
    8. 'q' → logprob: -14.500056266784668
    9. 'f' → logprob: -14.750056266784668
    10. 'd' → logprob: -14.875056266784668

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39262309670448303
    2. ' =' → logprob: -1.2676230669021606
    3. 'for' → logprob: -3.51762318611145
    4. 's' → logprob: -4.892622947692871
    5. '=[]' → logprob: -6.142622947692871
    6. '[]' → logprob: -6.892622947692871
    7. ' for' → logprob: -7.142622947692871
    8. '[' → logprob: -7.892622947692871
    9. '=[]
' → logprob: -8.017622947692871
    10. ')' → logprob: -8.017622947692871

Token 22: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13462720811367035
    2. ' []' → logprob: -2.134627103805542
    3. '[' → logprob: -4.884627342224121
    4. ' [' → logprob: -10.009627342224121
    5. ' ' → logprob: -10.259627342224121
    6. '[]}' → logprob: -12.259627342224121
    7. '['' → logprob: -12.509627342224121
    8. '["' → logprob: -12.509627342224121
    9. '"' → logprob: -12.634627342224121
    10. ''' → logprob: -12.884627342224121

Token 23: 'tuple' (ID: 52834)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29179659485816956
    2. 'input' → logprob: -1.7917965650558472
    3. '"]' → logprob: -3.7917966842651367
    4. '[]' → logprob: -4.166796684265137
    5. '[' → logprob: -4.291796684265137
    6. '']' → logprob: -4.541796684265137
    7. ' ]' → logprob: -5.041796684265137
    8. ''' → logprob: -5.916796684265137
    9. '   ' → logprob: -6.041796684265137
    10. '[input' → logprob: -6.041796684265137

Token 24: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00026741522015072405
    2. '(input' → logprob: -8.750267028808594
    3. '(' → logprob: -9.250267028808594
    4. 'map' → logprob: -12.000267028808594
    5. '(int' → logprob: -12.000267028808594
    6. 'input' → logprob: -15.375267028808594
    7. '()' → logprob: -15.625267028808594
    8. '(m' → logprob: -16.375267028808594
    9. '(
' → logprob: -17.000267028808594
    10. ',map' → logprob: -17.375267028808594

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011578429257497191
    2. 'int' → logprob: -7.126157760620117
    3. 'str' → logprob: -8.876157760620117
    4. '(str' → logprob: -9.251157760620117
    5. '<int' → logprob: -9.876157760620117
    6. ',int' → logprob: -10.751157760620117
    7. '(' → logprob: -10.751157760620117
    8. '=int' → logprob: -11.251157760620117
    9. '[int' → logprob: -12.751157760620117
    10. ']int' → logprob: -12.876157760620117

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03595123812556267
    2. ',input' → logprob: -3.4109511375427246
    3. 'input' → logprob: -6.285951137542725
    4. ',' → logprob: -8.035951614379883
    5. '(' → logprob: -9.785951614379883
    6. '=input' → logprob: -10.285951614379883
    7. ' input' → logprob: -11.410951614379883
    8. ')' → logprob: -12.160951614379883
    9. '[input' → logprob: -12.410951614379883
    10. '```' → logprob: -13.535951614379883

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.033654000610113144
    2. ' input' → logprob: -3.408653974533081
    3. '(input' → logprob: -12.28365421295166
    4. ')' → logprob: -13.03365421295166
    5. '[input' → logprob: -14.90865421295166
    6. ',input' → logprob: -15.03365421295166
    7. '<input' → logprob: -15.65865421295166
    8. '	input' → logprob: -16.033653259277344
    9. '=input' → logprob: -16.033653259277344
    10. '_input' → logprob: -16.283653259277344

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.117345684382599e-05
    2. '()' → logprob: -10.875020980834961
    3. '()))' → logprob: -14.375020980834961
    4. '.readline' → logprob: -14.750020980834961
    5. '()[' → logprob: -14.875020980834961
    6. ' ().' → logprob: -15.500020980834961
    7. '.split' → logprob: -15.625020980834961
    8. '()
' → logprob: -15.750020980834961
    9. '(' → logprob: -15.875020980834961
    10. '))' → logprob: -16.75002098083496

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.77627644513268e-06
    2. 'strip' → logprob: -11.750008583068848
    3. 'rstrip' → logprob: -15.125008583068848
    4. ' split' → logprob: -15.250008583068848
    5. '(split' → logprob: -15.375008583068848
    6. 'spl' → logprob: -16.625009536743164
    7. 'startswith' → logprob: -18.375009536743164
    8. 'read' → logprob: -18.875009536743164
    9. 'plit' → logprob: -19.375009536743164
    10. '.split' → logprob: -21.250009536743164

Token 30: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6944712996482849
    2. '()))' → logprob: -0.6944712996482849
    3. '())' → logprob: -7.44447135925293
    4. '()' → logprob: -7.69447135925293
    5. ')' → logprob: -8.81947135925293
    6. '(' → logprob: -9.44447135925293
    7. '()))
' → logprob: -10.31947135925293
    8. ')))' → logprob: -11.81947135925293
    9. '())))' → logprob: -12.81947135925293
    10. ''))' → logprob: -13.06947135925293

Token 31: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5078359842300415
    2. ')]' → logprob: -1.0078359842300415
    3. ']' → logprob: -3.507835865020752
    4. 'for' → logprob: -5.882835865020752
    5. ' for' → logprob: -8.75783634185791
    6. '()]' → logprob: -9.38283634185791
    7. '])' → logprob: -9.88283634185791
    8. '),' → logprob: -10.38283634185791
    9. '()' → logprob: -10.38283634185791
    10. ')],' → logprob: -10.38283634185791

Token 32: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22370655834674835
    2. ' _' → logprob: -1.848706603050232
    3. ' range' → logprob: -3.2237064838409424
    4. '_range' → logprob: -6.3487067222595215
    5. ' i' → logprob: -7.2237067222595215
    6. ' ' → logprob: -7.3487067222595215
    7. 'range' → logprob: -10.348706245422363
    8. '(range' → logprob: -11.598706245422363
    9. '_i' → logprob: -11.598706245422363
    10. ' in' → logprob: -12.348706245422363

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055898603051900864
    2. ' range' → logprob: -3.680898666381836
    3. 'in' → logprob: -4.055898666381836
    4. 'range' → logprob: -4.555898666381836
    5. '(' → logprob: -7.430898666381836
    6. ' ' → logprob: -8.055898666381836
    7. '_' → logprob: -8.805898666381836
    8. '(range' → logprob: -8.930898666381836
    9. '_range' → logprob: -10.430898666381836
    10. ' i' → logprob: -10.555898666381836

Token 34: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. 'r' → logprob: -17.500123977661133
    4. '(range' → logprob: -17.625123977661133
    5. ' ' → logprob: -19.000123977661133
    6. '	range' → logprob: -19.750123977661133
    7. 'rang' → logprob: -20.250123977661133
    8. 'ran' → logprob: -20.500123977661133
    9. '```' → logprob: -20.750123977661133
    10. '[' → logprob: -21.500123977661133

Token 35: '(q' (ID: 21479)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04868308827280998
    2. '(q' → logprob: -3.2986831665039062
    3. '(' → logprob: -4.548683166503906
    4. 'q' → logprob: -13.298683166503906
    5. '(
' → logprob: -14.298683166503906
    6. ' (' → logprob: -14.798683166503906
    7. 'n' → logprob: -14.923683166503906
    8. '(len' → logprob: -14.923683166503906
    9. '(N' → logprob: -15.798683166503906
    10. '(num' → logprob: -16.298683166503906

Token 36: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001564586127642542
    2. ')' → logprob: -8.87515640258789
    3. ']' → logprob: -11.37515640258789
    4. '')]' → logprob: -13.50015640258789
    5. '))' → logprob: -13.75015640258789
    6. ')])' → logprob: -14.00015640258789
    7. '])]' → logprob: -14.50015640258789
    8. ')]
' → logprob: -14.62515640258789
    9. ' )' → logprob: -15.50015640258789
    10. '")]' → logprob: -15.87515640258789

Token 37: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027147583663463593
    2. '
' → logprob: -3.7771475315093994
    3. 'result' → logprob: -6.1521477699279785
    4. 'results' → logprob: -6.7771477699279785
    5. ' for' → logprob: -8.27714729309082
    6. 'res' → logprob: -9.02714729309082
    7. 's' → logprob: -9.90214729309082
    8. 'a' → logprob: -10.65214729309082
    9. '\n' → logprob: -10.77714729309082
    10. 'd' → logprob: -11.02714729309082

Token 38: ' is' (ID: 382)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.3527071475982666
    2. ' solve' → logprob: -1.3527071475982666
    3. ' main' → logprob: -4.8527069091796875
    4. ' ' → logprob: -5.1027069091796875
    5. ' calculate' → logprob: -5.7277069091796875
    6. ' space' → logprob: -5.9777069091796875
    7. ' solution' → logprob: -6.3527069091796875
    8. ' update' → logprob: -6.3527069091796875
    9. ' check' → logprob: -6.6027069091796875
    10. ' find' → logprob: -6.6027069091796875

Token 39: '_sorted' (ID: 104993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8715894222259521
    2. '_pal' → logprob: -1.2465894222259521
    3. '_sorted' → logprob: -1.9965894222259521
    4. '_prime' → logprob: -2.871589422225952
    5. '_valid' → logprob: -3.621589422225952
    6. '_subset' → logprob: -3.996589422225952
    7. '_possible' → logprob: -4.746589660644531
    8. '_in' → logprob: -4.746589660644531
    9. '_sub' → logprob: -4.871589660644531
    10. ' _' → logprob: -4.996589660644531

Token 40: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07504149526357651
    2. '(a' → logprob: -3.5750415325164795
    3. '(lst' → logprob: -3.7000415325164795
    4. '(arr' → logprob: -4.3250412940979
    5. '_' → logprob: -6.2000412940979
    6. '(nums' → logprob: -7.0750412940979
    7. '(ls' → logprob: -7.3250412940979
    8. '_by' → logprob: -7.9500412940979
    9. '(_)' → logprob: -8.075041770935059
    10. '(_' → logprob: -8.200041770935059

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049238283187150955
    2. ',' → logprob: -3.1742382049560547
    3. ')' → logprob: -5.424238204956055
    4. '):
' → logprob: -6.549238204956055
    5. '[]):' → logprob: -9.424238204956055
    6. ' ):' → logprob: -9.799238204956055
    7. '):

' → logprob: -9.924238204956055
    8. '):
' → logprob: -10.174238204956055
    9. ']):' → logprob: -10.299238204956055
    10. ')):' → logprob: -10.674238204956055

Token 42: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.273324191570282
    2. ':' → logprob: -1.8983242511749268
    3. '[:]' → logprob: -3.0233242511749268
    4. '(arr' → logprob: -4.523324012756348
    5. '():' → logprob: -4.898324012756348
    6. '[' → logprob: -4.898324012756348
    7. ':return' → logprob: -6.023324012756348
    8. '<|end|>' → logprob: -6.023324012756348
    9. '(a' → logprob: -6.523324012756348
    10. '[]' → logprob: -6.648324012756348

Token 43: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03161534667015076
    2. ' for' → logprob: -4.031615257263184
    3. ' return' → logprob: -5.031615257263184
    4. ' ' → logprob: -5.656615257263184
    5. '    ' → logprob: -6.781615257263184
    6. 'for' (adapté à ' for') → logprob: -7.656615257263184
    7. ' n' → logprob: -7.656615257263184
    8. 'return' → logprob: -7.781615257263184
    9. ' 
' → logprob: -8.406615257263184
    10. ' if' → logprob: -8.906615257263184

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759450793266296
    2. 'i' → logprob: -0.8259450793266296
    3. ' ' → logprob: -12.575944900512695
    4. '	i' → logprob: -13.200944900512695
    5. '   ' → logprob: -16.575944900512695
    6. ' ' → logprob: -16.825944900512695
    7. '(i' → logprob: -17.200944900512695
    8. ' in' → logprob: -17.450944900512695
    9. '  ' → logprob: -17.700944900512695
    10. 'index' → logprob: -17.825944900512695

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002771474653854966
    2. 'in' → logprob: -6.252771377563477
    3. '+' → logprob: -7.877771377563477
    4. ' ' → logprob: -7.877771377563477
    5. '<|end|>' → logprob: -10.502771377563477
    6. '1' → logprob: -11.252771377563477
    7. ' i' → logprob: -11.502771377563477
    8. '  ' → logprob: -11.627771377563477
    9. '   ' → logprob: -12.127771377563477
    10. '	in' → logprob: -12.752771377563477

Token 46: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6932104229927063
    2. 'range' → logprob: -0.6932104229927063
    3. '(range' → logprob: -9.94321060180664
    4. '	range' → logprob: -11.31821060180664
    5. '   ' → logprob: -13.56821060180664
    6. ' xrange' → logprob: -14.31821060180664
    7. ' ' → logprob: -14.56821060180664
    8. '1' → logprob: -15.56821060180664
    9. ')' → logprob: -15.94321060180664
    10. '_range' → logprob: -16.06821060180664

Token 47: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004139191471040249
    2. '(len' → logprob: -5.504139423370361
    3. '1' → logprob: -9.754138946533203
    4. ' (' → logprob: -13.379138946533203
    5. '(n' → logprob: -14.879138946533203
    6. 'len' → logprob: -14.879138946533203
    7. ' ' → logprob: -15.629138946533203
    8. ' len' → logprob: -16.004138946533203
    9. '   ' → logprob: -17.254138946533203
    10. '(
' → logprob: -17.504138946533203

Token 48: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00026455431361682713
    2. 'arr' → logprob: -8.625264167785645
    3. '(' → logprob: -9.500264167785645
    4. '	arr' → logprob: -12.750264167785645
    5. ')' → logprob: -13.125264167785645
    6. ' arr' → logprob: -13.250264167785645
    7. '[arr' → logprob: -13.250264167785645
    8. '(a' → logprob: -14.250264167785645
    9. '<arr' → logprob: -14.500264167785645
    10. '-' → logprob: -16.00026512145996

Token 49: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06778812408447266
    2. '-' → logprob: -3.0677881240844727
    3. ' -' → logprob: -4.317788124084473
    4. ')-' → logprob: -5.442788124084473
    5. '   ' → logprob: -7.692788124084473
    6. ' ' → logprob: -7.692788124084473
    7. ' )' → logprob: -8.442788124084473
    8. '()' → logprob: -8.817788124084473
    9. '1' → logprob: -10.192788124084473
    10. '()-' → logprob: -10.692788124084473

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. ')' → logprob: -16.875158309936523
    4. '１' → logprob: -18.062658309936523
    5. '```' → logprob: -18.125158309936523
    6. '  ' → logprob: -18.437658309936523
    7. '   ' → logprob: -18.500158309936523
    8. '۱' → logprob: -18.562658309936523
    9. '१' → logprob: -18.875158309936523
    10. '-' → logprob: -19.250158309936523

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018328683450818062
    2. '):
' → logprob: -4.018328666687012
    3. ' ):' → logprob: -9.518328666687012
    4. '   ' → logprob: -9.768328666687012
    5. '):
' → logprob: -10.643328666687012
    6. ')' → logprob: -12.143328666687012
    7. ' ' → logprob: -12.893328666687012
    8. '):

' → logprob: -13.018328666687012
    9. ':' → logprob: -13.143328666687012
    10. ' ):
' → logprob: -13.143328666687012

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015533683821558952
    2. '   ' → logprob: -4.640533447265625
    3. ':' → logprob: -6.015533447265625
    4. '    ' → logprob: -6.265533447265625
    5. ' if' → logprob: -7.765533447265625
    6. '<|end|>' → logprob: -7.890533447265625
    7. ' ' → logprob: -8.265533447265625
    8. ',' → logprob: -9.765533447265625
    9. '      ' → logprob: -9.765533447265625
    10. ':
' → logprob: -10.265533447265625

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15084418654441833
    2. '       ' → logprob: -2.150844097137451
    3. 'if' (adapté à ' if') → logprob: -4.400844097137451
    4. '   ' → logprob: -4.775844097137451
    5. '    ' → logprob: -6.900844097137451
    6. '<|end|>' → logprob: -7.150844097137451
    7. ' ' → logprob: -7.275844097137451
    8. ' 
' → logprob: -8.65084457397461
    9. '```' → logprob: -9.52584457397461
    10. '        
' → logprob: -10.65084457397461

Token 54: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.002811886603012681
    2. 'arr' → logprob: -5.877811908721924
    3. '	arr' → logprob: -12.002811431884766
    4. '(arr' → logprob: -14.502811431884766
    5. ' not' → logprob: -15.877811431884766
    6. '<arr' → logprob: -15.877811431884766
    7. '[arr' → logprob: -16.627811431884766
    8. '_arr' → logprob: -17.002811431884766
    9. '$arr' → logprob: -17.502811431884766
    10. '.arr' → logprob: -17.627811431884766

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011841575615108013
    2. '[' → logprob: -6.751183986663818
    3. '>[' → logprob: -12.126184463500977
    4. '[I' → logprob: -13.126184463500977
    5. ')[' → logprob: -13.376184463500977
    6. '[j' → logprob: -14.001184463500977
    7. '```' → logprob: -14.001184463500977
    8. '   ' → logprob: -14.251184463500977
    9. '[a' → logprob: -14.626184463500977
    10. ' [' → logprob: -14.751184463500977

Token 56: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.037867605686187744
    2. ' >' → logprob: -3.537867546081543
    3. ']' → logprob: -4.912867546081543
    4. ']>' → logprob: -7.287867546081543
    5. '">' → logprob: -10.662867546081543
    6. ' ]' → logprob: -11.912867546081543
    7. ' ' → logprob: -12.537867546081543
    8. '>]' → logprob: -13.037867546081543
    9. '[' → logprob: -13.162867546081543
    10. '']' → logprob: -13.412867546081543

Token 57: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06200723350048065
    2. ' >' → logprob: -2.812007188796997
    3. '">' → logprob: -10.437006950378418
    4. '()>' → logprob: -13.312006950378418
    5. ' ' → logprob: -13.937006950378418
    6. '```' → logprob: -13.937006950378418
    7. '>`' → logprob: -14.187006950378418
    8. ')>' → logprob: -14.187006950378418
    9. ''>' → logprob: -14.312006950378418
    10. ']>' → logprob: -14.437006950378418

Token 58: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.10022974759340286
    2. 'arr' → logprob: -2.3502297401428223
    3. '	arr' → logprob: -10.85023021697998
    4. '(arr' → logprob: -13.10023021697998
    5. '[arr' → logprob: -14.85023021697998
    6. '<arr' → logprob: -14.85023021697998
    7. '$arr' → logprob: -15.60023021697998
    8. ' ' → logprob: -15.85023021697998
    9. 'a' → logprob: -15.97523021697998
    10. '0' → logprob: -16.225229263305664

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.040457421680912e-05
    2. '[' → logprob: -9.625070571899414
    3. '+' → logprob: -12.750070571899414
    4. 'i' → logprob: -14.875070571899414
    5. '[
' → logprob: -15.000070571899414
    6. '```' → logprob: -15.500070571899414
    7. '1' → logprob: -15.875070571899414
    8. '[j' → logprob: -16.000070571899414
    9. ' [' → logprob: -16.125070571899414
    10. ']' → logprob: -16.750070571899414

Token 60: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013344056205824018
    2. ' +' → logprob: -6.626334190368652
    3. '1' → logprob: -12.501334190368652
    4. '+i' → logprob: -13.251334190368652
    5. ']' → logprob: -14.001334190368652
    6. ']+' → logprob: -14.251334190368652
    7. '+
' → logprob: -14.876334190368652
    8. '   ' → logprob: -15.251334190368652
    9. '[i' → logprob: -15.501334190368652
    10. '[' → logprob: -16.12633514404297

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6060808522743173e-05
    2. ']' → logprob: -11.250025749206543
    3. ' ' → logprob: -11.375025749206543
    4. '0' → logprob: -14.500025749206543
    5. 'i' → logprob: -15.125025749206543
    6. '])' → logprob: -15.500025749206543
    7. ')' → logprob: -15.625025749206543
    8. '```' → logprob: -15.625025749206543
    9. '   ' → logprob: -17.12502670288086
    10. '<|end|>' → logprob: -17.50002670288086

Token 62: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007205367553979158
    2. ':' → logprob: -5.382205486297607
    3. '):
' → logprob: -6.132205486297607
    4. ')' → logprob: -8.13220500946045
    5. ' ):' → logprob: -10.13220500946045
    6. '       ' → logprob: -11.13220500946045
    7. '   ' → logprob: -11.25720500946045
    8. ''):' → logprob: -11.25720500946045
    9. ']:' → logprob: -11.88220500946045
    10. ':
' → logprob: -12.00720500946045

Token 63: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6906652450561523
    2. '           ' → logprob: -1.4406652450561523
    3. ':return' → logprob: -1.9406652450561523
    4. '       ' → logprob: -2.5656652450561523
    5. ' return' → logprob: -3.9406652450561523
    6. ':
' → logprob: -4.065665245056152
    7. ' :' → logprob: -6.565665245056152
    8. 'return' → logprob: -6.565665245056152
    9. '   ' → logprob: -6.940665245056152
    10. ',' → logprob: -8.440665245056152

Token 64: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06664764881134033
    2. '       ' → logprob: -3.441647529602051
    3. 'return' (adapté à ' return') → logprob: -3.566647529602051
    4. '           ' → logprob: -5.566647529602051
    5. '   ' → logprob: -8.56664752960205
    6. '               ' → logprob: -10.06664752960205
    7. ':return' → logprob: -10.31664752960205
    8. ' ' → logprob: -10.44164752960205
    9. ' 
' → logprob: -10.56664752960205
    10. ' ' → logprob: -10.81664752960205

Token 65: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02324547804892063
    2. ' False' → logprob: -3.7732455730438232
    3. 'True' → logprob: -17.148244857788086
    4. ' True' → logprob: -20.148244857788086
    5. '(False' → logprob: -20.398244857788086
    6. '   ' → logprob: -20.898244857788086
    7. 'false' → logprob: -21.648244857788086
    8. ' ' → logprob: -22.148244857788086
    9. '=False' → logprob: -22.148244857788086
    10. 'F' → logprob: -22.398244857788086

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030984506011009216
    2. ' return' → logprob: -7.003098487854004
    3. '
' → logprob: -7.503098487854004
    4. 'return' → logprob: -7.503098487854004
    5. '	return' → logprob: -7.503098487854004
    6. '       ' → logprob: -8.503098487854004
    7. ':return' → logprob: -8.878098487854004
    8. '    
' → logprob: -9.503098487854004
    9. '  ' → logprob: -10.753098487854004
    10. '<|end|>' → logprob: -10.878098487854004

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003950763493776321
    2. ' return' → logprob: -6.503950595855713
    3. 'return' → logprob: -6.753950595855713
    4. '
' → logprob: -7.503950595855713
    5. '	return' → logprob: -7.628950595855713
    6. '    
' → logprob: -9.753951072692871
    7. ':return' → logprob: -9.878951072692871
    8. '       ' → logprob: -10.503951072692871
    9. '  ' → logprob: -11.128951072692871
    10. '  
' → logprob: -11.128951072692871

Token 68: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14017371833324432
    2. '   ' → logprob: -2.2651736736297607
    3. ' return' → logprob: -3.6401736736297607
    4. '
' → logprob: -7.64017391204834
    5. ' ' → logprob: -9.14017391204834
    6. '	return' → logprob: -9.39017391204834
    7. '  ' → logprob: -11.01517391204834
    8. '       ' → logprob: -11.51517391204834
    9. 'eturn' → logprob: -11.76517391204834
    10. ':return' → logprob: -11.89017391204834

Token 69: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2014133334159851
    2. ' True' → logprob: -1.7014133930206299
    3. '(True' → logprob: -17.826414108276367
    4. ' ' → logprob: -17.951414108276367
    5. '=True' → logprob: -19.076414108276367
    6. 'Tr' → logprob: -19.326414108276367
    7. ' Tru' → logprob: -19.451414108276367
    8. ' ' → logprob: -19.576414108276367
    9. 'False' → logprob: -20.451414108276367
    10. 'true' → logprob: -20.826414108276367

Token 70: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15997405350208282
    2. 'for' → logprob: -2.0349740982055664
    3. ' for' → logprob: -5.159974098205566
    4. '<|end|>' → logprob: -5.409974098205566
    5. 'results' → logprob: -5.534974098205566
    6. 'result' → logprob: -6.284974098205566
    7. '```' → logprob: -7.784974098205566
    8. '

' → logprob: -9.034974098205566
    9. ' results' → logprob: -9.284974098205566
    10. '\' → logprob: -9.659974098205566

Token 71: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019481956958770752
    2. 'results' → logprob: -4.019482135772705
    3. 'result' → logprob: -7.269482135772705
    4. 'answers' → logprob: -8.269481658935547
    5. 'def' → logprob: -8.769481658935547
    6. 'res' → logprob: -8.894481658935547
    7. 'output' → logprob: -10.269481658935547
    8. 'answer' → logprob: -11.269481658935547
    9. ' for' → logprob: -11.394481658935547
    10. 'ans' → logprob: -11.644481658935547

Token 72: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.050317492336034775
    2. 'is' → logprob: -3.8003175258636475
    3. ' q' → logprob: -4.425317287445068
    4. ' n' → logprob: -5.550317287445068
    5. ' commands' → logprob: -5.800317287445068
    6. ' all' → logprob: -6.175317287445068
    7. 'n' → logprob: -6.550317287445068
    8. ' not' → logprob: -6.550317287445068
    9. 'q' → logprob: -6.800317287445068
    10. ' len' → logprob: -7.425317287445068

Token 73: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.7432603272027336e-06
    2. '_s' → logprob: -14.625001907348633
    3. '_' → logprob: -14.750001907348633
    4. 'sorted' → logprob: -15.500001907348633
    5. ' _' → logprob: -16.125001907348633
    6. '```' → logprob: -16.375001907348633
    7. '_saved' → logprob: -16.375001907348633
    8. '_filtered' → logprob: -16.875001907348633
    9. '_processed' → logprob: -17.125001907348633
    10. 'Sorted' → logprob: -17.500001907348633

Token 74: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00012713817704934627
    2. '(' → logprob: -9.625126838684082
    3. ' (' → logprob: -9.875126838684082
    4. '(arr' → logprob: -12.000126838684082
    5. '(n' → logprob: -13.375126838684082
    6. '((' → logprob: -14.250126838684082
    7. '(s' → logprob: -14.375126838684082
    8. '(A' → logprob: -15.875126838684082
    9. '(array' → logprob: -15.875126838684082
    10. 'a' → logprob: -16.0001277923584

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003564785234630108
    2. ')' → logprob: -6.128564834594727
    3. ' ):' → logprob: -6.628564834594727
    4. ':' → logprob: -10.753564834594727
    5. ')):' → logprob: -11.628564834594727
    6. '):
' → logprob: -11.878564834594727
    7. '(' → logprob: -12.503564834594727
    8. '():' → logprob: -12.878564834594727
    9. '[' → logprob: -12.878564834594727
    10. '[:' → logprob: -13.378564834594727

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1465785801410675
    2. 'print' → logprob: -2.646578550338745
    3. ' print' → logprob: -2.771578550338745
    4. '```' → logprob: -6.646578788757324
    5. '    
' → logprob: -7.521578788757324
    6. '\n' → logprob: -7.771578788757324
    7. '	print' → logprob: -9.521578788757324
    8. ' for' → logprob: -9.521578788757324
    9. '``' → logprob: -9.521578788757324
    10. '
' → logprob: -9.771578788757324

Token 77: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.31452563405036926
    2. ' print' → logprob: -1.9395256042480469
    3. '   ' → logprob: -2.189525604248047
    4. 'for' → logprob: -4.939525604248047
    5. ' for' → logprob: -5.189525604248047
    6. '```' → logprob: -8.064525604248047
    7. '
' → logprob: -8.189525604248047
    8. '    
' → logprob: -8.564525604248047
    9. 'pass' → logprob: -8.814525604248047
    10. ' True' → logprob: -9.564525604248047

Token 78: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6036108136177063
    2. '("' → logprob: -0.9786108136177063
    3. '(True' → logprob: -2.7286107540130615
    4. '(a' → logprob: -5.103610992431641
    5. '('' → logprob: -5.353610992431641
    6. '()' → logprob: -7.728610992431641
    7. '("("' → logprob: -8.35361099243164
    8. '("(' → logprob: -8.47861099243164
    9. '(-' → logprob: -9.72861099243164
    10. '(False' → logprob: -9.97861099243164

Token 79: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029535699635744095
    2. '0' → logprob: -3.7795357704162598
    3. ''' → logprob: -6.27953577041626
    4. '1' → logprob: -6.40453577041626
    5. '"a' → logprob: -7.02953577041626
    6. '-' → logprob: -7.27953577041626
    7. 'Yes' → logprob: -8.029535293579102
    8. 'a' → logprob: -8.154535293579102
    9. '("' → logprob: -9.279535293579102
    10. ''a' → logprob: -9.529535293579102

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001175343873910606
    2. ')
' → logprob: -6.751175403594971
    3. ' )' → logprob: -12.876174926757812
    4. 'else' → logprob: -13.626174926757812
    5. '))' → logprob: -14.501174926757812
    6. ')

' → logprob: -15.501174926757812
    7. ')
' → logprob: -15.876174926757812
    8. '()' → logprob: -16.001174926757812
    9. '')' → logprob: -16.126174926757812
    10. ' else' → logprob: -17.001174926757812

Token 81: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.006258073262870312
    2. ' else' → logprob: -5.256258010864258
    3. '```' → logprob: -7.506258010864258
    4. ')' → logprob: -9.006258010864258
    5. '
' → logprob: -9.131258010864258
    6. 'elif' → logprob: -9.631258010864258
    7. '\n' → logprob: -10.006258010864258
    8. 'e' → logprob: -11.131258010864258
    9. '<|end|>' → logprob: -11.256258010864258
    10. '' → logprob: -11.631258010864258

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007151735480874777
    2. ':
' → logprob: -7.250715255737305
    3. ' :' → logprob: -13.250715255737305
    4. ',' → logprob: -14.375715255737305
    5. ':

' → logprob: -14.375715255737305
    6. '   ' → logprob: -14.625715255737305
    7. ':**' → logprob: -14.750715255737305
    8. '<|end|>' → logprob: -14.750715255737305
    9. '):' → logprob: -16.000715255737305
    10. '
' → logprob: -16.000715255737305

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6024792790412903
    2. ' for' → logprob: -0.9774792790412903
    3. ' print' → logprob: -3.7274792194366455
    4. 'for' → logprob: -3.9774792194366455
    5. ' max' → logprob: -5.227479457855225
    6. ' cnt' → logprob: -5.352479457855225
    7. 'print' → logprob: -5.727479457855225
    8. '```' → logprob: -5.977479457855225
    9. ' ans' → logprob: -6.102479457855225
    10. ' res' → logprob: -6.352479457855225

Token 84: ' result' (ID: 1534)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9395914077758789
    2. 'for' → logprob: -0.9395914077758789
    3. 'print' → logprob: -3.314591407775879
    4. '   ' → logprob: -3.314591407775879
    5. 'min' → logprob: -3.939591407775879
    6. 'count' → logprob: -4.189591407775879
    7. ' min' → logprob: -4.564591407775879
    8. ' print' → logprob: -4.564591407775879
    9. 'res' → logprob: -4.814591407775879
    10. ' res' → logprob: -4.814591407775879

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03529827669262886
    2. '=' → logprob: -4.0352983474731445
    3. '[' → logprob: -4.2852983474731445
    4. ' ' → logprob: -6.7852983474731445
    5. '[]' → logprob: -7.4102983474731445
    6. '(' → logprob: -7.6602983474731445
    7. '[:]' → logprob: -7.7852983474731445
    8. '.' → logprob: -9.285298347473145
    9. ' +=' → logprob: -9.660298347473145
    10. '_' → logprob: -9.660298347473145

Token 86: ' -' (ID: 533)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -1.6685806512832642
    2. 'q' → logprob: -1.9185806512832642
    3. ' []' → logprob: -1.9185806512832642
    4. '[]' → logprob: -2.1685805320739746
    5. '0' → logprob: -2.2935805320739746
    6. ' -' → logprob: -2.2935805320739746
    7. '-' → logprob: -2.7935805320739746
    8. 'None' → logprob: -3.6685805320739746
    9. ' None' → logprob: -3.9185805320739746
    10. ' ' → logprob: -4.168580532073975

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023166877508629113
    2. 'q' → logprob: -8.875231742858887
    3. ' ' → logprob: -10.125231742858887
    4. '2' → logprob: -12.125231742858887
    5. '-' → logprob: -12.125231742858887
    6. '10' → logprob: -12.375231742858887
    7. '(' → logprob: -12.500231742858887
    8. 'a' → logprob: -12.875231742858887
    9. 'result' → logprob: -12.937731742858887
    10. '+' → logprob: -13.062731742858887

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.034598369151353836
    2. ' for' → logprob: -4.409598350524902
    3. 'for' → logprob: -4.659598350524902
    4. ' 
' → logprob: -5.284598350524902
    5. '<|end|>' → logprob: -5.284598350524902
    6. '\n' → logprob: -6.659598350524902
    7. '' → logprob: -7.909598350524902
    8. ' ' → logprob: -8.909598350524902
    9. '  
' → logprob: -9.659598350524902
    10. '
' → logprob: -9.909598350524902

Token 89: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024607393890619278
    2. '<|end|>' → logprob: -4.149607181549072
    3. 'for' → logprob: -5.899607181549072
    4. '\n' → logprob: -6.024607181549072
    5. ' 
' → logprob: -6.524607181549072
    6. ' for' → logprob: -7.024607181549072
    7. '' → logprob: -7.899607181549072
    8. ' ' → logprob: -9.02460765838623
    9. '  
' → logprob: -9.14960765838623
    10. '<|end|>' → logprob: -9.64960765838623

Token 90: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007291130605153739
    2. ' for' → logprob: -7.250729084014893
    3. 'f' → logprob: -12.00072956085205
    4. 'a' → logprob: -12.37572956085205
    5. 'sorted' → logprob: -13.37572956085205
    6. 'fo' → logprob: -13.75072956085205
    7. 'current' → logprob: -14.00072956085205
    8. 'i' → logprob: -14.12572956085205
    9. 'max' → logprob: -14.25072956085205
    10. 'last' → logprob: -14.75072956085205

Token 91: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.5347554683685303
    2. 'i' → logprob: -1.9097554683685303
    3. ' l' → logprob: -1.9097554683685303
    4. 'cmd' → logprob: -2.1597554683685303
    5. ' i' → logprob: -2.5347554683685303
    6. 'x' → logprob: -3.1597554683685303
    7. ' idx' → logprob: -3.2847554683685303
    8. 'idx' → logprob: -3.6597554683685303
    9. ' L' → logprob: -3.7847554683685303
    10. ' x' → logprob: -4.034755706787109

Token 92: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005358383059501648
    2. 'in' → logprob: -5.3803582191467285
    3. ' ' → logprob: -7.5053582191467285
    4. ',' → logprob: -9.880358695983887
    5. 'range' → logprob: -10.130358695983887
    6. ' ,' → logprob: -10.630358695983887
    7. ' i' → logprob: -10.755358695983887
    8. ' range' → logprob: -11.630358695983887
    9. '```' → logprob: -12.255358695983887
    10. '  ' → logprob: -12.255358695983887

Token 93: ' (' (ID: 350)
  Prédit: '(command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(command' → logprob: -0.4984704256057739
    2. '(cmd' → logprob: -1.123470425605774
    3. 'command' → logprob: -3.3734703063964844
    4. 'cmd' → logprob: -4.373470306396484
    5. '(c' → logprob: -4.873470306396484
    6. ' (' → logprob: -5.248470306396484
    7. '(com' → logprob: -5.873470306396484
    8. '(' → logprob: -6.498470306396484
    9. '(comm' → logprob: -6.498470306396484
    10. ' command' → logprob: -8.373470306396484

Token 94: 'x' (ID: 87)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4445761740207672
    2. 't' → logprob: -1.6945761442184448
    3. 'x' → logprob: -1.9445761442184448
    4. 'L' → logprob: -5.444576263427734
    5. 'k' → logprob: -5.444576263427734
    6. 's' → logprob: -5.819576263427734
    7. 'c' → logprob: -5.819576263427734
    8. ' l' → logprob: -6.194576263427734
    9. 'type' → logprob: -6.194576263427734
    10. 'd' → logprob: -6.319576263427734

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032283025211654603
    2. ' ,' → logprob: -8.750323295593262
    3. ',y' → logprob: -9.375323295593262
    4. ',n' → logprob: -10.875323295593262
    5. ',x' → logprob: -11.500323295593262
    6. ',j' → logprob: -11.875323295593262
    7. ',)' → logprob: -12.000323295593262
    8. ')' → logprob: -12.375323295593262
    9. ',s' → logprob: -12.750323295593262
    10. ',a' → logprob: -12.875323295593262

Token 96: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.13346636295318604
    2. ' y' → logprob: -2.2584662437438965
    3. 'd' → logprob: -4.6334662437438965
    4. 'k' → logprob: -5.8834662437438965
    5. 'l' → logprob: -6.3834662437438965
    6. 't' → logprob: -6.3834662437438965
    7. 'r' → logprob: -6.6334662437438965
    8. ' d' → logprob: -7.1334662437438965
    9. ' t' → logprob: -8.133466720581055
    10. 'v' → logprob: -8.508466720581055

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.073596548754722e-05
    2. 'in' → logprob: -10.62505054473877
    3. ' )' → logprob: -10.62505054473877
    4. ' in' → logprob: -13.62505054473877
    5. ')...' → logprob: -15.62505054473877
    6. ')
' → logprob: -15.75005054473877
    7. '）' → logprob: -15.87505054473877
    8. ')`' → logprob: -16.125051498413086
    9. '))' → logprob: -16.750051498413086
    10. '`)' → logprob: -16.875051498413086

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2763250172138214
    2. 'in' → logprob: -1.526324987411499
    3. ':' → logprob: -3.776324987411499
    4. ',' → logprob: -6.901325225830078
    5. ')' → logprob: -9.276325225830078
    6. ' :' → logprob: -10.901325225830078
    7. 's' → logprob: -11.401325225830078
    8. ' ' → logprob: -11.901325225830078
    9. '):' → logprob: -11.901325225830078
    10. '	in' → logprob: -12.026325225830078

Token 99: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.02637391909956932
    2. 'enumer' → logprob: -3.651373863220215
    3. ' commands' → logprob: -9.651373863220215
    4. 'commands' → logprob: -12.901373863220215
    5. ' enumer' → logprob: -12.901373863220215
    6. ' q' → logprob: -14.026373863220215
    7. ' in' → logprob: -14.151373863220215
    8. ' en' → logprob: -14.276373863220215
    9. ' ' → logprob: -14.526373863220215
    10. ')' → logprob: -14.901373863220215

Token 100: '(commands' (ID: 167381)
  Prédit: '(commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(commands' → logprob: -5.478889215737581e-05
    2. 'commands' → logprob: -10.250054359436035
    3. '(' → logprob: -11.125054359436035
    4. ' commands' → logprob: -13.125054359436035
    5. '(command' → logprob: -13.500054359436035
    6. ' (' → logprob: -14.500054359436035
    7. '(q' → logprob: -15.250054359436035
    8. ')' → logprob: -15.250054359436035
    9. '(comm' → logprob: -16.37505531311035
    10. '(com' → logprob: -17.00005531311035

Token 101: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001668876619078219
    2. ':' → logprob: -7.251668930053711
    3. '):
' → logprob: -7.376668930053711
    4. ' ):' → logprob: -8.126668930053711
    5. ')' → logprob: -11.126668930053711
    6. '   ' → logprob: -11.251668930053711
    7. ',' → logprob: -12.376668930053711
    8. '():' → logprob: -13.126668930053711
    9. '):
' → logprob: -14.126668930053711
    10. '[]):' → logprob: -14.751668930053711

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14794261753559113
    2. ' ' → logprob: -2.272942543029785
    3. ' start' → logprob: -3.647942543029785
    4. 'start' → logprob: -4.772942543029785
    5. ')' → logprob: -12.897942543029785
    6. '	start' → logprob: -13.397942543029785
    7. '):
' → logprob: -14.022942543029785
    8. '   ' → logprob: -14.022942543029785
    9. ',start' → logprob: -14.272942543029785
    10. '(start' → logprob: -14.397942543029785

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003611474297940731
    2. 'start' → logprob: -5.6286115646362305
    3. ' ' → logprob: -11.75361156463623
    4. ' start' → logprob: -12.62861156463623
    5. '   ' → logprob: -16.253610610961914
    6. 'starting' → logprob: -16.378610610961914
    7. '0' → logprob: -16.878610610961914
    8. '	start' → logprob: -17.503610610961914
    9. 'Start' → logprob: -17.753610610961914
    10. '_start' → logprob: -18.003610610961914

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020820973441004753
    2. '):
' → logprob: -6.627081871032715
    3. ':' → logprob: -7.252081871032715
    4. ')' → logprob: -10.377081871032715
    5. ' ):' → logprob: -11.877081871032715
    6. '   ' → logprob: -12.002081871032715
    7. '       ' → logprob: -14.127081871032715
    8. '):
' → logprob: -14.127081871032715
    9. ',' → logprob: -14.502081871032715
    10. '():' → logprob: -14.752081871032715

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07312429696321487
    2. '    ' → logprob: -3.948124408721924
    3. ' ' → logprob: -4.073124408721924
    4. '<|end|>' → logprob: -4.073124408721924
    5. '   ' → logprob: -4.198124408721924
    6. '<|end|>' → logprob: -7.448124408721924
    7. ':' → logprob: -8.448123931884766
    8. ' if' → logprob: -8.573123931884766
    9. ',' → logprob: -8.698123931884766
    10. '        
' → logprob: -8.823123931884766

Token 106: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5270242691040039
    2. 'a' (adapté à ' a') → logprob: -1.777024269104004
    3. 'if' → logprob: -2.402024269104004
    4. ' if' → logprob: -2.402024269104004
    5. ' a' → logprob: -3.152024269104004
    6. ' for' → logprob: -4.902024269104004
    7. 'for' → logprob: -4.902024269104004
    8. '       ' → logprob: -7.152024269104004
    9. '    ' → logprob: -8.402024269104004
    10. 'n' → logprob: -8.527024269104004

Token 107: '[x' (ID: 17295)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5524969100952148
    2. '[x' → logprob: -1.3024969100952148
    3. '[a' → logprob: -2.677496910095215
    4. '[' → logprob: -3.302496910095215
    5. '[:' → logprob: -4.427496910095215
    6. '[:]' → logprob: -4.802496910095215
    7. ' =' → logprob: -5.552496910095215
    8. '.insert' → logprob: -5.552496910095215
    9. '[min' → logprob: -5.802496910095215
    10. 'a' → logprob: -5.927496910095215

Token 108: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03901522234082222
    2. ' -' → logprob: -3.289015293121338
    3. ']' → logprob: -7.039015293121338
    4. '],' → logprob: -9.78901481628418
    5. ' -=' → logprob: -11.41401481628418
    6. ' ]' → logprob: -11.66401481628418
    7. ' ],' → logprob: -12.28901481628418
    8. ' ' → logprob: -12.41401481628418
    9. '1' → logprob: -12.91401481628418
    10. '-=' → logprob: -13.60151481628418

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045712877181358635
    2. ' ' → logprob: -7.750457286834717
    3. ']' → logprob: -10.875456809997559
    4. ')' → logprob: -12.875456809997559
    5. '=' → logprob: -14.250456809997559
    6. '```' → logprob: -14.750456809997559
    7. ']=' → logprob: -15.125456809997559
    8. '-' → logprob: -15.187956809997559
    9. 'to' → logprob: -15.250456809997559
    10. ':' → logprob: -15.250456809997559

Token 110: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019620368257164955
    2. ')' → logprob: -5.394620418548584
    3. '=' → logprob: -5.519620418548584
    4. ']=' → logprob: -5.769620418548584
    5. ' =' → logprob: -5.769620418548584
    6. '],' → logprob: -6.019620418548584
    7. ',' → logprob: -6.769620418548584
    8. ' ]' → logprob: -7.144620418548584
    9. ']+=' → logprob: -9.394619941711426
    10. '),' → logprob: -10.394619941711426

Token 111: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00593033991754055
    2. ' a' → logprob: -5.130930423736572
    3. '	a' → logprob: -13.380929946899414
    4. '<|end|>' → logprob: -16.255929946899414
    5. '>a' → logprob: -17.130929946899414
    6. '   ' → logprob: -17.130929946899414
    7. '#a' → logprob: -17.630929946899414
    8. ' ' → logprob: -17.630929946899414
    9. ' ' → logprob: -17.880929946899414
    10. '
' → logprob: -18.505929946899414

Token 112: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0021018448751419783
    2. '[' → logprob: -6.627101898193359
    3. '[x' → logprob: -7.502101898193359
    4. 'y' → logprob: -9.25210189819336
    5. '[a' → logprob: -10.37710189819336
    6. '[user' → logprob: -10.37710189819336
    7. ' y' → logprob: -10.87710189819336
    8. ' [' → logprob: -11.37710189819336
    9. '[
' → logprob: -12.00210189819336
    10. '<|end|>' → logprob: -12.37710189819336

Token 113: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4855663721391466e-05
    2. ' -' → logprob: -11.125015258789062
    3. '1' → logprob: -17.000015258789062
    4. '[' → logprob: -17.875015258789062
    5. ']' → logprob: -17.875015258789062
    6. ']-' → logprob: -18.250015258789062
    7. ' ' → logprob: -18.250015258789062
    8. 'a' → logprob: -18.500015258789062
    9. '0' → logprob: -18.625015258789062
    10. '-user' → logprob: -18.875015258789062

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.625001907348633
    3. ']' → logprob: -14.875001907348633
    4. '2' → logprob: -15.250001907348633
    5. '-' → logprob: -15.875001907348633
    6. '```' → logprob: -15.937501907348633
    7. '   ' → logprob: -17.062501907348633
    8. ')' → logprob: -17.125001907348633
    9. '۱' → logprob: -17.625001907348633
    10. '

' → logprob: -18.000001907348633

Token 115: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48301196098327637
    2. ']' → logprob: -0.9830119609832764
    3. ')=' → logprob: -5.8580121994018555
    4. ']=' → logprob: -5.9830121994018555
    5. '=' → logprob: -6.2330121994018555
    6. ' =' → logprob: -6.6080121994018555
    7. ' )' → logprob: -9.483012199401855
    8. '<|end|>' → logprob: -10.233012199401855
    9. ',' → logprob: -10.358012199401855
    10. ')]' → logprob: -10.858012199401855

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014643970876932144
    2. ' =' → logprob: -4.514644145965576
    3. ',' → logprob: -5.639644145965576
    4. '<|end|>' → logprob: -11.389643669128418
    5. '=
' → logprob: -12.764643669128418
    6. '.' → logprob: -13.264643669128418
    7. '=int' → logprob: -13.264643669128418
    8. '.=' → logprob: -13.264643669128418
    9. '=

' → logprob: -13.389643669128418
    10. '=a' → logprob: -13.514643669128418

Token 117: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008617054671049118
    2. ' a' → logprob: -4.758616924285889
    3. '	a' → logprob: -13.883617401123047
    4. ' ' → logprob: -14.008617401123047
    5. '   ' → logprob: -15.758617401123047
    6. '>a' → logprob: -16.258617401123047
    7. '#a' → logprob: -16.633617401123047
    8. '_a' → logprob: -16.758617401123047
    9. 'а' → logprob: -17.008617401123047
    10. '    ' → logprob: -17.008617401123047

Token 118: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0003280751989223063
    2. 'y' → logprob: -8.875328063964844
    3. '[' → logprob: -9.375328063964844
    4. '[x' → logprob: -9.625328063964844
    5. ' y' → logprob: -11.000328063964844
    6. ' ' → logprob: -11.750328063964844
    7. ' [' → logprob: -12.875328063964844
    8. '[a' → logprob: -13.250328063964844
    9. 'x' → logprob: -13.375328063964844
    10. '	y' → logprob: -14.000328063964844

Token 119: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.587483221665025e-05
    2. '[' → logprob: -10.250065803527832
    3. ' -' → logprob: -10.500065803527832
    4. '[x' → logprob: -13.250065803527832
    5. '[-' → logprob: -14.875065803527832
    6. '-x' → logprob: -15.125065803527832
    7. 'x' → logprob: -15.750065803527832
    8. ' ' → logprob: -16.37506675720215
    9. '<|end|>' → logprob: -16.62506675720215
    10. ']-' → logprob: -17.12506675720215

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '-' → logprob: -15.250005722045898
    4. '```' → logprob: -17.0000057220459
    5. '   ' → logprob: -17.1250057220459
    6. 'x' → logprob: -17.1875057220459
    7. ']' → logprob: -17.2500057220459
    8. 'a' → logprob: -17.4375057220459
    9. '2' → logprob: -17.8125057220459
    10. '[' → logprob: -18.1875057220459

Token 121: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002433928195387125
    2. ' ,' → logprob: -6.752433776855469
    3. '],' → logprob: -7.002433776855469
    4. ',a' → logprob: -8.002433776855469
    5. 'a' → logprob: -11.877433776855469
    6. ' a' → logprob: -12.252433776855469
    7. ' ],' → logprob: -12.752433776855469
    8. ']' → logprob: -13.127433776855469
    9. ' ' → logprob: -14.127433776855469
    10. ',
' → logprob: -15.002433776855469

Token 122: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0380416102707386
    2. ' a' → logprob: -3.288041591644287
    3. '	a' → logprob: -16.288042068481445
    4. ' ' → logprob: -17.163042068481445
    5. '   ' → logprob: -18.663042068481445
    6. '_a' → logprob: -19.663042068481445
    7. '#a' → logprob: -20.163042068481445
    8. ''a' → logprob: -20.288042068481445
    9. '>a' → logprob: -20.663042068481445
    10. '```' → logprob: -20.663042068481445

Token 123: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -12.250011444091797
    3. 'x' → logprob: -12.250011444091797
    4. '[a' → logprob: -14.500011444091797
    5. '[
' → logprob: -14.875011444091797
    6. ' [' → logprob: -15.000011444091797
    7. 'a' → logprob: -15.625011444091797
    8. '```' → logprob: -17.000011444091797
    9. ' x' → logprob: -17.375011444091797
    10. '{x' → logprob: -17.375011444091797

Token 124: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7252845029579476e-05
    2. 'x' → logprob: -10.875027656555176
    3. ' -' → logprob: -11.875027656555176
    4. '[' → logprob: -14.125027656555176
    5. 'user' → logprob: -15.500027656555176
    6. '1' → logprob: -16.00002670288086
    7. '0' → logprob: -16.00002670288086
    8. ']-' → logprob: -16.75002670288086
    9. '   ' → logprob: -17.12502670288086
    10. ']' → logprob: -17.37502670288086

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -16.625003814697266
    4. '-' → logprob: -17.000003814697266
    5. '<|end|>' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.375003814697266
    7. 'x' → logprob: -17.375003814697266
    8. '2' → logprob: -17.500003814697266
    9. 'user' → logprob: -17.812503814697266
    10. ']' → logprob: -18.375003814697266

Token 126: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3136556148529053
    2. ')
' → logprob: -1.3136556148529053
    3. '       ' → logprob: -7.938655853271484
    4. ')
' → logprob: -10.688655853271484
    5. ')

' → logprob: -12.563655853271484
    6. ']' → logprob: -12.938655853271484
    7. '   ' → logprob: -13.563655853271484
    8. '
' → logprob: -13.688655853271484
    9. ')a' → logprob: -13.688655853271484
    10. '<|end|>' → logprob: -14.438655853271484

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009595814626663923
    2. 'if' → logprob: -7.250959396362305
    3. '   ' → logprob: -8.500959396362305
    4. ' if' → logprob: -10.000959396362305
    5. '
' → logprob: -14.750959396362305
    6. '```' → logprob: -15.250959396362305
    7. ' ' → logprob: -16.250959396362305
    8. '        
' → logprob: -16.250959396362305
    9. '<|end|>' → logprob: -16.875959396362305
    10. '     ' → logprob: -17.250959396362305

Token 128: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006289214943535626
    2. ' if' → logprob: -7.75062894821167
    3. '       ' → logprob: -9.000628471374512
    4. '   ' → logprob: -9.500628471374512
    5. ' ' → logprob: -17.750629425048828
    6. '	if' → logprob: -18.125629425048828
    7. 'If' → logprob: -19.000629425048828
    8. '  ' → logprob: -19.375629425048828
    9. '```' → logprob: -20.250629425048828
    10. '     ' → logprob: -20.625629425048828

Token 129: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011047814972698689
    2. 'is' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.63604736328125
    4. '(is' → logprob: -17.88604736328125
    5. '   ' → logprob: -18.13604736328125
    6. '	is' → logprob: -18.26104736328125
    7. ' ' → logprob: -19.88604736328125
    8. '(' → logprob: -20.01104736328125
    9. '    ' → logprob: -20.01104736328125
    10. '```' → logprob: -20.38604736328125

Token 130: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -5.080963092041202e-06
    2. 'sorted' → logprob: -12.250004768371582
    3. '_' → logprob: -15.500004768371582
    4. '_s' → logprob: -17.2500057220459
    5. 'a' → logprob: -17.8750057220459
    6. 's' → logprob: -18.5000057220459
    7. 'Sorted' → logprob: -18.6250057220459
    8. 'is' → logprob: -19.7500057220459
    9. '_saved' → logprob: -20.0000057220459
    10. ' _' → logprob: -20.0000057220459

Token 131: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. 'a' → logprob: -16.7500057220459
    4. '(arr' → logprob: -17.0000057220459
    5. '(ai' → logprob: -17.5000057220459
    6. ' (' → logprob: -17.8750057220459
    7. '```' → logprob: -17.8750057220459
    8. '(
' → logprob: -18.1250057220459
    9. '(A' → logprob: -18.2500057220459
    10. '((' → logprob: -19.8750057220459

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04266238585114479
    2. '):
' → logprob: -3.2926623821258545
    3. '()' → logprob: -5.792662620544434
    4. '():' → logprob: -7.167662620544434
    5. '():
' → logprob: -8.042662620544434
    6. '()):
' → logprob: -8.167662620544434
    7. ' ):' → logprob: -9.542662620544434
    8. '(a' → logprob: -10.292662620544434
    9. ')' → logprob: -10.417662620544434
    10. '(' → logprob: -10.542662620544434

Token 133: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6937103271484375
    2. '           ' → logprob: -0.6937103271484375
    3. '
' → logprob: -8.318710327148438
    4. 'print' → logprob: -8.943710327148438
    5. 'result' → logprob: -9.068710327148438
    6. '   ' → logprob: -10.068710327148438
    7. ' result' → logprob: -11.818710327148438
    8. '```' → logprob: -11.943710327148438
    9. '	       ' → logprob: -12.193710327148438
    10. ' print' → logprob: -12.443710327148438

Token 134: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5123991966247559
    2. 'print' → logprob: -1.0123991966247559
    3. 'result' (adapté à ' result') → logprob: -3.637399196624756
    4. ' print' → logprob: -5.012399196624756
    5. '           ' → logprob: -5.887399196624756
    6. ' result' → logprob: -7.137399196624756
    7. '   ' → logprob: -7.387399196624756
    8. '
' → logprob: -7.887399196624756
    9. ' ' → logprob: -10.637399673461914
    10. '               ' → logprob: -10.762399673461914

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804263845086098
    2. '=' → logprob: -3.2880425453186035
    3. ' =
' → logprob: -13.788043022155762
    4. '=i' → logprob: -16.413042068481445
    5. ' ' → logprob: -17.163042068481445
    6. '=
' → logprob: -17.413042068481445
    7. ' =)' → logprob: -17.413042068481445
    8. '＝' → logprob: -17.538042068481445
    9. '<|end|>' → logprob: -17.788042068481445
    10. '=n' → logprob: -18.288042068481445

Token 136: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019286326132714748
    2. ' i' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.126928329467773
    4. '(i' → logprob: -17.751928329467773
    5. ' ' → logprob: -18.001928329467773
    6. '	i' → logprob: -18.001928329467773
    7. '
' → logprob: -20.001928329467773
    8. '```' → logprob: -20.251928329467773
    9. '           ' → logprob: -20.501928329467773
    10. '{i' → logprob: -20.751928329467773

Token 137: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016301481809932739
    2. '       ' → logprob: -8.875163078308105
    3. '   ' → logprob: -11.625163078308105
    4. 'print' → logprob: -11.625163078308105
    5. '
' → logprob: -13.000163078308105
    6. 'break' → logprob: -13.875163078308105
    7. '		' → logprob: -14.750163078308105
    8. '            
' → logprob: -14.875163078308105
    9. ' break' → logprob: -15.000163078308105
    10. ' print' → logprob: -15.500163078308105

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030412263004109263
    2. '       ' → logprob: -8.375304222106934
    3. 'print' → logprob: -9.875304222106934
    4. '   ' → logprob: -10.875304222106934
    5. ' print' → logprob: -13.625304222106934
    6. 'break' → logprob: -13.750304222106934
    7. ' break' → logprob: -15.500304222106934
    8. '		' → logprob: -15.500304222106934
    9. '```' → logprob: -16.125303268432617
    10. '	       ' → logprob: -16.250303268432617

Token 139: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.07199715077877045
    2. '           ' → logprob: -2.8219971656799316
    3. ' break' → logprob: -5.321997165679932
    4. '       ' → logprob: -5.321997165679932
    5. 'print' → logprob: -8.571996688842773
    6. '	break' → logprob: -11.321996688842773
    7. '   ' → logprob: -11.696996688842773
    8. '
' → logprob: -13.196996688842773
    9. '               ' → logprob: -14.696996688842773
    10. '        
' → logprob: -15.071996688842773

Token 140: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012233243323862553
    2. '   ' → logprob: -6.751223087310791
    3. '
' → logprob: -10.00122356414795
    4. '```' → logprob: -12.62622356414795
    5. ' print' → logprob: -12.75122356414795
    6. '    
' → logprob: -13.37622356414795
    7. '  
' → logprob: -17.626222610473633
    8. '``' → logprob: -18.126222610473633
    9. 'if' → logprob: -18.876222610473633
    10. '	print' → logprob: -19.376222610473633

Token 141: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008834374137222767
    2. '   ' → logprob: -4.758834362030029
    3. '
' → logprob: -8.508834838867188
    4. '```' → logprob: -11.758834838867188
    5. '    
' → logprob: -12.133834838867188
    6. ' print' → logprob: -12.758834838867188
    7. 'if' → logprob: -13.258834838867188
    8. '  
' → logprob: -15.633834838867188
    9. '``' → logprob: -17.008834838867188
    10. '

' → logprob: -17.008834838867188

Token 142: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.25
    3. 'if' → logprob: -17.25
    4. '
' → logprob: -17.75
    5. '   ' → logprob: -18.5
    6. '```' → logprob: -18.875
    7. '    
' → logprob: -21.75
    8. 'else' → logprob: -22.375
    9. '  
' → logprob: -24.0
    10. '	print' → logprob: -24.625

Token 143: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0009144435753114522
    2. '(' → logprob: -7.000914573669434
    3. 'result' → logprob: -12.875914573669434
    4. '(results' → logprob: -16.250913619995117
    5. '(res' → logprob: -16.375913619995117
    6. '(
' → logprob: -16.625913619995117
    7. ' (' → logprob: -16.625913619995117
    8. '=result' → logprob: -18.000913619995117
    9. ',result' → logprob: -18.125913619995117
    10. '((' → logprob: -18.250913619995117

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.375
    3. ')
' → logprob: -16.0
    4. ')`' → logprob: -18.375
    5. '))' → logprob: -19.0
    6. '')' → logprob: -19.75
    7. '`)' → logprob: -20.75
    8. '）' → logprob: -21.125
    9. ')**' → logprob: -21.125
    10. '")' → logprob: -21.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 126
Précision stricte (1ère position): 40.85%
Précision adaptée (1ère position): 45.07%
Précision (top 10): 88.73%
================================================================================
