================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class MonsterBattleSimulator:
    def __init__(self, own_levels, opponent_levels):
        self.own_levels = sorted(own_levels)
        self.opponent_levels = sorted(opponent_levels)
        self.N = len(own_levels)

    def can_win_with_k(self, k):
        # Determine if there exists a selection of k monsters from own_levels
        # so that no matter how opponent selects k monsters, we can win > k/2 times.
        # Equivalent to checking if we have strictly more than k/2 monsters that can beat
        # opponent's k strongest monsters no matter the order.

        half = k // 2 + 1
        # We try to pick our top k monsters from own_levels
        own_top = self.own_levels[-k:]
        # Opponent can pick any k monsters; worst case opponent picks his k strongest monsters to minimize our wins
        opp_top = self.opponent_levels[-k:]

        # We count how many of our chosen monsters can beat opponent's monsters
        # since both sorted ascending, we want to count for how many indices own_top[i] > opp_top[j].
        # We try a greedy matchup: for each opponent monster from smallest to largest
        # assign the smallest own monster that can beat it
        # We simulate using two pointers to count max wins with fixed own selection and worst opponent selection.

        i = 0  # own_top pointer
        j = 0  # opp_top pointer
        wins = 0
        while i < k and j < k:
            if own_top[i] > opp_top[j]:
                wins += 1
                i += 1
                j += 1
            else:
                i += 1
        return wins >= half


class AbstractInputReader:
    def __init__(self):
        pass

    def read_all_datasets(self):
        datasets = []
        while True:
            n = self.read_int_line()
            if n == 0:
                break
            own_levels = self.read_int_list_line()
            opponent_levels = self.read_int_list_line()
            datasets.append((n, own_levels, opponent_levels))
        return datasets

    def read_int_line(self):
        raise NotImplementedError

    def read_int_list_line(self):
        raise NotImplementedError


class StdInputReader(AbstractInputReader):
    def read_int_line(self):
        while True:
            line = input()
            if line.strip():
                return int(line.strip())

    def read_int_list_line(self):
        while True:
            line = input()
            if line.strip():
                return list(map(int, line.strip().split()))


class AbstractOutput:
    def __init__(self):
        pass

    def write_line(self, line):
        raise NotImplementedError


class StdOutput(AbstractOutput):
    def write_line(self, line):
        print(line)


class BattleSolution:
    def __init__(self, input_reader, output_writer):
        self.input_reader = input_reader
        self.output_writer = output_writer

    def solve(self):
        datasets = self.input_reader.read_all_datasets()
        for n, own_levels, opponent_levels in datasets:
            simulator = MonsterBattleSimulator(own_levels, opponent_levels)
            result = self.find_min_k(simulator, n)
            self.output_writer.write_line(result)

    def find_min_k(self, simulator, n):
        # binary search for minimal k (1 <= k < N) such that simulator.can_win_with_k(k) is True
        left = 1
        right = n - 1
        answer = None
        while left <= right:
            mid = (left + right) // 2
            if simulator.can_win_with_k(mid):
                answer = mid 
                right = mid - 1
            else:
                left = mid + 1
        if answer is None:
            return "NA"
        else:
            return answer


def main():
    input_reader = StdInputReader()
    output_writer = StdOutput()
    solution = BattleSolution(input_reader, output_writer)
    solution.solve()


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Monster' (ID: 45420)
  → Token d'amorce (pas de prédiction)

Token 2: 'Battle' (ID: 54060)
  → Token d'amorce (pas de prédiction)

Token 3: 'Simulator' (ID: 120745)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5607426762580872
    2. '(' → logprob: -1.4357426166534424
    3. ':' → logprob: -1.6857426166534424
    4. ' {' → logprob: -5.4357428550720215
    5. '.' → logprob: -7.0607428550720215
    6. '```' → logprob: -7.8107428550720215
    7. ' ' → logprob: -9.435742378234863
    8. '({' → logprob: -10.060742378234863
    9. '[' → logprob: -10.060742378234863
    10. ' :' → logprob: -10.435742378234863

Token 4: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.09927954524755478
    2. '(' → logprob: -2.8492796421051025
    3. ' {' → logprob: -3.7242796421051025
    4. ':' → logprob: -4.724279403686523
    5. '.' → logprob: -5.849279403686523
    6. '```' → logprob: -8.224279403686523
    7. ' ' → logprob: -8.349279403686523
    8. '[' → logprob: -9.974279403686523
    9. ' (' → logprob: -10.224279403686523
    10. ';' → logprob: -10.474279403686523

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.259992778301239
    2. '(' → logprob: -1.7599928379058838
    3. '   ' → logprob: -3.384992837905884
    4. '```' → logprob: -4.259992599487305
    5. '(
' → logprob: -6.009992599487305
    6. ':
' → logprob: -6.134992599487305
    7. '.' → logprob: -6.384992599487305
    8. '():' → logprob: -7.634992599487305
    9. '\' → logprob: -7.759992599487305
    10. '    
' → logprob: -8.009992599487305

Token 6: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7681987285614014
    2. '   ' → logprob: -0.8931987285614014
    3. '```' → logprob: -3.3931987285614014
    4. '\' → logprob: -4.0181989669799805
    5. '    ' → logprob: -4.1431989669799805
    6. ' ' → logprob: -4.7681989669799805
    7. '(n' → logprob: -5.0181989669799805
    8. '    
' → logprob: -5.0181989669799805
    9. ' def' → logprob: -5.2681989669799805
    10. '()' → logprob: -5.2681989669799805

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12154965847730637
    2. '_' → logprob: -2.746549606323242
    3. ' __' → logprob: -4.371549606323242
    4. ' calculate' → logprob: -4.621549606323242
    5. '  ' → logprob: -5.246549606323242
    6. '__' → logprob: -5.496549606323242
    7. ' _' → logprob: -5.996549606323242
    8. ' init' → logprob: -6.371549606323242
    9. ' def' → logprob: -6.496549606323242
    10. 'simulate' → logprob: -6.496549606323242

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.747814349073451e-05
    2. ' init' → logprob: -11.000017166137695
    3. '_init' → logprob: -14.250017166137695
    4. 'ini' → logprob: -16.125017166137695
    5. '	init' → logprob: -16.625017166137695
    6. '_' → logprob: -18.750017166137695
    7. 'in' → logprob: -18.750017166137695
    8. 'innit' → logprob: -19.375017166137695
    9. 'i' → logprob: -19.625017166137695
    10. '  ' → logprob: -19.750017166137695

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3200778067111969
    2. '__' → logprob: -1.6950777769088745
    3. '(' → logprob: -2.570077896118164
    4. '(self' → logprob: -4.945077896118164
    5. '```' → logprob: -5.945077896118164
    6. '__(
' → logprob: -6.445077896118164
    7. '_' → logprob: -6.695077896118164
    8. '__((' → logprob: -7.695077896118164
    9. ' (' → logprob: -9.070077896118164
    10. '_(' → logprob: -9.320077896118164

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0059455097652971745
    2. ' self' → logprob: -5.130945682525635
    3. ')' → logprob: -11.255945205688477
    4. '(self' → logprob: -12.880945205688477
    5. '       ' → logprob: -15.130945205688477
    6. '   ' → logprob: -15.255945205688477
    7. '	self' → logprob: -15.255945205688477
    8. ' ' → logprob: -15.755945205688477
    9. ',self' → logprob: -15.880945205688477
    10. '_self' → logprob: -16.380945205688477

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024914536625146866
    2. 'self' → logprob: -3.899914503097534
    3. ' ,' → logprob: -6.274914741516113
    4. '):' → logprob: -7.524914741516113
    5. ',self' → logprob: -7.649914741516113
    6. '_' → logprob: -7.899914741516113
    7. '_self' → logprob: -7.899914741516113
    8. ')' → logprob: -8.149914741516113
    9. ' self' → logprob: -8.899914741516113
    10. '(self' → logprob: -9.399914741516113

Token 12: ' own' (ID: 2316)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2843683958053589
    2. 'self' → logprob: -1.4093683958053589
    3. ' player' → logprob: -7.159368515014648
    4. ' monster' → logprob: -7.284368515014648
    5. ' name' → logprob: -7.534368515014648
    6. ')' → logprob: -7.784368515014648
    7. 'name' → logprob: -8.284368515014648
    8. ' )' → logprob: -8.409368515014648
    9. 'player' → logprob: -9.409368515014648
    10. ' monsters' → logprob: -9.784368515014648

Token 13: '_levels' (ID: 96899)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19986024498939514
    2. ')' → logprob: -2.8248603343963623
    3. '):' → logprob: -3.3248603343963623
    4. '_mon' → logprob: -3.3248603343963623
    5. '_name' → logprob: -4.074860095977783
    6. ' )' → logprob: -4.699860095977783
    7. ' ):' → logprob: -5.324860095977783
    8. ' _' → logprob: -5.449860095977783
    9. ')_' → logprob: -5.699860095977783
    10. '_team' → logprob: -5.699860095977783

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05709831789135933
    2. '=' → logprob: -4.057098388671875
    3. '[' → logprob: -4.057098388671875
    4. ',' → logprob: -4.932098388671875
    5. ')' → logprob: -5.057098388671875
    6. ':' → logprob: -5.182098388671875
    7. '_' → logprob: -7.307098388671875
    8. '):
' → logprob: -8.307098388671875
    9. ' ):' → logprob: -8.682098388671875
    10. '.' → logprob: -9.057098388671875

Token 15: ' opponent' (ID: 38519)
  Prédit: ' enemy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enemy' → logprob: -0.865128755569458
    2. ' own' → logprob: -1.115128755569458
    3. ' opponent' → logprob: -1.740128755569458
    4. ' other' → logprob: -3.115128755569458
    5. ' rival' → logprob: -4.990128517150879
    6. ' opponents' → logprob: -5.115128517150879
    7. ' target' → logprob: -5.615128517150879
    8. 'own' → logprob: -6.115128517150879
    9. 'enemy' → logprob: -6.240128517150879
    10. ' wild' → logprob: -6.365128517150879

Token 16: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.01446481328457594
    2. '_' → logprob: -4.514464855194092
    3. '):' → logprob: -6.014464855194092
    4. ')_' → logprob: -8.139464378356934
    5. ')' → logprob: -8.264464378356934
    6. 's' → logprob: -9.389464378356934
    7. ' _' → logprob: -10.014464378356934
    8. '_s' → logprob: -10.514464378356934
    9. '_mon' → logprob: -10.764464378356934
    10. '_states' → logprob: -10.764464378356934

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010723850573413074
    2. ',' → logprob: -9.875106811523438
    3. ':' → logprob: -11.125106811523438
    4. ')' → logprob: -11.125106811523438
    5. '):
' → logprob: -11.250106811523438
    6. '   ' → logprob: -12.125106811523438
    7. '       ' → logprob: -12.625106811523438
    8. '```' → logprob: -13.125106811523438
    9. ' ):' → logprob: -13.750106811523438
    10. ''):' → logprob: -15.375106811523438

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001219643629156053
    2. '```' → logprob: -7.501219749450684
    3. 'self' → logprob: -8.626219749450684
    4. '\' → logprob: -9.251219749450684
    5. '\n' → logprob: -10.126219749450684
    6. 'newline' → logprob: -10.126219749450684
    7. '        
' → logprob: -10.126219749450684
    8. '(' → logprob: -10.126219749450684
    9. ':' → logprob: -10.376219749450684
    10. '   ' → logprob: -10.751219749450684

Token 19: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4500197172164917
    2. '       ' → logprob: -1.0750197172164917
    3. ' self' → logprob: -3.9500198364257812
    4. '```' → logprob: -7.575019836425781
    5. '           ' → logprob: -8.075019836425781
    6. '         ' → logprob: -8.200019836425781
    7. '        ' → logprob: -8.700019836425781
    8. '   ' → logprob: -8.950019836425781
    9. ' ' → logprob: -9.075019836425781
    10. '_self' → logprob: -10.200019836425781

Token 20: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005121642025187612
    2. ' .' → logprob: -7.62551212310791
    3. '.owner' → logprob: -13.00051212310791
    4. '.self' → logprob: -13.37551212310791
    5. '._' → logprob: -13.37551212310791
    6. '   ' → logprob: -13.87551212310791
    7. '.next' → logprob: -14.00051212310791
    8. '.user' → logprob: -14.12551212310791
    9. '.is' → logprob: -14.25051212310791
    10. '.op' → logprob: -14.25051212310791

Token 21: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -1.4617256056226324e-05
    2. 'op' → logprob: -11.500014305114746
    3. 'ow' → logprob: -13.375014305114746
    4. 'o' → logprob: -13.750014305114746
    5. 'owner' → logprob: -15.125014305114746
    6. 'def' → logprob: -15.250014305114746
    7. 'owns' → logprob: -15.500014305114746
    8. '_' → logprob: -15.625014305114746
    9. '```' → logprob: -15.625014305114746
    10. ' own' → logprob: -15.750014305114746

Token 22: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.0024793429765850306
    2. '_' → logprob: -6.127479553222656
    3. '.' → logprob: -8.627479553222656
    4. '._' → logprob: -9.877479553222656
    5. '[' → logprob: -11.252479553222656
    6. ' _' → logprob: -11.252479553222656
    7. 'levels' → logprob: -11.877479553222656
    8. '_layers' → logprob: -12.377479553222656
    9. '_s' → logprob: -12.377479553222656
    10. '_scores' → logprob: -12.502479553222656

Token 23: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9089838266372681
    2. '=' → logprob: -1.158983826637268
    3. ' =' → logprob: -1.408983826637268
    4. '<|end|>' → logprob: -4.6589837074279785
    5. '.append' → logprob: -4.7839837074279785
    6. '.' → logprob: -5.4089837074279785
    7. ')' → logprob: -5.5339837074279785
    8. '.extend' → logprob: -5.7839837074279785
    9. '[:]' → logprob: -6.2839837074279785
    10. ']' → logprob: -6.9089837074279785

Token 24: ' sorted' (ID: 20099)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.0789070799946785
    2. 'own' → logprob: -2.578907012939453
    3. ' ' → logprob: -11.578907012939453
    4. '[]' → logprob: -12.578907012939453
    5. '[' → logprob: -13.203907012939453
    6. ' ' → logprob: -14.078907012939453
    7. ' ow' → logprob: -15.203907012939453
    8. ' []' → logprob: -15.328907012939453
    9. ' [' → logprob: -15.703907012939453
    10. '  ' → logprob: -15.891407012939453

Token 25: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000506326905451715
    2. '(self' → logprob: -7.625506401062012
    3. '(
' → logprob: -12.125506401062012
    4. '(

' → logprob: -13.250506401062012
    5. '(op' → logprob: -13.375506401062012
    6. '(user' → logprob: -13.625506401062012
    7. '((' → logprob: -13.625506401062012
    8. '(open' → logprob: -13.875506401062012
    9. '(list' → logprob: -14.250506401062012
    10. '()' → logprob: -14.375506401062012

Token 26: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.014824864454567432
    2. '(' → logprob: -4.264824867248535
    3. 'self' → logprob: -7.639824867248535
    4. 'op' → logprob: -9.389824867248535
    5. ' own' → logprob: -9.639824867248535
    6. '(self' → logprob: -11.139824867248535
    7. ')' → logprob: -11.389824867248535
    8. 'ow' → logprob: -12.514824867248535
    9. '(op' → logprob: -14.014824867248535
    10. 'o' → logprob: -15.764824867248535

Token 27: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.009351327084004879
    2. '_' → logprob: -4.8843512535095215
    3. '(' → logprob: -6.5093512535095215
    4. ')' → logprob: -8.63435173034668
    5. '(_' → logprob: -10.50935173034668
    6. '_)' → logprob: -11.25935173034668
    7. ')_' → logprob: -11.63435173034668
    8. '(self' → logprob: -12.38435173034668
    9. '(
' → logprob: -12.50935173034668
    10. '())' → logprob: -12.75935173034668

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133556544780731
    2. ',' → logprob: -1.3133556842803955
    3. ' ,' → logprob: -11.063355445861816
    4. '.copy' → logprob: -11.563355445861816
    5. ')
' → logprob: -11.688355445861816
    6. ',)' → logprob: -11.813355445861816
    7. '[::-' → logprob: -11.813355445861816
    8. '   ' → logprob: -11.938355445861816
    9. '```' → logprob: -11.938355445861816
    10. ',
' → logprob: -12.188355445861816

Token 29: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6436905860900879
    2. '       ' → logprob: -0.7686905860900879
    3. ' self' → logprob: -5.393690586090088
    4. ' ' → logprob: -6.393690586090088
    5. '        
' → logprob: -6.518690586090088
    6. '        ' → logprob: -7.518690586090088
    7. '<|end|>' → logprob: -7.893690586090088
    8. '<|end|>' → logprob: -8.01869010925293
    9. 'op' → logprob: -8.14369010925293
    10. '   ' → logprob: -8.26869010925293

Token 31: '.op' (ID: 19357)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6327375173568726
    2. '.op' → logprob: -0.7577375173568726
    3. 'Opponent' → logprob: -10.257737159729004
    4. '_op' → logprob: -10.882737159729004
    5. ' .' → logprob: -11.132737159729004
    6. 'op' → logprob: -11.382737159729004
    7. '.omg' → logprob: -12.007737159729004
    8. '​.' → logprob: -12.257737159729004
    9. '<|end|>' → logprob: -12.257737159729004
    10. '._' → logprob: -12.257737159729004

Token 32: 'ponent' (ID: 1758)
  Prédit: 'onent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -0.08281920850276947
    2. 'ponent' → logprob: -2.8328192234039307
    3. 'on' → logprob: -3.9578192234039307
    4. '_levels' → logprob: -7.207818984985352
    5. 'o' → logprob: -7.957818984985352
    6. '_level' → logprob: -8.957818984985352
    7. 'nent' → logprob: -9.082818984985352
    8. '_' → logprob: -10.457818984985352
    9. 'onet' → logprob: -10.957818984985352
    10. 'op' → logprob: -11.082818984985352

Token 33: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -5.776898251497187e-05
    2. '_' → logprob: -10.1250581741333
    3. 's' → logprob: -12.6250581741333
    4. '```' → logprob: -12.7500581741333
    5. '_s' → logprob: -13.1250581741333
    6. 'levels' → logprob: -13.2500581741333
    7. ' _' → logprob: -13.5000581741333
    8. ')_' → logprob: -13.5000581741333
    9. 'Levels' → logprob: -14.0000581741333
    10. '_scores' → logprob: -14.0000581741333

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142988860607147
    2. '=' → logprob: -1.701429843902588
    3. ' ' → logprob: -11.701430320739746
    4. ')' → logprob: -13.451430320739746
    5. '   ' → logprob: -13.701430320739746
    6. '.' → logprob: -13.826430320739746
    7. '<|end|>' → logprob: -13.951430320739746
    8. 'sorted' → logprob: -14.326430320739746
    9. '_sorted' → logprob: -14.826430320739746
    10. '  ' → logprob: -14.826430320739746

Token 35: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.007617983501404524
    2. 'sorted' → logprob: -4.882617950439453
    3. ' opponent' → logprob: -11.632617950439453
    4. 'op' → logprob: -14.257617950439453
    5. ' ' → logprob: -14.507617950439453
    6. '(sorted' → logprob: -14.757617950439453
    7. '.sorted' → logprob: -14.882617950439453
    8. '[]' → logprob: -15.132617950439453
    9. ' list' → logprob: -15.257617950439453
    10. '[' → logprob: -16.257617950439453

Token 36: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.011313535273075104
    2. '(' → logprob: -4.511313438415527
    3. '(self' → logprob: -8.261313438415527
    4. '(
' → logprob: -12.511313438415527
    5. '(

' → logprob: -13.386313438415527
    6. ' (' → logprob: -14.386313438415527
    7. '(user' → logprob: -14.886313438415527
    8. '(operator' → logprob: -16.136314392089844
    9. '(over' → logprob: -16.261314392089844
    10. '	op' → logprob: -16.261314392089844

Token 37: 'ponent' (ID: 1758)
  Prédit: 'onent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -0.00643291836604476
    2. 'ponent' → logprob: -5.256433010101318
    3. 'on' → logprob: -6.756433010101318
    4. 'o' → logprob: -11.88143253326416
    5. ')' → logprob: -12.00643253326416
    6. 'onen' → logprob: -12.63143253326416
    7. '(' → logprob: -12.75643253326416
    8. '```' → logprob: -13.50643253326416
    9. 'ONENT' → logprob: -13.63143253326416
    10. 'one' → logprob: -13.63143253326416

Token 38: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.005322227720171213
    2. '_' → logprob: -5.255322456359863
    3. 's' → logprob: -10.130322456359863
    4. '_)' → logprob: -10.380322456359863
    5. ')' → logprob: -12.255322456359863
    6. ')_' → logprob: -12.380322456359863
    7. '_
' → logprob: -13.005322456359863
    8. 'levels' → logprob: -13.255322456359863
    9. '_s' → logprob: -13.630322456359863
    10. '_

' → logprob: -14.255322456359863

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.572941179503687e-05
    2. ')
' → logprob: -10.250045776367188
    3. '       ' → logprob: -12.125045776367188
    4. '   ' → logprob: -13.750045776367188
    5. ' )' → logprob: -14.125045776367188
    6. '<|end|>' → logprob: -14.250045776367188
    7. ']' → logprob: -14.375045776367188
    8. '[' → logprob: -15.000045776367188
    9. '```' → logprob: -15.250045776367188
    10. '}' → logprob: -15.375045776367188

Token 40: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2132605016231537
    2. '   ' → logprob: -1.838260531425476
    3. '<|end|>' → logprob: -4.838260650634766
    4. '    
' → logprob: -5.213260650634766
    5. 'def' → logprob: -5.338260650634766
    6. ' 
' → logprob: -5.588260650634766
    7. ' def' → logprob: -5.713260650634766
    8. '\n' → logprob: -6.713260650634766
    9. ' ' → logprob: -6.838260650634766
    10. '  
' → logprob: -6.838260650634766

Token 41: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006301192566752434
    2. '   ' → logprob: -6.006301403045654
    3. 'def' → logprob: -6.506301403045654
    4. '    
' → logprob: -6.506301403045654
    5. '<|end|>' → logprob: -8.506300926208496
    6. ' 
' → logprob: -8.631300926208496
    7. ' def' → logprob: -9.131300926208496
    8. '        
' → logprob: -9.631300926208496
    9. '  
' → logprob: -9.756300926208496
    10. 'n' → logprob: -9.881300926208496

Token 42: '.N' (ID: 4439)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02654062956571579
    2. '._' → logprob: -4.901540756225586
    3. '.w' → logprob: -4.901540756225586
    4. '.max' → logprob: -6.026540756225586
    5. '.score' → logprob: -6.776540756225586
    6. '.points' → logprob: -6.901540756225586
    7. '.best' → logprob: -7.151540756225586
    8. '.b' → logprob: -7.151540756225586
    9. '.def' → logprob: -7.276540756225586
    10. '.current' → logprob: -7.401540756225586

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49451375007629395
    2. '=' → logprob: -0.994513750076294
    3. '_' → logprob: -3.994513750076294
    4. '<|end|>' → logprob: -6.744513511657715
    5. ' ' → logprob: -8.119513511657715
    6. ')' → logprob: -8.994513511657715
    7. '.' → logprob: -9.869513511657715
    8. '  ' → logprob: -10.369513511657715
    9. ',' → logprob: -10.619513511657715
    10. ' _' → logprob: -10.869513511657715

Token 44: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -5.908022285439074e-05
    2. 'len' → logprob: -9.750059127807617
    3. ' ' → logprob: -14.625059127807617
    4. '(len' → logprob: -15.750059127807617
    5. ' max' → logprob: -16.750059127807617
    6. '=len' → logprob: -16.750059127807617
    7. '	len' → logprob: -16.750059127807617
    8. ' min' → logprob: -16.875059127807617
    9. ' ' → logprob: -17.500059127807617
    10. '[len' → logprob: -18.500059127807617

Token 45: '(' (ID: 7)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47410210967063904
    2. '(' → logprob: -0.9741021394729614
    3. '(s' → logprob: -11.224102020263672
    4. 'self' → logprob: -12.474102020263672
    5. '(
' → logprob: -12.849102020263672
    6. '(

' → logprob: -13.724102020263672
    7. '(op' → logprob: -13.974102020263672
    8. '(sel' → logprob: -14.224102020263672
    9. ' (' → logprob: -14.474102020263672
    10. '(this' → logprob: -14.599102020263672

Token 46: 'own' (ID: 940)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4370224177837372
    2. 'own' → logprob: -1.0620224475860596
    3. '(self' → logprob: -5.4370222091674805
    4. ' own' → logprob: -6.1870222091674805
    5. '(' → logprob: -6.9370222091674805
    6. ' self' → logprob: -7.3120222091674805
    7. ')' → logprob: -9.31202220916748
    8. 'ow' → logprob: -9.93702220916748
    9. 'op' → logprob: -10.81202220916748
    10. 'sel' → logprob: -10.93702220916748

Token 47: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.00016182278341148049
    2. '_' → logprob: -8.750162124633789
    3. ')_' → logprob: -13.750162124633789
    4. ' _' → logprob: -13.750162124633789
    5. ')' → logprob: -14.875162124633789
    6. '_)' → logprob: -15.250162124633789
    7. '_
' → logprob: -15.500162124633789
    8. '```' → logprob: -16.25016212463379
    9. '_level' → logprob: -16.62516212463379
    10. '_

' → logprob: -16.75016212463379

Token 48: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ' )' → logprob: -13.125004768371582
    3. ')
' → logprob: -13.500004768371582
    4. '`)' → logprob: -14.750004768371582
    5. '       ' → logprob: -14.875004768371582
    6. '   ' → logprob: -15.250004768371582
    7. '```' → logprob: -15.500004768371582
    8. '}' → logprob: -15.875004768371582
    9. '<|end|>' → logprob: -16.0000057220459
    10. ')n' → logprob: -17.3750057220459

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06839805841445923
    2. '   ' → logprob: -2.8183979988098145
    3. 'def' → logprob: -5.9433979988098145
    4. '    
' → logprob: -6.1933979988098145
    5. ' def' → logprob: -7.4433979988098145
    6. '<|end|>' → logprob: -7.9433979988098145
    7. ' 
' → logprob: -8.443398475646973
    8. '  
' → logprob: -8.818398475646973
    9. '```' → logprob: -9.568398475646973
    10. '\n' → logprob: -9.818398475646973

Token 50: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6058528423309326
    2. '
' → logprob: -1.3558528423309326
    3. 'def' (adapté à ' def') → logprob: -2.1058528423309326
    4. ' def' → logprob: -2.7308528423309326
    5. '    
' → logprob: -5.480853080749512
    6. 'd' → logprob: -6.605853080749512
    7. '```' → logprob: -6.730853080749512
    8. ' 
' → logprob: -7.105853080749512
    9. '\' → logprob: -7.105853080749512
    10. '	def' → logprob: -7.980853080749512

Token 51: ' can' (ID: 665)
  Prédit: ' simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' simulate' → logprob: -0.013183764182031155
    2. 'simulate' → logprob: -5.01318359375
    3. ' best' → logprob: -6.63818359375
    4. ' ' → logprob: -7.01318359375
    5. ' predict' → logprob: -7.26318359375
    6. ' calculate' → logprob: -7.51318359375
    7. ' max' → logprob: -7.51318359375
    8. ' sim' → logprob: -7.76318359375
    9. ' battle' → logprob: -8.01318359375
    10. ' maximize' → logprob: -8.13818359375

Token 52: '_win' (ID: 63099)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0908806249499321
    2. '_def' → logprob: -2.7158806324005127
    3. ' _' → logprob: -4.965880393981934
    4. 'Def' → logprob: -5.590880393981934
    5. '_win' → logprob: -5.715880393981934
    6. '_take' → logprob: -6.340880393981934
    7. '_de' → logprob: -6.715880393981934
    8. '_use' → logprob: -7.590880393981934
    9. '_attack' → logprob: -7.965880393981934
    10. 'Win' → logprob: -8.090880393981934

Token 53: '_with' (ID: 14161)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25005853176116943
    2. '_' → logprob: -1.6250585317611694
    3. '(self' → logprob: -3.875058650970459
    4. ' (' → logprob: -7.125058650970459
    5. 'self' → logprob: -7.375058650970459
    6. '(
' → logprob: -8.1250581741333
    7. '_(' → logprob: -8.2500581741333
    8. '_self' → logprob: -8.2500581741333
    9. '_space' → logprob: -8.2500581741333
    10. 's' → logprob: -8.3750581741333

Token 54: '_k' (ID: 11637)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0253922026604414
    2. '_' → logprob: -4.400392055511475
    3. 'self' → logprob: -5.525392055511475
    4. '_levels' → logprob: -6.150392055511475
    5. '(' → logprob: -6.275392055511475
    6. ' self' → logprob: -6.525392055511475
    7. '_level' → logprob: -7.275392055511475
    8. '_self' → logprob: -7.775392055511475
    9. ' (' → logprob: -7.900392055511475
    10. '_threshold' → logprob: -8.025392532348633

Token 55: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029823511838912964
    2. '(' → logprob: -3.5298235416412354
    3. 'self' → logprob: -10.904823303222656
    4. '_' → logprob: -11.029823303222656
    5. '(s' → logprob: -11.154823303222656
    6. '(k' → logprob: -11.529823303222656
    7. '_(' → logprob: -12.529823303222656
    8. ' (' → logprob: -13.029823303222656
    9. '```' → logprob: -13.404823303222656
    10. '_k' → logprob: -13.529823303222656

Token 56: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02309918776154518
    2. '(' → logprob: -3.898099184036255
    3. 'self' → logprob: -6.898099422454834
    4. ')' → logprob: -6.898099422454834
    5. ' (' → logprob: -8.773098945617676
    6. ')(' → logprob: -9.148098945617676
    7. '_' → logprob: -9.523098945617676
    8. ' self' → logprob: -10.023098945617676
    9. '(s' → logprob: -10.773098945617676
    10. '(k' → logprob: -11.148098945617676

Token 57: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.06741520762443542
    2. 'k' → logprob: -2.817415237426758
    3. ' self' → logprob: -5.692415237426758
    4. 'self' → logprob: -6.192415237426758
    5. ' ' → logprob: -12.317415237426758
    6. ' ' → logprob: -13.192415237426758
    7. '	k' → logprob: -13.192415237426758
    8. '   ' → logprob: -13.317415237426758
    9. ')' → logprob: -13.317415237426758
    10. 'def' → logprob: -13.942415237426758

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01165024284273386
    2. ')' → logprob: -4.511650085449219
    3. '):
' → logprob: -8.261650085449219
    4. ' ):' → logprob: -8.761650085449219
    5. ',' → logprob: -9.011650085449219
    6. ':' → logprob: -10.511650085449219
    7. 'self' → logprob: -11.636650085449219
    8. ' )' → logprob: -11.761650085449219
    9. '   ' → logprob: -11.886650085449219
    10. '_' → logprob: -12.761650085449219

Token 59: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2233952283859253
    2. '       ' → logprob: -1.7233952283859253
    3. '):' → logprob: -4.973395347595215
    4. '<|end|>' → logprob: -5.098395347595215
    5. '():' → logprob: -5.848395347595215
    6. '   ' → logprob: -6.473395347595215
    7. ')' → logprob: -7.223395347595215
    8. '    ' → logprob: -7.348395347595215
    9. ':
' → logprob: -7.723395347595215
    10. '        ' → logprob: -7.973395347595215

Token 60: ' #' (ID: 1069)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' own' → logprob: -1.0998756885528564
    2. '    ' → logprob: -1.3498756885528564
    3. '       ' → logprob: -1.9748756885528564
    4. '        ' → logprob: -2.4748756885528564
    5. ' for' → logprob: -2.7248756885528564
    6. ' ' → logprob: -2.7248756885528564
    7. ' return' → logprob: -4.849875450134277
    8. ' ' → logprob: -5.224875450134277
    9. '   ' → logprob: -5.349875450134277
    10. '```' → logprob: -5.724875450134277

Token 61: ' Determine' (ID: 57076)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.7854708433151245
    2. ' for' → logprob: -1.2854708433151245
    3. ' ' → logprob: -1.7854708433151245
    4. 'for' → logprob: -3.660470962524414
    5. 'own' → logprob: -4.410470962524414
    6. ' i' → logprob: -5.160470962524414
    7. '    ' → logprob: -5.160470962524414
    8. ' o' → logprob: -5.410470962524414
    9. ' #' → logprob: -5.535470962524414
    10. ' def' → logprob: -5.660470962524414

Token 62: ' if' (ID: 538)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.4866999089717865
    2. ' for' → logprob: -1.4866999387741089
    3. ' if' → logprob: -2.7366998195648193
    4. ' ' → logprob: -3.6116998195648193
    5. '    ' → logprob: -4.236700057983398
    6. ' i' → logprob: -4.486700057983398
    7. ' ' → logprob: -4.861700057983398
    8. 'own' → logprob: -5.236700057983398
    9. 'for' → logprob: -5.986700057983398
    10. '   ' → logprob: -5.986700057983398

Token 63: ' there' (ID: 1354)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2963654100894928
    2. ' own' → logprob: -1.6713653802871704
    3. ' k' → logprob: -3.92136549949646
    4. '_' → logprob: -4.546365261077881
    5. ' the' → logprob: -4.921365261077881
    6. ' a' → logprob: -5.046365261077881
    7. ' self' → logprob: -5.546365261077881
    8. ' for' → logprob: -5.546365261077881
    9. ')' → logprob: -5.921365261077881
    10. ' )' → logprob: -6.296365261077881

Token 64: ' exists' (ID: 13031)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2651785612106323
    2. ' exists' → logprob: -1.5151785612106323
    3. ' are' → logprob: -5.140178680419922
    4. ' ' → logprob: -5.890178680419922
    5. ' exist' → logprob: -6.265178680419922
    6. ' space' → logprob: -7.890178680419922
    7. ' a' → logprob: -7.890178680419922
    8. ''s' → logprob: -8.265178680419922
    9. '<|end|>' → logprob: -8.390178680419922
    10. ' '' → logprob: -8.390178680419922

Token 65: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.05506124347448349
    2. ' ' → logprob: -3.8050613403320312
    3. ' an' → logprob: -3.8050613403320312
    4. 'a' → logprob: -5.430061340332031
    5. '<|end|>' → logprob: -5.805061340332031
    6. ' own' → logprob: -6.930061340332031
    7. ' ' → logprob: -9.180061340332031
    8. '_' → logprob: -9.180061340332031
    9. '```' → logprob: -9.805061340332031
    10. '<|end|>' → logprob: -9.930061340332031

Token 66: ' selection' (ID: 8441)
  Prédit: ' permutation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutation' → logprob: -0.776328980922699
    2. ' way' → logprob: -1.5263290405273438
    3. ' matching' → logprob: -2.5263290405273438
    4. ' strategy' → logprob: -3.4013290405273438
    5. ' own' → logprob: -3.4013290405273438
    6. ' match' → logprob: -3.7763290405273438
    7. 'matching' → logprob: -4.151329040527344
    8. ' sequence' → logprob: -4.526329040527344
    9. ' subse' → logprob: -4.526329040527344
    10. ' perfect' → logprob: -4.526329040527344

Token 67: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.20314356684684753
    2. 'k' → logprob: -2.32814359664917
    3. ' own' → logprob: -2.70314359664917
    4. ' ' → logprob: -4.45314359664917
    5. ' `' → logprob: -6.07814359664917
    6. 'own' → logprob: -6.32814359664917
    7. ' the' → logprob: -6.45314359664917
    8. ' self' → logprob: -7.95314359664917
    9. 'self' → logprob: -8.078143119812012
    10. '<|end|>' → logprob: -8.578143119812012

Token 69: ' monsters' (ID: 59311)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.08812160789966583
    2. '<|end|>' → logprob: -3.0881216526031494
    3. 'own' → logprob: -4.46312141418457
    4. ' monsters' → logprob: -5.21312141418457
    5. ')' → logprob: -5.33812141418457
    6. ' of' → logprob: -5.46312141418457
    7. ' )' → logprob: -5.71312141418457
    8. ' from' → logprob: -6.71312141418457
    9. ' indices' → logprob: -6.71312141418457
    10. ' opponents' → logprob: -6.83812141418457

Token 70: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' own' (ID: 2316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6363668441772461
    2. ' self' → logprob: -0.8863668441772461
    3. ' own' → logprob: -3.136366844177246
    4. ' the' → logprob: -4.886366844177246
    5. ' your' → logprob: -6.011366844177246
    6. 'self' → logprob: -6.136366844177246
    7. ' our' → logprob: -7.386366844177246
    8. ' their' → logprob: -8.136366844177246
    9. ')' → logprob: -8.261366844177246
    10. ' `' → logprob: -8.261366844177246

Token 72: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.24505551159381866
    2. '_' → logprob: -1.6200555562973022
    3. ' _' → logprob: -4.995055675506592
    4. ')' → logprob: -5.620055675506592
    5. ' )' → logprob: -6.120055675506592
    6. ' ' → logprob: -6.120055675506592
    7. 'levels' → logprob: -6.995055675506592
    8. ' levels' → logprob: -7.120055675506592
    9. ' own' → logprob: -7.495055675506592
    10. 'own' → logprob: -7.870055675506592

Token 73: '
' (ID: 198)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.9416852593421936
    2. '<|end|>' → logprob: -1.5666851997375488
    3. ' to' → logprob: -1.9416851997375488
    4. ' ' → logprob: -2.316685199737549
    5. ' such' → logprob: -2.816685199737549
    6. ' for' → logprob: -3.191685199737549
    7. ' with' → logprob: -3.816685199737549
    8. ',' → logprob: -4.691685199737549
    9. '[' → logprob: -5.066685199737549
    10. ')' → logprob: -5.066685199737549

Token 74: '       ' (ID: 309)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.1436905413866043
    2. ' that' → logprob: -2.518690586090088
    3. ' to' → logprob: -4.268690586090088
    4. ' ' → logprob: -4.768690586090088
    5. ' and' → logprob: -4.893690586090088
    6. ' for' → logprob: -5.268690586090088
    7. ' with' → logprob: -5.518690586090088
    8. ',' → logprob: -5.768690586090088
    9. ')' → logprob: -5.768690586090088
    10. ' ,' → logprob: -6.518690586090088

Token 75: ' #' (ID: 1069)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.8342499136924744
    2. ' that' → logprob: -1.2092499732971191
    3. ' own' → logprob: -1.9592499732971191
    4. ' ' → logprob: -3.584249973297119
    5. ' to' → logprob: -3.584249973297119
    6. ' for' → logprob: -4.084249973297119
    7. '       ' → logprob: -4.709249973297119
    8. ' and' → logprob: -4.709249973297119
    9. ')' → logprob: -4.834249973297119
    10. ' with' → logprob: -4.959249973297119

Token 76: ' so' (ID: 813)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0943512916564941
    2. '<|end|>' → logprob: -1.7193512916564941
    3. ' for' → logprob: -1.8443512916564941
    4. ' own' → logprob: -1.9693512916564941
    5. '<|end|>' → logprob: -2.969351291656494
    6. ' selected' → logprob: -3.719351291656494
    7. ' that' → logprob: -3.719351291656494
    8. ' to' → logprob: -3.969351291656494
    9. ')' → logprob: -3.969351291656494
    10. ' with' → logprob: -5.094351291656494

Token 77: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.006636620964854956
    2. 'that' → logprob: -5.256636619567871
    3. ' ' → logprob: -7.256636619567871
    4. '    ' → logprob: -7.631636619567871
    5. '   ' → logprob: -10.006636619567871
    6. ' the' → logprob: -10.381636619567871
    7. ' you' → logprob: -10.631636619567871
    8. ',' → logprob: -11.131636619567871
    9. ' as' → logprob: -11.131636619567871
    10. ' there' → logprob: -11.381636619567871

Token 78: ' no' (ID: 860)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7012779116630554
    2. ' the' → logprob: -1.9512779712677002
    3. ' own' → logprob: -1.9512779712677002
    4. ' each' → logprob: -2.2012779712677
    5. ' every' → logprob: -2.8262779712677
    6. ' for' → logprob: -3.9512779712677
    7. ' self' → logprob: -4.201277732849121
    8. 'all' → logprob: -4.951277732849121
    9. 'each' → logprob: -6.076277732849121
    10. 'own' → logprob: -6.451277732849121

Token 79: ' matter' (ID: 7165)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.24570401012897491
    2. ' opponent' → logprob: -1.7457040548324585
    3. ' ' → logprob: -4.120704174041748
    4. 'own' → logprob: -5.120704174041748
    5. ' i' → logprob: -5.745704174041748
    6. ' selected' → logprob: -5.995704174041748
    7. '<|end|>' → logprob: -6.120704174041748
    8. ' space' → logprob: -6.495704174041748
    9. ' other' → logprob: -6.870704174041748
    10. ' two' → logprob: -6.995704174041748

Token 80: ' how' (ID: 1495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7522062659263611
    2. ' which' → logprob: -0.8772062659263611
    3. ' what' → logprob: -2.877206325531006
    4. ' how' → logprob: -3.252206325531006
    5. 'the' → logprob: -4.877206325531006
    6. 'which' → logprob: -5.127206325531006
    7. ' where' → logprob: -6.127206325531006
    8. ' their' → logprob: -7.252206325531006
    9. 'how' → logprob: -7.377206325531006
    10. 'what' → logprob: -8.752205848693848

Token 81: ' opponent' (ID: 38519)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3274639844894409
    2. ' opponent' → logprob: -1.702463984489441
    3. 'op' → logprob: -3.0774641036987305
    4. 'the' → logprob: -3.4524641036987305
    5. ' opponents' → logprob: -4.5774641036987305
    6. ' you' → logprob: -5.3274641036987305
    7. ' they' → logprob: -7.2024641036987305
    8. ' we' → logprob: -7.4524641036987305
    9. 'Opponent' → logprob: -7.4524641036987305
    10. 'you' → logprob: -7.5774641036987305

Token 82: ' selects' (ID: 94639)
  Prédit: ' chooses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chooses' → logprob: -0.4534200429916382
    2. ' selects' → logprob: -2.4534201622009277
    3. '   ' → logprob: -2.7034201622009277
    4. ' picks' → logprob: -2.8284201622009277
    5. ''s' → logprob: -3.3284201622009277
    6. 'select' → logprob: -3.9534201622009277
    7. 'cho' → logprob: -4.203420162200928
    8. '_levels' → logprob: -4.328420162200928
    9. '       ' → logprob: -4.453420162200928
    10. 's' → logprob: -4.703420162200928

Token 83: ' k' (ID: 372)
  Prédit: ' their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' their' → logprob: -1.1513681411743164
    2. ' the' → logprob: -1.4013681411743164
    3. ' k' → logprob: -1.5263681411743164
    4. ',' → logprob: -2.7763681411743164
    5. 'k' → logprob: -3.4013681411743164
    6. ' ' → logprob: -3.5263681411743164
    7. ' ,' → logprob: -3.5263681411743164
    8. '<|end|>' → logprob: -4.401368141174316
    9. ' from' → logprob: -4.526368141174316
    10. ' own' → logprob: -4.526368141174316

Token 84: ' monsters' (ID: 59311)
  Prédit: ' monsters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monsters' → logprob: -0.2733200788497925
    2. ' from' → logprob: -2.773320198059082
    3. 'mon' → logprob: -3.148320198059082
    4. ' of' → logprob: -3.648320198059082
    5. ' ' → logprob: -3.773320198059082
    6. ' own' → logprob: -3.898320198059082
    7. ')' → logprob: -4.148320198059082
    8. '<|end|>' → logprob: -4.523320198059082
    9. '_mon' → logprob: -4.898320198059082
    10. ' opponents' → logprob: -5.273320198059082

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004259919282048941
    2. ' ,' → logprob: -6.004260063171387
    3. ' from' → logprob: -6.629260063171387
    4. 'from' → logprob: -8.379260063171387
    5. ',
' → logprob: -9.004260063171387
    6. '<|end|>' → logprob: -10.004260063171387
    7. ' for' → logprob: -10.629260063171387
    8. ' and' → logprob: -12.004260063171387
    9. ')' → logprob: -12.254260063171387
    10. '.' → logprob: -12.629260063171387

Token 86: ' we' (ID: 581)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5186179876327515
    2. ' there' → logprob: -1.5186179876327515
    3. ' own' → logprob: -1.7686179876327515
    4. ' all' → logprob: -5.143618106842041
    5. ' your' → logprob: -6.393618106842041
    6. ' self' → logprob: -6.643618106842041
    7. ' we' → logprob: -6.768618106842041
    8. ' each' → logprob: -7.393618106842041
    9. 'the' → logprob: -7.518618106842041
    10. ' you' → logprob: -7.643618106842041

Token 87: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.013562756590545177
    2. ' have' → logprob: -5.6385626792907715
    3. '<|end|>' → logprob: -5.7635626792907715
    4. ' ' → logprob: -6.0135626792907715
    5. 'can' → logprob: -6.0135626792907715
    6. '<|end|>' → logprob: -8.13856315612793
    7. ''' → logprob: -8.26356315612793
    8. ')' → logprob: -8.51356315612793
    9. ' own' → logprob: -8.63856315612793
    10. ' '' → logprob: -9.13856315612793

Token 88: ' win' (ID: 4449)
  Prédit: ' defeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defeat' → logprob: -1.0623176097869873
    2. ' guarantee' → logprob: -1.3123176097869873
    3. ' match' → logprob: -1.4373176097869873
    4. ' beat' → logprob: -3.8123176097869873
    5. ' choose' → logprob: -3.9373176097869873
    6. ' ensure' → logprob: -4.062317848205566
    7. 'match' → logprob: -4.187317848205566
    8. 'choose' → logprob: -4.562317848205566
    9. ' always' → logprob: -4.687317848205566
    10. ' find' → logprob: -4.687317848205566

Token 89: ' >' (ID: 1424)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.048111915588379
    2. '       ' → logprob: -1.048111915588379
    3. '   ' → logprob: -1.548111915588379
    4. ',' → logprob: -3.923111915588379
    5. '    ' → logprob: -4.423111915588379
    6. '_' → logprob: -4.548111915588379
    7. ' by' → logprob: -4.798111915588379
    8. '(' → logprob: -4.798111915588379
    9. ' :' → logprob: -5.673111915588379
    10. ' ' → logprob: -5.798111915588379

Token 90: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0163413286209106
    2. ':' → logprob: -1.6413413286209106
    3. '    ' → logprob: -2.516341209411621
    4. ' for' → logprob: -3.266341209411621
    5. '       ' → logprob: -3.266341209411621
    6. ' own' → logprob: -3.391341209411621
    7. ' ' → logprob: -3.516341209411621
    8. ' with' → logprob: -3.516341209411621
    9. ' at' → logprob: -3.516341209411621
    10. ',' → logprob: -3.641341209411621

Token 91: '/' (ID: 14)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2238883078098297
    2. '   ' → logprob: -3.098888397216797
    3. '):' → logprob: -3.098888397216797
    4. ')' → logprob: -3.348888397216797
    5. '       ' → logprob: -3.348888397216797
    6. ' ' → logprob: -4.473888397216797
    7. ',' → logprob: -5.723888397216797
    8. '
' → logprob: -5.723888397216797
    9. '    ' → logprob: -5.723888397216797
    10. ' and' → logprob: -5.848888397216797

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009791151620447636
    2. ' ' → logprob: -4.884791374206543
    3. 'k' → logprob: -6.759791374206543
    4. ')' → logprob: -8.009791374206543
    5. '  ' → logprob: -9.134791374206543
    6. '>' → logprob: -9.384791374206543
    7. '=' → logprob: -9.759791374206543
    8. '1' → logprob: -9.884791374206543
    9. '.' → logprob: -10.134791374206543
    10. '```' → logprob: -10.509791374206543

Token 93: ' times' (ID: 4238)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028574267402291298
    2. '):' → logprob: -4.028574466705322
    3. '       ' → logprob: -5.528574466705322
    4. ')' → logprob: -5.778574466705322
    5. ',' → logprob: -7.153574466705322
    6. ' :' → logprob: -7.403574466705322
    7. '   ' → logprob: -7.528574466705322
    8. '<|end|>' → logprob: -7.778574466705322
    9. ':
' → logprob: -8.278573989868164
    10. ':return' → logprob: -8.903573989868164

Token 94: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0332966223359108
    2. '):' → logprob: -4.033296585083008
    3. '       ' → logprob: -4.783296585083008
    4. ')' → logprob: -5.658296585083008
    5. ',' → logprob: -6.908296585083008
    6. '   ' → logprob: -7.033296585083008
    7. ' :' → logprob: -7.283296585083008
    8. ':
' → logprob: -8.783296585083008
    9. ':return' → logprob: -9.283296585083008
    10. '.' → logprob: -9.908296585083008

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5653495192527771
    2. ':' → logprob: -0.9403495192527771
    3. '):' → logprob: -4.315349578857422
    4. '   ' → logprob: -4.690349578857422
    5. ')' → logprob: -5.190349578857422
    6. ' :' → logprob: -5.315349578857422
    7. '    ' → logprob: -6.190349578857422
    8. ',' → logprob: -6.940349578857422
    9. ':
' → logprob: -7.190349578857422
    10. ' ' → logprob: -7.315349578857422

Token 96: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19758661091327667
    2. '       ' → logprob: -2.4475865364074707
    3. '
' → logprob: -2.9475865364074707
    4. ':
' → logprob: -4.072586536407471
    5. ')' → logprob: -5.447586536407471
    6. '   ' → logprob: -5.572586536407471
    7. ' :' → logprob: -5.822586536407471
    8. '):' → logprob: -6.322586536407471
    9. '<|end|>' → logprob: -6.322586536407471
    10. '\' → logprob: -6.447586536407471

Token 97: ' Equivalent' (ID: 197203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10418005287647247
    2. '
' → logprob: -3.229180097579956
    3. '        ' → logprob: -3.604180097579956
    4. ' own' → logprob: -4.854179859161377
    5. '    ' → logprob: -5.479179859161377
    6. '        
' → logprob: -5.729179859161377
    7. '<|end|>' → logprob: -5.854179859161377
    8. ' 
' → logprob: -6.104179859161377
    9. ' ' → logprob: -6.104179859161377
    10. '#' → logprob: -6.729179859161377

Token 98: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06588587909936905
    2. ' ' → logprob: -3.8158857822418213
    3. '<|end|>' → logprob: -4.4408860206604
    4. '    ' → logprob: -4.9408860206604
    5. 'to' → logprob: -4.9408860206604
    6. '   ' → logprob: -4.9408860206604
    7. ':' → logprob: -5.4408860206604
    8. '<|end|>' → logprob: -6.4408860206604
    9. '  ' → logprob: -7.4408860206604
    10. 'def' → logprob: -7.9408860206604

Token 99: ' checking' (ID: 19141)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.6232353448867798
    2. ' all' → logprob: -1.9982353448867798
    3. ' checking' → logprob: -2.2482352256774902
    4. ' a' → logprob: -2.6232352256774902
    5. 'self' → logprob: -2.8732352256774902
    6. ' "' → logprob: -2.9982352256774902
    7. '"' → logprob: -2.9982352256774902
    8. ' any' → logprob: -2.9982352256774902
    9. ' sum' → logprob: -3.3732352256774902
    10. ' len' → logprob: -3.4982352256774902

Token 100: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006951576564460993
    2. ' whether' → logprob: -5.381951808929443
    3. 'if' → logprob: -6.256951808929443
    4. ' that' → logprob: -9.256951332092285
    5. ' for' → logprob: -9.256951332092285
    6. '   ' → logprob: -10.006951332092285
    7. ' self' → logprob: -10.006951332092285
    8. 'self' → logprob: -10.756951332092285
    9. 'whether' → logprob: -10.881951332092285
    10. ' own' → logprob: -11.256951332092285

Token 101: ' we' (ID: 581)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.154071569442749
    2. ' self' → logprob: -1.279071569442749
    3. ' the' → logprob: -2.029071569442749
    4. 'self' → logprob: -2.529071569442749
    5. ' own' → logprob: -2.654071569442749
    6. ' any' → logprob: -3.154071569442749
    7. ' there' → logprob: -3.404071569442749
    8. ' a' → logprob: -5.029071807861328
    9. ' for' → logprob: -5.029071807861328
    10. ' sum' → logprob: -5.029071807861328

Token 102: ' have' (ID: 679)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.048329904675483704
    2. 'can' → logprob: -3.2983298301696777
    3. ' have' → logprob: -4.923329830169678
    4. ' ' → logprob: -6.298329830169678
    5. 'have' → logprob: -7.423329830169678
    6. '<|end|>' → logprob: -9.173330307006836
    7. '	can' → logprob: -9.548330307006836
    8. '   ' → logprob: -9.923330307006836
    9. ' cannot' → logprob: -10.735830307006836
    10. 'cannot' → logprob: -10.985830307006836

Token 103: ' strictly' (ID: 38971)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6631174683570862
    2. ' at' → logprob: -1.2881174087524414
    3. 'k' → logprob: -2.0381174087524414
    4. ' a' → logprob: -3.1631174087524414
    5. ' enough' → logprob: -3.6631174087524414
    6. ' the' → logprob: -6.288117408752441
    7. ' own' → logprob: -6.288117408752441
    8. 'a' → logprob: -6.413117408752441
    9. ' an' → logprob: -6.663117408752441
    10. 'self' → logprob: -6.913117408752441

Token 104: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.3292860686779022
    2. ' more' → logprob: -1.5792860984802246
    3. 'greater' → logprob: -3.0792860984802246
    4. 'k' → logprob: -3.9542860984802246
    5. '>' → logprob: -5.204286098480225
    6. ' k' → logprob: -6.329286098480225
    7. ' greater' → logprob: -6.954286098480225
    8. ' >' → logprob: -8.329285621643066
    9. 'en' → logprob: -8.704285621643066
    10. '_more' → logprob: -8.829285621643066

Token 105: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.03576801344752312
    2. 'than' → logprob: -3.4107680320739746
    3. 'own' → logprob: -6.535768032073975
    4. ' own' → logprob: -7.660768032073975
    5. '_than' → logprob: -9.785767555236816
    6. '>' → logprob: -10.285767555236816
    7. '```' → logprob: -11.473267555236816
    8. 'k' → logprob: -11.660767555236816
    9. 't' → logprob: -11.973267555236816
    10. ' k' → logprob: -12.223267555236816

Token 106: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.17988404631614685
    2. 'k' → logprob: -1.8048840761184692
    3. ' (' → logprob: -10.05488395690918
    4. ' ' → logprob: -10.17988395690918
    5. ' self' → logprob: -10.55488395690918
    6. 'self' → logprob: -11.30488395690918
    7. '(k' → logprob: -11.55488395690918
    8. '(' → logprob: -12.30488395690918
    9. ' a' → logprob: -13.80488395690918
    10. ' len' → logprob: -14.17988395690918

Token 107: '/' (ID: 14)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6400355100631714
    2. ' //' → logprob: -0.7650355100631714
    3. '/' → logprob: -5.515035629272461
    4. ' /' → logprob: -6.640035629272461
    5. ' -' → logprob: -7.515035629272461
    6. 'wins' → logprob: -8.640035629272461
    7. '   ' → logprob: -8.765035629272461
    8. ' ' → logprob: -8.890035629272461
    9. ' #' → logprob: -9.140035629272461
    10. '#' → logprob: -9.265035629272461

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038348292582668364
    2. ' ' → logprob: -7.875383377075195
    3. '
' → logprob: -13.875383377075195
    4. '1' → logprob: -13.875383377075195
    5. '4' → logprob: -14.500383377075195
    6. '3' → logprob: -15.000383377075195
    7. '   ' → logprob: -15.500383377075195
    8. '```' → logprob: -16.000383377075195
    9. '  ' → logprob: -16.437883377075195
    10. '

' → logprob: -16.562883377075195

Token 109: ' monsters' (ID: 59311)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8149911165237427
    2. ' own' → logprob: -0.8149911165237427
    3. ' monsters' → logprob: -3.314990997314453
    4. 'own' → logprob: -3.689990997314453
    5. ' weakest' → logprob: -4.814990997314453
    6. ' strongest' → logprob: -4.939990997314453
    7. ' smallest' → logprob: -5.314990997314453
    8. ' highest' → logprob: -5.564990997314453
    9. ' lowest' → logprob: -5.689990997314453
    10. ' wins' → logprob: -5.939990997314453

Token 110: ' that' (ID: 484)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.37638700008392334
    2. ' in' → logprob: -2.376387119293213
    3. ' that' → logprob: -2.751387119293213
    4. '       ' → logprob: -3.126387119293213
    5. '   ' → logprob: -3.876387119293213
    6. 'from' → logprob: -3.876387119293213
    7. ' of' → logprob: -4.501387119293213
    8. '<|end|>' → logprob: -4.501387119293213
    9. ' at' → logprob: -4.751387119293213
    10. '    ' → logprob: -4.751387119293213

Token 111: ' can' (ID: 665)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.633819043636322
    2. ' can' → logprob: -1.3838191032409668
    3. 'are' → logprob: -2.883819103240967
    4. ' have' → logprob: -3.508819103240967
    5. ' beat' → logprob: -3.633819103240967
    6. ' own' → logprob: -3.883819103240967
    7. ' defeat' → logprob: -4.008819103240967
    8. 'can' → logprob: -4.133819103240967
    9. '```' → logprob: -4.383819103240967
    10. 'def' → logprob: -5.133819103240967

Token 112: ' beat' (ID: 16807)
  Prédit: ' defeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defeat' → logprob: -0.14117148518562317
    2. ' beat' → logprob: -2.266171455383301
    3. 'beat' → logprob: -4.141171455383301
    4. 'def' → logprob: -4.516171455383301
    5. 'win' → logprob: -8.1411714553833
    6. ' def' → logprob: -8.6411714553833
    7. ' be' → logprob: -8.8911714553833
    8. ' ' → logprob: -9.0161714553833
    9. '```' → logprob: -9.1411714553833
    10. ' outperform' → logprob: -9.6411714553833

Token 113: '
' (ID: 198)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.23785914480686188
    2. ' opponent' → logprob: -1.7378591299057007
    3. ' opponents' → logprob: -4.36285924911499
    4. 'op' → logprob: -4.86285924911499
    5. 'the' → logprob: -5.11285924911499
    6. ' their' → logprob: -5.23785924911499
    7. ' an' → logprob: -6.36285924911499
    8. ' a' → logprob: -7.86285924911499
    9. ' any' → logprob: -8.362858772277832
    10. ' oppon' → logprob: -8.987858772277832

Token 114: '       ' (ID: 309)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.44128721952438354
    2. ' opponent' → logprob: -1.9412872791290283
    3. ' opponents' → logprob: -2.6912872791290283
    4. ' self' → logprob: -3.3162872791290283
    5. 'op' → logprob: -3.3162872791290283
    6. 'self' → logprob: -3.4412872791290283
    7. 'the' → logprob: -3.9412872791290283
    8. '    ' → logprob: -4.941287040710449
    9. ' own' → logprob: -5.941287040710449
    10. ' k' → logprob: -6.066287040710449

Token 115: ' #' (ID: 1069)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3696354329586029
    2. ' opponent' → logprob: -1.3696354627609253
    3. ' opponents' → logprob: -3.7446353435516357
    4. ' self' → logprob: -4.744635581970215
    5. 'op' → logprob: -5.244635581970215
    6. ' their' → logprob: -5.369635581970215
    7. ' any' → logprob: -5.869635581970215
    8. 'the' → logprob: -6.369635581970215
    9. ' a' → logprob: -6.744635581970215
    10. 'self' → logprob: -6.869635581970215

Token 116: ' opponent' (ID: 38519)
  Prédit: ' opponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opponent' → logprob: -0.7808098793029785
    2. ' the' → logprob: -0.9058098793029785
    3. 'op' → logprob: -3.1558098793029785
    4. ' self' → logprob: -3.2808098793029785
    5. 'self' → logprob: -4.4058098793029785
    6. 'the' → logprob: -4.7808098793029785
    7. ' their' → logprob: -4.7808098793029785
    8. ' opponents' → logprob: -5.0308098793029785
    9. ' corresponding' → logprob: -5.4058098793029785
    10. ' any' → logprob: -5.5308098793029785

Token 117: ''s' (ID: 885)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.6286593675613403
    2. '_' → logprob: -1.3786593675613403
    3. '[' → logprob: -3.128659248352051
    4. 's' → logprob: -3.253659248352051
    5. ''s' → logprob: -3.503659248352051
    6. '   ' → logprob: -4.253659248352051
    7. '[:' → logprob: -4.253659248352051
    8. ')' → logprob: -4.253659248352051
    9. ' own' → logprob: -5.003659248352051
    10. ' _' → logprob: -5.128659248352051

Token 118: ' k' (ID: 372)
  Prédit: ' weakest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weakest' → logprob: -1.007232666015625
    2. ' lowest' → logprob: -1.632232666015625
    3. ' highest' → logprob: -2.132232666015625
    4. ' top' → logprob: -2.882232666015625
    5. ' monsters' → logprob: -3.007232666015625
    6. ' strongest' → logprob: -3.257232666015625
    7. ' corresponding' → logprob: -3.257232666015625
    8. ' smallest' → logprob: -3.632232666015625
    9. ' levels' → logprob: -4.007232666015625
    10. ' k' → logprob: -4.007232666015625

Token 119: ' strongest' (ID: 57093)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.5107855796813965
    2. '_' → logprob: -1.2607855796813965
    3. '[:' → logprob: -3.2607855796813965
    4. '[' → logprob: -3.7607855796813965
    5. ' _' → logprob: -4.1357855796813965
    6. 's' → logprob: -4.3857855796813965
    7. '_mon' → logprob: -5.1357855796813965
    8. '_k' → logprob: -5.2607855796813965
    9. ''s' → logprob: -5.7607855796813965
    10. ')' → logprob: -6.8857855796813965

Token 120: ' monsters' (ID: 59311)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.236287459731102
    2. '       ' → logprob: -2.1112873554229736
    3. '):' → logprob: -3.4862873554229736
    4. '   ' → logprob: -3.8612873554229736
    5. '_' → logprob: -4.361287593841553
    6. ')' → logprob: -5.236287593841553
    7. ':
' → logprob: -5.486287593841553
    8. '    ' → logprob: -5.986287593841553
    9. ',' → logprob: -6.111287593841553
    10. ' :' → logprob: -6.236287593841553

Token 121: ' no' (ID: 860)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22325001657009125
    2. '       ' → logprob: -2.848249912261963
    3. '
' → logprob: -3.223249912261963
    4. '   ' → logprob: -3.598249912261963
    5. ':
' → logprob: -3.973249912261963
    6. ')' → logprob: -4.723249912261963
    7. ' :' → logprob: -4.973249912261963
    8. ',' → logprob: -4.973249912261963
    9. '):' → logprob: -5.348249912261963
    10. 'def' → logprob: -5.598249912261963

Token 122: ' matter' (ID: 7165)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.14294292032718658
    2. 't' → logprob: -2.0179429054260254
    3. 'ne' → logprob: -8.892943382263184
    4. 'n' → logprob: -9.642943382263184
    5. ' t' → logprob: -10.767943382263184
    6. 'wn' → logprob: -11.017943382263184
    7. ' w' → logprob: -12.017943382263184
    8. 'e' → logprob: -12.392943382263184
    9. 'r' → logprob: -12.642943382263184
    10. 'te' → logprob: -13.017943382263184

Token 123: ' the' (ID: 290)
  Prédit: ' what'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' what' → logprob: -0.2140408456325531
    2. ' the' → logprob: -1.9640408754348755
    3. ' their' → logprob: -3.339040756225586
    4. ' how' → logprob: -4.214040756225586
    5. ' opponent' → logprob: -6.964040756225586
    6. 'what' → logprob: -8.089040756225586
    7. 'the' → logprob: -8.339040756225586
    8. '<|end|>' → logprob: -9.339040756225586
    9. ' where' → logprob: -9.464040756225586
    10. ' ' → logprob: -9.714040756225586

Token 124: ' order' (ID: 2569)
  Prédit: ' opponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' opponent' → logprob: -1.046167016029358
    2. ' selection' → logprob: -2.1711668968200684
    3. ' choice' → logprob: -2.5461668968200684
    4. ' own' → logprob: -2.5461668968200684
    5. 'op' → logprob: -3.1711668968200684
    6. 'selection' → logprob: -3.4211668968200684
    7. ' arrangement' → logprob: -3.6711668968200684
    8. ' smallest' → logprob: -3.7961668968200684
    9. 'own' → logprob: -3.9211668968200684
    10. ' matchup' → logprob: -4.171166896820068

Token 125: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14391106367111206
    2. '       ' → logprob: -2.893911123275757
    3. '):' → logprob: -3.518911123275757
    4. '   ' → logprob: -4.268910884857178
    5. ')' → logprob: -4.643910884857178
    6. ',' → logprob: -4.768910884857178
    7. ':
' → logprob: -4.893910884857178
    8. ' :' → logprob: -5.893910884857178
    9. '
' → logprob: -6.768910884857178
    10. '):
' → logprob: -6.893910884857178

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05940557271242142
    2. ':' → logprob: -3.559405565261841
    3. '
' → logprob: -4.68440580368042
    4. '   ' → logprob: -5.30940580368042
    5. '        
' → logprob: -5.68440580368042
    6. ')' → logprob: -6.18440580368042
    7. '    ' → logprob: -6.18440580368042
    8. ' 
' → logprob: -6.68440580368042
    9. ' :' → logprob: -6.68440580368042
    10. 'n' → logprob: -6.93440580368042

Token 127: ' half' (ID: 6375)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.6156365275382996
    2. 'own' → logprob: -1.1156365871429443
    3. ' left' → logprob: -2.8656365871429443
    4. 'left' → logprob: -3.4906365871429443
    5. '       ' → logprob: -4.240636348724365
    6. 'count' → logprob: -4.990636348724365
    7. 'i' → logprob: -5.740636348724365
    8. 'for' → logprob: -6.115636348724365
    9. ' count' → logprob: -6.240636348724365
    10. ' i' → logprob: -6.240636348724365

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013688809238374233
    2. '_' → logprob: -5.263689041137695
    3. '=' → logprob: -5.763689041137695
    4. ' >' → logprob: -6.013689041137695
    5. '_k' → logprob: -6.513689041137695
    6. '_count' → logprob: -7.263689041137695
    7. '>' → logprob: -8.263689041137695
    8. '_w' → logprob: -8.763689041137695
    9. '_needed' → logprob: -9.888689041137695
    10. '_win' → logprob: -10.013689041137695

Token 129: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4674290716648102
    2. ' (' → logprob: -1.2174290418624878
    3. 'k' → logprob: -2.8424291610717773
    4. '(k' → logprob: -3.9674291610717773
    5. '(' → logprob: -8.717429161071777
    6. ' ' → logprob: -11.092429161071777
    7. ' ' → logprob: -13.404929161071777
    8. '   ' → logprob: -13.467429161071777
    9. '    ' → logprob: -13.467429161071777
    10. '       ' → logprob: -13.592429161071777

Token 130: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.003997785039246082
    2. '//' → logprob: -5.628997802734375
    3. ' ' → logprob: -7.878997802734375
    4. ' ' → logprob: -11.753997802734375
    5. '   ' → logprob: -12.253997802734375
    6. '  ' → logprob: -13.378997802734375
    7. '2' → logprob: -14.128997802734375
    8. ' /' → logprob: -14.253997802734375
    9. '    ' → logprob: -14.378997802734375
    10. '       ' → logprob: -15.003997802734375

Token 131: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00360019039362669
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -17.37860107421875
    4. '  ' → logprob: -17.62860107421875
    5. '
' → logprob: -18.50360107421875
    6. '

' → logprob: -19.12860107421875
    7. '1' → logprob: -19.37860107421875
    8. '  
' → logprob: -19.50360107421875
    9. '    ' → logprob: -19.81610107421875
    10. '۲' → logprob: -20.06610107421875

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.875015258789062
    4. '
' → logprob: -17.500015258789062
    5. '```' → logprob: -17.500015258789062
    6. '۲' → logprob: -18.187515258789062
    7. '

' → logprob: -18.875015258789062
    8. '  ' → logprob: -18.937515258789062
    9. '' → logprob: -19.187515258789062
    10. '２' → logprob: -19.375015258789062

Token 133: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04678909108042717
    2. ' +' → logprob: -3.7967891693115234
    3. '       ' → logprob: -4.546789169311523
    4. '+' → logprob: -4.671789169311523
    5. '        
' → logprob: -6.671789169311523
    6. ' 
' → logprob: -7.171789169311523
    7. '<|end|>' → logprob: -7.671789169311523
    8. '
' → logprob: -8.921789169311523
    9. ' if' → logprob: -9.171789169311523
    10. '  
' → logprob: -9.421789169311523

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08896443992853165
    2. ' ' → logprob: -2.4639644622802734
    3. ' (' → logprob: -10.838964462280273
    4. '(' → logprob: -12.838964462280273
    5. ' ' → logprob: -14.651464462280273
    6. '
' → logprob: -14.776464462280273
    7. '  ' → logprob: -14.838964462280273
    8. '+' → logprob: -14.901464462280273
    9. '   ' → logprob: -15.151464462280273
    10. ' +' → logprob: -15.526464462280273

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.673547563375905e-05
    2. ' ' → logprob: -9.375086784362793
    3. '(' → logprob: -13.625086784362793
    4. ' (' → logprob: -15.000086784362793
    5. '   ' → logprob: -16.500085830688477
    6. '
' → logprob: -17.187585830688477
    7. '```' → logprob: -18.437585830688477
    8. '  ' → logprob: -18.625085830688477
    9. '(k' → logprob: -18.687585830688477
    10. '{' → logprob: -18.812585830688477

Token 136: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00188901845831424
    2. '       ' → logprob: -6.501889228820801
    3. '<|end|>' → logprob: -9.0018892288208
    4. '        
' → logprob: -9.3768892288208
    5. ' 
' → logprob: -9.8768892288208
    6. '  
' → logprob: -10.0018892288208
    7. '
' → logprob: -10.3768892288208
    8. '    
' → logprob: -11.7518892288208
    9. '\n' → logprob: -11.8768892288208
    10. ' if' → logprob: -11.8768892288208

Token 137: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0027928724884986877
    2. '       ' → logprob: -6.127792835235596
    3. '<|end|>' → logprob: -8.377793312072754
    4. '        
' → logprob: -9.127793312072754
    5. '  
' → logprob: -9.627793312072754
    6. '
' → logprob: -10.127793312072754
    7. '\n' → logprob: -10.127793312072754
    8. ' 
' → logprob: -10.627793312072754
    9. '' → logprob: -10.752793312072754
    10. '    
' → logprob: -11.377793312072754

Token 138: ' #' (ID: 1069)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.3103748857975006
    2. ' own' → logprob: -2.0603749752044678
    3. 'for' → logprob: -2.5603749752044678
    4. ' for' → logprob: -3.9353749752044678
    5. 'left' → logprob: -4.060374736785889
    6. ' left' → logprob: -4.810374736785889
    7. '       ' → logprob: -5.060374736785889
    8. 'i' → logprob: -5.310374736785889
    9. ' i' → logprob: -6.810374736785889
    10. 'if' → logprob: -6.810374736785889

Token 139: ' We' (ID: 1416)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.6048687100410461
    2. 'for' → logprob: -1.6048686504364014
    3. ' own' → logprob: -2.2298686504364014
    4. ' for' → logprob: -3.4798686504364014
    5. 'count' → logprob: -3.4798686504364014
    6. 'left' → logprob: -4.1048688888549805
    7. 'i' → logprob: -4.3548688888549805
    8. 'from' → logprob: -4.4798688888549805
    9. ' left' → logprob: -5.1048688888549805
    10. 'import' → logprob: -5.4798688888549805

Token 140: ' try' (ID: 2075)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.20344404876232147
    2. 'own' → logprob: -3.453444004058838
    3. ' can' → logprob: -3.703444004058838
    4. '       ' → logprob: -4.078444004058838
    5. ''ll' → logprob: -4.203444004058838
    6. ' need' → logprob: -4.453444004058838
    7. ' ' → logprob: -4.703444004058838
    8. ' for' → logprob: -4.953444004058838
    9. 'n' → logprob: -4.953444004058838
    10. ' want' → logprob: -5.078444004058838

Token 141: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4192137122154236
    2. ' to' → logprob: -1.6692137718200684
    3. ' own' → logprob: -2.0442137718200684
    4. 'to' → logprob: -4.919213771820068
    5. '    ' → logprob: -5.169213771820068
    6. 'own' → logprob: -5.544213771820068
    7. ' for' → logprob: -6.419213771820068
    8. ':
' → logprob: -6.669213771820068
    9. '   ' → logprob: -6.669213771820068
    10. ' :' → logprob: -6.794213771820068

Token 142: ' pick' (ID: 5230)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.5043033957481384
    2. ' match' → logprob: -1.0043034553527832
    3. ' use' → logprob: -4.254303455352783
    4. ' find' → logprob: -5.504303455352783
    5. 'use' → logprob: -5.754303455352783
    6. 'find' → logprob: -6.254303455352783
    7. ' pair' → logprob: -6.629303455352783
    8. ' for' → logprob: -6.754303455352783
    9. 'pair' → logprob: -7.254303455352783
    10. 'import' → logprob: -7.629303455352783

Token 143: ' our' (ID: 1039)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.26128700375556946
    2. ' own' → logprob: -1.761286973953247
    3. ' indices' → logprob: -4.011287212371826
    4. 'the' → logprob: -4.761287212371826
    5. 'own' → logprob: -4.761287212371826
    6. ' half' → logprob: -5.136287212371826
    7. ' from' → logprob: -5.636287212371826
    8. ' self' → logprob: -6.386287212371826
    9. ' k' → logprob: -6.511287212371826
    10. 'k' → logprob: -6.511287212371826

Token 144: ' top' (ID: 2344)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.9885144829750061
    2. ' strongest' → logprob: -1.1135144233703613
    3. ' own' → logprob: -2.3635144233703613
    4. 'best' → logprob: -2.9885144233703613
    5. ' lowest' → logprob: -3.3635144233703613
    6. ' smallest' → logprob: -3.9885144233703613
    7. ' k' → logprob: -4.238514423370361
    8. ' top' → logprob: -4.238514423370361
    9. 'lowest' → logprob: -4.238514423370361
    10. ' weakest' → logprob: -4.363514423370361

Token 145: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.22891652584075928
    2. 'k' → logprob: -1.7289165258407593
    3. ' half' → logprob: -4.103916645050049
    4. ' own' → logprob: -4.603916645050049
    5. 'half' → logprob: -7.853916645050049
    6. 'own' → logprob: -9.35391616821289
    7. '-k' → logprob: -10.10391616821289
    8. '_k' → logprob: -10.47891616821289
    9. ' `' → logprob: -11.47891616821289
    10. ' ' → logprob: -12.22891616821289

Token 146: ' monsters' (ID: 59311)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.06612914800643921
    2. 'own' → logprob: -3.066129207611084
    3. '_' → logprob: -5.316129207611084
    4. ' monsters' → logprob: -5.441129207611084
    5. ' levels' → logprob: -5.816129207611084
    6. '_levels' → logprob: -6.816129207611084
    7. ' and' → logprob: -7.191129207611084
    8. '   ' → logprob: -7.441129207611084
    9. ' ' → logprob: -7.816129207611084
    10. '       ' → logprob: -8.066128730773926

Token 147: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4481029510498047
    2. ',' → logprob: -1.6981029510498047
    3. ' from' → logprob: -2.4481029510498047
    4. ' and' → logprob: -4.073102951049805
    5. ' to' → logprob: -4.573102951049805
    6. ' own' → logprob: -4.823102951049805
    7. ' for' → logprob: -4.823102951049805
    8. 'from' → logprob: -4.823102951049805
    9. ' ,' → logprob: -5.073102951049805
    10. '.' → logprob: -5.323102951049805

Token 148: ' own' (ID: 2316)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07171213626861572
    2. 'self' → logprob: -3.321712017059326
    3. ' the' → logprob: -3.446712017059326
    4. ' own' → logprob: -6.946712017059326
    5. ' our' → logprob: -9.196712493896484
    6. 'the' → logprob: -9.821712493896484
    7. ' ' → logprob: -10.321712493896484
    8. ' their' → logprob: -10.696712493896484
    9. '	self' → logprob: -11.071712493896484
    10. ' reverse' → logprob: -11.196712493896484

Token 149: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -5.3596853831550106e-05
    2. 'self' → logprob: -10.250053405761719
    3. ' _' → logprob: -11.875053405761719
    4. '_' → logprob: -12.125053405761719
    5. 's' → logprob: -13.625053405761719
    6. '       ' → logprob: -13.750053405761719
    7. '   ' → logprob: -13.750053405761719
    8. 'levels' → logprob: -13.875053405761719
    9. '```' → logprob: -15.000053405761719
    10. '\' → logprob: -15.500053405761719

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19604453444480896
    2. ',' → logprob: -2.196044445037842
    3. ' and' → logprob: -4.196044445037842
    4. '.' → logprob: -4.821044445037842
    5. ':' → logprob: -4.821044445037842
    6. ' for' → logprob: -4.821044445037842
    7. '
' → logprob: -5.071044445037842
    8. '        
' → logprob: -5.696044445037842
    9. '[' → logprob: -5.821044445037842
    10. '   ' → logprob: -6.321044445037842

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10669037699699402
    2. ',' → logprob: -3.6066904067993164
    3. ' own' → logprob: -3.9816904067993164
    4. ' for' → logprob: -4.106690406799316
    5. ' and' → logprob: -4.356690406799316
    6. 'own' → logprob: -5.106690406799316
    7. ' i' → logprob: -5.481690406799316
    8. ':' → logprob: -5.981690406799316
    9. ' ,' → logprob: -6.231690406799316
    10. '   ' → logprob: -6.231690406799316

Token 152: ' own' (ID: 2316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2197745144367218
    2. '
' → logprob: -1.9697744846343994
    3. '        
' → logprob: -4.7197747230529785
    4. ' 
' → logprob: -4.7197747230529785
    5. '\' → logprob: -5.0947747230529785
    6. 'own' (adapté à ' own') → logprob: -5.3447747230529785
    7. ':' → logprob: -5.4697747230529785
    8. ' own' → logprob: -5.7197747230529785
    9. '   ' → logprob: -6.0947747230529785
    10. ',' → logprob: -6.0947747230529785

Token 153: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.7665930390357971
    2. '_levels' → logprob: -0.8915930390357971
    3. '_k' → logprob: -2.5165929794311523
    4. '_selected' → logprob: -4.016592979431152
    5. '_subset' → logprob: -4.391592979431152
    6. '_p' → logprob: -6.141592979431152
    7. '_best' → logprob: -6.141592979431152
    8. '_' → logprob: -6.266592979431152
    9. ' =' → logprob: -7.016592979431152
    10. '_mon' → logprob: -7.141592979431152

Token 154: ' =' (ID: 314)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.11245813965797424
    2. ' =' → logprob: -2.9874582290649414
    3. '_k' → logprob: -3.6124582290649414
    4. '_' → logprob: -4.237458229064941
    5. '[-' → logprob: -4.987458229064941
    6. '[:' → logprob: -5.737458229064941
    7. '=' → logprob: -6.612458229064941
    8. '_mon' → logprob: -6.737458229064941
    9. '[_' → logprob: -7.487458229064941
    10. '[k' → logprob: -8.362458229064941

Token 155: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.026308773085474968
    2. 'self' → logprob: -3.65130877494812
    3. ' sorted' → logprob: -12.9013090133667
    4. '[self' → logprob: -13.6513090133667
    5. '	self' → logprob: -13.7763090133667
    6. ' ' → logprob: -14.0263090133667
    7. '   ' → logprob: -14.0263090133667
    8. 'elf' → logprob: -14.4013090133667
    9. '(self' → logprob: -15.2763090133667
    10. ' ' → logprob: -15.4013090133667

Token 156: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013534489553421736
    2. ' .' → logprob: -6.6263532638549805
    3. '_.' → logprob: -12.12635326385498
    4. '.sorted' → logprob: -12.12635326385498
    5. '.level' → logprob: -12.87635326385498
    6. '​.' → logprob: -13.37635326385498
    7. '._' → logprob: -13.87635326385498
    8. '`.' → logprob: -14.00135326385498
    9. '>.' → logprob: -14.00135326385498
    10. '```' → logprob: -14.12635326385498

Token 157: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -1.282920129597187e-05
    2. 'ow' → logprob: -11.625012397766113
    3. ' own' → logprob: -13.500012397766113
    4. 'sorted' → logprob: -14.375012397766113
    5. '```' → logprob: -14.750012397766113
    6. 'owned' → logprob: -15.625012397766113
    7. '   ' → logprob: -15.625012397766113
    8. '  ' → logprob: -15.875012397766113
    9. 'op' → logprob: -16.12501335144043
    10. '
' → logprob: -16.12501335144043

Token 158: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -1.2664456789934775e-06
    2. ' _' → logprob: -14.500000953674316
    3. 's' → logprob: -15.125000953674316
    4. '[_' → logprob: -15.750000953674316
    5. '_' → logprob: -16.000001907348633
    6. '\' → logprob: -17.125001907348633
    7. '._' → logprob: -17.125001907348633
    8. '_layers' → logprob: -17.750001907348633
    9. '_scores' → logprob: -17.750001907348633
    10. '```' → logprob: -17.875001907348633

Token 159: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.4987974029500037e-05
    2. ' [-' → logprob: -11.375024795532227
    3. '[' → logprob: -12.250024795532227
    4. '[self' → logprob: -12.750024795532227
    5. '[len' → logprob: -13.250024795532227
    6. '   ' → logprob: -13.750024795532227
    7. '[:' → logprob: -13.750024795532227
    8. '[::-' → logprob: -14.000024795532227
    9. '[:-' → logprob: -14.625024795532227
    10. 'self' → logprob: -15.000024795532227

Token 160: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1472419600977446e-06
    2. ' k' → logprob: -14.000000953674316
    3. '{k' → logprob: -15.375000953674316
    4. '(k' → logprob: -19.375001907348633
    5. '```' → logprob: -19.375001907348633
    6. '(' → logprob: -19.375001907348633
    7. '   ' → logprob: -20.750001907348633
    8. 'kx' → logprob: -20.875001907348633
    9. ':k' → logprob: -21.000001907348633
    10. '{' → logprob: -21.125001907348633

Token 161: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0001863750658230856
    2. ' :]' → logprob: -9.3751859664917
    3. ']' → logprob: -9.6251859664917
    4. ':' → logprob: -10.6251859664917
    5. ':]
' → logprob: -11.6251859664917
    6. ':]

' → logprob: -14.2501859664917
    7. ' :' → logprob: -14.5001859664917
    8. ':].' → logprob: -14.7501859664917
    9. ' ]' → logprob: -15.0001859664917
    10. ':],' → logprob: -15.6251859664917

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09663815051317215
    2. ' opponent' → logprob: -2.5966382026672363
    3. '
' → logprob: -4.346638202667236
    4. 'op' → logprob: -6.346638202667236
    5. '        
' → logprob: -6.721638202667236
    6. ',' → logprob: -7.721638202667236
    7. 'Opponent' → logprob: -7.846638202667236
    8. '   ' → logprob: -8.846637725830078
    9. '```' → logprob: -9.096637725830078
    10. '	op' → logprob: -9.471637725830078

Token 163: ' #' (ID: 1069)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6340789794921875
    2. ' opponent' → logprob: -1.0090789794921875
    3. '       ' → logprob: -2.6340789794921875
    4. ' opp' → logprob: -4.2590789794921875
    5. 'opp' → logprob: -4.7590789794921875
    6. ' for' → logprob: -5.3840789794921875
    7. ' op' → logprob: -6.1340789794921875
    8. 'own' → logprob: -6.7590789794921875
    9. 'for' → logprob: -6.7590789794921875
    10. ' own' → logprob: -8.384078979492188

Token 164: ' Opp' (ID: 55440)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.08659986406564713
    2. 'opp' → logprob: -3.211599826812744
    3. ' opponent' → logprob: -3.836599826812744
    4. 'for' → logprob: -4.461599826812744
    5. ' opp' → logprob: -5.961599826812744
    6. 'import' → logprob: -6.586599826812744
    7. '#' → logprob: -6.836599826812744
    8. ' op' → logprob: -7.211599826812744
    9. ' for' → logprob: -7.211599826812744
    10. 'from' → logprob: -7.336599826812744

Token 165: 'onent' (ID: 130930)
  Prédit: 'onent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -0.007168562617152929
    2. 'ponent' → logprob: -5.007168769836426
    3. '       ' → logprob: -8.132168769836426
    4. 'on' → logprob: -9.257168769836426
    5. '           ' → logprob: -10.632168769836426
    6. 'ONENT' → logprob: -11.382168769836426
    7. '   ' → logprob: -11.632168769836426
    8. 'nent' → logprob: -12.007168769836426
    9. ' opponent' → logprob: -12.382168769836426
    10. 'onen' → logprob: -13.632168769836426

Token 166: ' can' (ID: 665)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.0008048642775975168
    2. ''s' → logprob: -7.750804901123047
    3. '_levels' → logprob: -8.875804901123047
    4. 'top' → logprob: -9.500804901123047
    5. 's' → logprob: -9.625804901123047
    6. ' top' → logprob: -10.750804901123047
    7. '_bottom' → logprob: -10.875804901123047
    8. '_best' → logprob: -11.000804901123047
    9. '_str' → logprob: -11.875804901123047
    10. '_s' → logprob: -12.125804901123047

Token 167: ' pick' (ID: 5230)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pick' → logprob: -1.4744086265563965
    2. 'choose' → logprob: -1.5994086265563965
    3. ' pick' → logprob: -1.8494086265563965
    4. ' select' → logprob: -2.0994086265563965
    5. ' also' → logprob: -2.3494086265563965
    6. 'select' → logprob: -2.7244086265563965
    7. ' choose' → logprob: -2.8494086265563965
    8. 'op' → logprob: -4.2244086265563965
    9. 'also' → logprob: -4.3494086265563965
    10. ''s' → logprob: -4.5994086265563965

Token 168: ' any' (ID: 1062)
  Prédit: ' their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' their' → logprob: -0.23551441729068756
    2. ' the' → logprob: -2.1105144023895264
    3. ' opponent' → logprob: -3.2355144023895264
    4. 'their' → logprob: -3.6105144023895264
    5. 'op' → logprob: -4.4855146408081055
    6. 'the' → logprob: -4.9855146408081055
    7. 's' → logprob: -6.8605146408081055
    8. 'self' → logprob: -7.3605146408081055
    9. ' own' → logprob: -7.8605146408081055
    10. ''s' → logprob: -7.9855146408081055

Token 169: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5918872952461243
    2. ' k' → logprob: -1.0918872356414795
    3. ' of' → logprob: -2.9668872356414795
    4. ' subset' → logprob: -3.7168872356414795
    5. ' combination' → logprob: -4.466887474060059
    6. 'subset' → logprob: -4.966887474060059
    7. ' top' → logprob: -5.841887474060059
    8. 's' → logprob: -5.841887474060059
    9. ''s' → logprob: -6.216887474060059
    10. ' opponent' → logprob: -6.216887474060059

Token 170: ' monsters' (ID: 59311)
  Prédit: ' monsters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monsters' → logprob: -0.42771172523498535
    2. ' opponent' → logprob: -2.4277117252349854
    3. ' opponents' → logprob: -2.5527117252349854
    4. ' from' → logprob: -2.6777117252349854
    5. 'mon' → logprob: -3.1777117252349854
    6. 'op' → logprob: -3.5527117252349854
    7. '_op' → logprob: -4.427711486816406
    8. 'from' → logprob: -4.927711486816406
    9. ' of' → logprob: -5.302711486816406
    10. ' levels' → logprob: -6.052711486816406

Token 171: ';' (ID: 26)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1894031763076782
    2. '       ' → logprob: -1.3144031763076782
    3. ' opponent' → logprob: -1.6894031763076782
    4. ' from' → logprob: -1.8144031763076782
    5. 'from' → logprob: -2.9394030570983887
    6. 'op' → logprob: -4.314403057098389
    7. '.' → logprob: -5.689403057098389
    8. ':' → logprob: -6.939403057098389
    9. 'Opponent' → logprob: -6.939403057098389
    10. '        
' → logprob: -7.064403057098389

Token 172: ' worst' (ID: 20486)
  Prédit: ' opponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' opponent' → logprob: -0.12617118656635284
    2. 'op' → logprob: -3.251171112060547
    3. ' opp' → logprob: -3.251171112060547
    4. ' op' → logprob: -3.751171112060547
    5. ' own' → logprob: -5.251171112060547
    6. ' for' → logprob: -5.876171112060547
    7. '#' → logprob: -6.251171112060547
    8. '       ' → logprob: -6.376171112060547
    9. 'opp' → logprob: -7.251171112060547
    10. ' return' → logprob: -7.376171112060547

Token 173: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.5792981386184692
    2. ' case' → logprob: -1.3292981386184692
    3. '   ' → logprob: -2.0792980194091797
    4. '-case' → logprob: -3.5792980194091797
    5. ' for' → logprob: -4.32929801940918
    6. '_case' → logprob: -5.70429801940918
    7. '    ' → logprob: -6.57929801940918
    8. 'for' → logprob: -6.95429801940918
    9. ' ' → logprob: -7.32929801940918
    10. '  ' → logprob: -7.32929801940918

Token 174: ' opponent' (ID: 38519)
  Prédit: ' opponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opponent' → logprob: -0.7039124369621277
    2. 'op' → logprob: -0.8289124369621277
    3. ',' → logprob: -3.0789124965667725
    4. ':' → logprob: -4.703912258148193
    5. ' is' → logprob: -5.328912258148193
    6. '_op' → logprob: -5.703912258148193
    7. ' for' → logprob: -5.953912258148193
    8. 'own' → logprob: -7.328912258148193
    9. ' op' → logprob: -7.703912258148193
    10. ' own' → logprob: -7.953912258148193

Token 175: ' picks' (ID: 37120)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.5791915655136108
    2. '_levels' → logprob: -1.2041915655136108
    3. '_top' → logprob: -2.4541916847229004
    4. ' chooses' → logprob: -3.9541916847229004
    5. ' will' → logprob: -4.3291916847229
    6. 's' → logprob: -5.3291916847229
    7. ' picks' → logprob: -5.5791916847229
    8. ' top' → logprob: -6.2041916847229
    9. ' selects' → logprob: -6.3291916847229
    10. ' =' → logprob: -6.3291916847229

Token 176: ' his' (ID: 1232)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1817677766084671
    2. ' self' → logprob: -2.556767702102661
    3. ' their' → logprob: -2.681767702102661
    4. 'self' → logprob: -4.30676794052124
    5. ' opponent' → logprob: -5.80676794052124
    6. 'the' → logprob: -6.05676794052124
    7. ' own' → logprob: -8.306767463684082
    8. ' =' → logprob: -8.556767463684082
    9. 'their' → logprob: -8.681767463684082
    10. ' opponents' → logprob: -9.431767463684082

Token 177: ' k' (ID: 372)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.17300288379192352
    2. ' k' → logprob: -2.0480029582977295
    3. 'top' → logprob: -4.29800271987915
    4. 'k' → logprob: -5.04800271987915
    5. ' strongest' → logprob: -5.79800271987915
    6. ' best' → logprob: -6.42300271987915
    7. ' own' → logprob: -6.42300271987915
    8. '_top' → logprob: -6.92300271987915
    9. ' highest' → logprob: -7.42300271987915
    10. 's' → logprob: -8.048003196716309

Token 178: ' strongest' (ID: 57093)
  Prédit: ' strongest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strongest' → logprob: -0.1874239146709442
    2. ' highest' → logprob: -2.5624239444732666
    3. ' top' → logprob: -3.4374239444732666
    4. 'highest' → logprob: -3.5624239444732666
    5. 'strong' → logprob: -4.5624237060546875
    6. 'lowest' → logprob: -4.9374237060546875
    7. ' lowest' → logprob: -5.1874237060546875
    8. 'top' → logprob: -5.8124237060546875
    9. '[-' → logprob: -6.4374237060546875
    10. ' strong' → logprob: -6.6874237060546875

Token 179: ' monsters' (ID: 59311)
  Prédit: ' opponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' opponent' → logprob: -1.3603178262710571
    2. 'op' → logprob: -1.4853178262710571
    3. ' opponents' → logprob: -1.4853178262710571
    4. ' ones' → logprob: -2.1103177070617676
    5. ' own' → logprob: -3.2353177070617676
    6. ',' → logprob: -3.4853177070617676
    7. '_op' → logprob: -4.110317707061768
    8. '.' → logprob: -4.235317707061768
    9. ':' → logprob: -4.610317707061768
    10. '<|end|>' → logprob: -4.610317707061768

Token 180: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2956564426422119
    2. ' opponent' → logprob: -1.545656442642212
    3. ',' → logprob: -3.795656442642212
    4. 'op' → logprob: -4.670656204223633
    5. '.' → logprob: -6.045656204223633
    6. ' from' → logprob: -6.795656204223633
    7. ' op' → logprob: -6.920656204223633
    8. ' opp' → logprob: -6.920656204223633
    9. ':' → logprob: -7.045656204223633
    10. ' and' → logprob: -7.670656204223633

Token 181: ' minimize' (ID: 41776)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -1.5716090202331543
    2. 'counter' → logprob: -1.8216090202331543
    3. ' counter' → logprob: -2.0716090202331543
    4. 'maximize' → logprob: -2.0716090202331543
    5. 'try' → logprob: -2.3216090202331543
    6. 'challenge' → logprob: -2.9466090202331543
    7. ' challenge' → logprob: -3.1966090202331543
    8. 'beat' → logprob: -3.3216090202331543
    9. ' maximize' → logprob: -3.4466090202331543
    10. ' defeat' → logprob: -3.4466090202331543

Token 182: ' our' (ID: 1039)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.3445921242237091
    2. ' our' → logprob: -1.8445920944213867
    3. 'own' → logprob: -2.5945920944213867
    4. ' own' → logprob: -2.9695920944213867
    5. ' the' → logprob: -6.094592094421387
    6. 'ours' → logprob: -6.344592094421387
    7. ' ours' → logprob: -7.094592094421387
    8. 'the' → logprob: -7.469592094421387
    9. ' their' → logprob: -7.719592094421387
    10. 'vict' → logprob: -7.844592094421387

Token 183: ' wins' (ID: 25327)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wins' → logprob: -0.9076085686683655
    2. ' chances' → logprob: -1.0326085090637207
    3. ' wins' → logprob: -2.9076085090637207
    4. 'win' → logprob: -2.9076085090637207
    5. 'chance' → logprob: -3.0326085090637207
    6. 'ch' → logprob: -3.7826085090637207
    7. ' advantage' → logprob: -4.032608509063721
    8. ' chance' → logprob: -4.157608509063721
    9. 'winning' → logprob: -4.407608509063721
    10. 'w' → logprob: -5.532608509063721

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08388383686542511
    2. '.' → logprob: -3.458883762359619
    3. ' opponent' → logprob: -3.708883762359619
    4. ',' → logprob: -4.583883762359619
    5. '
' → logprob: -5.083883762359619
    6. '        
' → logprob: -6.458883762359619
    7. 'Opponent' → logprob: -6.583883762359619
    8. ':' → logprob: -7.083883762359619
    9. '.
' → logprob: -7.083883762359619
    10. 'op' → logprob: -7.208883762359619

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03295641392469406
    2. ' opponent' → logprob: -3.65795636177063
    3. ',' → logprob: -5.907956600189209
    4. 'op' → logprob: -6.157956600189209
    5. '.' → logprob: -7.782956600189209
    6. '        
' → logprob: -8.03295612335205
    7. ' opp' → logprob: -8.28295612335205
    8. 'Opponent' → logprob: -8.65795612335205
    9. '<|end|>' → logprob: -9.78295612335205
    10. '
' → logprob: -9.78295612335205

Token 186: ' opp' (ID: 6323)
  Prédit: ' opponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opponent' → logprob: -0.32242128252983093
    2. ' opp' → logprob: -1.6974213123321533
    3. 'op' → logprob: -2.8224213123321533
    4. '       ' → logprob: -4.322421073913574
    5. 'opp' (adapté à ' opp') → logprob: -4.572421073913574
    6. ' op' → logprob: -4.947421073913574
    7. ' oppon' → logprob: -7.197421073913574
    8. ' own' → logprob: -7.947421073913574
    9. '
' → logprob: -8.447421073913574
    10. '   ' → logprob: -8.822421073913574

Token 187: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.026451589539647102
    2. 'onent' → logprob: -4.026451587677002
    3. 'ponent' → logprob: -6.026451587677002
    4. '_' → logprob: -6.651451587677002
    5. '_op' → logprob: -7.151451587677002
    6. '_best' → logprob: -7.401451587677002
    7. '_levels' → logprob: -7.526451587677002
    8. 'ert' → logprob: -7.651451587677002
    9. ' =' → logprob: -7.776451587677002
    10. 'o' → logprob: -7.776451587677002

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788901224732399
    2. '=' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.453889846801758
    4. '=self' → logprob: -16.578889846801758
    5. ' ' → logprob: -16.703889846801758
    6. ' =
' → logprob: -17.703889846801758
    7. 's' → logprob: -18.078889846801758
    8. '＝' → logprob: -18.828889846801758
    9. ' =[' → logprob: -18.828889846801758
    10. ')' → logprob: -19.328889846801758

Token 189: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.000912774819880724
    2. 'self' → logprob: -7.000912666320801
    3. ' ' → logprob: -14.0009126663208
    4. ' sorted' → logprob: -15.5009126663208
    5. ' ' → logprob: -16.375913619995117
    6. '	self' → logprob: -16.625913619995117
    7. '[self' → logprob: -18.125913619995117
    8. '  ' → logprob: -19.000913619995117
    9. '   ' → logprob: -19.125913619995117
    10. '=self' → logprob: -19.750913619995117

Token 190: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.0001450187264708802
    2. '.' → logprob: -9.375144958496094
    3. ' .' → logprob: -10.500144958496094
    4. '._' → logprob: -10.875144958496094
    5. '.o' → logprob: -12.500144958496094
    6. '_op' → logprob: -13.000144958496094
    7. '_.' → logprob: -13.250144958496094
    8. '	op' → logprob: -13.500144958496094
    9. 'self' → logprob: -13.750144958496094
    10. 'op' → logprob: -14.625144958496094

Token 191: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.00031520487391389906
    2. 'p' → logprob: -8.25031566619873
    3. 'ponents' → logprob: -10.37531566619873
    4. 'pon' → logprob: -11.25031566619873
    5. 'pp' → logprob: -12.62531566619873
    6. '_levels' → logprob: -12.62531566619873
    7. 'onent' → logprob: -13.37531566619873
    8. 'levels' → logprob: -14.75031566619873
    9. 'level' → logprob: -14.87531566619873
    10. 'ponen' → logprob: -15.37531566619873

Token 192: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -1.5048530030981055e-06
    2. 'levels' → logprob: -14.125001907348633
    3. '._' → logprob: -15.500001907348633
    4. '[-' → logprob: -15.500001907348633
    5. 's' → logprob: -16.000001907348633
    6. '.level' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '```' → logprob: -18.000001907348633
    9. '[' → logprob: -18.250001907348633
    10. ' _' → logprob: -18.375001907348633

Token 193: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.696889623621246e-06
    2. ' [-' → logprob: -14.12500286102295
    3. '   ' → logprob: -14.37500286102295
    4. '[' → logprob: -14.50000286102295
    5. '[::-' → logprob: -15.62500286102295
    6. '[:-' → logprob: -15.75000286102295
    7. '[:' → logprob: -15.87500286102295
    8. '[
' → logprob: -16.625001907348633
    9. '][-' → logprob: -16.875001907348633
    10. '[len' → logprob: -17.000001907348633

Token 194: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.320199877838604e-07
    2. ' k' → logprob: -15.0
    3. '{k' → logprob: -16.5
    4. '	k' → logprob: -20.125
    5. '(k' → logprob: -20.625
    6. '(' → logprob: -20.75
    7. 'kx' → logprob: -20.875
    8. 'к' → logprob: -20.875
    9. '```' → logprob: -21.5
    10. '"k' → logprob: -21.625

Token 195: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.00010556964843999594
    2. ']' → logprob: -9.500105857849121
    3. ' :]' → logprob: -11.125105857849121
    4. ':' → logprob: -11.500105857849121
    5. ':]
' → logprob: -12.250105857849121
    6. ':]

' → logprob: -14.125105857849121
    7. ':].' → logprob: -16.125104904174805
    8. ':],' → logprob: -16.125104904174805
    9. '()]' → logprob: -17.000104904174805
    10. ' ]' → logprob: -17.375104904174805

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017232796177268028
    2. '
' → logprob: -4.267232894897461
    3. '        
' → logprob: -6.642232894897461
    4. ' for' → logprob: -7.392232894897461
    5. '   ' → logprob: -7.392232894897461
    6. 'for' → logprob: -9.142232894897461
    7. ',' → logprob: -9.517232894897461
    8. 'own' → logprob: -9.767232894897461
    9. '    
' → logprob: -9.767232894897461
    10. '  
' → logprob: -9.892232894897461

Token 197: ' #' (ID: 1069)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wins' → logprob: -0.783557653427124
    2. 'own' → logprob: -1.408557653427124
    3. 'win' → logprob: -2.158557653427124
    4. 'count' → logprob: -2.408557653427124
    5. 'i' → logprob: -3.283557653427124
    6. 'for' → logprob: -3.533557653427124
    7. '   ' → logprob: -4.408557891845703
    8. 'j' → logprob: -5.783557891845703
    9. ' wins' → logprob: -5.783557891845703
    10. ' own' → logprob: -7.033557891845703

Token 198: ' We' (ID: 1416)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wins' → logprob: -0.8931870460510254
    2. 'win' → logprob: -1.5181870460510254
    3. 'count' → logprob: -2.1431870460510254
    4. 'own' → logprob: -2.2681870460510254
    5. 'for' → logprob: -3.0181870460510254
    6. ' wins' → logprob: -3.3931870460510254
    7. ' own' → logprob: -4.643187046051025
    8. 'i' → logprob: -4.768187046051025
    9. '#' → logprob: -4.893187046051025
    10. ' win' → logprob: -4.893187046051025

Token 199: ' count' (ID: 3605)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.792354941368103
    2. 'left' → logprob: -1.917354941368103
    3. 'i' → logprob: -2.1673550605773926
    4. 'def' → logprob: -2.2923550605773926
    5. 'from' → logprob: -2.4173550605773926
    6. ' can' → logprob: -2.6673550605773926
    7. ' i' → logprob: -2.7923550605773926
    8. ' have' → logprob: -3.1673550605773926
    9. ' will' → logprob: -3.4173550605773926
    10. ' left' → logprob: -3.5423550605773926

Token 200: ' how' (ID: 1495)
  Prédit: ' wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wins' → logprob: -0.4880426824092865
    2. 'wins' → logprob: -0.9880427122116089
    3. ' own' → logprob: -5.113042831420898
    4. ' i' → logprob: -6.238042831420898
    5. ' matches' → logprob: -6.738042831420898
    6. 'own' → logprob: -6.738042831420898
    7. 'win' → logprob: -7.113042831420898
    8. ' win' → logprob: -7.238042831420898
    9. '   ' → logprob: -7.488042831420898
    10. 'i' → logprob: -7.738042831420898

Token 201: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.38708704710006714
    2. ' many' → logprob: -1.137087106704712
    3. '       ' → logprob: -9.137086868286133
    4. '   ' → logprob: -10.387086868286133
    5. 'own' → logprob: -10.762086868286133
    6. 'wins' → logprob: -11.012086868286133
    7. '_many' → logprob: -11.512086868286133
    8. 'often' → logprob: -11.762086868286133
    9. 'win' → logprob: -11.887086868286133
    10. ' own' → logprob: -12.012086868286133

Token 202: ' of' (ID: 328)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wins' → logprob: -1.0015071630477905
    2. ' i' → logprob: -1.8765071630477905
    3. 'own' → logprob: -1.8765071630477905
    4. 'i' → logprob: -2.25150728225708
    5. ' own' → logprob: -2.37650728225708
    6. ' wins' → logprob: -2.87650728225708
    7. ' of' → logprob: -3.00150728225708
    8. ' matches' → logprob: -5.12650728225708
    9. ' can' → logprob: -5.37650728225708
    10. 'of' → logprob: -5.87650728225708

Token 203: ' our' (ID: 1039)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.7034378051757812
    2. ' own' → logprob: -0.7034378051757812
    3. ' our' → logprob: -5.328437805175781
    4. 'our' → logprob: -5.578437805175781
    5. ' range' → logprob: -7.078437805175781
    6. 'range' → logprob: -7.953437805175781
    7. ' the' → logprob: -8.703437805175781
    8. 'self' → logprob: -9.703437805175781
    9. ' opp' → logprob: -10.578437805175781
    10. 'ours' → logprob: -10.828437805175781

Token 204: ' chosen' (ID: 16180)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.644548237323761
    2. 'own' → logprob: -0.894548237323761
    3. ' wins' → logprob: -4.519548416137695
    4. ' top' → logprob: -4.519548416137695
    5. 'wins' → logprob: -4.644548416137695
    6. ' i' → logprob: -4.769548416137695
    7. 'i' → logprob: -4.769548416137695
    8. ' for' → logprob: -5.769548416137695
    9. 'top' → logprob: -5.894548416137695
    10. ' indices' → logprob: -6.144548416137695

Token 205: ' monsters' (ID: 59311)
  Prédit: ' monsters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monsters' → logprob: -0.46983569860458374
    2. ' own' → logprob: -1.5948357582092285
    3. 'own' → logprob: -2.9698357582092285
    4. ' can' → logprob: -3.0948357582092285
    5. 'mon' → logprob: -3.5948357582092285
    6. '_mon' → logprob: -3.9698357582092285
    7. '_' → logprob: -4.7198357582092285
    8. ' are' → logprob: -4.9698357582092285
    9. ' of' → logprob: -5.8448357582092285
    10. ' have' → logprob: -6.2198357582092285

Token 206: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.17770615220069885
    2. ' beat' → logprob: -2.302706241607666
    3. 'can' → logprob: -3.177706241607666
    4. 'beat' → logprob: -5.052706241607666
    5. ' defeat' → logprob: -5.802706241607666
    6. ' are' → logprob: -6.302706241607666
    7. 'win' → logprob: -6.302706241607666
    8. ' win' → logprob: -6.802706241607666
    9. ',' → logprob: -7.177706241607666
    10. ' we' → logprob: -7.302706241607666

Token 207: ' beat' (ID: 16807)
  Prédit: 'beat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beat' → logprob: -0.18148137629032135
    2. ' beat' → logprob: -2.05648136138916
    3. 'win' → logprob: -3.93148136138916
    4. ' defeat' → logprob: -4.68148136138916
    5. 'out' → logprob: -5.93148136138916
    6. 'strict' → logprob: -6.18148136138916
    7. ' out' → logprob: -6.55648136138916
    8. 'def' → logprob: -6.93148136138916
    9. ' outperform' → logprob: -7.05648136138916
    10. ' strictly' → logprob: -7.68148136138916

Token 208: ' opponent' (ID: 38519)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9328243136405945
    2. ' opp' → logprob: -1.3078243732452393
    3. ' opponent' → logprob: -1.9328243732452393
    4. ' their' → logprob: -2.6828243732452393
    5. 'op' → logprob: -3.4328243732452393
    6. 'the' → logprob: -3.4328243732452393
    7. ' opponents' → logprob: -3.9328243732452393
    8. ' an' → logprob: -4.05782413482666
    9. 'their' → logprob: -4.93282413482666
    10. 'opp' → logprob: -5.05782413482666

Token 209: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.22857387363910675
    2. '_top' → logprob: -1.9785739183425903
    3. '_' → logprob: -4.353573799133301
    4. 's' → logprob: -4.603573799133301
    5. '       ' → logprob: -4.603573799133301
    6. '_count' → logprob: -5.228573799133301
    7. '_mon' → logprob: -5.603573799133301
    8. 'count' → logprob: -5.728573799133301
    9. '_idx' → logprob: -6.228573799133301
    10. ''' → logprob: -6.478573799133301

Token 210: ' monsters' (ID: 59311)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.17037564516067505
    2. 'top' → logprob: -2.6703755855560303
    3. ' top' → logprob: -3.5453755855560303
    4. 'op' → logprob: -4.170375823974609
    5. '_' → logprob: -4.670375823974609
    6. ' strongest' → logprob: -5.045375823974609
    7. 'mon' → logprob: -5.795375823974609
    8. '[' → logprob: -6.170375823974609
    9. 'i' → logprob: -6.295375823974609
    10. 't' → logprob: -6.420375823974609

Token 211: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011274518445134163
    2. 'count' → logprob: -5.511274337768555
    3. ',' → logprob: -5.886274337768555
    4. ' i' → logprob: -7.011274337768555
    5. 'i' → logprob: -7.136274337768555
    6. ' count' → logprob: -7.261274337768555
    7. '
' → logprob: -8.386274337768555
    8. 'win' → logprob: -8.511274337768555
    9. '        
' → logprob: -8.761274337768555
    10. '```' → logprob: -9.136274337768555

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008307701908051968
    2. 'count' → logprob: -6.133307933807373
    3. ' i' → logprob: -6.133307933807373
    4. ',' → logprob: -6.883307933807373
    5. 'i' → logprob: -7.008307933807373
    6. ' count' → logprob: -7.258307933807373
    7. '        
' → logprob: -9.008307456970215
    8. '```' → logprob: -9.008307456970215
    9. 'win' → logprob: -9.383307456970215
    10. 'j' → logprob: -9.383307456970215

Token 213: ' #' (ID: 1069)
  Prédit: ' wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wins' → logprob: -1.1559340953826904
    2. 'wins' → logprob: -1.1559340953826904
    3. 'win' → logprob: -2.1559340953826904
    4. ' win' → logprob: -2.6559340953826904
    5. 'count' → logprob: -3.0309340953826904
    6. ' i' → logprob: -3.0309340953826904
    7. ' count' → logprob: -3.1559340953826904
    8. 'i' → logprob: -3.6559340953826904
    9. '       ' → logprob: -4.6559343338012695
    10. ' own' → logprob: -5.7809343338012695

Token 214: ' since' (ID: 3630)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wins' → logprob: -0.617321789264679
    2. ' wins' → logprob: -1.4923217296600342
    3. 'win' → logprob: -2.492321729660034
    4. 'count' → logprob: -3.117321729660034
    5. ' count' → logprob: -3.492321729660034
    6. 'i' → logprob: -3.617321729660034
    7. ' i' → logprob: -3.617321729660034
    8. ' win' → logprob: -4.367321968078613
    9. '   ' → logprob: -5.492321968078613
    10. ' own' → logprob: -6.617321968078613

Token 215: ' both' (ID: 2973)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.47182199358940125
    2. ' own' → logprob: -1.2218220233917236
    3. ' i' → logprob: -3.9718220233917236
    4. 'i' → logprob: -4.3468217849731445
    5. ' both' → logprob: -4.5968217849731445
    6. 'both' → logprob: -4.5968217849731445
    7. 'k' → logprob: -5.0968217849731445
    8. ' we' → logprob: -5.2218217849731445
    9. 'we' → logprob: -5.2218217849731445
    10. ' k' → logprob: -5.7218217849731445

Token 216: ' sorted' (ID: 20099)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.9547889828681946
    2. ' are' → logprob: -1.0797889232635498
    3. ' own' → logprob: -2.20478892326355
    4. 'own' → logprob: -2.32978892326355
    5. ' sides' → logprob: -3.70478892326355
    6. 'lists' → logprob: -4.579789161682129
    7. 'are' → logprob: -4.704789161682129
    8. ' have' → logprob: -4.829789161682129
    9. 'i' → logprob: -5.954789161682129
    10. ' arrays' → logprob: -6.204789161682129

Token 217: ' ascending' (ID: 75564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4070517420768738
    2. 'i' → logprob: -1.6570518016815186
    3. ' i' → logprob: -2.2820518016815186
    4. 'own' → logprob: -4.1570515632629395
    5. ',' → logprob: -4.2820515632629395
    6. ' own' → logprob: -5.7820515632629395
    7. 'count' → logprob: -6.5320515632629395
    8. '
' → logprob: -6.6570515632629395
    9. ',
' → logprob: -7.5320515632629395
    10. '   ' → logprob: -7.7820515632629395

Token 218: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27388280630111694
    2. 'i' → logprob: -2.0238828659057617
    3. ' i' → logprob: -2.8988828659057617
    4. 'count' → logprob: -3.6488828659057617
    5. 'win' → logprob: -5.148882865905762
    6. 'own' → logprob: -5.148882865905762
    7. ' count' → logprob: -6.148882865905762
    8. 'w' → logprob: -6.398882865905762
    9. ',' → logprob: -6.523882865905762
    10. '
' → logprob: -6.523882865905762

Token 219: ' we' (ID: 581)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06851951032876968
    2. '       ' → logprob: -3.5685195922851562
    3. ' i' → logprob: -3.5685195922851562
    4. 'j' → logprob: -5.318519592285156
    5. 'own' → logprob: -5.693519592285156
    6. 'o' → logprob: -7.568519592285156
    7. ' own' → logprob: -8.193519592285156
    8. '   ' → logprob: -8.443519592285156
    9. 'oi' → logprob: -8.693519592285156
    10. ' j' → logprob: -9.318519592285156

Token 220: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.2260816097259521
    2. ' i' → logprob: -1.8510816097259521
    3. '       ' → logprob: -1.9760816097259521
    4. ' have' → logprob: -2.101081609725952
    5. 'i' → logprob: -2.476081609725952
    6. ' will' → logprob: -3.351081609725952
    7. '   ' → logprob: -3.476081609725952
    8. ' try' → logprob: -3.726081609725952
    9. 'count' → logprob: -4.726081848144531
    10. ' need' → logprob: -4.726081848144531

Token 221: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3565497100353241
    2. 'to' → logprob: -1.9815497398376465
    3. 'i' → logprob: -2.8565497398376465
    4. 'own' → logprob: -2.8565497398376465
    5. ' i' → logprob: -4.3565497398376465
    6. ' own' → logprob: -4.3565497398376465
    7. '       ' → logprob: -4.9815497398376465
    8. '   ' → logprob: -5.7315497398376465
    9. 'j' → logprob: -5.9815497398376465
    10. 'for' → logprob: -6.2315497398376465

Token 222: ' count' (ID: 3605)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5260083675384521
    2. ' i' → logprob: -1.7760083675384521
    3. 'count' → logprob: -2.776008367538452
    4. 'match' → logprob: -3.026008367538452
    5. 'win' → logprob: -3.651008367538452
    6. ' count' → logprob: -3.776008367538452
    7. 'j' → logprob: -4.026008605957031
    8. ' match' → logprob: -4.276008605957031
    9. ' beat' → logprob: -4.276008605957031
    10. ' find' → logprob: -4.901008605957031

Token 223: ' for' (ID: 395)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wins' → logprob: -0.4346625804901123
    2. ' wins' → logprob: -1.6846625804901123
    3. ' how' → logprob: -2.4346625804901123
    4. ' i' → logprob: -3.8096625804901123
    5. ' matches' → logprob: -4.184662818908691
    6. 'i' → logprob: -4.184662818908691
    7. 'matches' → logprob: -4.684662818908691
    8. 'how' → logprob: -5.684662818908691
    9. ' the' → logprob: -5.684662818908691
    10. '   ' → logprob: -5.809662818908691

Token 224: ' how' (ID: 1495)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03787850961089134
    2. 'i' → logprob: -3.4128785133361816
    3. ' own' → logprob: -6.037878513336182
    4. ' ' → logprob: -7.287878513336182
    5. ' _' → logprob: -7.662878513336182
    6. 'own' → logprob: -8.037878036499023
    7. ' idx' → logprob: -9.662878036499023
    8. '_' → logprob: -9.912878036499023
    9. ' each' → logprob: -9.912878036499023
    10. ' j' → logprob: -10.287878036499023

Token 225: ' many' (ID: 1991)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8232890367507935
    2. 'own' → logprob: -1.4482890367507935
    3. ' i' → logprob: -1.4482890367507935
    4. 'many' → logprob: -3.198288917541504
    5. ' many' → logprob: -3.823288917541504
    6. ' own' → logprob: -3.823288917541504
    7. ' ' → logprob: -5.573288917541504
    8. '   ' → logprob: -6.698288917541504
    9. '    ' → logprob: -8.073288917541504
    10. '_' → logprob: -8.323288917541504

Token 226: ' indices' (ID: 30378)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3594897985458374
    2. ' i' → logprob: -1.2344897985458374
    3. 'own' → logprob: -4.859489917755127
    4. ' own' → logprob: -6.359489917755127
    5. ' times' → logprob: -8.359489440917969
    6. ' of' → logprob: -8.484489440917969
    7. 'idx' → logprob: -8.609489440917969
    8. ' indices' → logprob: -8.984489440917969
    9. ' idx' → logprob: -9.109489440917969
    10. ' in' → logprob: -9.109489440917969

Token 227: ' own' (ID: 2316)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12328650057315826
    2. 'i' → logprob: -2.873286485671997
    3. ' own' → logprob: -2.998286485671997
    4. 'own' → logprob: -4.998286724090576
    5. ' in' → logprob: -6.623286724090576
    6. ',' → logprob: -7.373286724090576
    7. ' ' → logprob: -8.623286247253418
    8. ':' → logprob: -9.373286247253418
    9. '0' → logprob: -9.373286247253418
    10. '[i' → logprob: -9.498286247253418

Token 228: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.0004216170927975327
    2. '_i' → logprob: -9.500421524047852
    3. '[i' → logprob: -9.875421524047852
    4. 'top' → logprob: -10.125421524047852
    5. '[_' → logprob: -10.125421524047852
    6. ' _' → logprob: -10.250421524047852
    7. '_' → logprob: -10.500421524047852
    8. '_idx' → logprob: -10.500421524047852
    9. '[-' → logprob: -11.000421524047852
    10. '[top' → logprob: -11.000421524047852

Token 229: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10650446265935898
    2. ' i' → logprob: -3.981504440307617
    3. ' >' → logprob: -4.481504440307617
    4. '[' → logprob: -4.606504440307617
    5. ' ' → logprob: -4.731504440307617
    6. ' have' → logprob: -5.231504440307617
    7. '   ' → logprob: -5.481504440307617
    8. ',' → logprob: -5.481504440307617
    9. '[-' → logprob: -5.606504440307617
    10. 'i' → logprob: -5.731504440307617

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15589411556720734
    2. ' ]' → logprob: -2.1558940410614014
    3. ' >' → logprob: -4.1558942794799805
    4. ' <' → logprob: -4.9058942794799805
    5. '>' → logprob: -6.0308942794799805
    6. ']>' → logprob: -6.5308942794799805
    7. ' ' → logprob: -7.1558942794799805
    8. '<' → logprob: -8.40589427947998
    9. ']<' → logprob: -9.15589427947998
    10. ' >=' → logprob: -9.53089427947998

Token 231: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.23556002974510193
    2. '>' → logprob: -1.6105600595474243
    3. ' <=' → logprob: -5.860559940338135
    4. ' <' → logprob: -6.110559940338135
    5. ' ' → logprob: -6.360559940338135
    6. ' >
' → logprob: -6.485559940338135
    7. ' >=' → logprob: -7.235559940338135
    8. '<' → logprob: -8.610560417175293
    9. '<=' → logprob: -8.735560417175293
    10. '   ' → logprob: -8.985560417175293

Token 232: ' opp' (ID: 6323)
  Prédit: ' opp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opp' → logprob: -0.20453226566314697
    2. 'opp' → logprob: -1.704532265663147
    3. 'op' → logprob: -5.829532146453857
    4. ' op' → logprob: -9.454532623291016
    5. ' opponent' → logprob: -10.454532623291016
    6. 'own' → logprob: -11.329532623291016
    7. ' own' → logprob: -11.329532623291016
    8. ' ' → logprob: -12.017032623291016
    9. ' oppon' → logprob: -12.392032623291016
    10. '`' → logprob: -12.642032623291016

Token 233: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -3.666993507067673e-05
    2. '_' → logprob: -12.250036239624023
    3. '[i' → logprob: -12.250036239624023
    4. 's' → logprob: -12.375036239624023
    5. 'top' → logprob: -12.500036239624023
    6. '[_' → logprob: -13.250036239624023
    7. '_levels' → logprob: -13.375036239624023
    8. ' _' → logprob: -13.875036239624023
    9. '```' → logprob: -13.875036239624023
    10. '[top' → logprob: -13.875036239624023

Token 234: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00283673033118248
    2. '[' → logprob: -6.75283670425415
    3. '[k' → logprob: -7.87783670425415
    4. '_len' → logprob: -8.877837181091309
    5. '[-' → logprob: -9.002837181091309
    6. '[
' → logprob: -9.002837181091309
    7. '[len' → logprob: -9.252837181091309
    8. ']' → logprob: -9.377837181091309
    9. '_i' → logprob: -9.377837181091309
    10. ' [' → logprob: -9.627837181091309

Token 235: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3889555037021637
    2. ' and' → logprob: -1.8889554738998413
    3. ']:' → logprob: -2.888955593109131
    4. ':' → logprob: -4.138955593109131
    5. '[i' → logprob: -4.138955593109131
    6. ' ]' → logprob: -4.263955593109131
    7. ']:
' → logprob: -4.513955593109131
    8. 'and' → logprob: -4.888955593109131
    9. '       ' → logprob: -4.888955593109131
    10. '])' → logprob: -5.513955593109131

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18068628013134003
    2. ' i' → logprob: -2.8056862354278564
    3. 'i' → logprob: -3.8056862354278564
    4. ' ' → logprob: -4.3056864738464355
    5. '\n' → logprob: -4.6806864738464355
    6. '        ' → logprob: -4.8056864738464355
    7. ' for' → logprob: -4.9306864738464355
    8. '   ' → logprob: -5.1806864738464355
    9. 'count' → logprob: -5.3056864738464355
    10. '    ' → logprob: -5.8056864738464355

Token 237: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7627295255661011
    2. ' i' → logprob: -0.8877295255661011
    3. 'j' → logprob: -2.8877296447753906
    4. '       ' → logprob: -3.3877296447753906
    5. ' j' → logprob: -3.7627296447753906
    6. ' own' → logprob: -5.887729644775391
    7. 'count' → logprob: -6.262729644775391
    8. 'own' → logprob: -7.137729644775391
    9. ' count' → logprob: -7.887729644775391
    10. '```' → logprob: -8.26272964477539

Token 238: ' We' (ID: 1416)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18923760950565338
    2. ' i' → logprob: -1.9392375946044922
    3. '       ' → logprob: -4.439237594604492
    4. 'j' → logprob: -4.564237594604492
    5. ' j' → logprob: -6.439237594604492
    6. 'import' → logprob: -6.939237594604492
    7. ' own' → logprob: -7.064237594604492
    8. 'from' → logprob: -7.314237594604492
    9. 'own' → logprob: -7.564237594604492
    10. '   ' → logprob: -8.064237594604492

Token 239: ' try' (ID: 2075)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0594441890716553
    2. 'i' → logprob: -1.4344441890716553
    3. ' want' → logprob: -2.1844441890716553
    4. ' will' → logprob: -2.4344441890716553
    5. ' can' → logprob: -2.8094441890716553
    6. ' have' → logprob: -3.6844441890716553
    7. ' ' → logprob: -3.9344441890716553
    8. ' use' → logprob: -4.434444427490234
    9. 'use' → logprob: -4.559444427490234
    10. 'will' → logprob: -4.559444427490234

Token 240: ' a' (ID: 261)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24450159072875977
    2. ':' → logprob: -1.9945015907287598
    3. 'to' → logprob: -3.1195015907287598
    4. ':
' → logprob: -3.4945015907287598
    5. ' {' → logprob: -6.61950159072876
    6. '    ' → logprob: -6.86950159072876
    7. ' :' → logprob: -7.11950159072876
    8. ' own' → logprob: -7.24450159072876
    9. ' :
' → logprob: -7.99450159072876
    10. '{' → logprob: -8.119501113891602

Token 241: ' greedy' (ID: 107110)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.19564799964427948
    2. 'two' → logprob: -3.070647954940796
    3. 'i' → logprob: -3.820647954940796
    4. 'll' → logprob: -4.320648193359375
    5. ' i' → logprob: -4.320648193359375
    6. ' ' → logprob: -4.570648193359375
    7. ' double' → logprob: -4.570648193359375
    8. 'pp' → logprob: -5.195648193359375
    9. ' while' → logprob: -5.320648193359375
    10. ' l' → logprob: -5.320648193359375

Token 242: ' matchup' (ID: 112515)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.04417009651660919
    2. ' two' → logprob: -4.669169902801514
    3. ' pointer' → logprob: -4.669169902801514
    4. 'pointer' → logprob: -5.044169902801514
    5. ' matching' → logprob: -5.294169902801514
    6. 'appro' → logprob: -5.919169902801514
    7. 'i' → logprob: -5.919169902801514
    8. ' match' → logprob: -6.294169902801514
    9. ' i' → logprob: -6.669169902801514
    10. ' algorithm' → logprob: -7.169169902801514

Token 243: ':' (ID: 25)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8985958695411682
    2. '       ' → logprob: -1.2735958099365234
    3. ' =' → logprob: -2.3985958099365234
    4. 'i' → logprob: -3.0235958099365234
    5. ':' → logprob: -3.6485958099365234
    6. ',' → logprob: -3.6485958099365234
    7. ',
' → logprob: -4.523595809936523
    8. ' for' → logprob: -4.523595809936523
    9. ' j' → logprob: -4.648595809936523
    10. ':
' → logprob: -4.648595809936523

Token 244: ' for' (ID: 395)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5559074282646179
    2. 'i' → logprob: -1.1809074878692627
    3. '       ' → logprob: -2.9309074878692627
    4. ' j' → logprob: -4.055907249450684
    5. '```' → logprob: -4.180907249450684
    6. '
' → logprob: -4.555907249450684
    7. 'j' → logprob: -4.555907249450684
    8. ' own' → logprob: -5.180907249450684
    9. '``' → logprob: -6.180907249450684
    10. 'own' → logprob: -6.805907249450684

Token 245: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.41357144713401794
    2. 'i' → logprob: -1.2885714769363403
    3. ' j' → logprob: -3.038571357727051
    4. 'j' → logprob: -4.288571357727051
    5. ' each' → logprob: -7.538571357727051
    6. ' own' → logprob: -8.16357135772705
    7. 'own' → logprob: -9.16357135772705
    8. ' opp' → logprob: -9.41357135772705
    9. 'each' → logprob: -9.41357135772705
    10. ' ' → logprob: -9.53857135772705

Token 246: ' opponent' (ID: 38519)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7224977612495422
    2. ' i' → logprob: -0.7224977612495422
    3. ' own' → logprob: -4.722497940063477
    4. ' j' → logprob: -4.722497940063477
    5. 'j' → logprob: -4.972497940063477
    6. 'own' → logprob: -6.097497940063477
    7. ' opp' → logprob: -7.222497940063477
    8. 'opp' → logprob: -8.097497940063477
    9. ' opponent' → logprob: -8.222497940063477
    10. 'op' → logprob: -8.472497940063477

Token 247: ' monster' (ID: 36286)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6280937194824219
    2. 'i' → logprob: -2.378093719482422
    3. '_top' → logprob: -2.628093719482422
    4. '[i' → logprob: -2.878093719482422
    5. ' monster' → logprob: -3.128093719482422
    6. ' index' → logprob: -3.628093719482422
    7. '_i' → logprob: -3.878093719482422
    8. 'monster' → logprob: -4.003093719482422
    9. '_mon' → logprob: -4.003093719482422
    10. ''s' → logprob: -4.503093719482422

Token 248: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4081573784351349
    2. ' i' → logprob: -1.7831573486328125
    3. 'i' → logprob: -1.9081573486328125
    4. ' ,' → logprob: -5.1581573486328125
    5. ' at' → logprob: -5.5331573486328125
    6. ' own' → logprob: -6.1581573486328125
    7. 'own' → logprob: -6.2831573486328125
    8. ',i' → logprob: -6.4081573486328125
    9. ' j' → logprob: -6.9081573486328125
    10. '[i' → logprob: -7.6581573486328125

Token 249: ' smallest' (ID: 42173)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8206020593643188
    2. ' the' → logprob: -1.9456020593643188
    3. ' range' → logprob: -2.1956019401550293
    4. ' ' → logprob: -2.5706019401550293
    5. ' own' → logprob: -3.3206019401550293
    6. ' j' → logprob: -3.4456019401550293
    7. ' index' → logprob: -3.5706019401550293
    8. 'the' → logprob: -3.9456019401550293
    9. 'range' → logprob: -3.9456019401550293
    10. ' smallest' → logprob: -4.570601940155029

Token 250: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6491214036941528
    2. 'own' → logprob: -1.5241214036941528
    3. 'to' → logprob: -2.6491212844848633
    4. 'index' → logprob: -2.8991212844848633
    5. ' index' → logprob: -3.0241212844848633
    6. 'i' → logprob: -3.3991212844848633
    7. ' own' → logprob: -4.274121284484863
    8. ',' → logprob: -4.399121284484863
    9. ' i' → logprob: -5.399121284484863
    10. ' ' → logprob: -5.649121284484863

Token 251: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.020595960319042206
    2. ' largest' → logprob: -5.020596027374268
    3. 'own' → logprob: -5.145596027374268
    4. 'small' → logprob: -5.270596027374268
    5. 'big' → logprob: -7.270596027374268
    6. ' smallest' → logprob: -7.270596027374268
    7. 'great' → logprob: -7.770596027374268
    8. 'large' → logprob: -8.02059555053711
    9. ' own' → logprob: -8.64559555053711
    10. '0' → logprob: -8.64559555053711

Token 252: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030906526371836662
    2. ' ,' → logprob: -3.9059064388275146
    3. ' own' → logprob: -5.780906677246094
    4. ',
' → logprob: -5.780906677246094
    5. 'own' → logprob: -6.405906677246094
    6. ' i' → logprob: -7.405906677246094
    7. 'i' → logprob: -7.530906677246094
    8. ' we' → logprob: -8.405906677246094
    9. ' in' → logprob: -8.655906677246094
    10. ',i' → logprob: -8.905906677246094

Token 253: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04264262318611145
    2. '       ' → logprob: -3.292642593383789
    3. ' ,' → logprob: -6.292642593383789
    4. ':' → logprob: -6.542642593383789
    5. ',
' → logprob: -7.792642593383789
    6. ' we' → logprob: -8.667642593383789
    7. ' to' → logprob: -8.667642593383789
    8. '   ' → logprob: -9.417642593383789
    9. ' in' → logprob: -9.417642593383789
    10. ' for' → logprob: -9.792642593383789

Token 254: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6459404826164246
    2. 'i' → logprob: -1.6459405422210693
    3. ' i' → logprob: -1.7709405422210693
    4. ' own' → logprob: -3.5209405422210693
    5. 'j' → logprob: -3.7709405422210693
    6. 'own' → logprob: -4.02094030380249
    7. ' j' → logprob: -4.14594030380249
    8. ',' → logprob: -4.14594030380249
    9. '   ' → logprob: -6.39594030380249
    10. '```' → logprob: -6.77094030380249

Token 255: ' assign' (ID: 14975)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5634756684303284
    2. 'i' → logprob: -1.1884756088256836
    3. ' own' → logprob: -2.8134756088256836
    4. ' j' → logprob: -3.9384756088256836
    5. 'j' → logprob: -3.9384756088256836
    6. '       ' → logprob: -4.188475608825684
    7. 'own' → logprob: -5.063475608825684
    8. ' used' → logprob: -7.188475608825684
    9. ' idx' → logprob: -8.063475608825684
    10. 'idx' → logprob: -8.188475608825684

Token 256: ' the' (ID: 290)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.14607840776443481
    2. 'own' → logprob: -3.27107834815979
    3. ' our' → logprob: -3.39607834815979
    4. ' i' → logprob: -3.52107834815979
    5. ' a' → logprob: -4.646078586578369
    6. 'i' → logprob: -4.771078586578369
    7. ' the' → logprob: -5.771078586578369
    8. ' an' → logprob: -6.021078586578369
    9. 'our' → logprob: -6.396078586578369
    10. ' your' → logprob: -6.646078586578369

Token 257: ' smallest' (ID: 42173)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1626285314559937
    2. ' own' → logprob: -1.2876285314559937
    3. ' i' → logprob: -1.7876285314559937
    4. 'own' → logprob: -2.162628650665283
    5. ' j' → logprob: -3.287628650665283
    6. 'j' → logprob: -3.412628650665283
    7. ' best' → logprob: -4.037628650665283
    8. 'best' → logprob: -4.412628650665283
    9. ' idx' → logprob: -5.287628650665283
    10. 'idx' → logprob: -5.662628650665283

Token 258: ' own' (ID: 2316)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.3514995872974396
    2. ' own' → logprob: -1.2264995574951172
    3. 'monster' → logprob: -6.601499557495117
    4. ' monster' → logprob: -7.101499557495117
    5. 'possible' → logprob: -8.226499557495117
    6. ' index' → logprob: -9.101499557495117
    7. 'index' → logprob: -9.476499557495117
    8. ' possible' → logprob: -9.601499557495117
    9. ' available' → logprob: -9.976499557495117
    10. 'remaining' → logprob: -10.101499557495117

Token 259: ' monster' (ID: 36286)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.009841437451541424
    2. '_mon' → logprob: -5.509841442108154
    3. '_' → logprob: -6.509841442108154
    4. ' top' → logprob: -6.759841442108154
    5. 'monster' → logprob: -6.759841442108154
    6. ' monster' → logprob: -7.009841442108154
    7. 'top' → logprob: -7.759841442108154
    8. 'mon' → logprob: -9.009840965270996
    9. 'own' → logprob: -9.384840965270996
    10. '```' → logprob: -9.634840965270996

Token 260: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.17914585769176483
    2. 's' → logprob: -2.9291458129882812
    3. 'that' → logprob: -3.6791458129882812
    4. ' to' → logprob: -3.9291458129882812
    5. ' from' → logprob: -4.554145812988281
    6. ' >=' → logprob: -4.804145812988281
    7. ' ' → logprob: -4.929145812988281
    8. ' at' → logprob: -4.929145812988281
    9. ' s' → logprob: -5.054145812988281
    10. ' >' → logprob: -5.304145812988281

Token 261: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9276132583618164
    2. '>' → logprob: -1.0526132583618164
    3. ' can' → logprob: -2.0526132583618164
    4. 'is' → logprob: -2.9276132583618164
    5. 'can' → logprob: -3.3026132583618164
    6. ' >' → logprob: -3.5526132583618164
    7. ' beats' → logprob: -6.052613258361816
    8. ''s' → logprob: -7.052613258361816
    9. 'def' → logprob: -7.552613258361816
    10. '>=' → logprob: -7.552613258361816

Token 262: ' beat' (ID: 16807)
  Prédit: 'beat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beat' → logprob: -0.008292333222925663
    2. ' beat' → logprob: -4.883292198181152
    3. 'def' → logprob: -7.758292198181152
    4. 'win' → logprob: -8.758292198181152
    5. ' defeat' → logprob: -9.383292198181152
    6. '>' → logprob: -11.258292198181152
    7. ' ' → logprob: -13.383292198181152
    8. '```' → logprob: -13.508292198181152
    9. 'strict' → logprob: -13.883292198181152
    10. '   ' → logprob: -15.133292198181152

Token 263: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.35898780822753906
    2. 'it' → logprob: -1.483987808227539
    3. 'op' → logprob: -3.483987808227539
    4. ' the' → logprob: -4.358987808227539
    5. ' opponent' → logprob: -4.733987808227539
    6. ' opp' → logprob: -4.983987808227539
    7. ' that' → logprob: -5.733987808227539
    8. 'own' → logprob: -5.733987808227539
    9. ' them' → logprob: -6.108987808227539
    10. 'the' → logprob: -6.108987808227539

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03580574318766594
    2. ',' → logprob: -4.410805702209473
    3. '
' → logprob: -5.160805702209473
    4. ' to' → logprob: -6.035805702209473
    5. ' =' → logprob: -6.035805702209473
    6. '.' → logprob: -6.410805702209473
    7. '        
' → logprob: -6.535805702209473
    8. 's' → logprob: -6.660805702209473
    9. ' own' → logprob: -6.660805702209473
    10. '   ' → logprob: -6.910805702209473

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5467614531517029
    2. '
' → logprob: -1.4217615127563477
    3. '\n' → logprob: -2.7967615127563477
    4. ' 
' → logprob: -3.0467615127563477
    5. '        
' → logprob: -3.6717615127563477
    6. '\' → logprob: -4.671761512756348
    7. '  
' → logprob: -4.671761512756348
    8. '   ' → logprob: -4.796761512756348
    9. '    
' → logprob: -5.171761512756348
    10. '    ' → logprob: -6.171761512756348

Token 266: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07425713539123535
    2. ' i' → logprob: -3.3242571353912354
    3. 'i' → logprob: -4.324256896972656
    4. ' own' → logprob: -5.449256896972656
    5. 'own' → logprob: -5.574256896972656
    6. '
' → logprob: -5.699256896972656
    7. '```' → logprob: -6.199256896972656
    8. 'count' → logprob: -6.699256896972656
    9. '   ' → logprob: -6.824256896972656
    10. 'n' → logprob: -6.949256896972656

Token 267: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5104019641876221
    2. ' i' → logprob: -1.510401964187622
    3. ' own' → logprob: -2.510401964187622
    4. 'i' → logprob: -3.010401964187622
    5. 'own' → logprob: -4.010401725769043
    6. ' from' → logprob: -5.010401725769043
    7. 'from' → logprob: -5.385401725769043
    8. 'import' → logprob: -5.885401725769043
    9. 'j' → logprob: -6.010401725769043
    10. ' j' → logprob: -6.260401725769043

Token 268: ' simulate' (ID: 66687)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.4180448055267334
    2. ' have' → logprob: -2.0430448055267334
    3. ' use' → logprob: -2.4180448055267334
    4. ' def' → logprob: -2.5430448055267334
    5. ' try' → logprob: -2.6680448055267334
    6. ' need' → logprob: -2.7930448055267334
    7. ' continue' → logprob: -2.9180448055267334
    8. ''ll' → logprob: -3.0430448055267334
    9. 'def' → logprob: -3.1680448055267334
    10. ' will' → logprob: -3.2930448055267334

Token 269: ' using' (ID: 2360)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.5036661624908447
    2. ' i' → logprob: -1.6286661624908447
    3. '       ' → logprob: -2.2536661624908447
    4. 'i' → logprob: -3.6286661624908447
    5. 'own' → logprob: -4.003665924072266
    6. ' a' → logprob: -4.503665924072266
    7. ' j' → logprob: -4.503665924072266
    8. ' two' → logprob: -5.128665924072266
    9. 'j' → logprob: -5.503665924072266
    10. 'd' → logprob: -6.628665924072266

Token 270: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.32433557510375977
    2. ' two' → logprob: -1.3243355751037598
    3. 'i' → logprob: -5.44933557510376
    4. 'from' → logprob: -6.44933557510376
    5. 'own' → logprob: -6.94933557510376
    6. 'a' → logprob: -6.94933557510376
    7. '```' → logprob: -6.94933557510376
    8. ' own' → logprob: -7.19933557510376
    9. 'import' → logprob: -7.32433557510376
    10. ' pointers' → logprob: -8.449335098266602

Token 271: ' pointers' (ID: 58762)
  Prédit: ' pointers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pointers' → logprob: -0.1628711223602295
    2. 'p' → logprob: -1.9128711223602295
    3. ' indices' → logprob: -7.287871360778809
    4. 'indices' → logprob: -7.537871360778809
    5. '-pointer' → logprob: -7.787871360778809
    6. ' p' → logprob: -7.912871360778809
    7. 'pointer' → logprob: -8.287871360778809
    8. '-p' → logprob: -8.787871360778809
    9. '   ' → logprob: -9.412871360778809
    10. ' pointer' → logprob: -9.662871360778809

Token 272: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6158751249313354
    2. '
' → logprob: -0.8658751249313354
    3. '        
' → logprob: -3.865875244140625
    4. '\n' → logprob: -5.115875244140625
    5. 'i' → logprob: -6.115875244140625
    6. '  
' → logprob: -6.615875244140625
    7. ' i' → logprob: -6.865875244140625
    8. 'own' → logprob: -6.865875244140625
    9. '   ' → logprob: -6.990875244140625
    10. '```' → logprob: -7.115875244140625

Token 273: ' count' (ID: 3605)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.6371467709541321
    2. 'match' → logprob: -0.8871467709541321
    3. ' find' → logprob: -4.012146949768066
    4. 'find' → logprob: -4.762146949768066
    5. ' count' → logprob: -4.887146949768066
    6. 'count' → logprob: -4.887146949768066
    7. 'assign' → logprob: -5.012146949768066
    8. 'i' → logprob: -6.637146949768066
    9. ' assign' → logprob: -6.637146949768066
    10. 'simulate' → logprob: -6.887146949768066

Token 274: ' max' (ID: 2999)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9150906801223755
    2. 'i' → logprob: -1.2900906801223755
    3. ' own' → logprob: -1.7900906801223755
    4. 'own' → logprob: -2.165090560913086
    5. '       ' → logprob: -3.790090560913086
    6. '   ' → logprob: -5.040090560913086
    7. '        
' → logprob: -5.665090560913086
    8. '
' → logprob: -6.415090560913086
    9. ' ' → logprob: -7.040090560913086
    10. '    
' → logprob: -7.040090560913086

Token 275: ' wins' (ID: 25327)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wins' → logprob: -1.0566538572311401
    2. ' wins' → logprob: -1.6816538572311401
    3. 'i' → logprob: -1.9316538572311401
    4. ' i' → logprob: -2.1816539764404297
    5. ' own' → logprob: -2.9316539764404297
    6. 'own' → logprob: -3.1816539764404297
    7. 'win' → logprob: -3.4316539764404297
    8. ' win' → logprob: -3.4316539764404297
    9. 'matches' → logprob: -4.18165397644043
    10. ' matches' → logprob: -4.30665397644043

Token 276: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018646057695150375
    2. '        
' → logprob: -4.893646240234375
    3. '
' → logprob: -5.393646240234375
    4. ' i' → logprob: -6.268646240234375
    5. 'i' → logprob: -6.893646240234375
    6. '   ' → logprob: -7.268646240234375
    7. '\n' → logprob: -7.393646240234375
    8. 'own' → logprob: -7.643646240234375
    9. ',' → logprob: -8.143646240234375
    10. ' own' → logprob: -8.268646240234375

Token 277: ' fixed' (ID: 13213)
  Prédit: ' own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.6580758690834045
    2. ' the' → logprob: -2.2830758094787598
    3. 'own' → logprob: -2.4080758094787598
    4. 'i' → logprob: -2.9080758094787598
    5. 'out' → logprob: -3.1580758094787598
    6. ' two' → logprob: -3.1580758094787598
    7. ' i' → logprob: -3.5330758094787598
    8. 'two' → logprob: -3.9080758094787598
    9. 'the' → logprob: -3.9080758094787598
    10. '```' → logprob: -4.65807580947876

Token 278: ' own' (ID: 2316)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5414575934410095
    2. ' i' → logprob: -2.4164576530456543
    3. ' k' → logprob: -2.4164576530456543
    4. 'i' → logprob: -2.6664576530456543
    5. ' indices' → logprob: -2.7914576530456543
    6. 'own' → logprob: -3.4164576530456543
    7. ' own' → logprob: -3.4164576530456543
    8. ' pointers' → logprob: -4.416457653045654
    9. 'indices' → logprob: -4.916457653045654
    10. ' ' → logprob: -5.791457653045654

Token 279: ' selection' (ID: 8441)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.43394553661346436
    2. '_top' → logprob: -1.1839455366134644
    3. '_idx' → logprob: -4.183945655822754
    4. '_ptr' → logprob: -4.683945655822754
    5. '_' → logprob: -5.058945655822754
    6. '_index' → logprob: -5.308945655822754
    7. '_p' → logprob: -5.433945655822754
    8. '_pointer' → logprob: -5.808945655822754
    9. 'i' → logprob: -7.808945655822754
    10. '_pos' → logprob: -7.933945655822754

Token 280: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08293266594409943
    2. '
' → logprob: -2.832932710647583
    3. '\n' → logprob: -5.082932472229004
    4. 'i' → logprob: -5.832932472229004
    5. '        
' → logprob: -5.832932472229004
    6. ' i' → logprob: -6.332932472229004
    7. '```' → logprob: -6.457932472229004
    8. 'own' → logprob: -6.457932472229004
    9. '   ' → logprob: -7.207932472229004
    10. 'n' → logprob: -7.207932472229004

Token 281: ' worst' (ID: 20486)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.7569668292999268
    2. ' two' → logprob: -1.6319668292999268
    3. 'op' → logprob: -2.1319668292999268
    4. ' opponent' → logprob: -2.2569668292999268
    5. 'fixed' → logprob: -3.7569668292999268
    6. ' fixed' → logprob: -4.006966590881348
    7. ' opp' → logprob: -4.506966590881348
    8. ' the' → logprob: -5.131966590881348
    9. 'k' → logprob: -5.256966590881348
    10. ' their' → logprob: -5.381966590881348

Token 282: ' opponent' (ID: 38519)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.902881383895874
    2. 'case' → logprob: -1.652881383895874
    3. 'own' → logprob: -2.027881383895874
    4. '-case' → logprob: -2.527881383895874
    5. '   ' → logprob: -3.277881383895874
    6. ' opponent' → logprob: -3.777881383895874
    7. 'pointer' → logprob: -4.152881622314453
    8. '        ' → logprob: -4.277881622314453
    9. ' case' → logprob: -4.277881622314453
    10. ' own' → logprob: -4.652881622314453

Token 283: ' selection' (ID: 8441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9904954433441162
    2. '   ' → logprob: -1.2404954433441162
    3. ' pointers' → logprob: -2.240495443344116
    4. ' i' → logprob: -2.615495443344116
    5. 's' → logprob: -3.115495443344116
    6. 'i' → logprob: -3.240495443344116
    7. 'pointer' → logprob: -3.865495443344116
    8. ' pointer' → logprob: -4.365495681762695
    9. '    ' → logprob: -4.865495681762695
    10. ' ' → logprob: -5.615495681762695

Token 284: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1777135580778122
    2. '
' → logprob: -2.427713632583618
    3. '        
' → logprob: -3.427713632583618
    4. 'own' → logprob: -4.802713394165039
    5. '  
' → logprob: -5.302713394165039
    6. ' own' → logprob: -5.802713394165039
    7. ' i' → logprob: -5.802713394165039
    8. '   ' → logprob: -5.802713394165039
    9. '\n' → logprob: -5.927713394165039
    10. '```' → logprob: -5.927713394165039

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04824596643447876
    2. '
' → logprob: -3.548245906829834
    3. '```' → logprob: -4.798245906829834
    4. '        
' → logprob: -5.673245906829834
    5. '\n' → logprob: -6.548245906829834
    6. '   ' → logprob: -6.673245906829834
    7. ' i' → logprob: -6.798245906829834
    8. ' own' → logprob: -7.923245906829834
    9. '``' → logprob: -7.923245906829834
    10. '  
' → logprob: -8.048246383666992

Token 286: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2131906896829605
    2. 'own' → logprob: -2.213190793991089
    3. ' i' → logprob: -3.213190793991089
    4. '       ' → logprob: -3.588190793991089
    5. ' own' → logprob: -4.33819055557251
    6. 'o' → logprob: -8.088191032409668
    7. 'win' → logprob: -8.213191032409668
    8. 'ow' → logprob: -8.963191032409668
    9. 'ptr' → logprob: -9.213191032409668
    10. 'l' → logprob: -9.213191032409668

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13828368484973907
    2. ',' → logprob: -2.2632837295532227
    3. '=' → logprob: -3.7632837295532227
    4. ' ,' → logprob: -6.388283729553223
    5. ' ' → logprob: -8.513283729553223
    6. '<|end|>' → logprob: -11.513283729553223
    7. ',j' → logprob: -11.638283729553223
    8. ' =
' → logprob: -11.638283729553223
    9. '  ' → logprob: -12.138283729553223
    10. 's' → logprob: -12.513283729553223

Token 288: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006791924242861569
    2. ' ' → logprob: -7.375679016113281
    3. 'j' → logprob: -9.875679016113281
    4. ' j' → logprob: -14.500679016113281
    5. '   ' → logprob: -15.250679016113281
    6. 'len' → logprob: -15.875679016113281
    7. 'i' → logprob: -16.12567901611328
    8. '1' → logprob: -16.12567901611328
    9. '  ' → logprob: -16.50067901611328
    10. 'k' → logprob: -17.12567901611328

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.625029563903809
    3. 'j' → logprob: -12.250029563903809
    4. 'len' → logprob: -17.000028610229492
    5. 'i' → logprob: -17.500028610229492
    6. '   ' → logprob: -17.625028610229492
    7. 'k' → logprob: -17.750028610229492
    8. '1' → logprob: -18.437528610229492
    9. ' j' → logprob: -19.062528610229492
    10. '  ' → logprob: -19.125028610229492

Token 290: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08876342326402664
    2. 'j' → logprob: -2.713763475418091
    3. ' j' → logprob: -4.463763236999512
    4. '<|end|>' → logprob: -5.463763236999512
    5. ' 
' → logprob: -7.338763236999512
    6. ',' → logprob: -7.713763236999512
    7. ',j' → logprob: -7.838763236999512
    8. '  
' → logprob: -7.838763236999512
    9. '    
' → logprob: -8.713763236999512
    10. '
' → logprob: -8.713763236999512

Token 291: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010175447911024094
    2. '
' → logprob: -4.6351752281188965
    3. ' j' → logprob: -8.510175704956055
    4. '       ' → logprob: -9.385175704956055
    5. 'for' → logprob: -10.510175704956055
    6. ',' → logprob: -10.510175704956055
    7. ',j' → logprob: -10.760175704956055
    8. '   ' → logprob: -11.635175704956055
    9. 'i' → logprob: -11.760175704956055
    10. 'w' → logprob: -11.885175704956055

Token 292: ' own' (ID: 2316)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.28345736861228943
    2. ' j' → logprob: -1.4084573984146118
    3. '0' → logprob: -7.158457279205322
    4. ' ' → logprob: -7.658457279205322
    5. '   ' → logprob: -8.53345775604248
    6. 'i' → logprob: -8.65845775604248
    7. ' win' → logprob: -9.15845775604248
    8. 'win' → logprob: -9.53345775604248
    9. 'k' → logprob: -9.65845775604248
    10. 'wins' → logprob: -9.90845775604248

Token 293: '_top' (ID: 23394)
  Prédit: '_ptr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ptr' → logprob: -1.2828868627548218
    2. '_p' → logprob: -1.5328868627548218
    3. '_idx' → logprob: -1.9078868627548218
    4. '_j' → logprob: -2.2828869819641113
    5. '_pointer' → logprob: -2.4078869819641113
    6. '_i' → logprob: -2.9078869819641113
    7. '_top' → logprob: -3.5328869819641113
    8. '_index' → logprob: -3.6578869819641113
    9. '_len' → logprob: -4.782886981964111
    10. '_count' → logprob: -5.157886981964111

Token 294: ' pointer' (ID: 16233)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: '
' (ID: 198)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.031985677778720856
    2. ' j' → logprob: -3.5319857597351074
    3. '       ' → logprob: -6.906985759735107
    4. '
' → logprob: -7.156985759735107
    5. '	j' → logprob: -8.78198528289795
    6. ',j' → logprob: -9.03198528289795
    7. ',' → logprob: -9.28198528289795
    8. '   ' → logprob: -10.03198528289795
    9. '     ' → logprob: -12.28198528289795
    10. '' → logprob: -12.53198528289795

Token 296: '       ' (ID: 309)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4639069736003876
    2. ' j' → logprob: -1.58890700340271
    3. '       ' → logprob: -1.83890700340271
    4. '	j' → logprob: -6.088906764984131
    5. 'i' → logprob: -6.588906764984131
    6. '   ' → logprob: -6.713906764984131
    7. ',j' → logprob: -6.713906764984131
    8. '<|end|>' → logprob: -7.838906764984131
    9. ' ' → logprob: -7.963906764984131
    10. ',' → logprob: -8.088907241821289

Token 297: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.10026371479034424
    2. ' j' → logprob: -2.3502635955810547
    3. '       ' → logprob: -10.850263595581055
    4. '	j' → logprob: -10.975263595581055
    5. '   ' → logprob: -11.975263595581055
    6. 'i' → logprob: -12.100263595581055
    7. 'n' → logprob: -13.600263595581055
    8. '    ' → logprob: -13.975263595581055
    9. 'k' → logprob: -14.100263595581055
    10. 'w' → logprob: -14.225263595581055

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283848434686661
    2. '=' → logprob: -2.2378385066986084
    3. '0' → logprob: -12.362838745117188
    4. ' ' → logprob: -12.987838745117188
    5. '<|end|>' → logprob: -12.987838745117188
    6. ' =
' → logprob: -13.112838745117188
    7. '=
' → logprob: -13.237838745117188
    8. ' +=' → logprob: -13.487838745117188
    9. ':' → logprob: -14.612838745117188
    10. '+=' → logprob: -14.737838745117188

Token 299: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815064437687397
    2. ' ' → logprob: -4.018150806427002
    3. '   ' → logprob: -15.518150329589844
    4. '<|end|>' → logprob: -15.893150329589844
    5. '  ' → logprob: -16.830650329589844
    6. '1' → logprob: -17.018150329589844
    7. '       ' → logprob: -17.643150329589844
    8. 's' → logprob: -17.768150329589844
    9. '#' → logprob: -17.830650329589844
    10. '=' → logprob: -17.893150329589844

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.939002990722656
    4. 'k' → logprob: -16.501502990722656
    5. 'i' → logprob: -16.814002990722656
    6. '1' → logprob: -17.189002990722656
    7. '       ' → logprob: -17.439002990722656
    8. '#' → logprob: -17.939002990722656
    9. '  ' → logprob: -18.001502990722656
    10. 'def' → logprob: -18.126502990722656

Token 301: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42656832933425903
    2. 'while' → logprob: -1.8015682697296143
    3. '<|end|>' → logprob: -2.6765682697296143
    4. '#' → logprob: -2.9265682697296143
    5. ' while' → logprob: -3.4265682697296143
    6. '   ' → logprob: -5.051568508148193
    7. ' #' → logprob: -5.551568508148193
    8. '	while' → logprob: -5.801568508148193
    9. ' ' → logprob: -5.801568508148193
    10. '
' → logprob: -6.051568508148193

Token 303: ' opp' (ID: 6323)
  Prédit: 'opp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opp' → logprob: -0.574180006980896
    2. 'k' → logprob: -1.199180006980896
    3. 'op' → logprob: -2.6991801261901855
    4. ' opp' → logprob: -3.0741801261901855
    5. ' k' → logprob: -4.1991801261901855
    6. 'len' → logprob: -5.4491801261901855
    7. ' opponent' → logprob: -7.4491801261901855
    8. 'j' → logprob: -7.9491801261901855
    9. ' len' → logprob: -7.9491801261901855
    10. 'own' → logprob: -8.199179649353027

Token 304: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.0002776630863081664
    2. '_' → logprob: -8.375277519226074
    3. 'Top' → logprob: -11.250277519226074
    4. ' _' → logprob: -11.250277519226074
    5. '_TOP' → logprob: -12.500277519226074
    6. '_pointer' → logprob: -12.625277519226074
    7. 'top' → logprob: -12.750277519226074
    8. '_bottom' → logprob: -13.375277519226074
    9. '   ' → logprob: -13.750277519226074
    10. '	top' → logprob: -13.750277519226074

Token 305: ' pointer' (ID: 16233)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -1.1113609075546265
    2. '<|end|>' → logprob: -1.4863609075546265
    3. ' ' → logprob: -2.486361026763916
    4. '       ' → logprob: -2.486361026763916
    5. ' pointer' → logprob: -3.111361026763916
    6. '_pointer' → logprob: -3.111361026763916
    7. ' =' → logprob: -3.111361026763916
    8. 'while' → logprob: -3.611361026763916
    9. '   ' → logprob: -3.861361026763916
    10. ' +' → logprob: -4.361361026763916

Token 306: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03560030087828636
    2. 'while' → logprob: -4.160600185394287
    3. ' while' → logprob: -4.785600185394287
    4. '<|end|>' → logprob: -5.535600185394287
    5. '	while' → logprob: -6.035600185394287
    6. '   ' → logprob: -6.660600185394287
    7. '
' → logprob: -7.035600185394287
    8. '        
' → logprob: -7.535600185394287
    9. 'n' → logprob: -8.285600662231445
    10. ',' → logprob: -8.285600662231445

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020661000162363052
    2. 'while' → logprob: -4.645660877227783
    3. ' while' → logprob: -5.520660877227783
    4. 'n' → logprob: -6.520660877227783
    5. '<|end|>' → logprob: -6.770660877227783
    6. '	   ' → logprob: -6.895660877227783
    7. '	while' → logprob: -7.020660877227783
    8. '   ' → logprob: -7.270660877227783
    9. '	       ' → logprob: -7.770660877227783
    10. '```' → logprob: -8.895661354064941

Token 308: ' wins' (ID: 25327)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wins' (adapté à ' wins') → logprob: -0.9801219701766968
    2. ' wins' → logprob: -1.1051219701766968
    3. '       ' → logprob: -1.9801219701766968
    4. ' while' → logprob: -3.1051220893859863
    5. 'while' → logprob: -3.4801220893859863
    6. 'win' → logprob: -3.8551220893859863
    7. 'count' → logprob: -3.9801220893859863
    8. ' win' → logprob: -4.105122089385986
    9. ' count' → logprob: -4.980122089385986
    10. 'n' → logprob: -4.980122089385986

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4743732511997223
    2. '=' → logprob: -0.9743732213973999
    3. ' +=' → logprob: -8.224372863769531
    4. '+=' → logprob: -11.224372863769531
    5. '>' → logprob: -11.974372863769531
    6. ' ' → logprob: -12.849372863769531
    7. '>=' → logprob: -13.849372863769531
    8. ' >' → logprob: -14.099372863769531
    9. ' >=' → logprob: -14.224372863769531
    10. '   ' → logprob: -14.474372863769531

Token 310: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. ' ' → logprob: -17.127185821533203
    4. '   ' → logprob: -17.127185821533203
    5. '  ' → logprob: -19.002185821533203
    6. '۰' → logprob: -19.002185821533203
    7. '1' → logprob: -19.939685821533203
    8. '00' → logprob: -20.314685821533203
    9. '	' → logprob: -20.752185821533203
    10. '000' → logprob: -20.814685821533203

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.250139236450195
    4. '  ' → logprob: -19.500139236450195
    5. ' ' → logprob: -20.125139236450195
    6. '۰' → logprob: -20.250139236450195
    7. '000' → logprob: -20.375139236450195
    8. '00' → logprob: -20.625139236450195
    9. '```' → logprob: -20.875139236450195
    10. '1' → logprob: -21.687639236450195

Token 312: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016842542216181755
    2. '
' → logprob: -4.766842365264893
    3. ' while' → logprob: -6.016842365264893
    4. '<|end|>' → logprob: -6.016842365264893
    5. 'while' → logprob: -6.766842365264893
    6. '        
' → logprob: -7.141842365264893
    7. '	while' → logprob: -7.891842365264893
    8. '   ' → logprob: -8.01684284210205
    9. ' 
' → logprob: -8.89184284210205
    10. '  
' → logprob: -9.14184284210205

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028917696326971054
    2. '<|end|>' → logprob: -4.5289177894592285
    3. '   ' → logprob: -5.0289177894592285
    4. ' while' → logprob: -5.7789177894592285
    5. '
' → logprob: -6.0289177894592285
    6. '	while' → logprob: -6.2789177894592285
    7. 'while' → logprob: -6.4039177894592285
    8. '        
' → logprob: -7.5289177894592285
    9. '<|end|>' → logprob: -8.02891731262207
    10. '	' → logprob: -8.40391731262207

Token 314: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6269274950027466
    2. '       ' → logprob: -1.2519274950027466
    3. ' while' → logprob: -1.7519274950027466
    4. '	while' → logprob: -5.376927375793457
    5. '   ' → logprob: -7.751927375793457
    6. '        
' → logprob: -8.001927375793457
    7. ',' → logprob: -8.626927375793457
    8. 'n' → logprob: -8.876927375793457
    9. '<|end|>' → logprob: -9.501927375793457
    10. '        ' → logprob: -9.876927375793457

Token 315: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.055154990404844284
    2. ' j' → logprob: -3.430155038833618
    3. 'i' → logprob: -3.930155038833618
    4. 'j' → logprob: -6.430154800415039
    5. ' ' → logprob: -11.180154800415039
    6. ' (' → logprob: -12.180154800415039
    7. ' ' → logprob: -13.055154800415039
    8. '(i' → logprob: -13.305154800415039
    9. '   ' → logprob: -13.680154800415039
    10. '	i' → logprob: -14.180154800415039

Token 316: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3495239317417145
    2. '<' → logprob: -1.224523901939392
    3. '<len' → logprob: -6.974524021148682
    4. '<n' → logprob: -9.224523544311523
    5. ' ' → logprob: -11.224523544311523
    6. '[' → logprob: -11.474523544311523
    7. '<size' → logprob: -11.849523544311523
    8. '<s' → logprob: -13.224523544311523
    9. ' <
' → logprob: -13.224523544311523
    10. '<N' → logprob: -13.474523544311523

Token 317: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0019910898990929127
    2. 'len' → logprob: -6.251991271972656
    3. ' k' → logprob: -9.751991271972656
    4. ' len' → logprob: -12.751991271972656
    5. '   ' → logprob: -13.751991271972656
    6. ' ' → logprob: -16.126991271972656
    7. '  ' → logprob: -17.126991271972656
    8. '	k' → logprob: -17.126991271972656
    9. '[k' → logprob: -17.689491271972656
    10. '(k' → logprob: -18.064491271972656

Token 318: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005234356038272381
    2. 'and' → logprob: -5.255234241485596
    3. ' ' → logprob: -14.630234718322754
    4. '   ' → logprob: -15.755234718322754
    5. '    ' → logprob: -18.255233764648438
    6. '	and' → logprob: -18.255233764648438
    7. ' и' → logprob: -18.505233764648438
    8. '       ' → logprob: -19.505233764648438
    9. '  ' → logprob: -19.630233764648438
    10. ' ' → logprob: -19.880233764648438

Token 319: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003541734768077731
    2. ' j' → logprob: -8.000353813171387
    3. '   ' → logprob: -11.500353813171387
    4. 'wins' → logprob: -12.875353813171387
    5. '	j' → logprob: -13.250353813171387
    6. '       ' → logprob: -13.875353813171387
    7. '    ' → logprob: -14.125353813171387
    8. '           ' → logprob: -15.000353813171387
    9. '  ' → logprob: -15.000353813171387
    10. 'i' → logprob: -15.250353813171387

Token 320: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.014176322147250175
    2. '<' → logprob: -4.264176368713379
    3. 'k' → logprob: -12.889176368713379
    4. ' ' → logprob: -13.014176368713379
    5. '<n' → logprob: -13.014176368713379
    6. '<size' → logprob: -13.639176368713379
    7. '<m' → logprob: -14.139176368713379
    8. '<len' → logprob: -14.514176368713379
    9. '<int' → logprob: -14.889176368713379
    10. '<class' → logprob: -15.014176368713379

Token 321: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.014684110297821e-06
    2. ' k' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.000009536743164
    4. ' ' → logprob: -18.625009536743164
    5. '	k' → logprob: -19.000009536743164
    6. '       ' → logprob: -20.375009536743164
    7. 'ks' → logprob: -20.625009536743164
    8. '           ' → logprob: -20.875009536743164
    9. '  ' → logprob: -21.000009536743164
    10. '{k' → logprob: -21.375009536743164

Token 322: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.389425665140152
    2. ':
' → logprob: -1.1394256353378296
    3. ' and' → logprob: -6.014425754547119
    4. ',' → logprob: -10.639425277709961
    5. 'and' → logprob: -10.764425277709961
    6. ':

' → logprob: -11.139425277709961
    7. '       ' → logprob: -11.139425277709961
    8. '):
' → logprob: -11.389425277709961
    9. '   ' → logprob: -11.889425277709961
    10. ':
' → logprob: -11.889425277709961

Token 323: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3290247917175293
    2. '           ' → logprob: -2.3290247917175293
    3. ' if' → logprob: -2.5790247917175293
    4. '   ' → logprob: -2.7040247917175293
    5. '<|end|>' → logprob: -3.5790247917175293
    6. ' 
' → logprob: -6.204024791717529
    7. ' ' → logprob: -6.579024791717529
    8. ':
' → logprob: -6.704024791717529
    9. '```' → logprob: -6.829024791717529
    10. '<|end|>' → logprob: -6.829024791717529

Token 324: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6213563680648804
    2. '           ' → logprob: -0.8713563680648804
    3. 'if' (adapté à ' if') → logprob: -3.62135648727417
    4. '               ' → logprob: -4.37135648727417
    5. ' ' → logprob: -5.99635648727417
    6. '   ' → logprob: -6.74635648727417
    7. ' 
' → logprob: -7.74635648727417
    8. '	if' → logprob: -8.371356010437012
    9. '       ' → logprob: -8.496356010437012
    10. ' ' → logprob: -9.496356010437012

Token 325: ' own' (ID: 2316)
  Prédit: ' own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' own' → logprob: -0.07889540493488312
    2. 'own' → logprob: -2.578895330429077
    3. '   ' → logprob: -13.578895568847656
    4. ' ow' → logprob: -14.078895568847656
    5. 'self' → logprob: -14.203895568847656
    6. ' self' → logprob: -14.328895568847656
    7. ' owns' → logprob: -14.703895568847656
    8. 'Own' → logprob: -14.828895568847656
    9. ' ' → logprob: -14.953895568847656
    10. 'ow' → logprob: -15.078895568847656

Token 326: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -2.8325677703833207e-05
    2. '_levels' → logprob: -10.625028610229492
    3. 'top' → logprob: -14.125028610229492
    4. ' _' → logprob: -14.375028610229492
    5. '[top' → logprob: -14.375028610229492
    6. '   ' → logprob: -15.125028610229492
    7. '[_' → logprob: -15.250028610229492
    8. '```' → logprob: -15.250028610229492
    9. '_' → logprob: -15.500028610229492
    10. '_TOP' → logprob: -15.875028610229492

Token 327: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016718494007363915
    2. '[' → logprob: -6.62667179107666
    3. ' [' → logprob: -8.12667179107666
    4. '[j' → logprob: -10.12667179107666
    5. '   ' → logprob: -13.50167179107666
    6. '[k' → logprob: -13.62667179107666
    7. 'i' → logprob: -13.75167179107666
    8. '[
' → logprob: -14.12667179107666
    9. ']' → logprob: -14.25167179107666
    10. '>' → logprob: -14.25167179107666

Token 328: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3871079087257385
    2. '>' → logprob: -1.1371078491210938
    3. ']' → logprob: -8.637107849121094
    4. ' ' → logprob: -10.887107849121094
    5. ' >
' → logprob: -11.012107849121094
    6. ']>' → logprob: -12.012107849121094
    7. ')' → logprob: -12.387107849121094
    8. '>
' → logprob: -12.887107849121094
    9. ' >
' → logprob: -12.887107849121094
    10. ' >

' → logprob: -13.387107849121094

Token 329: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34846949577331543
    2. '>' → logprob: -1.2234694957733154
    3. ' ' → logprob: -11.598469734191895
    4. ' >
' → logprob: -11.973469734191895
    5. ' >
' → logprob: -12.848469734191895
    6. '>
' → logprob: -13.348469734191895
    7. ' >

' → logprob: -13.848469734191895
    8. ' ' → logprob: -13.973469734191895
    9. ' <=' → logprob: -14.223469734191895
    10. '>

' → logprob: -14.473469734191895

Token 330: ' opp' (ID: 6323)
  Prédit: 'opp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opp' → logprob: -0.08011970669031143
    2. ' opp' → logprob: -2.5801196098327637
    3. 'op' → logprob: -6.705119609832764
    4. 'own' → logprob: -13.330120086669922
    5. ' op' → logprob: -13.830120086669922
    6. ' ' → logprob: -14.330120086669922
    7. ' opponent' → logprob: -15.205120086669922
    8. '  ' → logprob: -15.330120086669922
    9. '   ' → logprob: -15.330120086669922
    10. 'opf' → logprob: -16.580120086669922

Token 331: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -7.64839569455944e-05
    2. 'top' → logprob: -9.500076293945312
    3. 'op' → logprob: -14.625076293945312
    4. 'Top' → logprob: -15.000076293945312
    5. '_op' → logprob: -15.375076293945312
    6. '[top' → logprob: -16.000076293945312
    7. '[j' → logprob: -16.125076293945312
    8. 'opp' → logprob: -16.875076293945312
    9. '```' → logprob: -17.500076293945312
    10. ' top' → logprob: -17.750076293945312

Token 332: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.623244553338736e-05
    2. 'j' → logprob: -9.625065803527832
    3. '[' → logprob: -16.12506675720215
    4. '	j' → logprob: -17.25006675720215
    5. ' j' → logprob: -18.25006675720215
    6. '[
' → logprob: -19.37506675720215
    7. '_j' → logprob: -19.62506675720215
    8. '```' → logprob: -20.25006675720215
    9. '   ' → logprob: -20.50006675720215
    10. '[i' → logprob: -20.75006675720215

Token 333: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8485146164894104
    2. ':' → logprob: -1.0985145568847656
    3. ':
' → logprob: -1.9735145568847656
    4. '):' → logprob: -2.3485145568847656
    5. ']:
' → logprob: -6.098514556884766
    6. ']:' → logprob: -6.723514556884766
    7. '           ' → logprob: -8.598514556884766
    8. '               ' → logprob: -9.348514556884766
    9. '}:' → logprob: -9.348514556884766
    10. ')' → logprob: -9.473514556884766

Token 334: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010530461557209492
    2. 'j' → logprob: -5.760530471801758
    3. ' i' → logprob: -5.760530471801758
    4. '           ' → logprob: -6.135530471801758
    5. 'i' → logprob: -6.635530471801758
    6. ' j' → logprob: -8.135530471801758
    7. ' ' → logprob: -9.635530471801758
    8. '                
' → logprob: -10.010530471801758
    9. '	           ' → logprob: -10.260530471801758
    10. ' 
' → logprob: -10.510530471801758

Token 335: ' wins' (ID: 25327)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wins' (adapté à ' wins') → logprob: -0.02149604633450508
    2. ' wins' → logprob: -3.896496057510376
    3. '               ' → logprob: -7.271495819091797
    4. 'j' → logprob: -8.896495819091797
    5. 'win' → logprob: -9.646495819091797
    6. '
' → logprob: -10.771495819091797
    7. 'w' → logprob: -11.271495819091797
    8. '           ' → logprob: -11.771495819091797
    9. '                   ' → logprob: -12.021495819091797
    10. '                
' → logprob: -13.146495819091797

Token 336: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20141538977622986
    2. '+=' → logprob: -1.7014154195785522
    3. ']+=' → logprob: -13.451415061950684
    4. '+' → logprob: -15.701415061950684
    5. '   ' → logprob: -15.701415061950684
    6. '           ' → logprob: -16.326416015625
    7. '               ' → logprob: -16.576416015625
    8. '                   ' → logprob: -17.201416015625
    9. '=' → logprob: -17.576416015625
    10. ',' → logprob: -17.701416015625

Token 337: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -21.5
    4. '１' → logprob: -22.875
    5. '۱' → logprob: -23.0
    6. '```' → logprob: -23.0
    7. '১' → logprob: -24.6875
    8. '
' → logprob: -24.9375
    9. '  ' → logprob: -25.0625
    10. '١' → logprob: -25.25

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -21.0
    4. '```' → logprob: -21.125
    5. '
' → logprob: -22.0
    6. '１' → logprob: -22.0
    7. '۱' → logprob: -22.375
    8. '১' → logprob: -23.3125
    9. '' → logprob: -23.5625
    10. '2' → logprob: -23.75

Token 339: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7601984739303589
    2. '               ' → logprob: -1.5101984739303589
    3. '
' → logprob: -1.7601984739303589
    4. '           ' → logprob: -2.2601985931396484
    5. ' i' → logprob: -3.7601985931396484
    6. '                   ' → logprob: -5.385198593139648
    7. 'j' → logprob: -5.385198593139648
    8. ' 
' → logprob: -7.135198593139648
    9. ',' → logprob: -8.135198593139648
    10. ' j' → logprob: -8.260198593139648

Token 340: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.650044858455658
    2. 'i' → logprob: -1.1500449180603027
    3. ' i' → logprob: -2.4000449180603027
    4. '           ' → logprob: -2.9000449180603027
    5. '
' → logprob: -4.775044918060303
    6. '                   ' → logprob: -5.900044918060303
    7. 'j' → logprob: -6.400044918060303
    8. '```' → logprob: -6.650044918060303
    9. ' 
' → logprob: -7.400044918060303
    10. ' j' → logprob: -8.275044441223145

Token 341: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -4.4849443838757e-06
    2. '               ' → logprob: -12.750004768371582
    3. ' i' → logprob: -13.625004768371582
    4. '                   ' → logprob: -15.625004768371582
    5. '           ' → logprob: -17.125003814697266
    6. '```' → logprob: -17.250003814697266
    7. 'j' → logprob: -18.250003814697266
    8. '
' → logprob: -18.875003814697266
    9. '   ' → logprob: -19.000003814697266
    10. '	i' → logprob: -20.625003814697266

Token 342: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.052073147147893906
    2. ' +=' → logprob: -3.1770732402801514
    3. '+' → logprob: -4.802073001861572
    4. '=' → logprob: -7.802073001861572
    5. '1' → logprob: -8.05207347869873
    6. 'i' → logprob: -9.80207347869873
    7. '
' → logprob: -11.80207347869873
    8. 'j' → logprob: -12.42707347869873
    9. '++' → logprob: -12.42707347869873
    10. ' ' → logprob: -12.42707347869873

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.1875057220459
    4. '```' → logprob: -19.2500057220459
    5. '0' → logprob: -20.6875057220459
    6. '۱' → logprob: -20.8125057220459
    7. '2' → logprob: -20.9375057220459
    8. '१' → logprob: -21.3125057220459
    9. '１' → logprob: -21.5000057220459
    10. '১' → logprob: -21.6875057220459

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -18.500001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '۱' → logprob: -18.750001907348633
    6. '１' → logprob: -19.125001907348633
    7. '१' → logprob: -19.125001907348633
    8. '-' → logprob: -19.500001907348633
    9. '১' → logprob: -19.687501907348633
    10. '2' → logprob: -19.812501907348633

Token 345: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013451026752591133
    2. '           ' → logprob: -4.513451099395752
    3. 'j' → logprob: -6.263451099395752
    4. '
' → logprob: -8.388450622558594
    5. ' j' → logprob: -9.138450622558594
    6. '   ' → logprob: -9.638450622558594
    7. '                   ' → logprob: -10.013450622558594
    8. ',' → logprob: -11.013450622558594
    9. ',j' → logprob: -11.763450622558594
    10. '[j' → logprob: -12.513450622558594

Token 346: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1452646553516388
    2. 'j' → logprob: -2.1452646255493164
    3. '           ' → logprob: -4.395264625549316
    4. ' j' → logprob: -5.645264625549316
    5. '
' → logprob: -6.895264625549316
    6. '   ' → logprob: -7.770264625549316
    7. '                   ' → logprob: -8.145264625549316
    8. '```' → logprob: -8.395264625549316
    9. '[j' → logprob: -9.395264625549316
    10. ' ' → logprob: -9.395264625549316

Token 347: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -4.320199877838604e-07
    2. ' j' → logprob: -15.5
    3. '           ' → logprob: -16.0
    4. '       ' → logprob: -16.75
    5. '   ' → logprob: -17.0
    6. '	j' → logprob: -18.0
    7. '               ' → logprob: -19.125
    8. '$j' → logprob: -19.875
    9. '                   ' → logprob: -20.375
    10. '[j' → logprob: -20.5

Token 348: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.22064651548862457
    2. ' +=' → logprob: -1.8456465005874634
    3. '+' → logprob: -3.220646619796753
    4. '=' → logprob: -9.595646858215332
    5. ' +' → logprob: -10.345646858215332
    6. '++' → logprob: -10.470646858215332
    7. '```' → logprob: -12.220646858215332
    8. '<|end|>' → logprob: -12.720646858215332
    9. '           ' → logprob: -13.220646858215332
    10. '+
' → logprob: -13.345646858215332

Token 349: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -18.250019073486328
    4. '```' → logprob: -18.875019073486328
    5. '   ' → logprob: -20.125019073486328
    6. '0' → logprob: -20.750019073486328
    7. '  ' → logprob: -21.500019073486328
    8. '۱' → logprob: -21.562519073486328
    9. '১' → logprob: -22.312519073486328
    10. '2' → logprob: -22.562519073486328

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -18.125001907348633
    4. '```' → logprob: -18.875001907348633
    5. '0' → logprob: -20.375001907348633
    6. '۱' → logprob: -21.125001907348633
    7. '   ' → logprob: -21.125001907348633
    8. '2' → logprob: -21.625001907348633
    9. '১' → logprob: -21.937501907348633
    10. '  ' → logprob: -22.062501907348633

Token 351: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000194361709873192
    2. 'else' → logprob: -9.125194549560547
    3. ' else' → logprob: -9.375194549560547
    4. '
' → logprob: -15.750194549560547
    5. '```' → logprob: -16.000194549560547
    6. '          ' → logprob: -16.375194549560547
    7. 'elif' → logprob: -16.500194549560547
    8. '               ' → logprob: -16.500194549560547
    9. '       ' → logprob: -17.375194549560547
    10. '		' → logprob: -17.750194549560547

Token 352: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008037878200411797
    2. 'else' → logprob: -4.88303804397583
    3. ' else' → logprob: -7.75803804397583
    4. '```' → logprob: -12.883037567138672
    5. 'elif' → logprob: -13.883037567138672
    6. '          ' → logprob: -15.258037567138672
    7. '               ' → logprob: -15.383037567138672
    8. '       ' → logprob: -15.633037567138672
    9. '		' → logprob: -16.258037567138672
    10. '{
' → logprob: -16.633037567138672

Token 353: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.012819930911064148
    2. ' else' → logprob: -4.762819766998291
    3. '           ' → logprob: -5.512819766998291
    4. '       ' → logprob: -8.76282024383545
    5. 'elif' → logprob: -12.51282024383545
    6. '	else' → logprob: -14.13782024383545
    7. '   ' → logprob: -15.63782024383545
    8. '               ' → logprob: -16.137819290161133
    9. ':
' → logprob: -16.262819290161133
    10. '
' → logprob: -16.387819290161133

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2523816227912903
    2. ':
' → logprob: -1.5023815631866455
    3. '           ' → logprob: -8.127381324768066
    4. ':i' → logprob: -9.627381324768066
    5. '               ' → logprob: -10.252381324768066
    6. 'i' → logprob: -10.377381324768066
    7. ':

' → logprob: -11.877381324768066
    8. ' i' → logprob: -12.502381324768066
    9. '):
' → logprob: -12.502381324768066
    10. ',' → logprob: -12.627381324768066

Token 355: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8405032157897949
    2. '           ' → logprob: -0.8405032157897949
    3. '               ' → logprob: -2.215503215789795
    4. ' i' → logprob: -3.590503215789795
    5. '   ' → logprob: -8.215503692626953
    6. '       ' → logprob: -11.090503692626953
    7. '	i' → logprob: -11.590503692626953
    8. ' ' → logprob: -11.840503692626953
    9. ',i' → logprob: -11.965503692626953
    10. '  ' → logprob: -12.465503692626953

Token 356: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -8.387458365177736e-05
    2. '           ' → logprob: -10.000083923339844
    3. ' i' → logprob: -10.500083923339844
    4. '               ' → logprob: -11.500083923339844
    5. '   ' → logprob: -14.750083923339844
    6. '	i' → logprob: -15.500083923339844
    7. '                   ' → logprob: -16.875083923339844
    8. ',i' → logprob: -17.875083923339844
    9. '       ' → logprob: -18.500083923339844
    10. ':i' → logprob: -19.000083923339844

Token 357: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931529641151428
    2. '+=' → logprob: -0.6931529641151428
    3. '+' → logprob: -13.068153381347656
    4. '   ' → logprob: -13.318153381347656
    5. '=' → logprob: -13.693153381347656
    6. ']+=' → logprob: -14.443153381347656
    7. '    ' → logprob: -16.068153381347656
    8. '```' → logprob: -17.068153381347656
    9. ' ' → logprob: -17.443153381347656
    10. '           ' → logprob: -17.443153381347656

Token 358: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -19.7500057220459
    4. '0' → logprob: -19.9375057220459
    5. '   ' → logprob: -20.1875057220459
    6. '-' → logprob: -20.9375057220459
    7. '１' → logprob: -21.2500057220459
    8. ' ' → logprob: -21.3750057220459
    9. '       ' → logprob: -21.5000057220459
    10. '=' → logprob: -21.8125057220459

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -20.125
    4. '۱' → logprob: -20.5
    5. '१' → logprob: -20.625
    6. '   ' → logprob: -21.0
    7. '0' → logprob: -21.1875
    8. '１' → logprob: -21.25
    9. '১' → logprob: -21.5
    10. '  ' → logprob: -21.875

Token 360: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0069318125024437904
    2. '
' → logprob: -5.131931781768799
    3. 'return' → logprob: -7.506931781768799
    4. '        
' → logprob: -8.256932258605957
    5. '<|end|>' → logprob: -9.131932258605957
    6. '
' → logprob: -10.506932258605957
    7. ' return' → logprob: -11.006932258605957
    8. '  
' → logprob: -12.131932258605957
    9. '```' → logprob: -12.131932258605957
    10. '<|end|>' → logprob: -12.256932258605957

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001871401909738779
    2. '
' → logprob: -6.376871585845947
    3. 'return' → logprob: -9.626871109008789
    4. '<|end|>' → logprob: -9.876871109008789
    5. '        
' → logprob: -10.626871109008789
    6. '```' → logprob: -11.751871109008789
    7. ' return' → logprob: -12.001871109008789
    8. '
' → logprob: -12.126871109008789
    9. '   ' → logprob: -12.751871109008789
    10. ',' → logprob: -14.001871109008789

Token 362: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20287275314331055
    2. '
' → logprob: -2.2028727531433105
    3. 'return' (adapté à ' return') → logprob: -2.9528727531433105
    4. ' return' → logprob: -4.0778727531433105
    5. '   ' → logprob: -5.7028727531433105
    6. '        
' → logprob: -7.5778727531433105
    7. '
' → logprob: -10.077873229980469
    8. '    
' → logprob: -10.202873229980469
    9. '  
' → logprob: -10.452873229980469
    10. '```' → logprob: -10.827873229980469

Token 363: ' wins' (ID: 25327)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wins' → logprob: -0.02372744120657444
    2. ' wins' → logprob: -3.7737274169921875
    3. 'w' → logprob: -7.6487274169921875
    4. '   ' → logprob: -13.148727416992188
    5. '(w' → logprob: -13.273727416992188
    6. '	w' → logprob: -14.898727416992188
    7. 'win' → logprob: -15.023727416992188
    8. 'True' → logprob: -15.148727416992188
    9. ' True' → logprob: -15.523727416992188
    10. 'won' → logprob: -16.773727416992188

Token 364: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.500642716884613
    2. ' >=' → logprob: -1.0006427764892578
    3. '>' → logprob: -4.000642776489258
    4. '>=' → logprob: -4.875642776489258
    5. '   ' → logprob: -9.125642776489258
    6. ',' → logprob: -9.250642776489258
    7. ' ' → logprob: -10.375642776489258
    8. ' ==' → logprob: -10.875642776489258
    9. '  ' → logprob: -13.250642776489258
    10. '==' → logprob: -13.250642776489258

Token 365: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.06756618618965149
    2. ' half' → logprob: -3.192566156387329
    3. '(' → logprob: -4.067566394805908
    4. ' (' → logprob: -4.942566394805908
    5. '((' → logprob: -11.94256591796875
    6. ' ' → logprob: -13.44256591796875
    7. '(h' → logprob: -13.56756591796875
    8. 'hal' → logprob: -13.69256591796875
    9. '_half' → logprob: -14.69256591796875
    10. ' ((' → logprob: -14.69256591796875

Token 366: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1808299422264099
    2. '<|end|>' → logprob: -2.1808300018310547
    3. 'def' → logprob: -3.1808300018310547
    4. ' def' → logprob: -5.805830001831055
    5. '
' → logprob: -6.055830001831055
    6. '<|end|>' → logprob: -6.305830001831055
    7. '    
' → logprob: -7.055830001831055
    8. ' ' → logprob: -7.305830001831055
    9. ' 
' → logprob: -7.555830001831055
    10. '	def' → logprob: -7.930830001831055

Token 368: ' Abstract' (ID: 17413)
  Prédit: ' Monster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Monster' → logprob: -0.3402465581893921
    2. ' Battle' → logprob: -1.590246558189392
    3. ' Solution' → logprob: -3.8402466773986816
    4. ' Team' → logprob: -4.465246677398682
    5. ' Trainer' → logprob: -4.465246677398682
    6. 'Battle' → logprob: -4.465246677398682
    7. ' Game' → logprob: -4.965246677398682
    8. ' ' → logprob: -5.590246677398682
    9. ' Tournament' → logprob: -6.215246677398682
    10. ' Player' → logprob: -6.465246677398682

Token 369: 'Input' (ID: 3275)
  Prédit: 'Battle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Battle' → logprob: -0.1512901335954666
    2. 'Monster' → logprob: -3.40129017829895
    3. 'Strategy' → logprob: -3.52629017829895
    4. 'Batt' → logprob: -4.026289939880371
    5. 'Game' → logprob: -4.151289939880371
    6. 'Simulator' → logprob: -4.901289939880371
    7. 'Player' → logprob: -5.026289939880371
    8. 'Trainer' → logprob: -5.276289939880371
    9. 'Compet' → logprob: -5.776289939880371
    10. 'Fight' → logprob: -6.151289939880371

Token 370: 'Reader' (ID: 7171)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.6731760501861572
    2. 'Reader' → logprob: -1.4231760501861572
    3. ':' → logprob: -2.1731760501861572
    4. 'Parser' → logprob: -3.0481760501861572
    5. 'Processor' → logprob: -3.4231760501861572
    6. 'Validator' → logprob: -4.548175811767578
    7. ':
' → logprob: -4.673175811767578
    8. '():' → logprob: -4.798175811767578
    9. 'Output' → logprob: -5.173175811767578
    10. '(' → logprob: -5.173175811767578

Token 371: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020509320311248302
    2. ':
' → logprob: -6.752050876617432
    3. '(' → logprob: -7.752050876617432
    4. '<|end|>' → logprob: -8.12705135345459
    5. '```' → logprob: -9.87705135345459
    6. '(Abstract' → logprob: -10.37705135345459
    7. '<class' → logprob: -11.37705135345459
    8. '(object' → logprob: -11.62705135345459
    9. '<|end|>' → logprob: -11.87705135345459
    10. ' :' → logprob: -12.00205135345459

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0560283437371254
    2. ':' → logprob: -3.056028366088867
    3. ' def' → logprob: -6.306028366088867
    4. '<|end|>' → logprob: -6.431028366088867
    5. ':
' → logprob: -6.556028366088867
    6. ' pass' → logprob: -6.806028366088867
    7. 'def' → logprob: -7.556028366088867
    8. '    ' → logprob: -8.431028366088867
    9. '    
' → logprob: -8.681028366088867
    10. '
' → logprob: -8.681028366088867

Token 373: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20851486921310425
    2. ' def' → logprob: -1.708514928817749
    3. 'from' → logprob: -5.70851469039917
    4. 'import' → logprob: -6.20851469039917
    5. 'class' → logprob: -6.83351469039917
    6. ' pass' → logprob: -8.083515167236328
    7. 'pass' → logprob: -8.708515167236328
    8. '   ' → logprob: -9.208515167236328
    9. ' from' → logprob: -10.333515167236328
    10. '...' → logprob: -10.708515167236328

Token 374: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.021393368020653725
    2. 'next' → logprob: -4.646393299102783
    3. 'iter' → logprob: -5.021393299102783
    4. 'def' → logprob: -6.271393299102783
    5. ' init' → logprob: -6.396393299102783
    6. ' next' → logprob: -7.271393299102783
    7. 'n' → logprob: -8.771393775939941
    8. 'abstract' → logprob: -9.271393775939941
    9. ' iter' → logprob: -9.646393775939941
    10. ' def' → logprob: -10.146393775939941

Token 375: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.003184244269505143
    2. 'nit' → logprob: -5.7531843185424805
    3. 'int' → logprob: -12.87818431854248
    4. 'iter' → logprob: -13.37818431854248
    5. 'it' → logprob: -14.00318431854248
    6. 'ini' → logprob: -15.00318431854248
    7. 'next' → logprob: -15.12818431854248
    8. 'n' → logprob: -15.25318431854248
    9. 'm' → logprob: -15.37818431854248
    10. 'in' → logprob: -15.62818431854248

Token 376: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005528050009161234
    2. '__' → logprob: -5.255527973175049
    3. '__(
' → logprob: -8.255528450012207
    4. '(self' → logprob: -11.130528450012207
    5. '__((' → logprob: -11.630528450012207
    6. '(' → logprob: -12.630528450012207
    7. '__(*' → logprob: -12.880528450012207
    8. '_(' → logprob: -13.380528450012207
    9. '___' → logprob: -13.505528450012207
    10. '__('' → logprob: -14.255528450012207

Token 377: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00551180774345994
    2. ')' → logprob: -5.25551176071167
    3. '):
' → logprob: -8.755512237548828
    4. ' self' → logprob: -9.505512237548828
    5. '):' → logprob: -10.380512237548828
    6. '
' → logprob: -12.005512237548828
    7. '):

' → logprob: -12.880512237548828
    8. '	self' → logprob: -13.755512237548828
    9. '   ' → logprob: -13.880512237548828
    10. ' ' → logprob: -14.380512237548828

Token 378: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38153016567230225
    2. '):' → logprob: -1.3815301656723022
    3. 'self' → logprob: -2.881530284881592
    4. ')' → logprob: -5.631530284881592
    5. '(self' → logprob: -6.131530284881592
    6. '):
' → logprob: -6.256530284881592
    7. ',self' → logprob: -6.631530284881592
    8. ' self' → logprob: -8.381529808044434
    9. '<|end|>' → logprob: -9.131529808044434
    10. ' ,' → logprob: -9.256529808044434

Token 379: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01387646235525608
    2. ' self' → logprob: -4.388876438140869
    3. '   ' → logprob: -6.638876438140869
    4. '       ' → logprob: -11.138876914978027
    5. 'pass' → logprob: -11.638876914978027
    6. '
' → logprob: -11.763876914978027
    7. 'def' → logprob: -12.013876914978027
    8. '(self' → logprob: -12.013876914978027
    9. '	self' → logprob: -12.013876914978027
    10. ' ' → logprob: -13.263876914978027

Token 380: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.0014296402223408222
    2. '       ' → logprob: -7.251429557800293
    3. '   ' → logprob: -7.501429557800293
    4. 'self' → logprob: -9.126429557800293
    5. ' pass' → logprob: -10.251429557800293
    6. 'super' → logprob: -11.001429557800293
    7. '	pass' → logprob: -12.376429557800293
    8. 'raise' → logprob: -13.751429557800293
    9. 'pas' → logprob: -14.376429557800293
    10. 'def' → logprob: -15.376429557800293

Token 381: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2587408721446991
    2. '<|end|>' → logprob: -1.6337409019470215
    3. '
' → logprob: -3.5087409019470215
    4. '<|end|>' → logprob: -6.3837409019470215
    5. '    
' → logprob: -7.6337409019470215
    6. 'class' → logprob: -8.008740425109863
    7. 'def' → logprob: -8.633740425109863
    8. ' def' → logprob: -10.133740425109863
    9. 'import' → logprob: -10.883740425109863
    10. '        
' → logprob: -11.008740425109863

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4162481427192688
    2. '
' → logprob: -1.666248083114624
    3. 'def' → logprob: -2.416248083114624
    4. ' def' → logprob: -3.166248083114624
    5. '<|end|>' → logprob: -4.041248321533203
    6. '	def' → logprob: -6.791248321533203
    7. '    
' → logprob: -7.541248321533203
    8. 'class' → logprob: -7.791248321533203
    9. '<|end|>' → logprob: -8.416248321533203
    10. '```' → logprob: -9.416248321533203

Token 383: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002727793762460351
    2. ' def' → logprob: -8.250272750854492
    3. '   ' → logprob: -12.125272750854492
    4. 'import' → logprob: -12.375272750854492
    5. 'from' → logprob: -13.875272750854492
    6. '@' → logprob: -15.125272750854492
    7. '	def' → logprob: -15.250272750854492
    8. 'pass' → logprob: -15.875272750854492
    9. 'class' → logprob: -16.625272750854492
    10. '
' → logprob: -17.875272750854492

Token 384: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.005984489340335131
    2. ' read' → logprob: -5.130984306335449
    3. ' readline' → logprob: -10.25598430633545
    4. 'next' → logprob: -11.38098430633545
    5. 'get' → logprob: -12.88098430633545
    6. 'parse' → logprob: -13.00598430633545
    7. 'def' → logprob: -14.00598430633545
    8. 'input' → logprob: -14.00598430633545
    9. '_read' → logprob: -14.25598430633545
    10. ' next' → logprob: -14.38098430633545

Token 385: '_all' (ID: 13305)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.033533547073602676
    2. '(self' → logprob: -3.5335335731506348
    3. '_input' → logprob: -6.158533573150635
    4. '()' → logprob: -7.658533573150635
    5. 'line' → logprob: -7.783533573150635
    6. '_token' → logprob: -8.158533096313477
    7. 'self' → logprob: -9.158533096313477
    8. '_' → logprob: -9.283533096313477
    9. '_string' → logprob: -10.033533096313477
    10. 'Line' → logprob: -10.033533096313477

Token 386: '_d' (ID: 1565)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006488138460554183
    2. '():' → logprob: -8.375648498535156
    3. '(' → logprob: -8.750648498535156
    4. '()' → logprob: -8.875648498535156
    5. 'self' → logprob: -9.875648498535156
    6. '_lines' → logprob: -10.750648498535156
    7. '():
' → logprob: -11.250648498535156
    8. '(s' → logprob: -11.875648498535156
    9. '_input' → logprob: -12.000648498535156
    10. '(
' → logprob: -12.125648498535156

Token 387: 'atasets' (ID: 105003)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.04337354376912117
    2. 'ef' → logprob: -3.1683735847473145
    3. 'efs' → logprob: -8.168373107910156
    4. ' ata' → logprob: -10.418373107910156
    5. 'etails' → logprob: -10.918373107910156
    6. 'at' → logprob: -11.543373107910156
    7. 'atas' → logprob: -12.043373107910156
    8. '(self' → logprob: -12.543373107910156
    9. 'efa' → logprob: -12.543373107910156
    10. 'e' → logprob: -12.793373107910156

Token 388: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0028312690556049347
    2. '(' → logprob: -5.87783145904541
    3. ' (' → logprob: -11.37783145904541
    4. '(s' → logprob: -12.12783145904541
    5. '():' → logprob: -12.75283145904541
    6. 'self' → logprob: -13.00283145904541
    7. '(
' → logprob: -13.12783145904541
    8. '():
' → logprob: -14.00283145904541
    9. '(sel' → logprob: -14.12783145904541
    10. '()' → logprob: -15.50283145904541

Token 389: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043383024632930756
    2. 'self' → logprob: -3.5433831214904785
    3. '):
' → logprob: -4.9183831214904785
    4. ',' → logprob: -5.6683831214904785
    5. '(self' → logprob: -5.9183831214904785
    6. ' self' → logprob: -10.41838264465332
    7. ' ):' → logprob: -10.66838264465332
    8. ')' → logprob: -11.91838264465332
    9. ',self' → logprob: -12.29338264465332
    10. '   ' → logprob: -12.29338264465332

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002202474744990468
    2. '(self' → logprob: -6.37720251083374
    3. '   ' → logprob: -8.127202033996582
    4. '():
' → logprob: -10.127202033996582
    5. '(' → logprob: -10.377202033996582
    6. 'self' → logprob: -10.377202033996582
    7. ':' → logprob: -10.502202033996582
    8. ':
' → logprob: -11.127202033996582
    9. 'raise' → logprob: -11.252202033996582
    10. ' raise' → logprob: -11.627202033996582

Token 391: ' datasets' (ID: 57711)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28643158078193665
    2. 'raise' → logprob: -1.5364315509796143
    3. 'pass' → logprob: -4.036431789398193
    4. ' raise' → logprob: -4.286431789398193
    5. 'return' → logprob: -6.911431789398193
    6. ' pass' → logprob: -7.161431789398193
    7. 'import' → logprob: -7.786431789398193
    8. 'while' → logprob: -8.786431312561035
    9. 'yield' → logprob: -10.286431312561035
    10. '   ' → logprob: -10.411431312561035

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2442450374364853
    2. '()' → logprob: -1.8692450523376465
    3. '=' → logprob: -3.4942450523376465
    4. '(self' → logprob: -3.9942450523376465
    5. '   ' → logprob: -5.4942450523376465
    6. '       ' → logprob: -5.7442450523376465
    7. '=[]' → logprob: -5.9942450523376465
    8. '():' → logprob: -6.3692450523376465
    9. '[]' → logprob: -7.4942450523376465
    10. 'self' → logprob: -8.244244575500488

Token 393: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05098087713122368
    2. '[]
' → logprob: -3.050980806350708
    3. ' []' → logprob: -6.050981044769287
    4. ' []
' → logprob: -11.175980567932129
    5. '[]

' → logprob: -11.300980567932129
    6. '[' → logprob: -11.800980567932129
    7. '   ' → logprob: -14.550980567932129
    8. '[
' → logprob: -16.050981521606445
    9. '{}' → logprob: -16.175981521606445
    10. '[]}' → logprob: -16.300981521606445

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017546684248372912
    2. 'while' → logprob: -8.251754760742188
    3. '<|end|>' → logprob: -8.376754760742188
    4. ' while' → logprob: -8.501754760742188
    5. '	' → logprob: -8.501754760742188
    6. '        
' → logprob: -8.751754760742188
    7. '[]' → logprob: -9.126754760742188
    8. '()' → logprob: -9.126754760742188
    9. '   ' → logprob: -9.751754760742188
    10. '```' → logprob: -9.876754760742188

Token 395: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0796361118555069
    2. ' while' → logprob: -3.3296360969543457
    3. 'line' → logprob: -3.4546360969543457
    4. 'n' → logprob: -5.704636096954346
    5. 'num' → logprob: -6.454636096954346
    6. '       ' → logprob: -6.454636096954346
    7. 'try' → logprob: -6.829636096954346
    8. 'import' → logprob: -7.579636096954346
    9. ' line' → logprob: -7.954636096954346
    10. ' n' → logprob: -7.954636096954346

Token 396: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.313332200050354
    2. 'True' → logprob: -1.313332200050354
    3. '(True' → logprob: -9.563332557678223
    4. 'true' → logprob: -16.438331604003906
    5. ' ' → logprob: -17.063331604003906
    6. 'self' → logprob: -17.813331604003906
    7. ' self' → logprob: -18.188331604003906
    8. '
' → logprob: -18.438331604003906
    9. '=True' → logprob: -18.438331604003906
    10. '   ' → logprob: -18.563331604003906

Token 397: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02687293291091919
    2. '           ' → logprob: -4.0268731117248535
    3. ':
' → logprob: -4.7768731117248535
    4. ',' → logprob: -9.401872634887695
    5. '():' → logprob: -9.401872634887695
    6. '       ' → logprob: -10.651872634887695
    7. '.readline' → logprob: -11.401872634887695
    8. '():
' → logprob: -11.526872634887695
    9. '):' → logprob: -11.901872634887695
    10. '):
' → logprob: -11.901872634887695

Token 398: '           ' (ID: 352)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6800392866134644
    2. '           ' → logprob: -1.0550392866134644
    3. 'line' → logprob: -2.055039405822754
    4. ' try' → logprob: -4.805039405822754
    5. 'try' → logprob: -4.930039405822754
    6. '   ' → logprob: -6.555039405822754
    7. '       ' → logprob: -9.430039405822754
    8. 'data' → logprob: -9.555039405822754
    9. '	line' → logprob: -9.805039405822754
    10. 'input' → logprob: -10.555039405822754

Token 399: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01871345564723015
    2. ' line' → logprob: -4.143713474273682
    3. 'try' → logprob: -6.268713474273682
    4. 'n' (adapté à ' n') → logprob: -7.643713474273682
    5. ' try' → logprob: -8.643712997436523
    6. '           ' → logprob: -10.268712997436523
    7. '   ' → logprob: -10.268712997436523
    8. ' n' → logprob: -10.768712997436523
    9. 'data' → logprob: -11.768712997436523
    10. 'header' → logprob: -12.643712997436523

Token 400: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6364483833312988
    2. ' =' → logprob: -0.7614483833312988
    3. '_line' → logprob: -5.636448383331299
    4. '_str' → logprob: -8.88644790649414
    5. '_' → logprob: -10.26144790649414
    6. 'line' → logprob: -10.26144790649414
    7. '=line' → logprob: -10.38644790649414
    8. '_input' → logprob: -11.76144790649414
    9. 's' → logprob: -12.38644790649414
    10. '=int' → logprob: -12.51144790649414

Token 401: ' self' (ID: 1051)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07262667268514633
    2. ' int' → logprob: -2.8226265907287598
    3. 'self' → logprob: -5.44762659072876
    4. 'input' → logprob: -5.44762659072876
    5. ' input' → logprob: -6.69762659072876
    6. ' self' → logprob: -7.19762659072876
    7. '   ' → logprob: -13.197627067565918
    8. 'None' → logprob: -13.947627067565918
    9. ' ' → logprob: -14.197627067565918
    10. '(int' → logprob: -14.447627067565918

Token 402: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.09909473359584808
    2. '.readline' → logprob: -2.7240946292877197
    3. '.' → logprob: -4.099094867706299
    4. '.input' → logprob: -5.474094867706299
    5. '._' → logprob: -5.724094867706299
    6. '.next' → logprob: -6.099094867706299
    7. '.try' → logprob: -6.724094867706299
    8. '.get' → logprob: -7.599094867706299
    9. 'input' → logprob: -8.72409439086914
    10. '.stdin' → logprob: -8.84909439086914

Token 403: '_int' (ID: 12285)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0030129998922348022
    2. 'int' → logprob: -6.5030131340026855
    3. '()
' → logprob: -7.1280131340026855
    4. '_line' → logprob: -7.8780131340026855
    5. '_int' → logprob: -8.503012657165527
    6. 'line' → logprob: -9.253012657165527
    7. '()

' → logprob: -12.003012657165527
    8. '().' → logprob: -12.378012657165527
    9. '())' → logprob: -12.628012657165527
    10. '()\' → logprob: -12.753012657165527

Token 404: '_line' (ID: 14418)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019330393988639116
    2. '()
' → logprob: -6.2519330978393555
    3. '()

' → logprob: -13.251933097839355
    4. '();' → logprob: -14.001933097839355
    5. '()`' → logprob: -14.751933097839355
    6. '()\' → logprob: -14.751933097839355
    7. '()
' → logprob: -15.001933097839355
    8. '())' → logprob: -15.501933097839355
    9. '()>' → logprob: -15.751933097839355
    10. ' ()' → logprob: -15.876933097839355

Token 405: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019325626781210303
    2. '()
' → logprob: -6.251932621002197
    3. '()

' → logprob: -13.001932144165039
    4. '()
' → logprob: -13.876932144165039
    5. '())' → logprob: -15.376932144165039
    6. '()`' → logprob: -15.501932144165039
    7. '()\' → logprob: -15.501932144165039
    8. '(' → logprob: -16.50193214416504
    9. '();' → logprob: -16.75193214416504
    10. ' ()' → logprob: -16.87693214416504

Token 406: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017159747949335724
    2. '<|end|>' → logprob: -9.500171661376953
    3. '		' → logprob: -10.250171661376953
    4. '       ' → logprob: -10.625171661376953
    5. '<|end|>' → logprob: -11.500171661376953
    6. '               ' → logprob: -11.875171661376953
    7. '          ' → logprob: -12.500171661376953
    8. '   ' → logprob: -13.000171661376953
    9. '.' → logprob: -13.250171661376953
    10. '	       ' → logprob: -13.625171661376953

Token 407: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6382303833961487
    2. ' if' → logprob: -1.138230323791504
    3. 'if' (adapté à ' if') → logprob: -1.888230323791504
    4. '       ' → logprob: -10.638230323791504
    5. '   ' → logprob: -11.388230323791504
    6. ' ' → logprob: -12.513230323791504
    7. '<|end|>' → logprob: -13.013230323791504
    8. '	if' → logprob: -13.138230323791504
    9. '		' → logprob: -13.138230323791504
    10. '               ' → logprob: -14.013230323791504

Token 408: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519497573375702
    2. ' n' → logprob: -1.5019497871398926
    3. ' not' → logprob: -11.251949310302734
    4. 'not' → logprob: -12.376949310302734
    5. '	n' → logprob: -13.626949310302734
    6. ' ' → logprob: -13.751949310302734
    7. '   ' → logprob: -14.251949310302734
    8. ' ' → logprob: -15.501949310302734
    9. '0' → logprob: -16.501949310302734
    10. '  ' → logprob: -16.626949310302734

Token 409: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.321258008480072
    2. ' ==' → logprob: -1.3212580680847168
    3. '<=' → logprob: -4.946258068084717
    4. ' <=' → logprob: -7.321258068084717
    5. ' is' → logprob: -9.071257591247559
    6. '=' → logprob: -10.821257591247559
    7. 'is' → logprob: -10.821257591247559
    8. '==-' → logprob: -11.196257591247559
    9. '<' → logprob: -11.571257591247559
    10. '==
' → logprob: -11.946257591247559

Token 410: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6935690641403198
    2. ' ' → logprob: -0.6935690641403198
    3. ' -' → logprob: -8.19356918334961
    4. '-' → logprob: -9.19356918334961
    5. ' None' → logprob: -10.69356918334961
    6. 'None' → logprob: -10.94356918334961
    7. '  ' → logprob: -13.44356918334961
    8. ' ' → logprob: -14.06856918334961
    9. '	' → logprob: -15.38106918334961
    10. '   ' → logprob: -15.56856918334961

Token 411: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012135679135099053
    2. '-' → logprob: -7.001213550567627
    3. ' ' → logprob: -8.126214027404785
    4. ' -' → logprob: -12.626214027404785
    5. 'None' → logprob: -12.751214027404785
    6. 'EOF' → logprob: -17.37621307373047
    7. '```' → logprob: -17.56371307373047
    8. '  ' → logprob: -17.62621307373047
    9. '"' → logprob: -17.68871307373047
    10. '''' → logprob: -17.68871307373047

Token 412: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1131177693605423
    2. ':' → logprob: -2.2381176948547363
    3. '           ' → logprob: -8.488118171691895
    4. ':return' → logprob: -10.363118171691895
    5. '               ' → logprob: -10.488118171691895
    6. '       ' → logprob: -11.863118171691895
    7. '   ' → logprob: -12.113118171691895
    8. '):
' → logprob: -12.363118171691895
    9. ':
' → logprob: -12.863118171691895
    10. '():
' → logprob: -13.238118171691895

Token 413: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008016716688871384
    2. '           ' → logprob: -4.883016586303711
    3. ':
' → logprob: -8.508016586303711
    4. ':' → logprob: -9.008016586303711
    5. '   ' → logprob: -11.133016586303711
    6. '			' → logprob: -11.383016586303711
    7. ' break' → logprob: -11.633016586303711
    8. '       ' → logprob: -11.758016586303711
    9. '              ' → logprob: -11.883016586303711
    10. ':return' → logprob: -12.133016586303711

Token 414: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.26958730816841125
    2. '               ' → logprob: -1.5195872783660889
    3. ' break' → logprob: -4.394587516784668
    4. '           ' → logprob: -5.894587516784668
    5. '                   ' → logprob: -6.769587516784668
    6. 'return' → logprob: -7.144587516784668
    7. '	break' → logprob: -7.894587516784668
    8. '
' → logprob: -9.769587516784668
    9. '   ' → logprob: -11.269587516784668
    10. '_break' → logprob: -12.144587516784668

Token 415: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13069285452365875
    2. '
' → logprob: -2.505692958831787
    3. '<|end|>' → logprob: -3.505692958831787
    4. '            
' → logprob: -4.755692958831787
    5. '<|end|>' → logprob: -7.505692958831787
    6. '		' → logprob: -8.255692481994629
    7. ',' → logprob: -8.505692481994629
    8. '    
' → logprob: -8.755692481994629
    9. '  
' → logprob: -8.880692481994629
    10. '          ' → logprob: -8.880692481994629

Token 416: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35677963495254517
    2. '
' → logprob: -1.2317795753479004
    3. '            
' → logprob: -4.9817795753479
    4. '    
' → logprob: -7.6067795753479
    5. '<|end|>' → logprob: -7.9817795753479
    6. '  
' → logprob: -8.856780052185059
    7. '        
' → logprob: -9.481780052185059
    8. 'n' → logprob: -9.856780052185059
    9. '
' → logprob: -9.981780052185059
    10. '		' → logprob: -10.356780052185059

Token 417: ' own' (ID: 2316)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' (adapté à ' own') → logprob: -0.051123037934303284
    2. ' own' → logprob: -3.0511231422424316
    3. '           ' → logprob: -6.801123142242432
    4. '               ' → logprob: -7.426123142242432
    5. 'owns' → logprob: -8.426122665405273
    6. 'owner' → logprob: -8.801122665405273
    7. ' ' → logprob: -9.426122665405273
    8. 'owned' → logprob: -10.051122665405273
    9. '   ' → logprob: -10.176122665405273
    10. 'owners' → logprob: -10.426122665405273

Token 418: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.00020127551397308707
    2. ',' → logprob: -9.125201225280762
    3. '_' → logprob: -9.875201225280762
    4. '_mon' → logprob: -10.750201225280762
    5. ' =' → logprob: -12.250201225280762
    6. ',_' → logprob: -12.375201225280762
    7. 's' → logprob: -13.125201225280762
    8. '_,' → logprob: -13.125201225280762
    9. '_le' → logprob: -13.750201225280762
    10. ' _' → logprob: -13.875201225280762

Token 419: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14752879738807678
    2. '=' → logprob: -2.147528886795044
    3. ',' → logprob: -3.897528886795044
    4. ' ,' → logprob: -9.397528648376465
    5. '   ' → logprob: -12.397528648376465
    6. ' ' → logprob: -13.147528648376465
    7. ')' → logprob: -13.147528648376465
    8. '.append' → logprob: -13.772528648376465
    9. '    ' → logprob: -13.897528648376465
    10. '  ' → logprob: -14.022528648376465

Token 420: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6923620104789734
    2. 'self' → logprob: -1.0673620700836182
    3. '[self' → logprob: -2.317362070083618
    4. ' list' → logprob: -3.317362070083618
    5. ' [' → logprob: -4.192361831665039
    6. 'list' → logprob: -5.442361831665039
    7. '[' → logprob: -6.567361831665039
    8. '[list' → logprob: -10.192361831665039
    9. '	self' → logprob: -11.442361831665039
    10. '[]' → logprob: -12.567361831665039

Token 421: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.0002523992152418941
    2. 'read' → logprob: -8.500252723693848
    3. '.' → logprob: -10.000252723693848
    4. '.readline' → logprob: -12.625252723693848
    5. '._' → logprob: -16.37525177001953
    6. '	read' → logprob: -17.00025177001953
    7. ' read' → logprob: -17.00025177001953
    8. '.next' → logprob: -17.62525177001953
    9. '.get' → logprob: -17.75025177001953
    10. ' .' → logprob: -18.00025177001953

Token 422: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.63580322265625
    2. '_list' → logprob: -0.76080322265625
    3. 'int' → logprob: -6.51080322265625
    4. 'list' → logprob: -6.76080322265625
    5. '_line' → logprob: -8.13580322265625
    6. '_' → logprob: -9.51080322265625
    7. '_array' → logprob: -9.51080322265625
    8. '_level' → logprob: -10.63580322265625
    9. '_levels' → logprob: -10.63580322265625
    10. '```' → logprob: -11.63580322265625

Token 423: '_list' (ID: 4162)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.1571028232574463
    2. 's' → logprob: -2.4071028232574463
    3. '_list' → logprob: -2.9071028232574463
    4. '_array' → logprob: -7.907102584838867
    5. '_s' → logprob: -9.157102584838867
    6. '_lines' → logprob: -9.657102584838867
    7. '()' → logprob: -10.157102584838867
    8. 'list' → logprob: -10.157102584838867
    9. '_' → logprob: -11.157102584838867
    10. 'line' → logprob: -11.157102584838867

Token 424: '_line' (ID: 14418)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -3.941161776310764e-05
    2. '()
' → logprob: -10.250039100646973
    3. ' ()' → logprob: -12.875039100646973
    4. '()]' → logprob: -14.750039100646973
    5. '()

' → logprob: -15.875039100646973
    6. '()\' → logprob: -16.00004005432129
    7. '())' → logprob: -16.37504005432129
    8. '()[' → logprob: -16.50004005432129
    9. '()>' → logprob: -16.62504005432129
    10. '()}' → logprob: -16.62504005432129

Token 425: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005244191270321608
    2. '()
' → logprob: -5.255244255065918
    3. '(' → logprob: -12.005244255065918
    4. '(n' → logprob: -13.005244255065918
    5. '()
' → logprob: -14.380244255065918
    6. '().' → logprob: -14.755244255065918
    7. '()\' → logprob: -15.005244255065918
    8. '()

' → logprob: -15.130244255065918
    9. '(len' → logprob: -15.755244255065918
    10. ' ()' → logprob: -16.0052433013916

Token 426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005175408907234669
    2. 'op' → logprob: -5.880175590515137
    3. '<|end|>' → logprob: -6.255175590515137
    4. '       ' → logprob: -9.630175590515137
    5. '(op' → logprob: -9.755175590515137
    6. '	op' → logprob: -9.880175590515137
    7. '<|end|>' → logprob: -10.130175590515137
    8. ' opponent' → logprob: -10.255175590515137
    9. '          ' → logprob: -10.255175590515137
    10. '		' → logprob: -10.505175590515137

Token 427: ' opponent' (ID: 38519)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.09574215114116669
    2. '           ' → logprob: -2.5957422256469727
    3. ' opponent' → logprob: -4.095742225646973
    4. '   ' → logprob: -10.720742225646973
    5. '       ' → logprob: -11.220742225646973
    6. '	op' → logprob: -11.470742225646973
    7. 'opp' → logprob: -11.970742225646973
    8. ' op' → logprob: -12.220742225646973
    9. 'Opponent' → logprob: -12.345742225646973
    10. ' ' → logprob: -13.470742225646973

Token 428: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -2.5776860184123507e-06
    2. 's' → logprob: -14.37500286102295
    3. '```' → logprob: -14.50000286102295
    4. '_' → logprob: -14.62500286102295
    5. ')_' → logprob: -15.00000286102295
    6. '"_' → logprob: -15.87500286102295
    7. ''_' → logprob: -15.87500286102295
    8. '_layers' → logprob: -16.250001907348633
    9. '._' → logprob: -16.375001907348633
    10. ' _' → logprob: -17.125001907348633

Token 429: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1973547339439392
    2. '=' → logprob: -1.947354793548584
    3. ' =' → logprob: -3.322354793548584
    4. '()
' → logprob: -8.322354316711426
    5. '           ' → logprob: -9.947354316711426
    6. ')' → logprob: -10.697354316711426
    7. '       ' → logprob: -11.322354316711426
    8. '(' → logprob: -11.822354316711426
    9. '()

' → logprob: -12.197354316711426
    10. '=[]' → logprob: -12.197354316711426

Token 430: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022706031799316
    2. ' self' → logprob: -1.9102270603179932
    3. '           ' → logprob: -14.035226821899414
    4. '[self' → logprob: -14.285226821899414
    5. '(self' → logprob: -14.535226821899414
    6. ' ' → logprob: -14.660226821899414
    7. '	self' → logprob: -15.160226821899414
    8. '   ' → logprob: -16.660226821899414
    9. '=self' → logprob: -16.660226821899414
    10. '       ' → logprob: -17.410226821899414

Token 431: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.0003407071635592729
    2. 'read' → logprob: -8.000340461730957
    3. '.' → logprob: -12.250340461730957
    4. '.readline' → logprob: -15.500340461730957
    5. ' read' → logprob: -15.750340461730957
    6. ' .' → logprob: -15.750340461730957
    7. '	read' → logprob: -17.750341415405273
    8. '_read' → logprob: -18.125341415405273
    9. '._' → logprob: -19.000341415405273
    10. '..' → logprob: -19.625341415405273

Token 432: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.8087270038668066e-05
    2. 'int' → logprob: -10.500027656555176
    3. '_op' → logprob: -15.875027656555176
    4. ' int' → logprob: -16.125028610229492
    5. '
' → logprob: -16.500028610229492
    6. '_list' → logprob: -16.625028610229492
    7. 'Int' → logprob: -17.500028610229492
    8. '```' → logprob: -17.500028610229492
    9. 'list' → logprob: -17.875028610229492
    10. '_' → logprob: -18.625028610229492

Token 433: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.702754474943504e-05
    2. '_line' → logprob: -10.50003719329834
    3. 'list' → logprob: -11.62503719329834
    4. 's' → logprob: -15.37503719329834
    5. 'int' → logprob: -16.375036239624023
    6. '_lines' → logprob: -17.000036239624023
    7. 'List' → logprob: -17.250036239624023
    8. '_lists' → logprob: -17.250036239624023
    9. '```' → logprob: -17.500036239624023
    10. ' list' → logprob: -18.625036239624023

Token 434: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.2664456789934775e-06
    2. '_list' → logprob: -14.125000953674316
    3. 'line' → logprob: -14.625000953674316
    4. '_lines' → logprob: -17.625001907348633
    5. '_LINE' → logprob: -18.125001907348633
    6. '```' → logprob: -19.625001907348633
    7. '()' → logprob: -19.875001907348633
    8. ' line' → logprob: -19.875001907348633
    9. 'Line' → logprob: -20.250001907348633
    10. '(line' → logprob: -21.125001907348633

Token 435: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001029471677611582
    2. '()
' → logprob: -9.250102996826172
    3. '())' → logprob: -12.625102996826172
    4. '()]' → logprob: -13.000102996826172
    5. '()

' → logprob: -15.250102996826172
    6. '()}' → logprob: -15.750102996826172
    7. '()<' → logprob: -16.000102996826172
    8. '()>' → logprob: -16.000102996826172
    9. '()[' → logprob: -16.250102996826172
    10. '()`' → logprob: -16.250102996826172

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012296605564188212
    2. '<|end|>' → logprob: -9.375123023986816
    3. '       ' → logprob: -11.250123023986816
    4. 'return' → logprob: -12.125123023986816
    5. '            
' → logprob: -12.250123023986816
    6. ',' → logprob: -12.625123023986816
    7. ' return' → logprob: -12.750123023986816
    8. '<|end|>' → logprob: -13.250123023986816
    9. '          ' → logprob: -13.500123023986816
    10. '	       ' → logprob: -14.250123023986816

Token 437: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.21094061434268951
    2. '           ' → logprob: -1.8359405994415283
    3. ' datasets' → logprob: -3.5859405994415283
    4. 'sim' → logprob: -6.710940837860107
    5. 'dataset' → logprob: -6.960940837860107
    6. 'd' → logprob: -8.71094036102295
    7. ' simulator' → logprob: -8.71094036102295
    8. '       ' → logprob: -9.08594036102295
    9. ' dataset' → logprob: -9.71094036102295
    10. '.datasets' → logprob: -9.83594036102295

Token 438: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000556012790184468
    2. '.' → logprob: -7.500555992126465
    3. ' .' → logprob: -13.375555992126465
    4. '.app' → logprob: -14.250555992126465
    5. '.extend' → logprob: -15.000555992126465
    6. 'append' → logprob: -15.875555992126465
    7. '.Append' → logprob: -16.00055694580078
    8. '.add' → logprob: -16.12555694580078
    9. '.setdefault' → logprob: -17.37555694580078
    10. '​.' → logprob: -17.37555694580078

Token 439: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008630995638668537
    2. '(' → logprob: -4.758631229400635
    3. '(
' → logprob: -11.133630752563477
    4. '([' → logprob: -13.508630752563477
    5. '(n' → logprob: -15.633630752563477
    6. '(([' → logprob: -16.008630752563477
    7. '(tuple' → logprob: -17.008630752563477
    8. '(("' → logprob: -17.008630752563477
    9. '(('' → logprob: -17.133630752563477
    10. '(

' → logprob: -17.383630752563477

Token 440: 'n' (ID: 77)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.0027698094490915537
    2. 'n' → logprob: -6.252769947052002
    3. ' own' → logprob: -7.127769947052002
    4. 'self' → logprob: -10.377769470214844
    5. ' n' → logprob: -12.252769470214844
    6. '   ' → logprob: -13.752769470214844
    7. 'owned' → logprob: -14.627769470214844
    8. 'owns' → logprob: -15.752769470214844
    9. '  ' → logprob: -16.502769470214844
    10. '    ' → logprob: -16.627769470214844

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009220616775564849
    2. ' ,' → logprob: -7.000922203063965
    3. ',
' → logprob: -11.750922203063965
    4. 'own' → logprob: -14.125922203063965
    5. '           ' → logprob: -14.625922203063965
    6. '       ' → logprob: -14.750922203063965
    7. '   ' → logprob: -15.625922203063965
    8. '‌,' → logprob: -15.875922203063965
    9. '          ' → logprob: -16.00092124938965
    10. '        ' → logprob: -16.12592124938965

Token 442: ' own' (ID: 2316)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.6931729912757874
    2. ' own' → logprob: -0.6931729912757874
    3. '            ' → logprob: -10.8181734085083
    4. '           ' → logprob: -13.1931734085083
    5. '              ' → logprob: -14.0681734085083
    6. 'ow' → logprob: -14.1931734085083
    7. '               ' → logprob: -14.6931734085083
    8. ' ow' → logprob: -15.0681734085083
    9. '          ' → logprob: -15.1931734085083
    10. '             ' → logprob: -15.1931734085083

Token 443: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.750000953674316
    3. 'levels' → logprob: -16.75
    4. '_
' → logprob: -17.375
    5. '_level' → logprob: -17.5
    6. ' _' → logprob: -18.25
    7. '_le' → logprob: -18.625
    8. '_layers' → logprob: -19.875
    9. ',_' → logprob: -20.0
    10. ')_' → logprob: -20.0

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.300083648762666e-05
    2. ',
' → logprob: -10.375053405761719
    3. ' ,' → logprob: -10.750053405761719
    4. ',

' → logprob: -16.00005340576172
    5. '           ' → logprob: -16.87505340576172
    6. '       ' → logprob: -17.87505340576172
    7. ')' → logprob: -18.25005340576172
    8. '
' → logprob: -18.37505340576172
    9. ',opt' → logprob: -18.37505340576172
    10. '   ' → logprob: -18.50005340576172

Token 445: ' opponent' (ID: 38519)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0336948037147522
    2. ' opponent' → logprob: -3.4086947441101074
    3. '           ' → logprob: -11.158695220947266
    4. '               ' → logprob: -11.408695220947266
    5. '              ' → logprob: -12.158695220947266
    6. 'opp' → logprob: -12.408695220947266
    7. 'Opponent' → logprob: -12.533695220947266
    8. '   ' → logprob: -12.908695220947266
    9. ' ' → logprob: -13.658695220947266
    10. '       ' → logprob: -13.908695220947266

Token 446: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -13.875003814697266
    3. 'levels' → logprob: -13.875003814697266
    4. '```' → logprob: -14.875003814697266
    5. ')' → logprob: -15.250003814697266
    6. ')_' → logprob: -15.375003814697266
    7. 'Levels' → logprob: -15.625003814697266
    8. '
' → logprob: -15.625003814697266
    9. 'op' → logprob: -16.250003814697266
    10. '_op' → logprob: -16.375003814697266

Token 447: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006921272724866867
    2. '))
' → logprob: -5.006921291351318
    3. ')' → logprob: -9.25692081451416
    4. '           ' → logprob: -9.25692081451416
    5. '       ' → logprob: -11.38192081451416
    6. ')
' → logprob: -13.38192081451416
    7. '               ' → logprob: -14.00692081451416
    8. '))

' → logprob: -15.25692081451416
    9. ' ))' → logprob: -15.25692081451416
    10. '   ' → logprob: -15.63192081451416

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014083284186199307
    2. 'return' → logprob: -6.751408100128174
    3. ' return' → logprob: -9.251408576965332
    4. '   ' → logprob: -9.751408576965332
    5. '
' → logprob: -10.251408576965332
    6. '	' → logprob: -10.876408576965332
    7. '	return' → logprob: -11.126408576965332
    8. '           ' → logprob: -12.376408576965332
    9. '```' → logprob: -12.626408576965332
    10. '	   ' → logprob: -13.126408576965332

Token 449: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06857326626777649
    2. '       ' → logprob: -2.818573236465454
    3. ' return' → logprob: -5.068573474884033
    4. '   ' → logprob: -8.943572998046875
    5. '	return' → logprob: -8.943572998046875
    6. '
' → logprob: -10.818572998046875
    7. '	' → logprob: -12.693572998046875
    8. ' ' → logprob: -13.068572998046875
    9. ':return' → logprob: -13.318572998046875
    10. '           ' → logprob: -13.818572998046875

Token 450: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.2014138251543045
    2. ' datasets' → logprob: -1.701413869857788
    3. '.datasets' → logprob: -14.701414108276367
    4. 'dataset' → logprob: -16.951414108276367
    5. 'atasets' → logprob: -17.576414108276367
    6. 'd' → logprob: -18.201414108276367
    7. 'dat' → logprob: -19.076414108276367
    8. 'Datas' → logprob: -19.951414108276367
    9. '   ' → logprob: -20.076414108276367
    10. 'data' → logprob: -20.201414108276367

Token 451: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017468981444835663
    2. '<|end|>' → logprob: -4.7674689292907715
    3. '    
' → logprob: -5.2674689292907715
    4. '
' → logprob: -6.2674689292907715
    5. '```' → logprob: -6.8924689292907715
    6. '        
' → logprob: -8.14246940612793
    7. '<|end|>' → logprob: -8.64246940612793
    8. ' 
' → logprob: -9.76746940612793
    9. '  
' → logprob: -9.76746940612793
    10. 'def' → logprob: -10.01746940612793

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.290784560609609e-05
    2. ' def' → logprob: -10.000072479248047
    3. 'def' → logprob: -10.750072479248047
    4. '```' → logprob: -12.750072479248047
    5. '   ' → logprob: -13.625072479248047
    6. '<|end|>' → logprob: -13.875072479248047
    7. '	def' → logprob: -15.250072479248047
    8. '    
' → logprob: -15.250072479248047
    9. 'class' → logprob: -15.500072479248047
    10. '
' → logprob: -16.250072479248047

Token 453: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023958617821335793
    2. '   ' → logprob: -3.773958683013916
    3. ' def' → logprob: -7.273958683013916
    4. '
' → logprob: -11.648958206176758
    5. 'class' → logprob: -12.523958206176758
    6. '	def' → logprob: -12.773958206176758
    7. '    
' → logprob: -13.148958206176758
    8. 'import' → logprob: -13.273958206176758
    9. '```' → logprob: -14.773958206176758
    10. '  ' → logprob: -16.898958206176758

Token 454: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.6389036774635315
    2. ' read' → logprob: -0.7639036774635315
    3. 'def' → logprob: -5.138903617858887
    4. ' def' → logprob: -8.388903617858887
    5. '_read' → logprob: -9.888903617858887
    6. 'int' → logprob: -10.263903617858887
    7. 'abstract' → logprob: -10.513903617858887
    8. '.read' → logprob: -10.763903617858887
    9. 'n' → logprob: -11.388903617858887
    10. '
' → logprob: -11.513903617858887

Token 455: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -6.027225754223764e-05
    2. '_line' → logprob: -9.750060081481934
    3. '_' → logprob: -15.125060081481934
    4. 'int' → logprob: -15.125060081481934
    5. '_raw' → logprob: -15.375060081481934
    6. '_char' → logprob: -15.375060081481934
    7. '_float' → logprob: -15.500060081481934
    8. '_integer' → logprob: -15.750060081481934
    9. '_string' → logprob: -15.875060081481934
    10. '_input' → logprob: -15.875060081481934

Token 456: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00014442270912695676
    2. '_list' → logprob: -8.875144004821777
    3. '_' → logprob: -12.750144004821777
    4. '_lines' → logprob: -15.000144004821777
    5. '_LINE' → logprob: -15.000144004821777
    6. ' _' → logprob: -15.375144004821777
    7. '_value' → logprob: -15.750144004821777
    8. '_array' → logprob: -16.125144958496094
    9. '_Line' → logprob: -16.500144958496094
    10. '_lineno' → logprob: -16.625144958496094

Token 457: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012984501663595438
    2. '(' → logprob: -7.251298427581787
    3. '()' → logprob: -7.501298427581787
    4. 'self' → logprob: -10.376298904418945
    5. '(
' → logprob: -13.376298904418945
    6. '():' → logprob: -13.751298904418945
    7. '   ' → logprob: -14.126298904418945
    8. ' (' → logprob: -14.751298904418945
    9. '():
' → logprob: -15.501298904418945
    10. '       ' → logprob: -15.876298904418945

Token 458: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41552022099494934
    2. '):
' → logprob: -1.165520191192627
    3. 'self' → logprob: -3.665520191192627
    4. '(self' → logprob: -6.165520191192627
    5. ')' → logprob: -7.790520191192627
    6. '):
' → logprob: -10.415520668029785
    7. '):

' → logprob: -10.415520668029785
    8. '   ' → logprob: -11.040520668029785
    9. '():' → logprob: -11.165520668029785
    10. ' self' → logprob: -11.290520668029785

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022294964641332626
    2. '()' → logprob: -4.022294998168945
    3. 'return' → logprob: -6.022294998168945
    4. ' return' → logprob: -7.522294998168945
    5. '   ' → logprob: -8.022294998168945
    6. '(self' → logprob: -8.272294998168945
    7. 'self' → logprob: -8.522294998168945
    8. '(' → logprob: -9.647294998168945
    9. ' self' → logprob: -9.647294998168945
    10. '()
' → logprob: -9.897294998168945

Token 460: ' raise' (ID: 9338)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3444291949272156
    2. 'return' → logprob: -1.3444292545318604
    3. 'line' → logprob: -3.5944292545318604
    4. ' return' → logprob: -6.094429016113281
    5. ' int' → logprob: -7.844429016113281
    6. ' line' → logprob: -7.969429016113281
    7. 'import' → logprob: -9.469429016113281
    8. 'try' → logprob: -9.594429016113281
    9. 'input' → logprob: -10.469429016113281
    10. 'raw' → logprob: -11.219429016113281

Token 461: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.07889165729284286
    2. ' Not' → logprob: -2.5788917541503906
    3. '_Not' → logprob: -14.07889175415039
    4. '(Not' → logprob: -14.32889175415039
    5. '_not' → logprob: -15.07889175415039
    6. 'not' → logprob: -16.32889175415039
    7. 'EOF' → logprob: -16.95389175415039
    8. ' not' → logprob: -17.82889175415039
    9. ' ' → logprob: -18.07889175415039
    10. '```' → logprob: -18.07889175415039

Token 462: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.00020377879263833165
    2. 'implemented' → logprob: -8.500204086303711
    3. 'Impl' → logprob: -15.625204086303711
    4. 'Implement' → logprob: -17.00020408630371
    5. 'Im' → logprob: -17.37520408630371
    6. ' implemented' → logprob: -17.62520408630371
    7. '```' → logprob: -17.87520408630371
    8. 'impl' → logprob: -18.12520408630371
    9. '_IMPLEMENT' → logprob: -18.37520408630371
    10. 'IMPLEMENT' → logprob: -18.50020408630371

Token 463: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.2664456789934775e-06
    2. 'Here' → logprob: -14.875000953674316
    3. 'error' → logprob: -15.625000953674316
    4. 'Method' → logprob: -15.750000953674316
    5. 'Not' → logprob: -15.875000953674316
    6. 'Warning' → logprob: -16.125001907348633
    7. 'rror' → logprob: -16.375001907348633
    8. 'Token' → logprob: -16.500001907348633
    9. '[' → logprob: -17.500001907348633
    10. 'ation' → logprob: -18.500001907348633

Token 464: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12950082123279572
    2. 'def' → logprob: -2.1295008659362793
    3. ' def' → logprob: -6.129500865936279
    4. '
' → logprob: -8.379500389099121
    5. '<|end|>' → logprob: -9.504500389099121
    6. '```' → logprob: -9.629500389099121
    7. '    
' → logprob: -11.379500389099121
    8. '<|end|>' → logprob: -12.629500389099121
    9. 'class' → logprob: -13.379500389099121
    10. ' ' → logprob: -13.504500389099121

Token 466: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.804671233519912e-05
    2. '   ' → logprob: -9.50008773803711
    3. ' def' → logprob: -11.25008773803711
    4. 'class' → logprob: -16.00008773803711
    5. '	def' → logprob: -18.00008773803711
    6. '
' → logprob: -18.12508773803711
    7. '```' → logprob: -19.37508773803711
    8. '    
' → logprob: -20.75008773803711
    9. ' ' → logprob: -22.00008773803711
    10. 'import' → logprob: -22.25008773803711

Token 467: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -7.517272024415433e-05
    2. ' read' → logprob: -9.500075340270996
    3. 'def' → logprob: -16.50007438659668
    4. '_read' → logprob: -17.00007438659668
    5. '	read' → logprob: -17.25007438659668
    6. 'write' → logprob: -17.50007438659668
    7. '.read' → logprob: -18.00007438659668
    8. '
' → logprob: -19.50007438659668
    9. '   ' → logprob: -19.75007438659668
    10. '(read' → logprob: -19.87507438659668

Token 468: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -4.739826181321405e-05
    2. '_line' → logprob: -10.37504768371582
    3. '_list' → logprob: -12.00004768371582
    4. '_string' → logprob: -13.00004768371582
    5. '_str' → logprob: -13.12504768371582
    6. '_input' → logprob: -13.50004768371582
    7. 'int' → logprob: -13.62504768371582
    8. '_char' → logprob: -14.00004768371582
    9. '_text' → logprob: -14.25004768371582
    10. '_lines' → logprob: -14.87504768371582

Token 469: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.012550270184874535
    2. '_line' → logprob: -4.387550354003906
    3. '_' → logprob: -11.137550354003906
    4. ' _' → logprob: -11.512550354003906
    5. '_lines' → logprob: -12.262550354003906
    6. 'list' → logprob: -13.262550354003906
    7. '<|end|>' → logprob: -13.262550354003906
    8. 'List' → logprob: -13.387550354003906
    9. '_l' → logprob: -13.762550354003906
    10. '_lists' → logprob: -14.012550354003906

Token 470: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -6.704273118884885e-07
    2. '_list' → logprob: -14.500000953674316
    3. '_lines' → logprob: -15.875000953674316
    4. '_lin' → logprob: -17.75
    5. '_LINE' → logprob: -18.125
    6. '_l' → logprob: -18.75
    7. 'line' → logprob: -19.125
    8. '_' → logprob: -19.375
    9. '_lineno' → logprob: -19.5
    10. 'Line' → logprob: -20.0

Token 471: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.023293538717553e-05
    2. 'self' → logprob: -10.750030517578125
    3. '(' → logprob: -12.375030517578125
    4. '   ' → logprob: -12.750030517578125
    5. '       ' → logprob: -14.125030517578125
    6. '()' → logprob: -14.625030517578125
    7. 'def' → logprob: -15.750030517578125
    8. ' (' → logprob: -15.875030517578125
    9. '	self' → logprob: -16.875030517578125
    10. '(
' → logprob: -17.250030517578125

Token 472: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02963118813931942
    2. '):
' → logprob: -4.0296311378479
    3. ')' → logprob: -4.5296311378479
    4. 'self' → logprob: -7.5296311378479
    5. '(self' → logprob: -9.529631614685059
    6. '):

' → logprob: -11.904631614685059
    7. '():' → logprob: -12.029631614685059
    8. '   ' → logprob: -12.779631614685059
    9. '):
' → logprob: -13.404631614685059
    10. ')
' → logprob: -13.779631614685059

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015371803194284439
    2. '(self' → logprob: -4.515371799468994
    3. 'self' → logprob: -6.015371799468994
    4. '   ' → logprob: -7.265371799468994
    5. '(' → logprob: -7.515371799468994
    6. 'return' → logprob: -8.140372276306152
    7. ' self' → logprob: -8.890372276306152
    8. '()' → logprob: -9.390372276306152
    9. ':' → logprob: -10.515372276306152
    10. ' return' → logprob: -10.890372276306152

Token 474: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4884013533592224
    2. ' raise' → logprob: -1.7384014129638672
    3. 'raise' (adapté à ' raise') → logprob: -1.8634014129638672
    4. 'return' → logprob: -3.488401412963867
    5. 'line' → logprob: -4.738401412963867
    6. ' line' → logprob: -4.863401412963867
    7. ' return' → logprob: -5.363401412963867
    8. 'self' → logprob: -6.113401412963867
    9. '   ' → logprob: -7.488401412963867
    10. ' self' → logprob: -8.238401412963867

Token 475: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -9.758300438988954e-05
    2. ' Not' → logprob: -9.250097274780273
    3. '_Not' → logprob: -14.125097274780273
    4. '_not' → logprob: -14.500097274780273
    5. '@Not' → logprob: -16.000097274780273
    6. '(Not' → logprob: -16.250097274780273
    7. 'not' → logprob: -17.625097274780273
    8. '_NOT' → logprob: -19.375097274780273
    9. '.Not' → logprob: -19.750097274780273
    10. '\Not' → logprob: -20.625097274780273

Token 476: 'Implemented' (ID: 42030)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.04390088468790054
    2. 'Implemented' → logprob: -3.168900966644287
    3. 'ot' → logprob: -7.543900966644287
    4. 'Error' → logprob: -8.168900489807129
    5. 'Defined' → logprob: -11.293900489807129
    6. '(Not' → logprob: -11.918900489807129
    7. 'Written' → logprob: -12.293900489807129
    8. 'Expected' → logprob: -12.543900489807129
    9. 'Completed' → logprob: -12.668900489807129
    10. 'User' → logprob: -12.668900489807129

Token 477: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.228561349213123e-05
    2. 'Not' → logprob: -9.875052452087402
    3. 'rror' → logprob: -14.125052452087402
    4. 'Warning' → logprob: -16.875051498413086
    5. ' Error' → logprob: -18.375051498413086
    6. 'Implemented' → logprob: -18.750051498413086
    7. 'error' → logprob: -19.375051498413086
    8. '_error' → logprob: -19.500051498413086
    9. 'Exception' → logprob: -19.875051498413086
    10. 'Text' → logprob: -20.000051498413086

Token 478: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.10530703514814377
    2. '   ' → logprob: -2.730307102203369
    3. '<|end|>' → logprob: -3.480307102203369
    4. ' class' → logprob: -5.980307102203369
    5. '```' → logprob: -7.355307102203369
    6. '
' → logprob: -7.730307102203369
    7. '<|end|>' → logprob: -8.605306625366211
    8. 'def' → logprob: -9.730306625366211
    9. '<class' → logprob: -10.480306625366211
    10. ' ' → logprob: -11.480306625366211

Token 479: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.246537173457909e-06
    2. ' class' → logprob: -12.625003814697266
    3. 'import' → logprob: -14.875003814697266
    4. '
' → logprob: -15.000003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '```' → logprob: -16.750003814697266
    7. 'from' → logprob: -17.125003814697266
    8. '<class' → logprob: -17.125003814697266
    9. 'def' → logprob: -17.500003814697266
    10. '"class' → logprob: -18.750003814697266

Token 480: ' Std' (ID: 74505)
  Prédit: 'File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'File' → logprob: -0.5840582847595215
    2. 'Console' → logprob: -2.0840582847595215
    3. 'Std' → logprob: -2.2090582847595215
    4. 'Standard' → logprob: -2.5840582847595215
    5. 'List' → logprob: -3.0840582847595215
    6. 'St' → logprob: -3.2090582847595215
    7. 'Concrete' → logprob: -3.3340582847595215
    8. ' Console' → logprob: -5.9590582847595215
    9. ' Std' → logprob: -6.3340582847595215
    10. 'Input' → logprob: -7.0840582847595215

Token 481: 'Input' (ID: 3275)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1297166347503662
    2. 'Input' → logprob: -2.754716634750366
    3. 'In' → logprob: -2.879716634750366
    4. 'input' → logprob: -6.379716873168945
    5. 'I' → logprob: -10.379716873168945
    6. 'IO' → logprob: -10.379716873168945
    7. 'Inp' → logprob: -10.879716873168945
    8. 'IN' → logprob: -11.379716873168945
    9. '
' → logprob: -11.379716873168945
    10. 'inp' → logprob: -11.629716873168945

Token 482: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -2.868328920158092e-05
    2. 'Input' → logprob: -10.625028610229492
    3. 'Adapter' → logprob: -13.875028610229492
    4. 'Handler' → logprob: -14.625028610229492
    5. 'reader' → logprob: -15.000028610229492
    6. 'Listener' → logprob: -15.125028610229492
    7. '_reader' → logprob: -15.250028610229492
    8. 'Monster' → logprob: -15.250028610229492
    9. 'Receiver' → logprob: -15.375028610229492
    10. 'Provider' → logprob: -15.500028610229492

Token 483: '(Abstract' (ID: 94462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6963658332824707
    2. '(Abstract' → logprob: -0.6963658332824707
    3. ':
' → logprob: -5.821365833282471
    4. '(' → logprob: -8.446365356445312
    5. '<Abstract' → logprob: -11.321365356445312
    6. '():' → logprob: -11.821365356445312
    7. ' :' → logprob: -12.196365356445312
    8. '   ' → logprob: -12.321365356445312
    9. '_Abstract' → logprob: -13.321365356445312
    10. '(
' → logprob: -13.821365356445312

Token 484: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.9361264946837764e-07
    2. 'In' → logprob: -16.0
    3. 'I' → logprob: -17.625
    4. 'Inp' → logprob: -20.0
    5. 'input' → logprob: -22.0
    6. '_Input' → logprob: -22.25
    7. '	Input' → logprob: -22.375
    8. ' Input' → logprob: -22.5
    9. '\Input' → logprob: -22.75
    10. '
' → logprob: -22.875

Token 485: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.00033760786755010486
    2. 'Input' → logprob: -8.000337600708008
    3. 'reader' → logprob: -13.750337600708008
    4. '_reader' → logprob: -14.125337600708008
    5. 'Writer' → logprob: -15.750337600708008
    6. '.Reader' → logprob: -16.500337600708008
    7. ' reader' → logprob: -16.750337600708008
    8. ' Reader' → logprob: -17.125337600708008
    9. '-reader' → logprob: -18.250337600708008
    10. '```' → logprob: -18.500337600708008

Token 486: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6933777332305908
    2. '):' → logprob: -0.6933777332305908
    3. ':' → logprob: -8.693377494812012
    4. '   ' → logprob: -10.443377494812012
    5. ':
' → logprob: -11.193377494812012
    6. '):
' → logprob: -11.818377494812012
    7. '):

' → logprob: -12.318377494812012
    8. ')' → logprob: -12.568377494812012
    9. '(Abstract' → logprob: -13.068377494812012
    10. ',' → logprob: -13.818377494812012

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007628110470250249
    2. ':' → logprob: -8.000762939453125
    3. ' def' → logprob: -8.750762939453125
    4. '    
' → logprob: -9.375762939453125
    5. 'def' → logprob: -9.625762939453125
    6. 'import' → logprob: -10.125762939453125
    7. ':
' → logprob: -10.625762939453125
    8. '
' → logprob: -11.125762939453125
    9. '<|end|>' → logprob: -11.500762939453125
    10. '    ' → logprob: -11.625762939453125

Token 488: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17039506137371063
    2. ' def' → logprob: -1.920395016670227
    3. ' import' → logprob: -4.7953948974609375
    4. 'import' → logprob: -6.5453948974609375
    5. 'def' (adapté à ' def') → logprob: -7.7953948974609375
    6. '	def' → logprob: -13.670394897460938
    7. ' from' → logprob: -14.170394897460938
    8. '    ' → logprob: -14.795394897460938
    9. 'from' → logprob: -16.420394897460938
    10. '       ' → logprob: -16.545394897460938

Token 489: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.7606374025344849
    2. ' def' → logprob: -1.3856374025344849
    3. ' __' → logprob: -1.6356374025344849
    4. 'read' → logprob: -2.8856372833251953
    5. 'def' → logprob: -4.135637283325195
    6. '__' → logprob: -4.260637283325195
    7. '_read' → logprob: -7.010637283325195
    8. ' ' → logprob: -7.885637283325195
    9. ' _' → logprob: -8.760637283325195
    10. '_def' → logprob: -9.135637283325195

Token 490: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -1.9981420336989686e-05
    2. '_line' → logprob: -10.875020027160645
    3. 'int' → logprob: -14.500020027160645
    4. '_' → logprob: -15.125020027160645
    5. '_char' → logprob: -16.500019073486328
    6. '_all' → logprob: -17.000019073486328
    7. '_in' → logprob: -17.000019073486328
    8. '_str' → logprob: -17.750019073486328
    9. '_input' → logprob: -18.500019073486328
    10. '_ent' → logprob: -18.875019073486328

Token 491: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.6240566083070007e-06
    2. '_list' → logprob: -14.500001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_LINE' → logprob: -15.125001907348633
    5. '_lin' → logprob: -15.750001907348633
    6. '_lines' → logprob: -16.500001907348633
    7. '_l' → logprob: -16.750001907348633
    8. '_Line' → logprob: -17.000001907348633
    9. '_li' → logprob: -17.125001907348633
    10. '_lineno' → logprob: -17.250001907348633

Token 492: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00027420982951298356
    2. '(' → logprob: -8.500274658203125
    3. ' (' → logprob: -9.625274658203125
    4. '()' → logprob: -13.750274658203125
    5. '(s' → logprob: -13.875274658203125
    6. 'self' → logprob: -14.000274658203125
    7. '(
' → logprob: -14.125274658203125
    8. '(sel' → logprob: -15.125274658203125
    9. '(se' → logprob: -15.125274658203125
    10. '   ' → logprob: -15.250274658203125

Token 493: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3971365690231323
    2. '):' → logprob: -1.1471365690231323
    3. 'self' → logprob: -4.647136688232422
    4. '(self' → logprob: -8.022136688232422
    5. '   ' → logprob: -8.897136688232422
    6. '       ' → logprob: -9.772136688232422
    7. ',' → logprob: -10.647136688232422
    8. '):
' → logprob: -10.647136688232422
    9. ')' → logprob: -11.022136688232422
    10. '):

' → logprob: -11.647136688232422

Token 494: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3937743902206421
    2. ' return' → logprob: -1.643774390220642
    3. '       ' → logprob: -2.6437745094299316
    4. 'int' → logprob: -2.8937745094299316
    5. ' int' → logprob: -6.018774509429932
    6. 'import' → logprob: -6.143774509429932
    7. 'try' → logprob: -7.268774509429932
    8. ' import' → logprob: -9.143774032592773
    9. ' try' → logprob: -10.018774032592773
    10. '=int' → logprob: -10.018774032592773

Token 495: ' while' (ID: 2049)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0021776235662400723
    2. ' return' → logprob: -6.752177715301514
    3. 'int' → logprob: -7.377177715301514
    4. 'import' → logprob: -7.877177715301514
    5. '       ' → logprob: -13.627177238464355
    6. '   ' → logprob: -15.002177238464355
    7. 'line' → logprob: -15.502177238464355
    8. 'try' → logprob: -16.127178192138672
    9. ' import' → logprob: -16.502178192138672
    10. ' int' → logprob: -16.877178192138672

Token 496: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2017674595117569
    2. 'True' → logprob: -1.7017674446105957
    3. '(True' → logprob: -7.951767444610596
    4. ' not' → logprob: -14.076767921447754
    5. '1' → logprob: -14.701767921447754
    6. ' ' → logprob: -15.076767921447754
    7. '(' → logprob: -15.326767921447754
    8. ' Tru' → logprob: -16.076766967773438
    9. 'not' → logprob: -16.326766967773438
    10. ' (' → logprob: -16.701766967773438

Token 497: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3585209548473358
    2. ':' → logprob: -1.8585209846496582
    3. ':
' → logprob: -2.108520984649658
    4. ' line' → logprob: -4.358520984649658
    5. 'input' → logprob: -5.858520984649658
    6. ',' → logprob: -6.483520984649658
    7. 'try' → logprob: -6.983520984649658
    8. ' input' → logprob: -6.983520984649658
    9. '       ' → logprob: -7.108520984649658
    10. ' try' → logprob: -7.233520984649658

Token 498: '           ' (ID: 352)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5951427817344666
    2. '           ' → logprob: -0.9701427817344666
    3. ' try' → logprob: -2.8451428413391113
    4. 'try' → logprob: -4.845142841339111
    5. 'line' → logprob: -5.845142841339111
    6. '   ' → logprob: -8.220142364501953
    7. 'import' → logprob: -8.970142364501953
    8. ' s' → logprob: -9.345142364501953
    9. '       ' → logprob: -10.220142364501953
    10. '	line' → logprob: -11.095142364501953

Token 499: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.003546616528183222
    2. ' line' → logprob: -6.253546714782715
    3. 'try' → logprob: -7.128546714782715
    4. 'import' → logprob: -7.128546714782715
    5. 's' → logprob: -12.003546714782715
    6. ' try' → logprob: -13.003546714782715
    7. '           ' → logprob: -13.503546714782715
    8. '	line' → logprob: -14.003546714782715
    9. '_line' → logprob: -14.128546714782715
    10. 'raw' → logprob: -14.628546714782715

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194448232650757
    2. '=' → logprob: -1.5019445419311523
    3. 's' → logprob: -11.626944541931152
    4. '=line' → logprob: -13.126944541931152
    5. '=input' → logprob: -13.126944541931152
    6. 'input' → logprob: -13.876944541931152
    7. ' ' → logprob: -14.376944541931152
    8. '_input' → logprob: -15.251944541931152
    9. 'import' → logprob: -15.376944541931152
    10. '=
' → logprob: -16.626943588256836

Token 501: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07888978719711304
    2. ' input' → logprob: -2.578889846801758
    3. '(input' → logprob: -17.203889846801758
    4. '	input' → logprob: -18.578889846801758
    5. '=input' → logprob: -18.703889846801758
    6. 'import' → logprob: -19.203889846801758
    7. 'sys' → logprob: -19.703889846801758
    8. '_input' → logprob: -20.078889846801758
    9. '<input' → logprob: -20.203889846801758
    10. ' ' → logprob: -21.078889846801758

Token 502: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7034844756126404
    2. '().' → logprob: -0.7034844756126404
    3. '()
' → logprob: -4.578484535217285
    4. '()

' → logprob: -12.203484535217285
    5. '.strip' → logprob: -12.328484535217285
    6. '()
' → logprob: -13.203484535217285
    7. 'strip' → logprob: -14.828484535217285
    8. '();' → logprob: -14.828484535217285
    9. '(' → logprob: -15.078484535217285
    10. '())' → logprob: -15.328484535217285

Token 503: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8562230467796326
    2. '           ' → logprob: -0.9812230467796326
    3. '.strip' → logprob: -2.2312231063842773
    4. '       ' → logprob: -2.8562231063842773
    5. 'if' → logprob: -3.4812231063842773
    6. '               ' → logprob: -6.481223106384277
    7. 'return' → logprob: -7.106223106384277
    8. '
' → logprob: -7.481223106384277
    9. '.rstrip' → logprob: -8.481223106384277
    10. ' =' → logprob: -8.606223106384277

Token 504: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5950648784637451
    2. 'if' (adapté à ' if') → logprob: -0.8450648784637451
    3. '           ' → logprob: -4.470065116882324
    4. ' line' → logprob: -5.595065116882324
    5. 'line' → logprob: -5.845065116882324
    6. 'strip' → logprob: -8.095065116882324
    7. ' stripped' → logprob: -8.095065116882324
    8. 'try' → logprob: -8.970065116882324
    9. 'str' → logprob: -9.470065116882324
    10. ' try' → logprob: -10.845065116882324

Token 505: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3132629096508026
    2. ' line' → logprob: -1.313262939453125
    3. 'len' → logprob: -14.188262939453125
    4. ' len' → logprob: -15.938262939453125
    5. ' ' → logprob: -16.313262939453125
    6. 'lin' → logprob: -16.438262939453125
    7. '(line' → logprob: -16.688262939453125
    8. '	line' → logprob: -16.688262939453125
    9. '#line' → logprob: -16.938262939453125
    10. ' lin' → logprob: -17.563262939453125

Token 506: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0022143693640828133
    2. '.' → logprob: -6.127214431762695
    3. 'strip' → logprob: -11.002214431762695
    4. '.trim' → logprob: -12.377214431762695
    5. '<|end|>' → logprob: -12.752214431762695
    6. ':' → logprob: -13.002214431762695
    7. ':
' → logprob: -13.502214431762695
    8. ' strip' → logprob: -14.002214431762695
    9. '.rstrip' → logprob: -15.252214431762695
    10. ' .' → logprob: -16.002214431762695

Token 507: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.40439438819885254
    2. '():' → logprob: -1.7793943881988525
    3. '()!=' → logprob: -2.4043943881988525
    4. '():
' → logprob: -3.0293943881988525
    5. ':' → logprob: -4.279394149780273
    6. '!=' → logprob: -4.904394149780273
    7. ' !=' → logprob: -7.029394149780273
    8. '()==' → logprob: -7.279394149780273
    9. '==' → logprob: -7.529394149780273
    10. '<|end|>' → logprob: -7.529394149780273

Token 508: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008772573433816433
    2. 'return' → logprob: -5.383772373199463
    3. ' return' → logprob: -5.508772373199463
    4. '           ' → logprob: -10.758772850036621
    5. '                   ' → logprob: -10.883772850036621
    6. ':return' → logprob: -10.883772850036621
    7. ':
' → logprob: -11.508772850036621
    8. '   ' → logprob: -12.758772850036621
    9. ' =' → logprob: -12.883772850036621
    10. ',' → logprob: -13.008772850036621

Token 509: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25387346744537354
    2. ' return' → logprob: -1.5038734674453735
    3. '                   ' → logprob: -6.253873348236084
    4. '               ' → logprob: -11.003873825073242
    5. '	return' → logprob: -13.753873825073242
    6. '   ' → logprob: -13.753873825073242
    7. 'try' → logprob: -15.378873825073242
    8. '                       ' → logprob: -16.003873825073242
    9. '           ' → logprob: -16.503873825073242
    10. 'break' → logprob: -16.878873825073242

Token 510: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.836499985889532e-05
    2. ' int' → logprob: -9.7500581741333
    3. '(int' → logprob: -23.000059127807617
    4. '[int' → logprob: -23.875059127807617
    5. '<int' → logprob: -24.625059127807617
    6. '	int' → logprob: -25.625059127807617
    7. '=int' → logprob: -25.875059127807617
    8. ':int' → logprob: -27.500059127807617
    9. 'ints' → logprob: -28.125059127807617
    10. 'intval' → logprob: -28.375059127807617

Token 511: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -4.56102097814437e-05
    2. 'line' → logprob: -10.000045776367188
    3. '(' → logprob: -15.750045776367188
    4. ' line' → logprob: -18.000045776367188
    5. '[line' → logprob: -18.875045776367188
    6. '=line' → logprob: -20.125045776367188
    7. '	line' → logprob: -21.250045776367188
    8. '#line' → logprob: -21.375045776367188
    9. ',line' → logprob: -22.875045776367188
    10. '(
' → logprob: -22.875045776367188

Token 512: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005384587682783604
    2. '.strip' → logprob: -5.25538444519043
    3. '())' → logprob: -9.88038444519043
    4. '(line' → logprob: -10.00538444519043
    5. ' )' → logprob: -10.75538444519043
    6. '(strip' → logprob: -11.75538444519043
    7. '(' → logprob: -12.13038444519043
    8. ')
' → logprob: -12.25538444519043
    9. '[line' → logprob: -12.63038444519043
    10. ')return' → logprob: -13.13038444519043

Token 513: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06204342097043991
    2. ')' → logprob: -2.8120434284210205
    3. '()' → logprob: -9.562043190002441
    4. '())
' → logprob: -12.437043190002441
    5. '())

' → logprob: -14.812043190002441
    6. ' ())' → logprob: -14.812043190002441
    7. '(' → logprob: -15.062043190002441
    8. ' )' → logprob: -15.062043190002441
    9. ')
' → logprob: -17.312044143676758
    10. '()))' → logprob: -17.687044143676758

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01810932159423828
    2. '<|end|>' → logprob: -4.143109321594238
    3. 'def' → logprob: -7.268109321594238
    4. '    
' → logprob: -7.393109321594238
    5. '<|end|>' → logprob: -7.893109321594238
    6. '```' → logprob: -9.268109321594238
    7. '
' → logprob: -9.518109321594238
    8. '        
' → logprob: -9.643109321594238
    9. '       ' → logprob: -9.768109321594238
    10. '  
' → logprob: -11.143109321594238

Token 515: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057738542556762695
    2. 'def' (adapté à ' def') → logprob: -2.9327385425567627
    3. '
' → logprob: -6.057738304138184
    4. ' def' → logprob: -8.057738304138184
    5. '    
' → logprob: -8.807738304138184
    6. '<|end|>' → logprob: -11.307738304138184
    7. '```' → logprob: -11.307738304138184
    8. '        
' → logprob: -11.557738304138184
    9. '	def' → logprob: -12.432738304138184
    10. '  
' → logprob: -12.807738304138184

Token 516: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0007105246186256409
    2. ' read' → logprob: -7.250710487365723
    3. 'def' → logprob: -14.250710487365723
    4. ' def' → logprob: -19.00071144104004
    5. '	read' → logprob: -19.87571144104004
    6. ' ' → logprob: -20.75071144104004
    7. '.read' → logprob: -20.87571144104004
    8. '   ' → logprob: -21.12571144104004
    9. '  ' → logprob: -21.25071144104004
    10. '_read' → logprob: -21.37571144104004

Token 517: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -1.0206720617134124e-05
    2. 'int' → logprob: -11.50001049041748
    3. 'def' → logprob: -18.500009536743164
    4. '_' → logprob: -19.375009536743164
    5. '_list' → logprob: -19.500009536743164
    6. '_float' → logprob: -19.500009536743164
    7. ' _' → logprob: -19.750009536743164
    8. '_uint' → logprob: -20.125009536743164
    9. '_input' → logprob: -20.375009536743164
    10. '_integer' → logprob: -20.500009536743164

Token 518: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.438573680294212e-06
    2. '_line' → logprob: -12.250005722045898
    3. 'list' → logprob: -15.000005722045898
    4. 'int' → logprob: -15.750005722045898
    5. 'List' → logprob: -17.0000057220459
    6. '_lines' → logprob: -18.8750057220459
    7. '_' → logprob: -19.2500057220459
    8. '```' → logprob: -19.2500057220459
    9. '_int' → logprob: -19.5000057220459
    10. '_lists' → logprob: -19.7500057220459

Token 519: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.1472419600977446e-06
    2. '_list' → logprob: -14.000000953674316
    3. 'line' → logprob: -16.375001907348633
    4. '_lines' → logprob: -16.625001907348633
    5. '_LINE' → logprob: -17.875001907348633
    6. '_' → logprob: -17.875001907348633
    7. '_lin' → logprob: -19.500001907348633
    8. ' line' → logprob: -20.125001907348633
    9. '(self' → logprob: -20.500001907348633
    10. 'self' → logprob: -20.500001907348633

Token 520: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.125006675720215
    3. 'self' → logprob: -14.625006675720215
    4. '(
' → logprob: -15.500006675720215
    5. '   ' → logprob: -15.875006675720215
    6. '(s' → logprob: -15.875006675720215
    7. ' (' → logprob: -16.5000057220459
    8. '       ' → logprob: -17.2500057220459
    9. '(sel' → logprob: -17.5000057220459
    10. '(se' → logprob: -17.8750057220459

Token 521: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005729213356971741
    2. 'self' → logprob: -5.5057291984558105
    3. '):
' → logprob: -6.8807291984558105
    4. '   ' → logprob: -7.8807291984558105
    5. '       ' → logprob: -9.255729675292969
    6. ')' → logprob: -9.505729675292969
    7. '):' → logprob: -10.130729675292969
    8. 'def' → logprob: -11.380729675292969
    9. ')(' → logprob: -12.255729675292969
    10. ' ' → logprob: -12.505729675292969

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014852239983156323
    2. 'while' → logprob: -6.751485347747803
    3. ' while' → logprob: -8.251484870910645
    4. '   ' → logprob: -10.001484870910645
    5. '           ' → logprob: -12.751484870910645
    6. 'return' → logprob: -13.251484870910645
    7. '	' → logprob: -13.376484870910645
    8. '	while' → logprob: -14.126484870910645
    9. 'line' → logprob: -14.876484870910645
    10. '               ' → logprob: -15.376484870910645

Token 523: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.06509225070476532
    2. 'return' → logprob: -3.0650923252105713
    3. ' while' → logprob: -4.690092086791992
    4. '       ' → logprob: -5.565092086791992
    5. 'line' → logprob: -5.815092086791992
    6. ' return' → logprob: -8.190092086791992
    7. ' line' → logprob: -9.690092086791992
    8. '   ' → logprob: -10.690092086791992
    9. 'lines' → logprob: -12.815092086791992
    10. '	while' → logprob: -13.190092086791992

Token 524: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01815006136894226
    2. ' True' → logprob: -4.0181498527526855
    3. '(True' → logprob: -16.268150329589844
    4. '1' → logprob: -19.143150329589844
    5. '   ' → logprob: -19.643150329589844
    6. 'true' → logprob: -19.893150329589844
    7. ' ' → logprob: -20.018150329589844
    8. '=True' → logprob: -21.643150329589844
    9. '    ' → logprob: -21.643150329589844
    10. '  ' → logprob: -21.893150329589844

Token 525: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01740221679210663
    2. ':' → logprob: -4.142402172088623
    3. ':
' → logprob: -7.017402172088623
    4. ' line' → logprob: -8.017402648925781
    5. 'line' → logprob: -10.392402648925781
    6. '(line' → logprob: -10.517402648925781
    7. '       ' → logprob: -11.267402648925781
    8. '():' → logprob: -11.517402648925781
    9. '		' → logprob: -11.767402648925781
    10. '{' → logprob: -12.392402648925781

Token 526: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030371323227882385
    2. ' line' → logprob: -6.003036975860596
    3. 'line' → logprob: -7.503036975860596
    4. '       ' → logprob: -12.628037452697754
    5. '   ' → logprob: -12.878037452697754
    6. '(line' → logprob: -13.628037452697754
    7. '		' → logprob: -13.753037452697754
    8. '	line' → logprob: -14.003037452697754
    9. '#line' → logprob: -14.753037452697754
    10. '_line' → logprob: -15.878037452697754

Token 527: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -5.9795445849886164e-05
    2. ' line' → logprob: -9.750060081481934
    3. '           ' → logprob: -13.500060081481934
    4. 'try' → logprob: -16.500059127807617
    5. '	line' → logprob: -18.375059127807617
    6. '_line' → logprob: -19.625059127807617
    7. 'lines' → logprob: -20.375059127807617
    8. '   ' → logprob: -20.625059127807617
    9. 'Line' → logprob: -21.000059127807617
    10. '(line' → logprob: -21.375059127807617

Token 528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005658994195982814
    2. '=' → logprob: -7.500566005706787
    3. '           ' → logprob: -11.875565528869629
    4. '=line' → logprob: -12.250565528869629
    5. '   ' → logprob: -14.875565528869629
    6. '               ' → logprob: -15.750565528869629
    7. ' ' → logprob: -15.750565528869629
    8. '       ' → logprob: -15.875565528869629
    9. '		' → logprob: -16.000566482543945
    10. ' line' → logprob: -17.375566482543945

Token 529: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0485873706638813
    2. ' input' → logprob: -3.0485873222351074
    3. '	input' → logprob: -21.048587799072266
    4. 'import' → logprob: -21.048587799072266
    5. '=input' → logprob: -21.048587799072266
    6. '_input' → logprob: -21.798587799072266
    7. '(input' → logprob: -21.798587799072266
    8. ' ' → logprob: -22.673587799072266
    9. '<input' → logprob: -22.673587799072266
    10. '   ' → logprob: -22.923587799072266

Token 530: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2519518733024597
    2. '()' → logprob: -1.5019519329071045
    3. '().' → logprob: -11.626952171325684
    4. '():
' → logprob: -11.751952171325684
    5. '()
' → logprob: -12.251952171325684
    6. '()

' → logprob: -14.626952171325684
    7. '(' → logprob: -15.626952171325684
    8. '(){
' → logprob: -15.876952171325684
    9. '()\' → logprob: -16.126951217651367
    10. '()`' → logprob: -16.626951217651367

Token 531: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003793304320424795
    2. '               ' → logprob: -5.628793239593506
    3. '       ' → logprob: -9.003793716430664
    4. '	       ' → logprob: -10.503793716430664
    5. ' =' → logprob: -11.753793716430664
    6. '<|end|>' → logprob: -11.753793716430664
    7. ' if' → logprob: -12.128793716430664
    8. '=' → logprob: -12.878793716430664
    9. '          ' → logprob: -12.878793716430664
    10. '		' → logprob: -13.253793716430664

Token 532: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16228629648685455
    2. ' if' → logprob: -1.9122862815856934
    3. 'if' (adapté à ' if') → logprob: -6.287286281585693
    4. '               ' → logprob: -8.787286758422852
    5. '       ' → logprob: -10.537286758422852
    6. '          ' → logprob: -12.037286758422852
    7. '   ' → logprob: -12.037286758422852
    8. '         ' → logprob: -13.287286758422852
    9. '            ' → logprob: -13.287286758422852
    10. ' ' → logprob: -13.412286758422852

Token 533: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.25192955136299133
    2. 'line' → logprob: -1.501929521560669
    3. ' ' → logprob: -16.376930236816406
    4. '(line' → logprob: -16.501930236816406
    5. '	line' → logprob: -16.626930236816406
    6. '#line' → logprob: -16.751930236816406
    7. '
' → logprob: -17.001930236816406
    8. ' lin' → logprob: -17.376930236816406
    9. '=line' → logprob: -17.501930236816406
    10. '[line' → logprob: -17.751930236816406

Token 534: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0008121283026412129
    2. '.' → logprob: -7.12581205368042
    3. '.trim' → logprob: -12.500812530517578
    4. ' .' → logprob: -12.875812530517578
    5. 'strip' → logprob: -14.000812530517578
    6. '().' → logprob: -15.000812530517578
    7. '.rstrip' → logprob: -16.500812530517578
    8. ' strip' → logprob: -17.625812530517578
    9. '.
' → logprob: -17.875812530517578
    10. '           ' → logprob: -18.500812530517578

Token 535: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.011073639616370201
    2. '():' → logprob: -4.511073589324951
    3. '()' → logprob: -11.01107406616211
    4. '():
' → logprob: -12.26107406616211
    5. ':
' → logprob: -12.63607406616211
    6. '():

' → logprob: -14.13607406616211
    7. ':' → logprob: -14.76107406616211
    8. '().' → logprob: -15.51107406616211
    9. '()):
' → logprob: -17.51107406616211
    10. '()!=' → logprob: -18.51107406616211

Token 536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11035984754562378
    2. 'return' → logprob: -2.4853599071502686
    3. ' return' → logprob: -3.8603599071502686
    4. ':return' → logprob: -9.735360145568848
    5. '           ' → logprob: -10.110360145568848
    6. '       ' → logprob: -11.985360145568848
    7. '
' → logprob: -12.485360145568848
    8. '                   ' → logprob: -12.610360145568848
    9. ':
' → logprob: -12.735360145568848
    10. '	return' → logprob: -12.735360145568848

Token 537: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005279653239995241
    2. ' return' → logprob: -5.255279541015625
    3. '               ' → logprob: -10.005279541015625
    4. '                   ' → logprob: -14.505279541015625
    5. '           ' → logprob: -16.755279541015625
    6. '	return' → logprob: -17.505279541015625
    7. '   ' → logprob: -18.005279541015625
    8. '       ' → logprob: -19.630279541015625
    9. 'break' → logprob: -19.880279541015625
    10. '
' → logprob: -20.255279541015625

Token 538: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002908415859565139
    2. '[list' → logprob: -6.002908229827881
    3. ' list' → logprob: -7.752908229827881
    4. '[' → logprob: -12.752908706665039
    5. ' [' → logprob: -15.627908706665039
    6. '[List' → logprob: -16.87790870666504
    7. '[int' → logprob: -18.12790870666504
    8. '[line' → logprob: -18.62790870666504
    9. '(list' → logprob: -19.62790870666504
    10. '	list' → logprob: -19.62790870666504

Token 539: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. '(int' → logprob: -16.125001907348633
    4. 'map' → logprob: -18.000001907348633
    5. '(
' → logprob: -18.375001907348633
    6. '	map' → logprob: -20.000001907348633
    7. '.map' → logprob: -21.125001907348633
    8. ',map' → logprob: -21.125001907348633
    9. '()' → logprob: -21.375001907348633
    10. '[int' → logprob: -21.500001907348633

Token 540: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00022976152831688523
    2. '(' → logprob: -8.500229835510254
    3. 'int' → logprob: -10.625229835510254
    4. '(
' → logprob: -13.750229835510254
    5. '(lambda' → logprob: -15.250229835510254
    6. '<int' → logprob: -15.375229835510254
    7. '[int' → logprob: -15.375229835510254
    8. '(str' → logprob: -16.250228881835938
    9. ',int' → logprob: -17.125228881835938
    10. '=int' → logprob: -17.125228881835938

Token 541: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.07741589844226837
    2. ',' → logprob: -2.827415943145752
    3. ',line' → logprob: -4.202415943145752
    4. '(' → logprob: -8.202415466308594
    5. ' (' → logprob: -10.327415466308594
    6. ' ,' → logprob: -10.577415466308594
    7. '=line' → logprob: -11.577415466308594
    8. ' line' → logprob: -11.952415466308594
    9. '#line' → logprob: -11.952415466308594
    10. 'line' → logprob: -12.577415466308594

Token 542: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0007105246186256409
    2. ' line' → logprob: -7.250710487365723
    3. '(line' → logprob: -14.625710487365723
    4. 'lambda' → logprob: -17.37571144104004
    5. '#line' → logprob: -17.87571144104004
    6. '           ' → logprob: -18.00071144104004
    7. 'str' → logprob: -18.25071144104004
    8. '=line' → logprob: -18.62571144104004
    9. '	line' → logprob: -18.75071144104004
    10. '   ' → logprob: -18.87571144104004

Token 543: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.033127110451459885
    2. '(line' → logprob: -4.283127307891846
    3. '.readline' → logprob: -5.033127307891846
    4. '.' → logprob: -5.533127307891846
    5. '[line' → logprob: -5.533127307891846
    6. '=line' → logprob: -6.033127307891846
    7. '.line' → logprob: -7.783127307891846
    8. '().' → logprob: -8.033126831054688
    9. '#line' → logprob: -8.033126831054688
    10. '.split' → logprob: -8.283126831054688

Token 544: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '.split' → logprob: -14.125000953674316
    3. '()' → logprob: -15.250000953674316
    4. ' ().' → logprob: -16.750001907348633
    5. '.' → logprob: -16.875001907348633
    6. ' .' → logprob: -18.500001907348633
    7. '()
' → logprob: -20.500001907348633
    8. 'split' → logprob: -20.500001907348633
    9. '   ' → logprob: -21.125001907348633
    10. '(' → logprob: -22.250001907348633

Token 545: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. '.split' → logprob: -18.0
    3. ' split' → logprob: -18.5
    4. '(split' → logprob: -19.0
    5. 'strip' → logprob: -20.875
    6. 'spl' → logprob: -21.75
    7. 'rstrip' → logprob: -23.0
    8. 'plit' → logprob: -23.5
    9. '_split' → logprob: -23.875
    10. '().' → logprob: -25.0

Token 546: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0073738847859203815
    2. '()' → logprob: -5.007373809814453
    3. '()))
' → logprob: -7.382373809814453
    4. '(' → logprob: -10.757373809814453
    5. '('' → logprob: -12.257373809814453
    6. '())' → logprob: -12.757373809814453
    7. '())))' → logprob: -13.007373809814453
    8. '()))

' → logprob: -13.507373809814453
    9. '))' → logprob: -13.632373809814453
    10. '()));' → logprob: -14.007373809814453

Token 547: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6773747205734253
    2. 'def' → logprob: -1.3023747205734253
    3. '<|end|>' → logprob: -1.8023747205734253
    4. '   ' → logprob: -3.552374839782715
    5. '
' → logprob: -4.052374839782715
    6. '<|end|>' → logprob: -5.177374839782715
    7. '```' → logprob: -6.177374839782715
    8. ')' → logprob: -7.927374839782715
    9. '    
' → logprob: -8.552374839782715
    10. ' def' → logprob: -8.802374839782715

Token 548: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16892790794372559
    2. 'class' → logprob: -2.1689279079437256
    3. 'def' → logprob: -3.2939279079437256
    4. '```' → logprob: -6.168928146362305
    5. '<|end|>' → logprob: -6.668928146362305
    6. '
' → logprob: -8.043928146362305
    7. ' class' → logprob: -8.793928146362305
    8. '<|end|>' → logprob: -10.043928146362305
    9. ' def' → logprob: -10.168928146362305
    10. '    
' → logprob: -10.543928146362305

Token 549: ' Abstract' (ID: 17413)
  Prédit: 'File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'File' → logprob: -0.6002955436706543
    2. 'Monster' → logprob: -1.2252955436706543
    3. ' Monster' → logprob: -2.9752955436706543
    4. 'Test' → logprob: -4.475295543670654
    5. 'Battle' → logprob: -4.475295543670654
    6. 'Simulator' → logprob: -4.725295543670654
    7. 'Solver' → logprob: -4.850295543670654
    8. 'Code' → logprob: -4.850295543670654
    9. 'Output' → logprob: -4.975295543670654
    10. 'Solution' → logprob: -5.100295543670654

Token 550: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.25409650802612305
    2. 'Solver' → logprob: -1.754096508026123
    3. 'Processor' → logprob: -4.129096508026123
    4. 'Writer' → logprob: -4.254096508026123
    5. 'Solution' → logprob: -5.129096508026123
    6. 'Monster' → logprob: -6.254096508026123
    7. 'Algorithm' → logprob: -6.254096508026123
    8. 'Battle' → logprob: -6.379096508026123
    9. 'Generator' → logprob: -6.879096508026123
    10. 'File' → logprob: -7.004096508026123

Token 551: ':
' (ID: 734)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.000494533043820411
    2. 'Handler' → logprob: -7.750494480133057
    3. 'Reader' → logprob: -10.750494956970215
    4. ':
' → logprob: -11.250494956970215
    5. 'class' → logprob: -11.375494956970215
    6. 'writer' → logprob: -12.250494956970215
    7. 'Renderer' → logprob: -12.500494956970215
    8. 'ter' → logprob: -13.250494956970215
    9. 'Printer' → logprob: -13.375494956970215
    10. '_writer' → logprob: -13.375494956970215

Token 552: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7514615058898926
    2. '   ' → logprob: -0.7514615058898926
    3. ':
' → logprob: -2.8764615058898926
    4. 'def' → logprob: -9.376461029052734
    5. 'class' → logprob: -9.876461029052734
    6. '(Abstract' → logprob: -10.001461029052734
    7. '```' → logprob: -10.251461029052734
    8. ' def' → logprob: -10.376461029052734
    9. '):
' → logprob: -11.251461029052734
    10. '<|end|>' → logprob: -11.376461029052734

Token 553: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10041499137878418
    2. 'class' → logprob: -2.350414991378784
    3. ' def' → logprob: -8.600415229797363
    4. '   ' → logprob: -10.725415229797363
    5. 'import' → logprob: -13.975415229797363
    6. '```' → logprob: -14.600415229797363
    7. ' class' → logprob: -14.850415229797363
    8. 'from' → logprob: -14.850415229797363
    9. '
' → logprob: -15.975415229797363
    10. 'pass' → logprob: -16.225414276123047

Token 554: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030309680849313736
    2. ' def' → logprob: -4.030309677124023
    3. 'init' → logprob: -4.780309677124023
    4. 'class' → logprob: -6.280309677124023
    5. 'staticmethod' → logprob: -7.030309677124023
    6. 'classmethod' → logprob: -7.780309677124023
    7. 'abstract' → logprob: -8.780309677124023
    8. 'n' → logprob: -9.405309677124023
    9. 'b' → logprob: -9.655309677124023
    10. 'int' → logprob: -10.280309677124023

Token 555: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0003812217037193477
    2. 'def' → logprob: -7.875380992889404
    3. 'call' → logprob: -14.875381469726562
    4. 'next' → logprob: -15.000381469726562
    5. ' init' → logprob: -16.625381469726562
    6. 'class' → logprob: -16.750381469726562
    7. 'ini' → logprob: -16.875381469726562
    8. '_' → logprob: -17.500381469726562
    9. 'pass' → logprob: -17.625381469726562
    10. '_init' → logprob: -17.750381469726562

Token 556: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007843759376555681
    2. '__(' → logprob: -7.375784397125244
    3. '   ' → logprob: -9.750783920288086
    4. 'self' → logprob: -9.875783920288086
    5. '(' → logprob: -10.625783920288086
    6. ' (' → logprob: -11.500783920288086
    7. '()' → logprob: -12.250783920288086
    8. '       ' → logprob: -12.625783920288086
    9. '():
' → logprob: -13.125783920288086
    10. '```' → logprob: -14.500783920288086

Token 557: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.717296517104842e-05
    2. '):
' → logprob: -10.375057220458984
    3. ')' → logprob: -10.625057220458984
    4. '):' → logprob: -14.375057220458984
    5. ' self' → logprob: -14.625057220458984
    6. '
' → logprob: -16.000057220458984
    7. '	self' → logprob: -16.500057220458984
    8. '(self' → logprob: -16.500057220458984
    9. ')(' → logprob: -16.500057220458984
    10. '   ' → logprob: -16.625057220458984

Token 558: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6937283277511597
    2. '):' → logprob: -0.6937283277511597
    3. ',' → logprob: -8.19372844696045
    4. 'self' → logprob: -8.19372844696045
    5. '(self' → logprob: -11.69372844696045
    6. '   ' → logprob: -11.94372844696045
    7. '):
' → logprob: -12.06872844696045
    8. ')' → logprob: -12.94372844696045
    9. ',self' → logprob: -13.44372844696045
    10. '():
' → logprob: -14.19372844696045

Token 559: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3889043629169464
    2. 'self' → logprob: -1.388904333114624
    3. '       ' → logprob: -2.638904333114624
    4. 'def' → logprob: -6.763904571533203
    5. 'pass' → logprob: -8.513904571533203
    6. '(self' → logprob: -10.638904571533203
    7. '
' → logprob: -11.138904571533203
    8. ' self' → logprob: -11.513904571533203
    9. 'class' → logprob: -13.263904571533203
    10. '```' → logprob: -13.638904571533203

Token 560: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.049813129007816315
    2. '   ' → logprob: -3.0498130321502686
    3. 'def' → logprob: -7.049813270568848
    4. ' pass' → logprob: -8.049813270568848
    5. '       ' → logprob: -10.674813270568848
    6. '	pass' → logprob: -11.174813270568848
    7. 'pas' → logprob: -15.049813270568848
    8. 'self' → logprob: -15.674813270568848
    9. '    
' → logprob: -15.674813270568848
    10. '
' → logprob: -15.799813270568848

Token 561: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002671768015716225
    2. 'def' → logprob: -9.000267028808594
    3. ' def' → logprob: -9.625267028808594
    4. '<|end|>' → logprob: -10.250267028808594
    5. '```' → logprob: -11.250267028808594
    6. '
' → logprob: -11.500267028808594
    7. 'class' → logprob: -11.500267028808594
    8. '    
' → logprob: -12.125267028808594
    9. '<|end|>' → logprob: -13.250267028808594
    10. ' ' → logprob: -14.625267028808594

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019906602799892426
    2. 'def' → logprob: -4.269906520843506
    3. ' def' → logprob: -5.269906520843506
    4. 'class' → logprob: -7.519906520843506
    5. '
' → logprob: -10.894906997680664
    6. '```' → logprob: -11.144906997680664
    7. '<|end|>' → logprob: -13.144906997680664
    8. '	def' → logprob: -13.394906997680664
    9. ' class' → logprob: -13.644906997680664
    10. ' ' → logprob: -14.144906997680664

Token 563: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -15.000000953674316
    3. 'from' → logprob: -15.625000953674316
    4. 'class' → logprob: -16.75
    5. '   ' → logprob: -17.25
    6. 'de' → logprob: -19.375
    7. '
' → logprob: -20.125
    8. 'import' → logprob: -21.125
    9. '	def' → logprob: -21.375
    10. '```' → logprob: -22.375

Token 564: ' write' (ID: 5067)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3888547420501709
    2. 'write' → logprob: -1.138854742050171
    3. ' print' → logprob: -7.13885498046875
    4. ' write' → logprob: -7.38885498046875
    5. 'println' → logprob: -7.88885498046875
    6. 'output' → logprob: -9.01385498046875
    7. 'put' → logprob: -10.26385498046875
    8. 'w' → logprob: -11.13885498046875
    9. 'display' → logprob: -11.76385498046875
    10. ' output' → logprob: -12.13885498046875

Token 565: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.3052128255367279
    2. '(' → logprob: -2.0552127361297607
    3. '(self' → logprob: -2.0552127361297607
    4. '(s' → logprob: -6.30521297454834
    5. '_output' → logprob: -6.43021297454834
    6. '_result' → logprob: -6.93021297454834
    7. '_' → logprob: -7.05521297454834
    8. '_lines' → logprob: -8.05521297454834
    9. '(_' → logprob: -8.18021297454834
    10. '(
' → logprob: -8.18021297454834

Token 566: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002479581395164132
    2. '(' → logprob: -6.002479553222656
    3. '(
' → logprob: -13.002479553222656
    4. 'self' → logprob: -13.627479553222656
    5. ' (' → logprob: -15.752479553222656
    6. '(s' → logprob: -16.002479553222656
    7. '   ' → logprob: -16.127479553222656
    8. '       ' → logprob: -17.252479553222656
    9. '(this' → logprob: -17.377479553222656
    10. 'def' → logprob: -17.877479553222656

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019123381935060024
    2. ')' → logprob: -7.0019121170043945
    3. '):' → logprob: -7.0019121170043945
    4. 'self' → logprob: -10.251912117004395
    5. ' ,' → logprob: -10.751912117004395
    6. '):
' → logprob: -11.376912117004395
    7. ',text' → logprob: -11.626912117004395
    8. 's' → logprob: -12.376912117004395
    9. ',s' → logprob: -13.126912117004395
    10. ',line' → logprob: -13.501912117004395

Token 568: ' line' (ID: 2543)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.20999851822853088
    2. 's' → logprob: -2.334998607635498
    3. 'line' → logprob: -2.834998607635498
    4. ' text' → logprob: -4.459998607635498
    5. ' s' → logprob: -4.584998607635498
    6. 'string' → logprob: -5.584998607635498
    7. ')' → logprob: -5.709998607635498
    8. ' line' → logprob: -6.334998607635498
    9. 'output' → logprob: -6.959998607635498
    10. 'content' → logprob: -7.334998607635498

Token 569: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048731230199337006
    2. '):
' → logprob: -3.0487313270568848
    3. ':' → logprob: -9.173730850219727
    4. ')' → logprob: -10.923730850219727
    5. '   ' → logprob: -11.548730850219727
    6. '       ' → logprob: -12.548730850219727
    7. '):
' → logprob: -12.673730850219727
    8. ',' → logprob: -12.798730850219727
    9. 'self' → logprob: -13.798730850219727
    10. ' ):' → logprob: -14.548730850219727

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014230141416192055
    2. 'raise' → logprob: -4.514230251312256
    3. ' raise' → logprob: -5.764230251312256
    4. 'pass' → logprob: -10.889229774475098
    5. 'Not' → logprob: -11.889229774475098
    6. '	raise' → logprob: -12.139229774475098
    7. '
' → logprob: -13.014229774475098
    8. '   ' → logprob: -13.139229774475098
    9. 'Raise' → logprob: -14.264229774475098
    10. ' pass' → logprob: -14.514229774475098

Token 571: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.006410997826606035
    2. '       ' → logprob: -5.506411075592041
    3. 'pass' → logprob: -6.756411075592041
    4. ' raise' → logprob: -7.006411075592041
    5. 'print' → logprob: -8.256410598754883
    6. '#' → logprob: -15.631410598754883
    7. '	raise' → logprob: -15.631410598754883
    8. 'import' → logprob: -15.881410598754883
    9. 'assert' → logprob: -16.006410598754883
    10. ' pass' → logprob: -16.131410598754883

Token 572: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -8.2994620242971e-06
    2. ' Not' → logprob: -11.750008583068848
    3. '_Not' → logprob: -15.625008583068848
    4. '_not' → logprob: -15.750008583068848
    5. '@Not' → logprob: -17.62500762939453
    6. 'not' → logprob: -18.25000762939453
    7. '(Not' → logprob: -18.50000762939453
    8. '```' → logprob: -19.50000762939453
    9. '\Not' → logprob: -19.62500762939453
    10. '.Not' → logprob: -20.25000762939453

Token 573: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.5970708131790161
    2. 'ot' → logprob: -0.8470708131790161
    3. 'Not' → logprob: -4.097070693969727
    4. 'plement' → logprob: -6.097070693969727
    5. 'Error' → logprob: -7.347070693969727
    6. 'implemented' → logprob: -7.347070693969727
    7. 'oted' → logprob: -7.722070693969727
    8. 'ented' → logprob: -9.347070693969727
    9. 'OT' → logprob: -9.722070693969727
    10. 'Implement' → logprob: -11.222070693969727

Token 574: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0013420163886621594
    2. 'Not' → logprob: -7.001341819763184
    3. 'Implemented' → logprob: -7.751341819763184
    4. 'Warning' → logprob: -16.1263427734375
    5. 'Output' → logprob: -17.5013427734375
    6. 'Implement' → logprob: -17.7513427734375
    7. 'Found' → logprob: -17.8763427734375
    8. 'rror' → logprob: -18.0013427734375
    9. '```' → logprob: -18.0013427734375
    10. 'Required' → logprob: -18.5013427734375

Token 575: '


' (ID: 2499)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24341458082199097
    2. 'class' → logprob: -1.8684146404266357
    3. '
' → logprob: -2.9934146404266357
    4. '<|end|>' → logprob: -4.618414402008057
    5. '    
' → logprob: -7.243414402008057
    6. '<|end|>' → logprob: -7.743414402008057
    7. 'def' → logprob: -8.493414878845215
    8. '

' → logprob: -9.243414878845215
    9. '  
' → logprob: -9.618414878845215
    10. '```' → logprob: -10.368414878845215

Token 576: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00012451570364646614
    2. '
' → logprob: -9.00012493133545
    3. 'def' → logprob: -15.12512493133545
    4. ' class' → logprob: -15.12512493133545
    5. '

' → logprob: -15.75012493133545
    6. '<class' → logprob: -15.87512493133545
    7. '    
' → logprob: -16.500123977661133
    8. '  
' → logprob: -16.500123977661133
    9. '```' → logprob: -16.625123977661133
    10. '   ' → logprob: -18.125123977661133

Token 577: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.10108907520771027
    2. 'Console' → logprob: -2.3510890007019043
    3. ' Std' → logprob: -7.476089000701904
    4. ' Console' → logprob: -9.226089477539062
    5. 'Print' → logprob: -9.226089477539062
    6. 'Standard' → logprob: -10.476089477539062
    7. 'Simple' → logprob: -10.601089477539062
    8. 'List' → logprob: -10.601089477539062
    9. 'Concrete' → logprob: -11.476089477539062
    10. 'Plain' → logprob: -11.476089477539062

Token 578: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 'Input' → logprob: -20.125
    3. 'output' → logprob: -20.25
    4. 'Out' → logprob: -22.5
    5. '_output' → logprob: -22.5
    6. '	Output' → logprob: -22.75
    7. ' Output' → logprob: -23.0
    8. '.Output' → logprob: -23.375
    9. '```' → logprob: -23.875
    10. '_Output' → logprob: -23.875

Token 579: '(Abstract' (ID: 94462)
  Prédit: '(Abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Abstract' → logprob: -0.09616529196500778
    2. ':' → logprob: -2.846165180206299
    3. 'Output' → logprob: -4.096165180206299
    4. '(' → logprob: -4.971165180206299
    5. '(Output' → logprob: -4.971165180206299
    6. ':
' → logprob: -6.471165180206299
    7. 'Writer' → logprob: -6.721165180206299
    8. '):' → logprob: -8.346165657043457
    9. '():' → logprob: -10.596165657043457
    10. ':

' → logprob: -10.971165657043457

Token 580: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 'output' → logprob: -19.25
    3. '(Output' → logprob: -19.875
    4. ' Output' → logprob: -20.5
    5. '	Output' → logprob: -20.5
    6. '_output' → logprob: -21.125
    7. '
' → logprob: -21.625
    8. '.Output' → logprob: -22.0
    9. '_Output' → logprob: -22.5
    10. '-output' → logprob: -22.625

Token 581: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47541218996047974
    2. '):' → logprob: -0.9754121899604797
    3. ':' → logprob: -7.100412368774414
    4. '   ' → logprob: -7.850412368774414
    5. ':
' → logprob: -9.225412368774414
    6. '):
' → logprob: -11.725412368774414
    7. ')' → logprob: -12.350412368774414
    8. '():' → logprob: -12.725412368774414
    9. '():
' → logprob: -12.850412368774414
    10. '):

' → logprob: -13.350412368774414

Token 582: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.273621405242011e-05
    2. ':' → logprob: -10.500032424926758
    3. 'def' → logprob: -12.750032424926758
    4. ' def' → logprob: -13.875032424926758
    5. ':
' → logprob: -14.375032424926758
    6. '```' → logprob: -14.750032424926758
    7. '):
' → logprob: -16.000032424926758
    8. '
' → logprob: -16.250032424926758
    9. '    
' → logprob: -16.875032424926758
    10. '<|end|>' → logprob: -17.000032424926758

Token 583: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1030820682644844
    2. '   ' → logprob: -2.3530821800231934
    3. ' def' → logprob: -5.853082180023193
    4. 'class' → logprob: -15.978081703186035
    5. '	def' → logprob: -16.22808265686035
    6. '
' → logprob: -17.35308265686035
    7. ' ' → logprob: -17.60308265686035
    8. '```' → logprob: -17.60308265686035
    9. '  ' → logprob: -17.97808265686035
    10. '_def' → logprob: -18.97808265686035

Token 584: ' write' (ID: 5067)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.571139395236969
    2. 'def' → logprob: -1.3211393356323242
    3. ' __' → logprob: -1.8211393356323242
    4. '__' → logprob: -5.196139335632324
    5. 'write' → logprob: -7.696139335632324
    6. ' write' → logprob: -8.571139335632324
    7. ' ' → logprob: -9.821139335632324
    8. '_init' → logprob: -10.071139335632324
    9. 'init' → logprob: -10.071139335632324
    10. '_def' → logprob: -10.071139335632324

Token 585: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.080963092041202e-06
    2. '_l' → logprob: -13.250004768371582
    3. '_li' → logprob: -13.750004768371582
    4. '_' → logprob: -13.875004768371582
    5. '_lin' → logprob: -14.375004768371582
    6. '_lines' → logprob: -15.625004768371582
    7. '_LINE' → logprob: -15.625004768371582
    8. '_lineno' → logprob: -16.6250057220459
    9. '_ln' → logprob: -16.7500057220459
    10. '_Line' → logprob: -16.8750057220459

Token 586: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.062131367623806
    2. '(' → logprob: -2.812131404876709
    3. ' (' → logprob: -8.93713092803955
    4. '(
' → logprob: -10.56213092803955
    5. '(line' → logprob: -13.18713092803955
    6. '(s' → logprob: -13.31213092803955
    7. '   ' → logprob: -13.43713092803955
    8. '(sel' → logprob: -14.56213092803955
    9. 'self' → logprob: -14.81213092803955
    10. ' ' → logprob: -16.312131881713867

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011346068233251572
    2. '(self' → logprob: -4.886345863342285
    3. 'self' → logprob: -6.011345863342285
    4. ')' → logprob: -7.386345863342285
    5. '):' → logprob: -8.136345863342285
    6. '(' → logprob: -9.386345863342285
    7. ')(' → logprob: -9.636345863342285
    8. ',self' → logprob: -9.636345863342285
    9. ' ,' → logprob: -10.011345863342285
    10. '   ' → logprob: -10.136345863342285

Token 588: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04925292357802391
    2. 'str' → logprob: -3.049252986907959
    3. ' line' → logprob: -7.424252986907959
    4. ' str' → logprob: -10.4242525100708
    5. ')' → logprob: -11.2992525100708
    6. 'lambda' → logprob: -11.7992525100708
    7. 'self' → logprob: -11.7992525100708
    8. 's' → logprob: -12.4242525100708
    9. 'print' → logprob: -12.7992525100708
    10. '(line' → logprob: -13.0492525100708

Token 589: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.33481454849243164
    2. '):' → logprob: -1.3348145484924316
    3. ',' → logprob: -4.459814548492432
    4. '(self' → logprob: -5.334814548492432
    5. 'self' → logprob: -5.959814548492432
    6. '       ' → logprob: -6.959814548492432
    7. '   ' → logprob: -6.959814548492432
    8. ')' → logprob: -8.584814071655273
    9. '):
' → logprob: -9.084814071655273
    10. ':' → logprob: -10.084814071655273

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01916637271642685
    2. 'print' → logprob: -4.019166469573975
    3. ' print' → logprob: -6.894166469573975
    4. '   ' → logprob: -13.394165992736816
    5. '```' → logprob: -14.519165992736816
    6. '	print' → logprob: -16.144166946411133
    7. '           ' → logprob: -16.644166946411133
    8. '.print' → logprob: -16.894166946411133
    9. '               ' → logprob: -17.769166946411133
    10. '(print' → logprob: -18.269166946411133

Token 591: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -18.25
    3. '   ' → logprob: -21.0
    4. '       ' → logprob: -21.75
    5. 'pr' → logprob: -24.375
    6. '
' → logprob: -24.875
    7. 'import' → logprob: -25.625
    8. 'prin' → logprob: -26.25
    9. '```' → logprob: -26.375
    10. 'println' → logprob: -26.625

Token 592: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. '=line' → logprob: -17.000017166137695
    4. '(Line' → logprob: -17.375017166137695
    5. '()' → logprob: -17.500017166137695
    6. '(f' → logprob: -18.125017166137695
    7. '[line' → logprob: -18.250017166137695
    8. '(lines' → logprob: -19.000017166137695
    9. '#line' → logprob: -19.500017166137695
    10. '(
' → logprob: -19.875017166137695

Token 593: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. ')
' → logprob: -16.25
    4. '())' → logprob: -20.125
    5. '))' → logprob: -20.125
    6. ')return' → logprob: -20.375
    7. '   ' → logprob: -20.375
    8. ')}' → logprob: -20.375
    9. '<|end|>' → logprob: -20.5
    10. '),' → logprob: -20.625

Token 594: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16026932001113892
    2. 'class' → logprob: -1.9102692604064941
    3. '```' → logprob: -10.410269737243652
    4. '
' → logprob: -11.410269737243652
    5. '    
' → logprob: -13.785269737243652
    6. '  
' → logprob: -14.535269737243652
    7. '

' → logprob: -14.660269737243652
    8. 'import' → logprob: -14.785269737243652
    9. ' class' → logprob: -14.785269737243652
    10. 'if' → logprob: -15.035269737243652

Token 595: ' Battle' (ID: 31075)
  Prédit: 'Monster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monster' → logprob: -0.7224726676940918
    2. 'Battle' → logprob: -1.4724726676940918
    3. 'Solver' → logprob: -2.222472667694092
    4. 'Solution' → logprob: -2.347472667694092
    5. ' Monster' → logprob: -3.222472667694092
    6. 'Game' → logprob: -4.097472667694092
    7. 'Main' → logprob: -5.222472667694092
    8. ' Battle' → logprob: -5.347472667694092
    9. 'Problem' → logprob: -5.972472667694092
    10. 'Runner' → logprob: -6.097472667694092

Token 596: 'Solution' (ID: 44456)
  Prédit: 'Simulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Simulator' → logprob: -0.026417681947350502
    2. 'Result' → logprob: -4.6514177322387695
    3. 'Solver' → logprob: -4.9014177322387695
    4. 'Manager' → logprob: -5.0264177322387695
    5. 'Outcome' → logprob: -7.4014177322387695
    6. 'Scheduler' → logprob: -8.27641773223877
    7. 'Handler' → logprob: -8.40141773223877
    8. 'Runner' → logprob: -8.40141773223877
    9. 'Strategy' → logprob: -8.40141773223877
    10. 'Battle' → logprob: -8.65141773223877

Token 597: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1269298940896988
    2. ':
' → logprob: -2.126929998397827
    3. ':

' → logprob: -13.751930236816406
    4. ':
' → logprob: -15.751930236816406
    5. ':def' → logprob: -15.876930236816406
    6. '(' → logprob: -16.501930236816406
    7. '   ' → logprob: -16.626930236816406
    8. '):' → logprob: -16.876930236816406
    9. '(Abstract' → logprob: -16.876930236816406
    10. ' :' → logprob: -17.251930236816406

Token 598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032926726271398365
    2. ':
' → logprob: -8.50032901763916
    3. ':' → logprob: -9.50032901763916
    4. 'def' → logprob: -10.37532901763916
    5. ' def' → logprob: -11.00032901763916
    6. '```' → logprob: -13.37532901763916
    7. ':def' → logprob: -15.25032901763916
    8. '
' → logprob: -15.37532901763916
    9. 'class' → logprob: -15.75032901763916
    10. '  ' → logprob: -15.87532901763916

Token 599: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011914712376892567
    2. ' def' → logprob: -5.0119147300720215
    3. '   ' → logprob: -5.2619147300720215
    4. '	def' → logprob: -14.886914253234863
    5. '@' → logprob: -16.51191520690918
    6. 'class' → logprob: -16.76191520690918
    7. ' ' → logprob: -18.38691520690918
    8. '__' → logprob: -18.51191520690918
    9. ':def' → logprob: -18.76191520690918
    10. '```' → logprob: -18.88691520690918

Token 600: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47409290075302124
    2. ' __' → logprob: -0.9740929007530212
    3. 'def' → logprob: -11.474092483520508
    4. ' def' → logprob: -12.599092483520508
    5. ' run' → logprob: -14.224092483520508
    6. 'solve' → logprob: -14.224092483520508
    7. ' solve' → logprob: -14.599092483520508
    8. 'run' → logprob: -15.224092483520508
    9. '.__' → logprob: -16.974092483520508
    10. ' ' → logprob: -17.974092483520508

Token 601: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. ' init' → logprob: -19.125
    4. 'call' → logprob: -19.125
    5. '(init' → logprob: -19.125
    6. 'def' → logprob: -19.25
    7. '__' → logprob: -20.375
    8. '	init' → logprob: -20.625
    9. 'inite' → logprob: -20.625
    10. 'new' → logprob: -20.875

Token 602: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07080075144767761
    2. '(self' → logprob: -2.69580078125
    3. '(' → logprob: -7.94580078125
    4. '_(' → logprob: -8.57080078125
    5. '__(
' → logprob: -8.94580078125
    6. '   ' → logprob: -9.69580078125
    7. ' (' → logprob: -9.69580078125
    8. 'self' → logprob: -10.44580078125
    9. '__' → logprob: -11.32080078125
    10. '       ' → logprob: -11.44580078125

Token 603: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.1928003813372925e-05
    2. '
' → logprob: -10.500051498413086
    3. '   ' → logprob: -11.375051498413086
    4. '       ' → logprob: -11.625051498413086
    5. ' self' → logprob: -13.125051498413086
    6. '(self' → logprob: -14.125051498413086
    7. ',' → logprob: -14.875051498413086
    8. '):
' → logprob: -15.000051498413086
    9. ')' → logprob: -15.500051498413086
    10. ',self' → logprob: -16.125051498413086

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05063098669052124
    2. 'self' → logprob: -3.050631046295166
    3. '(self' → logprob: -6.925631046295166
    4. '       ' → logprob: -7.925631046295166
    5. '   ' → logprob: -8.300630569458008
    6. ',self' → logprob: -8.675630569458008
    7. ' ,' → logprob: -9.300630569458008
    8. ' (' → logprob: -10.050630569458008
    9. ',
' → logprob: -10.175630569458008
    10. '
' → logprob: -10.300630569458008

Token 605: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.019601663574576378
    2. ' input' → logprob: -4.644601821899414
    3. 'own' → logprob: -5.269601821899414
    4. 'reader' → logprob: -5.769601821899414
    5. 'self' → logprob: -6.769601821899414
    6. ' own' → logprob: -8.769601821899414
    7. ' reader' → logprob: -9.769601821899414
    8. 'output' → logprob: -9.894601821899414
    9. 'datasets' → logprob: -9.894601821899414
    10. '   ' → logprob: -11.394601821899414

Token 606: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -4.215330409351736e-05
    2. 'Reader' → logprob: -10.250041961669922
    3. 'reader' → logprob: -12.250041961669922
    4. '_source' → logprob: -14.125041961669922
    5. '_writer' → logprob: -14.625041961669922
    6. '_handler' → logprob: -15.250041961669922
    7. '   ' → logprob: -15.750041961669922
    8. ',' → logprob: -16.375041961669922
    9. ':' → logprob: -16.625041961669922
    10. '):
' → logprob: -16.875041961669922

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.538490950129926e-05
    2. '):' → logprob: -10.375055313110352
    3. ' ,' → logprob: -11.000055313110352
    4. '):
' → logprob: -12.125055313110352
    5. ':' → logprob: -13.500055313110352
    6. ',
' → logprob: -15.250055313110352
    7. ',input' → logprob: -16.12505531311035
    8. '   ' → logprob: -16.50005531311035
    9. '‌,' → logprob: -17.75005531311035
    10. '       ' → logprob: -18.50005531311035

Token 608: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.3868767023086548
    2. ' output' → logprob: -1.1368767023086548
    3. '   ' → logprob: -13.011877059936523
    4. ' ' → logprob: -13.636877059936523
    5. '	output' → logprob: -13.636877059936523
    6. '  ' → logprob: -14.511877059936523
    7. '(output' → logprob: -15.511877059936523
    8. '    ' → logprob: -15.886877059936523
    9. 'out' → logprob: -16.761877059936523
    10. '_output' → logprob: -17.511877059936523

Token 609: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -0.062015634030103683
    2. '_reader' → logprob: -2.8120155334472656
    3. '_output' → logprob: -11.187015533447266
    4. '_receiver' → logprob: -11.937015533447266
    5. ')_' → logprob: -12.187015533447266
    6. ')' → logprob: -12.687015533447266
    7. '_w' → logprob: -12.937015533447266
    8. '_handler' → logprob: -12.937015533447266
    9. '_runner' → logprob: -12.937015533447266
    10. '_view' → logprob: -13.687015533447266

Token 610: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2519405782222748
    2. '):
' → logprob: -1.5019406080245972
    3. ')' → logprob: -12.626940727233887
    4. '   ' → logprob: -12.626940727233887
    5. '):
' → logprob: -12.626940727233887
    6. ':' → logprob: -14.751940727233887
    7. ',' → logprob: -14.751940727233887
    8. '       ' → logprob: -14.876940727233887
    9. '):

' → logprob: -15.376940727233887
    10. ' ):' → logprob: -16.00193977355957

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001833088113926351
    2. '   ' → logprob: -7.376832962036133
    3. 'self' → logprob: -7.751832962036133
    4. ':' → logprob: -7.876832962036133
    5. ' self' → logprob: -9.251832962036133
    6. ',' → logprob: -9.876832962036133
    7. '(self' → logprob: -10.001832962036133
    8. '```' → logprob: -10.126832962036133
    9. 'def' → logprob: -10.501832962036133
    10. '):
' → logprob: -10.626832962036133

Token 612: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004986235871911049
    2. ' self' → logprob: -5.50498628616333
    3. '       ' → logprob: -7.00498628616333
    4. '	self' → logprob: -16.879985809326172
    5. '(self' → logprob: -17.629985809326172
    6. '   ' → logprob: -17.754985809326172
    7. 'def' → logprob: -19.754985809326172
    8. 'import' → logprob: -19.879985809326172
    9. 'class' → logprob: -20.129985809326172
    10. ' ' → logprob: -20.129985809326172

Token 613: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.0001855406299000606
    2. '.' → logprob: -8.8751859664917
    3. '.output' → logprob: -10.3751859664917
    4. '.reader' → logprob: -12.1251859664917
    5. 'input' → logprob: -12.5001859664917
    6. '=input' → logprob: -13.5001859664917
    7. '.inputs' → logprob: -13.8751859664917
    8. ' .' → logprob: -14.1251859664917
    9. '.INPUT' → logprob: -14.8751859664917
    10. '.data' → logprob: -15.5001859664917

Token 614: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.0015166497323662043
    2. '_writer' → logprob: -6.501516819000244
    3. '_' → logprob: -11.876516342163086
    4. ' _' → logprob: -13.751516342163086
    5. '_read' → logprob: -14.001516342163086
    6. '=_' → logprob: -14.126516342163086
    7. 's' → logprob: -14.251516342163086
    8. '   ' → logprob: -14.251516342163086
    9. '=' → logprob: -14.376516342163086
    10. ' =' → logprob: -14.876516342163086

Token 615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197351589798927
    2. ' =' → logprob: -2.8119735717773438
    3. '=input' → logprob: -12.436973571777344
    4. '   ' → logprob: -14.061973571777344
    5. '=self' → logprob: -14.561973571777344
    6. ',' → logprob: -14.561973571777344
    7. '       ' → logprob: -15.686973571777344
    8. ')' → logprob: -17.061973571777344
    9. '    ' → logprob: -17.186973571777344
    10. '.' → logprob: -17.436973571777344

Token 616: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023245595395565033
    2. ' input' → logprob: -3.7732455730438232
    3. '=input' → logprob: -16.648244857788086
    4. 'output' → logprob: -17.148244857788086
    5. '_input' → logprob: -17.773244857788086
    6. '(input' → logprob: -17.898244857788086
    7. 'import' → logprob: -18.023244857788086
    8. '<input' → logprob: -18.273244857788086
    9. '	input' → logprob: -18.398244857788086
    10. ',input' → logprob: -19.523244857788086

Token 617: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.0004311460361350328
    2. '_writer' → logprob: -7.750431060791016
    3. 'reader' → logprob: -14.750431060791016
    4. 'Reader' → logprob: -16.000431060791016
    5. '   ' → logprob: -19.125431060791016
    6. '_read' → logprob: -19.625431060791016
    7. '.Reader' → logprob: -19.750431060791016
    8. '-reader' → logprob: -19.750431060791016
    9. '\' → logprob: -20.375431060791016
    10. '_output' → logprob: -20.750431060791016

Token 618: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08330115675926208
    2. '<|end|>' → logprob: -2.958301067352295
    3. '
' → logprob: -3.708301067352295
    4. '   ' → logprob: -6.333301067352295
    5. '<|end|>' → logprob: -7.208301067352295
    6. 'self' → logprob: -7.583301067352295
    7. 'def' → logprob: -8.708301544189453
    8. ' self' → logprob: -9.333301544189453
    9. ' ' → logprob: -9.708301544189453
    10. ',' → logprob: -10.458301544189453

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016457878518849611
    2. '   ' → logprob: -7.001645565032959
    3. 'self' → logprob: -7.376645565032959
    4. ' self' → logprob: -9.751646041870117
    5. '<|end|>' → logprob: -10.251646041870117
    6. 'def' → logprob: -12.126646041870117
    7. '
' → logprob: -13.001646041870117
    8. '           ' → logprob: -13.126646041870117
    9. '	self' → logprob: -13.876646041870117
    10. '<|end|>' → logprob: -14.001646041870117

Token 620: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004703530576080084
    2. ' self' → logprob: -8.250470161437988
    3. '       ' → logprob: -8.500470161437988
    4. 'output' → logprob: -12.250470161437988
    5. '   ' → logprob: -14.375470161437988
    6. '	self' → logprob: -15.875470161437988
    7. '           ' → logprob: -17.375471115112305
    8. ' ' → logprob: -17.875471115112305
    9. '
' → logprob: -18.000471115112305
    10. '      ' → logprob: -18.125471115112305

Token 621: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.002899736166000366
    2. '.' → logprob: -5.877899646759033
    3. 'output' → logprob: -9.877900123596191
    4. '.input' → logprob: -11.377900123596191
    5. '.writer' → logprob: -11.377900123596191
    6. ' .' → logprob: -11.877900123596191
    7. '
' → logprob: -13.127900123596191
    8. '.
' → logprob: -13.252900123596191
    9. '._' → logprob: -13.377900123596191
    10. '.write' → logprob: -13.502900123596191

Token 622: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -5.872261317563243e-05
    2. '_reader' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.750059127807617
    4. '_w' → logprob: -16.000059127807617
    5. '_write' → logprob: -17.000059127807617
    6. '       ' → logprob: -18.125059127807617
    7. 'writer' → logprob: -18.375059127807617
    8. '._' → logprob: -18.375059127807617
    9. '=' → logprob: -18.875059127807617
    10. '_' → logprob: -19.000059127807617

Token 623: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02709653042256832
    2. ' =' → logprob: -3.6520965099334717
    3. '   ' → logprob: -7.652096748352051
    4. '.' → logprob: -8.90209674835205
    5. '=
' → logprob: -9.15209674835205
    6. '       ' → logprob: -10.77709674835205
    7. 'def' → logprob: -10.90209674835205
    8. '.write' → logprob: -11.65209674835205
    9. ' =
' → logprob: -12.15209674835205
    10. '.=' → logprob: -12.40209674835205

Token 624: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.038043100386857986
    2. ' output' → logprob: -3.2880430221557617
    3. 'input' → logprob: -13.288043022155762
    4. ' input' → logprob: -17.038043975830078
    5. '(output' → logprob: -18.038043975830078
    6. '	output' → logprob: -18.413043975830078
    7. '$output' → logprob: -20.038043975830078
    8. 'out' → logprob: -20.663043975830078
    9. '_output' → logprob: -20.913043975830078
    10. ' ' → logprob: -21.038043975830078

Token 625: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -0.0015051016816869378
    2. '_reader' → logprob: -6.501504898071289
    3. '_w' → logprob: -13.376504898071289
    4. '_' → logprob: -14.876504898071289
    5. 'writer' → logprob: -15.251504898071289
    6. 'Writer' → logprob: -15.626504898071289
    7. '   ' → logprob: -15.876504898071289
    8. '_write' → logprob: -16.50150489807129
    9. '._' → logprob: -16.75150489807129
    10. 'r' → logprob: -17.00150489807129

Token 626: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5240452289581299
    2. '
' → logprob: -0.8990452289581299
    3. '    
' → logprob: -7.899044990539551
    4. 'def' → logprob: -8.52404499053955
    5. '<|end|>' → logprob: -8.52404499053955
    6. ' def' → logprob: -9.64904499053955
    7. '

' → logprob: -10.14904499053955
    8. '<|end|>' → logprob: -10.89904499053955
    9. '        
' → logprob: -11.89904499053955
    10. ' 
' → logprob: -12.14904499053955

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38754215836524963
    2. 'def' → logprob: -1.1375421285629272
    3. '
' → logprob: -7.887542247772217
    4. ' def' → logprob: -8.137541770935059
    5. '    
' → logprob: -13.387541770935059
    6. '	def' → logprob: -13.887541770935059
    7. '```' → logprob: -15.262541770935059
    8. ' ' → logprob: -16.262542724609375
    9. '        
' → logprob: -16.637542724609375
    10. 'class' → logprob: -17.012542724609375

Token 628: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -15.5
    3. '   ' → logprob: -16.0
    4. '	def' → logprob: -21.125
    5. '
' → logprob: -21.5
    6. '    
' → logprob: -24.0
    7. 'de' → logprob: -25.25
    8. ' ' → logprob: -26.0
    9. 'from' → logprob: -26.125
    10. 'class' → logprob: -26.125

Token 629: ' solve' (ID: 17722)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.7924264669418335
    2. ' run' → logprob: -1.0424264669418335
    3. 'def' → logprob: -2.167426586151123
    4. ' def' → logprob: -2.917426586151123
    5. 'solve' → logprob: -3.917426586151123
    6. ' solve' → logprob: -5.417426586151123
    7. 'process' → logprob: -6.667426586151123
    8. ' process' → logprob: -8.042426109313965
    9. 'execute' → logprob: -8.792426109313965
    10. ' execute' → logprob: -11.292426109313965

Token 630: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011714138090610504
    2. '(' → logprob: -6.751171588897705
    3. '(
' → logprob: -14.501171112060547
    4. 'self' → logprob: -14.876171112060547
    5. '(s' → logprob: -15.751171112060547
    6. ' (' → logprob: -16.251171112060547
    7. '(sel' → logprob: -16.251171112060547
    8. '   ' → logprob: -16.876171112060547
    9. '_(' → logprob: -17.501171112060547
    10. '(se' → logprob: -17.501171112060547

Token 631: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4979812800884247
    2. '):' → logprob: -1.247981309890747
    3. '):
' → logprob: -3.122981309890747
    4. '(self' → logprob: -3.247981309890747
    5. 'self' → logprob: -3.997981309890747
    6. '       ' → logprob: -6.247981071472168
    7. '   ' → logprob: -6.497981071472168
    8. ')(' → logprob: -8.622981071472168
    9. '_' → logprob: -9.747981071472168
    10. ',self' → logprob: -9.747981071472168

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.551721889991313e-05
    2. 'while' → logprob: -10.875065803527832
    3. ' for' → logprob: -11.250065803527832
    4. ' while' → logprob: -11.375065803527832
    5. '   ' → logprob: -12.125065803527832
    6. 'for' → logprob: -12.250065803527832
    7. 'n' → logprob: -12.500065803527832
    8. '```' → logprob: -13.125065803527832
    9. ',' → logprob: -13.750065803527832
    10. 'datasets' → logprob: -14.000065803527832

Token 633: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.16400162875652313
    2. '       ' → logprob: -1.9140015840530396
    3. 'while' → logprob: -6.16400146484375
    4. 'for' → logprob: -6.91400146484375
    5. ' datasets' → logprob: -7.41400146484375
    6. ' while' → logprob: -10.91400146484375
    7. 'data' → logprob: -11.03900146484375
    8. ' for' → logprob: -11.53900146484375
    9. '   ' → logprob: -11.53900146484375
    10. 'dataset' → logprob: -12.03900146484375

Token 634: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002068892121315
    2. '=' → logprob: -2.3502068519592285
    3. '   ' → logprob: -15.850207328796387
    4. ' ' → logprob: -17.10020637512207
    5. ':' → logprob: -17.47520637512207
    6. '=self' → logprob: -17.85020637512207
    7. ' =
' → logprob: -17.85020637512207
    8. '=
' → logprob: -18.47520637512207
    9. '       ' → logprob: -18.47520637512207
    10. ')' → logprob: -18.85020637512207

Token 635: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.688212614681106e-05
    2. ' self' → logprob: -11.000017166137695
    3. '       ' → logprob: -16.250017166137695
    4. '   ' → logprob: -20.750017166137695
    5. '           ' → logprob: -21.125017166137695
    6. '(self' → logprob: -21.875017166137695
    7. '	self' → logprob: -23.375017166137695
    8. '[self' → logprob: -23.625017166137695
    9. '               ' → logprob: -24.500017166137695
    10. '=self' → logprob: -25.500017166137695

Token 636: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -4.56102097814437e-05
    2. 'input' → logprob: -10.000045776367188
    3. '.' → logprob: -15.625045776367188
    4. '.output' → logprob: -17.625045776367188
    5. '=input' → logprob: -18.750045776367188
    6. ' input' → logprob: -20.000045776367188
    7. '.user' → logprob: -20.375045776367188
    8. '_input' → logprob: -20.625045776367188
    9. '<input' → logprob: -20.875045776367188
    10. ' .' → logprob: -21.250045776367188

Token 637: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -2.935296834039036e-06
    2. '_writer' → logprob: -12.75000286102295
    3. 'reader' → logprob: -17.125003814697266
    4. '_read' → logprob: -17.875003814697266
    5. 'Reader' → logprob: -19.875003814697266
    6. '-reader' → logprob: -20.750003814697266
    7. '_reads' → logprob: -23.000003814697266
    8. '.reader' → logprob: -23.375003814697266
    9. '	reader' → logprob: -23.500003814697266
    10. '_re' → logprob: -23.625003814697266

Token 638: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.25
    3. 'read' → logprob: -16.875
    4. '.readline' → logprob: -18.75
    5. '.readlines' → logprob: -18.75
    6. ' .' → logprob: -19.875
    7. '.write' → logprob: -21.0
    8. '   ' → logprob: -22.25
    9. '.load' → logprob: -23.375
    10. '.Read' → logprob: -23.625

Token 639: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.375
    3. '_a' → logprob: -17.375
    4. '_al' → logprob: -18.75
    5. 'all' → logprob: -20.0
    6. '_an' → logprob: -21.5
    7. '_add' → logprob: -21.875
    8. '__' → logprob: -22.125
    9. '_
' → logprob: -22.375
    10. ' all' → logprob: -22.875

Token 640: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.127333340875339e-06
    2. 'datasets' → logprob: -12.500003814697266
    3. 'atasets' → logprob: -15.625003814697266
    4. ' datasets' → logprob: -16.375003814697266
    5. '_sets' → logprob: -17.125003814697266
    6. 's' → logprob: -17.250003814697266
    7. '_data' → logprob: -17.375003814697266
    8. '_dataset' → logprob: -17.500003814697266
    9. '_' → logprob: -17.875003814697266
    10. 'd' → logprob: -19.000003814697266

Token 641: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -1.4378848391061183e-05
    2. 'datasets' → logprob: -11.250014305114746
    3. 'ataset' → logprob: -13.750014305114746
    4. 'ata' → logprob: -16.375015258789062
    5. ' datasets' → logprob: -16.500015258789062
    6. 'atas' → logprob: -17.625015258789062
    7. 'sets' → logprob: -18.125015258789062
    8. '.datasets' → logprob: -18.500015258789062
    9. 'at' → logprob: -19.000015258789062
    10. 'ats' → logprob: -20.375015258789062

Token 642: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005381149239838123
    2. 'for' → logprob: -5.880381107330322
    3. ' for' → logprob: -6.130381107330322
    4. '
' → logprob: -8.38038158416748
    5. '        
' → logprob: -10.00538158416748
    6. '<|end|>' → logprob: -10.13038158416748
    7. '   ' → logprob: -10.25538158416748
    8. '	for' → logprob: -11.50538158416748
    9. '  
' → logprob: -11.63038158416748
    10. '	' → logprob: -11.63038158416748

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21389994025230408
    2. 'for' → logprob: -1.9638999700546265
    3. ' for' → logprob: -3.088899850845337
    4. '   ' → logprob: -5.088900089263916
    5. '<|end|>' → logprob: -8.588899612426758
    6. '        
' → logprob: -8.963899612426758
    7. '```' → logprob: -9.338899612426758
    8. '	for' → logprob: -9.963899612426758
    9. '
' → logprob: -10.088899612426758
    10. '           ' → logprob: -11.213899612426758

Token 644: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.935296834039036e-06
    2. '       ' → logprob: -13.00000286102295
    3. ' for' → logprob: -14.50000286102295
    4. '```' → logprob: -17.250003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '	for' → logprob: -20.000003814697266
    7. '``' → logprob: -20.250003814697266
    8. '
' → logprob: -21.375003814697266
    9. 'from' → logprob: -22.750003814697266
    10. '        
' → logprob: -23.375003814697266

Token 645: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2928304374217987
    2. ' n' → logprob: -1.417830467224121
    3. '(n' → logprob: -4.667830467224121
    4. ' (' → logprob: -6.167830467224121
    5. '       ' → logprob: -10.042830467224121
    6. '   ' → logprob: -10.292830467224121
    7. ' dataset' → logprob: -11.167830467224121
    8. 'dataset' → logprob: -11.417830467224121
    9. '(' → logprob: -11.667830467224121
    10. '           ' → logprob: -13.042830467224121

Token 646: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25578969717025757
    2. ',' → logprob: -1.5057897567749023
    3. 'in' → logprob: -6.005789756774902
    4. ' ,' → logprob: -6.630789756774902
    5. '_,' → logprob: -10.505789756774902
    6. '   ' → logprob: -11.505789756774902
    7. '=' → logprob: -12.255789756774902
    8. ' ' → logprob: -12.255789756774902
    9. '_in' → logprob: -12.880789756774902
    10. ',
' → logprob: -13.005789756774902

Token 647: ' own' (ID: 2316)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.07892074435949326
    2. ' own' → logprob: -2.578920841217041
    3. 'ow' → logprob: -11.703920364379883
    4. 'o' → logprob: -12.578920364379883
    5. '  ' → logprob: -12.828920364379883
    6. ' ' → logprob: -13.078920364379883
    7. 'owned' → logprob: -13.078920364379883
    8. 'owns' → logprob: -13.203920364379883
    9. '   ' → logprob: -13.453920364379883
    10. '    ' → logprob: -13.703920364379883

Token 648: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -8.537868779967539e-06
    2. '_' → logprob: -12.250008583068848
    3. ',' → logprob: -13.375008583068848
    4. 's' → logprob: -15.000008583068848
    5. ' _' → logprob: -15.125008583068848
    6. ',_' → logprob: -15.250008583068848
    7. 'levels' → logprob: -15.250008583068848
    8. '
' → logprob: -15.375008583068848
    9. '```' → logprob: -15.375008583068848
    10. '_layers' → logprob: -16.12500762939453

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008059754967689514
    2. ' in' → logprob: -5.383059978485107
    3. 'in' → logprob: -5.883059978485107
    4. ' ,' → logprob: -7.383059978485107
    5. '       ' → logprob: -11.63305950164795
    6. '   ' → logprob: -11.75805950164795
    7. ',in' → logprob: -13.00805950164795
    8. '_,' → logprob: -13.25805950164795
    9. '  ' → logprob: -13.88305950164795
    10. ',
' → logprob: -14.63305950164795

Token 650: ' opponent' (ID: 38519)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0011909411987289786
    2. ' opponent' → logprob: -6.751191139221191
    3. '       ' → logprob: -12.001191139221191
    4. '   ' → logprob: -12.376191139221191
    5. '           ' → logprob: -12.751191139221191
    6. 'opp' → logprob: -13.376191139221191
    7. '      ' → logprob: -14.001191139221191
    8. ' ' → logprob: -14.001191139221191
    9. '  ' → logprob: -14.126191139221191
    10. '    ' → logprob: -14.501191139221191

Token 651: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -2.6537622034084052e-05
    2. '_' → logprob: -11.62502670288086
    3. 's' → logprob: -11.62502670288086
    4. ' _' → logprob: -12.75002670288086
    5. ',' → logprob: -13.87502670288086
    6. '_layers' → logprob: -14.12502670288086
    7. '
' → logprob: -14.37502670288086
    8. '```' → logprob: -14.37502670288086
    9. '_scores' → logprob: -14.50002670288086
    10. '_sizes' → logprob: -14.87502670288086

Token 652: ' in' (ID: 306)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3699592649936676
    2. ':' → logprob: -1.4949592351913452
    3. ' in' → logprob: -2.6199593544006348
    4. ',' → logprob: -4.869959354400635
    5. '       ' → logprob: -5.744959354400635
    6. '):
' → logprob: -7.744959354400635
    7. '           ' → logprob: -7.869959354400635
    8. ':

' → logprob: -8.744958877563477
    9. '        ' → logprob: -9.619958877563477
    10. '():
' → logprob: -9.994958877563477

Token 653: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.010299230925738811
    2. ' datasets' → logprob: -4.760299205780029
    3. 'range' → logprob: -7.760299205780029
    4. 'self' → logprob: -7.760299205780029
    5. '.datasets' → logprob: -8.635299682617188
    6. '[' → logprob: -8.885299682617188
    7. '[n' → logprob: -9.635299682617188
    8. ' range' → logprob: -9.885299682617188
    9. 'n' → logprob: -9.885299682617188
    10. 'sorted' → logprob: -10.010299682617188

Token 654: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38774579763412476
    2. ':
' → logprob: -1.1377458572387695
    3. '       ' → logprob: -8.01274585723877
    4. ',' → logprob: -8.13774585723877
    5. '):
' → logprob: -8.76274585723877
    6. ':

' → logprob: -10.13774585723877
    7. '():
' → logprob: -10.63774585723877
    8. '           ' → logprob: -11.51274585723877
    9. '<|end|>' → logprob: -12.13774585723877
    10. '<|end|>' → logprob: -12.26274585723877

Token 655: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.100636325776577
    2. '       ' → logprob: -2.3506362438201904
    3. '<|end|>' → logprob: -8.72563648223877
    4. ',' → logprob: -9.47563648223877
    5. ' for' → logprob: -10.10063648223877
    6. '```' → logprob: -10.35063648223877
    7. ':' → logprob: -10.60063648223877
    8. '        
' → logprob: -10.60063648223877
    9. '	       ' → logprob: -11.60063648223877
    10. '<|end|>' → logprob: -11.72563648223877

Token 656: ' simulator' (ID: 71288)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.45771491527557373
    2. 'left' → logprob: -1.2077149152755737
    3. 'lo' → logprob: -3.4577150344848633
    4. 'sim' → logprob: -4.332715034484863
    5. 'max' → logprob: -4.707715034484863
    6. 'l' → logprob: -5.332715034484863
    7. '           ' → logprob: -5.582715034484863
    8. 'best' → logprob: -6.207715034484863
    9. 'lb' → logprob: -7.457715034484863
    10. ' left' → logprob: -7.582715034484863

Token 657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016036715358495712
    2. '=' → logprob: -4.141036510467529
    3. '   ' → logprob: -13.516036987304688
    4. ' ' → logprob: -15.141036987304688
    5. ' =
' → logprob: -15.141036987304688
    6. '    ' → logprob: -15.766036987304688
    7. '=
' → logprob: -16.641036987304688
    8. '  ' → logprob: -17.141036987304688
    9. '.' → logprob: -17.641036987304688
    10. 's' → logprob: -17.641036987304688

Token 658: ' Monster' (ID: 45420)
  Prédit: ' Monster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Monster' → logprob: -0.5759410262107849
    2. 'Monster' → logprob: -0.8259410262107849
    3. 'Mon' → logprob: -13.95094108581543
    4. ' ' → logprob: -15.57594108581543
    5. 'Monkey' → logprob: -15.57594108581543
    6. ' Monkey' → logprob: -16.57594108581543
    7. ' monster' → logprob: -16.82594108581543
    8. ' Monsters' → logprob: -17.32594108581543
    9. 'self' → logprob: -18.07594108581543
    10. 'Mons' → logprob: -18.07594108581543

Token 659: 'Battle' (ID: 54060)
  Prédit: 'Battle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Battle' → logprob: -3.128163257315464e-07
    2. 'Batt' → logprob: -15.5
    3. ' Battle' → logprob: -17.125
    4. 'battle' → logprob: -19.0
    5. '
' → logprob: -20.125
    6. '```' → logprob: -20.5
    7. '`' → logprob: -20.625
    8. '   ' → logprob: -21.125
    9. 'Combat' → logprob: -21.75
    10. ' battle' → logprob: -21.75

Token 660: 'Simulator' (ID: 120745)
  Prédit: 'Simulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simulator' → logprob: -3.128163257315464e-07
    2. ' Simulator' → logprob: -15.125
    3. 'imulator' → logprob: -17.5
    4. ' simulator' → logprob: -17.75
    5. 'Sim' → logprob: -18.375
    6. 'Battle' → logprob: -18.875
    7. 'Scheduler' → logprob: -19.5
    8. 'sim' → logprob: -19.875
    9. 'Solver' → logprob: -20.125
    10. '
' → logprob: -20.25

Token 661: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.951771421066951e-05
    2. '(
' → logprob: -10.500029563903809
    3. '(self' → logprob: -13.875029563903809
    4. '           ' → logprob: -14.625029563903809
    5. '(n' → logprob: -15.375029563903809
    6. ' (' → logprob: -16.000028610229492
    7. '(
' → logprob: -16.250028610229492
    8. '   ' → logprob: -16.875028610229492
    9. '((' → logprob: -17.125028610229492
    10. '       ' → logprob: -17.250028610229492

Token 662: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.0004659425176214427
    2. ' own' → logprob: -7.7504658699035645
    3. '           ' → logprob: -10.375466346740723
    4. '               ' → logprob: -13.125466346740723
    5. 'self' → logprob: -14.875466346740723
    6. ')' → logprob: -15.000466346740723
    7. 'ow' → logprob: -15.000466346740723
    8. '   ' → logprob: -15.000466346740723
    9. 'owned' → logprob: -15.375466346740723
    10. 'owns' → logprob: -15.625466346740723

Token 663: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -4.60414821645827e-06
    2. 'levels' → logprob: -13.125004768371582
    3. ',' → logprob: -14.500004768371582
    4. '```' → logprob: -14.875004768371582
    5. '           ' → logprob: -15.375004768371582
    6. 's' → logprob: -15.500004768371582
    7. ')_' → logprob: -15.500004768371582
    8. '_layers' → logprob: -15.875004768371582
    9. '       ' → logprob: -16.000003814697266
    10. '_' → logprob: -16.000003814697266

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. ',
' → logprob: -11.000024795532227
    3. ' ,' → logprob: -12.125024795532227
    4. 'op' → logprob: -13.875024795532227
    5. '           ' → logprob: -14.375024795532227
    6. '(op' → logprob: -14.875024795532227
    7. '               ' → logprob: -16.375024795532227
    8. '
' → logprob: -16.750024795532227
    9. '[' → logprob: -17.000024795532227
    10. ')' → logprob: -17.000024795532227

Token 665: ' opponent' (ID: 38519)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.07889287173748016
    2. ' opponent' → logprob: -2.578892946243286
    3. 'Opponent' → logprob: -14.078892707824707
    4. '           ' → logprob: -14.078892707824707
    5. 'opp' → logprob: -15.453892707824707
    6. '(op' → logprob: -15.453892707824707
    7. '
' → logprob: -15.703892707824707
    8. '	op' → logprob: -15.703892707824707
    9. '               ' → logprob: -15.828892707824707
    10. '   ' → logprob: -15.953892707824707

Token 666: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -1.6166903151315637e-05
    2. 's' → logprob: -12.500016212463379
    3. 'levels' → logprob: -12.500016212463379
    4. 'Levels' → logprob: -12.750016212463379
    5. '_' → logprob: -13.875016212463379
    6. '
' → logprob: -14.125016212463379
    7. '```' → logprob: -14.500016212463379
    8. ')' → logprob: -14.875016212463379
    9. '_sizes' → logprob: -15.250016212463379
    10. 'N' → logprob: -15.250016212463379

Token 667: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2203623503446579
    2. ')' → logprob: -1.9703623056411743
    3. '           ' → logprob: -2.845362424850464
    4. ')
' → logprob: -9.220362663269043
    5. '
' → logprob: -9.845362663269043
    6. '       ' → logprob: -10.220362663269043
    7. ')

' → logprob: -10.220362663269043
    8. ').' → logprob: -12.220362663269043
    9. ',' → logprob: -12.595362663269043
    10. '   ' → logprob: -12.720362663269043

Token 668: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00074959039920941
    2. ' for' → logprob: -8.750749588012695
    3. '
' → logprob: -9.250749588012695
    4. ' k' → logprob: -9.375749588012695
    5. ' max' → logprob: -9.875749588012695
    6. ' low' → logprob: -9.875749588012695
    7. '```' → logprob: -9.875749588012695
    8. '   ' → logprob: -10.125749588012695
    9. 'max' → logprob: -10.250749588012695
    10. ' left' → logprob: -10.500749588012695

Token 669: ' result' (ID: 1534)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6082411408424377
    2. 'low' → logprob: -0.8582411408424377
    3. 'lo' → logprob: -3.733241081237793
    4. 'l' → logprob: -5.858241081237793
    5. 'max' → logprob: -6.233241081237793
    6. '           ' → logprob: -6.733241081237793
    7. 'best' → logprob: -6.858241081237793
    8. 'result' (adapté à ' result') → logprob: -8.108241081237793
    9. 'answer' → logprob: -8.358241081237793
    10. 'res' → logprob: -8.983241081237793

Token 670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032439047936350107
    2. '=' → logprob: -5.753243923187256
    3. 's' → logprob: -11.253243446350098
    4. '_' → logprob: -11.378243446350098
    5. '_max' → logprob: -11.503243446350098
    6. '_k' → logprob: -11.878243446350098
    7. '_token' → logprob: -12.878243446350098
    8. '   ' → logprob: -13.128243446350098
    9. '_tokens' → logprob: -13.378243446350098
    10. ' ' → logprob: -13.503243446350098

Token 671: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05529870092868805
    2. '"' → logprob: -3.3052988052368164
    3. 'max' → logprob: -4.305298805236816
    4. 'None' → logprob: -6.430298805236816
    5. 'next' → logprob: -7.805298805236816
    6. ' ' → logprob: -8.055298805236816
    7. '-' → logprob: -8.305298805236816
    8. ''' → logprob: -8.430298805236816
    9. '           ' → logprob: -8.430298805236816
    10. '""' → logprob: -8.805298805236816

Token 672: '.find' (ID: 4231)
  Prédit: '.binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.binary' → logprob: -0.7598919868469238
    2. '.find' → logprob: -1.6348919868469238
    3. '.solve' → logprob: -2.259891986846924
    4. '.max' → logprob: -2.634891986846924
    5. '.output' → logprob: -4.009891986846924
    6. '.b' → logprob: -4.259891986846924
    7. '.best' → logprob: -4.384891986846924
    8. 'binary' → logprob: -4.384891986846924
    9. 'output' → logprob: -4.384891986846924
    10. '._' → logprob: -4.509891986846924

Token 673: '_min' (ID: 15950)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.36121055483818054
    2. '_best' → logprob: -1.236210584640503
    3. '(' → logprob: -5.486210346221924
    4. 'max' → logprob: -5.486210346221924
    5. '_k' → logprob: -6.986210346221924
    6. '_opt' → logprob: -7.111210346221924
    7. '_' → logprob: -7.236210346221924
    8. '_min' → logprob: -8.361210823059082
    9. '_possible' → logprob: -8.486210823059082
    10. ' max' → logprob: -8.736210823059082

Token 674: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.11472796648740768
    2. '_w' → logprob: -2.9897279739379883
    3. 'imal' → logprob: -3.7397279739379883
    4. 'imum' → logprob: -3.8647279739379883
    5. '_win' → logprob: -4.864727973937988
    6. '_max' → logprob: -6.114727973937988
    7. '_' → logprob: -7.239727973937988
    8. '(' → logprob: -7.239727973937988
    9. '_possible' → logprob: -7.989727973937988
    10. 'imax' → logprob: -8.364727973937988

Token 675: '(sim' (ID: 95789)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8077783584594727
    2. '(result' → logprob: -0.8077783584594727
    3. '(n' → logprob: -2.6827783584594727
    4. '(
' → logprob: -4.057778358459473
    5. '(k' → logprob: -4.557778358459473
    6. '(len' → logprob: -5.557778358459473
    7. '       ' → logprob: -6.307778358459473
    8. '           ' → logprob: -6.307778358459473
    9. 'result' → logprob: -6.932778358459473
    10. '(self' → logprob: -7.432778358459473

Token 676: 'ulator' (ID: 16381)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5445227026939392
    2. 'ulator' → logprob: -1.169522762298584
    3. '(k' → logprob: -2.669522762298584
    4. '(int' → logprob: -4.044522762298584
    5. '()' → logprob: -5.044522762298584
    6. '()
' → logprob: -5.669522762298584
    7. '(lambda' → logprob: -6.044522762298584
    8. 'ulate' → logprob: -6.419522762298584
    9. '(i' → logprob: -6.669522762298584
    10. '_k' → logprob: -6.794522762298584

Token 677: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11293826997280121
    2. '(n' → logprob: -2.862938165664673
    3. '(
' → logprob: -3.862938165664673
    4. ')' → logprob: -4.237938404083252
    5. '(k' → logprob: -4.862938404083252
    6. '()' → logprob: -5.737938404083252
    7. ',' → logprob: -6.737938404083252
    8. '(len' → logprob: -6.862938404083252
    9. '(

' → logprob: -8.487937927246094
    10. '(max' → logprob: -8.862937927246094

Token 678: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16797399520874023
    2. ' n' → logprob: -2.7929739952087402
    3. '1' → logprob: -3.0429739952087402
    4. '0' → logprob: -3.5429739952087402
    5. 'lambda' → logprob: -4.91797399520874
    6. 'sim' → logprob: -5.41797399520874
    7. ' ' → logprob: -6.29297399520874
    8. ' lambda' → logprob: -6.91797399520874
    9. ')' → logprob: -7.16797399520874
    10. ' simulator' → logprob: -7.41797399520874

Token 679: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11117308586835861
    2. ')
' → logprob: -2.611173152923584
    3. '):
' → logprob: -3.736173152923584
    4. '):' → logprob: -5.986173152923584
    5. '       ' → logprob: -6.111173152923584
    6. ',' → logprob: -6.236173152923584
    7. '   ' → logprob: -7.361173152923584
    8. '           ' → logprob: -8.486172676086426
    9. '
' → logprob: -9.611172676086426
    10. ')
' → logprob: -9.611172676086426

Token 680: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2141522914171219
    2. '           ' → logprob: -1.8391523361206055
    3. '   ' → logprob: -4.0891523361206055
    4. '
' → logprob: -5.4641523361206055
    5. '        
' → logprob: -5.7141523361206055
    6. '(' → logprob: -5.7141523361206055
    7. '    
' → logprob: -6.8391523361206055
    8. '(
' → logprob: -7.4641523361206055
    9. '<|end|>' → logprob: -7.5891523361206055
    10. '[' → logprob: -7.7141523361206055

Token 681: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.061834000051021576
    2. '           ' → logprob: -3.1868340969085693
    3. 'if' → logprob: -4.18683385848999
    4. ' self' → logprob: -5.81183385848999
    5. ' if' → logprob: -8.061834335327148
    6. 'for' → logprob: -9.311834335327148
    7. '
' → logprob: -10.436834335327148
    8. '   ' → logprob: -11.186834335327148
    9. ' for' → logprob: -12.311834335327148
    10. '(self' → logprob: -12.561834335327148

Token 682: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -2.868328920158092e-05
    2. '.' → logprob: -11.000028610229492
    3. 'output' → logprob: -11.500028610229492
    4. '.input' → logprob: -13.750028610229492
    5. ' .' → logprob: -15.500028610229492
    6. '.write' → logprob: -16.125028610229492
    7. '	output' → logprob: -16.500028610229492
    8. '
' → logprob: -17.125028610229492
    9. 'OUTPUT' → logprob: -17.250028610229492
    10. '.outputs' → logprob: -17.250028610229492

Token 683: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -3.128163257315464e-07
    2. '_write' → logprob: -16.25
    3. '_w' → logprob: -16.5
    4. '_reader' → logprob: -17.0
    5. '_wr' → logprob: -19.25
    6. '_wrapper' → logprob: -20.375
    7. '_output' → logprob: -21.25
    8. '.write' → logprob: -22.375
    9. '_worker' → logprob: -22.5
    10. '_WR' → logprob: -23.25

Token 684: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.00033558503491804004
    2. '.' → logprob: -8.000335693359375
    3. ' .' → logprob: -16.875335693359375
    4. '.put' → logprob: -18.125335693359375
    5. '.print' → logprob: -18.250335693359375
    6. '.save' → logprob: -18.625335693359375
    7. '.show' → logprob: -18.750335693359375
    8. '.send' → logprob: -19.125335693359375
    9. '.Write' → logprob: -19.500335693359375
    10. '._' → logprob: -19.500335693359375

Token 685: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.981667537620524e-06
    2. 'line' → logprob: -13.875001907348633
    3. '_' → logprob: -14.375001907348633
    4. '```' → logprob: -16.375001907348633
    5. '"_' → logprob: -16.875001907348633
    6. '_str' → logprob: -17.250001907348633
    7. ''_' → logprob: -17.250001907348633
    8. '_LINE' → logprob: -17.500001907348633
    9. '('_' → logprob: -17.750001907348633
    10. 'f' → logprob: -17.750001907348633

Token 686: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.31430938839912415
    2. '(str' → logprob: -1.3143093585968018
    3. '(f' → logprob: -7.439309597015381
    4. '(' → logprob: -7.939309597015381
    5. '('' → logprob: -10.439309120178223
    6. 'result' → logprob: -10.439309120178223
    7. 'str' → logprob: -11.064309120178223
    8. '("' → logprob: -11.564309120178223
    9. '(""' → logprob: -12.064309120178223
    10. '((' → logprob: -12.314309120178223

Token 687: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09172114729881287
    2. '()' → logprob: -3.0917210578918457
    3. '("")' → logprob: -4.341721057891846
    4. '())' → logprob: -4.716721057891846
    5. ')
' → logprob: -4.841721057891846
    6. '(' → logprob: -4.841721057891846
    7. '(
' → logprob: -7.341721057891846
    8. '()
' → logprob: -7.466721057891846
    9. '       ' → logprob: -7.591721057891846
    10. '(""))' → logprob: -7.841721057891846

Token 688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012589112855494022
    2. '
' → logprob: -5.262588977813721
    3. 'def' → logprob: -5.387588977813721
    4. '(' → logprob: -6.512588977813721
    5. ' def' → logprob: -7.762588977813721
    6. '    
' → logprob: -7.762588977813721
    7. '```' → logprob: -9.137589454650879
    8. '       ' → logprob: -9.637589454650879
    9. '(
' → logprob: -10.012589454650879
    10. ' ' → logprob: -10.262589454650879

Token 689: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5799720883369446
    2. '   ' → logprob: -0.8299720883369446
    3. ' def' → logprob: -5.579972267150879
    4. '
' → logprob: -8.954972267150879
    5. '    
' → logprob: -9.954972267150879
    6. '```' → logprob: -10.204972267150879
    7. '	def' → logprob: -11.204972267150879
    8. ' ' → logprob: -11.579972267150879
    9. '       ' → logprob: -12.329972267150879
    10. '  ' → logprob: -13.079972267150879

Token 690: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.029756855219602585
    2. ' find' → logprob: -3.529756784439087
    3. 'def' → logprob: -12.029756546020508
    4. '_find' → logprob: -15.404756546020508
    5. '	find' → logprob: -16.404756546020508
    6. ' def' → logprob: -17.029756546020508
    7. '   ' → logprob: -17.154756546020508
    8. '.find' → logprob: -17.779756546020508
    9. ' ' → logprob: -19.154756546020508
    10. '
' → logprob: -19.529756546020508

Token 691: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -7.584239938296378e-06
    2. '_' → logprob: -12.375007629394531
    3. '_max' → logprob: -13.000007629394531
    4. 'min' → logprob: -15.250007629394531
    5. '_m' → logprob: -15.625007629394531
    6. '```' → logprob: -15.625007629394531
    7. '
' → logprob: -15.750007629394531
    8. '_best' → logprob: -15.875007629394531
    9. ' _' → logprob: -16.25000762939453
    10. '_low' → logprob: -16.62500762939453

Token 692: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -5.967624019831419e-05
    2. '_' → logprob: -9.875060081481934
    3. '```' → logprob: -12.750060081481934
    4. '_key' → logprob: -14.500060081481934
    5. '_possible' → logprob: -14.875060081481934
    6. '_x' → logprob: -15.000060081481934
    7. '
' → logprob: -15.250060081481934
    8. '_a' → logprob: -15.375060081481934
    9. '}_' → logprob: -15.375060081481934
    10. '_
' → logprob: -15.500060081481934

Token 693: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018661346985027194
    2. '(' → logprob: -8.625186920166016
    3. 'self' → logprob: -12.500186920166016
    4. '(
' → logprob: -13.250186920166016
    5. '   ' → logprob: -14.000186920166016
    6. ' (' → logprob: -14.750186920166016
    7. 'def' → logprob: -16.000186920166016
    8. '       ' → logprob: -16.125186920166016
    9. '(sel' → logprob: -18.375186920166016
    10. '(s' → logprob: -18.500186920166016

Token 694: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014348485507071018
    2. 'self' → logprob: -4.63934850692749
    3. ',' → logprob: -6.13934850692749
    4. '(' → logprob: -6.63934850692749
    5. '   ' → logprob: -8.139348030090332
    6. ')' → logprob: -8.389348030090332
    7. ' (' → logprob: -8.514348030090332
    8. '       ' → logprob: -8.764348030090332
    9. 'def' → logprob: -9.139348030090332
    10. ')(' → logprob: -9.764348030090332

Token 695: ' simulator' (ID: 71288)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5811355710029602
    2. ' self' → logprob: -1.0811355113983154
    3. 'sim' → logprob: -3.3311355113983154
    4. ' simulator' → logprob: -3.3311355113983154
    5. ' k' → logprob: -4.3311357498168945
    6. 'k' → logprob: -4.4561357498168945
    7. '   ' → logprob: -5.9561357498168945
    8. ' sim' → logprob: -6.0811357498168945
    9. '       ' → logprob: -9.081135749816895
    10. ' simul' → logprob: -10.456135749816895

Token 696: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5401935577392578
    2. ',' → logprob: -1.1651935577392578
    3. 'self' → logprob: -2.290193557739258
    4. '       ' → logprob: -6.415193557739258
    5. '   ' → logprob: -6.540193557739258
    6. ',self' → logprob: -7.790193557739258
    7. ' self' → logprob: -8.040193557739258
    8. ')' → logprob: -8.540193557739258
    9. '
' → logprob: -9.540193557739258
    10. '):
' → logprob: -9.790193557739258

Token 697: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07959306985139847
    2. ' k' → logprob: -2.5795931816101074
    3. 'n' → logprob: -8.57959270477295
    4. ')' → logprob: -8.70459270477295
    5. 'max' → logprob: -9.57959270477295
    6. 'self' → logprob: -10.07959270477295
    7. '   ' → logprob: -10.20459270477295
    8. 'N' → logprob: -10.32959270477295
    9. 'K' → logprob: -10.45459270477295
    10. ' n' → logprob: -10.45459270477295

Token 698: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14957809448242188
    2. '):' → logprob: -2.274578094482422
    3. ',' → logprob: -4.024578094482422
    4. '       ' → logprob: -4.899578094482422
    5. '   ' → logprob: -4.899578094482422
    6. ':' → logprob: -6.524578094482422
    7. 'self' → logprob: -6.899578094482422
    8. ':
' → logprob: -7.399578094482422
    9. '):
' → logprob: -9.649578094482422
    10. '(self' → logprob: -9.899578094482422

Token 699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021557629224844277
    2. '   ' → logprob: -8.750215530395508
    3. ' for' → logprob: -10.375215530395508
    4. 'for' → logprob: -12.500215530395508
    5. '```' → logprob: -12.500215530395508
    6. '        
' → logprob: -12.625215530395508
    7. 'k' → logprob: -13.000215530395508
    8. ',' → logprob: -13.250215530395508
    9. ' k' → logprob: -13.500215530395508
    10. '    ' → logprob: -13.500215530395508

Token 700: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.11170734465122223
    2. 'low' → logprob: -2.3617074489593506
    3. '       ' → logprob: -5.4867072105407715
    4. 'l' → logprob: -5.8617072105407715
    5. 'lo' → logprob: -5.9867072105407715
    6. ' left' → logprob: -6.3617072105407715
    7. '```' → logprob: -9.61170768737793
    8. ' lo' → logprob: -9.73670768737793
    9. ' low' → logprob: -9.73670768737793
    10. '
' → logprob: -11.73670768737793

Token 701: ' binary' (ID: 15600)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16373923420906067
    2. 'low' → logprob: -1.9137392044067383
    3. 'lo' → logprob: -5.663739204406738
    4. ' left' → logprob: -11.288739204406738
    5. '```' → logprob: -11.288739204406738
    6. '       ' → logprob: -12.038739204406738
    7. 'l' → logprob: -12.163739204406738
    8. '   ' → logprob: -13.913739204406738
    9. ' low' → logprob: -14.288739204406738
    10. '
' → logprob: -14.413739204406738

Token 702: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.2888675034046173
    2. '_search' → logprob: -1.413867473602295
    3. 'search' → logprob: -5.038867473602295
    4. '       ' → logprob: -7.413867473602295
    5. '_' → logprob: -7.788867473602295
    6. ' ' → logprob: -10.038867950439453
    7. '   ' → logprob: -10.288867950439453
    8. 'Search' → logprob: -10.413867950439453
    9. ' _' → logprob: -11.288867950439453
    10. ' =' → logprob: -11.288867950439453

Token 703: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6017473936080933
    2. '
' → logprob: -1.2267473936080933
    3. ' left' → logprob: -3.101747512817383
    4. ' lo' → logprob: -3.226747512817383
    5. ' low' → logprob: -3.351747512817383
    6. 'left' → logprob: -4.101747512817383
    7. '(low' → logprob: -4.351747512817383
    8. 'low' → logprob: -5.476747512817383
    9. 'lo' → logprob: -6.351747512817383
    10. ' l' → logprob: -6.726747512817383

Token 704: ' minimal' (ID: 19957)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.6898602247238159
    2. 'k' → logprob: -1.564860224723816
    3. ' low' → logprob: -2.0648603439331055
    4. 'left' → logprob: -2.6898603439331055
    5. ' k' → logprob: -2.9398603439331055
    6. ' left' → logprob: -3.3148603439331055
    7. 'lo' → logprob: -5.8148603439331055
    8. ' lo' → logprob: -7.3148603439331055
    9. '       ' → logprob: -7.5648603439331055
    10. 'l' → logprob: -7.6898603439331055

Token 705: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5313172936439514
    2. 'k' → logprob: -0.9063172936439514
    3. ' left' → logprob: -5.531317234039307
    4. ' low' → logprob: -6.031317234039307
    5. '       ' → logprob: -8.031317710876465
    6. 'low' → logprob: -8.031317710876465
    7. 'left' → logprob: -8.406317710876465
    8. ' l' → logprob: -8.656317710876465
    9. 'l' → logprob: -8.656317710876465
    10. '   ' → logprob: -9.281317710876465

Token 706: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36875274777412415
    2. '(low' → logprob: -1.6187527179718018
    3. '
' → logprob: -3.2437527179718018
    4. '(' → logprob: -3.3687527179718018
    5. '(self' → logprob: -3.6187527179718018
    6. '(lo' → logprob: -5.868752956390381
    7. '(
' → logprob: -6.118752956390381
    8. ' (' → logprob: -6.993752956390381
    9. '(left' → logprob: -6.993752956390381
    10. '   ' → logprob: -6.993752956390381

Token 707: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2423018515110016
    2. 'low' → logprob: -2.6173019409179688
    3. 'left' → logprob: -2.6173019409179688
    4. ')' → logprob: -3.1173019409179688
    5. '       ' → logprob: -4.492301940917969
    6. 'k' → logprob: -5.742301940917969
    7. ',' → logprob: -5.992301940917969
    8. 'lo' → logprob: -6.492301940917969
    9. ' left' → logprob: -6.742301940917969
    10. 'l' → logprob: -6.867301940917969

Token 708: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047516957856714725
    2. ',n' → logprob: -6.254751682281494
    3. '=' → logprob: -6.629751682281494
    4. ')' → logprob: -7.379751682281494
    5. ' ,' → logprob: -8.129752159118652
    6. '       ' → logprob: -8.629752159118652
    7. ',
' → logprob: -9.004752159118652
    8. '<=' → logprob: -9.254752159118652
    9. ' <=' → logprob: -10.004752159118652
    10. ',k' → logprob: -10.004752159118652

Token 709: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0059434943832457066
    2. ' k' → logprob: -5.130943298339844
    3. '1' → logprob: -12.130943298339844
    4. ')' → logprob: -12.630943298339844
    5. '       ' → logprob: -12.880943298339844
    6. '           ' → logprob: -13.755943298339844
    7. '```' → logprob: -14.005943298339844
    8. '
' → logprob: -15.005943298339844
    9. 'low' → logprob: -15.005943298339844
    10. ',' → logprob: -15.130943298339844

Token 710: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.29225194454193115
    2. '<=' → logprob: -1.6672519445419312
    3. ',' → logprob: -3.2922520637512207
    4. ')' → logprob: -4.042252063751221
    5. '       ' → logprob: -5.667252063751221
    6. '=' → logprob: -6.042252063751221
    7. ' ≤' → logprob: -6.917252063751221
    8. ';' → logprob: -7.417252063751221
    9. ')<=' → logprob: -7.667252063751221
    10. ' to' → logprob: -7.917252063751221

Token 711: ' N' (ID: 478)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.073562853038311
    2. 'n' → logprob: -3.0735628604888916
    3. '=n' → logprob: -3.8235628604888916
    4. ' n' → logprob: -6.0735626220703125
    5. ' =' → logprob: -7.8235626220703125
    6. '=
' → logprob: -10.198562622070312
    7. ')n' → logprob: -11.198562622070312
    8. ')' → logprob: -11.573562622070312
    9. '       ' → logprob: -11.698562622070312
    10. '```' → logprob: -11.698562622070312

Token 712: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7331848740577698
    2. '):
' → logprob: -0.9831848740577698
    3. ')
' → logprob: -2.108184814453125
    4. '+' → logprob: -4.858184814453125
    5. '):' → logprob: -5.233184814453125
    6. '       ' → logprob: -5.358184814453125
    7. '):

' → logprob: -5.733184814453125
    8. ')

' → logprob: -7.358184814453125
    9. ',' → logprob: -7.483184814453125
    10. '=' → logprob: -7.983184814453125

Token 713: ' such' (ID: 2238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.569540798664093
    2. '
' → logprob: -0.944540798664093
    3. '(low' → logprob: -4.694540977478027
    4. 'left' → logprob: -4.819540977478027
    5. ' left' → logprob: -5.069540977478027
    6. ' low' → logprob: -5.319540977478027
    7. ',' → logprob: -5.694540977478027
    8. '        
' → logprob: -5.694540977478027
    9. 'low' → logprob: -6.069540977478027
    10. '   ' → logprob: -6.194540977478027

Token 714: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.033820196986198425
    2. ' that' → logprob: -3.408820152282715
    3. '       ' → logprob: -9.283820152282715
    4. '_that' → logprob: -10.408820152282715
    5. '           ' → logprob: -11.158820152282715
    6. 'hat' → logprob: -11.408820152282715
    7. 'as' → logprob: -11.658820152282715
    8. 'at' → logprob: -12.533820152282715
    9. 'That' → logprob: -13.033820152282715
    10. 'while' → logprob: -13.158820152282715

Token 715: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.07019340246915817
    2. ' simulator' → logprob: -2.945193290710449
    3. 'k' → logprob: -5.320193290710449
    4. ' for' → logprob: -6.070193290710449
    5. '       ' → logprob: -6.195193290710449
    6. 'self' → logprob: -6.320193290710449
    7. ' sim' → logprob: -6.945193290710449
    8. 'can' → logprob: -7.320193290710449
    9. ' k' → logprob: -7.320193290710449
    10. 'for' → logprob: -7.320193290710449

Token 716: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -6.396757089532912e-05
    2. '   ' → logprob: -10.1250638961792
    3. '.' → logprob: -11.0000638961792
    4. 'can' → logprob: -12.2500638961792
    5. '
' → logprob: -14.2500638961792
    6. ' can' → logprob: -14.7500638961792
    7. ' .' → logprob: -14.8750638961792
    8. '       ' → logprob: -14.8750638961792
    9. '	can' → logprob: -15.2500638961792
    10. '.has' → logprob: -15.6250638961792

Token 717: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -0.00017290872347075492
    2. '_w' → logprob: -9.50017261505127
    3. '_can' → logprob: -9.87517261505127
    4. '_' → logprob: -10.75017261505127
    5. ' _' → logprob: -11.62517261505127
    6. 'win' → logprob: -11.87517261505127
    7. '```' → logprob: -12.75017261505127
    8. '_have' → logprob: -13.87517261505127
    9. '_
' → logprob: -14.50017261505127
    10. '
' → logprob: -14.50017261505127

Token 718: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -3.15441757265944e-05
    2. 'with' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.250032424926758
    4. '_WITH' → logprob: -16.375032424926758
    5. '```' → logprob: -17.125032424926758
    6. 'With' → logprob: -17.875032424926758
    7. '
' → logprob: -18.000032424926758
    8. ' with' → logprob: -18.125032424926758
    9. '_for' → logprob: -18.125032424926758
    10. '       ' → logprob: -19.000032424926758

Token 719: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0006064103217795491
    2. 'k' → logprob: -8.000606536865234
    3. '(k' → logprob: -8.250606536865234
    4. '```' → logprob: -12.750606536865234
    5. '[k' → logprob: -13.625606536865234
    6. '
' → logprob: -14.125606536865234
    7. '`' → logprob: -14.125606536865234
    8. '{k' → logprob: -14.250606536865234
    9. ' k' → logprob: -14.750606536865234
    10. '_' → logprob: -14.750606536865234

Token 720: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.06263535469770432
    2. '(' → logprob: -2.9376354217529297
    3. 'k' → logprob: -5.18763542175293
    4. '(sim' → logprob: -7.31263542175293
    5. '(s' → logprob: -7.43763542175293
    6. '(
' → logprob: -7.56263542175293
    7. ' (' → logprob: -9.43763542175293
    8. '((' → logprob: -9.56263542175293
    9. ')' → logprob: -10.06263542175293
    10. 'sim' → logprob: -10.31263542175293

Token 721: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1954079121351242
    2. ')' → logprob: -1.8204078674316406
    3. '):
' → logprob: -4.195407867431641
    4. ':' → logprob: -8.44540786743164
    5. '():' → logprob: -9.69540786743164
    6. '       ' → logprob: -10.32040786743164
    7. '   ' → logprob: -10.57040786743164
    8. '()' → logprob: -10.94540786743164
    9. ',' → logprob: -11.07040786743164
    10. ')
' → logprob: -11.19540786743164

Token 722: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27524471282958984
    2. ' =' → logprob: -2.15024471282959
    3. '=' → logprob: -3.40024471282959
    4. '
' → logprob: -3.52524471282959
    5. '   ' → logprob: -3.90024471282959
    6. ':
' → logprob: -4.77524471282959
    7. '(' → logprob: -4.77524471282959
    8. '(
' → logprob: -5.15024471282959
    9. ':' → logprob: -5.27524471282959
    10. '        
' → logprob: -6.02524471282959

Token 723: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015095012495294213
    2. ' True' → logprob: -6.501509666442871
    3. '           ' → logprob: -12.251509666442871
    4. 'true' → logprob: -13.001509666442871
    5. '               ' → logprob: -16.751508712768555
    6. '       ' → logprob: -16.751508712768555
    7. 'False' → logprob: -17.501508712768555
    8. '_true' → logprob: -18.001508712768555
    9. ' true' → logprob: -18.501508712768555
    10. '   ' → logprob: -18.751508712768555

Token 724: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05440472066402435
    2. '
' → logprob: -3.9294047355651855
    3. '```' → logprob: -3.9294047355651855
    4. ':
' → logprob: -5.0544047355651855
    5. ':' → logprob: -5.9294047355651855
    6. ',' → logprob: -6.4294047355651855
    7. '        
' → logprob: -7.5544047355651855
    8. '   ' → logprob: -7.5544047355651855
    9. '(low' → logprob: -8.304404258728027
    10. '<|end|>' → logprob: -8.304404258728027

Token 725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022638519294559956
    2. '
' → logprob: -6.877264022827148
    3. '```' → logprob: -8.002264022827148
    4. ',' → logprob: -8.377264022827148
    5. '   ' → logprob: -8.377264022827148
    6. ':' → logprob: -8.377264022827148
    7. ':
' → logprob: -9.877264022827148
    8. '        
' → logprob: -10.252264022827148
    9. '[' → logprob: -11.002264022827148
    10. '<|end|>' → logprob: -11.002264022827148

Token 726: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.29575639963150024
    2. 'low' → logprob: -2.0457563400268555
    3. '       ' → logprob: -2.2957563400268555
    4. ' left' → logprob: -4.1707563400268555
    5. 'lo' → logprob: -5.4207563400268555
    6. 'l' → logprob: -5.7957563400268555
    7. ' low' → logprob: -6.7957563400268555
    8. ' lo' → logprob: -7.1707563400268555
    9. '```' → logprob: -7.2957563400268555
    10. '
' → logprob: -7.7957563400268555

Token 727: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47464627027511597
    2. '=' → logprob: -0.974646270275116
    3. ',' → logprob: -7.474646091461182
    4. ' ,' → logprob: -14.22464656829834
    5. ' ' → logprob: -14.72464656829834
    6. ' =
' → logprob: -15.84964656829834
    7. '=
' → logprob: -15.97464656829834
    8. '       ' → logprob: -16.099645614624023
    9. '   ' → logprob: -16.349645614624023
    10. '0' → logprob: -16.599645614624023

Token 728: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -12.000011444091797
    3. '0' → logprob: -12.250011444091797
    4. '   ' → logprob: -15.250011444091797
    5. '(' → logprob: -18.062511444091797
    6. '
' → logprob: -18.250011444091797
    7. '2' → logprob: -18.437511444091797
    8. '```' → logprob: -18.750011444091797
    9. '=' → logprob: -19.375011444091797
    10. '    ' → logprob: -19.500011444091797

Token 729: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -12.75000286102295
    3. ' ' → logprob: -16.625003814697266
    4. '   ' → logprob: -19.625003814697266
    5. '2' → logprob: -20.000003814697266
    6. '```' → logprob: -20.250003814697266
    7. '１' → logprob: -20.875003814697266
    8. '
' → logprob: -21.687503814697266
    9. '=' → logprob: -22.125003814697266
    10. '

' → logprob: -22.125003814697266

Token 730: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0009571973932906985
    2. '       ' → logprob: -7.750957012176514
    3. '<|end|>' → logprob: -8.125957489013672
    4. ' 
' → logprob: -9.625957489013672
    5. '        
' → logprob: -10.500957489013672
    6. '
' → logprob: -10.625957489013672
    7. 'right' → logprob: -10.875957489013672
    8. '    
' → logprob: -11.000957489013672
    9. '  
' → logprob: -11.125957489013672
    10. '```' → logprob: -11.125957489013672

Token 731: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014741822145879269
    2. 'right' → logprob: -4.264741897583008
    3. ' right' → logprob: -8.264741897583008
    4. ',' → logprob: -8.889741897583008
    5. '       ' → logprob: -9.889741897583008
    6. '```' → logprob: -10.139741897583008
    7. ',right' → logprob: -10.514741897583008
    8. '
' → logprob: -11.514741897583008
    9. '[right' → logprob: -11.639741897583008
    10. ',
' → logprob: -11.764741897583008

Token 732: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.001170460251159966
    2. ' right' → logprob: -6.751170635223389
    3. '	right' → logprob: -16.126171112060547
    4. '
' → logprob: -17.251171112060547
    5. '   ' → logprob: -17.251171112060547
    6. '```' → logprob: -18.001171112060547
    7. '\
' → logprob: -18.501171112060547
    8. 'r' → logprob: -18.751171112060547
    9. ',right' → logprob: -18.751171112060547
    10. '       ' → logprob: -19.126171112060547

Token 733: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142309367656708
    2. '=' → logprob: -1.7014230489730835
    3. '=n' → logprob: -11.701422691345215
    4. 'n' → logprob: -13.826422691345215
    5. ',' → logprob: -15.576422691345215
    6. '   ' → logprob: -15.826422691345215
    7. '=
' → logprob: -16.45142364501953
    8. ' =
' → logprob: -16.70142364501953
    9. ' ' → logprob: -17.07642364501953
    10. '=N' → logprob: -17.45142364501953

Token 734: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018163636326789856
    2. ' n' → logprob: -4.018163681030273
    3. '   ' → logprob: -12.393163681030273
    4. '       ' → logprob: -12.393163681030273
    5. '	n' → logprob: -12.893163681030273
    6. 'self' → logprob: -13.143163681030273
    7. 'sim' → logprob: -15.393163681030273
    8. '    ' → logprob: -15.768163681030273
    9. '_n' → logprob: -16.268163681030273
    10. ' self' → logprob: -16.393163681030273

Token 735: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21456396579742432
    2. ' +' → logprob: -1.9645639657974243
    3. '
' → logprob: -2.9645638465881348
    4. '+
' → logprob: -7.464563846588135
    5. '-' → logprob: -8.214564323425293
    6. ' 
' → logprob: -9.214564323425293
    7. '       ' → logprob: -9.339564323425293
    8. ' +
' → logprob: -9.589564323425293
    9. ' -' → logprob: -9.839564323425293
    10. '   ' → logprob: -10.464564323425293

Token 736: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023226479243021458
    2. ' ' → logprob: -8.375232696533203
    3. '0' → logprob: -13.375232696533203
    4. '<|end|>' → logprob: -16.750232696533203
    5. '  ' → logprob: -17.500232696533203
    6. '   ' → logprob: -18.000232696533203
    7. '+' → logprob: -18.250232696533203
    8. '    ' → logprob: -18.250232696533203
    9. '2' → logprob: -18.875232696533203
    10. '
' → logprob: -19.187732696533203

Token 737: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. '0' → logprob: -10.375031471252441
    3. ' ' → logprob: -15.625031471252441
    4. '```' → logprob: -17.375032424926758
    5. 'from' → logprob: -17.750032424926758
    6. '
' → logprob: -18.562532424926758
    7. '   ' → logprob: -18.625032424926758
    8. '=' → logprob: -18.812532424926758
    9. 'def' → logprob: -19.375032424926758
    10. '`' → logprob: -19.562532424926758

Token 738: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.637407124042511
    2. '
' → logprob: -0.762407124042511
    3. '<|end|>' → logprob: -6.512407302856445
    4. '        
' → logprob: -6.762407302856445
    5. '   ' → logprob: -7.637407302856445
    6. '  
' → logprob: -8.262407302856445
    7. '```' → logprob: -8.262407302856445
    8. ' while' → logprob: -8.262407302856445
    9. 'while' → logprob: -8.512407302856445
    10. '    
' → logprob: -9.012407302856445

Token 739: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09696299582719803
    2. '
' → logprob: -2.7219629287719727
    3. ' while' → logprob: -4.346962928771973
    4. 'while' → logprob: -5.346962928771973
    5. '<|end|>' → logprob: -5.596962928771973
    6. '   ' → logprob: -5.971962928771973
    7. '	while' → logprob: -6.846962928771973
    8. '```' → logprob: -7.346962928771973
    9. '        
' → logprob: -7.971962928771973
    10. '  
' → logprob: -8.971962928771973

Token 740: ' answer' (ID: 6052)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.010879798792302608
    2. ' while' → logprob: -5.260879993438721
    3. 'result' → logprob: -5.260879993438721
    4. '       ' → logprob: -8.260879516601562
    5. 'best' → logprob: -9.510879516601562
    6. 'answer' (adapté à ' answer') → logprob: -10.510879516601562
    7. ' result' → logprob: -10.885879516601562
    8. 'res' → logprob: -10.885879516601562
    9. '
' → logprob: -11.010879516601562
    10. 'ans' → logprob: -11.510879516601562

Token 741: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759406089782715
    2. ' =' → logprob: -0.8259406089782715
    3. '=None' → logprob: -13.95094108581543
    4. ' ' → logprob: -16.07594108581543
    5. 's' → logprob: -16.45094108581543
    6. ',' → logprob: -16.95094108581543
    7. ' =
' → logprob: -17.95094108581543
    8. '	' → logprob: -18.07594108581543
    9. '=
' → logprob: -18.20094108581543
    10. ':' → logprob: -18.45094108581543

Token 742: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3672592043876648
    2. 'None' → logprob: -1.8672592639923096
    3. 'n' → logprob: -2.3672592639923096
    4. '0' → logprob: -2.8672592639923096
    5. 'right' → logprob: -6.2422590255737305
    6. ' -' → logprob: -9.24225902557373
    7. 'none' → logprob: -9.86725902557373
    8. ' None' → logprob: -10.24225902557373
    9. 'float' → logprob: -10.49225902557373
    10. 'N' → logprob: -10.86725902557373

Token 743: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10133662819862366
    2. '
' → logprob: -2.351336717605591
    3. ' while' → logprob: -7.601336479187012
    4. '<|end|>' → logprob: -8.476336479187012
    5. '        
' → logprob: -9.226336479187012
    6. '   ' → logprob: -9.351336479187012
    7. 'while' → logprob: -9.726336479187012
    8. '
' → logprob: -10.226336479187012
    9. '```' → logprob: -10.226336479187012
    10. '  
' → logprob: -10.476336479187012

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004368290305137634
    2. '
' → logprob: -5.629368305206299
    3. ' while' → logprob: -8.00436782836914
    4. '   ' → logprob: -9.00436782836914
    5. 'while' → logprob: -9.62936782836914
    6. '	' → logprob: -9.75436782836914
    7. '        
' → logprob: -9.87936782836914
    8. '<|end|>' → logprob: -10.25436782836914
    9. '	while' → logprob: -10.37936782836914
    10. ' 
' → logprob: -11.00436782836914

Token 745: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5549793243408203
    2. '       ' → logprob: -1.0549793243408203
    3. ' while' → logprob: -2.5549793243408203
    4. '   ' → logprob: -11.55497932434082
    5. '	while' → logprob: -11.92997932434082
    6. '
' → logprob: -12.30497932434082
    7. '```' → logprob: -14.30497932434082
    8. '	' → logprob: -15.17997932434082
    9. '           ' → logprob: -15.80497932434082
    10. '        
' → logprob: -15.92997932434082

Token 746: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.07889033854007721
    2. 'left' → logprob: -2.578890323638916
    3. ' lef' → logprob: -14.828890800476074
    4. '	left' → logprob: -16.453889846801758
    5. '(left' → logprob: -16.703889846801758
    6. '   ' → logprob: -17.203889846801758
    7. '[left' → logprob: -18.703889846801758
    8. '_left' → logprob: -19.578889846801758
    9. ' right' → logprob: -19.953889846801758
    10. '    ' → logprob: -20.078889846801758

Token 747: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07892195880413055
    2. '<=' → logprob: -2.5789220333099365
    3. ' <' → logprob: -10.703922271728516
    4. '<' → logprob: -11.953922271728516
    5. ')<=' → logprob: -13.578922271728516
    6. '```' → logprob: -15.203922271728516
    7. '<|end|>' → logprob: -15.203922271728516
    8. ' ' → logprob: -15.578922271728516
    9. '<len' → logprob: -15.578922271728516
    10. ']<=' → logprob: -15.703922271728516

Token 748: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.004078401252627373
    2. ' right' → logprob: -5.504078388214111
    3. '	right' → logprob: -18.129077911376953
    4. '[right' → logprob: -19.504077911376953
    5. '_right' → logprob: -19.879077911376953
    6. '(right' → logprob: -20.504077911376953
    7. 'Right' → logprob: -21.379077911376953
    8. ',right' → logprob: -21.379077911376953
    9. ' ' → logprob: -21.879077911376953
    10. ':right' → logprob: -22.129077911376953

Token 749: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6342982649803162
    2. ':' → logprob: -0.7592982649803162
    3. '           ' → logprob: -6.884298324584961
    4. '       ' → logprob: -7.884298324584961
    5. '<|end|>' → logprob: -9.134298324584961
    6. '<|end|>' → logprob: -10.134298324584961
    7. ' and' → logprob: -10.259298324584961
    8. '):
' → logprob: -10.509298324584961
    9. ',' → logprob: -10.759298324584961
    10. '=' → logprob: -11.384298324584961

Token 750: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044258590787649155
    2. '	       ' → logprob: -8.625442504882812
    3. '<|end|>' → logprob: -9.750442504882812
    4. ' mid' → logprob: -10.500442504882812
    5. '```' → logprob: -10.500442504882812
    6. '		' → logprob: -10.875442504882812
    7. '            
' → logprob: -10.875442504882812
    8. '   ' → logprob: -11.000442504882812
    9. '       ' → logprob: -11.125442504882812
    10. '            ' → logprob: -11.250442504882812

Token 751: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.05369728431105614
    2. 'mid' (adapté à ' mid') → logprob: -3.178697347640991
    3. '           ' → logprob: -4.553697109222412
    4. ' midpoint' → logprob: -9.92869758605957
    5. '_mid' → logprob: -11.30369758605957
    6. 'm' → logprob: -11.30369758605957
    7. '[mid' → logprob: -11.92869758605957
    8. ' m' → logprob: -12.05369758605957
    9. '```' → logprob: -12.17869758605957
    10. ' middle' → logprob: -12.17869758605957

Token 752: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300376772880554
    2. '=' → logprob: -3.168003797531128
    3. '=int' → logprob: -13.293004035949707
    4. '<|end|>' → logprob: -14.043004035949707
    5. ')' → logprob: -14.418004035949707
    6. ' =
' → logprob: -15.918004035949707
    7. '=k' → logprob: -16.29300308227539
    8. ' ' → logprob: -16.29300308227539
    9. '=line' → logprob: -16.41800308227539
    10. '```' → logprob: -16.41800308227539

Token 753: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3133237659931183
    2. '(left' → logprob: -1.313323736190796
    3. ' left' → logprob: -10.188323974609375
    4. 'left' → logprob: -10.813323974609375
    5. '           ' → logprob: -12.688323974609375
    6. '[left' → logprob: -14.188323974609375
    7. '   ' → logprob: -15.438323974609375
    8. ' ' → logprob: -16.188323974609375
    9. '(' → logprob: -16.688323974609375
    10. '(right' → logprob: -17.813323974609375

Token 754: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.306760805164231e-05
    2. ' left' → logprob: -11.25001335144043
    3. 'right' → logprob: -19.37501335144043
    4. '[left' → logprob: -21.25001335144043
    5. '(left' → logprob: -21.87501335144043
    6. '	left' → logprob: -21.87501335144043
    7. '   ' → logprob: -22.75001335144043
    8. 'lef' → logprob: -23.37501335144043
    9. '_left' → logprob: -23.62501335144043
    10. '.left' → logprob: -23.87501335144043

Token 755: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889000326395035
    2. '+' → logprob: -2.578890085220337
    3. ' +
' → logprob: -16.203889846801758
    4. ')' → logprob: -16.328889846801758
    5. ' ' → logprob: -17.078889846801758
    6. ' ' → logprob: -17.078889846801758
    7. '+
' → logprob: -18.578889846801758
    8. '	' → logprob: -19.578889846801758
    9. '```' → logprob: -19.578889846801758
    10. '   ' → logprob: -20.078889846801758

Token 756: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.001170225441455841
    2. ' right' → logprob: -6.7511701583862305
    3. '(right' → logprob: -17.376171112060547
    4. '[right' → logprob: -18.126171112060547
    5. '	right' → logprob: -18.626171112060547
    6. '.right' → logprob: -19.751171112060547
    7. '
' → logprob: -20.251171112060547
    8. '   ' → logprob: -20.751171112060547
    9. '           ' → logprob: -20.751171112060547
    10. '_right' → logprob: -20.876171112060547

Token 757: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.666993507067673e-05
    2. ')//' → logprob: -10.250036239624023
    3. ')>>' → logprob: -13.875036239624023
    4. ' )' → logprob: -15.125036239624023
    5. ')
' → logprob: -18.250036239624023
    6. '）' → logprob: -20.250036239624023
    7. '   ' → logprob: -20.375036239624023
    8. ']' → logprob: -20.875036239624023
    9. '>>' → logprob: -21.000036239624023
    10. '//' → logprob: -21.125036239624023

Token 758: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.45842137932777405
    2. ')' → logprob: -1.7084213495254517
    3. '//' → logprob: -1.7084213495254517
    4. '>>' → logprob: -5.458421230316162
    5. ')//' → logprob: -7.458421230316162
    6. '```' → logprob: -8.20842170715332
    7. ' >>' → logprob: -8.95842170715332
    8. ']' → logprob: -9.33342170715332
    9. '   ' → logprob: -10.70842170715332
    10. '
' → logprob: -11.33342170715332

Token 759: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '```' → logprob: -18.625179290771484
    4. '   ' → logprob: -19.500179290771484
    5. '۲' → logprob: -19.875179290771484
    6. '=' → logprob: -20.125179290771484
    7. '２' → logprob: -20.875179290771484
    8. '२' → logprob: -21.375179290771484
    9. '
' → logprob: -21.437679290771484
    10. '২' → logprob: -21.562679290771484

Token 760: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -23.75
    4. '   ' → logprob: -24.75
    5. '۲' → logprob: -24.75
    6. '२' → logprob: -25.625
    7. '২' → logprob: -25.625
    8. '２' → logprob: -25.875
    9. '
' → logprob: -26.0
    10. '=' → logprob: -26.0

Token 761: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03784880042076111
    2. '
' → logprob: -3.412848711013794
    3. '<|end|>' → logprob: -6.287848949432373
    4. '            
' → logprob: -7.537848949432373
    5. '       ' → logprob: -7.662848949432373
    6. ' if' → logprob: -7.787848949432373
    7. '  
' → logprob: -8.412848472595215
    8. '<|end|>' → logprob: -8.412848472595215
    9. ')' → logprob: -9.412848472595215
    10. '```' → logprob: -9.787848472595215

Token 762: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000918604782782495
    2. 'if' → logprob: -7.375918388366699
    3. ' if' → logprob: -8.2509183883667
    4. '       ' → logprob: -10.7509183883667
    5. '   ' → logprob: -13.0009183883667
    6. '```' → logprob: -13.1259183883667
    7. '               ' → logprob: -13.6259183883667
    8. 'token' → logprob: -13.7509183883667
    9. '            
' → logprob: -14.1259183883667
    10. '
' → logprob: -14.7509183883667

Token 763: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3155873417854309
    2. '           ' → logprob: -1.3155872821807861
    3. ' if' → logprob: -6.065587520599365
    4. '       ' → logprob: -14.565587043762207
    5. '   ' → logprob: -14.690587043762207
    6. '               ' → logprob: -15.440587043762207
    7. '	if' → logprob: -15.940587043762207
    8. 'If' → logprob: -16.190587997436523
    9. '```' → logprob: -16.315587997436523
    10. '          ' → logprob: -17.190587997436523

Token 764: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.20162256062030792
    2. ' simulator' → logprob: -1.7016226053237915
    3. '           ' → logprob: -9.07662296295166
    4. ' sim' → logprob: -10.07662296295166
    5. '(sim' → logprob: -10.45162296295166
    6. ' simul' → logprob: -12.07662296295166
    7. '               ' → logprob: -12.32662296295166
    8. '   ' → logprob: -13.32662296295166
    9. 'solver' → logprob: -13.32662296295166
    10. 'simulate' → logprob: -13.70162296295166

Token 765: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.75
    3. '.Can' → logprob: -17.25
    4. ' .' → logprob: -18.375
    5. 'can' → logprob: -19.5
    6. '.has' → logprob: -19.625
    7. '	can' → logprob: -20.25
    8. '_can' → logprob: -20.625
    9. '(can' → logprob: -21.5
    10. '   ' → logprob: -21.75

Token 766: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -4.961759259458631e-06
    2. 'win' → logprob: -12.625004768371582
    3. '_can' → logprob: -14.000004768371582
    4. '_w' → logprob: -14.125004768371582
    5. '_' → logprob: -17.3750057220459
    6. 'Win' → logprob: -17.6250057220459
    7. ' win' → logprob: -17.6250057220459
    8. '\' → logprob: -18.1250057220459
    9. '_WIN' → logprob: -18.2500057220459
    10. '```' → logprob: -18.3750057220459

Token 767: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -8.41866585687967e-06
    2. '_w' → logprob: -12.500008583068848
    3. 'with' → logprob: -12.750008583068848
    4. '
' → logprob: -14.875008583068848
    5. '_WITH' → logprob: -15.125008583068848
    6. '   ' → logprob: -15.375008583068848
    7. 'With' → logprob: -16.00000762939453
    8. '_for' → logprob: -16.12500762939453
    9. ' _' → logprob: -16.12500762939453
    10. '_' → logprob: -16.25000762939453

Token 768: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -8.816591434879228e-05
    2. 'k' → logprob: -9.37508773803711
    3. 'mid' → logprob: -13.25008773803711
    4. '_mid' → logprob: -14.87508773803711
    5. '(k' → logprob: -15.50008773803711
    6. '_i' → logprob: -16.12508773803711
    7. '[k' → logprob: -16.25008773803711
    8. '```' → logprob: -16.37508773803711
    9. '
' → logprob: -16.87508773803711
    10. 's' → logprob: -16.87508773803711

Token 769: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.00033272415748797357
    2. '[mid' → logprob: -9.000332832336426
    3. 'mid' → logprob: -9.375332832336426
    4. '_mid' → logprob: -9.625332832336426
    5. '_k' → logprob: -11.125332832336426
    6. '(k' → logprob: -11.250332832336426
    7. '_' → logprob: -11.625332832336426
    8. '_(' → logprob: -12.000332832336426
    9. '(m' → logprob: -12.250332832336426
    10. '(' → logprob: -12.375332832336426

Token 770: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06197866424918175
    2. '):
' → logprob: -2.811978578567505
    3. ':' → logprob: -12.561978340148926
    4. ' ):' → logprob: -12.686978340148926
    5. ')' → logprob: -12.936978340148926
    6. '):
' → logprob: -13.311978340148926
    7. '):

' → logprob: -15.936978340148926
    8. ' ):
' → logprob: -15.936978340148926
    9. '():' → logprob: -17.061979293823242
    10. '():
' → logprob: -17.811979293823242

Token 771: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003091254911851138
    2. '           ' → logprob: -8.625308990478516
    3. '                
' → logprob: -10.875308990478516
    4. 'answer' → logprob: -10.875308990478516
    5. '```' → logprob: -10.875308990478516
    6. ':
' → logprob: -11.250308990478516
    7. '<|end|>' → logprob: -11.625308990478516
    8. '              ' → logprob: -11.750308990478516
    9. ':' → logprob: -12.000308990478516
    10. '                   ' → logprob: -12.125308990478516

Token 772: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.3543221950531006
    2. ' answer' → logprob: -1.6043221950531006
    3. '               ' → logprob: -2.3543221950531006
    4. '           ' → logprob: -6.10432243347168
    5. '                   ' → logprob: -9.85432243347168
    6. '   ' → logprob: -10.35432243347168
    7. '	answer' → logprob: -10.97932243347168
    8. '
' → logprob: -11.47932243347168
    9. '       ' → logprob: -12.10432243347168
    10. '```' → logprob: -12.35432243347168

Token 773: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868711292743683
    2. '=' → logprob: -1.136871099472046
    3. '   ' → logprob: -16.886871337890625
    4. '           ' → logprob: -17.511871337890625
    5. ' ' → logprob: -18.386871337890625
    6. '    ' → logprob: -18.636871337890625
    7. 's' → logprob: -18.761871337890625
    8. '            ' → logprob: -19.011871337890625
    9. ')' → logprob: -19.386871337890625
    10. ',' → logprob: -19.636871337890625

Token 774: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.054901123046875
    2. ' mid' → logprob: -2.929901123046875
    3. 'str' → logprob: -11.054901123046875
    4. '           ' → logprob: -13.679901123046875
    5. ' str' → logprob: -14.054901123046875
    6. '               ' → logprob: -15.179901123046875
    7. '(mid' → logprob: -15.304901123046875
    8. '[mid' → logprob: -15.804901123046875
    9. 'm' → logprob: -16.429901123046875
    10. '   ' → logprob: -16.929901123046875

Token 775: ' 
' (ID: 793)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.664371848164592e-05
    2. '           ' → logprob: -12.000016212463379
    3. '
' → logprob: -12.375016212463379
    4. '                
' → logprob: -12.750016212463379
    5. '              ' → logprob: -14.125016212463379
    6. ',' → logprob: -14.500016212463379
    7. '                   ' → logprob: -14.625016212463379
    8. '    
' → logprob: -14.750016212463379
    9. '			' → logprob: -14.875016212463379
    10. '                ' → logprob: -15.750016212463379

Token 776: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.255023956531659e-05
    2. '
' → logprob: -10.000072479248047
    3. '           ' → logprob: -11.250072479248047
    4. '                
' → logprob: -12.250072479248047
    5. 'right' → logprob: -13.000072479248047
    6. '                   ' → logprob: -13.500072479248047
    7. '    
' → logprob: -13.625072479248047
    8. '              ' → logprob: -14.125072479248047
    9. '  
' → logprob: -14.375072479248047
    10. '```' → logprob: -14.625072479248047

Token 777: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0003721622342709452
    2. ' right' → logprob: -8.500371932983398
    3. '
' → logprob: -8.750371932983398
    4. '               ' → logprob: -11.625371932983398
    5. 'r' → logprob: -14.750371932983398
    6. '
' → logprob: -15.125371932983398
    7. '           ' → logprob: -15.625371932983398
    8. '                
' → logprob: -16.1253719329834
    9. '[right' → logprob: -16.5003719329834
    10. '.right' → logprob: -16.6253719329834

Token 778: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. '-=' → logprob: -19.27975082397461
    4. ' -=' → logprob: -20.27975082397461
    5. ' ' → logprob: -21.15475082397461
    6. '=}' → logprob: -21.40475082397461
    7. '＝' → logprob: -21.65475082397461
    8. '.=' → logprob: -21.65475082397461
    9. '=
' → logprob: -22.27975082397461
    10. '   ' → logprob: -22.77975082397461

Token 779: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -9.615255839889869e-05
    2. ' mid' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.87509536743164
    4. '[mid' → logprob: -18.37509536743164
    5. 'midt' → logprob: -19.50009536743164
    6. 'm' → logprob: -20.12509536743164
    7. '(mid' → logprob: -20.25009536743164
    8. 'midd' → logprob: -20.37509536743164
    9. ' ' → logprob: -21.50009536743164
    10. 'middle' → logprob: -21.87509536743164

Token 780: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31326258182525635
    2. '-' → logprob: -1.3132625818252563
    3. ' ' → logprob: -14.063262939453125
    4. '
' → logprob: -18.563262939453125
    5. '   ' → logprob: -18.938262939453125
    6. '-
' → logprob: -19.063262939453125
    7. 's' → logprob: -19.188262939453125
    8. ' ' → logprob: -19.313262939453125
    9. ' 
' → logprob: -19.563262939453125
    10. '−' → logprob: -19.563262939453125

Token 781: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -20.875
    5. '
' → logprob: -21.25
    6. '۱' → logprob: -22.25
    7. '１' → logprob: -23.375
    8. ' ' → logprob: -23.4375
    9. '0' → logprob: -23.5
    10. '...' → logprob: -23.75

Token 782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -20.625
    5. '۱' → logprob: -20.75
    6. '
' → logprob: -21.4375
    7. '１' → logprob: -22.3125
    8. '১' → logprob: -22.4375
    9. '0' → logprob: -22.5
    10. '=' → logprob: -22.5625

Token 783: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0067941173911094666
    2. 'else' → logprob: -5.006793975830078
    3. ' else' → logprob: -9.506793975830078
    4. '		' → logprob: -13.256793975830078
    5. '       ' → logprob: -14.256793975830078
    6. 'elif' → logprob: -14.381793975830078
    7. '```' → logprob: -14.756793975830078
    8. '          ' → logprob: -15.381793975830078
    9. '            
' → logprob: -15.381793975830078
    10. '   ' → logprob: -15.756793975830078

Token 784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03918866440653801
    2. 'else' → logprob: -3.2891886234283447
    3. ' else' → logprob: -6.789188861846924
    4. '		' → logprob: -11.039188385009766
    5. '       ' → logprob: -13.664188385009766
    6. 'left' → logprob: -13.914188385009766
    7. '```' → logprob: -14.039188385009766
    8. '   ' → logprob: -14.539188385009766
    9. '	       ' → logprob: -15.164188385009766
    10. '               ' → logprob: -15.289188385009766

Token 785: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0286541935056448
    2. '           ' → logprob: -3.778654098510742
    3. ' else' → logprob: -5.278654098510742
    4. '       ' → logprob: -8.153654098510742
    5. '		' → logprob: -12.653654098510742
    6. '	else' → logprob: -13.403654098510742
    7. '   ' → logprob: -13.403654098510742
    8. '```' → logprob: -15.028654098510742
    9. '	       ' → logprob: -15.653654098510742
    10. '        ' → logprob: -16.528654098510742

Token 786: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003918937873095274
    2. ':' → logprob: -6.0039191246032715
    3. ':
' → logprob: -7.7539191246032715
    4. ':left' → logprob: -8.503918647766113
    5. '           ' → logprob: -8.753918647766113
    6. '   ' → logprob: -8.878918647766113
    7. '[left' → logprob: -9.003918647766113
    8. 'left' → logprob: -9.128918647766113
    9. '       ' → logprob: -9.628918647766113
    10. '                   ' → logprob: -10.128918647766113

Token 787: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20808500051498413
    2. 'left' → logprob: -1.958085060119629
    3. ' left' → logprob: -3.083085060119629
    4. '[left' → logprob: -7.708085060119629
    5. '	left' → logprob: -8.458085060119629
    6. '   ' → logprob: -9.708085060119629
    7. '       ' → logprob: -9.833085060119629
    8. '```' → logprob: -9.833085060119629
    9. ',left' → logprob: -10.708085060119629
    10. ':left' → logprob: -10.833085060119629

Token 788: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0382688082754612
    2. ' left' → logprob: -3.288268804550171
    3. '               ' → logprob: -8.53826904296875
    4. '[left' → logprob: -10.91326904296875
    5. '	left' → logprob: -11.91326904296875
    6. ':left' → logprob: -13.16326904296875
    7. '.left' → logprob: -13.66326904296875
    8. '   ' → logprob: -14.41326904296875
    9. ',left' → logprob: -14.41326904296875
    10. '                   ' → logprob: -14.66326904296875

Token 789: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. '=
' → logprob: -17.826414108276367
    4. ' =
' → logprob: -18.326414108276367
    5. ' ' → logprob: -18.451414108276367
    6. ' +=' → logprob: -18.951414108276367
    7. '            ' → logprob: -19.701414108276367
    8. '+=' → logprob: -19.826414108276367
    9. '＝' → logprob: -20.076414108276367
    10. '	' → logprob: -20.326414108276367

Token 790: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.3868822157382965
    2. ' mid' → logprob: -1.1368821859359741
    3. '[mid' → logprob: -12.261881828308105
    4. '(mid' → logprob: -12.261881828308105
    5. '_mid' → logprob: -13.761881828308105
    6. ' midpoint' → logprob: -15.261881828308105
    7. '.mid' → logprob: -15.886881828308105
    8. '           ' → logprob: -16.886882781982422
    9. ' ' → logprob: -17.261882781982422
    10. '    ' → logprob: -17.261882781982422

Token 791: ' +' (ID: 659)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03285028785467148
    2. ' =' → logprob: -3.5328502655029297
    3. '+' → logprob: -5.90785026550293
    4. ' +' → logprob: -7.90785026550293
    5. '+=' → logprob: -12.65785026550293
    6. ' ' → logprob: -12.78285026550293
    7. ' +=' → logprob: -13.28285026550293
    8. 'mid' → logprob: -14.78285026550293
    9. '               ' → logprob: -15.28285026550293
    10. '           ' → logprob: -15.53285026550293

Token 792: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -18.000009536743164
    4. '   ' → logprob: -20.250009536743164
    5. '0' → logprob: -20.500009536743164
    6. '=' → logprob: -20.500009536743164
    7. '۱' → logprob: -22.250009536743164
    8. '+' → logprob: -22.500009536743164
    9. '<|end|>' → logprob: -22.625009536743164
    10. '           ' → logprob: -22.750009536743164

Token 793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -17.250001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '
' → logprob: -20.125001907348633
    6. '0' → logprob: -20.875001907348633
    7. '=' → logprob: -21.000001907348633
    8. '       ' → logprob: -21.062501907348633
    9. '           ' → logprob: -21.250001907348633
    10. '  ' → logprob: -21.312501907348633

Token 794: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006033109966665506
    2. 'return' → logprob: -8.000603675842285
    3. ' return' → logprob: -8.875603675842285
    4. '
' → logprob: -9.375603675842285
    5. '<|end|>' → logprob: -10.625603675842285
    6. '        
' → logprob: -11.750603675842285
    7. '```' → logprob: -12.875603675842285
    8. '	return' → logprob: -13.000603675842285
    9. '      ' → logprob: -13.750603675842285
    10. ':return' → logprob: -13.750603675842285

Token 795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03894389793276787
    2. 'return' → logprob: -3.2889440059661865
    3. ' return' → logprob: -7.538943767547607
    4. '
' → logprob: -8.288944244384766
    5. '```' → logprob: -10.413944244384766
    6. '	return' → logprob: -10.663944244384766
    7. '        
' → logprob: -10.663944244384766
    8. '	' → logprob: -11.288944244384766
    9. '   ' → logprob: -11.413944244384766
    10. '{return' → logprob: -12.788944244384766

Token 796: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.028215067461133003
    2. '       ' → logprob: -4.278214931488037
    3. 'if' (adapté à ' if') → logprob: -4.278214931488037
    4. ' return' → logprob: -10.028215408325195
    5. '   ' → logprob: -10.153215408325195
    6. ' if' → logprob: -13.278215408325195
    7. '	return' → logprob: -14.403215408325195
    8. '```' → logprob: -14.778215408325195
    9. '{return' → logprob: -16.903215408325195
    10. ':return' → logprob: -17.903215408325195

Token 797: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.048589076846838
    2. ' answer' → logprob: -3.048588991165161
    3. '   ' → logprob: -13.423588752746582
    4. '	answer' → logprob: -15.423588752746582
    5. '(answer' → logprob: -17.2985897064209
    6. 'Answer' → logprob: -17.5485897064209
    7. 'ans' → logprob: -18.0485897064209
    8. '    ' → logprob: -18.0485897064209
    9. '  ' → logprob: -18.2985897064209
    10. ' ' → logprob: -18.5485897064209

Token 798: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20141470432281494
    2. 'is' → logprob: -1.701414704322815
    3. '==' → logprob: -13.951415061950684
    4. '	is' → logprob: -15.576415061950684
    5. 'if' → logprob: -15.701415061950684
    6. ' ' → logprob: -17.326414108276367
    7. ' ==' → logprob: -17.826414108276367
    8. '   ' → logprob: -17.951414108276367
    9. ' if' → logprob: -18.451414108276367
    10. 'i' → logprob: -18.451414108276367

Token 799: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011904643615707755
    2. ' None' → logprob: -6.751190662384033
    3. 'not' → logprob: -11.001190185546875
    4. '   ' → logprob: -13.001190185546875
    5. ' not' → logprob: -13.876190185546875
    6. '_None' → logprob: -16.126190185546875
    7. 'N' → logprob: -16.501190185546875
    8. 'Not' → logprob: -16.626190185546875
    9. '=None' → logprob: -17.501190185546875
    10. 'none' → logprob: -17.501190185546875

Token 800: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.027701182290911674
    2. ':' → logprob: -3.6527011394500732
    3. '           ' → logprob: -7.652701377868652
    4. '       ' → logprob: -7.777701377868652
    5. ' or' → logprob: -8.527701377868652
    6. ':return' → logprob: -8.527701377868652
    7. '   ' → logprob: -9.527701377868652
    8. 'return' → logprob: -11.527701377868652
    9. ':
' → logprob: -11.527701377868652
    10. ' and' → logprob: -11.652701377868652

Token 801: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5192242860794067
    2. '           ' → logprob: -1.7692242860794067
    3. ' return' → logprob: -1.8942242860794067
    4. 'return' → logprob: -2.769224166870117
    5. '   ' → logprob: -3.894224166870117
    6. '        
' → logprob: -8.019224166870117
    7. '	return' → logprob: -8.769224166870117
    8. '
' → logprob: -8.894224166870117
    9. '    
' → logprob: -9.019224166870117
    10. '            
' → logprob: -9.894224166870117

Token 802: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6025673151016235
    2. 'return' (adapté à ' return') → logprob: -0.9775673151016235
    3. '-' → logprob: -3.352567195892334
    4. '           ' → logprob: -3.852567195892334
    5. 'print' → logprob: -4.602567195892334
    6. '       ' → logprob: -5.227567195892334
    7. ' return' → logprob: -6.102567195892334
    8. 'n' → logprob: -6.852567195892334
    9. '1' → logprob: -7.602567195892334
    10. '>' → logprob: -8.727567672729492

Token 803: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5431405305862427
    2. 'n' → logprob: -1.4181405305862427
    3. '"' → logprob: -2.043140411376953
    4. '-' → logprob: -3.543140411376953
    5. 'str' → logprob: -5.293140411376953
    6. '"N' → logprob: -5.293140411376953
    7. ''' → logprob: -5.418140411376953
    8. 'N' → logprob: -6.793140411376953
    9. ''N' → logprob: -7.418140411376953
    10. ''n' → logprob: -7.418140411376953

Token 804: 'NA' (ID: 9555)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3082612156867981
    2. '0' → logprob: -1.5582611560821533
    3. 'Lo' → logprob: -4.308261394500732
    4. 'N' → logprob: -4.808261394500732
    5. '-Lo' → logprob: -4.808261394500732
    6. 'im' → logprob: -4.933261394500732
    7. 'NA' → logprob: -5.433261394500732
    8. '"' → logprob: -5.558261394500732
    9. 'LOS' → logprob: -5.933261394500732
    10. 'NO' → logprob: -6.808261394500732

Token 805: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0006377388490363955
    2. '"
' → logprob: -7.375637531280518
    3. '")' → logprob: -12.500638008117676
    4. '"
' → logprob: -12.875638008117676
    5. '<|end|>' → logprob: -13.250638008117676
    6. '".' → logprob: -14.750638008117676
    7. '">' → logprob: -14.875638008117676
    8. '"No' → logprob: -15.250638008117676
    9. '\n' → logprob: -15.375638008117676
    10. 'return' → logprob: -15.500638008117676

Token 806: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009816011879593134
    2. 'return' → logprob: -7.62598180770874
    3. '   ' → logprob: -8.500981330871582
    4. '
' → logprob: -8.500981330871582
    5. '	' → logprob: -10.750981330871582
    6. '<|end|>' → logprob: -10.750981330871582
    7. '        
' → logprob: -11.750981330871582
    8. ' return' → logprob: -11.875981330871582
    9. '    
' → logprob: -12.000981330871582
    10. 'else' → logprob: -12.125981330871582

Token 807: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23342743515968323
    2. 'return' → logprob: -1.7334274053573608
    3. '
' → logprob: -3.4834275245666504
    4. ' return' → logprob: -7.60842752456665
    5. 'else' (adapté à ' else') → logprob: -8.733427047729492
    6. '        
' → logprob: -9.858427047729492
    7. '   ' → logprob: -10.108427047729492
    8. '    
' → logprob: -10.858427047729492
    9. '  
' → logprob: -11.983427047729492
    10. '	return' → logprob: -11.983427047729492

Token 808: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13280855119228363
    2. ' return' → logprob: -2.8828084468841553
    3. ':
' → logprob: -3.0078084468841553
    4. ':' → logprob: -4.882808685302734
    5. 'return' → logprob: -5.132808685302734
    6. '   ' → logprob: -6.257808685302734
    7. '       ' → logprob: -6.257808685302734
    8. ':return' → logprob: -7.007808685302734
    9. '          ' → logprob: -8.632808685302734
    10. '{return' → logprob: -9.007808685302734

Token 809: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10220316797494888
    2. ' return' → logprob: -2.352203130722046
    3. '           ' → logprob: -6.352203369140625
    4. '       ' → logprob: -8.352203369140625
    5. '   ' → logprob: -11.727203369140625
    6. '               ' → logprob: -12.602203369140625
    7. '{return' → logprob: -12.727203369140625
    8. ':return' → logprob: -14.852203369140625
    9. '	return' → logprob: -14.977203369140625
    10. '```' → logprob: -15.102203369140625

Token 810: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011068218387663364
    2. 'str' → logprob: -4.511068344116211
    3. ' return' → logprob: -11.261068344116211
    4. '           ' → logprob: -12.136068344116211
    5. 'answer' → logprob: -13.261068344116211
    6. ' str' → logprob: -15.011068344116211
    7. '   ' → logprob: -17.51106834411621
    8. '       ' → logprob: -17.76106834411621
    9. 'print' → logprob: -17.88606834411621
    10. '{return' → logprob: -18.01106834411621

Token 811: ' answer' (ID: 6052)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5792039632797241
    2. 'answer' → logprob: -0.8292039632797241
    3. ' str' → logprob: -6.079204082489014
    4. ' answer' → logprob: -6.954204082489014
    5. 'ans' → logprob: -11.579203605651855
    6. 'f' → logprob: -13.579203605651855
    7. '(answer' → logprob: -14.204203605651855
    8. '	answer' → logprob: -14.329203605651855
    9. '(str' → logprob: -14.704203605651855
    10. '   ' → logprob: -14.704203605651855

Token 812: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 813: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01026972383260727
    2. 'def' → logprob: -4.635269641876221
    3. ' if' → logprob: -8.510270118713379
    4. '```' → logprob: -8.635270118713379
    5. '<|end|>' → logprob: -9.385270118713379
    6. '#' → logprob: -10.385270118713379
    7. 'import' → logprob: -11.760270118713379
    8. '#!/' → logprob: -12.760270118713379
    9. 'If' → logprob: -13.260270118713379
    10. '  
' → logprob: -13.385270118713379

Token 814: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0019609862938523293
    2. ' main' → logprob: -6.251960754394531
    3. 'run' → logprob: -10.751960754394531
    4. '_main' → logprob: -11.626960754394531
    5. '__' → logprob: -13.376960754394531
    6. ' run' → logprob: -15.376960754394531
    7. 'solve' → logprob: -15.876960754394531
    8. '	main' → logprob: -17.12696075439453
    9. 'process' → logprob: -17.62696075439453
    10. '```' → logprob: -17.75196075439453

Token 815: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00012475410767365247
    2. '():
' → logprob: -9.00012493133545
    3. ' ():' → logprob: -13.87512493133545
    4. '()' → logprob: -15.75012493133545
    5. '():
' → logprob: -15.87512493133545
    6. '():

' → logprob: -18.500123977661133
    7. '(' → logprob: -19.500123977661133
    8. '()>' → logprob: -19.750123977661133
    9. ':' → logprob: -20.125123977661133
    10. '().' → logprob: -20.750123977661133

Token 816: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007482792134396732
    2. 'input' → logprob: -7.375748157501221
    3. ' input' → logprob: -9.250748634338379
    4. '   ' → logprob: -11.500748634338379
    5. 'if' → logprob: -12.125748634338379
    6. '```' → logprob: -12.250748634338379
    7. 'import' → logprob: -13.250748634338379
    8. ' if' → logprob: -13.750748634338379
    9. '	input' → logprob: -13.750748634338379
    10. '_input' → logprob: -14.625748634338379

Token 817: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.0023832572624087334
    2. ' input' → logprob: -7.002383232116699
    3. 'reader' → logprob: -7.252383232116699
    4. '   ' → logprob: -7.377383232116699
    5. 'import' → logprob: -9.0023832321167
    6. ' reader' → logprob: -12.1273832321167
    7. 'stdin' → logprob: -12.5023832321167
    8. 'from' → logprob: -13.1273832321167
    9. 'ir' → logprob: -14.0023832321167
    10. '  ' → logprob: -14.8773832321167

Token 818: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -5.0259150157216936e-05
    2. '_writer' → logprob: -10.62505054473877
    3. '()' → logprob: -11.12505054473877
    4. '_' → logprob: -11.75005054473877
    5. 'Reader' → logprob: -12.87505054473877
    6. '(_' → logprob: -15.62505054473877
    7. '_receiver' → logprob: -16.750049591064453
    8. '\' → logprob: -17.000049591064453
    9. 'reader' → logprob: -17.000049591064453
    10. '_parser' → logprob: -17.250049591064453

Token 819: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=
' → logprob: -16.01104736328125
    4. '=

' → logprob: -17.26104736328125
    5. '＝' → logprob: -17.88604736328125
    6. '   ' → logprob: -18.01104736328125
    7. '=sys' → logprob: -19.63604736328125
    8. '_=' → logprob: -20.01104736328125
    9. '=}' → logprob: -20.01104736328125
    10. ' =
' → logprob: -20.01104736328125

Token 820: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.0001584850688232109
    2. ' Std' → logprob: -8.750158309936523
    3. 'Standard' → logprob: -17.375158309936523
    4. '.Std' → logprob: -18.750158309936523
    5. 'std' → logprob: -19.125158309936523
    6. '   ' → logprob: -19.500158309936523
    7. ' ' → logprob: -20.500158309936523
    8. 'Sys' → logprob: -20.500158309936523
    9. 'St' → logprob: -20.875158309936523
    10. 'STD' → logprob: -21.000158309936523

Token 821: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. 'input' → logprob: -20.25
    3. '	Input' → logprob: -22.0
    4. '_input' → logprob: -22.75
    5. '\Input' → logprob: -23.375
    6. '```' → logprob: -23.5
    7. ' Input' → logprob: -24.0
    8. '<Input' → logprob: -24.0
    9. '
' → logprob: -24.375
    10. '_Input' → logprob: -24.375

Token 822: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -3.292907877039397e-06
    2. 'reader' → logprob: -13.00000286102295
    3. '_reader' → logprob: -14.12500286102295
    4. '.Reader' → logprob: -15.37500286102295
    5. 'Readers' → logprob: -17.125003814697266
    6. '-reader' → logprob: -18.250003814697266
    7. 'Writer' → logprob: -19.125003814697266
    8. '(reader' → logprob: -19.375003814697266
    9. '	reader' → logprob: -19.625003814697266
    10. '   ' → logprob: -20.000003814697266

Token 823: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021156704053282738
    2. '
' → logprob: -4.7711567878723145
    3. '(output' → logprob: -4.7711567878723145
    4. 'output' → logprob: -5.6461567878723145
    5. '(
' → logprob: -9.146156311035156
    6. '<|end|>' → logprob: -9.521156311035156
    7. '()
' → logprob: -9.771156311035156
    8. '    
' → logprob: -9.771156311035156
    9. '(' → logprob: -9.771156311035156
    10. '()' → logprob: -10.396156311035156

Token 824: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37155458331108093
    2. 'output' → logprob: -1.3715546131134033
    3. ' output' → logprob: -2.8715546131134033
    4. '
' → logprob: -11.496554374694824
    5. '	output' → logprob: -12.996554374694824
    6. '_output' → logprob: -13.746554374694824
    7. '```' → logprob: -13.871554374694824
    8. '(output' → logprob: -14.871554374694824
    9. '  ' → logprob: -15.496554374694824
    10. 'input' → logprob: -16.12155532836914

Token 825: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -4.320199877838604e-07
    2. ' output' → logprob: -14.75
    3. '   ' → logprob: -17.25
    4. '	output' → logprob: -22.625
    5. '
' → logprob: -23.0
    6. 'input' → logprob: -23.125
    7. '_output' → logprob: -23.125
    8. '(output' → logprob: -23.375
    9. '```' → logprob: -24.0
    10. 'Output' → logprob: -24.125

Token 826: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -0.00524454889819026
    2. '_reader' → logprob: -5.255244731903076
    3. 'Writer' → logprob: -12.255244255065918
    4. '   ' → logprob: -12.380244255065918
    5. '_output' → logprob: -14.255244255065918
    6. '._' → logprob: -15.255244255065918
    7. '_' → logprob: -15.755244255065918
    8. ')_' → logprob: -16.005245208740234
    9. '.Writer' → logprob: -16.380245208740234
    10. '_receiver' → logprob: -16.630245208740234

Token 827: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132617771625519
    2. ' =' → logprob: -1.3132617473602295
    3. '=
' → logprob: -16.938261032104492
    4. '   ' → logprob: -18.188261032104492
    5. ' ' → logprob: -18.563261032104492
    6. ' =
' → logprob: -18.813261032104492
    7. '=

' → logprob: -20.313261032104492
    8. ')' → logprob: -20.438261032104492
    9. '	' → logprob: -20.563261032104492
    10. '＝' → logprob: -20.938261032104492

Token 828: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -9.615255839889869e-05
    2. ' Std' → logprob: -9.250096321105957
    3. 'Sys' → logprob: -18.50009536743164
    4. 'Standard' → logprob: -18.87509536743164
    5. ' ' → logprob: -19.25009536743164
    6. '.Std' → logprob: -19.25009536743164
    7. '   ' → logprob: -19.62509536743164
    8. 'std' → logprob: -20.12509536743164
    9. 'St' → logprob: -20.62509536743164
    10. 'Sta' → logprob: -20.75009536743164

Token 829: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 'Input' → logprob: -19.125
    3. '	Output' → logprob: -19.5
    4. 'output' → logprob: -19.625
    5. '_output' → logprob: -20.125
    6. '_OUTPUT' → logprob: -21.125
    7. '_Output' → logprob: -21.375
    8. '.Output' → logprob: -21.375
    9. 'OUTPUT' → logprob: -22.25
    10. '(Output' → logprob: -22.5

Token 830: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005644689663313329
    2. 'solution' → logprob: -8.625564575195312
    3. 'battle' → logprob: -8.875564575195312
    4. '
' → logprob: -9.750564575195312
    5. 'solver' → logprob: -9.875564575195312
    6. 'def' → logprob: -10.000564575195312
    7. ' battle' → logprob: -10.125564575195312
    8. ' solution' → logprob: -10.625564575195312
    9. 's' → logprob: -12.375564575195312
    10. '```' → logprob: -12.500564575195312

Token 831: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011757015017792583
    2. 'solution' → logprob: -7.001175880432129
    3. 'battle' → logprob: -9.251175880432129
    4. 'solver' → logprob: -9.626175880432129
    5. ' solution' → logprob: -9.876175880432129
    6. 's' → logprob: -10.876175880432129
    7. '```' → logprob: -11.376175880432129
    8. ' battle' → logprob: -11.626175880432129
    9. 'sol' → logprob: -12.501175880432129
    10. '
' → logprob: -13.126175880432129

Token 832: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' (adapté à ' solution') → logprob: -0.007790686562657356
    2. ' solution' → logprob: -5.007790565490723
    3. 'solver' → logprob: -7.132790565490723
    4. '   ' → logprob: -8.757790565490723
    5. 'battle' → logprob: -9.382790565490723
    6. 'sol' → logprob: -10.382790565490723
    7. ' battle' → logprob: -13.632790565490723
    8. '```' → logprob: -14.132790565490723
    9. ' solver' → logprob: -14.257790565490723
    10. '(solution' → logprob: -14.757790565490723

Token 833: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02151588536798954
    2. '.solve' → logprob: -3.8965158462524414
    3. '.solution' → logprob: -7.271515846252441
    4. ' =' → logprob: -9.271515846252441
    5. '   ' → logprob: -9.771515846252441
    6. '.=' → logprob: -10.521515846252441
    7. '.sol' → logprob: -10.521515846252441
    8. '.s' → logprob: -10.896515846252441
    9. '=' → logprob: -11.021515846252441
    10. '.run' → logprob: -12.271515846252441

Token 834: ' Battle' (ID: 31075)
  Prédit: ' Battle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Battle' → logprob: -0.25192955136299133
    2. 'Battle' → logprob: -1.501929521560669
    3. ' battle' → logprob: -14.75192928314209
    4. ' Battles' → logprob: -16.001930236816406
    5. 'Batt' → logprob: -17.251930236816406
    6. ' ' → logprob: -18.876930236816406
    7. '   ' → logprob: -19.376930236816406
    8. 'battle' → logprob: -19.501930236816406
    9. ' Battlefield' → logprob: -19.501930236816406
    10. ' Batt' → logprob: -20.126930236816406

Token 835: 'Solution' (ID: 44456)
  Prédit: 'Solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: 0.0
    2. 'solution' → logprob: -17.125
    3. 'Solver' → logprob: -18.0
    4. '_solution' → logprob: -18.75
    5. 'Sol' → logprob: -18.875
    6. 'olution' → logprob: -19.25
    7. '
' → logprob: -19.375
    8. ' Solution' → logprob: -19.625
    9. '   ' → logprob: -21.0
    10. 'Resolution' → logprob: -21.0

Token 836: '(input' (ID: 10054)
  Prédit: '(solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(solution' → logprob: -0.31295880675315857
    2. '(input' → logprob: -1.562958836555481
    3. '   ' → logprob: -3.5629587173461914
    4. 'solution' → logprob: -4.062958717346191
    5. '(
' → logprob: -4.687958717346191
    6. '(' → logprob: -5.687958717346191
    7. 'main' → logprob: -7.937958717346191
    8. '(main' → logprob: -7.937958717346191
    9. 'input' → logprob: -9.187958717346191
    10. ' (' → logprob: -10.187958717346191

Token 837: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.0019297054968774319
    2. '_writer' → logprob: -6.251929759979248
    3. '_' → logprob: -15.00192928314209
    4. 'reader' → logprob: -16.126930236816406
    5. '.Reader' → logprob: -16.251930236816406
    6. '   ' → logprob: -16.251930236816406
    7. '_runner' → logprob: -16.251930236816406
    8. 'Reader' → logprob: -16.501930236816406
    9. '._' → logprob: -17.001930236816406
    10. '_solver' → logprob: -17.376930236816406

Token 838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.436450636712834e-05
    2. '   ' → logprob: -10.500094413757324
    3. ',
' → logprob: -10.750094413757324
    4. ',input' → logprob: -10.750094413757324
    5. ')' → logprob: -11.500094413757324
    6. 'output' → logprob: -12.000094413757324
    7. '(output' → logprob: -12.375094413757324
    8. ' ,' → logprob: -13.250094413757324
    9. '<|end|>' → logprob: -14.500094413757324
    10. ',\
' → logprob: -16.000093460083008

Token 839: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.16022422909736633
    2. ' output' → logprob: -1.910224199295044
    3. '	output' → logprob: -16.53522491455078
    4. '(output' → logprob: -17.41022491455078
    5. '_output' → logprob: -18.91022491455078
    6. '   ' → logprob: -19.28522491455078
    7. '$output' → logprob: -19.41022491455078
    8. '.output' → logprob: -20.28522491455078
    9. 'Output' → logprob: -21.78522491455078
    10. 'out' → logprob: -22.53522491455078

Token 840: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -0.0008166544139385223
    2. '_reader' → logprob: -7.125816822052002
    3. '_output' → logprob: -12.375816345214844
    4. '   ' → logprob: -12.875816345214844
    5. '_w' → logprob: -12.875816345214844
    6. ')' → logprob: -14.500816345214844
    7. 'Writer' → logprob: -14.625816345214844
    8. '```' → logprob: -14.875816345214844
    9. ',' → logprob: -15.375816345214844
    10. '_write' → logprob: -15.625816345214844

Token 841: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2383638471364975
    2. ')' → logprob: -1.6133638620376587
    3. ')
' → logprob: -4.363363742828369
    4. ').' → logprob: -9.488364219665527
    5. '(solution' → logprob: -11.113364219665527
    6. '
' → logprob: -11.488364219665527
    7. '<|end|>' → logprob: -11.988364219665527
    8. '    
' → logprob: -12.113364219665527
    9. '):
' → logprob: -12.863364219665527
    10. ')s' → logprob: -13.238364219665527

Token 842: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06393695622682571
    2. 'solution' → logprob: -2.813936948776245
    3. '
' → logprob: -6.313937187194824
    4. ' solution' → logprob: -9.313937187194824
    5. '(solution' → logprob: -10.188937187194824
    6. '```' → logprob: -11.063937187194824
    7. '    
' → logprob: -11.813937187194824
    8. '_solution' → logprob: -13.063937187194824
    9. '
' → logprob: -13.438937187194824
    10. '``' → logprob: -14.938937187194824

Token 843: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' (adapté à ' solution') → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.0
    3. ' solution' → logprob: -16.75
    4. '(solution' → logprob: -18.75
    5. '```' → logprob: -19.0
    6. '
' → logprob: -20.625
    7. '_solution' → logprob: -22.125
    8. '.solution' → logprob: -22.625
    9. 'solutions' → logprob: -22.875
    10. '    
' → logprob: -23.0

Token 844: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.0009124171338044107
    2. '.' → logprob: -7.000912189483643
    3. '.sol' → logprob: -14.8759126663208
    4. 'solve' → logprob: -16.000911712646484
    5. '.
' → logprob: -16.125911712646484
    6. '.run' → logprob: -16.250911712646484
    7. '.solution' → logprob: -17.000911712646484
    8. ' .' → logprob: -17.750911712646484
    9. '.execute' → logprob: -17.750911712646484
    10. '.save' → logprob: -17.875911712646484

Token 845: '()


' (ID: 29771)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0628424808382988
    2. '<|end|>' → logprob: -2.93784236907959
    3. 'if' → logprob: -5.31284236907959
    4. '

' → logprob: -6.18784236907959
    5. '()' → logprob: -7.93784236907959
    6. '()
' → logprob: -8.56284236907959
    7. '<|end|>' → logprob: -8.68784236907959
    8. '```' → logprob: -9.68784236907959
    9. '()

' → logprob: -9.93784236907959
    10. '\n' → logprob: -10.31284236907959

Token 846: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.816093228830141e-06
    2. 'main' → logprob: -13.50000286102295
    3. '```' → logprob: -14.12500286102295
    4. ' if' → logprob: -14.37500286102295
    5. '#' → logprob: -17.875001907348633
    6. '
' → logprob: -19.250001907348633
    7. '#if' → logprob: -20.375001907348633
    8. '	if' → logprob: -20.375001907348633
    9. '\' → logprob: -20.875001907348633
    10. '    
' → logprob: -21.125001907348633

Token 847: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3133202791213989
    2. '__' → logprob: -1.313320279121399
    3. '_name' → logprob: -10.06332015991211
    4. 'name' → logprob: -11.93832015991211
    5. '___' → logprob: -12.31332015991211
    6. '_' → logprob: -12.93832015991211
    7. ' ' → logprob: -13.81332015991211
    8. ' ' → logprob: -14.68832015991211
    9. '____' → logprob: -14.93832015991211
    10. '.__' → logprob: -16.31332015991211

Token 848: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5570140480995178
    2. '==' → logprob: -1.057013988494873
    3. ' ==' → logprob: -2.557013988494873
    4. 'name' → logprob: -6.682013988494873
    5. '=="' → logprob: -7.807013988494873
    6. '=='' → logprob: -9.057014465332031
    7. ' __' → logprob: -9.682014465332031
    8. '=' → logprob: -10.432014465332031
    9. '==
' → logprob: -10.557014465332031
    10. '__.__' → logprob: -10.807014465332031

Token 849: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5048530030981055e-06
    2. '==' → logprob: -13.500001907348633
    3. '__.__' → logprob: -17.125001907348633
    4. '____' → logprob: -18.750001907348633
    5. '___' → logprob: -19.125001907348633
    6. 'name' → logprob: -19.375001907348633
    7. '__.' → logprob: -19.500001907348633
    8. '=="' → logprob: -19.500001907348633
    9. '__
' → logprob: -19.750001907348633
    10. '__('' → logprob: -20.375001907348633

Token 850: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014345075003802776
    2. '==' → logprob: -4.264345169067383
    3. ' ==' → logprob: -9.014345169067383
    4. '=="' → logprob: -10.139345169067383
    5. '__.__' → logprob: -11.264345169067383
    6. '=='' → logprob: -12.389345169067383
    7. '=' → logprob: -13.764345169067383
    8. '===' → logprob: -14.389345169067383
    9. '_' → logprob: -14.514345169067383
    10. '.__' → logprob: -15.014345169067383

Token 851: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048615068197250366
    2. ''' → logprob: -3.048614978790283
    3. '__' → logprob: -10.548615455627441
    4. ' "__' → logprob: -13.673615455627441
    5. '"user' → logprob: -15.923615455627441
    6. '"class' → logprob: -16.923614501953125
    7. '"name' → logprob: -17.048614501953125
    8. '("__' → logprob: -17.298614501953125
    9. ' '__' → logprob: -17.423614501953125
    10. '('__' → logprob: -17.798614501953125

Token 852: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10024204105138779
    2. '__' → logprob: -2.3502421379089355
    3. 'name' → logprob: -10.975241661071777
    4. '"' → logprob: -11.350241661071777
    5. ''' → logprob: -12.475241661071777
    6. '__":
' → logprob: -13.600241661071777
    7. ' main' → logprob: -15.100241661071777
    8. '__':
' → logprob: -15.475241661071777
    9. '_main' → logprob: -15.725241661071777
    10. '__
' → logprob: -15.850241661071777

Token 853: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0812186524271965
    2. '__' → logprob: -2.581218719482422
    3. '__':
' → logprob: -6.081218719482422
    4. '__
' → logprob: -10.581218719482422
    5. '__["' → logprob: -11.831218719482422
    6. '__.__' → logprob: -12.331218719482422
    7. '__.' → logprob: -13.581218719482422
    8. '__
' → logprob: -13.831218719482422
    9. '__[' → logprob: -15.081218719482422
    10. '__("' → logprob: -15.206218719482422

Token 854: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08174377679824829
    2. '__' → logprob: -2.9567437171936035
    3. '   ' → logprob: -4.2067437171936035
    4. ' main' → logprob: -4.7067437171936035
    5. '	main' → logprob: -6.9567437171936035
    6. '__":
' → logprob: -7.5817437171936035
    7. '"' → logprob: -8.081744194030762
    8. '_main' → logprob: -8.206744194030762
    9. '(main' → logprob: -8.956744194030762
    10. '    
' → logprob: -9.206744194030762

Token 855: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -19.0
    4. '   ' → logprob: -21.0
    5. 'import' → logprob: -23.875
    6. '.main' → logprob: -24.375
    7. '(main' → logprob: -24.875
    8. '_main' → logprob: -25.625
    9. '
' → logprob: -26.625
    10. 'Main' → logprob: -28.125

Token 856: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 854
Tokens correctement prédits (1ère position, stricte): 350
Tokens correctement prédits (1ère position, avec adaptation): 404
Tokens correctement prédits (top 10): 703
Précision stricte (1ère position): 40.98%
Précision adaptée (1ère position): 47.31%
Précision (top 10): 82.32%
================================================================================
