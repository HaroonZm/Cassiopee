================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Iterator

class TermStrategy(ABC):
    @abstractmethod
    def compute_term(self, prev_term: float) -> float:
        pass

class EvenTermStrategy(TermStrategy):
    def compute_term(self, prev_term: float) -> float:
        return prev_term * 2

class OddTermStrategy(TermStrategy):
    def compute_term(self, prev_term: float) -> float:
        return prev_term / 3

class TermStrategyFactory:
    def get_strategy(self, index: int) -> TermStrategy:
        if index % 2 == 0:
            return EvenTermStrategy()
        else:
            return OddTermStrategy()

class SequenceGenerator:
    def __init__(self, initial_term: float, length: int, strategy_factory: TermStrategyFactory):
        self.initial_term = initial_term
        self.length = length
        self.strategy_factory = strategy_factory

    def generate(self) -> List[float]:
        terms = [self.initial_term]
        for i in range(1, self.length):
            strategy = self.strategy_factory.get_strategy(i)
            next_term = strategy.compute_term(terms[-1])
            terms.append(next_term)
        return terms

class SequenceSummation:
    def __init__(self, sequence: List[float]):
        self.sequence = sequence

    def sum_terms(self) -> float:
        return sum(self.sequence)

class InputReader:
    def __init__(self):
        self._input_lines = []

    def read_all_inputs(self) -> Iterator[float]:
        import sys
        for line in sys.stdin:
            line = line.strip()
            if line:
                yield float(line)

class OutputWriter:
    def write(self, value: float) -> None:
        print(f"{value:.8f}")

class SequenceProcessor:
    def __init__(self, term_count: int = 10):
        self.term_count = term_count
        self.strategy_factory = TermStrategyFactory()
        self.output_writer = OutputWriter()

    def process(self, initial_term: float) -> None:
        generator = SequenceGenerator(initial_term, self.term_count, self.strategy_factory)
        terms = generator.generate()
        summation = SequenceSummation(terms)
        result = summation.sum_terms()
        self.output_writer.write(result)

def main():
    input_reader = InputReader()
    processor = SequenceProcessor(term_count=10)
    for initial_term in input_reader.read_all_inputs():
        processor.process(initial_term)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1270483285188675
    2. 'ABC' → logprob: -2.1270482540130615
    3. 'AB' → logprob: -10.00204849243164
    4. ' A' → logprob: -10.37704849243164
    5. 'ABCDE' → logprob: -11.25204849243164
    6. 'abc' → logprob: -11.75204849243164
    7. 'abstract' → logprob: -12.25204849243164
    8. 'A' → logprob: -12.37704849243164
    9. ' ' → logprob: -12.75204849243164
    10. ' ' → logprob: -12.75204849243164

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28183513879776
    2. ',' → logprob: -1.4068350791931152
    3. 'import' → logprob: -8.156835556030273
    4. '```' → logprob: -9.406835556030273
    5. ' ,' → logprob: -9.906835556030273
    6. '' → logprob: -10.156835556030273
    7. ' ' → logprob: -10.281835556030273
    8. ',
' → logprob: -10.281835556030273
    9. ':' → logprob: -10.406835556030273
    10. ' .' → logprob: -10.781835556030273

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.5760498642921448
    2. ' abstract' → logprob: -0.8260498642921448
    3. 'Abstract' → logprob: -9.2010498046875
    4. ' ' → logprob: -12.5760498046875
    5. '.abstract' → logprob: -13.2010498046875
    6. ' Abstract' → logprob: -13.4510498046875
    7. ' ABC' → logprob: -14.5760498046875
    8. 'abc' → logprob: -14.8260498046875
    9. ' A' → logprob: -14.9510498046875
    10. '123' → logprob: -15.2010498046875

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.002648071153089404
    2. 'm' → logprob: -6.002647876739502
    3. 'classmethod' → logprob: -9.50264835357666
    4. 'meth' → logprob: -10.00264835357666
    5. '_method' → logprob: -10.87764835357666
    6. 'staticmethod' → logprob: -11.75264835357666
    7. 'met' → logprob: -11.75264835357666
    8. 'me' → logprob: -12.12764835357666
    9. '_' → logprob: -12.75264835357666
    10. 'abstract' → logprob: -13.00264835357666

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20475104451179504
    2. '```' → logprob: -2.2047510147094727
    3. '\n' → logprob: -3.7047510147094727
    4. '

' → logprob: -4.204751014709473
    5. '' → logprob: -4.954751014709473
    6. 'class' → logprob: -5.204751014709473
    7. '
' → logprob: -5.204751014709473
    8. '\' → logprob: -5.329751014709473
    9. '<|end|>' → logprob: -5.329751014709473
    10. '``' → logprob: -6.579751014709473

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1726326197385788
    2. '

' → logprob: -2.1726326942443848
    3. '```' → logprob: -3.5476326942443848
    4. 'class' → logprob: -4.422632694244385
    5. '' → logprob: -7.047632694244385
    6. '
' → logprob: -7.047632694244385
    7. '\n' → logprob: -7.672632694244385
    8. '``' → logprob: -7.672632694244385
    9. ' 

' → logprob: -8.297632217407227
    10. '
 
' → logprob: -8.672632217407227

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.08172421902418137
    2. ' collections' → logprob: -2.956724166870117
    3. ' dat' → logprob: -4.706724166870117
    4. ' abc' → logprob: -5.331724166870117
    5. ' sys' → logprob: -5.956724166870117
    6. 'typing' → logprob: -6.081724166870117
    7. ' os' → logprob: -6.206724166870117
    8. 'collections' → logprob: -6.581724166870117
    9. ' io' → logprob: -6.831724166870117
    10. ' datetime' → logprob: -7.706724166870117

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5059148073196411
    2. 'import' → logprob: -1.2559148073196411
    3. '.' → logprob: -2.2559146881103516
    4. '.import' → logprob: -6.005914688110352
    5. '<|end|>' → logprob: -6.755914688110352
    6. ' ' → logprob: -7.005914688110352
    7. '```' → logprob: -7.380914688110352
    8. '[' → logprob: -7.505914688110352
    9. ' .' → logprob: -8.130914688110352
    10. '.space' → logprob: -8.505914688110352

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.3196485638618469
    2. ' List' → logprob: -1.5696485042572021
    3. ' Union' → logprob: -3.319648504257202
    4. 'Any' → logprob: -4.444648742675781
    5. ' Callable' → logprob: -4.569648742675781
    6. ' Optional' → logprob: -5.944648742675781
    7. ' Protocol' → logprob: -6.444648742675781
    8. ' Iterable' → logprob: -6.694648742675781
    9. 'List' → logprob: -7.944648742675781
    10. ' Generator' → logprob: -8.069648742675781

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.13918635249137878
    2. '
' → logprob: -2.139186382293701
    3. 'class' → logprob: -5.014186382293701
    4. '```' → logprob: -5.514186382293701
    5. '\n' → logprob: -7.139186382293701
    6. '


' → logprob: -8.014185905456543
    7. '``' → logprob: -9.139185905456543
    8. '
' → logprob: -9.514185905456543
    9. ' class' → logprob: -9.764185905456543
    10. '<|end|>' → logprob: -10.514185905456543

Token 13: ' Iterator' (ID: 41994)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4373971223831177
    2. 'Optional' → logprob: -1.5623971223831177
    3. ' Union' → logprob: -1.6873971223831177
    4. 'Any' → logprob: -1.6873971223831177
    5. ' Any' → logprob: -2.437397003173828
    6. 'Union' → logprob: -3.312397003173828
    7. ' Callable' → logprob: -3.437397003173828
    8. 'Callable' → logprob: -4.812397003173828
    9. 'Tuple' → logprob: -5.062397003173828
    10. 'Iterable' → logprob: -5.437397003173828

Token 14: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9462746381759644
    2. 'class' → logprob: -1.0712746381759644
    3. '
' → logprob: -1.3212746381759644
    4. '


' → logprob: -6.946274757385254
    5. '```' → logprob: -6.946274757385254
    6. ' class' → logprob: -8.696274757385254
    7. '
' → logprob: -9.321274757385254
    8. '<class' → logprob: -9.821274757385254
    9. ',' → logprob: -10.071274757385254
    10. '\n' → logprob: -10.321274757385254

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.014943011105060577
    2. '
' → logprob: -4.2649431228637695
    3. '```' → logprob: -7.2649431228637695
    4. '\n' → logprob: -10.63994312286377
    5. '

' → logprob: -11.01494312286377
    6. '``' → logprob: -11.26494312286377
    7. ' class' → logprob: -11.76494312286377
    8. '<class' → logprob: -12.13994312286377
    9. '
' → logprob: -12.63994312286377
    10. '"class' → logprob: -12.76494312286377

Token 16: ' Term' (ID: 12167)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002264686394482851
    2. ' Abstract' → logprob: -6.377264499664307
    3. ' Iterable' → logprob: -8.877264976501465
    4. ' My' → logprob: -9.377264976501465
    5. ' Serializer' → logprob: -9.752264976501465
    6. ' ABC' → logprob: -10.002264976501465
    7. ' Space' → logprob: -10.377264976501465
    8. ' ' → logprob: -10.627264976501465
    9. ' Basic' → logprob: -10.627264976501465
    10. ' Parser' → logprob: -11.252264976501465

Token 17: 'Strategy' (ID: 21488)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1677669882774353
    2. ':' → logprob: -1.91776704788208
    3. '(Abstract' → logprob: -4.91776704788208
    4. ' :' → logprob: -9.792766571044922
    5. 'Abstract' → logprob: -9.917766571044922
    6. '():' → logprob: -10.667766571044922
    7. ' (' → logprob: -11.667766571044922
    8. ':
' → logprob: -11.667766571044922
    9. '):' → logprob: -11.792766571044922
    10. '(
' → logprob: -12.042766571044922

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.525020182132721
    2. ':' → logprob: -0.900020182132721
    3. '(Abstract' → logprob: -6.775020122528076
    4. '(:' → logprob: -7.525020122528076
    5. '():' → logprob: -8.900020599365234
    6. ' :' → logprob: -10.525020599365234
    7. ':**' → logprob: -11.275020599365234
    8. '(object' → logprob: -12.150020599365234
    9. '):' → logprob: -12.525020599365234
    10. '(":' → logprob: -12.900020599365234

Token 19: 'ABC' (ID: 44197)
  Prédit: ' ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.12702752649784088
    2. 'ABC' → logprob: -2.1270275115966797
    3. ' ' → logprob: -10.37702751159668
    4. ')' → logprob: -10.75202751159668
    5. 'AB' → logprob: -11.87702751159668
    6. '   ' → logprob: -11.87702751159668
    7. 'abc' → logprob: -12.50202751159668
    8. ' )' → logprob: -12.50202751159668
    9. 'ABCDE' → logprob: -12.50202751159668
    10. 'Abstract' → logprob: -12.50202751159668

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006681174854747951
    2. ')' → logprob: -7.500668048858643
    3. ':' → logprob: -9.1256685256958
    4. ' ):' → logprob: -12.5006685256958
    5. '):
' → logprob: -13.6256685256958
    6. ',' → logprob: -15.1256685256958
    7. ':)' → logprob: -15.1256685256958
    8. '():' → logprob: -16.000667572021484
    9. '):
' → logprob: -16.250667572021484
    10. '>:' → logprob: -16.500667572021484

Token 21: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007114583160728216
    2. '   ' → logprob: -5.007114410400391
    3. ':
' → logprob: -8.88211441040039
    4. ' :' → logprob: -8.88211441040039
    5. '```' → logprob: -10.50711441040039
    6. '):' → logprob: -10.88211441040039
    7. ',' → logprob: -11.25711441040039
    8. '    ' → logprob: -11.50711441040039
    9. '    
' → logprob: -11.63211441040039
    10. '  ' → logprob: -12.13211441040039

Token 22: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20348715782165527
    2. '
' → logprob: -2.7034871578216553
    3. '    
' → logprob: -3.0784871578216553
    4. '\n' → logprob: -3.7034871578216553
    5. '    ' → logprob: -4.078487396240234
    6. '```' → logprob: -4.453487396240234
    7. '@' (adapté à ' @') → logprob: -4.953487396240234
    8. 'def' → logprob: -5.953487396240234
    9. ' 
' → logprob: -6.453487396240234
    10. ':' → logprob: -7.078487396240234

Token 23: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.128163257315464e-07
    2. 'ab' → logprob: -15.625
    3. 'abs' → logprob: -16.75
    4. 'staticmethod' → logprob: -17.25
    5. 'abc' → logprob: -17.25
    6. 'property' → logprob: -18.25
    7. ' abstract' → logprob: -19.125
    8. 'classmethod' → logprob: -19.625
    9. '.abstract' → logprob: -19.875
    10. 'a' → logprob: -21.5

Token 24: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.006729110609740019
    2. '_method' → logprob: -5.0067291259765625
    3. 'classmethod' → logprob: -12.131729125976562
    4. '_' → logprob: -12.381729125976562
    5. 'meth' → logprob: -13.256729125976562
    6. 'staticmethod' → logprob: -14.506729125976562
    7. 'm' → logprob: -14.506729125976562
    8. '_m' → logprob: -15.131729125976562
    9. 'ethod' → logprob: -15.381729125976562
    10. '   ' → logprob: -15.756729125976562

Token 25: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4319824278354645
    2. '(' → logprob: -1.306982398033142
    3. ' def' → logprob: -2.6819825172424316
    4. ')' → logprob: -5.931982517242432
    5. '\' → logprob: -6.056982517242432
    6. '('' → logprob: -6.681982517242432
    7. '   ' → logprob: -7.056982517242432
    8. ' ' → logprob: -7.181982517242432
    9. '(def' → logprob: -7.306982517242432
    10. '()' → logprob: -7.931982517242432

Token 26: '   ' (ID: 271)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.21268844604492188
    2. 'def' → logprob: -2.337688446044922
    3. '(' → logprob: -2.712688446044922
    4. '_method' → logprob: -3.712688446044922
    5. '(method' → logprob: -7.462688446044922
    6. '(
' → logprob: -7.837688446044922
    7. ' def' → logprob: -8.087688446044922
    8. 'abstract' → logprob: -8.212688446044922
    9. '    
' → logprob: -8.462688446044922
    10. '.method' → logprob: -8.462688446044922

Token 27: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009855722077190876
    2. 'abstract' → logprob: -5.3848557472229
    3. 'method' → logprob: -5.6348557472229
    4. 'call' → logprob: -6.8848557472229
    5. 'classmethod' → logprob: -8.634855270385742
    6. ' def' → logprob: -8.884855270385742
    7. '```' → logprob: -9.384855270385742
    8. 'abc' → logprob: -9.634855270385742
    9. '
' → logprob: -10.259855270385742
    10. 'staticmethod' → logprob: -10.634855270385742

Token 28: ' compute' (ID: 23864)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.492082804441452
    2. ' get' → logprob: -1.8670828342437744
    3. ' apply' → logprob: -2.1170828342437744
    4. ' evaluate' → logprob: -2.8670828342437744
    5. ' generate' → logprob: -3.6170828342437744
    6. ' compute' → logprob: -4.617082595825195
    7. ' define' → logprob: -5.867082595825195
    8. 'calculate' → logprob: -5.992082595825195
    9. ' ' → logprob: -6.367082595825195
    10. ' predict' → logprob: -6.492082595825195

Token 29: '_term' (ID: 41867)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5920226573944092
    2. '(' → logprob: -0.9670226573944092
    3. '_term' → logprob: -3.467022657394409
    4. '_terms' → logprob: -4.217022895812988
    5. '_value' → logprob: -4.717022895812988
    6. '_' → logprob: -5.342022895812988
    7. '_score' → logprob: -5.967022895812988
    8. '_total' → logprob: -7.592022895812988
    9. '_amount' → logprob: -7.717022895812988
    10. ')' → logprob: -7.842022895812988

Token 30: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14429986476898193
    2. '(' → logprob: -2.0192999839782715
    3. 's' → logprob: -6.6442999839782715
    4. '_value' → logprob: -9.144299507141113
    5. '(s' → logprob: -9.644299507141113
    6. '_length' → logprob: -10.019299507141113
    7. ' (' → logprob: -10.394299507141113
    8. '(
' → logprob: -11.269299507141113
    9. 'self' → logprob: -11.519299507141113
    10. '_score' → logprob: -11.894299507141113

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002745435107499361
    2. ' ,' → logprob: -6.252745628356934
    3. 'self' → logprob: -7.752745628356934
    4. ')' → logprob: -8.002745628356934
    5. '):' → logprob: -10.752745628356934
    6. ',n' → logprob: -11.877745628356934
    7. ' )' → logprob: -12.252745628356934
    8. 's' → logprob: -12.377745628356934
    9. ',self' → logprob: -12.377745628356934
    10. '(self' → logprob: -13.627745628356934

Token 32: ' prev' (ID: 10258)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16225801408290863
    2. 'self' → logprob: -1.9122580289840698
    3. ' n' → logprob: -7.662258148193359
    4. 'n' → logprob: -8.16225814819336
    5. ' numbers' → logprob: -8.41225814819336
    6. ' x' → logprob: -8.66225814819336
    7. ' sequence' → logprob: -8.91225814819336
    8. ')' → logprob: -9.16225814819336
    9. ' data' → logprob: -9.16225814819336
    10. ' number' → logprob: -9.66225814819336

Token 33: '_term' (ID: 41867)
  Prédit: '_terms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_terms' → logprob: -0.3342539072036743
    2. '_term' → logprob: -1.3342539072036743
    3. '_' → logprob: -4.709253787994385
    4. '_value' → logprob: -5.334253787994385
    5. '_values' → logprob: -6.334253787994385
    6. 's' → logprob: -6.709253787994385
    7. '_tokens' → logprob: -6.959253787994385
    8. '_result' → logprob: -7.334253787994385
    9. '_val' → logprob: -7.709253787994385
    10. 'ious' → logprob: -7.709253787994385

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15062478184700012
    2. 's' → logprob: -2.1506247520446777
    3. '):' → logprob: -4.025624752044678
    4. ',' → logprob: -5.525624752044678
    5. ')' → logprob: -6.650624752044678
    6. ':int' → logprob: -8.900625228881836
    7. ' :' → logprob: -9.900625228881836
    8. ':str' → logprob: -10.775625228881836
    9. ' ,' → logprob: -11.150625228881836
    10. '_list' → logprob: -11.275625228881836

Token 35: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5244075655937195
    2. ' int' → logprob: -0.8994075655937195
    3. ')' → logprob: -7.274407386779785
    4. 'float' → logprob: -8.274407386779785
    5. ' float' → logprob: -8.649407386779785
    6. ' )' → logprob: -10.399407386779785
    7. 'List' → logprob: -10.399407386779785
    8. '[int' → logprob: -10.399407386779785
    9. ' ' → logprob: -10.649407386779785
    10. ':int' → logprob: -11.149407386779785

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1804933100938797
    2. ',' → logprob: -1.8054933547973633
    3. '):' → logprob: -7.930493354797363
    4. ' )' → logprob: -8.555493354797363
    5. ':' → logprob: -9.305493354797363
    6. ' ,' → logprob: -9.555493354797363
    7. '   ' → logprob: -11.180493354797363
    8. ')->' → logprob: -11.805493354797363
    9. '=' → logprob: -12.305493354797363
    10. ',)' → logprob: -12.930493354797363

Token 37: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026843808591365814
    2. ' ->' → logprob: -4.276844024658203
    3. '->' → logprob: -5.026844024658203
    4. ')->' → logprob: -5.901844024658203
    5. ':' → logprob: -6.151844024658203
    6. ',' → logprob: -7.026844024658203
    7. '):' → logprob: -8.901844024658203
    8. '   ' → logprob: -9.651844024658203
    9. ' )' → logprob: -10.026844024658203
    10. ' )->' → logprob: -10.526844024658203

Token 38: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.014253536239266396
    2. 'float' → logprob: -4.264253616333008
    3. ' ' → logprob: -9.514253616333008
    4. '	float' → logprob: -11.889253616333008
    5. '  ' → logprob: -12.639253616333008
    6. ' ' → logprob: -12.764253616333008
    7. 'flo' → logprob: -14.139253616333008
    8. '<float' → logprob: -14.264253616333008
    9. ' None' → logprob: -14.639253616333008
    10. '=float' → logprob: -15.389253616333008

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.550411151489243e-05
    2. ':
' → logprob: -10.375055313110352
    3. ':return' → logprob: -11.125055313110352
    4. '<|end|>' → logprob: -12.625055313110352
    5. '):' → logprob: -12.875055313110352
    6. ':def' → logprob: -13.750055313110352
    7. '   ' → logprob: -14.500055313110352
    8. ' :' → logprob: -14.625055313110352
    9. '():' → logprob: -15.125055313110352
    10. '#:' → logprob: -15.250055313110352

Token 40: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.620268702507019
    2. '       ' → logprob: -0.870268702507019
    3. ' pass' → logprob: -3.2452688217163086
    4. '...' → logprob: -5.495268821716309
    5. '   ' → logprob: -8.495268821716309
    6. '	pass' → logprob: -10.245268821716309
    7. '<|end|>' → logprob: -10.870268821716309
    8. 'raise' → logprob: -12.120268821716309
    9. ' ...' → logprob: -12.120268821716309
    10. '```' → logprob: -12.245268821716309

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15773284435272217
    2. '

' → logprob: -2.5327329635620117
    3. 'class' → logprob: -2.7827329635620117
    4. '<|end|>' → logprob: -6.407732963562012
    5. '


' → logprob: -7.407732963562012
    6. '    
' → logprob: -7.657732963562012
    7. '\n' → logprob: -7.657732963562012
    8. '   ' → logprob: -8.157732963562012
    9. ' class' → logprob: -8.282732963562012
    10. '```' → logprob: -8.657732963562012

Token 43: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11046221107244492
    2. 'class' → logprob: -2.485462188720703
    3. '

' → logprob: -3.860462188720703
    4. '
' → logprob: -9.735462188720703
    5. ' class' → logprob: -10.110462188720703
    6. '' → logprob: -10.110462188720703
    7. '```' → logprob: -10.610462188720703
    8. '


' → logprob: -10.860462188720703
    9. '\n' → logprob: -10.985462188720703
    10. 'c' → logprob: -11.610462188720703

Token 44: ' Even' (ID: 10669)
  Prédit: ' Arithmetic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Arithmetic' → logprob: -0.045345861464738846
    2. ' Ge' → logprob: -4.045345783233643
    3. ' Constant' → logprob: -4.670345783233643
    4. ' Add' → logprob: -4.920345783233643
    5. ' Linear' → logprob: -5.295345783233643
    6. 'Arithmetic' → logprob: -6.045345783233643
    7. ' Addition' → logprob: -6.545345783233643
    8. ' Sum' → logprob: -7.670345783233643
    9. ' Fibonacci' → logprob: -8.7953462600708
    10. 'Add' → logprob: -9.0453462600708

Token 45: 'Term' (ID: 12961)
  Prédit: 'Term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Term' → logprob: -0.010666580870747566
    2. 'Number' → logprob: -4.885666370391846
    3. 'Strategy' → logprob: -6.760666370391846
    4. 'Terms' → logprob: -7.135666370391846
    5. 'Numbers' → logprob: -7.760666370391846
    6. 'Index' → logprob: -8.635666847229004
    7. 'ly' → logprob: -9.135666847229004
    8. 'Factor' → logprob: -9.635666847229004
    9. 'Indexed' → logprob: -9.885666847229004
    10. 'Sum' → logprob: -10.135666847229004

Token 46: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0025019366294145584
    2. 's' → logprob: -6.002501964569092
    3. 'Generator' → logprob: -11.627501487731934
    4. 'Term' → logprob: -11.752501487731934
    5. 'Calculator' → logprob: -13.377501487731934
    6. 'Strateg' → logprob: -13.627501487731934
    7. 'strategy' → logprob: -13.752501487731934
    8. '(' → logprob: -14.127501487731934
    9. ' Strategy' → logprob: -14.252501487731934
    10. 'Sequence' → logprob: -14.252501487731934

Token 47: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3992404341697693
    2. ':' → logprob: -1.149240493774414
    3. '(T' → logprob: -5.149240493774414
    4. '():' → logprob: -5.649240493774414
    5. '):' → logprob: -6.524240493774414
    6. ' :' → logprob: -6.649240493774414
    7. '(Abstract' → logprob: -9.899240493774414
    8. '(Target' → logprob: -10.899240493774414
    9. '(Task' → logprob: -11.399240493774414
    10. '(E' → logprob: -11.649240493774414

Token 48: 'erm' (ID: 1180)
  Prédit: 'erm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erm' → logprob: -0.00017302791820839047
    2. 'ven' → logprob: -9.25017261505127
    3. 'er' → logprob: -10.87517261505127
    4. 'rm' → logprob: -11.12517261505127
    5. 'ermit' → logprob: -11.62517261505127
    6. 'ermin' → logprob: -11.75017261505127
    7. ' erm' → logprob: -12.12517261505127
    8. 'erms' → logprob: -12.62517261505127
    9. '```' → logprob: -13.12517261505127
    10. ')' → logprob: -13.37517261505127

Token 49: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -4.3226136767771095e-05
    2. ' Strategy' → logprob: -11.625042915344238
    3. 'ategy' → logprob: -11.750042915344238
    4. '_strategy' → logprob: -11.875042915344238
    5. 'strategy' → logprob: -12.125042915344238
    6. ')' → logprob: -12.250042915344238
    7. 'Strateg' → logprob: -12.375042915344238
    8. 'S' → logprob: -13.375042915344238
    9. 'Stra' → logprob: -13.625042915344238
    10. 'strate' → logprob: -15.125042915344238

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.9160102712921798e-05
    2. ')' → logprob: -11.625029563903809
    3. '):
' → logprob: -11.625029563903809
    4. ':' → logprob: -11.625029563903809
    5. ' ):' → logprob: -13.625029563903809
    6. '():' → logprob: -14.750029563903809
    7. '   ' → logprob: -15.250029563903809
    8. '):
' → logprob: -15.500029563903809
    9. ',' → logprob: -17.000028610229492
    10. '}:' → logprob: -17.000028610229492

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08151634782552719
    2. ' def' → logprob: -2.9565162658691406
    3. 'def' → logprob: -3.7065162658691406
    4. '    ' → logprob: -7.081516265869141
    5. '    
' → logprob: -7.831516265869141
    6. '
' → logprob: -8.70651626586914
    7. ' ' → logprob: -9.58151626586914
    8. '4' → logprob: -9.83151626586914
    9. '```' → logprob: -9.95651626586914
    10. '  ' → logprob: -10.58151626586914

Token 52: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0019822833128273487
    2. 'def' (adapté à ' def') → logprob: -6.25198221206665
    3. '   ' → logprob: -10.001982688903809
    4. ' indentation' → logprob: -12.376982688903809
    5. '    ' → logprob: -13.001982688903809
    6. ' indent' → logprob: -14.001982688903809
    7. ' ' → logprob: -14.626982688903809
    8. ' ind' → logprob: -14.751982688903809
    9. ' de' → logprob: -16.876981735229492
    10. 'indent' → logprob: -17.251981735229492

Token 53: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.0019863289780914783
    2. ' ' → logprob: -7.001986503601074
    3. 'compute' → logprob: -7.251986503601074
    4. ' def' → logprob: -8.626986503601074
    5. ' ' → logprob: -9.501986503601074
    6. ' __' → logprob: -9.751986503601074
    7. ' _' → logprob: -10.376986503601074
    8. '_compute' → logprob: -10.876986503601074
    9. '_' → logprob: -13.001986503601074
    10. ' calculate' → logprob: -15.626986503601074

Token 54: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.002113501075655222
    2. '_' → logprob: -6.252113342285156
    3. ' _' → logprob: -9.502113342285156
    4. '_token' → logprob: -10.002113342285156
    5. '_terms' → logprob: -10.877113342285156
    6. '_t' → logprob: -11.002113342285156
    7. '_value' → logprob: -12.002113342285156
    8. '_factor' → logprob: -12.377113342285156
    9. '```' → logprob: -12.752113342285156
    10. ' ' → logprob: -13.252113342285156

Token 55: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013154871703591198
    2. '(' → logprob: -9.000131607055664
    3. ' (' → logprob: -11.875131607055664
    4. ' self' → logprob: -14.875131607055664
    5. 'self' → logprob: -15.000131607055664
    6. '   ' → logprob: -15.625131607055664
    7. '(s' → logprob: -16.250131607055664
    8. ' ' → logprob: -16.625131607055664
    9. '       ' → logprob: -16.750131607055664
    10. '(
' → logprob: -18.000131607055664

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004680630285292864
    2. ' ,' → logprob: -5.379680633544922
    3. 'self' → logprob: -10.004680633544922
    4. ',self' → logprob: -11.754680633544922
    5. '   ' → logprob: -12.629680633544922
    6. ' ' → logprob: -14.379680633544922
    7. '       ' → logprob: -14.629680633544922
    8. ')' → logprob: -14.754680633544922
    9. '_,' → logprob: -14.754680633544922
    10. ',
' → logprob: -15.129680633544922

Token 57: ' prev' (ID: 10258)
  Prédit: ' prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.07960242033004761
    2. 'prev' → logprob: -2.9546024799346924
    3. ' self' → logprob: -3.8296024799346924
    4. 'self' → logprob: -5.954602241516113
    5. '    ' → logprob: -10.329602241516113
    6. ' ' → logprob: -11.079602241516113
    7. ' n' → logprob: -11.079602241516113
    8. '   ' → logprob: -11.579602241516113
    9. '       ' → logprob: -11.954602241516113
    10. '	prev' → logprob: -12.079602241516113

Token 58: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.0009114635176956654
    2. '_' → logprob: -7.125911235809326
    3. '_token' → logprob: -9.625911712646484
    4. ' _' → logprob: -10.750911712646484
    5. '_t' → logprob: -12.375911712646484
    6. '_terms' → logprob: -12.500911712646484
    7. '_value' → logprob: -12.625911712646484
    8. '```' → logprob: -13.750911712646484
    9. '   ' → logprob: -14.125911712646484
    10. ')_' → logprob: -14.375911712646484

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016638736706227064
    2. ' :' → logprob: -7.001663684844971
    3. ')' → logprob: -8.001664161682129
    4. ' *' → logprob: -9.126664161682129
    5. '):' → logprob: -9.126664161682129
    6. ' +' → logprob: -10.126664161682129
    7. '*' → logprob: -10.376664161682129
    8. '=' → logprob: -10.376664161682129
    9. '   ' → logprob: -10.501664161682129
    10. ',' → logprob: -10.751664161682129

Token 60: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.07537519931793213
    2. ' ' → logprob: -3.5753750801086426
    3. ' int' → logprob: -3.7003750801086426
    4. 'float' → logprob: -4.075375080108643
    5. 'int' → logprob: -6.825375080108643
    6. '0' → logprob: -6.950375080108643
    7. ')' → logprob: -7.700375080108643
    8. '2' → logprob: -8.7003755569458
    9. '1' → logprob: -9.3253755569458
    10. ' None' → logprob: -10.8253755569458

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002337589394301176
    2. ' )' → logprob: -6.502337455749512
    3. ',' → logprob: -7.502337455749512
    4. '   ' → logprob: -9.002337455749512
    5. ':' → logprob: -9.627337455749512
    6. '*' → logprob: -10.252337455749512
    7. '):' → logprob: -10.627337455749512
    8. '+' → logprob: -11.377337455749512
    9. ' *' → logprob: -12.127337455749512
    10. ' +' → logprob: -12.502337455749512

Token 62: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10073721408843994
    2. ' ->' → logprob: -2.4757370948791504
    3. '->' → logprob: -4.72573709487915
    4. ')' → logprob: -6.22573709487915
    5. '       ' → logprob: -8.100737571716309
    6. ' :' → logprob: -8.225737571716309
    7. '   ' → logprob: -9.475737571716309
    8. '):' → logprob: -9.600737571716309
    9. ')->' → logprob: -9.850737571716309
    10. '        ' → logprob: -10.350737571716309

Token 63: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.021302467212080956
    2. 'float' → logprob: -3.8963024616241455
    3. ' int' → logprob: -7.521302700042725
    4. 'int' → logprob: -9.271302223205566
    5. ' ' → logprob: -9.521302223205566
    6. ' return' → logprob: -11.021302223205566
    7. '(float' → logprob: -12.521302223205566
    8. ' ' → logprob: -12.521302223205566
    9. 'return' → logprob: -12.771302223205566
    10. ' if' → logprob: -13.021302223205566

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016112959012389183
    2. '       ' → logprob: -4.641112804412842
    3. ')' → logprob: -6.266112804412842
    4. ':
' → logprob: -6.641112804412842
    5. '+' → logprob: -6.766112804412842
    6. ' ->' → logprob: -7.016112804412842
    7. '):' → logprob: -7.766112804412842
    8. '->' → logprob: -8.26611328125
    9. '        ' → logprob: -9.64111328125
    10. ' +' → logprob: -9.89111328125

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003984127659350634
    2. ' return' → logprob: -5.878983974456787
    3. 'return' → logprob: -6.753983974456787
    4. '        ' → logprob: -12.003984451293945
    5. '   ' → logprob: -12.878984451293945
    6. '           ' → logprob: -13.378984451293945
    7. '      ' → logprob: -14.003984451293945
    8. '    ' → logprob: -14.628984451293945
    9. '     ' → logprob: -15.378984451293945
    10. '         ' → logprob: -16.378984451293945

Token 66: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7989360094070435
    2. 'return' (adapté à ' return') → logprob: -0.7989360094070435
    3. '       ' → logprob: -2.298935890197754
    4. '        ' → logprob: -11.923935890197754
    5. '   ' → logprob: -12.298935890197754
    6. ' if' → logprob: -13.173935890197754
    7. '           ' → logprob: -13.298935890197754
    8. ' ' → logprob: -13.548935890197754
    9. '```' → logprob: -14.048935890197754
    10. '    ' → logprob: -14.173935890197754

Token 67: ' prev' (ID: 10258)
  Prédit: ' prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.14280888438224792
    2. 'prev' → logprob: -2.0178089141845703
    3. '2' → logprob: -9.26780891418457
    4. ' ' → logprob: -11.39280891418457
    5. '0' → logprob: -11.76780891418457
    6. '(prev' → logprob: -11.76780891418457
    7. '	prev' → logprob: -12.39280891418457
    8. '       ' → logprob: -12.64280891418457
    9. '        ' → logprob: -13.51780891418457
    10. '.prev' → logprob: -13.89280891418457

Token 68: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -9.729906196298543e-06
    2. '_' → logprob: -12.000009536743164
    3. '_terms' → logprob: -13.250009536743164
    4. '_token' → logprob: -13.375009536743164
    5. '_TERM' → logprob: -16.250009536743164
    6. 'term' → logprob: -16.500009536743164
    7. '_task' → logprob: -17.375009536743164
    8. '_word' → logprob: -17.500009536743164
    9. '_t' → logprob: -17.875009536743164
    10. '_user' → logprob: -18.250009536743164

Token 69: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.09480772912502289
    2. '+' → logprob: -2.7198076248168945
    3. ' *' → logprob: -3.8448076248168945
    4. '*' → logprob: -5.8448076248168945
    5. '2' → logprob: -8.969807624816895
    6. ' ' → logprob: -8.969807624816895
    7. ' plus' → logprob: -11.469807624816895
    8. '0' → logprob: -12.594807624816895
    9. '1' → logprob: -12.969807624816895
    10. ' ' → logprob: -13.469807624816895

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47408029437065125
    2. '2' → logprob: -0.9740803241729736
    3. ' ' → logprob: -13.099080085754395
    4. '0' → logprob: -14.724080085754395
    5. '   ' → logprob: -15.349080085754395
    6. '  ' → logprob: -15.474080085754395
    7. '4' → logprob: -15.724080085754395
    8. '3' → logprob: -16.72408103942871
    9. '```' → logprob: -16.72408103942871
    10. '1' → logprob: -17.03658103942871

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.50000286102295
    4. '4' → logprob: -15.62500286102295
    5. '3' → logprob: -15.87500286102295
    6. '-' → logprob: -16.937503814697266
    7. '```' → logprob: -17.000003814697266
    8. '

' → logprob: -17.500003814697266
    9. '   ' → logprob: -17.562503814697266
    10. '1' → logprob: -17.687503814697266

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1978534609079361
    2. 'class' → logprob: -1.822853446006775
    3. '

' → logprob: -4.9478535652160645
    4. '<|end|>' → logprob: -5.0728535652160645
    5. '    
' → logprob: -6.4478535652160645
    6. '```' → logprob: -7.0728535652160645
    7. ' 
' → logprob: -7.4478535652160645
    8. ' class' → logprob: -7.9478535652160645
    9. '   ' → logprob: -8.072853088378906
    10. '<|end|>' → logprob: -8.697853088378906

Token 73: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5863520503044128
    2. 'class' → logprob: -0.8363520503044128
    3. '

' → logprob: -4.5863518714904785
    4. ' class' → logprob: -10.086352348327637
    5. '```' → logprob: -10.461352348327637
    6. '<|end|>' → logprob: -10.586352348327637
    7. '    
' → logprob: -11.086352348327637
    8. '
' → logprob: -11.586352348327637
    9. '  
' → logprob: -11.586352348327637
    10. ' 
' → logprob: -11.711352348327637

Token 74: ' Odd' (ID: 59799)
  Prédit: ' Odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Odd' → logprob: -0.0009205120149999857
    2. 'Odd' → logprob: -7.000920295715332
    3. ' ' → logprob: -12.500920295715332
    4. ' O' → logprob: -12.875920295715332
    5. ' Increment' → logprob: -14.250920295715332
    6. ' Term' → logprob: -14.625920295715332
    7. ' Add' → logprob: -14.750920295715332
    8. ' Even' → logprob: -15.750920295715332
    9. ' Prime' → logprob: -16.00092124938965
    10. ' odd' → logprob: -16.12592124938965

Token 75: 'Term' (ID: 12961)
  Prédit: 'Term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Term' → logprob: -1.9361264946837764e-07
    2. 'term' → logprob: -16.75
    3. ' Term' → logprob: -16.875
    4. 'Step' → logprob: -18.625
    5. '_term' → logprob: -18.75
    6. 'Number' → logprob: -19.0
    7. 'Ter' → logprob: -19.125
    8. 'Terms' → logprob: -19.375
    9. '-term' → logprob: -19.5
    10. 'Termination' → logprob: -19.625

Token 76: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -1.0280383548888494e-06
    2. 'Strateg' → logprob: -14.125000953674316
    3. 'strategy' → logprob: -16.125001907348633
    4. '_strategy' → logprob: -16.250001907348633
    5. 'Strategies' → logprob: -17.500001907348633
    6. ' Strategy' → logprob: -18.250001907348633
    7. ' strategy' → logprob: -18.625001907348633
    8. 'Str' → logprob: -19.375001907348633
    9. 'Star' → logprob: -19.375001907348633
    10. 'Term' → logprob: -19.500001907348633

Token 77: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.03804447129368782
    2. '(' → logprob: -3.2880444526672363
    3. ' (' → logprob: -12.913044929504395
    4. ':' → logprob: -15.788044929504395
    5. ' ' → logprob: -15.913044929504395
    6. '(Task' → logprob: -16.538043975830078
    7. '   ' → logprob: -17.288043975830078
    8. ' :' → logprob: -17.663043975830078
    9. '(Target' → logprob: -17.913043975830078
    10. '(term' → logprob: -18.038043975830078

Token 78: 'erm' (ID: 1180)
  Prédit: 'erm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erm' → logprob: -0.04296756535768509
    2. 'Strategy' → logprob: -3.9179675579071045
    3. 'Even' → logprob: -4.542967796325684
    4. 'er' → logprob: -5.167967796325684
    5. 'e' → logprob: -5.917967796325684
    6. 'ethod' → logprob: -6.917967796325684
    7. 'even' → logprob: -7.542967796325684
    8. '_strategy' → logprob: -8.542967796325684
    9. '```' → logprob: -8.667967796325684
    10. 'Term' → logprob: -9.167967796325684

Token 79: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0001576506474521011
    2. '_strategy' → logprob: -9.500157356262207
    3. 'ategy' → logprob: -9.625157356262207
    4. 'strategy' → logprob: -12.000157356262207
    5. 'Strateg' → logprob: -12.625157356262207
    6. ' Strategy' → logprob: -13.000157356262207
    7. 'Strategies' → logprob: -14.000157356262207
    8. '```' → logprob: -14.000157356262207
    9. ')' → logprob: -14.125157356262207
    10. '):' → logprob: -14.500157356262207

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011558275582501665
    2. ')' → logprob: -9.750115394592285
    3. ':' → logprob: -10.375115394592285
    4. '):
' → logprob: -10.875115394592285
    5. ' ):' → logprob: -12.375115394592285
    6. '   ' → logprob: -13.250115394592285
    7. ',' → logprob: -14.625115394592285
    8. '):
' → logprob: -15.250115394592285
    9. ':)' → logprob: -16.6251163482666
    10. '}:' → logprob: -16.8751163482666

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06361350417137146
    2. ' def' → logprob: -2.8136134147644043
    3. 'def' → logprob: -6.438613414764404
    4. '    ' → logprob: -10.688613891601562
    5. '```' → logprob: -11.563613891601562
    6. '
' → logprob: -12.063613891601562
    7. '	def' → logprob: -12.438613891601562
    8. ':' → logprob: -14.438613891601562
    9. ':def' → logprob: -14.688613891601562
    10. ' ' → logprob: -14.813613891601562

Token 82: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.00865960493683815
    2. 'def' (adapté à ' def') → logprob: -4.758659839630127
    3. '   ' → logprob: -10.008659362792969
    4. ' ' → logprob: -17.00865936279297
    5. '    ' → logprob: -17.38365936279297
    6. '	def' → logprob: -17.50865936279297
    7. '```' → logprob: -17.75865936279297
    8. '  ' → logprob: -18.63365936279297
    9. ' class' → logprob: -19.00865936279297
    10. 'de' → logprob: -19.00865936279297

Token 83: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.06396055221557617
    2. 'compute' → logprob: -3.063960552215576
    3. ' def' → logprob: -4.313960552215576
    4. 'def' → logprob: -6.688960552215576
    5. ' ' → logprob: -7.813960552215576
    6. '_compute' → logprob: -8.813961029052734
    7. '```' → logprob: -10.188961029052734
    8. '   ' → logprob: -11.438961029052734
    9. '  ' → logprob: -11.563961029052734
    10. '.compute' → logprob: -12.188961029052734

Token 84: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.01415763795375824
    2. '_' → logprob: -4.389157772064209
    3. '_token' → logprob: -6.639157772064209
    4. ' _' → logprob: -8.38915729522705
    5. '_t' → logprob: -10.88915729522705
    6. '```' → logprob: -10.88915729522705
    7. '_terms' → logprob: -10.88915729522705
    8. '_case' → logprob: -12.38915729522705
    9. '_
' → logprob: -12.76415729522705
    10. '_user' → logprob: -12.88915729522705

Token 85: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2552866041660309
    2. '(self' → logprob: -1.5052865743637085
    3. ' (' → logprob: -5.880286693572998
    4. ',' → logprob: -7.755286693572998
    5. '(
' → logprob: -9.88028621673584
    6. ' ' → logprob: -10.38028621673584
    7. ' self' → logprob: -11.13028621673584
    8. 'self' → logprob: -11.38028621673584
    9. ')' → logprob: -12.00528621673584
    10. ' ,' → logprob: -13.13028621673584

Token 86: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03464915230870247
    2. '+' → logprob: -4.65964937210083
    3. ' *' → logprob: -4.78464937210083
    4. ' ' → logprob: -4.78464937210083
    5. ',' → logprob: -5.03464937210083
    6. ' ,' → logprob: -7.15964937210083
    7. '*' → logprob: -7.78464937210083
    8. ' -' → logprob: -9.659648895263672
    9. '  ' → logprob: -10.909648895263672
    10. '   ' → logprob: -11.284648895263672

Token 87: ' prev' (ID: 10258)
  Prédit: ' prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.0711241140961647
    2. 'prev' → logprob: -2.6961240768432617
    3. ' self' → logprob: -7.196124076843262
    4. 'self' → logprob: -7.821124076843262
    5. '(prev' → logprob: -11.071124076843262
    6. ' ' → logprob: -11.696124076843262
    7. '   ' → logprob: -13.821124076843262
    8. 'Prev' → logprob: -13.821124076843262
    9. '	prev' → logprob: -13.946124076843262
    10. '_prev' → logprob: -13.946124076843262

Token 88: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.0021662020590156317
    2. '_' → logprob: -6.252166271209717
    3. ' _' → logprob: -8.752165794372559
    4. '_token' → logprob: -9.877165794372559
    5. '_terms' → logprob: -11.377165794372559
    6. '_t' → logprob: -12.627165794372559
    7. ')_' → logprob: -13.377165794372559
    8. '_user' → logprob: -13.752165794372559
    9. '```' → logprob: -13.752165794372559
    10. '_TERM' → logprob: -13.877165794372559

Token 89: ':' (ID: 25)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.007944094948470592
    2. '+' → logprob: -5.257944107055664
    3. ' ' → logprob: -6.007944107055664
    4. ' *' → logprob: -8.882944107055664
    5. '    ' → logprob: -10.382944107055664
    6. ':' → logprob: -10.507944107055664
    7. ' :' → logprob: -11.382944107055664
    8. ')' → logprob: -12.007944107055664
    9. '```' → logprob: -12.132944107055664
    10. '1' → logprob: -12.257944107055664

Token 90: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25474342703819275
    2. ' float' → logprob: -2.3797433376312256
    3. ' prev' → logprob: -3.2547433376312256
    4. '3' → logprob: -3.3797433376312256
    5. '2' → logprob: -3.6297433376312256
    6. 'float' → logprob: -4.504743576049805
    7. '1' → logprob: -4.629743576049805
    8. 'prev' → logprob: -4.754743576049805
    9. ' +' → logprob: -6.504743576049805
    10. '+' → logprob: -7.129743576049805

Token 91: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014283854514360428
    2. '+' → logprob: -4.389283657073975
    3. ' ' → logprob: -6.889283657073975
    4. ')' → logprob: -7.639283657073975
    5. ' )' → logprob: -8.889284133911133
    6. ' *' → logprob: -9.389284133911133
    7. '    ' → logprob: -10.639284133911133
    8. '*' → logprob: -11.639284133911133
    9. ' ' → logprob: -12.389284133911133
    10. ' ,' → logprob: -12.889284133911133

Token 92: ' ->' (ID: 2747)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01073911041021347
    2. '+' → logprob: -4.635739326477051
    3. ' ' → logprob: -7.385739326477051
    4. ' *' → logprob: -8.13573932647705
    5. '*' → logprob: -10.76073932647705
    6. '    ' → logprob: -11.13573932647705
    7. ' ' → logprob: -11.13573932647705
    8. ' `' → logprob: -12.13573932647705
    9. ' +
' → logprob: -12.76073932647705
    10. ' plus' → logprob: -13.63573932647705

Token 93: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1066595315933228
    2. '3' → logprob: -1.4816595315933228
    3. 'prev' → logprob: -1.8566595315933228
    4. '2' → logprob: -1.9816595315933228
    5. '1' → logprob: -2.481659412384033
    6. ' prev' → logprob: -2.856659412384033
    7. ' float' → logprob: -5.981659412384033
    8. 'float' → logprob: -6.106659412384033
    9. '0' → logprob: -7.356659412384033
    10. '(prev' → logprob: -8.106659889221191

Token 94: ':
' (ID: 734)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04112241789698601
    2. '+' → logprob: -3.2911224365234375
    3. '        ' → logprob: -6.9161224365234375
    4. ' *' → logprob: -7.1661224365234375
    5. '    ' → logprob: -7.5411224365234375
    6. ':' → logprob: -8.166122436523438
    7. ' ' → logprob: -8.166122436523438
    8. ' :' → logprob: -9.541122436523438
    9. '*' → logprob: -9.791122436523438
    10. '       ' → logprob: -10.041122436523438

Token 95: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6857487559318542
    2. ' prev' → logprob: -1.060748815536499
    3. '       ' → logprob: -2.435748815536499
    4. 'prev' → logprob: -3.185748815536499
    5. 'return' → logprob: -4.06074857711792
    6. '        ' → logprob: -5.81074857711792
    7. ' +' → logprob: -7.81074857711792
    8. '+' → logprob: -8.685749053955078
    9. '(prev' → logprob: -8.935749053955078
    10. ' ' → logprob: -9.435749053955078

Token 96: ' return' (ID: 622)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.8768704533576965
    2. 'prev' → logprob: -1.2518703937530518
    3. ' return' → logprob: -1.5018703937530518
    4. 'return' (adapté à ' return') → logprob: -2.6268703937530518
    5. '       ' → logprob: -5.876870632171631
    6. '(prev' → logprob: -9.626870155334473
    7. ' ' → logprob: -11.376870155334473
    8. '        ' → logprob: -11.501870155334473
    9. '```' → logprob: -12.126870155334473
    10. '+' → logprob: -12.126870155334473

Token 97: ' prev' (ID: 10258)
  Prédit: ' prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.6932101249694824
    2. 'prev' → logprob: -0.6932101249694824
    3. '(prev' → logprob: -10.56821060180664
    4. ' ' → logprob: -10.94321060180664
    5. '	prev' → logprob: -12.19321060180664
    6. '   ' → logprob: -12.81821060180664
    7. '1' → logprob: -13.31821060180664
    8. ' ' → logprob: -13.44321060180664
    9. '.prev' → logprob: -13.56821060180664
    10. '```' → logprob: -13.69321060180664

Token 98: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -5.512236498361744e-07
    2. 'term' → logprob: -14.750000953674316
    3. '_' → logprob: -17.25
    4. '_token' → logprob: -17.625
    5. '_TERM' → logprob: -17.75
    6. '_terms' → logprob: -18.375
    7. '-term' → logprob: -18.75
    8. 'Term' → logprob: -19.75
    9. ' term' → logprob: -19.875
    10. '_user' → logprob: -20.0

Token 99: ' /' (ID: 820)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.006060328800231218
    2. '+' → logprob: -5.1310601234436035
    3. ' *' → logprob: -9.631060600280762
    4. ' ' → logprob: -10.006060600280762
    5. ' plus' → logprob: -11.506060600280762
    6. ' +
' → logprob: -12.381060600280762
    7. '1' → logprob: -13.131060600280762
    8. '*' → logprob: -13.631060600280762
    9. ' +

' → logprob: -14.131060600280762
    10. 'import' → logprob: -14.381060600280762

Token 100: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35223910212516785
    2. ' ' → logprob: -1.2272391319274902
    3. 'prev' → logprob: -6.22723913192749
    4. '3' → logprob: -6.47723913192749
    5. '1' → logprob: -8.727238655090332
    6. ' prev' → logprob: -9.477238655090332
    7. '  ' → logprob: -11.477238655090332
    8. '10' → logprob: -12.164738655090332
    9. '   ' → logprob: -12.352238655090332
    10. '5' → logprob: -12.977238655090332

Token 101: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005843686521984637
    2. ' ' → logprob: -8.250584602355957
    3. '3' → logprob: -8.375584602355957
    4. '1' → logprob: -9.500584602355957
    5. 'prev' → logprob: -11.750584602355957
    6. '   ' → logprob: -13.000584602355957
    7. '5' → logprob: -13.375584602355957
    8. '  ' → logprob: -13.500584602355957
    9. '10' → logprob: -13.750584602355957
    10. '4' → logprob: -14.250584602355957

Token 102: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3215445578098297
    2. 'class' → logprob: -1.3215445280075073
    3. '

' → logprob: -4.821544647216797
    4. '
' → logprob: -8.946544647216797
    5. ' class' → logprob: -10.696544647216797
    6. '


' → logprob: -11.821544647216797
    7. ' 
' → logprob: -11.946544647216797
    8. '```' → logprob: -12.196544647216797
    9. '  
' → logprob: -12.696544647216797
    10. '
    
' → logprob: -12.821544647216797

Token 103: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.48887693881988525
    2. '
' → logprob: -0.9888769388198853
    3. '

' → logprob: -4.238876819610596
    4. '
' → logprob: -8.488877296447754
    5. ' class' → logprob: -10.113877296447754
    6. '


' → logprob: -12.113877296447754
    7. '```' → logprob: -12.613877296447754
    8. ' 
' → logprob: -13.238877296447754
    9. '  
' → logprob: -13.363877296447754
    10. ' 

' → logprob: -13.613877296447754

Token 104: ' Term' (ID: 12167)
  Prédit: ' Term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Term' → logprob: -0.8675578832626343
    2. ' Sequence' → logprob: -1.2425578832626343
    3. ' Altern' → logprob: -2.117558002471924
    4. 'Term' → logprob: -2.867558002471924
    5. 'Sequence' → logprob: -3.367558002471924
    6. ' Series' → logprob: -3.992558002471924
    7. ' Fibonacci' → logprob: -4.117558002471924
    8. ' Mixed' → logprob: -4.242558002471924
    9. ' Custom' → logprob: -5.117558002471924
    10. ' Arithmetic' → logprob: -5.242558002471924

Token 105: 'Strategy' (ID: 21488)
  Prédit: 'Generator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Generator' → logprob: -0.3119388520717621
    2. 'Sequence' → logprob: -1.6869388818740845
    3. 'Iterator' → logprob: -2.936938762664795
    4. 'Series' → logprob: -4.686938762664795
    5. 'Calculator' → logprob: -4.811938762664795
    6. 'Strategy' → logprob: -4.936938762664795
    7. 'Factory' → logprob: -5.936938762664795
    8. 's' → logprob: -6.311938762664795
    9. 'Provider' → logprob: -8.061939239501953
    10. 'Producer' → logprob: -9.061939239501953

Token 106: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.008804241195321083
    2. 'Context' → logprob: -4.8838043212890625
    3. 'Provider' → logprob: -7.1338043212890625
    4. 'Selector' → logprob: -8.008804321289062
    5. 'Chooser' → logprob: -10.883804321289062
    6. 'Picker' → logprob: -11.133804321289062
    7. 'Manager' → logprob: -11.133804321289062
    8. ':' → logprob: -11.633804321289062
    9. 'Builder' → logprob: -12.633804321289062
    10. 's' → logprob: -13.258804321289062

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.4881879400927573e-05
    2. ':
' → logprob: -10.500035285949707
    3. ' :' → logprob: -12.250035285949707
    4. '():' → logprob: -13.625035285949707
    5. ':def' → logprob: -14.375035285949707
    6. '):' → logprob: -15.125035285949707
    7. ':

' → logprob: -15.500035285949707
    8. '>:' → logprob: -16.50003433227539
    9. ':
' → logprob: -16.62503433227539
    10. '(' → logprob: -17.00003433227539

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020577155519276857
    2. ' def' → logprob: -6.2520575523376465
    3. 'def' → logprob: -9.002058029174805
    4. ':' → logprob: -13.252058029174805
    5. '    
' → logprob: -13.252058029174805
    6. '	def' → logprob: -14.752058029174805
    7. '   ' → logprob: -14.752058029174805
    8. ' @' → logprob: -14.877058029174805
    9. '```' → logprob: -15.002058029174805
    10. 'staticmethod' → logprob: -16.002058029174805

Token 109: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.7156587839126587
    2. ' @' → logprob: -1.4656587839126587
    3. 'def' (adapté à ' def') → logprob: -1.9656587839126587
    4. ' def' → logprob: -1.9656587839126587
    5. '   ' → logprob: -9.590659141540527
    6. ' ' → logprob: -12.090659141540527
    7. '@property' → logprob: -13.715659141540527
    8. ' _' → logprob: -14.465659141540527
    9. 'staticmethod' → logprob: -15.215659141540527
    10. '_def' → logprob: -15.590659141540527

Token 110: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.831840991973877
    2. ' create' → logprob: -0.956840991973877
    3. ' def' → logprob: -2.581840991973877
    4. ' get' → logprob: -2.581840991973877
    5. ' _' → logprob: -4.581840991973877
    6. ' static' → logprob: -4.831840991973877
    7. 'itialize' → logprob: -5.956840991973877
    8. ' define' → logprob: -6.331840991973877
    9. ' __' → logprob: -6.706840991973877
    10. '_' → logprob: -7.081840991973877

Token 111: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -0.0018723555840551853
    2. '_' → logprob: -6.501872539520264
    3. '_term' → logprob: -8.376872062683105
    4. '_str' → logprob: -9.251872062683105
    5. ' _' → logprob: -11.001872062683105
    6. 'Strategy' → logprob: -11.126872062683105
    7. '(' → logprob: -12.751872062683105
    8. '(strategy' → logprob: -13.126872062683105
    9. ' ' → logprob: -13.501872062683105
    10. '(_' → logprob: -13.751872062683105

Token 112: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001075088046491146
    2. '(' → logprob: -7.001075267791748
    3. ' (' → logprob: -9.12607479095459
    4. '(s' → logprob: -10.25107479095459
    5. 'self' → logprob: -11.37607479095459
    6. '(sel' → logprob: -13.00107479095459
    7. '(
' → logprob: -13.25107479095459
    8. '<|end|>' → logprob: -13.75107479095459
    9. '(Self' → logprob: -14.12607479095459
    10. ' self' → logprob: -14.37607479095459

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011605957115534693
    2. ' ,' → logprob: -9.125116348266602
    3. 'self' → logprob: -12.000116348266602
    4. ')' → logprob: -15.000116348266602
    5. ',self' → logprob: -15.125116348266602
    6. ',is' → logprob: -17.0001163482666
    7. 's' → logprob: -17.2501163482666
    8. ' ' → logprob: -17.6251163482666
    9. ',s' → logprob: -17.7501163482666
    10. '_,' → logprob: -17.7501163482666

Token 114: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3178503215312958
    2. 'index' → logprob: -1.8178503513336182
    3. ' self' → logprob: -2.692850351333618
    4. ' index' → logprob: -3.692850351333618
    5. 'term' → logprob: -4.817850112915039
    6. ' term' → logprob: -5.317850112915039
    7. 'n' → logprob: -5.692850112915039
    8. 'is' → logprob: -7.567850112915039
    9. ' n' → logprob: -8.192850112915039
    10. ' is' → logprob: -10.192850112915039

Token 115: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005144290626049042
    2. ':int' → logprob: -7.625514507293701
    3. ' :' → logprob: -10.750514030456543
    4. '):' → logprob: -12.625514030456543
    5. ')' → logprob: -14.625514030456543
    6. 'int' → logprob: -14.875514030456543
    7. ' ):' → logprob: -15.500514030456543
    8. '   ' → logprob: -15.750514030456543
    9. '1' → logprob: -16.50051498413086
    10. '```' → logprob: -16.62551498413086

Token 116: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4287514388561249
    2. 'int' → logprob: -1.0537514686584473
    3. ' ' → logprob: -10.928750991821289
    4. ')' → logprob: -11.428750991821289
    5. ':int' → logprob: -11.928750991821289
    6. '[int' → logprob: -11.928750991821289
    7. '(int' → logprob: -13.428750991821289
    8. '<int' → logprob: -13.428750991821289
    9. '```' → logprob: -13.428750991821289
    10. '	int' → logprob: -13.678750991821289

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020890454470645636
    2. ' )' → logprob: -8.500208854675293
    3. '):' → logprob: -12.375208854675293
    4. '   ' → logprob: -14.125208854675293
    5. ':' → logprob: -14.750208854675293
    6. ')->' → logprob: -16.87520980834961
    7. '`)' → logprob: -16.87520980834961
    8. ' ' → logprob: -17.62520980834961
    9. ' )->' → logprob: -18.25020980834961
    10. ' ):' → logprob: -18.25020980834961

Token 118: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018573977053165436
    2. ' ->' → logprob: -4.143573760986328
    3. '->' → logprob: -6.268573760986328
    4. ')' → logprob: -7.768573760986328
    5. ')->' → logprob: -9.018573760986328
    6. '):' → logprob: -9.393573760986328
    7. ' :' → logprob: -11.893573760986328
    8. ':return' → logprob: -13.268573760986328
    9. ':
' → logprob: -13.893573760986328
    10. ' )->' → logprob: -14.393573760986328

Token 119: ' Term' (ID: 12167)
  Prédit: ' Term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Term' → logprob: -0.03001311421394348
    2. 'Term' → logprob: -3.530013084411621
    3. ' ' → logprob: -8.280013084411621
    4. ' term' → logprob: -12.405013084411621
    5. ' Optional' → logprob: -13.655013084411621
    6. ' '' → logprob: -14.030013084411621
    7. ' Terms' → logprob: -14.030013084411621
    8. ' "' → logprob: -14.405013084411621
    9. ' ' → logprob: -14.530013084411621
    10. '_term' → logprob: -15.155013084411621

Token 120: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -2.2200749754119897e-06
    2. 'Strateg' → logprob: -13.125001907348633
    3. ' Strategy' → logprob: -16.000001907348633
    4. '_strategy' → logprob: -16.375001907348633
    5. 'strategy' → logprob: -19.000001907348633
    6. 'Term' → logprob: -19.875001907348633
    7. 'Strategies' → logprob: -20.000001907348633
    8. 'S' → logprob: -20.375001907348633
    9. 'Str' → logprob: -20.500001907348633
    10. ' strategy' → logprob: -20.625001907348633

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018220659694634378
    2. ':
' → logprob: -8.875182151794434
    3. '   ' → logprob: -10.750182151794434
    4. '):' → logprob: -11.875182151794434
    5. '():' → logprob: -12.125182151794434
    6. '       ' → logprob: -12.125182151794434
    7. ',' → logprob: -14.125182151794434
    8. ' :' → logprob: -14.250182151794434
    9. ':def' → logprob: -15.000182151794434
    10. '):
' → logprob: -15.125182151794434

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008620307198725641
    2. '   ' → logprob: -8.375862121582031
    3. ' if' → logprob: -8.750862121582031
    4. ' ' → logprob: -8.875862121582031
    5. '    ' → logprob: -9.375862121582031
    6. '        
' → logprob: -9.500862121582031
    7. ':' → logprob: -10.250862121582031
    8. ' 
' → logprob: -10.375862121582031
    9. '    
' → logprob: -10.750862121582031
    10. '      ' → logprob: -11.000862121582031

Token 123: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12970209121704102
    2. ' if' → logprob: -2.129702091217041
    3. '       ' → logprob: -6.379702091217041
    4. 'return' → logprob: -6.879702091217041
    5. ' return' → logprob: -10.004701614379883
    6. '   ' → logprob: -14.629701614379883
    7. '```' → logprob: -15.129701614379883
    8. '
' → logprob: -15.754701614379883
    9. '        ' → logprob: -16.879701614379883
    10. ' ' → logprob: -18.129701614379883

Token 124: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -6.64708495605737e-05
    2. 'index' → logprob: -9.625066757202148
    3. ' ' → logprob: -15.125066757202148
    4. '(index' → logprob: -16.25006675720215
    5. '	index' → logprob: -17.75006675720215
    6. ' (' → logprob: -19.75006675720215
    7. '=index' → logprob: -20.37506675720215
    8. '[index' → logprob: -20.87506675720215
    9. ' ' → logprob: -21.25006675720215
    10. '%' → logprob: -21.25006675720215

Token 125: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0021612064447253942
    2. '%' → logprob: -6.252161026000977
    3. ' ' → logprob: -8.377161026000977
    4. ' ' → logprob: -13.252161026000977
    5. ' %
' → logprob: -15.127161026000977
    6. ' ==' → logprob: -15.502161026000977
    7. ' 

' → logprob: -16.627161026000977
    8. '   ' → logprob: -16.877161026000977
    9. '  ' → logprob: -17.002161026000977
    10. '```' → logprob: -17.752161026000977

Token 126: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1602274775505066
    2. ' ' → logprob: -1.9102275371551514
    3. '```' → logprob: -13.66022777557373
    4. '  ' → logprob: -14.16022777557373
    5. '==' → logprob: -14.66022777557373
    6. '   ' → logprob: -14.78522777557373
    7. ' ==' → logprob: -15.59772777557373
    8. '3' → logprob: -16.472726821899414
    9. '    ' → logprob: -16.910226821899414
    10. '     ' → logprob: -17.035226821899414

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004315036640036851
    2. ' ' → logprob: -7.750431537628174
    3. '```' → logprob: -14.875431060791016
    4. '  ' → logprob: -16.750431060791016
    5. '۲' → logprob: -16.750431060791016
    6. '   ' → logprob: -17.000431060791016
    7. '==' → logprob: -17.062931060791016
    8. '3' → logprob: -17.937931060791016
    9. '
' → logprob: -17.937931060791016
    10. '(' → logprob: -18.187931060791016

Token 128: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006231890991330147
    2. '==' → logprob: -5.131231784820557
    3. '0' → logprob: -8.506232261657715
    4. ' ' → logprob: -9.506232261657715
    5. '=' → logprob: -11.006232261657715
    6. ' =' → logprob: -12.131232261657715
    7. '1' → logprob: -13.631232261657715
    8. ')' → logprob: -14.506232261657715
    9. '2' → logprob: -14.756232261657715
    10. '```' → logprob: -14.756232261657715

Token 129: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759883522987366
    2. ' ' → logprob: -0.8259883522987366
    3. '1' → logprob: -9.95098876953125
    4. '```' → logprob: -15.51348876953125
    5. '=' → logprob: -15.76348876953125
    6. '==' → logprob: -15.76348876953125
    7. ' ' → logprob: -15.95098876953125
    8. '  ' → logprob: -16.01348876953125
    9. '2' → logprob: -16.45098876953125
    10. ' ==' → logprob: -16.57598876953125

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003604105906561017
    2. ' ' → logprob: -5.628603935241699
    3. '1' → logprob: -12.7536039352417
    4. '2' → logprob: -14.2536039352417
    5. '```' → logprob: -15.6911039352417
    6. '==' → logprob: -16.753604888916016
    7. '

' → logprob: -16.816104888916016
    8. '  ' → logprob: -16.941104888916016
    9. '   ' → logprob: -17.003604888916016
    10. '۰' → logprob: -17.253604888916016

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004491835366934538
    2. ':
' → logprob: -5.629491806030273
    3. ' :' → logprob: -7.129491806030273
    4. ' :
' → logprob: -9.379491806030273
    5. ':return' → logprob: -12.504491806030273
    6. '):' → logprob: -13.629491806030273
    7. '):
' → logprob: -14.754491806030273
    8. ':

' → logprob: -15.754491806030273
    9. ':
' → logprob: -16.629491806030273
    10. '():
' → logprob: -17.129491806030273

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023590294644236565
    2. 'return' → logprob: -5.023590087890625
    3. ' return' → logprob: -5.148590087890625
    4. ':' → logprob: -5.273590087890625
    5. '       ' → logprob: -5.898590087890625
    6. '        ' → logprob: -6.773590087890625
    7. ' :' → logprob: -6.773590087890625
    8. ' ' → logprob: -8.023590087890625
    9. '            ' → logprob: -8.773590087890625
    10. '          ' → logprob: -9.523590087890625

Token 133: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6933750510215759
    2. 'return' (adapté à ' return') → logprob: -0.6933750510215759
    3. ' 
' → logprob: -9.068374633789062
    4. '
' → logprob: -9.193374633789062
    5. '       ' → logprob: -11.818374633789062
    6. ' ' → logprob: -13.068374633789062
    7. 'eturn' → logprob: -14.943374633789062
    8. '   ' → logprob: -15.443374633789062
    9. '        
' → logprob: -15.568374633789062
    10. ':return' → logprob: -15.568374633789062

Token 134: ' Even' (ID: 10669)
  Prédit: ' Even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Even' → logprob: -0.16022716462612152
    2. 'Even' → logprob: -1.9102271795272827
    3. ' ' → logprob: -13.035226821899414
    4. '   ' → logprob: -14.910226821899414
    5. ' ' → logprob: -16.035226821899414
    6. '_even' → logprob: -16.160226821899414
    7. ' Ev' → logprob: -16.535226821899414
    8. 'Ev' → logprob: -16.535226821899414
    9. '  ' → logprob: -17.535226821899414
    10. 'EV' → logprob: -17.660226821899414

Token 135: 'Term' (ID: 12961)
  Prédit: 'Term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Term' → logprob: -1.9361264946837764e-07
    2. 'term' → logprob: -16.375
    3. 'Ter' → logprob: -18.75
    4. '_term' → logprob: -20.125
    5. 'Even' → logprob: -20.375
    6. ' Term' → logprob: -20.5
    7. 'Termin' → logprob: -21.25
    8. 'Terminal' → logprob: -21.375
    9. 'T' → logprob: -21.875
    10. '-term' → logprob: -22.25

Token 136: 'Strategy' (ID: 21488)
  Prédit: 'Term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Term' → logprob: -0.38698235154151917
    2. 'Strategy' → logprob: -1.1369823217391968
    3. 'strategy' → logprob: -10.386981964111328
    4. 'Even' → logprob: -11.386981964111328
    5. 'Strateg' → logprob: -11.761981964111328
    6. 'Method' → logprob: -11.886981964111328
    7. 'r' → logprob: -12.136981964111328
    8. 'term' → logprob: -12.136981964111328
    9. 'Step' → logprob: -12.386981964111328
    10. 's' → logprob: -12.761981964111328

Token 137: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12693136930465698
    2. '()
' → logprob: -2.1269314289093018
    3. '()
' → logprob: -12.876931190490723
    4. '()

' → logprob: -14.251931190490723
    5. '()`' → logprob: -16.75193214416504
    6. ' ()' → logprob: -17.62693214416504
    7. '()"' → logprob: -17.75193214416504
    8. '(' → logprob: -18.37693214416504
    9. ' ()
' → logprob: -19.50193214416504
    10. '（）' → logprob: -19.87693214416504

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009148012613877654
    2. ' else' → logprob: -7.125914573669434
    3. 'else' → logprob: -9.125914573669434
    4. '        
' → logprob: -14.125914573669434
    5. '
' → logprob: -15.625914573669434
    6. '   ' → logprob: -15.750914573669434
    7. '```' → logprob: -16.00091552734375
    8. 'return' → logprob: -16.12591552734375
    9. '      ' → logprob: -16.25091552734375
    10. '<|end|>' → logprob: -16.75091552734375

Token 139: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08687815070152283
    2. 'else' (adapté à ' else') → logprob: -2.5868780612945557
    3. '       ' → logprob: -4.836878299713135
    4. '   ' → logprob: -11.336877822875977
    5. 'return' → logprob: -12.586877822875977
    6. '	else' → logprob: -13.211877822875977
    7. '        ' → logprob: -13.336877822875977
    8. '    ' → logprob: -13.461877822875977
    9. ' return' → logprob: -13.461877822875977
    10. '
' → logprob: -13.836877822875977

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21883900463581085
    2. '           ' → logprob: -2.718838930130005
    3. '       ' → logprob: -2.843838930130005
    4. ':
' → logprob: -3.218838930130005
    5. ':return' → logprob: -3.968838930130005
    6. '<|end|>' → logprob: -5.093839168548584
    7. '        ' → logprob: -5.843839168548584
    8. ' :
' → logprob: -7.093839168548584
    9. ' :' → logprob: -7.343839168548584
    10. '               ' → logprob: -7.593839168548584

Token 141: '           ' (ID: 352)
  Prédit: ' Odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Odd' → logprob: -0.014086519367992878
    2. 'Odd' → logprob: -4.389086723327637
    3. ' return' → logprob: -7.139086723327637
    4. '        ' → logprob: -7.389086723327637
    5. ' O' → logprob: -9.389086723327637
    6. ' ' → logprob: -10.764086723327637
    7. '       ' → logprob: -11.264086723327637
    8. ' ' → logprob: -11.264086723327637
    9. 'return' → logprob: -11.389086723327637
    10. '            ' → logprob: -11.889086723327637

Token 142: ' return' (ID: 622)
  Prédit: ' Odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Odd' → logprob: -0.06441210210323334
    2. 'Odd' → logprob: -3.0644121170043945
    3. ' return' → logprob: -4.3144121170043945
    4. 'return' (adapté à ' return') → logprob: -6.0644121170043945
    5. ' ' → logprob: -14.064412117004395
    6. '       ' → logprob: -15.189412117004395
    7. 'Return' → logprob: -15.189412117004395
    8. ' odd' → logprob: -16.189411163330078
    9. ' O' → logprob: -16.189411163330078
    10. 'O' → logprob: -16.564411163330078

Token 143: ' Odd' (ID: 59799)
  Prédit: ' Odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Odd' → logprob: -0.25192990899086
    2. 'Odd' → logprob: -1.5019298791885376
    3. 'Od' → logprob: -15.501930236816406
    4. ' odd' → logprob: -15.751930236816406
    5. ' Od' → logprob: -15.876930236816406
    6. ' ' → logprob: -16.001930236816406
    7. 'O' → logprob: -16.751930236816406
    8. ' ' → logprob: -16.751930236816406
    9. 'Odds' → logprob: -16.876930236816406
    10. ' O' → logprob: -17.376930236816406

Token 144: 'Term' (ID: 12961)
  Prédit: 'Term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Term' → logprob: 0.0
    2. 'term' → logprob: -17.625
    3. 'Ter' → logprob: -18.25
    4. '_term' → logprob: -18.875
    5. '-term' → logprob: -19.5
    6. ' Term' → logprob: -19.75
    7. '-Term' → logprob: -20.125
    8. 'T' → logprob: -20.25
    9. 'Termin' → logprob: -20.75
    10. '_TERM' → logprob: -21.125

Token 145: 'Strategy' (ID: 21488)
  Prédit: 'Term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Term' → logprob: -0.008617646060883999
    2. 'Strategy' → logprob: -4.758617877960205
    3. 'Strateg' → logprob: -13.508617401123047
    4. 'strategy' → logprob: -14.633617401123047
    5. 'term' → logprob: -15.008617401123047
    6. 'Method' → logprob: -15.633617401123047
    7. 'Termin' → logprob: -15.758617401123047
    8. 'Step' → logprob: -15.883617401123047
    9. '```' → logprob: -16.508617401123047
    10. 'Strategies' → logprob: -16.758617401123047

Token 146: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.68153518543113e-05
    2. '()
' → logprob: -10.125057220458984
    3. '()

' → logprob: -11.500057220458984
    4. '()\' → logprob: -12.625057220458984
    5. '(' → logprob: -13.250057220458984
    6. '<|end|>' → logprob: -14.500057220458984
    7. '()?' → logprob: -15.500057220458984
    8. '()<' → logprob: -16.000057220458984
    9. '()]' → logprob: -16.000057220458984
    10. '()}' → logprob: -16.375057220458984

Token 147: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0004317420825827867
    2. '
' → logprob: -7.750431537628174
    3. ' class' → logprob: -14.750432014465332
    4. '

' → logprob: -15.375432014465332
    5. 'def' → logprob: -15.750432014465332
    6. '    
' → logprob: -16.125431060791016
    7. '  
' → logprob: -16.250431060791016
    8. ' 
' → logprob: -17.000431060791016
    9. '```' → logprob: -18.000431060791016
    10. '
' → logprob: -18.375431060791016

Token 148: ' Sequence' (ID: 57144)
  Prédit: ' Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sequence' → logprob: -0.3999537527561188
    2. 'Sequence' → logprob: -2.524953842163086
    3. ' Term' → logprob: -2.649953842163086
    4. ' Arithmetic' → logprob: -2.774953842163086
    5. ' Series' → logprob: -3.399953842163086
    6. ' Custom' → logprob: -3.899953842163086
    7. ' Altern' → logprob: -3.899953842163086
    8. ' Ge' → logprob: -4.399953842163086
    9. ' Fibonacci' → logprob: -5.149953842163086
    10. 'Arithmetic' → logprob: -5.399953842163086

Token 149: 'Generator' (ID: 14802)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08772236108779907
    2. 'Generator' → logprob: -2.5877223014831543
    3. 'Iterator' → logprob: -4.962722301483154
    4. ':
' → logprob: -6.962722301483154
    5. '(' → logprob: -7.337722301483154
    6. 'Iterable' → logprob: -9.712722778320312
    7. 'Builder' → logprob: -9.962722778320312
    8. 'Calculator' → logprob: -10.587722778320312
    9. 'Base' → logprob: -11.087722778320312
    10. 'Producer' → logprob: -11.087722778320312

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025892157573252916
    2. ':
' → logprob: -6.002589225769043
    3. ' :' → logprob: -9.377589225769043
    4. '(' → logprob: -10.627589225769043
    5. ':

' → logprob: -13.377589225769043
    6. ':
' → logprob: -13.877589225769043
    7. ' :
' → logprob: -14.002589225769043
    8. '(object' → logprob: -14.877589225769043
    9. ':def' → logprob: -15.377589225769043
    10. '(List' → logprob: -15.502589225769043

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02386154606938362
    2. ' def' → logprob: -3.7738616466522217
    3. 'def' → logprob: -7.398861408233643
    4. '  ' → logprob: -14.1488618850708
    5. '	def' → logprob: -14.1488618850708
    6. '    
' → logprob: -14.2738618850708
    7. '   ' → logprob: -14.2738618850708
    8. '    ' → logprob: -14.5238618850708
    9. ' ' → logprob: -14.8988618850708
    10. ':' → logprob: -16.648860931396484

Token 152: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3869061768054962
    2. 'def' (adapté à ' def') → logprob: -1.1369061470031738
    3. '   ' → logprob: -10.261906623840332
    4. ' ' → logprob: -16.386905670166016
    5. '	def' → logprob: -16.886905670166016
    6. ':def' → logprob: -18.636905670166016
    7. '
' → logprob: -18.761905670166016
    8. '```' → logprob: -18.886905670166016
    9. '_def' → logprob: -19.011905670166016
    10. '    ' → logprob: -19.636905670166016

Token 153: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01718650944530964
    2. 'init' → logprob: -5.017186641693115
    3. '_init' → logprob: -5.267186641693115
    4. ' init' → logprob: -5.392186641693115
    5. ' def' → logprob: -7.767186641693115
    6. '__' → logprob: -8.517186164855957
    7. ' ' → logprob: -10.642186164855957
    8. ' _' → logprob: -10.892186164855957
    9. 'def' → logprob: -10.892186164855957
    10. ' ' → logprob: -12.267186164855957

Token 154: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -15.625
    3. 'iter' → logprob: -18.125
    4. '_init' → logprob: -19.5
    5. '```' → logprob: -20.375
    6. 'inite' → logprob: -20.875
    7. '   ' → logprob: -21.0
    8. '	init' → logprob: -21.625
    9. 'ini' → logprob: -21.875
    10. '  ' → logprob: -21.875

Token 155: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.014318509958684444
    2. '(self' → logprob: -4.264318466186523
    3. '__' → logprob: -9.014318466186523
    4. '__(
' → logprob: -11.014318466186523
    5. '_(' → logprob: -11.764318466186523
    6. '(' → logprob: -12.139318466186523
    7. ' (' → logprob: -12.764318466186523
    8. '   ' → logprob: -14.889318466186523
    9. 'self' → logprob: -15.139318466186523
    10. '__((' → logprob: -16.889318466186523

Token 156: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043102685594931245
    2. ' self' → logprob: -7.750431060791016
    3. '
' → logprob: -15.000431060791016
    4. '(self' → logprob: -18.250431060791016
    5. ' ' → logprob: -18.625431060791016
    6. '   ' → logprob: -18.875431060791016
    7. ')' → logprob: -19.000431060791016
    8. ',' → logprob: -19.000431060791016
    9. '0' → logprob: -19.750431060791016
    10. 'start' → logprob: -20.250431060791016

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035663802176713943
    2. 'self' → logprob: -3.5356638431549072
    3. ' ,' → logprob: -6.035663604736328
    4. '(self' → logprob: -6.160663604736328
    5. ' self' → logprob: -6.785663604736328
    6. ' (' → logprob: -8.660663604736328
    7. ',self' → logprob: -10.160663604736328
    8. 'initial' → logprob: -11.035663604736328
    9. '(initial' → logprob: -12.035663604736328
    10. ' ' → logprob: -12.035663604736328

Token 158: ' initial' (ID: 4871)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.36337900161743164
    2. ' initial' → logprob: -1.9883790016174316
    3. 'start' → logprob: -2.3633790016174316
    4. 'self' → logprob: -4.113379001617432
    5. ' self' → logprob: -4.488379001617432
    6. 'initial' → logprob: -4.488379001617432
    7. ' term' → logprob: -4.988379001617432
    8. ' length' → logprob: -5.238379001617432
    9. ' strategy' → logprob: -5.238379001617432
    10. ' terms' → logprob: -5.738379001617432

Token 159: '_term' (ID: 41867)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6931946873664856
    2. '_term' → logprob: -0.6931946873664856
    3. '_terms' → logprob: -10.443194389343262
    4. ':' → logprob: -11.443194389343262
    5. '_' → logprob: -12.318194389343262
    6. 'value' → logprob: -13.568194389343262
    7. '_index' → logprob: -15.068194389343262
    8. 'term' → logprob: -15.318194389343262
    9. '_val' → logprob: -15.818194389343262
    10. ' _' → logprob: -16.193195343017578

Token 160: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.24179228907451e-05
    2. ',' → logprob: -10.250061988830566
    3. '=' → logprob: -10.625061988830566
    4. ' :' → logprob: -13.625061988830566
    5. ':int' → logprob: -15.125061988830566
    6. '_:' → logprob: -15.250061988830566
    7. '=float' → logprob: -15.375061988830566
    8. '   ' → logprob: -15.500061988830566
    9. ':,' → logprob: -15.750061988830566
    10. '1' → logprob: -16.500062942504883

Token 161: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.2535659968852997
    2. 'float' → logprob: -1.503566026687622
    3. '1' → logprob: -6.878565788269043
    4. ' ' → logprob: -8.128565788269043
    5. 'int' → logprob: -9.128565788269043
    6. ' int' → logprob: -9.128565788269043
    7. '   ' → logprob: -9.878565788269043
    8. '=float' → logprob: -11.503565788269043
    9. '0' → logprob: -11.878565788269043
    10. '(float' → logprob: -12.753565788269043

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.625866030342877e-05
    2. ' ,' → logprob: -10.125085830688477
    3. '):' → logprob: -10.250085830688477
    4. ')' → logprob: -11.875085830688477
    5. '   ' → logprob: -13.250085830688477
    6. '):
' → logprob: -14.000085830688477
    7. ',index' → logprob: -14.750085830688477
    8. ' ' → logprob: -15.500085830688477
    9. ',
' → logprob: -15.750085830688477
    10. ',int' → logprob: -16.750085830688477

Token 163: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -1.0688061714172363
    2. 'length' → logprob: -1.4438061714172363
    3. ' strategies' → logprob: -2.0688061714172363
    4. 'num' → logprob: -3.0688061714172363
    5. 'strateg' → logprob: -3.1938061714172363
    6. 'n' → logprob: -3.1938061714172363
    7. ' n' → logprob: -3.3188061714172363
    8. ' num' → logprob: -3.4438061714172363
    9. ' strategy' → logprob: -3.9438061714172363
    10. 'strategy' → logprob: -4.193806171417236

Token 164: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.5107177862082608e-05
    2. ':int' → logprob: -10.625024795532227
    3. '):' → logprob: -15.250024795532227
    4. 'int' → logprob: -15.250024795532227
    5. ' :' → logprob: -15.500024795532227
    6. '=' → logprob: -16.750024795532227
    7. '   ' → logprob: -17.000024795532227
    8. '_:' → logprob: -17.125024795532227
    9. ')' → logprob: -18.000024795532227
    10. ',' → logprob: -18.500024795532227

Token 165: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.474092036485672
    2. ' int' → logprob: -0.9740920066833496
    3. '   ' → logprob: -11.974092483520508
    4. ' ' → logprob: -12.099092483520508
    5. ':int' → logprob: -13.474092483520508
    6. '[int' → logprob: -14.474092483520508
    7. '	int' → logprob: -14.849092483520508
    8. '  ' → logprob: -15.474092483520508
    9. '(int' → logprob: -15.724092483520508
    10. '    ' → logprob: -15.974092483520508

Token 166: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.039004214107990265
    2. ',' → logprob: -3.414004325866699
    3. ')' → logprob: -5.414004325866699
    4. '):
' → logprob: -7.289004325866699
    5. ' ):' → logprob: -9.5390043258667
    6. '   ' → logprob: -9.9140043258667
    7. ':' → logprob: -10.0390043258667
    8. '):
' → logprob: -10.4140043258667
    9. ' )' → logprob: -12.4140043258667
    10. ' ,' → logprob: -12.6640043258667

Token 167: ' strategy' (ID: 10772)
  Prédit: ' strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -0.739100456237793
    2. 'strategy' → logprob: -1.739100456237793
    3. ' factory' → logprob: -1.989100456237793
    4. 'factory' → logprob: -2.364100456237793
    5. 'term' → logprob: -2.739100456237793
    6. ' term' → logprob: -3.489100456237793
    7. '):' → logprob: -5.364100456237793
    8. ')' → logprob: -5.489100456237793
    9. ' )' → logprob: -5.864100456237793
    10. '):
' → logprob: -6.114100456237793

Token 168: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -4.1557283111615106e-05
    2. 'Factory' → logprob: -10.375041961669922
    3. '_factor' → logprob: -12.000041961669922
    4. 'factory' → logprob: -12.750041961669922
    5. ':' → logprob: -14.875041961669922
    6. '_fact' → logprob: -15.125041961669922
    7. '_provider' → logprob: -15.500041961669922
    8. 's' → logprob: -16.250041961669922
    9. '_fac' → logprob: -16.375041961669922
    10. ' factory' → logprob: -16.500041961669922

Token 169: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004253388848155737
    2. '):' → logprob: -5.504253387451172
    3. ')' → logprob: -9.004253387451172
    4. '):
' → logprob: -10.629253387451172
    5. ' :' → logprob: -11.004253387451172
    6. ' ):' → logprob: -11.504253387451172
    7. '=' → logprob: -14.629253387451172
    8. '   ' → logprob: -15.504253387451172
    9. ' )' → logprob: -16.004253387451172
    10. '  ' → logprob: -16.379253387451172

Token 170: ' Term' (ID: 12167)
  Prédit: ' Term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Term' → logprob: -0.06197217106819153
    2. 'Term' → logprob: -2.811972141265869
    3. ' ' → logprob: -12.686972618103027
    4. ')' → logprob: -14.936972618103027
    5. ' term' → logprob: -15.061972618103027
    6. '   ' → logprob: -15.811972618103027
    7. ' ' → logprob: -15.936972618103027
    8. '_term' → logprob: -16.06197166442871
    9. ' Terms' → logprob: -16.31197166442871
    10. ' Termin' → logprob: -16.31197166442871

Token 171: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.002005364978685975
    2. '_strategy' → logprob: -6.252005577087402
    3. 'Factory' → logprob: -9.877005577087402
    4. 'Strateg' → logprob: -11.627005577087402
    5. '   ' → logprob: -12.377005577087402
    6. '_Str' → logprob: -12.377005577087402
    7. ' Strategy' → logprob: -12.752005577087402
    8. '_str' → logprob: -13.127005577087402
    9. '_factory' → logprob: -13.502005577087402
    10. 'Strategies' → logprob: -14.627005577087402

Token 172: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.0015887735644355416
    2. '):' → logprob: -6.501588821411133
    3. '):
' → logprob: -9.501588821411133
    4. ')' → logprob: -12.376588821411133
    5. ' ):' → logprob: -13.251588821411133
    6. '.Factory' → logprob: -13.626588821411133
    7. '):

' → logprob: -13.751588821411133
    8. '   ' → logprob: -13.876588821411133
    9. ' Factory' → logprob: -14.126588821411133
    10. ' ' → logprob: -14.751588821411133

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028027184307575226
    2. '):
' → logprob: -3.903027296066284
    3. ')' → logprob: -4.903027057647705
    4. '):
' → logprob: -11.028027534484863
    5. '   ' → logprob: -11.653027534484863
    6. ' ):' → logprob: -12.278027534484863
    7. ':' → logprob: -13.278027534484863
    8. ' ' → logprob: -13.778027534484863
    9. ')->' → logprob: -15.528027534484863
    10. ' )' → logprob: -15.778027534484863

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47394096851348877
    2. ':' → logprob: -1.0989409685134888
    3. ':
' → logprob: -3.223940849304199
    4. '   ' → logprob: -5.723940849304199
    5. '):
' → logprob: -7.598940849304199
    6. ',' → logprob: -8.0989408493042
    7. ')' → logprob: -8.7239408493042
    8. '):' → logprob: -9.0989408493042
    9. '        
' → logprob: -10.5989408493042
    10. 'self' → logprob: -11.3489408493042

Token 175: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4987451434135437
    2. 'self' (adapté à ' self') → logprob: -1.2487452030181885
    3. ' self' → logprob: -2.2487452030181885
    4. '   ' → logprob: -8.12374496459961
    5. ' ' → logprob: -11.74874496459961
    6. '	self' → logprob: -12.49874496459961
    7. '      ' → logprob: -14.12374496459961
    8. '     ' → logprob: -14.12374496459961
    9. '           ' → logprob: -14.62374496459961
    10. '	' → logprob: -15.12374496459961

Token 176: '.initial' (ID: 58290)
  Prédit: '.initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.31430667638778687
    2. '.' → logprob: -1.3143067359924316
    3. 'initial' → logprob: -7.814306735992432
    4. ' .' → logprob: -8.189306259155273
    5. '_initial' → logprob: -8.939306259155273
    6. ' ' → logprob: -9.314306259155273
    7. '._' → logprob: -9.689306259155273
    8. ' initial' → logprob: -10.314306259155273
    9. '	initial' → logprob: -11.814306259155273
    10. ':' → logprob: -11.939306259155273

Token 177: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.0004894073354080319
    2. '_' → logprob: -7.875489234924316
    3. ' _' → logprob: -9.625489234924316
    4. '_token' → logprob: -10.875489234924316
    5. '_terms' → logprob: -11.250489234924316
    6. '_value' → logprob: -12.875489234924316
    7. '_terminal' → logprob: -13.875489234924316
    8. '_task' → logprob: -14.500489234924316
    9. '_t' → logprob: -14.750489234924316
    10. '_input' → logprob: -14.875489234924316

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740796685218811
    2. '=' → logprob: -0.9740796685218811
    3. ':' → logprob: -13.849080085754395
    4. ' ' → logprob: -14.349080085754395
    5. ',' → logprob: -14.474080085754395
    6. '_' → logprob: -15.224080085754395
    7. '    ' → logprob: -15.474080085754395
    8. '   ' → logprob: -16.349079132080078
    9. ')' → logprob: -17.974079132080078
    10. '_=' → logprob: -18.474079132080078

Token 179: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.07889188081026077
    2. 'initial' → logprob: -2.5788919925689697
    3. '	initial' → logprob: -13.95389175415039
    4. '_initial' → logprob: -14.45389175415039
    5. '(initial' → logprob: -15.07889175415039
    6. ' ' → logprob: -15.32889175415039
    7. ' inicial' → logprob: -16.32889175415039
    8. ' ' → logprob: -16.57889175415039
    9. 'Initial' → logprob: -16.70389175415039
    10. '.initial' → logprob: -17.82889175415039

Token 180: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -2.463036435074173e-05
    2. '_' → logprob: -11.000024795532227
    3. ' _' → logprob: -12.000024795532227
    4. '_token' → logprob: -13.750024795532227
    5. '_TERM' → logprob: -15.375024795532227
    6. '_t' → logprob: -16.250024795532227
    7. '_terms' → logprob: -16.500024795532227
    8. 'term' → logprob: -16.875024795532227
    9. '   ' → logprob: -17.125024795532227
    10. 'Term' → logprob: -17.250024795532227

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5273626446723938
    2. '
' → logprob: -0.9023626446723938
    3. 'self' → logprob: -5.777362823486328
    4. '        
' → logprob: -7.027362823486328
    5. ' 
' → logprob: -9.527362823486328
    6. '    
' → logprob: -10.027362823486328
    7. '  
' → logprob: -10.277362823486328
    8. ' self' → logprob: -10.402362823486328
    9. '
' → logprob: -10.902362823486328
    10. '<|end|>' → logprob: -11.277362823486328

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3412646949291229
    2. 'self' → logprob: -1.3412647247314453
    3. ' self' → logprob: -3.5912647247314453
    4. '   ' → logprob: -10.216264724731445
    5. '
' → logprob: -11.841264724731445
    6. '	self' → logprob: -12.966264724731445
    7. ' ' → logprob: -13.591264724731445
    8. '        
' → logprob: -13.841264724731445
    9. '      ' → logprob: -14.466264724731445
    10. ',' → logprob: -14.841264724731445

Token 183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005675395485013723
    2. 'length' → logprob: -5.380675315856934
    3. ' self' → logprob: -6.880675315856934
    4. '       ' → logprob: -11.130675315856934
    5. ' length' → logprob: -11.380675315856934
    6. '   ' → logprob: -14.255675315856934
    7. 'len' → logprob: -16.38067626953125
    8. 'Length' → logprob: -16.75567626953125
    9. '_length' → logprob: -17.00567626953125
    10. '	self' → logprob: -17.13067626953125

Token 184: '.length' (ID: 3116)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.11570575088262558
    2. 'length' → logprob: -2.240705728530884
    3. '_length' → logprob: -5.865705966949463
    4. '.length' → logprob: -11.365705490112305
    5. 'ength' → logprob: -12.240705490112305
    6. ' .' → logprob: -12.615705490112305
    7. ' sequence' → logprob: -12.740705490112305
    8. '.' → logprob: -12.740705490112305
    9. ',length' → logprob: -12.740705490112305
    10. ' strategy' → logprob: -12.990705490112305

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6328349113464355
    2. '=' → logprob: -0.7578349113464355
    3. '<|end|>' → logprob: -9.007835388183594
    4. ' ' → logprob: -9.382835388183594
    5. '    ' → logprob: -11.382835388183594
    6. '<|end|>' → logprob: -12.382835388183594
    7. ':' → logprob: -13.382835388183594
    8. ',' → logprob: -13.382835388183594
    9. '=int' → logprob: -13.507835388183594
    10. ')' → logprob: -13.632835388183594

Token 186: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.006734795868396759
    2. 'length' → logprob: -5.006734848022461
    3. ' ' → logprob: -11.006734848022461
    4. '(length' → logprob: -13.506734848022461
    5. '[length' → logprob: -14.381734848022461
    6. ' ' → logprob: -15.506734848022461
    7. '	length' → logprob: -15.631734848022461
    8. ',length' → logprob: -15.756734848022461
    9. ' lenght' → logprob: -16.13173484802246
    10. ' len' → logprob: -16.25673484802246

Token 187: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00048751471331343055
    2. 'self' → logprob: -8.125487327575684
    3. ' self' → logprob: -9.125487327575684
    4. '
' → logprob: -9.625487327575684
    5. '   ' → logprob: -12.000487327575684
    6. '<|end|>' → logprob: -12.250487327575684
    7. ',' → logprob: -13.125487327575684
    8. '        
' → logprob: -14.125487327575684
    9. ' ' → logprob: -14.375487327575684
    10. '	self' → logprob: -14.750487327575684

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024933021515607834
    2. 'self' → logprob: -3.774933099746704
    3. ' self' → logprob: -6.399932861328125
    4. '   ' → logprob: -10.774932861328125
    5. '	self' → logprob: -13.024932861328125
    6. '	' → logprob: -15.399932861328125
    7. ' ' → logprob: -15.524932861328125
    8. '
' → logprob: -15.774932861328125
    9. '        
' → logprob: -15.899932861328125
    10. '      ' → logprob: -16.024932861328125

Token 189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00011832444579340518
    2. ' self' → logprob: -9.250118255615234
    3. '       ' → logprob: -10.750118255615234
    4. '   ' → logprob: -15.000118255615234
    5. '
' → logprob: -15.250118255615234
    6. '        
' → logprob: -16.125118255615234
    7. '	self' → logprob: -16.750118255615234
    8. 'strategy' → logprob: -18.000118255615234
    9. 'def' → logprob: -18.875118255615234
    10. '(self' → logprob: -18.875118255615234

Token 190: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.18138135969638824
    2. '.' → logprob: -1.931381344795227
    3. ' .' → logprob: -4.1813812255859375
    4. 'strategy' → logprob: -5.4313812255859375
    5. '.str' → logprob: -7.6813812255859375
    6. ' strategy' → logprob: -7.9313812255859375
    7. '_strategy' → logprob: -8.556381225585938
    8. '._' → logprob: -8.806381225585938
    9. '   ' → logprob: -9.931381225585938
    10. 'strateg' → logprob: -10.931381225585938

Token 191: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -1.7432603272027336e-06
    2. '_factor' → logprob: -13.875001907348633
    3. '_' → logprob: -15.000001907348633
    4. '_fact' → logprob: -15.750001907348633
    5. 'Factory' → logprob: -16.750001907348633
    6. 'factory' → logprob: -17.000001907348633
    7. '_f' → logprob: -17.250001907348633
    8. '_FACTORY' → logprob: -17.500001907348633
    9. '_fac' → logprob: -18.500001907348633
    10. '=_' → logprob: -18.625001907348633

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740912914276123
    2. '=' → logprob: -0.9740912914276123
    3. ' ' → logprob: -11.974091529846191
    4. '   ' → logprob: -12.099091529846191
    5. '    ' → logprob: -13.724091529846191
    6. '.' → logprob: -14.724091529846191
    7. ' =
' → logprob: -15.224091529846191
    8. '       ' → logprob: -15.724091529846191
    9. ')' → logprob: -16.349090576171875
    10. '  ' → logprob: -16.474090576171875

Token 193: ' strategy' (ID: 10772)
  Prédit: ' strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -0.002478508511558175
    2. 'strategy' → logprob: -6.00247859954834
    3. 'strateg' → logprob: -13.75247859954834
    4. ' ' → logprob: -14.12747859954834
    5. '(strategy' → logprob: -14.25247859954834
    6. '_strategy' → logprob: -15.87747859954834
    7. ' strategies' → logprob: -16.377477645874023
    8. ' ' → logprob: -16.377477645874023
    9. ' strategi' → logprob: -16.627477645874023
    10. '.strategy' → logprob: -16.752477645874023

Token 194: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -3.7697225252486533e-06
    2. '_strategy' → logprob: -13.000003814697266
    3. '_factor' → logprob: -13.875003814697266
    4. 'factory' → logprob: -15.250003814697266
    5. 'Factory' → logprob: -16.125003814697266
    6. '_fact' → logprob: -16.750003814697266
    7. '_FACTORY' → logprob: -16.875003814697266
    8. '_fac' → logprob: -17.875003814697266
    9. '_f' → logprob: -18.375003814697266
    10. '_' → logprob: -18.375003814697266

Token 195: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21064478158950806
    2. '   ' → logprob: -1.7106447219848633
    3. '    
' → logprob: -5.085644721984863
    4. 'def' → logprob: -5.960644721984863
    5. '  
' → logprob: -8.585644721984863
    6. '

' → logprob: -9.335644721984863
    7. ' def' → logprob: -9.585644721984863
    8. '        
' → logprob: -10.460644721984863
    9. ' 
' → logprob: -11.335644721984863
    10. '<|end|>' → logprob: -11.335644721984863

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005614700727164745
    2. '
' → logprob: -5.380614757537842
    3. 'def' → logprob: -7.255614757537842
    4. '    
' → logprob: -8.255614280700684
    5. ' def' → logprob: -11.005614280700684
    6. '  
' → logprob: -12.380614280700684
    7. '   
' → logprob: -13.380614280700684
    8. '        
' → logprob: -13.505614280700684
    9. '

' → logprob: -13.880614280700684
    10. ' 
' → logprob: -14.130614280700684

Token 197: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.2729995988775045e-06
    2. ' def' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.0000057220459
    4. '
' → logprob: -19.8750057220459
    5. '    
' → logprob: -20.7500057220459
    6. '	def' → logprob: -21.2500057220459
    7. '```' → logprob: -21.3750057220459
    8. 'Def' → logprob: -22.3750057220459
    9. 'de' → logprob: -23.0000057220459
    10. 'from' → logprob: -23.1250057220459

Token 198: ' generate' (ID: 10419)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5311241745948792
    2. '__' → logprob: -1.0311241149902344
    3. ' generate' → logprob: -3.2811241149902344
    4. 'generate' → logprob: -4.031124114990234
    5. ' sequence' → logprob: -10.656124114990234
    6. ' get' → logprob: -10.906124114990234
    7. '_generate' → logprob: -11.031124114990234
    8. ' iterate' → logprob: -11.281124114990234
    9. 'get' → logprob: -12.031124114990234
    10. '_iter' → logprob: -12.281124114990234

Token 199: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010426939697936177
    2. '_terms' → logprob: -7.75104284286499
    3. '_sequence' → logprob: -7.87604284286499
    4. '(' → logprob: -9.001042366027832
    5. '_(' → logprob: -10.001042366027832
    6. ' (' → logprob: -10.751042366027832
    7. '_' → logprob: -11.376042366027832
    8. 's' → logprob: -11.501042366027832
    9. 'self' → logprob: -12.376042366027832
    10. '()' → logprob: -13.126042366027832

Token 200: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010877089807763696
    2. 'self' → logprob: -7.626087665557861
    3. '_terms' → logprob: -8.00108814239502
    4. '   ' → logprob: -9.62608814239502
    5. ' )' → logprob: -9.75108814239502
    6. '(self' → logprob: -10.12608814239502
    7. '_' → logprob: -10.37608814239502
    8. ',' → logprob: -10.87608814239502
    9. '_)' → logprob: -11.37608814239502
    10. '       ' → logprob: -11.75108814239502

Token 201: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.022839955985546112
    2. ' ->' → logprob: -4.1478400230407715
    3. '->' → logprob: -5.8978400230407715
    4. 'self' → logprob: -6.6478400230407715
    5. '(' → logprob: -6.8978400230407715
    6. ')' → logprob: -7.2728400230407715
    7. '[self' → logprob: -8.647839546203613
    8. ':' → logprob: -8.772839546203613
    9. '_iterator' → logprob: -9.022839546203613
    10. '   ' → logprob: -9.022839546203613

Token 202: ' List' (ID: 2655)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.1143660843372345
    2. 'List' → logprob: -2.614366054534912
    3. ' Iterator' → logprob: -3.364366054534912
    4. ' List' → logprob: -8.23936653137207
    5. '	Iterator' → logprob: -12.86436653137207
    6. '   ' → logprob: -13.36436653137207
    7. 'Iterable' → logprob: -14.48936653137207
    8. ' ' → logprob: -14.98936653137207
    9. 'Generator' → logprob: -15.11436653137207
    10. 'list' → logprob: -15.36436653137207

Token 203: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. 'float' → logprob: -14.875000953674316
    3. '[int' → logprob: -15.250000953674316
    4. '[
' → logprob: -17.0
    5. '<float' → logprob: -17.125
    6. '[List' → logprob: -17.375
    7. ' [' → logprob: -17.625
    8. '[f' → logprob: -17.75
    9. '```' → logprob: -18.125
    10. 'flo' → logprob: -18.125

Token 204: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.1875571544806007e-05
    2. ' float' → logprob: -11.500011444091797
    3. 'flo' → logprob: -14.250011444091797
    4. '   ' → logprob: -14.625011444091797
    5. '[' → logprob: -15.000011444091797
    6. '```' → logprob: -16.375011444091797
    7. '	float' → logprob: -16.625011444091797
    8. '<float' → logprob: -17.000011444091797
    9. 'Float' → logprob: -17.750011444091797
    10. '       ' → logprob: -18.250011444091797

Token 205: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4984254539012909
    2. ']:' → logprob: -1.3734254837036133
    3. ':' → logprob: -2.3734254837036133
    4. ':
' → logprob: -3.1234254837036133
    5. '):
' → logprob: -6.998425483703613
    6. ']:
' → logprob: -7.248425483703613
    7. ':
' → logprob: -8.248425483703613
    8. '):' → logprob: -9.623425483703613
    9. ']' → logprob: -9.748425483703613
    10. '   ' → logprob: -9.873425483703613

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00219118339009583
    2. 'terms' → logprob: -6.502191066741943
    3. 'result' → logprob: -7.627191066741943
    4. ' terms' → logprob: -9.377191543579102
    5. ' result' → logprob: -9.502191543579102
    6. 'term' → logprob: -10.877191543579102
    7. 'sequence' → logprob: -12.502191543579102
    8. '```' → logprob: -12.627191543579102
    9. 'results' → logprob: -12.752191543579102
    10. 'numbers' → logprob: -12.877191543579102

Token 207: ' terms' (ID: 5941)
  Prédit: 'terms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terms' (adapté à ' terms') → logprob: -0.020064231008291245
    2. 'sequence' → logprob: -4.020064353942871
    3. '       ' → logprob: -6.770064353942871
    4. 'result' → logprob: -7.520064353942871
    5. ' terms' → logprob: -8.895064353942871
    6. 'term' → logprob: -9.895064353942871
    7. ' sequence' → logprob: -11.020064353942871
    8. 'results' → logprob: -11.270064353942871
    9. 'seq' → logprob: -12.645064353942871
    10. ' result' → logprob: -13.520064353942871

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012543438002467155
    2. '=' → logprob: -4.387543201446533
    3. ':' → logprob: -10.512543678283691
    4. ' ' → logprob: -12.762543678283691
    5. '=[]' → logprob: -13.137543678283691
    6. '[' → logprob: -15.012543678283691
    7. '[]' → logprob: -15.137543678283691
    8. '   ' → logprob: -15.262543678283691
    9. ' :' → logprob: -15.387543678283691
    10. ' =[' → logprob: -15.762543678283691

Token 209: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.802952229976654
    2. ' [' → logprob: -1.3029522895812988
    3. '[self' → logprob: -1.3029522895812988
    4. '[start' → logprob: -6.802952289581299
    5. '[first' → logprob: -6.802952289581299
    6. '[]' → logprob: -7.302952289581299
    7. '[email' → logprob: -7.427952289581299
    8. '[event' → logprob: -7.427952289581299
    9. '[token' → logprob: -7.802952289581299
    10. '[element' → logprob: -7.927952289581299

Token 210: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7954958821064793e-05
    2. ' self' → logprob: -11.000018119812012
    3. '       ' → logprob: -13.625018119812012
    4. '   ' → logprob: -17.875017166137695
    5. '           ' → logprob: -18.375017166137695
    6. '	self' → logprob: -20.500017166137695
    7. '(self' → logprob: -21.125017166137695
    8. '
' → logprob: -21.375017166137695
    9. '[self' → logprob: -21.625017166137695
    10. '        ' → logprob: -21.625017166137695

Token 211: '.initial' (ID: 58290)
  Prédit: '.initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -3.2378600735682994e-05
    2. 'initial' → logprob: -10.625032424926758
    3. '.' → logprob: -11.875032424926758
    4. '_initial' → logprob: -14.625032424926758
    5. ' .' → logprob: -15.375032424926758
    6. '(initial' → logprob: -16.125032424926758
    7. '	initial' → logprob: -16.375032424926758
    8. '.Initial' → logprob: -16.750032424926758
    9. '._' → logprob: -17.000032424926758
    10. '_.' → logprob: -17.250032424926758

Token 212: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.000001907348633
    3. ' _' → logprob: -15.000001907348633
    4. '_terms' → logprob: -15.500001907348633
    5. 'term' → logprob: -16.125001907348633
    6. '_token' → logprob: -16.625001907348633
    7. '_TERM' → logprob: -18.000001907348633
    8. '```' → logprob: -18.125001907348633
    9. '\' → logprob: -18.250001907348633
    10. '_point' → logprob: -18.375001907348633

Token 213: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12842720746994019
    2. ']
' → logprob: -2.128427267074585
    3. '
' → logprob: -6.878427028656006
    4. ']

' → logprob: -8.128427505493164
    5. '   ' → logprob: -9.878427505493164
    6. '       ' → logprob: -10.378427505493164
    7. ' ]' → logprob: -10.503427505493164
    8. ' ]
' → logprob: -11.003427505493164
    9. ']
' → logprob: -11.253427505493164
    10. 'for' → logprob: -11.503427505493164

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08129085600376129
    2. ' for' → logprob: -3.0812909603118896
    3. 'for' → logprob: -3.5812909603118896
    4. 'prev' → logprob: -6.0812907218933105
    5. ' prev' → logprob: -6.2062907218933105
    6. ' current' → logprob: -11.706291198730469
    7. '   ' → logprob: -11.831291198730469
    8. '
' → logprob: -11.831291198730469
    9. 'current' → logprob: -12.581291198730469
    10. ' previous' → logprob: -13.206291198730469

Token 215: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003476882353425026
    2. ' for' → logprob: -5.753477096557617
    3. 'prev' → logprob: -8.753477096557617
    4. '       ' → logprob: -8.878477096557617
    5. ' prev' → logprob: -13.503477096557617
    6. 'current' → logprob: -15.378477096557617
    7. 'previous' → logprob: -16.378477096557617
    8. '```' → logprob: -16.628477096557617
    9. '        
' → logprob: -17.378477096557617
    10. '   ' → logprob: -17.378477096557617

Token 216: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31552720069885254
    2. 'i' → logprob: -1.3155272006988525
    3. ' index' → logprob: -6.565526962280273
    4. 'index' → logprob: -7.065526962280273
    5. ' idx' → logprob: -14.565526962280273
    6. 'idx' → logprob: -15.940526962280273
    7. ' ' → logprob: -15.940526962280273
    8. '	i' → logprob: -16.815526962280273
    9. '   ' → logprob: -17.940526962280273
    10. '_index' → logprob: -19.065526962280273

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007025416707620025
    2. 'in' → logprob: -7.375702381134033
    3. ' ' → logprob: -9.500702857971191
    4. '	in' → logprob: -14.250702857971191
    5. 'n' → logprob: -16.000701904296875
    6. ',' → logprob: -16.500701904296875
    7. '1' → logprob: -16.500701904296875
    8. '  ' → logprob: -16.625701904296875
    9. 'range' → logprob: -16.625701904296875
    10. ' i' → logprob: -17.000701904296875

Token 218: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01815146580338478
    2. 'range' → logprob: -4.01815128326416
    3. ' ' → logprob: -13.89315128326416
    4. '	range' → logprob: -15.51815128326416
    5. 'ange' → logprob: -15.64315128326416
    6. '(range' → logprob: -15.76815128326416
    7. '   ' → logprob: -16.268152236938477
    8. ' xrange' → logprob: -17.643152236938477
    9. '  ' → logprob: -17.768152236938477
    10. '    ' → logprob: -18.143152236938477

Token 219: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -17.375
    3. '1' → logprob: -17.5
    4. '(
' → logprob: -20.125
    5. '(len' → logprob: -20.75
    6. '(self' → logprob: -21.25
    7. '[' → logprob: -22.375
    8. '(

' → logprob: -23.25
    9. ' ' → logprob: -24.625
    10. 'len' → logprob: -24.75

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. 'len' → logprob: -15.625009536743164
    4. '   ' → logprob: -15.875009536743164
    5. 'self' → logprob: -18.375009536743164
    6. '(' → logprob: -19.125009536743164
    7. '       ' → logprob: -19.875009536743164
    8. ' len' → logprob: -19.875009536743164
    9. '１' → logprob: -20.125009536743164
    10. '    ' → logprob: -20.250009536743164

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.512236498361744e-07
    2. ' ,' → logprob: -14.875000953674316
    3. ',self' → logprob: -15.625000953674316
    4. 'self' → logprob: -17.625
    5. ',
' → logprob: -19.0
    6. '1' → logprob: -19.0
    7. ',

' → logprob: -19.375
    8. ',length' → logprob: -19.375
    9. ',len' → logprob: -19.625
    10. '‌,' → logprob: -20.5

Token 222: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023245826363563538
    2. ' self' → logprob: -3.7732458114624023
    3. '       ' → logprob: -14.898245811462402
    4. '	self' → logprob: -19.02324676513672
    5. '[self' → logprob: -19.39824676513672
    6. '           ' → logprob: -19.52324676513672
    7. '(self' → logprob: -19.64824676513672
    8. '   ' → logprob: -19.89824676513672
    9. '        ' → logprob: -20.52324676513672
    10. '=self' → logprob: -20.77324676513672

Token 223: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -4.246537173457909e-06
    2. 'length' → logprob: -12.500003814697266
    3. '.' → logprob: -15.000003814697266
    4. ' length' → logprob: -18.000003814697266
    5. ' .' → logprob: -18.125003814697266
    6. 'ength' → logprob: -18.375003814697266
    7. '	length' → logprob: -18.500003814697266
    8. ',length' → logprob: -19.125003814697266
    9. ':length' → logprob: -19.500003814697266
    10. '.size' → logprob: -19.625003814697266

Token 224: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38889119029045105
    2. '):' → logprob: -1.1388912200927734
    3. ' ):
' → logprob: -6.888891220092773
    4. ' ):' → logprob: -7.013891220092773
    5. '   ' → logprob: -9.888891220092773
    6. '):
' → logprob: -10.763891220092773
    7. '       ' → logprob: -11.263891220092773
    8. '):

' → logprob: -12.763891220092773
    9. ':' → logprob: -12.888891220092773
    10. ')' → logprob: -12.888891220092773

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005218160222284496
    2. ' strategy' → logprob: -8.875521659851074
    3. '
' → logprob: -9.250521659851074
    4. '```' → logprob: -9.875521659851074
    5. ' 
' → logprob: -10.125521659851074
    6. '            
' → logprob: -10.250521659851074
    7. '    
' → logprob: -11.000521659851074
    8. '       ' → logprob: -11.000521659851074
    9. 'strateg' → logprob: -11.250521659851074
    10. 'strategy' → logprob: -11.250521659851074

Token 226: ' strategy' (ID: 10772)
  Prédit: ' strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -0.47680914402008057
    2. 'strategy' (adapté à ' strategy') → logprob: -0.9768091440200806
    3. '           ' → logprob: -6.851809024810791
    4. 'term' → logprob: -7.226809024810791
    5. 'prev' → logprob: -7.976809024810791
    6. ' prev' → logprob: -8.47680950164795
    7. ' term' → logprob: -8.60180950164795
    8. '       ' → logprob: -9.35180950164795
    9. '               ' → logprob: -10.47680950164795
    10. '_strategy' → logprob: -10.85180950164795

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015134313143789768
    2. '=' → logprob: -6.501513481140137
    3. '_factory' → logprob: -11.751513481140137
    4. ' ' → logprob: -13.001513481140137
    5. '_' → logprob: -15.001513481140137
    6. '    ' → logprob: -15.876513481140137
    7. '        ' → logprob: -16.62651252746582
    8. '_strategy' → logprob: -16.62651252746582
    9. 'Factory' → logprob: -16.75151252746582
    10. ' =
' → logprob: -16.87651252746582

Token 228: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048587486147880554
    2. ' self' → logprob: -3.0485875606536865
    3. '[self' → logprob: -17.173587799072266
    4. '           ' → logprob: -17.173587799072266
    5. '	self' → logprob: -17.173587799072266
    6. '(self' → logprob: -17.173587799072266
    7. '=self' → logprob: -18.298587799072266
    8. '       ' → logprob: -19.173587799072266
    9. ' ' → logprob: -19.548587799072266
    10. '_self' → logprob: -20.423587799072266

Token 229: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.000954098126385361
    2. 'strategy' → logprob: -7.0009541511535645
    3. '.str' → logprob: -10.375953674316406
    4. '.' → logprob: -11.750953674316406
    5. ' strategy' → logprob: -13.375953674316406
    6. ' .' → logprob: -13.625953674316406
    7. '_strategy' → logprob: -15.000953674316406
    8. '(strategy' → logprob: -15.375953674316406
    9. 'strateg' → logprob: -16.000953674316406
    10. '..' → logprob: -17.375953674316406

Token 230: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -4.320199877838604e-07
    2. 'factory' → logprob: -16.25
    3. '_FACTORY' → logprob: -16.25
    4. 'Factory' → logprob: -16.75
    5. '_fact' → logprob: -16.875
    6. '_strategy' → logprob: -17.125
    7. '_factor' → logprob: -17.125
    8. '_fac' → logprob: -17.5
    9. '.factory' → logprob: -20.625
    10. '_generator' → logprob: -20.75

Token 231: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00010235115041723475
    2. '.' → logprob: -9.375102043151855
    3. ' .' → logprob: -11.000102043151855
    4. 'get' → logprob: -14.625102043151855
    5. '   ' → logprob: -16.500102996826172
    6. '().' → logprob: -16.625102996826172
    7. ').' → logprob: -18.000102996826172
    8. '
' → logprob: -18.500102996826172
    9. '{}.' → logprob: -18.500102996826172
    10. '.setdefault' → logprob: -18.625102996826172

Token 232: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -1.9361264946837764e-07
    2. '_str' → logprob: -15.75
    3. 'strategy' → logprob: -16.75
    4. '_' → logprob: -17.75
    5. '_method' → logprob: -19.375
    6. ' strategy' → logprob: -19.75
    7. ' _' → logprob: -19.875
    8. '(strategy' → logprob: -20.125
    9. '_factor' → logprob: -20.25
    10. '_scheme' → logprob: -20.875

Token 233: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -19.125001907348633
    4. ' (' → logprob: -19.125001907348633
    5. 'i' → logprob: -19.500001907348633
    6. '(index' → logprob: -21.250001907348633
    7. '(in' → logprob: -21.625001907348633
    8. '((' → logprob: -21.750001907348633
    9. '(I' → logprob: -22.500001907348633
    10. '(ii' → logprob: -22.875001907348633

Token 234: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693884551525116
    2. ')
' → logprob: -0.693884551525116
    3. ' )
' → logprob: -7.443884372711182
    4. ' )' → logprob: -9.56888484954834
    5. ')
' → logprob: -10.31888484954834
    6. '       ' → logprob: -10.81888484954834
    7. '           ' → logprob: -10.81888484954834
    8. ')

' → logprob: -12.19388484954834
    9. ' ' → logprob: -13.56888484954834
    10. '   ' → logprob: -13.69388484954834

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010458730161190033
    2. 'prev' → logprob: -5.510458946228027
    3. 'term' → logprob: -5.760458946228027
    4. ' term' → logprob: -6.260458946228027
    5. ' prev' → logprob: -7.010458946228027
    6. 'terms' → logprob: -8.635458946228027
    7. ' terms' → logprob: -9.385458946228027
    8. 'next' → logprob: -10.010458946228027
    9. ' next' → logprob: -10.635458946228027
    10. '       ' → logprob: -10.885458946228027

Token 236: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.39293259382247925
    2. ' next' → logprob: -1.642932653427124
    3. 'term' → logprob: -3.142932653427124
    4. 'prev' → logprob: -3.267932653427124
    5. 'new' → logprob: -3.892932653427124
    6. ' new' → logprob: -4.142932415008545
    7. ' prev' → logprob: -5.017932415008545
    8. ' term' → logprob: -5.142932415008545
    9. '           ' → logprob: -6.642932415008545
    10. 'terms' → logprob: -8.767932891845703

Token 237: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.00021879478299524635
    2. '_value' → logprob: -8.625218391418457
    3. '_' → logprob: -10.250218391418457
    4. '_terms' → logprob: -13.125218391418457
    5. '_val' → logprob: -14.375218391418457
    6. '_token' → logprob: -15.000218391418457
    7. ' _' → logprob: -15.125218391418457
    8. ' =' → logprob: -15.750218391418457
    9. '_TERM' → logprob: -16.000219345092773
    10. 'term' → logprob: -16.000219345092773

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008614926598966122
    2. '=' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.008614540100098
    4. ')' → logprob: -17.008615493774414
    5. ' ' → logprob: -17.633615493774414
    6. ' =
' → logprob: -17.758615493774414
    7. '    ' → logprob: -18.258615493774414
    8. 's' → logprob: -18.758615493774414
    9. ',' → logprob: -19.008615493774414
    10. ':' → logprob: -19.508615493774414

Token 239: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.07889749854803085
    2. ' strategy' → logprob: -2.578897476196289
    3. 'strateg' → logprob: -11.828897476196289
    4. '(strategy' → logprob: -15.828897476196289
    5. 'strategie' → logprob: -16.45389747619629
    6. 'str' → logprob: -16.70389747619629
    7. 'terms' → logprob: -17.07889747619629
    8. 'term' → logprob: -17.45389747619629
    9. 'strate' → logprob: -17.70389747619629
    10. '_strategy' → logprob: -17.95389747619629

Token 240: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -6.0391463193809614e-05
    2. '.' → logprob: -9.750060081481934
    3. ' .' → logprob: -13.875060081481934
    4. '.calculate' → logprob: -14.625060081481934
    5. 'compute' → logprob: -14.875060081481934
    6. '.generate' → logprob: -15.500060081481934
    7. '.evaluate' → logprob: -18.37506103515625
    8. '().' → logprob: -18.62506103515625
    9. '.apply' → logprob: -18.87506103515625
    10. '.perform' → logprob: -19.12506103515625

Token 241: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -7.941850526549388e-06
    2. '_terms' → logprob: -12.125007629394531
    3. '_' → logprob: -13.625007629394531
    4. 'term' → logprob: -14.500007629394531
    5. ' _' → logprob: -15.250007629394531
    6. '_token' → logprob: -16.37500762939453
    7. '_TERM' → logprob: -16.37500762939453
    8. '```' → logprob: -16.50000762939453
    9. '(term' → logprob: -16.75000762939453
    10. 'terms' → logprob: -17.12500762939453

Token 242: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.438573680294212e-06
    2. '(
' → logprob: -12.750005722045898
    3. '(term' → logprob: -13.375005722045898
    4. 'terms' → logprob: -14.625005722045898
    5. '(

' → logprob: -15.000005722045898
    6. ' (' → logprob: -17.5000057220459
    7. ' terms' → logprob: -18.0000057220459
    8. '(previous' → logprob: -18.7500057220459
    9. '(tasks' → logprob: -18.8750057220459
    10. '(
' → logprob: -19.0000057220459

Token 243: 'terms' (ID: 39463)
  Prédit: 'terms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terms' → logprob: -0.0001239196863025427
    2. ' terms' → logprob: -9.000123977661133
    3. '(' → logprob: -15.000123977661133
    4. 'term' → logprob: -17.500123977661133
    5. '   ' → logprob: -18.125123977661133
    6. ')' → logprob: -18.125123977661133
    7. '_terms' → logprob: -18.750123977661133
    8. '
' → logprob: -19.375123977661133
    9. '           ' → logprob: -19.750123977661133
    10. '(
' → logprob: -19.875123977661133

Token 244: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.5491004129871726e-05
    2. '[i' → logprob: -10.000045776367188
    3. '[' → logprob: -18.250045776367188
    4. '[
' → logprob: -19.875045776367188
    5. '   ' → logprob: -20.125045776367188
    6. '-' → logprob: -21.250045776367188
    7. ' [-' → logprob: -21.875045776367188
    8. '```' → logprob: -21.875045776367188
    9. '
' → logprob: -23.750045776367188
    10. '`' → logprob: -23.750045776367188

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'term' → logprob: -19.25
    4. '   ' → logprob: -20.0
    5. '_' → logprob: -21.25
    6. '_term' → logprob: -21.25
    7. '  ' → logprob: -21.5
    8. '１' → logprob: -22.125
    9. '```' → logprob: -22.125
    10. '
' → logprob: -22.25

Token 246: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0297551192343235
    2. ')
' → logprob: -3.529755115509033
    3. ')
' → logprob: -12.529755592346191
    4. ')`
' → logprob: -14.904755592346191
    5. ')

' → logprob: -15.154755592346191
    6. ')`' → logprob: -15.654755592346191
    7. ' )' → logprob: -16.404754638671875
    8. ' )
' → logprob: -16.529754638671875
    9. '))' → logprob: -17.154754638671875
    10. '),' → logprob: -18.154754638671875

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011415231710998341
    2. 'terms' → logprob: -9.750114440917969
    3. ' terms' → logprob: -10.000114440917969
    4. '       ' → logprob: -12.000114440917969
    5. '   ' → logprob: -13.375114440917969
    6. '            
' → logprob: -13.500114440917969
    7. '
' → logprob: -14.500114440917969
    8. '_terms' → logprob: -16.00011444091797
    9. '          ' → logprob: -16.12511444091797
    10. '        
' → logprob: -16.25011444091797

Token 248: ' terms' (ID: 5941)
  Prédit: 'terms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terms' (adapté à ' terms') → logprob: -0.023022416979074478
    2. ' terms' → logprob: -3.898022413253784
    3. '           ' → logprob: -6.148022651672363
    4. '       ' → logprob: -8.023022651672363
    5. '   ' → logprob: -11.648022651672363
    6. '_terms' → logprob: -14.023022651672363
    7. 'term' → logprob: -14.148022651672363
    8. 'ter' → logprob: -14.773022651672363
    9. '               ' → logprob: -15.523022651672363
    10. ' ' → logprob: -15.648022651672363

Token 249: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006726737599819899
    2. '.' → logprob: -5.0067267417907715
    3. '.app' → logprob: -11.631726264953613
    4. '.Append' → logprob: -14.006726264953613
    5. '.ap' → logprob: -14.131726264953613
    6. '.extend' → logprob: -14.506726264953613
    7. 'append' → logprob: -15.131726264953613
    8. ' .' → logprob: -16.63172721862793
    9. '.push' → logprob: -17.13172721862793
    10. '_append' → logprob: -17.75672721862793

Token 250: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. 'next' → logprob: -16.62502098083496
    4. '(
' → logprob: -17.37502098083496
    5. '(n' → logprob: -20.87502098083496
    6. ' next' → logprob: -21.62502098083496
    7. ' (' → logprob: -22.37502098083496
    8. ',next' → logprob: -22.37502098083496
    9. '[next' → logprob: -22.87502098083496
    10. '(

' → logprob: -22.87502098083496

Token 251: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -12.12501049041748
    3. 'term' → logprob: -12.87501049041748
    4. ' _' → logprob: -13.37501049041748
    5. '_token' → logprob: -15.00001049041748
    6. '_terms' → logprob: -15.12501049041748
    7. '   ' → logprob: -15.87501049041748
    8. '_TERM' → logprob: -16.500011444091797
    9. ' term' → logprob: -16.625011444091797
    10. '-term' → logprob: -17.250011444091797

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016832228749990463
    2. ')
' → logprob: -4.14183235168457
    3. '       ' → logprob: -7.26683235168457
    4. ')return' → logprob: -9.26683235168457
    5. '
' → logprob: -13.64183235168457
    6. 'return' → logprob: -13.76683235168457
    7. ')
' → logprob: -14.14183235168457
    8. ' )' → logprob: -15.01683235168457
    9. '   ' → logprob: -15.14183235168457
    10. ')\
' → logprob: -15.26683235168457

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001319063303526491
    2. 'return' → logprob: -9.125131607055664
    3. '   ' → logprob: -10.875131607055664
    4. ' return' → logprob: -12.500131607055664
    5. '
' → logprob: -16.375131607055664
    6. '        
' → logprob: -16.875131607055664
    7. '```' → logprob: -16.875131607055664
    8. '	return' → logprob: -17.125131607055664
    9. '      ' → logprob: -17.375131607055664
    10. ' ' → logprob: -18.250131607055664

Token 254: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0016744681634008884
    2. '       ' → logprob: -6.501674652099609
    3. ' return' → logprob: -8.75167465209961
    4. '   ' → logprob: -11.25167465209961
    5. '
' → logprob: -14.12667465209961
    6. '	return' → logprob: -15.87667465209961
    7. '        
' → logprob: -16.62667465209961
    8. ' ' → logprob: -17.25167465209961
    9. '```' → logprob: -18.00167465209961
    10. '    
' → logprob: -18.50167465209961

Token 255: ' terms' (ID: 5941)
  Prédit: 'terms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terms' → logprob: -0.5759406089782715
    2. ' terms' → logprob: -0.8259406089782715
    3. 'term' → logprob: -14.32594108581543
    4. ' termes' → logprob: -15.57594108581543
    5. ' ' → logprob: -15.82594108581543
    6. '_terms' → logprob: -15.95094108581543
    7. 'ter' → logprob: -16.82594108581543
    8. ' term' → logprob: -16.95094108581543
    9. 'Terms' → logprob: -16.95094108581543
    10. ' termos' → logprob: -17.70094108581543

Token 256: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.020197192206978798
    2. 'class' → logprob: -5.02019739151001
    3. 'sequence' → logprob: -5.14519739151001
    4. 'def' → logprob: -5.52019739151001
    5. 'seq' → logprob: -5.89519739151001
    6. 'from' → logprob: -8.645196914672852
    7. 'generator' → logprob: -8.895196914672852
    8. 'if' → logprob: -8.895196914672852
    9. 'gen' → logprob: -9.395196914672852
    10. '```' → logprob: -9.395196914672852

Token 258: ' Sequence' (ID: 57144)
  Prédit: ' Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sequence' → logprob: -0.2544163763523102
    2. ' Arithmetic' → logprob: -2.0044164657592773
    3. 'Sequence' → logprob: -3.1294164657592773
    4. ' Fibonacci' → logprob: -4.629416465759277
    5. ' Ge' → logprob: -4.879416465759277
    6. ' Sum' → logprob: -5.504416465759277
    7. ' Custom' → logprob: -5.629416465759277
    8. ' Altern' → logprob: -5.629416465759277
    9. 'Arithmetic' → logprob: -5.629416465759277
    10. ' Term' → logprob: -5.879416465759277

Token 259: 'Summ' (ID: 64614)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.34000781178474426
    2. 'Generator' → logprob: -1.5900077819824219
    3. 'Printer' → logprob: -3.215007781982422
    4. 'Analyzer' → logprob: -3.590007781982422
    5. 'Processor' → logprob: -5.465007781982422
    6. '(' → logprob: -5.590007781982422
    7. 'Builder' → logprob: -6.340007781982422
    8. ':' → logprob: -7.215007781982422
    9. 'Iterable' → logprob: -7.215007781982422
    10. ':
' → logprob: -7.465007781982422

Token 260: 'ation' (ID: 387)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.3935450315475464
    2. 'ation' → logprob: -1.1435450315475464
    3. 'er' → logprob: -5.018545150756836
    4. 'ar' → logprob: -10.393545150756836
    5. 'ing' → logprob: -12.768545150756836
    6. 'and' → logprob: -13.268545150756836
    7. 'able' → logprob: -14.018545150756836
    8. 'atory' → logprob: -14.893545150756836
    9. 'ary' → logprob: -15.143545150756836
    10. 'a' → logprob: -15.393545150756836

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04354977607727051
    2. ':
' → logprob: -3.1685497760772705
    3. '(' → logprob: -7.543549537658691
    4. ' :' → logprob: -11.918549537658691
    5. '   ' → logprob: -12.543549537658691
    6. ':

' → logprob: -13.043549537658691
    7. '(Abstract' → logprob: -13.543549537658691
    8. ' :
' → logprob: -13.668549537658691
    9. '(object' → logprob: -13.793549537658691
    10. ':
' → logprob: -13.918549537658691

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004225254990160465
    2. ' def' → logprob: -5.629225254058838
    3. 'def' → logprob: -7.379225254058838
    4. '	def' → logprob: -15.129225730895996
    5. ' ' → logprob: -15.754225730895996
    6. '
' → logprob: -15.754225730895996
    7. '  ' → logprob: -16.00422477722168
    8. '    
' → logprob: -16.50422477722168
    9. ':
' → logprob: -16.62922477722168
    10. '```' → logprob: -17.25422477722168

Token 263: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12126373499631882
    2. 'def' (adapté à ' def') → logprob: -2.3712637424468994
    3. '   ' → logprob: -3.8712637424468994
    4. ' ' → logprob: -13.24626350402832
    5. '@' → logprob: -13.49626350402832
    6. ' @' → logprob: -13.74626350402832
    7. '	def' → logprob: -14.87126350402832
    8. '  ' → logprob: -15.99626350402832
    9. '    ' → logprob: -15.99626350402832
    10. 'class' → logprob: -16.12126350402832

Token 264: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4948200583457947
    2. ' __' → logprob: -0.9948200583457947
    3. 'def' → logprob: -4.4948201179504395
    4. '__' → logprob: -5.4948201179504395
    5. '   ' → logprob: -6.2448201179504395
    6. 'staticmethod' → logprob: -6.3698201179504395
    7. ' ' → logprob: -6.9948201179504395
    8. '  ' → logprob: -8.494819641113281
    9. 'init' → logprob: -8.994819641113281
    10. 'object' → logprob: -9.494819641113281

Token 265: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -16.875
    3. 'ini' → logprob: -18.25
    4. 'in' → logprob: -18.625
    5. 'new' → logprob: -19.125
    6. '	init' → logprob: -19.375
    7. 'int' → logprob: -19.5
    8. '   ' → logprob: -19.875
    9. 'innit' → logprob: -20.25
    10. 'inite' → logprob: -20.625

Token 266: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11859869211912155
    2. '(' → logprob: -2.493598699569702
    3. ' (' → logprob: -3.618598699569702
    4. '__(' → logprob: -6.118598461151123
    5. ',' → logprob: -9.618598937988281
    6. 'self' → logprob: -10.243598937988281
    7. '_(' → logprob: -10.493598937988281
    8. '(
' → logprob: -10.618598937988281
    9. ')(' → logprob: -11.368598937988281
    10. '__(
' → logprob: -11.868598937988281

Token 267: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00047368707600980997
    2. ' self' → logprob: -7.750473499298096
    3. '(self' → logprob: -11.000473976135254
    4. '   ' → logprob: -11.250473976135254
    5. ',' → logprob: -12.375473976135254
    6. '       ' → logprob: -12.750473976135254
    7. '
' → logprob: -12.750473976135254
    8. 'sequence' → logprob: -13.625473976135254
    9. '	self' → logprob: -14.000473976135254
    10. ',self' → logprob: -14.500473976135254

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006933231838047504
    2. ' ,' → logprob: -5.631933212280273
    3. 'self' → logprob: -5.756933212280273
    4. ' self' → logprob: -9.381933212280273
    5. ',self' → logprob: -10.006933212280273
    6. '   ' → logprob: -10.881933212280273
    7. '(self' → logprob: -11.756933212280273
    8. ',
' → logprob: -12.631933212280273
    9. ' (' → logprob: -12.881933212280273
    10. '    ' → logprob: -14.131933212280273

Token 269: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.38004419207572937
    2. ' sequence' → logprob: -1.2550442218780518
    3. 'initial' → logprob: -4.505043983459473
    4. ' initial' → logprob: -4.880043983459473
    5. 'terms' → logprob: -5.005043983459473
    6. ' terms' → logprob: -5.755043983459473
    7. 'generator' → logprob: -7.130043983459473
    8. ' generator' → logprob: -7.380043983459473
    9. 'term' → logprob: -7.880043983459473
    10. ' sequences' → logprob: -8.380043983459473

Token 270: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010050006210803986
    2. '_generator' → logprob: -4.635049819946289
    3. 'Generator' → logprob: -8.885049819946289
    4. ' :' → logprob: -9.010049819946289
    5. '_:' → logprob: -11.385049819946289
    6. '   ' → logprob: -12.260049819946289
    7. 'generator' → logprob: -12.260049819946289
    8. '_gen' → logprob: -12.385049819946289
    9. ' generator' → logprob: -13.885049819946289
    10. '):' → logprob: -14.010049819946289

Token 271: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.001173321157693863
    2. ' List' → logprob: -6.751173496246338
    3. '[List' → logprob: -13.25117301940918
    4. 'list' → logprob: -14.12617301940918
    5. '	List' → logprob: -14.75117301940918
    6. '   ' → logprob: -15.75117301940918
    7. ' ' → logprob: -16.37617301940918
    8. ')' → logprob: -16.75117301940918
    9. 'Sequence' → logprob: -17.37617301940918
    10. '  ' → logprob: -18.50117301940918

Token 272: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2723104848410003e-05
    2. 'float' → logprob: -10.750022888183594
    3. '<float' → logprob: -14.250022888183594
    4. ',float' → logprob: -15.625022888183594
    5. '[int' → logprob: -16.000022888183594
    6. '```' → logprob: -17.000022888183594
    7. '=float' → logprob: -17.125022888183594
    8. '   ' → logprob: -17.250022888183594
    9. ' float' → logprob: -17.375022888183594
    10. '[str' → logprob: -17.500022888183594

Token 273: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.253090865968261e-06
    2. 'flo' → logprob: -12.000009536743164
    3. ' float' → logprob: -13.750009536743164
    4. ')' → logprob: -14.375009536743164
    5. '[' → logprob: -14.500009536743164
    6. '<float' → logprob: -15.250009536743164
    7. '=float' → logprob: -15.750009536743164
    8. ',float' → logprob: -15.875009536743164
    9. '(float' → logprob: -16.000009536743164
    10. '	float' → logprob: -16.500009536743164

Token 274: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.5933189392089844
    2. ']):
' → logprob: -0.8433189392089844
    3. '])' → logprob: -4.343318939208984
    4. '):' → logprob: -6.218318939208984
    5. ']' → logprob: -6.718318939208984
    6. ')' → logprob: -7.468318939208984
    7. '):
' → logprob: -7.843318939208984
    8. '>):' → logprob: -10.843318939208984
    9. '],' → logprob: -10.968318939208984
    10. ']:' → logprob: -11.218318939208984

Token 275: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3138967454433441
    2. '       ' → logprob: -1.3138967752456665
    3. 'def' → logprob: -7.938896656036377
    4. 'self' → logprob: -8.313897132873535
    5. ' self' → logprob: -10.563897132873535
    6. ' def' → logprob: -12.938897132873535
    7. ',' → logprob: -14.063897132873535
    8. '	self' → logprob: -14.313897132873535
    9. '    
' → logprob: -14.438897132873535
    10. '(self' → logprob: -14.938897132873535

Token 276: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0061442190781235695
    2. ' self' → logprob: -5.256144046783447
    3. '       ' → logprob: -7.006144046783447
    4. '   ' → logprob: -12.506144523620605
    5. '	self' → logprob: -16.38114356994629
    6. ' ' → logprob: -17.38114356994629
    7. '     ' → logprob: -18.63114356994629
    8. '      ' → logprob: -19.38114356994629
    9. 'def' → logprob: -19.38114356994629
    10. '    ' → logprob: -19.50614356994629

Token 277: '.sequence' (ID: 97641)
  Prédit: '.sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sequence' → logprob: -0.0007124318508431315
    2. 'sequence' → logprob: -7.2507123947143555
    3. '.' → logprob: -13.625712394714355
    4. ' sequence' → logprob: -13.750712394714355
    5. ' .' → logprob: -16.000713348388672
    6. '   ' → logprob: -17.625713348388672
    7. '_sequence' → logprob: -17.750713348388672
    8. 'Sequence' → logprob: -18.000713348388672
    9. '.Sequence' → logprob: -18.875713348388672
    10. '.se' → logprob: -19.625713348388672

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804941102862358
    2. ' =' → logprob: -3.2880494594573975
    3. '   ' → logprob: -12.288049697875977
    4. ':' → logprob: -13.288049697875977
    5. '=self' → logprob: -13.788049697875977
    6. ' ' → logprob: -15.413049697875977
    7. '=

' → logprob: -16.538049697875977
    8. '=
' → logprob: -16.538049697875977
    9. 'self' → logprob: -16.663049697875977
    10. '       ' → logprob: -17.038049697875977

Token 279: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.25192946195602417
    2. ' sequence' → logprob: -1.501929521560669
    3. '(sequence' → logprob: -15.25192928314209
    4. '   ' → logprob: -17.251930236816406
    5. '.sequence' → logprob: -17.501930236816406
    6. ' ' → logprob: -18.501930236816406
    7. 'Sequence' → logprob: -18.626930236816406
    8. ' ' → logprob: -19.126930236816406
    9. '       ' → logprob: -19.751930236816406
    10. '_sequence' → logprob: -19.876930236816406

Token 280: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09091741591691971
    2. '
' → logprob: -2.4659173488616943
    3. 'def' → logprob: -6.715917587280273
    4. '    
' → logprob: -7.465917587280273
    5. ' def' → logprob: -8.715917587280273
    6. '<|end|>' → logprob: -11.840917587280273
    7. ' 
' → logprob: -12.090917587280273
    8. '  
' → logprob: -12.465917587280273
    9. '   
' → logprob: -13.340917587280273
    10. '

' → logprob: -13.340917587280273

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4794600009918213
    2. 'def' → logprob: -0.9794600009918213
    3. ' def' → logprob: -5.229459762573242
    4. '
' → logprob: -11.979459762573242
    5. '	def' → logprob: -12.604459762573242
    6. '    
' → logprob: -13.979459762573242
    7. ' ' → logprob: -13.979459762573242
    8. '  ' → logprob: -14.229459762573242
    9. '

' → logprob: -16.479459762573242
    10. ':def' → logprob: -17.729459762573242

Token 282: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.8624639324116288e-06
    2. ' def' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '
' → logprob: -20.000001907348633
    5. '@' → logprob: -20.250001907348633
    6. 'from' → logprob: -20.750001907348633
    7. 'de' → logprob: -21.125001907348633
    8. '    
' → logprob: -22.500001907348633
    9. 'class' → logprob: -22.750001907348633
    10. '	def' → logprob: -22.875001907348633

Token 283: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.35027602314949036
    2. ' sum' → logprob: -1.475275993347168
    3. 'compute' → logprob: -3.725275993347168
    4. ' compute' → logprob: -4.100275993347168
    5. 'calculate' → logprob: -4.475275993347168
    6. 'summ' → logprob: -5.350275993347168
    7. ' calculate' → logprob: -5.350275993347168
    8. 'total' → logprob: -5.850275993347168
    9. ' total' → logprob: -6.225275993347168
    10. ' summ' → logprob: -8.600275993347168

Token 284: '_terms' (ID: 96676)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018959138542413712
    2. '_(' → logprob: -7.501895904541016
    3. '_' → logprob: -7.626895904541016
    4. '_sequence' → logprob: -7.876895904541016
    5. '_all' → logprob: -8.751895904541016
    6. 's' → logprob: -9.251895904541016
    7. '(' → logprob: -9.751895904541016
    8. '_terms' → logprob: -10.251895904541016
    9. '()' → logprob: -10.751895904541016
    10. '(s' → logprob: -10.751895904541016

Token 285: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.160971628967673e-05
    2. ' (' → logprob: -10.000082015991211
    3. '(' → logprob: -10.250082015991211
    4. '(s' → logprob: -15.375082015991211
    5. '   ' → logprob: -15.875082015991211
    6. 'self' → logprob: -16.00008201599121
    7. '()' → logprob: -16.00008201599121
    8. '(sel' → logprob: -16.00008201599121
    9. '(se' → logprob: -16.37508201599121
    10. '(
' → logprob: -17.75008201599121

Token 286: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011932061752304435
    2. 'self' → logprob: -7.126193046569824
    3. '):' → logprob: -8.751193046569824
    4. '(self' → logprob: -8.876193046569824
    5. ' )' → logprob: -9.876193046569824
    6. '   ' → logprob: -11.001193046569824
    7. '):
' → logprob: -11.251193046569824
    8. ')->' → logprob: -13.001193046569824
    9. '       ' → logprob: -13.126193046569824
    10. ',' → logprob: -13.376193046569824

Token 287: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0037595860194414854
    2. '(' → logprob: -5.753759384155273
    3. ' ->' → logprob: -8.003759384155273
    4. ' (' → logprob: -8.503759384155273
    5. '->' → logprob: -10.503759384155273
    6. 'self' → logprob: -12.128759384155273
    7. ':' → logprob: -12.503759384155273
    8. '()' → logprob: -13.003759384155273
    9. '       ' → logprob: -13.378759384155273
    10. '   ' → logprob: -13.503759384155273

Token 288: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.16022665798664093
    2. 'float' → logprob: -1.9102267026901245
    3. ' ' → logprob: -13.785226821899414
    4. ' sum' → logprob: -14.285226821899414
    5. '   ' → logprob: -14.535226821899414
    6. '	float' → logprob: -16.035226821899414
    7. 'sum' → logprob: -16.285226821899414
    8. '(float' → logprob: -16.660226821899414
    9. 'flo' → logprob: -16.910226821899414
    10. '    ' → logprob: -17.910226821899414

Token 289: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12585590779781342
    2. ':' → logprob: -2.6258559226989746
    3. '       ' → logprob: -3.5008559226989746
    4. ':
' → logprob: -5.000855922698975
    5. '(' → logprob: -5.125855922698975
    6. '():
' → logprob: -7.000855922698975
    7. '():' → logprob: -7.250855922698975
    8. '(
' → logprob: -7.375855922698975
    9. 'self' → logprob: -8.125855445861816
    10. '   ' → logprob: -8.500855445861816

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027420982951298356
    2. 'return' → logprob: -8.625274658203125
    3. 'sum' → logprob: -9.625274658203125
    4. ' return' → logprob: -10.625274658203125
    5. ' sum' → logprob: -13.000274658203125
    6. '0' → logprob: -14.125274658203125
    7. '      ' → logprob: -14.875274658203125
    8. '   ' → logprob: -15.125274658203125
    9. 'result' → logprob: -15.750274658203125
    10. '```' → logprob: -15.875274658203125

Token 291: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007616679649800062
    2. ' return' → logprob: -5.5076165199279785
    3. 'sum' → logprob: -6.0076165199279785
    4. '       ' → logprob: -6.8826165199279785
    5. 'result' → logprob: -10.382616996765137
    6. 'total' → logprob: -11.382616996765137
    7. ' sum' → logprob: -12.507616996765137
    8. '   ' → logprob: -15.757616996765137
    9. '0' → logprob: -16.13261604309082
    10. 's' → logprob: -16.25761604309082

Token 292: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.07889044284820557
    2. 'sum' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.453890800476074
    4. '	sum' → logprob: -15.578890800476074
    5. ' ' → logprob: -15.703890800476074
    6. ' ' → logprob: -16.078889846801758
    7. '(sum' → logprob: -17.328889846801758
    8. '=sum' → logprob: -18.578889846801758
    9. '```' → logprob: -19.203889846801758
    10. ' self' → logprob: -19.828889846801758

Token 293: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004078758880496025
    2. '(' → logprob: -5.5040788650512695
    3. ' (' → logprob: -15.62907886505127
    4. '(s' → logprob: -15.75407886505127
    5. '(
' → logprob: -16.254077911376953
    6. 'self' → logprob: -17.879077911376953
    7. '(

' → logprob: -18.379077911376953
    8. '(this' → logprob: -19.629077911376953
    9. '(sel' → logprob: -19.629077911376953
    10. ' self' → logprob: -20.254077911376953

Token 294: '.sequence' (ID: 97641)
  Prédit: '.sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sequence' → logprob: -0.003225010121241212
    2. '.' → logprob: -5.753224849700928
    3. ' .' → logprob: -10.253225326538086
    4. 'sequence' → logprob: -11.378225326538086
    5. '.period' → logprob: -15.628225326538086
    6. '.seq' → logprob: -16.503225326538086
    7. '.se' → logprob: -17.003225326538086
    8. '.user' → logprob: -17.128225326538086
    9. ' sequence' → logprob: -17.128225326538086
    10. ').' → logprob: -17.128225326538086

Token 295: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ' )' → logprob: -12.125014305114746
    3. ')
' → logprob: -12.250014305114746
    4. '())' → logprob: -12.875014305114746
    5. '<|end|>' → logprob: -14.500014305114746
    6. ')

' → logprob: -15.250014305114746
    7. '[])' → logprob: -15.500014305114746
    8. '   ' → logprob: -15.625014305114746
    9. '()' → logprob: -17.12501335144043
    10. '[' → logprob: -17.37501335144043

Token 296: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7102746963500977
    2. '<|end|>' → logprob: -1.2102746963500977
    3. 'class' → logprob: -1.7102746963500977
    4. 'def' → logprob: -3.9602746963500977
    5. '<|end|>' → logprob: -5.335274696350098
    6. '```' → logprob: -5.585274696350098
    7. 'from' → logprob: -6.710274696350098
    8. 'import' → logprob: -8.460274696350098
    9. '[' → logprob: -8.710274696350098
    10. 'if' → logprob: -9.085274696350098

Token 297: ' Input' (ID: 10090)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.024481184780597687
    2. ' Sequence' → logprob: -4.149481296539307
    3. 'Arithmetic' → logprob: -6.024481296539307
    4. 'F' → logprob: -7.024481296539307
    5. 'Altern' → logprob: -7.149481296539307
    6. 'Summ' → logprob: -7.274481296539307
    7. 'Term' → logprob: -7.649481296539307
    8. 'Average' → logprob: -7.774481296539307
    9. 'Series' → logprob: -8.149480819702148
    10. 'Filtered' → logprob: -8.274480819702148

Token 298: 'Reader' (ID: 7171)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.34496089816093445
    2. 'Reader' → logprob: -1.5949609279632568
    3. 'Processor' → logprob: -3.469960927963257
    4. 'Parser' → logprob: -3.719960927963257
    5. 'Provider' → logprob: -4.344960689544678
    6. 'Validator' → logprob: -4.469960689544678
    7. 'Sequence' → logprob: -4.844960689544678
    8. 'Manager' → logprob: -7.969960689544678
    9. 'Collector' → logprob: -8.844961166381836
    10. 'Generator' → logprob: -8.969961166381836

Token 299: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005949417594820261
    2. ':
' → logprob: -5.1309494972229
    3. '(' → logprob: -11.380949020385742
    4. '():' → logprob: -12.380949020385742
    5. ':

' → logprob: -13.380949020385742
    6. '(Abstract' → logprob: -14.005949020385742
    7. '(object' → logprob: -14.130949020385742
    8. ' :' → logprob: -14.380949020385742
    9. ':
' → logprob: -15.005949020385742
    10. '<|end|>' → logprob: -15.380949020385742

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006346088368445635
    2. 'def' → logprob: -5.756346225738525
    3. ' def' → logprob: -5.756346225738525
    4. '	def' → logprob: -15.131345748901367
    5. 'import' → logprob: -15.631345748901367
    6. 'class' → logprob: -16.131345748901367
    7. ':' → logprob: -16.506345748901367
    8. '   ' → logprob: -16.506345748901367
    9. '```' → logprob: -17.631345748901367
    10. ':def' → logprob: -17.881345748901367

Token 301: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.160257026553154
    2. ' def' → logprob: -1.9102569818496704
    3. '@' → logprob: -10.785257339477539
    4. '   ' → logprob: -11.410257339477539
    5. ' @' → logprob: -13.910257339477539
    6. 'class' → logprob: -15.535257339477539
    7. '```' → logprob: -18.41025733947754
    8. 'import' → logprob: -18.53525733947754
    9. '	def' → logprob: -18.53525733947754
    10. 'staticmethod' → logprob: -18.53525733947754

Token 302: ' __' (ID: 2516)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.975334882736206
    2. ' __' → logprob: -1.100334882736206
    3. '__' → logprob: -2.100334882736206
    4. 'staticmethod' → logprob: -2.600334882736206
    5. ' read' → logprob: -2.725334882736206
    6. ' def' → logprob: -4.350335121154785
    7. 'def' → logprob: -4.850335121154785
    8. 'init' → logprob: -5.725335121154785
    9. ' init' → logprob: -6.725335121154785
    10. 'classmethod' → logprob: -7.225335121154785

Token 303: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -8.792751032160595e-05
    2. 'iter' → logprob: -9.62508773803711
    3. 'class' → logprob: -11.25008773803711
    4. 'def' → logprob: -12.50008773803711
    5. 'it' → logprob: -13.50008773803711
    6. ' init' → logprob: -13.75008773803711
    7. '_init' → logprob: -14.37508773803711
    8. 'new' → logprob: -14.50008773803711
    9. 'nit' → logprob: -15.00008773803711
    10. '```' → logprob: -15.37508773803711

Token 304: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002048789756372571
    2. ' (' → logprob: -6.752048969268799
    3. '__(' → logprob: -7.377048969268799
    4. '(' → logprob: -9.25204849243164
    5. 'self' → logprob: -9.25204849243164
    6. '   ' → logprob: -10.00204849243164
    7. ' self' → logprob: -11.87704849243164
    8. '_(' → logprob: -12.62704849243164
    9. ')(' → logprob: -14.00204849243164
    10. ' ' → logprob: -14.12704849243164

Token 305: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.810037742368877e-05
    2. ' self' → logprob: -10.250038146972656
    3. '   ' → logprob: -13.500038146972656
    4. ')' → logprob: -14.375038146972656
    5. '
' → logprob: -15.000038146972656
    6. '       ' → logprob: -15.500038146972656
    7. '):
' → logprob: -15.625038146972656
    8. '(self' → logprob: -18.250038146972656
    9. '	self' → logprob: -18.375038146972656
    10. 'file' → logprob: -18.750038146972656

Token 306: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30649125576019287
    2. '):' → logprob: -1.5564912557601929
    3. 'self' → logprob: -3.1814913749694824
    4. '):
' → logprob: -4.556491374969482
    5. '(self' → logprob: -7.556491374969482
    6. ')' → logprob: -8.931490898132324
    7. '   ' → logprob: -8.931490898132324
    8. ' self' → logprob: -9.181490898132324
    9. ',self' → logprob: -9.306490898132324
    10. ' ):' → logprob: -10.431490898132324

Token 307: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.371605948312208e-05
    2. ' self' → logprob: -9.875053405761719
    3. '       ' → logprob: -13.250053405761719
    4. '(self' → logprob: -15.000053405761719
    5. '   ' → logprob: -16.87505340576172
    6. '	self' → logprob: -18.25005340576172
    7. '
' → logprob: -19.25005340576172
    8. 'input' → logprob: -19.25005340576172
    9. '```' → logprob: -19.62505340576172
    10. 'file' → logprob: -19.75005340576172

Token 308: ' self' (ID: 1051)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.018866119906306267
    2. '   ' → logprob: -4.768866062164307
    3. ' pass' → logprob: -5.143866062164307
    4. 'self' (adapté à ' self') → logprob: -5.893866062164307
    5. '       ' → logprob: -6.518866062164307
    6. 'def' → logprob: -9.018866539001465
    7. '
' → logprob: -12.268866539001465
    8. '	pass' → logprob: -12.393866539001465
    9. ' self' → logprob: -14.018866539001465
    10. '        
' → logprob: -14.893866539001465

Token 309: '._' (ID: 2697)
  Prédit: '.initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.5700517296791077
    2. '.sequence' → logprob: -1.445051670074463
    3. '.data' → logprob: -2.945051670074463
    4. '.input' → logprob: -3.070051670074463
    5. '.' → logprob: -3.195051670074463
    6. '.buffer' → logprob: -3.695051670074463
    7. '.lines' → logprob: -5.195051670074463
    8. '.prompt' → logprob: -5.445051670074463
    9. '.value' → logprob: -5.695051670074463
    10. '.inputs' → logprob: -5.820051670074463

Token 310: 'input' (ID: 2586)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6300055384635925
    2. 'buffer' → logprob: -1.8800055980682373
    3. 'data' → logprob: -2.0050055980682373
    4. 'input' → logprob: -2.0050055980682373
    5. 'inputs' → logprob: -4.505005359649658
    6. 'line' → logprob: -5.005005359649658
    7. 'values' → logprob: -5.380005359649658
    8. 'file' → logprob: -5.380005359649658
    9. 'source' → logprob: -5.380005359649658
    10. 'cache' → logprob: -5.505005359649658

Token 311: '_lines' (ID: 42980)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.49164173007011414
    2. '_lines' → logprob: -1.6166417598724365
    3. '_values' → logprob: -3.1166417598724365
    4. '_' → logprob: -3.2416417598724365
    5. ' =' → logprob: -3.4916417598724365
    6. '=' → logprob: -3.8666417598724365
    7. '_string' → logprob: -4.366641521453857
    8. '_buffer' → logprob: -4.366641521453857
    9. '_line' → logprob: -4.866641521453857
    10. '_value' → logprob: -5.241641521453857

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313269704580307
    2. ' =' → logprob: -1.3132697343826294
    3. ' ' → logprob: -12.43826961517334
    4. '=[]' → logprob: -13.06326961517334
    5. '   ' → logprob: -14.18826961517334
    6. 'import' → logprob: -15.18826961517334
    7. ':' → logprob: -15.31326961517334
    8. '_' → logprob: -15.81326961517334
    9. '=

' → logprob: -16.313270568847656
    10. ')' → logprob: -16.688270568847656

Token 313: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.044314466416835785
    2. 'iter' → logprob: -3.169314384460449
    3. ' []' → logprob: -7.544314384460449
    4. ' iter' → logprob: -7.794314384460449
    5. '[' → logprob: -8.41931438446045
    6. 'self' → logprob: -9.54431438446045
    7. '[]}' → logprob: -11.04431438446045
    8. 'iterator' → logprob: -11.41931438446045
    9. '[]
' → logprob: -11.41931438446045
    10. '0' → logprob: -11.54431438446045

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13024850189685822
    2. '<|end|>' → logprob: -2.130248546600342
    3. '
' → logprob: -6.380248546600342
    4. '    
' → logprob: -7.255248546600342
    5. '<|end|>' → logprob: -7.630248546600342
    6. ' ' → logprob: -8.505248069763184
    7. ' def' → logprob: -9.630248069763184
    8. '  ' → logprob: -9.755248069763184
    9. ' 
' → logprob: -10.755248069763184
    10. '    ' → logprob: -10.880248069763184

Token 315: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.48021233081817627
    2. 'def' (adapté à ' def') → logprob: -0.9802123308181763
    3. '   ' → logprob: -5.105212211608887
    4. '	def' → logprob: -9.980212211608887
    5. ' ' → logprob: -12.480212211608887
    6. '  ' → logprob: -14.480212211608887
    7. '<|end|>' → logprob: -15.230212211608887
    8. '
' → logprob: -15.730212211608887
    9. '    ' → logprob: -16.480213165283203
    10. '       ' → logprob: -16.605213165283203

Token 316: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.004051209893077612
    2. ' read' → logprob: -5.754051208496094
    3. '_read' → logprob: -7.129051208496094
    4. 'add' → logprob: -9.879051208496094
    5. '_' → logprob: -11.379051208496094
    6. ' readline' → logprob: -12.629051208496094
    7. '_add' → logprob: -13.754051208496094
    8. '_input' → logprob: -13.879051208496094
    9. 'load' → logprob: -14.004051208496094
    10. 'append' → logprob: -14.254051208496094

Token 317: '_all' (ID: 13305)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.4402468800544739
    2. '_input' → logprob: -1.190246820449829
    3. '_lines' → logprob: -3.565246820449829
    4. '(self' → logprob: -4.315247058868408
    5. 'line' → logprob: -5.690247058868408
    6. '_' → logprob: -5.940247058868408
    7. 'self' → logprob: -6.065247058868408
    8. '_inputs' → logprob: -7.565247058868408
    9. '_self' → logprob: -7.565247058868408
    10. 'lines' → logprob: -8.19024658203125

Token 318: '_inputs' (ID: 67304)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003017385315615684
    2. '(' → logprob: -8.750301361083984
    3. '_lines' → logprob: -9.500301361083984
    4. '_input' → logprob: -10.750301361083984
    5. 'self' → logprob: -10.875301361083984
    6. '()' → logprob: -10.875301361083984
    7. '_inputs' → logprob: -12.250301361083984
    8. 'lines' → logprob: -13.500301361083984
    9. '(
' → logprob: -13.625301361083984
    10. 'input' → logprob: -14.500301361083984

Token 319: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.250015258789062
    3. 'self' → logprob: -13.500015258789062
    4. ' (' → logprob: -14.125015258789062
    5. '()' → logprob: -16.500015258789062
    6. '   ' → logprob: -16.625015258789062
    7. '(
' → logprob: -17.875015258789062
    8. ' self' → logprob: -18.875015258789062
    9. '       ' → logprob: -18.875015258789062
    10. '():
' → logprob: -19.125015258789062

Token 320: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19009801745414734
    2. ')' → logprob: -2.0650980472564697
    3. '):
' → logprob: -3.1900980472564697
    4. 'self' → logprob: -5.315097808837891
    5. '(self' → logprob: -8.94009780883789
    6. ',' → logprob: -10.06509780883789
    7. '):

' → logprob: -10.69009780883789
    8. ' ):' → logprob: -11.44009780883789
    9. ')->' → logprob: -12.31509780883789
    10. '):
' → logprob: -12.31509780883789

Token 321: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -11.875012397766113
    3. 'self' → logprob: -12.375012397766113
    4. ' (' → logprob: -14.125012397766113
    5. '   ' → logprob: -16.750011444091797
    6. '       ' → logprob: -17.500011444091797
    7. '():' → logprob: -17.625011444091797
    8. '():
' → logprob: -18.000011444091797
    9. '()' → logprob: -19.000011444091797
    10. '(sel' → logprob: -19.000011444091797

Token 322: ' Iterator' (ID: 41994)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.7299010753631592
    2. 'self' → logprob: -0.8549010753631592
    3. ' self' → logprob: -3.229901075363159
    4. 'None' → logprob: -4.229901313781738
    5. 'list' → logprob: -4.479901313781738
    6. '[List' → logprob: -4.854901313781738
    7. ' List' → logprob: -5.229901313781738
    8. '[' → logprob: -5.354901313781738
    9. '[]' → logprob: -5.979901313781738
    10. ' list' → logprob: -6.229901313781738

Token 323: '[' (ID: 58)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.04226399213075638
    2. '():
' → logprob: -3.917263984680176
    3. '():' → logprob: -3.917263984680176
    4. '(str' → logprob: -6.667263984680176
    5. '()' → logprob: -9.167263984680176
    6. ':
' → logprob: -9.417263984680176
    7. '[int' → logprob: -10.167263984680176
    8. ':' → logprob: -10.417263984680176
    9. '()[' → logprob: -10.667263984680176
    10. '   ' → logprob: -11.167263984680176

Token 324: 'float' (ID: 7829)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -3.531315314830863e-06
    2. 'float' → logprob: -12.750003814697266
    3. ' str' → logprob: -14.625003814697266
    4. '[str' → logprob: -15.625003814697266
    5. 'int' → logprob: -18.625003814697266
    6. ')' → logprob: -18.875003814697266
    7. ']' → logprob: -19.250003814697266
    8. 'string' → logprob: -20.000003814697266
    9. '(str' → logprob: -20.125003814697266
    10. '	str' → logprob: -20.250003814697266

Token 325: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38864046335220337
    2. '):
' → logprob: -1.2636404037475586
    3. '():' → logprob: -4.263640403747559
    4. ']:' → logprob: -4.388640403747559
    5. '():
' → logprob: -4.888640403747559
    6. '   ' → logprob: -6.138640403747559
    7. ']:
' → logprob: -6.388640403747559
    8. '):
' → logprob: -7.138640403747559
    9. ':' → logprob: -8.638640403747559
    10. ')' → logprob: -9.013640403747559

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020003693643957376
    2. ' while' → logprob: -6.752000331878662
    3. ' for' → logprob: -7.752000331878662
    4. 'while' → logprob: -8.12700080871582
    5. '   ' → logprob: -9.75200080871582
    6. 'for' → logprob: -10.37700080871582
    7. 'try' → logprob: -12.87700080871582
    8. '      ' → logprob: -13.37700080871582
    9. '           ' → logprob: -13.37700080871582
    10. '    ' → logprob: -13.50200080871582

Token 327: ' import' (ID: 1588)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10883721709251404
    2. ' while' → logprob: -2.983837127685547
    3. '       ' → logprob: -3.483837127685547
    4. 'import' (adapté à ' import') → logprob: -4.233837127685547
    5. 'for' → logprob: -5.358837127685547
    6. 'try' → logprob: -6.108837127685547
    7. ' for' → logprob: -8.358837127685547
    8. '   ' → logprob: -9.358837127685547
    9. ' import' → logprob: -9.983837127685547
    10. ' try' → logprob: -10.858837127685547

Token 328: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759493708610535
    2. ' sys' → logprob: -0.8259493708610535
    3. 'built' → logprob: -11.950949668884277
    4. '=sys' → logprob: -13.200949668884277
    5. '	sys' → logprob: -13.825949668884277
    6. ' built' → logprob: -14.825949668884277
    7. '_sys' → logprob: -16.32594871520996
    8. 'math' → logprob: -16.70094871520996
    9. '(sys' → logprob: -16.82594871520996
    10. 's' → logprob: -17.57594871520996

Token 329: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000249061529757455
    2. ' for' → logprob: -8.625248908996582
    3. '
' → logprob: -10.250248908996582
    4. 'for' → logprob: -11.125248908996582
    5. '        
' → logprob: -11.500248908996582
    6. ',' → logprob: -13.125248908996582
    7. '   ' → logprob: -13.250248908996582
    8. '           ' → logprob: -13.375248908996582
    9. ' while' → logprob: -13.750248908996582
    10. '      ' → logprob: -14.750248908996582

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003921847674064338
    2. ' for' → logprob: -8.125391960144043
    3. '        
' → logprob: -10.500391960144043
    4. '   ' → logprob: -10.625391960144043
    5. 'for' → logprob: -11.125391960144043
    6. ' while' → logprob: -11.500391960144043
    7. '
' → logprob: -11.750391960144043
    8. '      ' → logprob: -13.000391960144043
    9. '           ' → logprob: -13.375391960144043
    10. ',' → logprob: -13.375391960144043

Token 331: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04541967809200287
    2. '       ' → logprob: -3.545419692993164
    3. ' for' → logprob: -4.170419692993164
    4. 'while' → logprob: -9.295419692993164
    5. '   ' → logprob: -12.920419692993164
    6. ' while' → logprob: -13.045419692993164
    7. ' ' → logprob: -13.795419692993164
    8. '
' → logprob: -13.795419692993164
    9. '	for' → logprob: -14.295419692993164
    10. 'line' → logprob: -14.295419692993164

Token 332: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.004092647228389978
    2. 'line' → logprob: -5.504092693328857
    3. '	line' → logprob: -11.2540922164917
    4. '_line' → logprob: -14.5040922164917
    5. '(line' → logprob: -15.3790922164917
    6. '#line' → logprob: -15.5040922164917
    7. '=line' → logprob: -16.629093170166016
    8. ' ' → logprob: -16.754093170166016
    9. ' lin' → logprob: -16.754093170166016
    10. '

' → logprob: -17.504093170166016

Token 333: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006545356009155512
    2. 'in' → logprob: -7.375654697418213
    3. ' ' → logprob: -10.625654220581055
    4. 'import' → logprob: -13.750654220581055
    5. '	in' → logprob: -14.625654220581055
    6. 's' → logprob: -14.875654220581055
    7. ' ' → logprob: -15.000654220581055
    8. '_' → logprob: -15.000654220581055
    9. 'line' → logprob: -15.375654220581055
    10. '_in' → logprob: -15.750654220581055

Token 334: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07889529317617416
    2. ' sys' → logprob: -2.578895330429077
    3. '=sys' → logprob: -12.703895568847656
    4. '	sys' → logprob: -13.203895568847656
    5. 'import' → logprob: -14.828895568847656
    6. '(sys' → logprob: -15.578895568847656
    7. 'iter' → logprob: -17.203895568847656
    8. '_sys' → logprob: -17.578895568847656
    9. 'stdin' → logprob: -17.703895568847656
    10. 's' → logprob: -17.703895568847656

Token 335: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.147740689106286e-05
    2. 'stdin' → logprob: -9.75007152557373
    3. '.' → logprob: -11.62507152557373
    4. '.stdout' → logprob: -12.75007152557373
    5. ' stdin' → logprob: -14.00007152557373
    6. '(stdin' → logprob: -15.50007152557373
    7. '.argv' → logprob: -16.250070571899414
    8. '.stderr' → logprob: -16.250070571899414
    9. '.std' → logprob: -16.750070571899414
    10. '.readline' → logprob: -16.875070571899414

Token 336: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08401560038328171
    2. ':' → logprob: -3.4590156078338623
    3. '.readline' → logprob: -3.4590156078338623
    4. 'in' → logprob: -4.334015369415283
    5. ':
' → logprob: -5.709015369415283
    6. '.readlines' → logprob: -7.709015369415283
    7. ' readline' → logprob: -7.834015369415283
    8. '.' → logprob: -8.709015846252441
    9. '.strip' → logprob: -9.834015846252441
    10. '.rstrip' → logprob: -10.209015846252441

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.3954463510308415e-05
    2. ' yield' → logprob: -10.375054359436035
    3. 'yield' → logprob: -11.875054359436035
    4. '            
' → logprob: -11.875054359436035
    5. '
' → logprob: -12.875054359436035
    6. ' stripped' → logprob: -13.625054359436035
    7. '.strip' → logprob: -14.000054359436035
    8. '            ' → logprob: -14.250054359436035
    9. ' if' → logprob: -14.375054359436035
    10. '          ' → logprob: -14.500054359436035

Token 338: ' line' (ID: 2543)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.7862149477005005
    2. '           ' → logprob: -1.2862149477005005
    3. ' yield' → logprob: -2.036214828491211
    4. ' line' → logprob: -2.286214828491211
    5. 'line' (adapté à ' line') → logprob: -4.036214828491211
    6. ' stripped' → logprob: -4.661214828491211
    7. 'value' → logprob: -6.036214828491211
    8. ' if' → logprob: -6.161214828491211
    9. '               ' → logprob: -6.286214828491211
    10. ' value' → logprob: -7.036214828491211

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5198801159858704
    2. ' =' → logprob: -1.5198800563812256
    3. '.strip' → logprob: -1.8948800563812256
    4. '.' → logprob: -4.144880294799805
    5. '_strip' → logprob: -4.144880294799805
    6. 'strip' → logprob: -6.019880294799805
    7. '_str' → logprob: -7.269880294799805
    8. '=line' → logprob: -7.394880294799805
    9. '.rstrip' → logprob: -7.519880294799805
    10. '=str' → logprob: -8.269880294799805

Token 340: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03804149478673935
    2. ' line' → logprob: -3.288041591644287
    3. '=line' → logprob: -16.413042068481445
    4. '(line' → logprob: -18.788042068481445
    5. '	line' → logprob: -18.913042068481445
    6. '#line' → logprob: -20.663042068481445
    7. 'lin' → logprob: -21.538042068481445
    8. '[line' → logprob: -21.663042068481445
    9. 'Line' → logprob: -22.288042068481445
    10. ',line' → logprob: -22.413042068481445

Token 341: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0021810729522258043
    2. '.' → logprob: -6.252181053161621
    3. '.rstrip' → logprob: -8.377181053161621
    4. 'strip' → logprob: -10.877181053161621
    5. ' .' → logprob: -13.127181053161621
    6. '.trim' → logprob: -13.752181053161621
    7. ' strip' → logprob: -15.377181053161621
    8. '.readline' → logprob: -15.627181053161621
    9. '.chomp' → logprob: -17.127182006835938
    10. 'rstrip' → logprob: -17.752182006835938

Token 342: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6915146112442017
    2. '()
' → logprob: -1.4415146112442017
    3. '()' → logprob: -1.4415146112442017
    4. '<|end|>' → logprob: -4.941514492034912
    5. '       ' → logprob: -5.941514492034912
    6. '<|end|>' → logprob: -5.941514492034912
    7. '
' → logprob: -6.191514492034912
    8. '            ' → logprob: -6.441514492034912
    9. '            
' → logprob: -6.441514492034912
    10. '               ' → logprob: -7.066514492034912

Token 343: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.8351892473874614e-05
    2. ' if' → logprob: -10.875048637390137
    3. '       ' → logprob: -11.500048637390137
    4. '<|end|>' → logprob: -11.875048637390137
    5. 'if' → logprob: -12.000048637390137
    6. '            
' → logprob: -12.750048637390137
    7. '   ' → logprob: -14.125048637390137
    8. '               ' → logprob: -14.375048637390137
    9. '          ' → logprob: -15.000048637390137
    10. '<|end|>' → logprob: -15.125048637390137

Token 344: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0007618647650815547
    2. '           ' → logprob: -7.250761985778809
    3. ' if' → logprob: -9.875761985778809
    4. 'try' → logprob: -15.000761985778809
    5. '       ' → logprob: -16.500761032104492
    6. '   ' → logprob: -16.875761032104492
    7. 'yield' → logprob: -17.500761032104492
    8. '               ' → logprob: -17.625761032104492
    9. 'If' → logprob: -18.250761032104492
    10. '	if' → logprob: -18.625761032104492

Token 345: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.18052823841571808
    2. 'not' → logprob: -1.9305282831192017
    3. ' line' → logprob: -4.430528163909912
    4. 'line' → logprob: -4.805528163909912
    5. ' ' → logprob: -13.05552864074707
    6. '	not' → logprob: -13.93052864074707
    7. '	line' → logprob: -14.43052864074707
    8. '   ' → logprob: -14.68052864074707
    9. ' ' → logprob: -14.93052864074707
    10. 'no' → logprob: -15.11802864074707

Token 346: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4295855760574341
    2. ' ==' → logprob: -1.054585576057434
    3. ':' → logprob: -7.6795854568481445
    4. '=' → logprob: -8.429585456848145
    5. '===' → logprob: -9.679585456848145
    6. '()==' → logprob: -9.804585456848145
    7. '<|end|>' → logprob: -10.679585456848145
    8. ']==' → logprob: -11.429585456848145
    9. ')==' → logprob: -11.679585456848145
    10. ' =' → logprob: -11.804585456848145

Token 347: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00027492138906382024
    2. ' yield' → logprob: -8.500274658203125
    3. 'yield' → logprob: -10.125274658203125
    4. '           ' → logprob: -11.250274658203125
    5. '	yield' → logprob: -12.125274658203125
    6. '   ' → logprob: -12.375274658203125
    7. ':
' → logprob: -13.875274658203125
    8. ' try' → logprob: -14.000274658203125
    9. ' and' → logprob: -14.000274658203125
    10. '```' → logprob: -14.000274658203125

Token 348: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.020978815853595734
    2. ' yield' → logprob: -4.270978927612305
    3. 'try' → logprob: -5.020978927612305
    4. '                   ' → logprob: -8.895978927612305
    5. '	yield' → logprob: -10.020978927612305
    6. '           ' → logprob: -12.145978927612305
    7. ' try' → logprob: -12.395978927612305
    8. '               ' → logprob: -12.770978927612305
    9. '   ' → logprob: -15.520978927612305
    10. '```' → logprob: -16.145978927612305

Token 349: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.002475777640938759
    2. ' float' → logprob: -6.002475738525391
    3. '(float' → logprob: -17.37747573852539
    4. 'flo' → logprob: -18.62747573852539
    5. '	float' → logprob: -18.87747573852539
    6. '   ' → logprob: -20.12747573852539
    7. '=float' → logprob: -20.12747573852539
    8. '               ' → logprob: -21.50247573852539
    9. ',float' → logprob: -21.50247573852539
    10. '<float' → logprob: -21.62747573852539

Token 350: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.250035285949707
    3. '(
' → logprob: -17.500036239624023
    4. 'line' → logprob: -18.000036239624023
    5. '[line' → logprob: -18.875036239624023
    6. ' line' → logprob: -19.500036239624023
    7. '(Line' → logprob: -19.500036239624023
    8. '=line' → logprob: -20.000036239624023
    9. '#line' → logprob: -20.375036239624023
    10. '(lines' → logprob: -20.375036239624023

Token 351: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. ')
' → logprob: -11.125019073486328
    3. ' )' → logprob: -12.625019073486328
    4. '())' → logprob: -15.625019073486328
    5. '))' → logprob: -16.250019073486328
    6. ')

' → logprob: -16.500019073486328
    7. '()' → logprob: -16.750019073486328
    8. '       ' → logprob: -17.125019073486328
    9. '<|end|>' → logprob: -17.500019073486328
    10. '   ' → logprob: -17.625019073486328

Token 352: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 353: ' Output' (ID: 18315)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.5692999958992004
    2. 'Main' → logprob: -1.1942999362945557
    3. 'Term' → logprob: -2.5692999362945557
    4. 'main' → logprob: -3.5692999362945557
    5. ' Sequence' → logprob: -4.944300174713135
    6. 'Output' → logprob: -5.319300174713135
    7. 'Application' → logprob: -5.569300174713135
    8. ' Main' → logprob: -6.319300174713135
    9. 'Runner' → logprob: -6.319300174713135
    10. 'Strategy' → logprob: -6.444300174713135

Token 354: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.0033996712882071733
    2. 'Handler' → logprob: -6.128399848937988
    3. 'Printer' → logprob: -6.753399848937988
    4. 'ter' → logprob: -10.753399848937988
    5. 'Manager' → logprob: -11.753399848937988
    6. 'Formatter' → logprob: -12.003399848937988
    7. 'Builder' → logprob: -12.878399848937988
    8. 'Generator' → logprob: -13.128399848937988
    9. 'Renderer' → logprob: -13.253399848937988
    10. 'Processor' → logprob: -13.503399848937988

Token 355: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020566415041685104
    2. ':
' → logprob: -3.895566463470459
    3. ' :' → logprob: -11.7705659866333
    4. '():' → logprob: -12.6455659866333
    5. ':def' → logprob: -12.6455659866333
    6. '):' → logprob: -12.8955659866333
    7. ':

' → logprob: -13.3955659866333
    8. ' :
' → logprob: -13.3955659866333
    9. '():
' → logprob: -13.7705659866333
    10. '):
' → logprob: -14.1455659866333

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0052514225244522095
    2. ' def' → logprob: -5.255251407623291
    3. 'def' → logprob: -11.25525188446045
    4. ' class' → logprob: -12.63025188446045
    5. 'class' → logprob: -13.88025188446045
    6. '	def' → logprob: -15.38025188446045
    7. '```' → logprob: -16.380250930786133
    8. '   ' → logprob: -16.630250930786133
    9. ',' → logprob: -17.630250930786133
    10. ')' → logprob: -18.192750930786133

Token 357: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0438261516392231
    2. 'class' → logprob: -3.543826103210449
    3. ' def' → logprob: -4.293826103210449
    4. '   ' → logprob: -8.04382610321045
    5. ' class' → logprob: -13.04382610321045
    6. '@' → logprob: -13.66882610321045
    7. '	def' → logprob: -16.543827056884766
    8. '```' → logprob: -17.293827056884766
    9. ' ' → logprob: -18.543827056884766
    10. ' @' → logprob: -18.793827056884766

Token 358: ' write' (ID: 5067)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6634560823440552
    2. 'init' → logprob: -1.0384560823440552
    3. ' def' → logprob: -2.5384559631347656
    4. 'class' → logprob: -3.0384559631347656
    5. 'write' → logprob: -6.413455963134766
    6. 'staticmethod' → logprob: -6.788455963134766
    7. ' __' → logprob: -7.913455963134766
    8. 'classmethod' → logprob: -8.038455963134766
    9. ' init' → logprob: -8.288455963134766
    10. '__' → logprob: -8.913455963134766

Token 359: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11072060465812683
    2. '(' → logprob: -2.360720634460449
    3. '_terms' → logprob: -5.860720634460449
    4. '_results' → logprob: -6.485720634460449
    5. '_line' → logprob: -6.610720634460449
    6. '(s' → logprob: -6.860720634460449
    7. '_lines' → logprob: -7.110720634460449
    8. '_sequence' → logprob: -7.360720634460449
    9. 's' → logprob: -7.860720634460449
    10. '(
' → logprob: -7.985720634460449

Token 360: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8022472262382507
    2. 's' → logprob: -1.8022472858428955
    3. '_terms' → logprob: -1.8022472858428955
    4. ')' → logprob: -2.3022472858428955
    5. '_lines' → logprob: -3.0522472858428955
    6. '_line' → logprob: -3.8022472858428955
    7. '_results' → logprob: -4.427247047424316
    8. ')(' → logprob: -4.427247047424316
    9. '_sequence' → logprob: -5.177247047424316
    10. '(' → logprob: -5.427247047424316

Token 361: ' value' (ID: 1432)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.2674205303192139
    2. 'sequence' → logprob: -1.6424205303192139
    3. 'result' → logprob: -1.7674205303192139
    4. ' output' → logprob: -2.392420530319214
    5. ' result' → logprob: -2.392420530319214
    6. 'terms' → logprob: -3.142420530319214
    7. ' sequence' → logprob: -3.392420530319214
    8. 'results' → logprob: -3.517420530319214
    9. ' terms' → logprob: -4.267420768737793
    10. ' results' → logprob: -4.392420768737793

Token 362: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002788551209960133
    2. ' :' → logprob: -9.00027847290039
    3. '):' → logprob: -9.12527847290039
    4. ')' → logprob: -10.37527847290039
    5. ':value' → logprob: -12.00027847290039
    6. ' ):' → logprob: -12.62527847290039
    7. 'value' → logprob: -13.50027847290039
    8. '):
' → logprob: -13.62527847290039
    9. ' )' → logprob: -14.00027847290039
    10. '   ' → logprob: -14.37527847290039

Token 363: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.47598400712013245
    2. ' float' → logprob: -0.9759839773178101
    3. ')' → logprob: -7.2259840965271
    4. ' ' → logprob: -7.3509840965271
    5. ' str' → logprob: -7.9759840965271
    6. ' f' → logprob: -9.850983619689941
    7. 'f' → logprob: -10.100983619689941
    8. ' )' → logprob: -10.350983619689941
    9. 'str' → logprob: -10.850983619689941
    10. '   ' → logprob: -11.225983619689941

Token 364: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05016511678695679
    2. '):' → logprob: -3.3001651763916016
    3. '):
' → logprob: -4.425165176391602
    4. ' )' → logprob: -10.425165176391602
    5. '):
' → logprob: -10.925165176391602
    6. ')->' → logprob: -11.300165176391602
    7. '   ' → logprob: -11.425165176391602
    8. ' ):' → logprob: -12.300165176391602
    9. ' ):
' → logprob: -13.800165176391602
    10. ')value' → logprob: -14.925165176391602

Token 365: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43225595355033875
    2. ':
' → logprob: -1.0572559833526611
    3. '   ' → logprob: -6.932255744934082
    4. '       ' → logprob: -6.932255744934082
    5. '(self' → logprob: -7.557255744934082
    6. '):
' → logprob: -7.682255744934082
    7. '():
' → logprob: -8.307255744934082
    8. 'self' → logprob: -9.057255744934082
    9. 'print' → logprob: -9.682255744934082
    10. '):' → logprob: -10.432255744934082

Token 366: ' None' (ID: 4662)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16717380285263062
    2. ' print' → logprob: -2.9171738624572754
    3. ' None' → logprob: -3.1671738624572754
    4. 'None' → logprob: -3.1671738624572754
    5. '   ' → logprob: -4.167173862457275
    6. 'float' → logprob: -9.542173385620117
    7. ' str' → logprob: -11.167173385620117
    8. '
' → logprob: -11.292173385620117
    9. '       ' → logprob: -12.292173385620117
    10. ' float' → logprob: -12.292173385620117

Token 367: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3880467414855957
    2. ':
' → logprob: -1.1380467414855957
    3. '       ' → logprob: -7.263046741485596
    4. '   ' → logprob: -8.513046264648438
    5. '):
' → logprob: -8.888046264648438
    6. '():
' → logprob: -10.138046264648438
    7. '<|end|>' → logprob: -10.388046264648438
    8. ' :
' → logprob: -11.138046264648438
    9. '):' → logprob: -11.513046264648438
    10. ':

' → logprob: -11.888046264648438

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004486653197091073
    2. 'print' → logprob: -8.000448226928711
    3. ' print' → logprob: -9.125448226928711
    4. '   ' → logprob: -12.500448226928711
    5. '```' → logprob: -15.125448226928711
    6. ',' → logprob: -15.750448226928711
    7. '           ' → logprob: -16.00044822692871
    8. '      ' → logprob: -16.75044822692871
    9. 'import' → logprob: -17.50044822692871
    10. '	print' → logprob: -17.75044822692871

Token 369: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4742431640625
    2. ' print' → logprob: -0.9742431640625
    3. '       ' → logprob: -8.7242431640625
    4. '   ' → logprob: -13.0992431640625
    5. '```' → logprob: -13.9742431640625
    6. 'import' → logprob: -14.4742431640625
    7. '	print' → logprob: -17.0992431640625
    8. '
' → logprob: -18.2242431640625
    9. ' import' → logprob: -18.8492431640625
    10. '           ' → logprob: -18.8492431640625

Token 370: '(f' (ID: 1526)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -4.274932143744081e-05
    2. 'value' → logprob: -10.625042915344238
    3. '(f' → logprob: -11.500042915344238
    4. '(' → logprob: -11.750042915344238
    5. '(round' → logprob: -15.000042915344238
    6. '()' → logprob: -17.625041961669922
    7. '(
' → logprob: -18.250041961669922
    8. ' value' → logprob: -19.000041961669922
    9. ' (' → logprob: -19.125041961669922
    10. 'f' → logprob: -19.250041961669922

Token 371: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00017433916218578815
    2. '"{' → logprob: -9.000174522399902
    3. 'Result' → logprob: -10.000174522399902
    4. 'Value' → logprob: -13.125174522399902
    5. 'Sum' → logprob: -13.250174522399902
    6. '{"' → logprob: -14.000174522399902
    7. 'The' → logprob: -15.250174522399902
    8. ''{' → logprob: -15.250174522399902
    9. 'result' → logprob: -15.375174522399902
    10. '{}' → logprob: -16.750173568725586

Token 372: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -4.320199877838604e-07
    2. ' value' → logprob: -15.625
    3. '{' → logprob: -16.125
    4. ''value' → logprob: -17.125
    5. 'result' → logprob: -17.375
    6. 'val' → logprob: -18.125
    7. '"value' → logprob: -18.75
    8. 'v' → logprob: -18.875
    9. '(value' → logprob: -19.375
    10. 'alue' → logprob: -19.75

Token 373: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.07891127467155457
    2. '}")' → logprob: -2.578911304473877
    3. '}' → logprob: -11.328910827636719
    4. ':' → logprob: -11.828910827636719
    5. '")' → logprob: -14.078910827636719
    6. ':f' → logprob: -14.578910827636719
    7. '}")
' → logprob: -15.578910827636719
    8. ' :.' → logprob: -15.578910827636719
    9. '}"' → logprob: -15.703910827636719
    10. ' }' → logprob: -16.57891082763672

Token 374: '8' (ID: 23)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4935518801212311
    2. '6' → logprob: -0.9935518503189087
    3. '4' → logprob: -4.243551731109619
    4. '3' → logprob: -5.618551731109619
    5. '5' → logprob: -6.993551731109619
    6. '10' → logprob: -8.743552207946777
    7. '8' → logprob: -9.243552207946777
    8. '1' → logprob: -10.118552207946777
    9. '12' → logprob: -10.493552207946777
    10. '7' → logprob: -10.743552207946777

Token 375: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. 'g' → logprob: -15.875
    3. 'lf' → logprob: -17.875
    4. 'e' → logprob: -18.5
    5. '6' → logprob: -18.75
    6. ' f' → logprob: -19.375
    7. '```' → logprob: -19.375
    8. '}' → logprob: -19.625
    9. '
' → logprob: -19.75
    10. '{' → logprob: -20.75

Token 376: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -8.792751032160595e-05
    2. '")' → logprob: -9.75008773803711
    3. '}")
' → logprob: -10.50008773803711
    4. '}' → logprob: -14.12508773803711
    5. ')")' → logprob: -14.25008773803711
    6. '}")

' → logprob: -15.00008773803711
    7. ' }' → logprob: -15.75008773803711
    8. '}")
' → logprob: -16.62508773803711
    9. '}"' → logprob: -16.87508773803711
    10. '})' → logprob: -17.75008773803711

Token 377: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47827866673469543
    2. 'if' → logprob: -0.978278636932373
    3. 'class' → logprob: -5.478278636932373
    4. '```' → logprob: -11.728279113769531
    5. '#' → logprob: -12.478279113769531
    6. 'from' → logprob: -12.978279113769531
    7. ' if' → logprob: -13.478279113769531
    8. 'import' → logprob: -14.478279113769531
    9. '
' → logprob: -16.35327911376953
    10. '<|end|>' → logprob: -16.60327911376953

Token 378: ' Sequence' (ID: 57144)
  Prédit: 'Main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Main' → logprob: -0.5218257308006287
    2. 'Sequence' → logprob: -1.1468257904052734
    3. 'Application' → logprob: -2.8968257904052734
    4. 'Runner' → logprob: -5.146825790405273
    5. 'Term' → logprob: -5.271825790405273
    6. 'Solution' → logprob: -5.271825790405273
    7. 'main' → logprob: -5.271825790405273
    8. 'App' → logprob: -5.396825790405273
    9. 'Program' → logprob: -6.021825790405273
    10. 'Controller' → logprob: -6.646825790405273

Token 379: 'Processor' (ID: 22334)
  Prédit: 'Summ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Summ' → logprob: -0.13961318135261536
    2. 'Processor' → logprob: -2.389613151550293
    3. 'Sum' → logprob: -4.014613151550293
    4. 'Calculator' → logprob: -4.264613151550293
    5. 'Summer' → logprob: -5.639613151550293
    6. 'Runner' → logprob: -7.389613151550293
    7. 'Aggregator' → logprob: -7.514613151550293
    8. 'Analyzer' → logprob: -7.639613151550293
    9. 'Solver' → logprob: -8.139613151550293
    10. 'Manager' → logprob: -8.514613151550293

Token 380: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014329568482935429
    2. ':
' → logprob: -4.264329433441162
    3. ' :' → logprob: -8.88932991027832
    4. ' :
' → logprob: -11.76432991027832
    5. ':def' → logprob: -12.38932991027832
    6. '(' → logprob: -12.63932991027832
    7. '<|end|>' → logprob: -12.88932991027832
    8. '(object' → logprob: -13.13932991027832
    9. '   ' → logprob: -13.38932991027832
    10. ':

' → logprob: -13.51432991027832

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001207495923154056
    2. ' def' → logprob: -7.00120735168457
    3. 'def' → logprob: -8.12620735168457
    4. '	def' → logprob: -15.75120735168457
    5. '   ' → logprob: -17.12620735168457
    6. '```' → logprob: -17.25120735168457
    7. ',' → logprob: -17.37620735168457
    8. ':' → logprob: -18.25120735168457
    9. '
' → logprob: -18.37620735168457
    10. ')' → logprob: -18.62620735168457

Token 382: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5761817097663879
    2. ' def' → logprob: -0.8261817097663879
    3. '   ' → logprob: -8.326181411743164
    4. ' ' → logprob: -16.201181411743164
    5. '	def' → logprob: -17.326181411743164
    6. 'class' → logprob: -18.701181411743164
    7. '  ' → logprob: -19.451181411743164
    8. ':def' → logprob: -19.451181411743164
    9. ':' → logprob: -19.701181411743164
    10. '    ' → logprob: -19.826181411743164

Token 383: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28178006410598755
    2. 'init' → logprob: -1.5317800045013428
    3. ' def' → logprob: -3.5317800045013428
    4. '__' → logprob: -9.656780242919922
    5. '_init' → logprob: -10.656780242919922
    6. '   ' → logprob: -10.656780242919922
    7. ' __' → logprob: -11.031780242919922
    8. ' ' → logprob: -11.156780242919922
    9. ' init' → logprob: -12.281780242919922
    10. '  ' → logprob: -13.281780242919922

Token 384: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.07632207125425339
    2. '__' → logprob: -3.701322078704834
    3. 'it' → logprob: -3.826322078704834
    4. 'def' → logprob: -4.076322078704834
    5. 'class' → logprob: -5.451322078704834
    6. '```' → logprob: -6.201322078704834
    7. 'f' → logprob: -6.451322078704834
    8. '(init' → logprob: -7.201322078704834
    9. '_init' → logprob: -7.576322078704834
    10. '   ' → logprob: -8.076321601867676

Token 385: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.43030744791030884
    2. '(self' → logprob: -1.055307388305664
    3. ' (' → logprob: -7.555307388305664
    4. '(' → logprob: -7.930307388305664
    5. '__(
' → logprob: -8.180307388305664
    6. '   ' → logprob: -8.680307388305664
    7. '__' → logprob: -9.430307388305664
    8. '_(' → logprob: -9.430307388305664
    9. 'self' → logprob: -9.555307388305664
    10. '<|end|>' → logprob: -11.930307388305664

Token 386: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.1186566047836095e-05
    2. ' self' → logprob: -11.000031471252441
    3. '       ' → logprob: -11.750031471252441
    4. '
' → logprob: -12.625031471252441
    5. '   ' → logprob: -12.875031471252441
    6. '(self' → logprob: -14.875031471252441
    7. 'initial' → logprob: -15.625031471252441
    8. ',' → logprob: -16.250030517578125
    9. ')' → logprob: -16.250030517578125
    10. ',self' → logprob: -17.500030517578125

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02655816078186035
    2. 'self' → logprob: -3.7765581607818604
    3. ' ,' → logprob: -6.151557922363281
    4. ' self' → logprob: -7.526557922363281
    5. ',self' → logprob: -7.901557922363281
    6. '(self' → logprob: -8.526557922363281
    7. '       ' → logprob: -10.526557922363281
    8. '   ' → logprob: -10.901557922363281
    9. ',
' → logprob: -11.276557922363281
    10. ' (' → logprob: -12.526557922363281

Token 388: ' term' (ID: 2914)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.07232000678777695
    2. ' initial' → logprob: -2.822319984436035
    3. 'input' → logprob: -4.697319984436035
    4. 'sequence' → logprob: -7.947319984436035
    5. 'strategy' → logprob: -8.322319984436035
    6. ')' → logprob: -8.697319984436035
    7. ' input' → logprob: -8.697319984436035
    8. '   ' → logprob: -9.697319984436035
    9. '):
' → logprob: -9.947319984436035
    10. ' strategy' → logprob: -10.322319984436035

Token 389: '_count' (ID: 7536)
  Prédit: '_strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -0.14048649370670319
    2. '_factory' → logprob: -2.265486478805542
    3. 'Strategy' → logprob: -4.265486717224121
    4. '_length' → logprob: -4.890486717224121
    5. 's' → logprob: -5.765486717224121
    6. 'Factory' → logprob: -6.890486717224121
    7. '_generator' → logprob: -7.515486717224121
    8. '   ' → logprob: -7.890486717224121
    9. 'strategy' → logprob: -9.140486717224121
    10. '_count' → logprob: -9.265486717224121

Token 390: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009205120149999857
    2. ',' → logprob: -7.250920295715332
    3. '):' → logprob: -8.875920295715332
    4. ':int' → logprob: -10.250920295715332
    5. '   ' → logprob: -11.000920295715332
    6. '):
' → logprob: -11.750920295715332
    7. ' :' → logprob: -11.875920295715332
    8. ')' → logprob: -13.375920295715332
    9. '=' → logprob: -14.375920295715332
    10. '       ' → logprob: -14.625920295715332

Token 391: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05490666255354881
    2. ' int' → logprob: -2.9299066066741943
    3. ':int' → logprob: -11.679906845092773
    4. 'self' → logprob: -12.804906845092773
    5. ',' → logprob: -13.054906845092773
    6. ')' → logprob: -13.429906845092773
    7. '   ' → logprob: -13.554906845092773
    8. 'float' → logprob: -13.554906845092773
    9. '=int' → logprob: -13.804906845092773
    10. ':' → logprob: -13.804906845092773

Token 392: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003710894088726491
    2. '):' → logprob: -8.000370979309082
    3. ' ,' → logprob: -10.750370979309082
    4. '):
' → logprob: -11.625370979309082
    5. '   ' → logprob: -13.000370979309082
    6. ')' → logprob: -13.375370979309082
    7. '       ' → logprob: -13.875370979309082
    8. ',input' → logprob: -15.500370979309082
    9. ',
' → logprob: -16.0003719329834
    10. ' ):' → logprob: -16.5003719329834

Token 393: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2540683150291443
    2. '0' → logprob: -1.629068374633789
    3. '100' → logprob: -4.004068374633789
    4. ' ' → logprob: -5.629068374633789
    5. 'int' → logprob: -6.004068374633789
    6. '5' → logprob: -6.754068374633789
    7. 'None' → logprob: -6.879068374633789
    8. '1' → logprob: -7.004068374633789
    9. '20' → logprob: -8.254068374633789
    10. ' int' → logprob: -8.754068374633789

Token 394: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08014688640832901
    2. '0' → logprob: -2.8301467895507812
    3. '100' → logprob: -4.455146789550781
    4. 'int' → logprob: -5.955146789550781
    5. '20' → logprob: -6.080146789550781
    6. '5' → logprob: -7.330146789550781
    7. '1' → logprob: -7.705146789550781
    8. '50' → logprob: -8.955146789550781
    9. ' ' → logprob: -9.330146789550781
    10. '2' → logprob: -9.830146789550781

Token 395: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016476840246468782
    2. '):' → logprob: -6.501647472381592
    3. ' ,' → logprob: -9.12664794921875
    4. '):
' → logprob: -10.62664794921875
    5. '   ' → logprob: -12.00164794921875
    6. '       ' → logprob: -12.75164794921875
    7. ')' → logprob: -13.12664794921875
    8. ' ):' → logprob: -14.75164794921875
    9. ',input' → logprob: -15.75164794921875
    10. ',
' → logprob: -15.87664794921875

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000428761966759339
    2. ',' → logprob: -8.375429153442383
    3. 'self' → logprob: -9.000429153442383
    4. ' self' → logprob: -10.500429153442383
    5. '   ' → logprob: -10.750429153442383
    6. 'def' → logprob: -10.750429153442383
    7. ' def' → logprob: -13.625429153442383
    8. '):
' → logprob: -14.500429153442383
    9. '      ' → logprob: -14.625429153442383
    10. '<|end|>' → logprob: -15.375429153442383

Token 397: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0663190484046936
    2. '       ' → logprob: -2.816318988800049
    3. ' self' → logprob: -5.441318988800049
    4. '   ' → logprob: -11.941319465637207
    5. 'def' → logprob: -14.191319465637207
    6. '	self' → logprob: -14.566319465637207
    7. 'super' → logprob: -16.44131851196289
    8. '(self' → logprob: -16.81631851196289
    9. '
' → logprob: -16.94131851196289
    10. ' ' → logprob: -16.94131851196289

Token 398: '.term' (ID: 106645)
  Prédit: '.term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.term' → logprob: -0.26677095890045166
    2. '.initial' → logprob: -1.5167709589004517
    3. '.strategy' → logprob: -5.391770839691162
    4. '._' → logprob: -5.391770839691162
    5. 'term' → logprob: -6.141770839691162
    6. '.' → logprob: -6.766770839691162
    7. ' term' → logprob: -6.891770839691162
    8. ' .' → logprob: -7.641770839691162
    9. 'initial' → logprob: -8.14177131652832
    10. '_term' → logprob: -8.76677131652832

Token 399: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.5941604690160602e-05
    2. 's' → logprob: -11.125025749206543
    3. '   ' → logprob: -12.125025749206543
    4. 'count' → logprob: -12.875025749206543
    5. '_counter' → logprob: -13.000025749206543
    6. '_c' → logprob: -15.125025749206543
    7. '_counts' → logprob: -15.250025749206543
    8. '_length' → logprob: -17.12502670288086
    9. ' _' → logprob: -17.12502670288086
    10. '_' → logprob: -17.25002670288086

Token 400: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759662985801697
    2. '=' → logprob: -0.8259662985801697
    3. ' ' → logprob: -11.325965881347656
    4. '   ' → logprob: -12.825965881347656
    5. ':' → logprob: -13.075965881347656
    6. '=None' → logprob: -13.200965881347656
    7. '<|end|>' → logprob: -13.200965881347656
    8. '    ' → logprob: -13.325965881347656
    9. ',' → logprob: -13.450965881347656
    10. '=int' → logprob: -14.450965881347656

Token 401: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.20152804255485535
    2. ' term' → logprob: -1.7015280723571777
    3. '10' → logprob: -9.07652759552002
    4. '(term' → logprob: -15.70152759552002
    5. '   ' → logprob: -16.201528549194336
    6. ' ' → logprob: -16.201528549194336
    7. '    ' → logprob: -17.576528549194336
    8. '_term' → logprob: -18.076528549194336
    9. 'ten' → logprob: -18.201528549194336
    10. ' ten' → logprob: -18.451528549194336

Token 402: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9146995327901095e-05
    2. 'count' → logprob: -11.125019073486328
    3. '_' → logprob: -13.375019073486328
    4. ' _' → logprob: -14.000019073486328
    5. '   ' → logprob: -14.125019073486328
    6. 'ount' → logprob: -15.125019073486328
    7. 't' → logprob: -15.625019073486328
    8. 'Count' → logprob: -15.750019073486328
    9. '_c' → logprob: -15.875019073486328
    10. 's' → logprob: -16.375019073486328

Token 403: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5951975584030151
    2. '   ' → logprob: -0.8451975584030151
    3. '       ' → logprob: -4.720197677612305
    4. '<|end|>' → logprob: -5.470197677612305
    5. '    
' → logprob: -5.845197677612305
    6. 'def' → logprob: -6.720197677612305
    7. ',' → logprob: -6.970197677612305
    8. '

' → logprob: -8.470197677612305
    9. '<|end|>' → logprob: -8.720197677612305
    10. '        
' → logprob: -9.220197677612305

Token 404: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11363121122121811
    2. 'def' → logprob: -2.363631248474121
    3. '       ' → logprob: -4.613631248474121
    4. '<|end|>' → logprob: -6.363631248474121
    5. ' def' → logprob: -6.863631248474121
    6. '
' → logprob: -8.238631248474121
    7. ',' → logprob: -8.613631248474121
    8. '    
' → logprob: -9.613631248474121
    9. 'self' → logprob: -10.238631248474121
    10. '	def' → logprob: -10.238631248474121

Token 405: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0011089015752077103
    2. 'def' → logprob: -7.1261091232299805
    3. ' self' → logprob: -8.75110912322998
    4. '       ' → logprob: -8.87610912322998
    5. '
' → logprob: -12.75110912322998
    6. '   ' → logprob: -13.37610912322998
    7. 'class' → logprob: -14.75110912322998
    8. 'from' → logprob: -15.50110912322998
    9. '        
' → logprob: -15.62610912322998
    10. '    ' → logprob: -15.75110912322998

Token 406: '.strategy' (ID: 144368)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.6977168321609497
    2. '.strategy' → logprob: -0.6977168321609497
    3. ' strategy' → logprob: -6.44771671295166
    4. '_strategy' → logprob: -6.44771671295166
    5. '._' → logprob: -7.57271671295166
    6. '.factory' → logprob: -7.82271671295166
    7. '.' → logprob: -8.69771671295166
    8. 'strateg' → logprob: -9.07271671295166
    9. '.term' → logprob: -9.44771671295166
    10. '.initial' → logprob: -10.57271671295166

Token 407: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -6.704273118884885e-07
    2. 'Factory' → logprob: -14.750000953674316
    3. '_FACTORY' → logprob: -16.625
    4. '_factor' → logprob: -16.75
    5. 'factory' → logprob: -17.125
    6. '_fact' → logprob: -17.875
    7. '_fac' → logprob: -18.25
    8. '_strategy' → logprob: -18.875
    9. '_f' → logprob: -19.25
    10. '_controller' → logprob: -20.375

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ' ' → logprob: -18.203889846801758
    4. '=

' → logprob: -19.203889846801758
    5. ':' → logprob: -19.328889846801758
    6. ')' → logprob: -20.703889846801758
    7. '=}' → logprob: -20.828889846801758
    8. '	' → logprob: -20.953889846801758
    9. '＝' → logprob: -20.953889846801758
    10. '<|end|>' → logprob: -21.078889846801758

Token 409: ' Term' (ID: 12167)
  Prédit: 'Term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Term' → logprob: -0.0009115827269852161
    2. ' Term' → logprob: -7.000911712646484
    3. 'Terms' → logprob: -19.625911712646484
    4. 'Termination' → logprob: -19.625911712646484
    5. 'Terminal' → logprob: -20.125911712646484
    6. '   ' → logprob: -20.250911712646484
    7. 'Sequence' → logprob: -20.625911712646484
    8. 'Ther' → logprob: -20.750911712646484
    9. 'term' → logprob: -20.875911712646484
    10. 'Termin' → logprob: -21.250911712646484

Token 410: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -1.9361264946837764e-07
    2. 'Strateg' → logprob: -16.375
    3. 'strategy' → logprob: -17.625
    4. '_strategy' → logprob: -18.125
    5. 'Term' → logprob: -20.125
    6. 'Str' → logprob: -20.75
    7. 'S' → logprob: -20.875
    8. 'ategy' → logprob: -21.0
    9. ' Strategy' → logprob: -21.25
    10. ' strategy' → logprob: -21.25

Token 411: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -1.9361264946837764e-07
    2. 'Factor' → logprob: -15.875
    3. 'Fact' → logprob: -17.0
    4. 'factory' → logprob: -18.5
    5. '_factory' → logprob: -19.5
    6. ' Factory' → logprob: -19.875
    7. 'Fac' → logprob: -21.5
    8. 'actory' → logprob: -21.625
    9. '.Factory' → logprob: -21.625
    10. 'Strategy' → logprob: -21.875

Token 412: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13512690365314484
    2. '<|end|>' → logprob: -2.760126829147339
    3. 'def' → logprob: -2.885126829147339
    4. '
' → logprob: -5.385127067565918
    5. ' def' → logprob: -6.510127067565918
    6. '    
' → logprob: -7.510127067565918
    7. '<|end|>' → logprob: -8.010127067565918
    8. '       ' → logprob: -9.635127067565918
    9. '	def' → logprob: -9.885127067565918
    10. '```' → logprob: -10.135127067565918

Token 414: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5896879434585571
    2. 'def' → logprob: -1.3396879434585571
    3. '<|end|>' → logprob: -1.8396879434585571
    4. ' self' → logprob: -3.9646878242492676
    5. ' def' → logprob: -6.464687824249268
    6. '   ' → logprob: -6.464687824249268
    7. '
' → logprob: -6.839687824249268
    8. '       ' → logprob: -6.964687824249268
    9. '<|end|>' → logprob: -8.714688301086426
    10. ' ' → logprob: -9.464688301086426

Token 415: '.output' (ID: 27521)
  Prédit: '.initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.08323117345571518
    2. 'initial' → logprob: -3.458231210708618
    3. 'sequence' → logprob: -3.958231210708618
    4. '.sequence' → logprob: -4.083230972290039
    5. '.output' → logprob: -5.333230972290039
    6. ' initial' → logprob: -6.958230972290039
    7. 'output' → logprob: -6.958230972290039
    8. 'def' → logprob: -7.083230972290039
    9. '.input' → logprob: -7.083230972290039
    10. ' sequence' → logprob: -7.583230972290039

Token 416: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -1.4974866644479334e-05
    2. 'Writer' → logprob: -11.750015258789062
    3. '_write' → logprob: -12.750015258789062
    4. '_reader' → logprob: -13.250015258789062
    5. '_w' → logprob: -13.875015258789062
    6. '_' → logprob: -14.000015258789062
    7. '_handler' → logprob: -16.000015258789062
    8. 'writer' → logprob: -16.375015258789062
    9. '_wrapper' → logprob: -16.875015258789062
    10. '=' → logprob: -16.875015258789062

Token 417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575940728187561
    2. ' =' → logprob: -0.825940728187561
    3. ' ' → logprob: -13.95094108581543
    4. '   ' → logprob: -16.45094108581543
    5. '=None' → logprob: -16.57594108581543
    6. '<|end|>' → logprob: -16.70094108581543
    7. '=create' → logprob: -16.82594108581543
    8. ' =
' → logprob: -16.95094108581543
    9. '  ' → logprob: -17.32594108581543
    10. '    ' → logprob: -17.82594108581543

Token 418: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.0031777136027812958
    2. ' Output' → logprob: -5.753177642822266
    3. '	Output' → logprob: -18.253177642822266
    4. '(Output' → logprob: -20.878177642822266
    5. 'Out' → logprob: -21.878177642822266
    6. 'Input' → logprob: -22.503177642822266
    7. '_Output' → logprob: -23.253177642822266
    8. ' output' → logprob: -24.003177642822266
    9. 'output' → logprob: -24.003177642822266
    10. '.Output' → logprob: -24.628177642822266

Token 419: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -1.9361264946837764e-07
    2. '_writer' → logprob: -16.625
    3. 'Reader' → logprob: -17.875
    4. 'Write' → logprob: -17.875
    5. 'writer' → logprob: -19.0
    6. 'Output' → logprob: -20.375
    7. '.Writer' → logprob: -20.5
    8. 'W' → logprob: -21.75
    9. ' Writer' → logprob: -21.75
    10. '   ' → logprob: -21.875

Token 420: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47842127084732056
    2. 'def' → logprob: -0.9784212708473206
    3. ' def' → logprob: -5.478421211242676
    4. '
' → logprob: -9.103421211242676
    5. '	def' → logprob: -10.478421211242676
    6. '<|end|>' → logprob: -11.603421211242676
    7. '    
' → logprob: -12.103421211242676
    8. '  ' → logprob: -13.728421211242676
    9. '```' → logprob: -13.978421211242676
    10. ' ' → logprob: -14.228421211242676

Token 422: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010771531378850341
    2. ' def' → logprob: -9.250107765197754
    3. '   ' → logprob: -11.375107765197754
    4. '
' → logprob: -16.250106811523438
    5. '	def' → logprob: -17.500106811523438
    6. 'class' → logprob: -20.000106811523438
    7. '    
' → logprob: -20.000106811523438
    8. 'from' → logprob: -20.500106811523438
    9. ' ' → logprob: -20.875106811523438
    10. '  ' → logprob: -21.125106811523438

Token 423: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.5804704427719116
    2. 'process' → logprob: -0.8304704427719116
    3. ' run' → logprob: -5.580470561981201
    4. 'run' → logprob: -7.205470561981201
    5. 'def' → logprob: -12.830470085144043
    6. '_process' → logprob: -13.330470085144043
    7. ' def' → logprob: -13.580470085144043
    8. 'execute' → logprob: -14.080470085144043
    9. ' execute' → logprob: -14.455470085144043
    10. '	process' → logprob: -15.830470085144043

Token 424: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04945898428559303
    2. '(' → logprob: -3.0494589805603027
    3. '()' → logprob: -7.424458980560303
    4. 'self' → logprob: -8.549459457397461
    5. '(
' → logprob: -10.549459457397461
    6. '_inputs' → logprob: -11.174459457397461
    7. ' (' → logprob: -11.549459457397461
    8. '_(' → logprob: -12.174459457397461
    9. '_input' → logprob: -12.174459457397461
    10. 'inputs' → logprob: -12.174459457397461

Token 425: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3043462038040161
    2. '):' → logprob: -2.0543460845947266
    3. '):
' → logprob: -2.9293460845947266
    4. ')' → logprob: -3.3043460845947266
    5. 'self' → logprob: -4.304346084594727
    6. ',' → logprob: -4.304346084594727
    7. ')(' → logprob: -5.054346084594727
    8. '_input' → logprob: -6.179346084594727
    9. '   ' → logprob: -6.304346084594727
    10. '_' → logprob: -6.429346084594727

Token 426: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.6823354363441467
    2. ' initial' → logprob: -1.307335376739502
    3. 'input' → logprob: -2.057335376739502
    4. ')' → logprob: -3.557335376739502
    5. ' input' → logprob: -3.557335376739502
    6. 'self' → logprob: -4.057335376739502
    7. 'inputs' → logprob: -4.432335376739502
    8. ' inputs' → logprob: -5.932335376739502
    9. '):' → logprob: -5.932335376739502
    10. ' self' → logprob: -6.182335376739502

Token 427: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.00033296257606707513
    2. '_value' → logprob: -8.750332832336426
    3. '_terms' → logprob: -9.000332832336426
    4. '_token' → logprob: -10.250332832336426
    5. '_' → logprob: -12.125332832336426
    6. '_input' → logprob: -12.500332832336426
    7. '_float' → logprob: -13.625332832336426
    8. ' _' → logprob: -14.000332832336426
    9. ')_' → logprob: -14.000332832336426
    10. '_initial' → logprob: -14.625332832336426

Token 428: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018852073117159307
    2. '):' → logprob: -8.750188827514648
    3. ' :' → logprob: -10.750188827514648
    4. ')' → logprob: -12.375188827514648
    5. '   ' → logprob: -13.500188827514648
    6. '):
' → logprob: -13.750188827514648
    7. 'self' → logprob: -14.375188827514648
    8. ' ):' → logprob: -14.500188827514648
    9. 's' → logprob: -14.625188827514648
    10. '_:' → logprob: -15.875188827514648

Token 429: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.16104215383529663
    2. ' float' → logprob: -1.9110422134399414
    3. ')' → logprob: -7.411042213439941
    4. 'List' → logprob: -9.786042213439941
    5. '   ' → logprob: -9.911042213439941
    6. ' ' → logprob: -10.786042213439941
    7. '):
' → logprob: -11.036042213439941
    8. 'self' → logprob: -11.786042213439941
    9. '=float' → logprob: -11.786042213439941
    10. '):' → logprob: -11.911042213439941

Token 430: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014116625534370542
    2. '):' → logprob: -6.626411437988281
    3. ' )' → logprob: -9.501411437988281
    4. '):
' → logprob: -11.626411437988281
    5. '   ' → logprob: -13.876411437988281
    6. ' ):' → logprob: -14.126411437988281
    7. ':' → logprob: -16.00141143798828
    8. '):
' → logprob: -16.50141143798828
    9. ')->' → logprob: -17.25141143798828
    10. '):

' → logprob: -17.37641143798828

Token 431: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010576228611171246
    2. ':
' → logprob: -4.760576248168945
    3. '       ' → logprob: -7.010576248168945
    4. '):' → logprob: -7.635576248168945
    5. '):
' → logprob: -9.010576248168945
    6. '   ' → logprob: -9.260576248168945
    7. ')' → logprob: -9.260576248168945
    8. ' ->' → logprob: -9.510576248168945
    9. ' :' → logprob: -9.760576248168945
    10. '():' → logprob: -9.885576248168945

Token 432: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0488581582903862
    2. ' None' → logprob: -3.048858165740967
    3. 'float' → logprob: -8.298857688903809
    4. ' float' → logprob: -11.048857688903809
    5. 'List' → logprob: -12.423857688903809
    6. 'none' → logprob: -14.798857688903809
    7. '(None' → logprob: -15.173857688903809
    8. '
' → logprob: -15.298857688903809
    9. 'No' → logprob: -15.548857688903809
    10. '   ' → logprob: -15.548857688903809

Token 433: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024821510538458824
    2. ':
' → logprob: -4.0248212814331055
    3. '       ' → logprob: -5.0248212814331055
    4. '):
' → logprob: -10.649821281433105
    5. '   ' → logprob: -10.774821281433105
    6. '):' → logprob: -11.274821281433105
    7. '():' → logprob: -11.899821281433105
    8. ',' → logprob: -12.649821281433105
    9. '():
' → logprob: -13.024821281433105
    10. ':

' → logprob: -13.774821281433105

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002090184949338436
    2. 'sequence' → logprob: -6.502089977264404
    3. ' sequence' → logprob: -7.752089977264404
    4. 'generator' → logprob: -8.877090454101562
    5. ' generator' → logprob: -12.252090454101562
    6. 'term' → logprob: -12.627090454101562
    7. 'seq' → logprob: -12.752090454101562
    8. 'gen' → logprob: -13.627090454101562
    9. '   ' → logprob: -13.627090454101562
    10. '_generator' → logprob: -14.127090454101562

Token 435: ' generator' (ID: 23989)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.568338930606842
    2. '       ' → logprob: -1.0683388710021973
    3. 'generator' (adapté à ' generator') → logprob: -2.8183388710021973
    4. ' sequence' → logprob: -3.5683388710021973
    5. ' generator' → logprob: -6.443338871002197
    6. 'seq' → logprob: -7.818338871002197
    7. 'gen' → logprob: -11.193339347839355
    8. 'sequ' → logprob: -11.318339347839355
    9. '   ' → logprob: -11.693339347839355
    10. 'sg' → logprob: -11.818339347839355

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246755823493004
    2. '=' → logprob: -3.7732467651367188
    3. '   ' → logprob: -13.898246765136719
    4. ' ' → logprob: -15.898246765136719
    5. '    ' → logprob: -17.02324676513672
    6. '  ' → logprob: -17.27324676513672
    7. '.' → logprob: -17.39824676513672
    8. '       ' → logprob: -17.89824676513672
    9. '	' → logprob: -18.02324676513672
    10. '        ' → logprob: -18.27324676513672

Token 437: ' Sequence' (ID: 57144)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.029750604182481766
    2. ' Sequence' → logprob: -3.5297505855560303
    3. '       ' → logprob: -16.02975082397461
    4. '   ' → logprob: -18.90475082397461
    5. 'Sequ' → logprob: -20.40475082397461
    6. '_sequence' → logprob: -21.77975082397461
    7. ' sequence' → logprob: -21.90475082397461
    8. '    ' → logprob: -22.15475082397461
    9. 'Seq' → logprob: -22.65475082397461
    10. 'sequence' → logprob: -22.65475082397461

Token 438: 'Generator' (ID: 14802)
  Prédit: 'Generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Generator' → logprob: 0.0
    2. 'generator' → logprob: -18.5
    3. 'Generate' → logprob: -19.75
    4. ' Generator' → logprob: -20.375
    5. '_generator' → logprob: -21.375
    6. 'Gen' → logprob: -21.625
    7. 'Gener' → logprob: -24.0
    8. 'Sequence' → logprob: -24.125
    9. ' generator' → logprob: -24.375
    10. 'Generation' → logprob: -24.875

Token 439: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -0.056339722126722336
    2. '(' → logprob: -3.306339740753174
    3. '(
' → logprob: -4.056339740753174
    4. '(self' → logprob: -7.181339740753174
    5. '(
' → logprob: -10.681339263916016
    6. 'initial' → logprob: -10.806339263916016
    7. '(

' → logprob: -11.431339263916016
    8. '       ' → logprob: -13.306339263916016
    9. '(`' → logprob: -14.806339263916016
    10. '(in' → logprob: -15.181339263916016

Token 440: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -3.15441757265944e-05
    2. 'term' → logprob: -10.375031471252441
    3. 'Term' → logprob: -15.500031471252441
    4. '_' → logprob: -17.625032424926758
    5. '=' → logprob: -17.875032424926758
    6. '_TERM' → logprob: -17.875032424926758
    7. '_token' → logprob: -18.375032424926758
    8. '_value' → logprob: -18.625032424926758
    9. 'termin' → logprob: -18.750032424926758
    10. 'self' → logprob: -19.250032424926758

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023859219625592232
    2. '=' → logprob: -3.7738592624664307
    3. 'self' → logprob: -8.023859024047852
    4. '=self' → logprob: -8.898859024047852
    5. ',self' → logprob: -9.023859024047852
    6. ' self' → logprob: -11.398859024047852
    7. '       ' → logprob: -12.023859024047852
    8. ' ,' → logprob: -12.023859024047852
    9. '   ' → logprob: -12.898859024047852
    10. ')' → logprob: -14.023859024047852

Token 442: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021886229515076
    2. ' self' → logprob: -2.3502187728881836
    3. '       ' → logprob: -11.350218772888184
    4. '[self' → logprob: -15.600218772888184
    5. '	self' → logprob: -16.2252197265625
    6. '(self' → logprob: -16.4752197265625
    7. '           ' → logprob: -16.8502197265625
    8. '   ' → logprob: -18.1002197265625
    9. ' ' → logprob: -18.3502197265625
    10. '=self' → logprob: -18.6002197265625

Token 443: '.term' (ID: 106645)
  Prédit: '.term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.term' → logprob: -2.2200749754119897e-06
    2. 'term' → logprob: -13.250001907348633
    3. '.' → logprob: -15.125001907348633
    4. ' .' → logprob: -16.250001907348633
    5. ' term' → logprob: -18.250001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '.task' → logprob: -21.250001907348633
    8. '.token' → logprob: -21.750001907348633
    9. '_term' → logprob: -22.125001907348633
    10. '(term' → logprob: -22.250001907348633

Token 444: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.054500666621607e-06
    2. 'count' → logprob: -12.87500286102295
    3. 'self' → logprob: -16.250003814697266
    4. '   ' → logprob: -16.375003814697266
    5. '_c' → logprob: -16.875003814697266
    6. 's' → logprob: -17.000003814697266
    7. '_COUNT' → logprob: -17.250003814697266
    8. '       ' → logprob: -17.500003814697266
    9. '_length' → logprob: -18.625003814697266
    10. 'ount' → logprob: -18.750003814697266

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.706686690449715e-05
    2. '       ' → logprob: -10.125066757202148
    3. ' ,' → logprob: -10.750066757202148
    4. ',self' → logprob: -13.000066757202148
    5. 'self' → logprob: -13.625066757202148
    6. ')' → logprob: -13.750066757202148
    7. ',
' → logprob: -14.250066757202148
    8. '   ' → logprob: -15.500066757202148
    9. '```' → logprob: -16.62506675720215
    10. ')
' → logprob: -17.12506675720215

Token 446: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519630789756775
    2. ' self' → logprob: -1.5019631385803223
    3. '       ' → logprob: -10.626962661743164
    4. '           ' → logprob: -12.126962661743164
    5. '	self' → logprob: -13.626962661743164
    6. '   ' → logprob: -14.251962661743164
    7. '(self' → logprob: -14.376962661743164
    8. ' ' → logprob: -14.626962661743164
    9. '               ' → logprob: -15.126962661743164
    10. '        ' → logprob: -15.376962661743164

Token 447: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.0015071245143190026
    2. 'strategy' → logprob: -6.50150728225708
    3. '.' → logprob: -12.751506805419922
    4. '.str' → logprob: -13.751506805419922
    5. ' strategy' → logprob: -14.876506805419922
    6. ' .' → logprob: -14.876506805419922
    7. '_strategy' → logprob: -17.501506805419922
    8. '(strategy' → logprob: -17.751506805419922
    9. 'Strategy' → logprob: -18.126506805419922
    10. 'strateg' → logprob: -19.876506805419922

Token 448: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -4.320199877838604e-07
    2. 'factory' → logprob: -15.875
    3. '_factor' → logprob: -16.375
    4. 'Factory' → logprob: -16.75
    5. '_FACTORY' → logprob: -17.0
    6. '_fac' → logprob: -17.125
    7. '_fact' → logprob: -17.75
    8. '_' → logprob: -17.875
    9. '_strategy' → logprob: -18.0
    10. '_
' → logprob: -20.75

Token 449: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06249526888132095
    2. ')
' → logprob: -2.812495231628418
    3. '       ' → logprob: -7.562495231628418
    4. ')
' → logprob: -11.937495231628418
    5. '   ' → logprob: -14.062495231628418
    6. ' )' → logprob: -15.187495231628418
    7. ')

' → logprob: -15.312495231628418
    8. ' )
' → logprob: -16.812496185302734
    9. '           ' → logprob: -17.937496185302734
    10. ' ' → logprob: -17.937496185302734

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04650785028934479
    2. 'sequence' → logprob: -3.1715078353881836
    3. 'terms' → logprob: -5.921507835388184
    4. '
' → logprob: -8.046507835388184
    5. ' sequence' → logprob: -8.296507835388184
    6. 'result' → logprob: -8.921507835388184
    7. '   ' → logprob: -10.671507835388184
    8. ' terms' → logprob: -10.796507835388184
    9. 'generated' → logprob: -10.921507835388184
    10. 'seq' → logprob: -11.546507835388184

Token 451: ' terms' (ID: 5941)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0031516924500465393
    2. 'terms' (adapté à ' terms') → logprob: -6.003151893615723
    3. '       ' → logprob: -8.003151893615723
    4. ' sequence' → logprob: -8.003151893615723
    5. 'seq' → logprob: -12.878151893615723
    6. ' terms' → logprob: -14.003151893615723
    7. 'summary' → logprob: -14.128151893615723
    8. 'series' → logprob: -14.253151893615723
    9. 'sequ' → logprob: -14.628151893615723
    10. 'se' → logprob: -14.753151893615723

Token 452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. ')' → logprob: -18.568147659301758
    4. '.' → logprob: -19.193147659301758
    5. ' ' → logprob: -19.318147659301758
    6. 's' → logprob: -19.318147659301758
    7. '＝' → logprob: -19.443147659301758
    8. '_' → logprob: -20.068147659301758
    9. ':' → logprob: -20.318147659301758
    10. '   ' → logprob: -20.568147659301758

Token 453: ' generator' (ID: 23989)
  Prédit: 'generator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generator' → logprob: -0.001170460251159966
    2. ' generator' → logprob: -6.751170635223389
    3. '(generator' → logprob: -16.501171112060547
    4. 'generate' → logprob: -16.876171112060547
    5. 'generated' → logprob: -18.251171112060547
    6. 'gener' → logprob: -18.251171112060547
    7. 'gen' → logprob: -18.376171112060547
    8. 'Generator' → logprob: -18.626171112060547
    9. '.generator' → logprob: -19.376171112060547
    10. '   ' → logprob: -19.751171112060547

Token 454: '.generate' (ID: 33917)
  Prédit: '.generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.generate' → logprob: -0.00020520923135336488
    2. '.' → logprob: -8.500205039978027
    3. 'generate' → logprob: -13.500205039978027
    4. ' .' → logprob: -15.375205039978027
    5. '.create' → logprob: -17.875205993652344
    6. '.compute' → logprob: -19.375205993652344
    7. '.get' → logprob: -19.500205993652344
    8. '.calculate' → logprob: -19.750205993652344
    9. '\.' → logprob: -20.125205993652344
    10. '.gener' → logprob: -20.250205993652344

Token 455: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07796473801136017
    2. '()' → logprob: -3.5779647827148438
    3. '
' → logprob: -3.7029647827148438
    4. '()
' → logprob: -3.8279647827148438
    5. '        
' → logprob: -8.202964782714844
    6. ')' → logprob: -9.702964782714844
    7. '(' → logprob: -9.827964782714844
    8. ',' → logprob: -10.202964782714844
    9. '[' → logprob: -10.202964782714844
    10. '=' → logprob: -10.452964782714844

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05875992029905319
    2. 'summ' → logprob: -2.933759927749634
    3. ' summ' → logprob: -5.933759689331055
    4. '
' → logprob: -7.183759689331055
    5. 'sum' → logprob: -8.433759689331055
    6. 'summary' → logprob: -9.308759689331055
    7. '   ' → logprob: -9.433759689331055
    8. 's' → logprob: -11.058759689331055
    9. ' summar' → logprob: -11.308759689331055
    10. ' sum' → logprob: -11.683759689331055

Token 457: ' summ' (ID: 16552)
  Prédit: 'summ'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'summ' (adapté à ' summ') → logprob: -0.0011948712635785341
    2. 's' → logprob: -6.876194953918457
    3. '       ' → logprob: -9.501194953918457
    4. 'sum' → logprob: -10.376194953918457
    5. 'total' → logprob: -10.876194953918457
    6. '   ' → logprob: -11.126194953918457
    7. 'summary' → logprob: -11.501194953918457
    8. 'summer' → logprob: -12.376194953918457
    9. 'sequ' → logprob: -12.876194953918457
    10. 'result' → logprob: -13.501194953918457

Token 458: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.003803288098424673
    2. 'er' → logprob: -6.003803253173828
    3. 'ator' → logprob: -6.628803253173828
    4. 'ar' → logprob: -13.378803253173828
    5. '   ' → logprob: -13.503803253173828
    6. 'ations' → logprob: -14.503803253173828
    7. 'ed' → logprob: -14.503803253173828
    8. 'ate' → logprob: -15.378803253173828
    9. 'ary' → logprob: -15.628803253173828
    10. ' =' → logprob: -16.128803253173828

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12696495652198792
    2. '=' → logprob: -2.126965045928955
    3. '   ' → logprob: -10.376964569091797
    4. ' ' → logprob: -13.251964569091797
    5. '    ' → logprob: -13.501964569091797
    6. '       ' → logprob: -13.876964569091797
    7. '  ' → logprob: -14.001964569091797
    8. '        ' → logprob: -15.626964569091797
    9. 'er' → logprob: -15.876964569091797
    10. '	' → logprob: -16.376964569091797

Token 460: ' Sequence' (ID: 57144)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.00012368128227535635
    2. ' Sequence' → logprob: -9.000123977661133
    3. '       ' → logprob: -15.625123977661133
    4. '   ' → logprob: -15.875123977661133
    5. '           ' → logprob: -20.000123977661133
    6. 'Sequ' → logprob: -20.375123977661133
    7. ' ' → logprob: -20.875123977661133
    8. '  ' → logprob: -21.500123977661133
    9. 'sequence' → logprob: -22.250123977661133
    10. '    ' → logprob: -22.375123977661133

Token 461: 'Summ' (ID: 64614)
  Prédit: 'Summ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Summ' → logprob: -1.2664456789934775e-06
    2. ' Summ' → logprob: -14.625000953674316
    3. 'umm' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.250001907348633
    5. 'Sum' → logprob: -16.250001907348633
    6. 'summ' → logprob: -16.500001907348633
    7. 'Sequ' → logprob: -16.500001907348633
    8. ' summ' → logprob: -17.000001907348633
    9. ' ' → logprob: -17.750001907348633
    10. '
' → logprob: -18.500001907348633

Token 462: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -3.128163257315464e-07
    2. 'ATION' → logprob: -16.375
    3. 'er' → logprob: -16.625
    4. 'a' → logprob: -17.75
    5. '   ' → logprob: -19.75
    6. 'atio' → logprob: -20.125
    7. 'lation' → logprob: -20.625
    8. 'ati' → logprob: -20.625
    9. 'ations' → logprob: -20.75
    10. 'm' → logprob: -21.375

Token 463: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.36574100604048e-06
    2. 'terms' → logprob: -12.625004768371582
    3. '(
' → logprob: -14.750004768371582
    4. '(sequence' → logprob: -15.375004768371582
    5. '       ' → logprob: -15.875004768371582
    6. ' (' → logprob: -16.250003814697266
    7. '(term' → logprob: -17.250003814697266
    8. '(s' → logprob: -17.500003814697266
    9. ' terms' → logprob: -17.875003814697266
    10. '   ' → logprob: -18.000003814697266

Token 464: 'terms' (ID: 39463)
  Prédit: 'terms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terms' → logprob: -1.3902033970225602e-05
    2. ' terms' → logprob: -12.125014305114746
    3. '       ' → logprob: -12.250014305114746
    4. '(' → logprob: -12.875014305114746
    5. '   ' → logprob: -14.625014305114746
    6. '[' → logprob: -15.375014305114746
    7. ')' → logprob: -16.00001335144043
    8. '           ' → logprob: -16.37501335144043
    9. 'sequence' → logprob: -16.62501335144043
    10. '```' → logprob: -17.50001335144043

Token 465: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.009061221033334732
    2. ')' → logprob: -5.134061336517334
    3. '       ' → logprob: -5.884061336517334
    4. ').' → logprob: -8.384060859680176
    5. '   ' → logprob: -9.384060859680176
    6. '()
' → logprob: -11.259060859680176
    7. ')
' → logprob: -11.259060859680176
    8. '())
' → logprob: -13.134060859680176
    9. '
' → logprob: -13.884060859680176
    10. '()' → logprob: -14.384060859680176

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1429436355829239
    2. 'result' → logprob: -2.1429436206817627
    3. ' result' → logprob: -4.392943859100342
    4. 'total' → logprob: -5.892943859100342
    5. ' total' → logprob: -7.642943859100342
    6. 'sum' → logprob: -8.892943382263184
    7. 'value' → logprob: -9.767943382263184
    8. '   ' → logprob: -10.267943382263184
    9. '
' → logprob: -10.392943382263184
    10. 'self' → logprob: -11.642943382263184

Token 467: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.27993229031562805
    2. 'total' → logprob: -1.5299322605133057
    3. '       ' → logprob: -3.7799322605133057
    4. ' result' → logprob: -5.654932498931885
    5. ' total' → logprob: -7.154932498931885
    6. 'sum' → logprob: -8.154932022094727
    7. 'self' → logprob: -9.154932022094727
    8. 'summary' → logprob: -9.904932022094727
    9. 'value' → logprob: -10.529932022094727
    10. 'output' → logprob: -10.779932022094727

Token 468: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134955167770386
    2. '=' → logprob: -1.3134955167770386
    3. '_value' → logprob: -8.563495635986328
    4. '=result' → logprob: -11.313495635986328
    5. '.' → logprob: -11.438495635986328
    6. 'value' → logprob: -12.188495635986328
    7. '_result' → logprob: -12.813495635986328
    8. '.value' → logprob: -12.938495635986328
    9. '   ' → logprob: -13.063495635986328
    10. ' ' → logprob: -13.563495635986328

Token 469: ' summ' (ID: 16552)
  Prédit: 'summ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'summ' → logprob: -0.006717386189848185
    2. ' summ' → logprob: -5.006717205047607
    3. '       ' → logprob: -13.381717681884766
    4. 'sum' → logprob: -15.256717681884766
    5. ' summar' → logprob: -16.131717681884766
    6. 'Summ' → logprob: -16.256717681884766
    7. '   ' → logprob: -17.506717681884766
    8. 'summary' → logprob: -17.756717681884766
    9. '           ' → logprob: -18.256717681884766
    10. 'result' → logprob: -19.131717681884766

Token 470: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -3.128163257315464e-07
    2. 'er' → logprob: -15.75
    3. 'at' → logprob: -17.125
    4. 'ATION' → logprob: -17.375
    5. 'a' → logprob: -17.75
    6. '   ' → logprob: -18.0
    7. 'atio' → logprob: -18.375
    8. 'ati' → logprob: -18.5
    9. 'result' → logprob: -19.875
    10. ' at' → logprob: -20.5

Token 471: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -7.64839569455944e-05
    2. '.' → logprob: -9.500076293945312
    3. 'sum' → logprob: -13.750076293945312
    4. ' .' → logprob: -15.000076293945312
    5. '.s' → logprob: -16.375076293945312
    6. '=sum' → logprob: -18.125076293945312
    7. '   ' → logprob: -18.250076293945312
    8. '	sum' → logprob: -19.250076293945312
    9. '.summary' → logprob: -19.500076293945312
    10. ' sum' → logprob: -19.875076293945312

Token 472: '_terms' (ID: 96676)
  Prédit: '_terms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_terms' → logprob: -0.002135152230039239
    2. '_' → logprob: -6.252135276794434
    3. '()' → logprob: -8.502135276794434
    4. 'terms' → logprob: -13.877135276794434
    5. '_term' → logprob: -14.377135276794434
    6. '_tokens' → logprob: -14.627135276794434
    7. '_words' → logprob: -15.002135276794434
    8. 'Terms' → logprob: -15.252135276794434
    9. '(' → logprob: -16.252134323120117
    10. '\' → logprob: -16.252134323120117

Token 473: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005464386660605669
    2. '
' → logprob: -5.380464553833008
    3. 'self' → logprob: -7.255464553833008
    4. '()
' → logprob: -9.630464553833008
    5. '(self' → logprob: -10.255464553833008
    6. '        
' → logprob: -11.255464553833008
    7. '()' → logprob: -11.380464553833008
    8. ' self' → logprob: -12.130464553833008
    9. '   ' → logprob: -13.255464553833008
    10. '
' → logprob: -13.505464553833008

Token 474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2300540804862976
    2. 'self' → logprob: -1.6050541400909424
    3. '
' → logprob: -6.230053901672363
    4. ' self' → logprob: -6.355053901672363
    5. '        
' → logprob: -8.105053901672363
    6. '<|end|>' → logprob: -8.355053901672363
    7. '   ' → logprob: -9.105053901672363
    8. '```' → logprob: -9.230053901672363
    9. '	self' → logprob: -9.355053901672363
    10. '[self' → logprob: -9.855053901672363

Token 475: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005389740690588951
    2. ' self' → logprob: -8.00053882598877
    3. '       ' → logprob: -8.50053882598877
    4. '	self' → logprob: -16.500539779663086
    5. '
' → logprob: -16.750539779663086
    6. '```' → logprob: -18.250539779663086
    7. '   ' → logprob: -18.500539779663086
    8. '[self' → logprob: -18.625539779663086
    9. '        
' → logprob: -19.250539779663086
    10. '(self' → logprob: -19.750539779663086

Token 476: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -2.9040898880339228e-05
    2. 'output' → logprob: -10.500028610229492
    3. '.' → logprob: -13.500028610229492
    4. ' .' → logprob: -17.500028610229492
    5. '.input' → logprob: -17.750028610229492
    6. '	output' → logprob: -19.000028610229492
    7. '.Output' → logprob: -19.500028610229492
    8. '$output' → logprob: -19.875028610229492
    9. '.stdout' → logprob: -20.000028610229492
    10. ' output' → logprob: -20.125028610229492

Token 477: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -1.3856492842023727e-06
    2. '_write' → logprob: -13.750000953674316
    3. '_w' → logprob: -15.500000953674316
    4. '_wr' → logprob: -20.375001907348633
    5. '_written' → logprob: -21.125001907348633
    6. '_reader' → logprob: -22.000001907348633
    7. '_wrapper' → logprob: -22.125001907348633
    8. '_' → logprob: -22.875001907348633
    9. '_worker' → logprob: -23.250001907348633
    10. 'Writer' → logprob: -23.500001907348633

Token 478: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -6.2729995988775045e-06
    2. '.' → logprob: -12.000006675720215
    3. ' .' → logprob: -18.2500057220459
    4. 'write' → logprob: -19.5000057220459
    5. '.print' → logprob: -21.7500057220459
    6. '.Write' → logprob: -22.6250057220459
    7. ').' → logprob: -22.8750057220459
    8. '.writerow' → logprob: -23.1250057220459
    9. '.WRITE' → logprob: -23.3750057220459
    10. '\.' → logprob: -23.6250057220459

Token 479: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.8921695047756657e-05
    2. '(' → logprob: -10.500028610229492
    3. 'result' → logprob: -13.625028610229492
    4. '(value' → logprob: -16.375028610229492
    5. '(results' → logprob: -17.375028610229492
    6. ' (' → logprob: -17.875028610229492
    7. '(
' → logprob: -18.750028610229492
    8. '(res' → logprob: -19.125028610229492
    9. '=result' → logprob: -19.125028610229492
    10. '(resultado' → logprob: -19.125028610229492

Token 480: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014656837447546422
    2. ')
' → logprob: -8.875146865844727
    3. '()' → logprob: -12.375146865844727
    4. '())' → logprob: -13.875146865844727
    5. ' )' → logprob: -14.750146865844727
    6. '   ' → logprob: -14.875146865844727
    7. '`)' → logprob: -16.250146865844727
    8. '```' → logprob: -16.250146865844727
    9. '       ' → logprob: -16.375146865844727
    10. '<|end|>' → logprob: -16.875146865844727

Token 481: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.049183811992406845
    2. 'def' → logprob: -3.0491838455200195
    3. '
' → logprob: -8.29918384552002
    4. '```' → logprob: -8.67418384552002
    5. 'import' → logprob: -9.79918384552002
    6. '#' → logprob: -9.92418384552002
    7. ' if' → logprob: -10.17418384552002
    8. '  
' → logprob: -11.29918384552002
    9. '    
' → logprob: -12.29918384552002
    10. '<|end|>' → logprob: -12.29918384552002

Token 482: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.259079363080673e-05
    2. 'main' → logprob: -11.500012397766113
    3. ' run' → logprob: -13.250012397766113
    4. ' process' → logprob: -15.375012397766113
    5. '_main' → logprob: -15.500012397766113
    6. ' _' → logprob: -16.50001335144043
    7. ' sequence' → logprob: -17.37501335144043
    8. ' __' → logprob: -17.37501335144043
    9. '	main' → logprob: -17.75001335144043
    10. ' ' → logprob: -18.37501335144043

Token 483: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.7372048862162046e-05
    2. '():
' → logprob: -11.000027656555176
    3. ' ():' → logprob: -11.625027656555176
    4. '()' → logprob: -13.375027656555176
    5. '():
' → logprob: -16.37502670288086
    6. '(' → logprob: -18.12502670288086
    7. '()>' → logprob: -18.50002670288086
    8. '():

' → logprob: -19.12502670288086
    9. '().' → logprob: -20.00002670288086
    10. '(":' → logprob: -20.25002670288086

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2540671229362488
    2. ' processor' → logprob: -2.1290671825408936
    3. 'processor' → logprob: -2.3790671825408936
    4. 'import' → logprob: -4.7540669441223145
    5. 'input' → logprob: -6.6290669441223145
    6. ' import' → logprob: -6.7540669441223145
    7. ' input' → logprob: -6.7540669441223145
    8. ' reader' → logprob: -8.504067420959473
    9. ' sequence' → logprob: -9.379067420959473
    10. 'reader' → logprob: -9.504067420959473

Token 485: ' input' (ID: 3422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0914674997329712
    2. 'reader' → logprob: -1.0914674997329712
    3. 'input' (adapté à ' input') → logprob: -1.3414674997329712
    4. 'processor' → logprob: -2.8414673805236816
    5. ' reader' → logprob: -5.591467380523682
    6. ' input' → logprob: -5.966467380523682
    7. '   ' → logprob: -6.841467380523682
    8. ' import' → logprob: -7.091467380523682
    9. ' processor' → logprob: -7.716467380523682
    10. 'if' → logprob: -9.84146785736084

Token 486: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -3.054500666621607e-06
    2. 'reader' → logprob: -13.62500286102295
    3. 'Reader' → logprob: -14.00000286102295
    4. '   ' → logprob: -15.12500286102295
    5. 's' → logprob: -15.50000286102295
    6. '_writer' → logprob: -16.500003814697266
    7. 'er' → logprob: -16.750003814697266
    8. ' =' → logprob: -16.750003814697266
    9. '_' → logprob: -17.000003814697266
    10. '
' → logprob: -17.125003814697266

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003601974807679653
    2. '=' → logprob: -5.628602027893066
    3. '()' → logprob: -13.753602027893066
    4. '   ' → logprob: -14.503602027893066
    5. ' ' → logprob: -15.128602027893066
    6. ' =
' → logprob: -16.25360107421875
    7. '  ' → logprob: -17.75360107421875
    8. '    ' → logprob: -18.37860107421875
    9. 'import' → logprob: -19.00360107421875
    10. '```' → logprob: -19.37860107421875

Token 488: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.00033546582562848926
    2. ' Input' → logprob: -8.000335693359375
    3. '	Input' → logprob: -19.875335693359375
    4. 'input' → logprob: -20.250335693359375
    5. '_input' → logprob: -21.875335693359375
    6. '<Input' → logprob: -21.875335693359375
    7. '\Input' → logprob: -22.000335693359375
    8. '_Input' → logprob: -22.125335693359375
    9. 'Output' → logprob: -22.750335693359375
    10. '   ' → logprob: -23.250335693359375

Token 489: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -1.9361264946837764e-07
    2. 'Writer' → logprob: -16.875
    3. '_reader' → logprob: -17.875
    4. ' Reader' → logprob: -18.875
    5. 'Readers' → logprob: -19.375
    6. '.Reader' → logprob: -20.5
    7. 'Reading' → logprob: -20.625
    8. 'reader' → logprob: -21.125
    9. 'Receiver' → logprob: -21.375
    10. 'Read' → logprob: -21.875

Token 490: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03241381049156189
    2. 'for' → logprob: -3.6574137210845947
    3. ' for' → logprob: -5.282413959503174
    4. '
' → logprob: -7.032413959503174
    5. '    
' → logprob: -9.032413482666016
    6. '  ' → logprob: -13.032413482666016
    7. ' ' → logprob: -13.157413482666016
    8. '  
' → logprob: -13.282413482666016
    9. ' 
' → logprob: -13.657413482666016
    10. ',' → logprob: -13.907413482666016

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04937366396188736
    2. 'for' → logprob: -3.2993736267089844
    3. 'processor' → logprob: -5.049373626708984
    4. 'sequence' → logprob: -5.674373626708984
    5. ' for' → logprob: -6.674373626708984
    6. ' sequence' → logprob: -9.424373626708984
    7. ' processor' → logprob: -9.799373626708984
    8. '    
' → logprob: -11.674373626708984
    9. 'process' → logprob: -11.799373626708984
    10. '  ' → logprob: -13.174373626708984

Token 492: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.1552138477563858
    2. 'sequence' → logprob: -2.0302138328552246
    3. 'for' → logprob: -4.405213832855225
    4. '   ' → logprob: -9.280214309692383
    5. ' processor' → logprob: -9.780214309692383
    6. 'seq' → logprob: -10.155214309692383
    7. 'process' → logprob: -11.030214309692383
    8. 'term' → logprob: -11.530214309692383
    9. ' sequence' → logprob: -11.780214309692383
    10. 'sequ' → logprob: -12.280214309692383

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010360575281083584
    2. '=' → logprob: -5.0103607177734375
    3. '.process' → logprob: -5.6353607177734375
    4. '.' → logprob: -10.260360717773438
    5. 'process' → logprob: -11.010360717773438
    6. ' ' → logprob: -11.510360717773438
    7. '   ' → logprob: -12.760360717773438
    8. 'for' → logprob: -13.510360717773438
    9. ' for' → logprob: -14.135360717773438
    10. ' process' → logprob: -14.385360717773438

Token 494: ' Sequence' (ID: 57144)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.01416350994259119
    2. ' Sequence' → logprob: -4.264163494110107
    3. '   ' → logprob: -18.014163970947266
    4. 'Sequ' → logprob: -21.514163970947266
    5. ' sequence' → logprob: -21.764163970947266
    6. ' ' → logprob: -21.889163970947266
    7. '_sequence' → logprob: -22.014163970947266
    8. 'sequence' → logprob: -22.514163970947266
    9. '  ' → logprob: -22.764163970947266
    10. '.Sequence' → logprob: -23.639163970947266

Token 495: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'processor' → logprob: -17.625
    3. '_processor' → logprob: -19.875
    4. 'Process' → logprob: -20.75
    5. ' Processor' → logprob: -20.875
    6. ' processor' → logprob: -22.0
    7. 'Proces' → logprob: -24.0
    8. 'Processing' → logprob: -24.5
    9. 'Processors' → logprob: -24.625
    10. 'Producer' → logprob: -24.75

Token 496: '(term' (ID: 99652)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47617867588996887
    2. 'for' → logprob: -0.9761786460876465
    3. ' for' → logprob: -6.3511786460876465
    4. '
' → logprob: -8.476179122924805
    5. '()
' → logprob: -9.226179122924805
    6. '    
' → logprob: -10.601179122924805
    7. ' ' → logprob: -11.601179122924805
    8. '()' → logprob: -12.101179122924805
    9. '	for' → logprob: -12.726179122924805
    10. '  ' → logprob: -13.351179122924805

Token 497: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3856492842023727e-06
    2. 'count' → logprob: -13.750000953674316
    3. ')' → logprob: -15.625000953674316
    4. '   ' → logprob: -17.125001907348633
    5. '_' → logprob: -17.250001907348633
    6. 's' → logprob: -17.250001907348633
    7. '_COUNT' → logprob: -17.375001907348633
    8. '_c' → logprob: -17.750001907348633
    9. ')_' → logprob: -17.875001907348633
    10. ' count' → logprob: -19.000001907348633

Token 498: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008842529729008675
    2. '(' → logprob: -5.258842468261719
    3. '10' → logprob: -5.883842468261719
    4. ')' → logprob: -7.383842468261719
    5. '())' → logprob: -9.633842468261719
    6. '20' → logprob: -10.008842468261719
    7. ' =' → logprob: -10.383842468261719
    8. '   ' → logprob: -10.508842468261719
    9. '()' → logprob: -11.508842468261719
    10. '100' → logprob: -12.633842468261719

Token 499: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012035090912831947
    2. ' ' → logprob: -9.250120162963867
    3. '20' → logprob: -10.875120162963867
    4. 'int' → logprob: -12.750120162963867
    5. '15' → logprob: -14.125120162963867
    6. '  ' → logprob: -14.500120162963867
    7. '   ' → logprob: -14.875120162963867
    8. '100' → logprob: -15.250120162963867
    9. '5' → logprob: -15.625120162963867
    10. ' int' → logprob: -16.125120162963867

Token 500: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20847953855991364
    2. ')' → logprob: -1.7084795236587524
    3. '   ' → logprob: -4.958479404449463
    4. ')
' → logprob: -11.333479881286621
    5. ')

' → logprob: -12.458479881286621
    6. ' ' → logprob: -14.208479881286621
    7. ' )
' → logprob: -14.458479881286621
    8. '
' → logprob: -14.958479881286621
    9. ' )' → logprob: -16.583478927612305
    10. 'for' → logprob: -17.083478927612305

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053577970713377
    2. 'for' → logprob: -3.0535778999328613
    3. ' for' → logprob: -5.303577899932861
    4. '    
' → logprob: -13.17857837677002
    5. '
' → logprob: -13.30357837677002
    6. '	for' → logprob: -14.55357837677002
    7. ' ' → logprob: -15.17857837677002
    8. '```' → logprob: -16.428577423095703
    9. '  ' → logprob: -17.178577423095703
    10. '       ' → logprob: -18.178577423095703

Token 502: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.3458322731312364e-06
    2. '   ' → logprob: -12.500007629394531
    3. ' for' → logprob: -12.750007629394531
    4. 'try' → logprob: -14.375007629394531
    5. '
' → logprob: -18.12500762939453
    6. '```' → logprob: -19.37500762939453
    7. 'initial' → logprob: -20.25000762939453
    8. '	for' → logprob: -20.75000762939453
    9. 'import' → logprob: -21.62500762939453
    10. '    
' → logprob: -21.62500762939453

Token 503: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.3145916759967804
    2. ' initial' → logprob: -1.314591646194458
    3. 'value' → logprob: -6.814591884613037
    4. ' value' → logprob: -8.439591407775879
    5. 'term' → logprob: -12.189591407775879
    6. 'number' → logprob: -12.439591407775879
    7. 'input' → logprob: -13.314591407775879
    8. ' term' → logprob: -13.814591407775879
    9. 'init' → logprob: -13.814591407775879
    10. '	initial' → logprob: -14.689591407775879

Token 504: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.008891562931239605
    2. '_value' → logprob: -4.883891582489014
    3. '_' → logprob: -6.883891582489014
    4. '_input' → logprob: -8.758891105651855
    5. '_line' → logprob: -10.008891105651855
    6. '_token' → logprob: -11.008891105651855
    7. '_initial' → logprob: -11.258891105651855
    8. '_val' → logprob: -11.383891105651855
    9. '_point' → logprob: -12.383891105651855
    10. ' _' → logprob: -12.883891105651855

Token 505: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031790214125066996
    2. 'in' → logprob: -5.75317907333374
    3. '	in' → logprob: -14.378178596496582
    4. ' ' → logprob: -14.878178596496582
    5. '   ' → logprob: -15.878178596496582
    6. '    ' → logprob: -16.5031795501709
    7. '_in' → logprob: -16.8781795501709
    8. 's' → logprob: -17.5031795501709
    9. ' ' → logprob: -17.5031795501709
    10. '_' → logprob: -17.6281795501709

Token 506: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804171830415726
    2. ' input' → logprob: -3.288041830062866
    3. 'initial' → logprob: -16.538042068481445
    4. '   ' → logprob: -17.038042068481445
    5. '(input' → logprob: -17.288042068481445
    6. 'import' → logprob: -17.413042068481445
    7. 'Input' → logprob: -17.538042068481445
    8. '=input' → logprob: -17.788042068481445
    9. '	input' → logprob: -17.913042068481445
    10. '_input' → logprob: -18.413042068481445

Token 507: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -2.339278580620885e-06
    2. 'Reader' → logprob: -13.875001907348633
    3. 'reader' → logprob: -14.500001907348633
    4. '_writer' → logprob: -14.750001907348633
    5. '.Reader' → logprob: -15.750001907348633
    6. '_read' → logprob: -16.875001907348633
    7. '_processor' → logprob: -17.000001907348633
    8. 's' → logprob: -17.750001907348633
    9. '_iterator' → logprob: -17.875001907348633
    10. '_generator' → logprob: -18.375001907348633

Token 508: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -7.226628895296017e-06
    2. '.' → logprob: -12.125007629394531
    3. ' .' → logprob: -13.875007629394531
    4. 'read' → logprob: -14.250007629394531
    5. '.readline' → logprob: -16.75000762939453
    6. '.readlines' → logprob: -18.37500762939453
    7. ' read' → logprob: -19.12500762939453
    8. '	read' → logprob: -19.50000762939453
    9. '.Read' → logprob: -19.50000762939453
    10. '   ' → logprob: -19.62500762939453

Token 509: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.9361264946837764e-07
    2. 'all' → logprob: -16.625
    3. '(_' → logprob: -17.875
    4. '__' → logprob: -18.125
    5. 'All' → logprob: -18.25
    6. '```' → logprob: -18.25
    7. '_lines' → logprob: -18.625
    8. 's' → logprob: -18.75
    9. '\' → logprob: -19.125
    10. '_ALL' → logprob: -19.375

Token 510: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -3.128163257315464e-07
    2. 'inputs' → logprob: -16.125
    3. '_outputs' → logprob: -17.0
    4. '_' → logprob: -18.625
    5. 's' → logprob: -18.75
    6. '(inputs' → logprob: -18.875
    7. 'Inputs' → logprob: -19.0
    8. '_float' → logprob: -19.625
    9. '```' → logprob: -19.625
    10. '_lines' → logprob: -20.25

Token 511: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00017386233957950026
    2. ' ():' → logprob: -8.750173568725586
    3. '(' → logprob: -11.875173568725586
    4. '()' → logprob: -12.375173568725586
    5. '():
' → logprob: -12.875173568725586
    6. '(initial' → logprob: -13.625173568725586
    7. '(:' → logprob: -16.125173568725586
    8. '(":' → logprob: -16.250173568725586
    9. '():
' → logprob: -17.125173568725586
    10. ':' → logprob: -17.875173568725586

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.978233846486546e-05
    2. 'processor' → logprob: -10.875049591064453
    3. ' processor' → logprob: -11.000049591064453
    4. '        
' → logprob: -12.250049591064453
    5. ':' → logprob: -12.625049591064453
    6. '   ' → logprob: -13.000049591064453
    7. 'process' → logprob: -14.250049591064453
    8. '      ' → logprob: -14.500049591064453
    9. '(process' → logprob: -14.500049591064453
    10. '
' → logprob: -14.875049591064453

Token 513: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.004694037605077028
    2. ' processor' → logprob: -5.754693984985352
    3. '       ' → logprob: -6.504693984985352
    4. 'process' → logprob: -11.004693984985352
    5. '.processor' → logprob: -13.379693984985352
    6. '   ' → logprob: -15.129693984985352
    7. '_processor' → logprob: -16.12969398498535
    8. 'processors' → logprob: -16.50469398498535
    9. 'Processor' → logprob: -17.12969398498535
    10. 'processing' → logprob: -17.75469398498535

Token 514: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.00010700009443098679
    2. '.' → logprob: -9.250106811523438
    3. 'process' → logprob: -11.500106811523438
    4. ' .' → logprob: -14.250106811523438
    5. ' process' → logprob: -16.500106811523438
    6. '.pro' → logprob: -18.625106811523438
    7. '	process' → logprob: -19.750106811523438
    8. '(process' → logprob: -20.250106811523438
    9. '.Process' → logprob: -20.500106811523438
    10. '   ' → logprob: -20.625106811523438

Token 515: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -6.630610641877865e-06
    2. 'initial' → logprob: -12.250006675720215
    3. '(' → logprob: -13.250006675720215
    4. '(init' → logprob: -18.5000057220459
    5. '(
' → logprob: -19.6250057220459
    6. '(in' → logprob: -19.7500057220459
    7. ' initial' → logprob: -21.0000057220459
    8. '(i' → logprob: -21.2500057220459
    9. ' (' → logprob: -21.3750057220459
    10. '(input' → logprob: -21.6250057220459

Token 516: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -1.1472419600977446e-06
    2. 'term' → logprob: -14.250000953674316
    3. '=' → logprob: -15.125000953674316
    4. '=_' → logprob: -17.250001907348633
    5. '_' → logprob: -17.375001907348633
    6. '_TERM' → logprob: -18.125001907348633
    7. '   ' → logprob: -18.375001907348633
    8. 'Term' → logprob: -18.500001907348633
    9. ' _' → logprob: -19.250001907348633
    10. '```' → logprob: -19.375001907348633

Token 517: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.578184497309849e-05
    2. '())' → logprob: -9.625085830688477
    3. ')
' → logprob: -11.625085830688477
    4. '()' → logprob: -12.375085830688477
    5. ' )' → logprob: -13.125085830688477
    6. '<|end|>' → logprob: -13.125085830688477
    7. '   ' → logprob: -13.625085830688477
    8. '       ' → logprob: -15.250085830688477
    9. '(' → logprob: -15.875085830688477
    10. '}' → logprob: -16.000085830688477

Token 518: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8193366486229934e-05
    2. '
' → logprob: -11.125018119812012
    3. ' if' → logprob: -13.125018119812012
    4. '```' → logprob: -14.000018119812012
    5. '<|end|>' → logprob: -14.625018119812012
    6. '    
' → logprob: -17.625019073486328
    7. '  
' → logprob: -18.000019073486328
    8. '\' → logprob: -18.625019073486328
    9. '#' → logprob: -19.250019073486328
    10. '

' → logprob: -19.375019073486328

Token 519: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023341214284300804
    2. '__' → logprob: -3.773341178894043
    3. ' ' → logprob: -9.898341178894043
    4. '_name' → logprob: -10.648341178894043
    5. 'name' → logprob: -11.648341178894043
    6. ' ' → logprob: -12.523341178894043
    7. '​' → logprob: -13.148341178894043
    8. '_' → logprob: -13.398341178894043
    9. ' name' → logprob: -13.648341178894043
    10. 'Name' → logprob: -14.398341178894043

Token 520: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012134261429309845
    2. ' ==' → logprob: -5.137134075164795
    3. '==' → logprob: -5.762134075164795
    4. ' __' → logprob: -5.887134075164795
    5. '__.__' → logprob: -9.637134552001953
    6. '.__' → logprob: -9.887134552001953
    7. '=="' → logprob: -10.012134552001953
    8. '[' → logprob: -10.887134552001953
    9. '__["' → logprob: -11.262134552001953
    10. '<|end|>' → logprob: -11.262134552001953

Token 521: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.6047699318733066e-05
    2. '==' → logprob: -11.750016212463379
    3. '__.__' → logprob: -12.375016212463379
    4. '=="' → logprob: -12.875016212463379
    5. '___' → logprob: -14.500016212463379
    6. '____' → logprob: -15.125016212463379
    7. ' ==' → logprob: -15.250016212463379
    8. '__["' → logprob: -15.750016212463379
    9. '__.' → logprob: -17.500015258789062
    10. '=='' → logprob: -17.875015258789062

Token 522: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0019466065568849444
    2. '==' → logprob: -6.376946449279785
    3. '=="' → logprob: -8.626946449279785
    4. ' ==' → logprob: -9.751946449279785
    5. '__.__' → logprob: -12.501946449279785
    6. '___' → logprob: -13.501946449279785
    7. '=='' → logprob: -14.376946449279785
    8. '__.' → logprob: -15.501946449279785
    9. '____' → logprob: -15.626946449279785
    10. '_' → logprob: -15.751946449279785

Token 523: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003189478302374482
    2. ''' → logprob: -5.753189563751221
    3. ' "__' → logprob: -11.503189086914062
    4. '__' → logprob: -13.503189086914062
    5. '"name' → logprob: -16.503189086914062
    6. '"user' → logprob: -16.753189086914062
    7. ' '__' → logprob: -16.878189086914062
    8. ''"' → logprob: -18.253189086914062
    9. '("__' → logprob: -18.628189086914062
    10. '"value' → logprob: -18.753189086914062

Token 524: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008680874481797218
    2. '__' → logprob: -4.758680820465088
    3. '_main' → logprob: -10.133681297302246
    4. 'name' → logprob: -10.758681297302246
    5. '"' → logprob: -13.508681297302246
    6. ' main' → logprob: -13.758681297302246
    7. 'built' → logprob: -14.133681297302246
    8. '-main' → logprob: -14.508681297302246
    9. '__":
' → logprob: -15.008681297302246
    10. '   ' → logprob: -15.383681297302246

Token 525: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018246285617351532
    2. '__' → logprob: -4.018246173858643
    3. '__':
' → logprob: -9.2682466506958
    4. '__.' → logprob: -13.3932466506958
    5. '__
' → logprob: -15.2682466506958
    6. '__.__' → logprob: -16.143245697021484
    7. '__
' → logprob: -16.143245697021484
    8. '_' → logprob: -16.518245697021484
    9. '__["' → logprob: -17.518245697021484
    10. '__",' → logprob: -18.518245697021484

Token 526: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1282820850610733
    2. '__' → logprob: -2.128282070159912
    3. ' main' → logprob: -7.253282070159912
    4. '"' → logprob: -7.503282070159912
    5. '_main' → logprob: -10.12828254699707
    6. ''' → logprob: -10.87828254699707
    7. '   ' → logprob: -11.62828254699707
    8. '	main' → logprob: -11.75328254699707
    9. '___' → logprob: -12.25328254699707
    10. '____' → logprob: -12.50328254699707

Token 527: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. 'import' → logprob: -18.75
    4. '	main' → logprob: -21.0
    5. '   ' → logprob: -22.125
    6. '.main' → logprob: -25.0
    7. '(main' → logprob: -25.375
    8. '
' → logprob: -25.75
    9. '_main' → logprob: -26.5
    10. '```' → logprob: -27.625

Token 528: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04664824530482292
    2. '<|end|>' → logprob: -3.5466482639312744
    3. '
' → logprob: -4.296648025512695
    4. '```' → logprob: -6.671648025512695
    5. '()
' → logprob: -6.796648025512695
    6. '\n' → logprob: -8.546648025512695
    7. '#' → logprob: -8.546648025512695
    8. '(' → logprob: -8.671648025512695
    9. ')' → logprob: -9.796648025512695
    10. '()\' → logprob: -10.296648025512695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 526
Tokens correctement prédits (1ère position, stricte): 281
Tokens correctement prédits (1ère position, avec adaptation): 313
Tokens correctement prédits (top 10): 485
Précision stricte (1ère position): 53.42%
Précision adaptée (1ère position): 59.51%
Précision (top 10): 92.21%
================================================================================
