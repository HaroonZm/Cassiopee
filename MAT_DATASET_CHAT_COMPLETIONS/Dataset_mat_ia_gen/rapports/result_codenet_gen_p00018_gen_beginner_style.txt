================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b, c, d, e = input().split()
a = int(a)
b = int(b)
c = int(c)
d = int(d)
e = int(e)

nums = [a, b, c, d, e]

# tri simple avec bubble sort pour un débutant
for i in range(len(nums)):
    for j in range(len(nums)-1):
        if nums[j] < nums[j+1]:
            temp = nums[j]
            nums[j] = nums[j+1]
            nums[j+1] = temp

for num in nums:
    print(num, end=' ')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07676442712545395
    2. '+' → logprob: -2.7017643451690674
    3. ' =' → logprob: -5.2017645835876465
    4. ',' → logprob: -7.7017645835876465
    5. '+=' → logprob: -8.201764106750488
    6. ' +' → logprob: -8.701764106750488
    7. ' ' → logprob: -9.451764106750488
    8. '*' → logprob: -9.576764106750488
    9. '```' → logprob: -10.201764106750488
    10. '.' → logprob: -10.576764106750488

Token 4: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10555914044380188
    2. ',' → logprob: -2.7305591106414795
    3. ' =' → logprob: -3.4805591106414795
    4. 'c' → logprob: -6.480559349060059
    5. ' ' → logprob: -7.105559349060059
    6. ',c' → logprob: -7.605559349060059
    7. '+' → logprob: -7.980559349060059
    8. '.' → logprob: -8.230559349060059
    9. '_' → logprob: -8.855559349060059
    10. ' ,' → logprob: -8.855559349060059

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04756644368171692
    2. '+' → logprob: -3.9225664138793945
    3. ' =' → logprob: -4.4225664138793945
    4. ',' → logprob: -4.4225664138793945
    5. ')' → logprob: -7.1725664138793945
    6. '```' → logprob: -7.5475664138793945
    7. '<|end|>' → logprob: -8.172566413879395
    8. '+=' → logprob: -8.547566413879395
    9. '[' → logprob: -8.672566413879395
    10. ' +' → logprob: -9.047566413879395

Token 6: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28239262104034424
    2. ' =' → logprob: -1.9073926210403442
    3. ',' → logprob: -3.0323925018310547
    4. 'd' → logprob: -3.2823925018310547
    5. '<|end|>' → logprob: -5.532392501831055
    6. ')' → logprob: -6.407392501831055
    7. '```' → logprob: -6.407392501831055
    8. ',d' → logprob: -6.657392501831055
    9. ' ' → logprob: -6.782392501831055
    10. '_' → logprob: -7.657392501831055

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02586035616695881
    2. '+' → logprob: -4.77586030960083
    3. ' =' → logprob: -4.77586030960083
    4. ',' → logprob: -4.90086030960083
    5. ')' → logprob: -7.90086030960083
    6. '<|end|>' → logprob: -9.025860786437988
    7. '[' → logprob: -9.275860786437988
    8. 'e' → logprob: -9.400860786437988
    9. '```' → logprob: -9.400860786437988
    10. '.' → logprob: -9.525860786437988

Token 8: ' e' (ID: 319)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008154709823429585
    2. ' =' → logprob: -5.00815486907959
    3. ',' → logprob: -7.13315486907959
    4. 'e' → logprob: -7.75815486907959
    5. ')' → logprob: -9.75815486907959
    6. '<|end|>' → logprob: -10.00815486907959
    7. '.' → logprob: -10.50815486907959
    8. '+' → logprob: -10.88315486907959
    9. ' ' → logprob: -10.88315486907959
    10. ';' → logprob: -11.38315486907959

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11375931650400162
    2. ',' → logprob: -2.6137592792510986
    3. ' =' → logprob: -4.363759517669678
    4. '+' → logprob: -4.988759517669678
    5. ')' → logprob: -5.363759517669678
    6. 'f' → logprob: -5.863759517669678
    7. '<|end|>' → logprob: -6.113759517669678
    8. '```' → logprob: -6.113759517669678
    9. '.' → logprob: -7.613759517669678
    10. '[' → logprob: -7.738759517669678

Token 10: ' input' (ID: 3422)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6371616125106812
    2. '1' → logprob: -0.8871616125106812
    3. ' ' → logprob: -3.2621617317199707
    4. '[' → logprob: -4.012161731719971
    5. ' [' → logprob: -6.262161731719971
    6. '10' → logprob: -8.137161254882812
    7. 'range' → logprob: -8.762161254882812
    8. '5' → logprob: -9.012161254882812
    9. 'a' → logprob: -9.762161254882812
    10. '(' → logprob: -9.887161254882812

Token 11: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0816645622253418
    2. '.' → logprob: -2.831664562225342
    3. '()' → logprob: -4.081664562225342
    4. '[' → logprob: -7.331664562225342
    5. '().' → logprob: -7.581664562225342
    6. ',' → logprob: -7.831664562225342
    7. '(.)' → logprob: -8.2066650390625
    8. '(
' → logprob: -8.8316650390625
    9. '```' → logprob: -8.8316650390625
    10. ''' → logprob: -9.7066650390625

Token 12: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.1868569254875183
    2. '.' → logprob: -1.811856985092163
    3. '.strip' → logprob: -5.186856746673584
    4. '().' → logprob: -7.311856746673584
    5. 'split' → logprob: -7.561856746673584
    6. ',' → logprob: -9.186857223510742
    7. '[' → logprob: -10.061857223510742
    8. '()' → logprob: -10.061857223510742
    9. '.s' → logprob: -10.561857223510742
    10. ' .' → logprob: -10.686857223510742

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011630436405539513
    2. '()' → logprob: -4.511630535125732
    3. '(
' → logprob: -8.886630058288574
    4. '('' → logprob: -9.011630058288574
    5. '`' → logprob: -9.261630058288574
    6. '```' → logprob: -9.886630058288574
    7. '(

' → logprob: -10.386630058288574
    8. ''' → logprob: -10.386630058288574
    9. '(`' → logprob: -10.761630058288574
    10. '("("' → logprob: -10.886630058288574

Token 14: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0501145124435425
    2. '=' → logprob: -1.4251145124435425
    3. '.' → logprob: -1.6751145124435425
    4. '[' → logprob: -3.175114631652832
    5. '#' → logprob: -3.425114631652832
    6. ',' → logprob: -3.800114631652832
    7. 'f' → logprob: -3.800114631652832
    8. '```' → logprob: -4.050114631652832
    9. '*' → logprob: -4.300114631652832
    10. '+' → logprob: -4.300114631652832

Token 15: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3981781303882599
    2. ' ' → logprob: -1.6481781005859375
    3. '[' → logprob: -2.6481781005859375
    4. '.' → logprob: -3.3981781005859375
    5. '<|end|>' → logprob: -4.3981781005859375
    6. '=' → logprob: -5.1481781005859375
    7. 'a' → logprob: -5.6481781005859375
    8. ')' → logprob: -5.6481781005859375
    9. '*' → logprob: -6.1481781005859375
    10. ',' → logprob: -7.1481781005859375

Token 16: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0056998236104846
    2. 'a' → logprob: -5.630699634552002
    3. 'float' → logprob: -6.880699634552002
    4. 'input' → logprob: -7.005699634552002
    5. ' int' → logprob: -9.50570011138916
    6. '0' → logprob: -9.75570011138916
    7. 'b' → logprob: -11.38070011138916
    8. '1' → logprob: -12.88070011138916
    9. 'str' → logprob: -12.88070011138916
    10. '[int' → logprob: -12.88070011138916

Token 17: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12696978449821472
    2. '(' → logprob: -2.126969814300537
    3. '('' → logprob: -10.626969337463379
    4. 'a' → logprob: -12.376969337463379
    5. '(input' → logprob: -12.501969337463379
    6. '((' → logprob: -13.626969337463379
    7. '()' → logprob: -13.751969337463379
    8. '(`' → logprob: -13.876969337463379
    9. '(

' → logprob: -13.876969337463379
    10. '(
' → logprob: -14.001969337463379

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017720005416776985
    2. ' )' → logprob: -8.875177383422852
    3. '+' → logprob: -10.500177383422852
    4. '<|end|>' → logprob: -12.125177383422852
    5. ')
' → logprob: -13.750177383422852
    6. ')a' → logprob: -14.625177383422852
    7. '*' → logprob: -14.750177383422852
    8. '),' → logprob: -14.875177383422852
    9. '+)' → logprob: -14.875177383422852
    10. '```' → logprob: -15.125177383422852

Token 19: 'b' (ID: 65)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09160846471786499
    2. '=' → logprob: -2.4666085243225098
    3. ')' → logprob: -6.84160852432251
    4. '<|end|>' → logprob: -7.59160852432251
    5. '+' → logprob: -7.96660852432251
    6. '*' → logprob: -8.341608047485352
    7. '=int' → logprob: -8.966608047485352
    8. ' +=' → logprob: -9.216608047485352
    9. ',' → logprob: -10.091608047485352
    10. ' *' → logprob: -10.591608047485352

Token 21: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061967913061380386
    2. ' int' → logprob: -2.8119678497314453
    3. '=int' → logprob: -16.186967849731445
    4. ' ' → logprob: -16.436967849731445
    5. '(int' → logprob: -16.686967849731445
    6. '<int' → logprob: -17.561967849731445
    7. '   ' → logprob: -18.186967849731445
    8. '	int' → logprob: -18.186967849731445
    9. '[int' → logprob: -18.311967849731445
    10. '  ' → logprob: -18.561967849731445

Token 22: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.5759725570678711
    2. '(' → logprob: -0.8259725570678711
    3. ' (' → logprob: -11.700972557067871
    4. '(a' → logprob: -12.450972557067871
    5. ')' → logprob: -12.825972557067871
    6. 'b' → logprob: -12.950972557067871
    7. ' ' → logprob: -13.075972557067871
    8. '(
' → logprob: -13.075972557067871
    9. '(B' → logprob: -13.325972557067871
    10. '(

' → logprob: -13.575972557067871

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. ')
' → logprob: -12.500011444091797
    3. '')' → logprob: -13.125011444091797
    4. '`)' → logprob: -13.250011444091797
    5. ' )' → logprob: -13.375011444091797
    6. '```' → logprob: -13.750011444091797
    7. '<|end|>' → logprob: -14.625011444091797
    8. '")' → logprob: -15.000011444091797
    9. ')

' → logprob: -16.000011444091797
    10. '*' → logprob: -16.125011444091797

Token 24: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15976577997207642
    2. '<|end|>' → logprob: -2.4097657203674316
    3. ' c' → logprob: -3.0347657203674316
    4. ' ' → logprob: -5.784765720367432
    5. ')' → logprob: -6.034765720367432
    6. ' 
' → logprob: -6.534765720367432
    7. '```' → logprob: -7.034765720367432
    8. ',' → logprob: -7.284765720367432
    9. '  
' → logprob: -8.53476619720459
    10. '<|end|>' → logprob: -8.90976619720459

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31399184465408325
    2. '=' → logprob: -1.3139917850494385
    3. ')' → logprob: -7.563992023468018
    4. '=int' → logprob: -9.43899154663086
    5. '<|end|>' → logprob: -9.56399154663086
    6. ' ' → logprob: -11.56399154663086
    7. '(' → logprob: -11.68899154663086
    8. '_' → logprob: -11.68899154663086
    9. ',' → logprob: -12.68899154663086
    10. '>' → logprob: -12.68899154663086

Token 26: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018151111900806427
    2. ' int' → logprob: -4.01815128326416
    3. '(int' → logprob: -14.01815128326416
    4. '=int' → logprob: -15.89315128326416
    5. '<int' → logprob: -15.89315128326416
    6. ' ' → logprob: -16.893150329589844
    7. '0' → logprob: -17.268150329589844
    8. '[int' → logprob: -17.643150329589844
    9. 'c' → logprob: -17.893150329589844
    10. '	int' → logprob: -18.143150329589844

Token 27: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20149511098861694
    2. '(c' → logprob: -1.7014951705932617
    3. ' (' → logprob: -11.076495170593262
    4. '(
' → logprob: -11.201495170593262
    5. '`' → logprob: -11.826495170593262
    6. '((' → logprob: -11.951495170593262
    7. '```' → logprob: -12.201495170593262
    8. '(a' → logprob: -12.326495170593262
    9. '(

' → logprob: -12.451495170593262
    10. ''' → logprob: -12.826495170593262

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ')
' → logprob: -12.375006675720215
    3. ')d' → logprob: -14.625006675720215
    4. '`)' → logprob: -14.750006675720215
    5. ' )' → logprob: -15.250006675720215
    6. '),' → logprob: -15.375006675720215
    7. '```' → logprob: -15.375006675720215
    8. '')' → logprob: -15.625006675720215
    9. 'd' → logprob: -15.625006675720215
    10. '<|end|>' → logprob: -15.750006675720215

Token 29: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5859870910644531
    2. ' d' → logprob: -0.8359870910644531
    3. '```' → logprob: -5.835987091064453
    4. ' 
' → logprob: -5.960987091064453
    5. ' ' → logprob: -6.210987091064453
    6. '  
' → logprob: -6.585987091064453
    7. '``' → logprob: -7.960987091064453
    8. '`' → logprob: -8.585987091064453
    9. '<|end|>' → logprob: -9.335987091064453
    10. ',d' → logprob: -9.585987091064453

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4461839199066162
    2. '=' → logprob: -1.0711839199066162
    3. ')' → logprob: -4.696184158325195
    4. '<|end|>' → logprob: -5.196184158325195
    5. ' ' → logprob: -7.196184158325195
    6. '=int' → logprob: -8.071184158325195
    7. '+' → logprob: -8.196184158325195
    8. ' ==' → logprob: -8.321184158325195
    9. '_' → logprob: -8.821184158325195
    10. '*' → logprob: -9.071184158325195

Token 31: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.25193095207214355
    2. 'int' → logprob: -1.5019309520721436
    3. '(int' → logprob: -14.251931190490723
    4. '=int' → logprob: -14.876931190490723
    5. '[int' → logprob: -15.626931190490723
    6. '	int' → logprob: -15.751931190490723
    7. ' ' → logprob: -15.876931190490723
    8. '<int' → logprob: -15.876931190490723
    9. '0' → logprob: -17.126930236816406
    10. ' ' → logprob: -17.126930236816406

Token 32: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05496770888566971
    2. '(d' → logprob: -2.9299676418304443
    3. '(int' → logprob: -10.304967880249023
    4. '(
' → logprob: -10.679967880249023
    5. ' (' → logprob: -11.929967880249023
    6. '(

' → logprob: -12.554967880249023
    7. '(a' → logprob: -12.804967880249023
    8. '(e' → logprob: -13.179967880249023
    9. '((' → logprob: -13.179967880249023
    10. ')' → logprob: -13.429967880249023

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -13.00000286102295
    3. ')d' → logprob: -15.12500286102295
    4. '')' → logprob: -16.250003814697266
    5. ' )' → logprob: -16.250003814697266
    6. '`)' → logprob: -16.500003814697266
    7. 'd' → logprob: -17.375003814697266
    8. '),' → logprob: -17.625003814697266
    9. ')c' → logprob: -17.750003814697266
    10. '#' → logprob: -17.750003814697266

Token 34: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0013034529983997345
    2. '```' → logprob: -7.376303672790527
    3. ' e' → logprob: -7.501303672790527
    4. ' 
' → logprob: -10.251303672790527
    5. '
' → logprob: -10.501303672790527
    6. '``' → logprob: -10.626303672790527
    7. '\n' → logprob: -11.376303672790527
    8. '\e' → logprob: -12.126303672790527
    9. '`' → logprob: -12.251303672790527
    10. '\' → logprob: -12.626303672790527

Token 35: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16022492945194244
    2. 'int' → logprob: -1.9102249145507812
    3. ' ' → logprob: -15.035224914550781
    4. '(int' → logprob: -15.660224914550781
    5. '=int' → logprob: -16.16022491455078
    6. ' ' → logprob: -17.53522491455078
    7. '<int' → logprob: -17.53522491455078
    8. ' float' → logprob: -17.53522491455078
    9. '0' → logprob: -17.53522491455078
    10. '[int' → logprob: -17.66022491455078

Token 37: '(e' (ID: 3454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.387345552444458
    2. '(e' → logprob: -1.137345552444458
    3. '(a' → logprob: -8.387345314025879
    4. 'e' → logprob: -9.262345314025879
    5. '(
' → logprob: -10.512345314025879
    6. '('' → logprob: -10.887345314025879
    7. ' (' → logprob: -11.137345314025879
    8. '((' → logprob: -11.137345314025879
    9. '(input' → logprob: -11.512345314025879
    10. '```' → logprob: -11.637345314025879

Token 38: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. '))' → logprob: -17.5
    4. ')
' → logprob: -17.75
    5. '')' → logprob: -18.0
    6. '),' → logprob: -18.375
    7. ')`' → logprob: -19.0
    8. ')#' → logprob: -19.125
    9. '#' → logprob: -19.25
    10. '`)' → logprob: -19.25

Token 39: 'nums' (ID: 44465)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3096075654029846
    2. 'if' → logprob: -1.5596075057983398
    3. '+' → logprob: -4.68460750579834
    4. 's' → logprob: -4.80960750579834
    5. 'f' → logprob: -4.80960750579834
    6. ',' → logprob: -5.30960750579834
    7. 'x' → logprob: -5.30960750579834
    8. 'r' → logprob: -5.68460750579834
    9. 'w' → logprob: -5.80960750579834
    10. 'n' → logprob: -6.43460750579834

Token 40: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35235530138015747
    2. '[' → logprob: -1.2273552417755127
    3. '.count' → logprob: -6.727355480194092
    4. '.sort' → logprob: -7.102355480194092
    5. '=' → logprob: -7.602355480194092
    6. '.append' → logprob: -7.727355480194092
    7. ' =' → logprob: -8.727355003356934
    8. '[:]' → logprob: -8.852355003356934
    9. '<|end|>' → logprob: -9.102355003356934
    10. '_' → logprob: -9.352355003356934

Token 41: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3166981637477875
    2. '[a' → logprob: -1.3166981935501099
    3. '[' → logprob: -6.56669807434082
    4. ' []' → logprob: -6.94169807434082
    5. '[]' → logprob: -7.31669807434082
    6. '[b' → logprob: -8.06669807434082
    7. '[int' → logprob: -10.94169807434082
    8. 'a' → logprob: -11.31669807434082
    9. '[e' → logprob: -11.44169807434082
    10. 'sorted' → logprob: -12.06669807434082

Token 42: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.014684110297821e-06
    2. ' a' → logprob: -11.625008583068848
    3. '0' → logprob: -16.875009536743164
    4. 'b' → logprob: -18.000009536743164
    5. '	a' → logprob: -18.750009536743164
    6. ']' → logprob: -18.875009536743164
    7. ')a' → logprob: -19.125009536743164
    8. '_a' → logprob: -19.875009536743164
    9. ')' → logprob: -20.125009536743164
    10. '   ' → logprob: -20.375009536743164

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002100965939462185
    2. ',b' → logprob: -8.62520980834961
    3. ' ,' → logprob: -10.50020980834961
    4. ',
' → logprob: -13.00020980834961
    5. ')' → logprob: -15.25020980834961
    6. ',d' → logprob: -15.75020980834961
    7. '‌,' → logprob: -16.50020980834961
    8. ',

' → logprob: -16.50020980834961
    9. ']' → logprob: -16.87520980834961
    10. ',a' → logprob: -17.37520980834961

Token 44: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07916461676359177
    2. ' b' → logprob: -2.579164505004883
    3. ' ' → logprob: -8.204164505004883
    4. ',' → logprob: -14.954164505004883
    5. ' ,' → logprob: -14.954164505004883
    6. 'space' → logprob: -15.454164505004883
    7. '	b' → logprob: -16.204164505004883
    8. ',b' → logprob: -16.704164505004883
    9. ' ' → logprob: -16.704164505004883
    10. ' б' → logprob: -17.079164505004883

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8351892473874614e-05
    2. ' ,' → logprob: -10.625048637390137
    3. ',
' → logprob: -11.000048637390137
    4. ')' → logprob: -13.250048637390137
    5. ']' → logprob: -13.375048637390137
    6. ',c' → logprob: -13.625048637390137
    7. ',d' → logprob: -13.875048637390137
    8. ',b' → logprob: -13.875048637390137
    9. '`,' → logprob: -15.375048637390137
    10. '```' → logprob: -16.00004768371582

Token 46: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25192946195602417
    2. ' c' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.50192928314209
    4. ',c' → logprob: -16.376930236816406
    5. '	c' → logprob: -16.376930236816406
    6. 'd' → logprob: -18.876930236816406
    7. ',' → logprob: -19.001930236816406
    8. '_c' → logprob: -19.001930236816406
    9. ' ' → logprob: -19.126930236816406
    10. ')c' → logprob: -19.126930236816406

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003570343542378396
    2. ',d' → logprob: -8.125356674194336
    3. ' ,' → logprob: -9.875356674194336
    4. ']' → logprob: -12.125356674194336
    5. ',
' → logprob: -13.125356674194336
    6. ')' → logprob: -14.000356674194336
    7. 'd' → logprob: -14.250356674194336
    8. '```' → logprob: -16.250356674194336
    9. ',b' → logprob: -16.375356674194336
    10. '`,' → logprob: -16.375356674194336

Token 48: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38841357827186584
    2. ' d' → logprob: -1.1384135484695435
    3. ' ' → logprob: -6.513413429260254
    4. ' ,' → logprob: -10.638413429260254
    5. ''' → logprob: -11.138413429260254
    6. ',' → logprob: -12.263413429260254
    7. '"' → logprob: -12.888413429260254
    8. ' ' → logprob: -13.138413429260254
    9. '4' → logprob: -13.763413429260254
    10. '	d' → logprob: -14.013413429260254

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000321995816193521
    2. ',e' → logprob: -9.000322341918945
    3. ']' → logprob: -9.125322341918945
    4. ' ,' → logprob: -9.625322341918945
    5. 'e' → logprob: -11.500322341918945
    6. ')' → logprob: -11.500322341918945
    7. ',
' → logprob: -12.875322341918945
    8. ',f' → logprob: -15.875322341918945
    9. ' ]' → logprob: -16.000322341918945
    10. ' ' → logprob: -16.125322341918945

Token 50: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.474082350730896
    2. 'e' → logprob: -0.974082350730896
    3. ' ' → logprob: -12.224081993103027
    4. ''e' → logprob: -16.099082946777344
    5. '	e' → logprob: -16.599082946777344
    6. ' ' → logprob: -16.724082946777344
    7. ',e' → logprob: -17.224082946777344
    8. ''' → logprob: -17.349082946777344
    9. '`' → logprob: -17.599082946777344
    10. 'ｅ' → logprob: -17.849082946777344

Token 51: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -3.292907877039397e-06
    2. ' ]' → logprob: -13.25000286102295
    3. ']
' → logprob: -14.50000286102295
    4. ')' → logprob: -14.62500286102295
    5. ',' → logprob: -15.50000286102295
    6. ')]' → logprob: -16.125003814697266
    7. '])' → logprob: -17.625003814697266
    8. '`]' → logprob: -17.750003814697266
    9. '']' → logprob: -17.875003814697266
    10. '],' → logprob: -18.000003814697266

Token 52: '#' (ID: 2)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -1.1031063795089722
    2. 's' → logprob: -1.7281063795089722
    3. 'n' → logprob: -2.2281064987182617
    4. 'max' → logprob: -2.4781064987182617
    5. '.' → logprob: -2.7281064987182617
    6. '\n' → logprob: -2.8531064987182617
    7. 'm' → logprob: -2.9781064987182617
    8. 'sum' → logprob: -3.7281064987182617
    9. '[' → logprob: -4.478106498718262
    10. '=' → logprob: -4.603106498718262

Token 53: ' tri' (ID: 12665)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.1829594075679779
    2. 'max' → logprob: -3.3079593181610107
    3. ' nums' → logprob: -3.5579593181610107
    4. 's' → logprob: -3.9329593181610107
    5. 'sum' → logprob: -4.18295955657959
    6. 'result' → logprob: -4.43295955657959
    7. 'sorted' → logprob: -4.68295955657959
    8. 'for' → logprob: -4.80795955657959
    9. 'count' → logprob: -5.30795955657959
    10. 'total' → logprob: -5.43295955657959

Token 54: ' simple' (ID: 4705)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.7127313613891602
    2. 'angles' → logprob: -1.4627313613891602
    3. 'p' → logprob: -1.8377313613891602
    4. 'angle' → logprob: -3.08773136138916
    5. 'ples' → logprob: -4.21273136138916
    6. 'n' → logprob: -4.33773136138916
    7. '=' → logprob: -4.58773136138916
    8. 'pl' → logprob: -5.08773136138916
    9. 'plets' → logprob: -5.21273136138916
    10. 'plet' → logprob: -5.46273136138916

Token 55: ' avec' (ID: 3937)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0196778774261475
    2. 's' → logprob: -1.6446778774261475
    3. ' =' → logprob: -2.1446778774261475
    4. '=' → logprob: -2.2696778774261475
    5. '_' → logprob: -2.7696778774261475
    6. '.' → logprob: -3.0196778774261475
    7. 'angles' → logprob: -3.1446778774261475
    8. 'p' → logprob: -4.144678115844727
    9. 'a' → logprob: -4.644678115844727
    10. ',' → logprob: -4.894678115844727

Token 56: ' bubble' (ID: 40447)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.7993914484977722
    2. 'sorted' → logprob: -1.174391508102417
    3. 'for' → logprob: -2.424391508102417
    4. ' nums' → logprob: -2.924391508102417
    5. ' sorted' → logprob: -3.549391508102417
    6. ' for' → logprob: -3.549391508102417
    7. 'range' → logprob: -4.549391269683838
    8. ' la' → logprob: -5.049391269683838
    9. 'len' → logprob: -5.299391269683838
    10. 'l' → logprob: -5.924391269683838

Token 57: ' sort' (ID: 4506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9173403382301331
    2. ' for' → logprob: -1.1673402786254883
    3. '
' → logprob: -1.2923402786254883
    4. ' 
' → logprob: -4.667340278625488
    5. 'n' → logprob: -6.542340278625488
    6. '  
' → logprob: -6.667340278625488
    7. ' ' → logprob: -7.167340278625488
    8. '' → logprob: -7.667340278625488
    9. '```' → logprob: -7.792340278625488
    10. '\n' → logprob: -8.167340278625488

Token 58: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20879168808460236
    2. ' for' → logprob: -1.708791732788086
    3. '
' → logprob: -4.958791732788086
    4. 'n' → logprob: -8.583791732788086
    5. '```' → logprob: -9.458791732788086
    6. '\n' → logprob: -10.333791732788086
    7. ' 
' → logprob: -10.708791732788086
    8. '``' → logprob: -12.708791732788086
    9. '' → logprob: -13.458791732788086
    10. '​
' → logprob: -14.083791732788086

Token 59: ' un' (ID: 537)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01095915399491787
    2. 'i' → logprob: -4.635959148406982
    3. ' j' → logprob: -7.760959148406982
    4. ' range' → logprob: -8.13595962524414
    5. ' n' → logprob: -8.26095962524414
    6. ' len' → logprob: -9.76095962524414
    7. ' l' → logprob: -10.01095962524414
    8. ' la' → logprob: -10.63595962524414
    9. ' ' → logprob: -11.38595962524414
    10. ' chaque' → logprob: -11.51095962524414

Token 60: ' début' (ID: 29589)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.609544038772583
    2. ' i' → logprob: -0.859544038772583
    3. ' range' → logprob: -3.609544038772583
    4. 'range' → logprob: -5.734543800354004
    5. ' for' → logprob: -6.734543800354004
    6. 'for' → logprob: -7.484543800354004
    7. 'e' → logprob: -8.234543800354004
    8. 's' → logprob: -8.859543800354004
    9. ' ' → logprob: -9.359543800354004
    10. ' ' → logprob: -9.359543800354004

Token 61: 'ant' (ID: 493)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09159889072179794
    2. 'for' → logprob: -2.7165989875793457
    3. ' for' → logprob: -3.9665989875793457
    4. ':' → logprob: -7.341598987579346
    5. ' 
' → logprob: -7.341598987579346
    6. '' → logprob: -8.091598510742188
    7. '  
' → logprob: -8.591598510742188
    8. ':
' → logprob: -8.591598510742188
    9. '\n' → logprob: -9.091598510742188
    10. '

' → logprob: -9.466598510742188

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6164103150367737
    2. 'for' → logprob: -0.8664103150367737
    3. ' for' → logprob: -3.241410255432129
    4. '\n' → logprob: -8.741410255432129
    5. ' 
' → logprob: -9.116410255432129
    6. 'n' → logprob: -9.241410255432129
    7. '```' → logprob: -9.241410255432129
    8. '  
' → logprob: -10.366410255432129
    9. '' → logprob: -11.241410255432129
    10. '
' → logprob: -11.241410255432129

Token 63: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6439877152442932
    2. '
' → logprob: -0.8939877152442932
    3. ' for' → logprob: -2.7689876556396484
    4. '\n' → logprob: -6.268987655639648
    5. ' 
' → logprob: -7.143987655639648
    6. 'n' → logprob: -8.268987655639648
    7. '

' → logprob: -10.268987655639648
    8. '
' → logprob: -10.768987655639648
    9. '  
' → logprob: -10.893987655639648
    10. '```' → logprob: -11.143987655639648

Token 64: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0028954518493264914
    2. 'i' → logprob: -5.877895355224609
    3. ' ' → logprob: -9.62789535522461
    4. ' ' → logprob: -11.12789535522461
    5. '	i' → logprob: -12.50289535522461
    6. ' _' → logprob: -12.75289535522461
    7. ' range' → logprob: -13.00289535522461
    8. '  ' → logprob: -15.12789535522461
    9. '_i' → logprob: -15.75289535522461
    10. ' ‌' → logprob: -15.75289535522461

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019111462170258164
    2. 'in' → logprob: -6.376911163330078
    3. ' ' → logprob: -8.501911163330078
    4. '  ' → logprob: -13.001911163330078
    5. ' i' → logprob: -14.001911163330078
    6. ' ' → logprob: -14.501911163330078
    7. '	in' → logprob: -14.751911163330078
    8. 'range' → logprob: -15.001911163330078
    9. '   ' → logprob: -15.251911163330078
    10. '```' → logprob: -15.626911163330078

Token 66: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0040801819413900375
    2. 'range' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.754079818725586
    4. '	range' → logprob: -14.879079818725586
    5. ' ' → logprob: -16.754079818725586
    6. '   ' → logprob: -16.754079818725586
    7. '  ' → logprob: -17.004079818725586
    8. ' ran' → logprob: -17.004079818725586
    9. '0' → logprob: -17.004079818725586
    10. ' len' → logprob: -17.629079818725586

Token 67: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.386901319026947
    2. '(len' → logprob: -1.1369013786315918
    3. ' (' → logprob: -11.136900901794434
    4. ' len' → logprob: -11.386900901794434
    5. '(n' → logprob: -13.511900901794434
    6. '(
' → logprob: -13.761900901794434
    7. 'len' → logprob: -14.136900901794434
    8. '(length' → logprob: -14.511900901794434
    9. ' ' → logprob: -15.761900901794434
    10. '(l' → logprob: -16.01190185546875

Token 68: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.0011824887478724122
    2. '(' → logprob: -6.751182556152344
    3. '(num' → logprob: -11.626182556152344
    4. '(numbers' → logprob: -13.126182556152344
    5. ' (' → logprob: -14.501182556152344
    6. ' nums' → logprob: -14.626182556152344
    7. ')' → logprob: -15.751182556152344
    8. '(
' → logprob: -16.501182556152344
    9. '(n' → logprob: -16.751182556152344
    10. 'nums' → logprob: -16.876182556152344

Token 69: ')):
' (ID: 22530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11768874526023865
    2. ')):' → logprob: -2.7426886558532715
    3. '))' → logprob: -4.1176886558532715
    4. ' ))' → logprob: -4.3676886558532715
    5. ')-' → logprob: -4.8676886558532715
    6. ' )' → logprob: -5.7426886558532715
    7. '-' → logprob: -5.7426886558532715
    8. ' -' → logprob: -5.9926886558532715
    9. ' ):' → logprob: -7.7426886558532715
    10. '):' → logprob: -7.9926886558532715

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7307088375091553
    2. '    ' → logprob: -0.8557088375091553
    3. ' for' → logprob: -2.8557088375091553
    4. ' ' → logprob: -4.230709075927734
    5. ' :' → logprob: -4.855709075927734
    6. 'for' → logprob: -5.230709075927734
    7. ':' → logprob: -5.230709075927734
    8. '     
' → logprob: -7.355709075927734
    9. '    
' → logprob: -7.605709075927734
    10. '  ' → logprob: -7.855709075927734

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.049309659749269485
    2. 'for' (adapté à ' for') → logprob: -3.049309730529785
    3. '   ' → logprob: -8.299309730529785
    4. '    ' → logprob: -8.549309730529785
    5. ' range' → logprob: -8.799309730529785
    6. ' j' → logprob: -9.424309730529785
    7. 'range' → logprob: -10.549309730529785
    8. ' ' → logprob: -11.299309730529785
    9. 'j' → logprob: -12.424309730529785
    10. '	for' → logprob: -12.674309730529785

Token 72: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0068376800045371056
    2. 'range' → logprob: -5.006837844848633
    3. ' j' → logprob: -9.381837844848633
    4. ' ' → logprob: -10.256837844848633
    5. '	range' → logprob: -13.381837844848633
    6. ')' → logprob: -14.881837844848633
    7. ' xrange' → logprob: -15.256837844848633
    8. ' ' → logprob: -15.381837844848633
    9. '(range' → logprob: -15.756837844848633
    10. 'j' → logprob: -15.881837844848633

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00408884696662426
    2. 'in' → logprob: -6.129088878631592
    3. ' ' → logprob: -6.629088878631592
    4. '    ' → logprob: -8.379088401794434
    5. ' range' → logprob: -8.379088401794434
    6. 'range' → logprob: -10.004088401794434
    7. '<|end|>' → logprob: -10.504088401794434
    8. ')' → logprob: -11.879088401794434
    9. '	in' → logprob: -12.004088401794434
    10. ' ' → logprob: -12.129088401794434

Token 74: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759432911872864
    2. ' range' → logprob: -0.8259432911872864
    3. '(range' → logprob: -12.950942993164062
    4. ' len' → logprob: -14.450942993164062
    5. ' ' → logprob: -14.950942993164062
    6. 'len' → logprob: -15.200942993164062
    7. '	range' → logprob: -16.075942993164062
    8. '0' → logprob: -16.450942993164062
    9. ' in' → logprob: -16.950942993164062
    10. '   ' → logprob: -17.950942993164062

Token 75: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.014165159314870834
    2. '(' → logprob: -4.264164924621582
    3. '(l' → logprob: -14.264164924621582
    4. ' len' → logprob: -14.764164924621582
    5. '(i' → logprob: -15.514164924621582
    6. '(range' → logprob: -15.889164924621582
    7. 'len' → logprob: -16.1391658782959
    8. '<len' → logprob: -16.3891658782959
    9. ' (' → logprob: -16.6391658782959
    10. '((' → logprob: -17.5141658782959

Token 76: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.250001907348633
    3. 'nums' → logprob: -16.000001907348633
    4. '(num' → logprob: -16.000001907348633
    5. '(numbers' → logprob: -16.375001907348633
    6. ' nums' → logprob: -17.875001907348633
    7. ' (' → logprob: -19.000001907348633
    8. '(n' → logprob: -19.250001907348633
    9. '(ids' → logprob: -19.750001907348633
    10. '(tokens' → logprob: -20.250001907348633

Token 77: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006564741022884846
    2. '()' → logprob: -5.381564617156982
    3. ')-' → logprob: -6.756564617156982
    4. ' )' → logprob: -7.381564617156982
    5. '())' → logprob: -9.38156509399414
    6. '()-' → logprob: -10.38156509399414
    7. ' -' → logprob: -11.50656509399414
    8. '-' → logprob: -11.75656509399414
    9. '1' → logprob: -12.25656509399414
    10. '   ' → logprob: -12.38156509399414

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006546385586261749
    2. 'i' → logprob: -5.131546497344971
    3. ' ' → logprob: -7.631546497344971
    4. ' i' → logprob: -9.006546020507812
    5. '   ' → logprob: -11.756546020507812
    6. '-' → logprob: -14.006546020507812
    7. '(i' → logprob: -14.756546020507812
    8. '	i' → logprob: -15.381546020507812
    9. ' -' → logprob: -15.506546020507812
    10. '  ' → logprob: -15.631546020507812

Token 79: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.019657891243696213
    2. '-i' → logprob: -4.019658088684082
    3. '):' → logprob: -6.894658088684082
    4. '-' → logprob: -7.769658088684082
    5. '):
' → logprob: -9.894658088684082
    6. ' ):' → logprob: -11.894658088684082
    7. '   ' → logprob: -12.144658088684082
    8. ')' → logprob: -12.144658088684082
    9. '    ' → logprob: -13.769658088684082
    10. ' ' → logprob: -14.144658088684082

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015234333695843816
    2. '        ' → logprob: -7.626523494720459
    3. ' if' → logprob: -8.0015230178833
    4. '    ' → logprob: -8.1265230178833
    5. ' ' → logprob: -9.3765230178833
    6. '   ' → logprob: -9.6265230178833
    7. '        
' → logprob: -9.6265230178833
    8. '<|end|>' → logprob: -9.6265230178833
    9. 'if' → logprob: -10.1265230178833
    10. '      ' → logprob: -10.5015230178833

Token 81: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34402185678482056
    2. 'if' (adapté à ' if') → logprob: -1.7190217971801758
    3. '       ' → logprob: -2.969021797180176
    4. '           ' → logprob: -2.969021797180176
    5. '   ' → logprob: -4.844021797180176
    6. '    ' → logprob: -7.219021797180176
    7. ' ' → logprob: -8.219021797180176
    8. '	if' → logprob: -9.094021797180176
    9. '        ' → logprob: -10.219021797180176
    10. '  ' → logprob: -10.844021797180176

Token 82: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.00038419815246015787
    2. 'nums' → logprob: -7.875384330749512
    3. '(nums' → logprob: -12.875384330749512
    4. ' ' → logprob: -14.250384330749512
    5. ' num' → logprob: -14.375384330749512
    6. ' ' → logprob: -15.250384330749512
    7. ' numbers' → logprob: -16.875383377075195
    8. '    ' → logprob: -18.000383377075195
    9. '_nums' → logprob: -18.125383377075195
    10. 's' → logprob: -18.375383377075195

Token 83: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.149051427608356e-05
    2. '[' → logprob: -9.500081062316895
    3. ' [' → logprob: -12.000081062316895
    4. '[i' → logprob: -15.250081062316895
    5. '```' → logprob: -17.25008201599121
    6. '[js' → logprob: -17.87508201599121
    7. ' ' → logprob: -18.12508201599121
    8. 'j' → logprob: -18.25008201599121
    9. '   ' → logprob: -18.50008201599121
    10. '[
' → logprob: -18.62508201599121

Token 84: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1797567754983902
    2. '>' → logprob: -1.804756760597229
    3. ' ' → logprob: -11.929757118225098
    4. '```' → logprob: -14.054757118225098
    5. ']>' → logprob: -14.179757118225098
    6. ']' → logprob: -14.179757118225098
    7. ')' → logprob: -14.304757118225098
    8. '">' → logprob: -14.304757118225098
    9. '[' → logprob: -14.929757118225098
    10. ')>' → logprob: -15.304757118225098

Token 85: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.17974989116191864
    2. ' >' → logprob: -1.804749846458435
    3. ' ' → logprob: -12.804749488830566
    4. '">' → logprob: -15.054749488830566
    5. '[' → logprob: -15.054749488830566
    6. '```' → logprob: -15.179749488830566
    7. '1' → logprob: -15.804749488830566
    8. '>a' → logprob: -16.554750442504883
    9. '>NN' → logprob: -16.554750442504883
    10. ' >

' → logprob: -16.554750442504883

Token 86: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.1426922082901001
    2. 'nums' → logprob: -2.0176920890808105
    3. '=' → logprob: -12.017692565917969
    4. ' ' → logprob: -12.267692565917969
    5. '(nums' → logprob: -12.392692565917969
    6. '_nums' → logprob: -14.517692565917969
    7. 'num' → logprob: -14.892692565917969
    8. 'n' → logprob: -15.142692565917969
    9. 'Nums' → logprob: -15.517692565917969
    10. ' ' → logprob: -15.642692565917969

Token 87: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0008578622946515679
    2. 's' → logprob: -7.625857830047607
    3. '[' → logprob: -8.500858306884766
    4. '+' → logprob: -8.750858306884766
    5. 'nums' → logprob: -12.625858306884766
    6. '   ' → logprob: -14.000858306884766
    7. '```' → logprob: -14.000858306884766
    8. '[i' → logprob: -14.125858306884766
    9. '1' → logprob: -14.625858306884766
    10. '][' → logprob: -14.750858306884766

Token 88: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.620622712536715e-05
    2. ' +' → logprob: -10.000045776367188
    3. '1' → logprob: -14.625045776367188
    4. '+j' → logprob: -16.125045776367188
    5. ']' → logprob: -17.125045776367188
    6. '+
' → logprob: -17.125045776367188
    7. '+]' → logprob: -17.250045776367188
    8. '[' → logprob: -17.625045776367188
    9. '   ' → logprob: -17.875045776367188
    10. '-' → logprob: -18.125045776367188

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4881879400927573e-05
    2. ' ' → logprob: -10.375035285949707
    3. ']' → logprob: -13.125035285949707
    4. '0' → logprob: -13.875035285949707
    5. '   ' → logprob: -14.875035285949707
    6. 'i' → logprob: -15.875035285949707
    7. '  ' → logprob: -17.06253433227539
    8. '```' → logprob: -17.56253433227539
    9. '2' → logprob: -17.68753433227539
    10. '    ' → logprob: -17.93753433227539

Token 90: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015736011788249016
    2. ':' → logprob: -4.390736103057861
    3. ']:' → logprob: -5.890736103057861
    4. '       ' → logprob: -8.515735626220703
    5. '>:' → logprob: -9.765735626220703
    6. '}:' → logprob: -9.890735626220703
    7. ' ):' → logprob: -10.015735626220703
    8. '):
' → logprob: -10.265735626220703
    9. ')' → logprob: -10.390735626220703
    10. '   ' → logprob: -11.890735626220703

Token 91: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025592572055757046
    2. '            
' → logprob: -8.002559661865234
    3. '\n' → logprob: -8.127559661865234
    4. '       ' → logprob: -8.127559661865234
    5. '<|end|>' → logprob: -8.127559661865234
    6. ' ' → logprob: -8.252559661865234
    7. '            ' → logprob: -8.252559661865234
    8. ' 
' → logprob: -8.877559661865234
    9. '        ' → logprob: -8.877559661865234
    10. ',' → logprob: -9.627559661865234

Token 92: ' temp' (ID: 5484)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.34130749106407166
    2. 'nums' → logprob: -1.341307520866394
    3. '           ' → logprob: -3.9663074016571045
    4. '               ' → logprob: -4.966307640075684
    5. '(nums' → logprob: -8.091307640075684
    6. '            ' → logprob: -8.216307640075684
    7. ' 
' → logprob: -8.966307640075684
    8. '                
' → logprob: -8.966307640075684
    9. '            
' → logprob: -9.091307640075684
    10. ' num' → logprob: -9.466307640075684

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03807179257273674
    2. '=' → logprob: -3.288071870803833
    3. ',' → logprob: -10.663071632385254
    4. ' ' → logprob: -12.913071632385254
    5. '           ' → logprob: -14.663071632385254
    6. 's' → logprob: -14.788071632385254
    7. '    ' → logprob: -14.913071632385254
    8. '   ' → logprob: -14.913071632385254
    9. '<|end|>' → logprob: -14.913071632385254
    10. '=num' → logprob: -15.163071632385254

Token 94: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.029751762747764587
    2. ' nums' → logprob: -3.529751777648926
    3. 'num' → logprob: -13.779751777648926
    4. '(nums' → logprob: -15.404751777648926
    5. '   ' → logprob: -17.52975082397461
    6. ' ' → logprob: -17.77975082397461
    7. 'n' → logprob: -17.90475082397461
    8. '    ' → logprob: -18.02975082397461
    9. '_nums' → logprob: -18.40475082397461
    10. 'Nums' → logprob: -19.52975082397461

Token 95: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.500001907348633
    3. 'j' → logprob: -17.375001907348633
    4. '[i' → logprob: -18.250001907348633
    5. ' [' → logprob: -18.625001907348633
    6. '```' → logprob: -19.000001907348633
    7. '[js' → logprob: -19.000001907348633
    8. '[
' → logprob: -20.875001907348633
    9. ' ' → logprob: -21.250001907348633
    10. '[]' → logprob: -21.250001907348633

Token 96: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2293998897075653
    2. ']
' → logprob: -1.6043999195098877
    3. ']
' → logprob: -5.979399681091309
    4. '+' → logprob: -6.604399681091309
    5. ']

' → logprob: -10.229399681091309
    6. ' ]' → logprob: -10.229399681091309
    7. ' ]
' → logprob: -11.229399681091309
    8. '+j' → logprob: -12.979399681091309
    9. ']

' → logprob: -13.354399681091309
    10. '[j' → logprob: -13.604399681091309

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001358400477329269
    2. ' =' → logprob: -9.75013542175293
    3. 'nums' → logprob: -10.50013542175293
    4. '=' → logprob: -10.75013542175293
    5. '       ' → logprob: -11.62513542175293
    6. '   ' → logprob: -12.87513542175293
    7. '          ' → logprob: -12.87513542175293
    8. 'n' → logprob: -12.87513542175293
    9. ' nums' → logprob: -13.37513542175293
    10. '<|end|>' → logprob: -13.37513542175293

Token 98: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' (adapté à ' nums') → logprob: -0.40275800228118896
    2. ' nums' → logprob: -1.152758002281189
    3. '           ' → logprob: -4.1527581214904785
    4. '       ' → logprob: -11.65275764465332
    5. '   ' → logprob: -11.90275764465332
    6. 'num' → logprob: -12.02775764465332
    7. '               ' → logprob: -12.15275764465332
    8. '(nums' → logprob: -12.15275764465332
    9. '            ' → logprob: -13.02775764465332
    10. ' ' → logprob: -13.02775764465332

Token 99: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.0126840758603066e-05
    2. '[' → logprob: -10.125040054321289
    3. '[js' → logprob: -16.87504005432129
    4. ' [' → logprob: -17.62504005432129
    5. 'j' → logprob: -18.62504005432129
    6. '][' → logprob: -19.37504005432129
    7. '[i' → logprob: -19.37504005432129
    8. '```' → logprob: -19.37504005432129
    9. '	j' → logprob: -19.75004005432129
    10. ']' → logprob: -19.75004005432129

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0049997554160654545
    2. '+' → logprob: -5.37999963760376
    3. ']=' → logprob: -8.255000114440918
    4. '=' → logprob: -9.630000114440918
    5. '],' → logprob: -10.130000114440918
    6. ' ]' → logprob: -11.505000114440918
    7. '+]' → logprob: -13.880000114440918
    8. ' =' → logprob: -14.130000114440918
    9. ')' → logprob: -14.255000114440918
    10. '+j' → logprob: -14.630000114440918

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410833835601807
    2. '=' → logprob: -0.9741083383560181
    3. ',' → logprob: -11.474108695983887
    4. 'nums' → logprob: -11.724108695983887
    5. ' ' → logprob: -12.724108695983887
    6. ' nums' → logprob: -12.849108695983887
    7. '=
' → logprob: -13.724108695983887
    8. ']' → logprob: -13.849108695983887
    9. '=j' → logprob: -13.849108695983887
    10. '=num' → logprob: -14.099108695983887

Token 102: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.061969030648469925
    2. ' nums' → logprob: -2.811969041824341
    3. 'num' → logprob: -14.436968803405762
    4. '(nums' → logprob: -14.686968803405762
    5. '   ' → logprob: -15.686968803405762
    6. '           ' → logprob: -16.436969757080078
    7. ' ' → logprob: -16.936969757080078
    8. '       ' → logprob: -17.311969757080078
    9. 'Nums' → logprob: -17.686969757080078
    10. '_nums' → logprob: -18.311969757080078

Token 103: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07930084317922592
    2. 's' → logprob: -2.579300880432129
    3. '[' → logprob: -7.954300880432129
    4. 'nums' → logprob: -10.079300880432129
    5. '[s' → logprob: -11.079300880432129
    6. '[js' → logprob: -13.954300880432129
    7. ' [' → logprob: -14.954300880432129
    8. 'es' → logprob: -14.954300880432129
    9. '```' → logprob: -15.079300880432129
    10. '[num' → logprob: -15.829300880432129

Token 104: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00018125296628568321
    2. ' +' → logprob: -8.625181198120117
    3. '+j' → logprob: -13.375181198120117
    4. '+
' → logprob: -17.250181198120117
    5. '＋' → logprob: -18.125181198120117
    6. '+]' → logprob: -18.250181198120117
    7. ']+' → logprob: -18.250181198120117
    8. '+[' → logprob: -19.625181198120117
    9. '+"]' → logprob: -20.000181198120117
    10. '+</' → logprob: -20.250181198120117

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '+' → logprob: -11.500012397766113
    3. ' ' → logprob: -13.125012397766113
    4. '```' → logprob: -17.875011444091797
    5. '   ' → logprob: -18.000011444091797
    6. 'j' → logprob: -18.375011444091797
    7. ' +' → logprob: -18.500011444091797
    8. ']' → logprob: -18.750011444091797
    9. '[' → logprob: -19.000011444091797
    10. 's' → logprob: -19.000011444091797

Token 106: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4066838324069977
    2. '<|end|>' → logprob: -2.031683921813965
    3. '           ' → logprob: -2.281683921813965
    4. 'temp' → logprob: -2.531683921813965
    5. '
' → logprob: -5.156683921813965
    6. '       ' → logprob: -5.656683921813965
    7. '<|end|>' → logprob: -5.781683921813965
    8. '            
' → logprob: -5.781683921813965
    9. ')' → logprob: -6.781683921813965
    10. '```' → logprob: -6.906683921813965

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.5716304410016164e-05
    2. 'temp' → logprob: -10.625035285949707
    3. '   ' → logprob: -13.250035285949707
    4. '       ' → logprob: -13.375035285949707
    5. 'nums' → logprob: -13.625035285949707
    6. '            
' → logprob: -13.750035285949707
    7. '		' → logprob: -13.750035285949707
    8. '          ' → logprob: -13.750035285949707
    9. '            ' → logprob: -14.000035285949707
    10. ' temp' → logprob: -14.250035285949707

Token 108: ' nums' (ID: 18117)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.004079589620232582
    2. ' temp' → logprob: -5.504079818725586
    3. '           ' → logprob: -13.754079818725586
    4. 'tmp' → logprob: -16.629079818725586
    5. '	temp' → logprob: -19.254079818725586
    6. 'tem' → logprob: -20.254079818725586
    7. '   ' → logprob: -20.754079818725586
    8. 'temps' → logprob: -21.129079818725586
    9. '       ' → logprob: -21.504079818725586
    10. '            ' → logprob: -22.129079818725586

Token 109: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005550932139158249
    2. '[' → logprob: -5.255550861358643
    3. '```' → logprob: -8.5055513381958
    4. '[js' → logprob: -9.7555513381958
    5. ']' → logprob: -11.2555513381958
    6. '[
' → logprob: -11.7555513381958
    7. '<|end|>' → logprob: -12.1305513381958
    8. '[J' → logprob: -12.2555513381958
    9. '[user' → logprob: -12.5055513381958
    10. '[temp' → logprob: -12.6305513381958

Token 110: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001645644661039114
    2. ']' → logprob: -9.000164985656738
    3. ' +' → logprob: -10.375164985656738
    4. ']+' → logprob: -12.750164985656738
    5. '+j' → logprob: -12.750164985656738
    6. '+
' → logprob: -13.125164985656738
    7. '[j' → logprob: -14.625164985656738
    8. '   ' → logprob: -14.750164985656738
    9. '[' → logprob: -15.250164985656738
    10. '```' → logprob: -15.375164985656738

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.591415437171236e-05
    2. ' ' → logprob: -9.750096321105957
    3. '2' → logprob: -10.375096321105957
    4. '0' → logprob: -12.000096321105957
    5. '   ' → logprob: -16.37509536743164
    6. '```' → logprob: -17.37509536743164
    7. '<|end|>' → logprob: -18.12509536743164
    8. '`' → logprob: -18.25009536743164
    9. '  ' → logprob: -18.25009536743164
    10. 'temp' → logprob: -18.81259536743164

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025430822279304266
    2. '=' → logprob: -6.752542972564697
    3. ']=' → logprob: -6.752542972564697
    4. ')' → logprob: -8.752543449401855
    5. '<|end|>' → logprob: -10.502543449401855
    6. ' ]' → logprob: -12.002543449401855
    7. ' =' → logprob: -12.502543449401855
    8. '```' → logprob: -13.002543449401855
    9. '}' → logprob: -13.252543449401855
    10. ']
' → logprob: -13.252543449401855

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16028830409049988
    2. ' =' → logprob: -1.9102883338928223
    3. '=temp' → logprob: -9.660287857055664
    4. '=
' → logprob: -15.285287857055664
    5. ' =
' → logprob: -16.785287857055664
    6. 'temp' → logprob: -17.285287857055664
    7. '=

' → logprob: -18.035287857055664
    8. '=num' → logprob: -18.410287857055664
    9. ' =
' → logprob: -18.535287857055664
    10. '=int' → logprob: -18.785287857055664

Token 114: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.00033546582562848926
    2. ' temp' → logprob: -8.000335693359375
    3. 'tmp' → logprob: -17.375335693359375
    4. 'tem' → logprob: -20.000335693359375
    5. '	temp' → logprob: -20.250335693359375
    6. 'temps' → logprob: -20.375335693359375
    7. '(temp' → logprob: -21.500335693359375
    8. 't' → logprob: -22.000335693359375
    9. '   ' → logprob: -22.500335693359375
    10. ' ' → logprob: -22.500335693359375

Token 115: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3713000416755676
    2. '<|end|>' → logprob: -1.6212999820709229
    3. '#' → logprob: -2.746299982070923
    4. 'for' → logprob: -3.621299982070923
    5. ')' → logprob: -5.121300220489502
    6. '
' → logprob: -5.246300220489502
    7. ' ' → logprob: -5.871300220489502
    8. '\n' → logprob: -6.496300220489502
    9. '#print' → logprob: -6.746300220489502
    10. ']' → logprob: -7.121300220489502

Token 117: ' num' (ID: 2269)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6734917759895325
    2. ' num' → logprob: -0.7984917759895325
    3. 'i' → logprob: -4.048491954803467
    4. 'num' → logprob: -4.048491954803467
    5. ' n' → logprob: -5.673491954803467
    6. ' ' → logprob: -7.173491954803467
    7. 'n' → logprob: -7.173491954803467
    8. ' x' → logprob: -9.673491477966309
    9. '	num' → logprob: -10.173491477966309
    10. ' ' → logprob: -10.548491477966309

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026581378653645515
    2. 'in' → logprob: -3.651581287384033
    3. 's' → logprob: -8.276581764221191
    4. ' ' → logprob: -11.401581764221191
    5. 'n' → logprob: -12.401581764221191
    6. '	in' → logprob: -12.776581764221191
    7. ' ' → logprob: -13.526581764221191
    8. '  ' → logprob: -14.026581764221191
    9. ',' → logprob: -14.151581764221191
    10. '```' → logprob: -14.401581764221191

Token 119: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.04859974980354309
    2. ' nums' → logprob: -3.0485997200012207
    3. '(nums' → logprob: -11.423600196838379
    4. 'num' → logprob: -14.548600196838379
    5. '_nums' → logprob: -14.798600196838379
    6. 'range' → logprob: -14.923600196838379
    7. 'Nums' → logprob: -15.673600196838379
    8. '   ' → logprob: -16.423599243164062
    9. 'sorted' → logprob: -16.798599243164062
    10. 'numbers' → logprob: -17.423599243164062

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00039980647852644324
    2. ':
' → logprob: -8.000399589538574
    3. 'print' → logprob: -9.750399589538574
    4. ' :' → logprob: -12.750399589538574
    5. ' print' → logprob: -14.500399589538574
    6. ',' → logprob: -15.000399589538574
    7. ')' → logprob: -15.000399589538574
    8. '   ' → logprob: -15.375399589538574
    9. '.print' → logprob: -15.375399589538574
    10. '```' → logprob: -15.625399589538574

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07708816975355148
    2. ' print' → logprob: -2.8270881175994873
    3. 'print' → logprob: -4.202088356018066
    4. '	print' → logprob: -10.702088356018066
    5. '       ' → logprob: -11.952088356018066
    6. '```' → logprob: -12.077088356018066
    7. '    
' → logprob: -12.952088356018066
    8. '<|end|>' → logprob: -13.077088356018066
    9. '
' → logprob: -14.452088356018066
    10. '.print' → logprob: -14.452088356018066

Token 122: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4752834737300873
    2. ' print' → logprob: -0.9752835035324097
    3. '   ' → logprob: -6.725283622741699
    4. '```' → logprob: -12.6002836227417
    5. '	print' → logprob: -14.3502836227417
    6. 'pr' → logprob: -14.4752836227417
    7. '.print' → logprob: -15.2252836227417
    8. ' 
' → logprob: -15.7252836227417
    9. '    ' → logprob: -15.8502836227417
    10. 'printf' → logprob: -16.475282669067383

Token 123: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.029853234067559242
    2. '(' → logprob: -3.529853343963623
    3. 'num' → logprob: -9.404852867126465
    4. '(f' → logprob: -11.154852867126465
    5. '("("' → logprob: -13.404852867126465
    6. '(nums' → logprob: -13.654852867126465
    7. '()' → logprob: -13.904852867126465
    8. '("' → logprob: -14.029852867126465
    9. '('' → logprob: -14.154852867126465
    10. ' num' → logprob: -15.654852867126465

Token 124: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.870950215263292e-05
    2. ',' → logprob: -10.625048637390137
    3. ' )' → logprob: -11.000048637390137
    4. '()' → logprob: -12.750048637390137
    5. ',)' → logprob: -12.875048637390137
    6. '())' → logprob: -14.375048637390137
    7. '))' → logprob: -14.750048637390137
    8. ')
' → logprob: -15.375048637390137
    9. '),' → logprob: -15.750048637390137
    10. '   ' → logprob: -16.125049591064453

Token 125: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004371017683297396
    2. ' end' → logprob: -5.504371166229248
    3. ')' → logprob: -8.75437068939209
    4. '"' → logprob: -9.50437068939209
    5. ''end' → logprob: -10.25437068939209
    6. ''' → logprob: -10.87937068939209
    7. ',end' → logprob: -12.87937068939209
    8. '(end' → logprob: -13.75437068939209
    9. '	end' → logprob: -14.00437068939209
    10. '''' → logprob: -14.75437068939209

Token 126: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.016438305377960205
    2. '="' → logprob: -4.2664384841918945
    3. '=' → logprob: -6.1414384841918945
    4. '=',' → logprob: -9.391438484191895
    5. '('' → logprob: -11.016438484191895
    6. ''' → logprob: -11.516438484191895
    7. '=",' → logprob: -11.891438484191895
    8. '"' → logprob: -13.391438484191895
    9. '=('' → logprob: -13.891438484191895
    10. '=''' → logprob: -15.141438484191895

Token 127: ' ')' (ID: 35910)
  Prédit: ' ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ')' → logprob: -0.13327451050281525
    2. ' '' → logprob: -2.883274555206299
    3. ' ' → logprob: -3.383274555206299
    4. ''' → logprob: -3.633274555206299
    5. ' )' → logprob: -4.883274555206299
    6. ')' → logprob: -8.13327407836914
    7. '')' → logprob: -8.38327407836914
    8. ' ')
' → logprob: -9.00827407836914
    9. ' ")' → logprob: -9.75827407836914
    10. ' ,' → logprob: -10.38327407836914


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 125
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 46.40%
Précision adaptée (1ère position): 48.00%
Précision (top 10): 77.60%
================================================================================
