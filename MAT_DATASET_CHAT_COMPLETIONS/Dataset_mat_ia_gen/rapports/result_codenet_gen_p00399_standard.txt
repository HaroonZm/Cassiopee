================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
R, B, W, G = map(int, input().split())
print(R + B + W + G)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'R' (ID: 49)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '<-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<-' → logprob: -0.9687169790267944
    2. '[' → logprob: -1.3437169790267944
    3. '(' → logprob: -2.468717098236084
    4. '<' → logprob: -2.718717098236084
    5. ')' → logprob: -2.843717098236084
    6. ',' → logprob: -3.718717098236084
    7. '+' → logprob: -3.843717098236084
    8. ' <-' → logprob: -4.218717098236084
    9. '#' → logprob: -4.343717098236084
    10. '```' → logprob: -4.343717098236084

Token 4: ' W' (ID: 486)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7283499240875244
    2. ',' → logprob: -1.8533499240875244
    3. '[' → logprob: -1.9783499240875244
    4. '=' → logprob: -2.3533499240875244
    5. '(' → logprob: -2.6033499240875244
    6. '<' → logprob: -2.6033499240875244
    7. '<-' → logprob: -2.8533499240875244
    8. '>' → logprob: -2.9783499240875244
    9. 'C' → logprob: -3.6033499240875244
    10. '+' → logprob: -3.7283499240875244

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6235815286636353
    2. ')' → logprob: -2.2485814094543457
    3. ',' → logprob: -2.3735814094543457
    4. '```' → logprob: -2.6235814094543457
    5. '[' → logprob: -3.1235814094543457
    6. ' =' → logprob: -3.3735814094543457
    7. '<-' → logprob: -3.3735814094543457
    8. ' <-' → logprob: -3.9985814094543457
    9. '#' → logprob: -4.623581409454346
    10. ';' → logprob: -4.748581409454346

Token 6: ' G' (ID: 499)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044525884091854095
    2. ')' → logprob: -3.7945258617401123
    3. '=' → logprob: -4.919526100158691
    4. '```' → logprob: -5.544526100158691
    5. ':' → logprob: -6.294526100158691
    6. 'R' → logprob: -6.919526100158691
    7. ' ' → logprob: -7.044526100158691
    8. ';' → logprob: -7.294526100158691
    9. ',
' → logprob: -7.294526100158691
    10. '.' → logprob: -7.544526100158691

Token 7: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10180531442165375
    2. '=' → logprob: -3.3518052101135254
    3. '```' → logprob: -3.9768052101135254
    4. ':' → logprob: -4.476805210113525
    5. ')' → logprob: -4.851805210113525
    6. ';' → logprob: -5.226805210113525
    7. '.' → logprob: -5.976805210113525
    8. '[' → logprob: -6.101805210113525
    9. '#' → logprob: -6.226805210113525
    10. '(' → logprob: -6.476805210113525

Token 8: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2647837996482849
    2. '0' → logprob: -1.6397838592529297
    3. '1' → logprob: -4.76478385925293
    4. '10' → logprob: -5.38978385925293
    5. ' [' → logprob: -5.51478385925293
    6. ' map' → logprob: -5.88978385925293
    7. '[' → logprob: -5.88978385925293
    8. 'map' → logprob: -6.01478385925293
    9. ' None' → logprob: -6.26478385925293
    10. ' R' → logprob: -6.76478385925293

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.046186111867427826
    2. '(lambda' → logprob: -3.1711862087249756
    3. '(int' → logprob: -6.9211859703063965
    4. '```' → logprob: -7.2961859703063965
    5. '<|end|>' → logprob: -7.5461859703063965
    6. ')' → logprob: -8.171186447143555
    7. '(`' → logprob: -9.546186447143555
    8. '`' → logprob: -9.671186447143555
    9. '(
' → logprob: -9.671186447143555
    10. '(str' → logprob: -9.671186447143555

Token 10: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3431016504764557
    2. ')' → logprob: -1.3431016206741333
    3. '(input' → logprob: -4.218101501464844
    4. '(user' → logprob: -5.343101501464844
    5. '('' → logprob: -6.718101501464844
    6. '(str' → logprob: -6.843101501464844
    7. '(int' → logprob: -6.843101501464844
    8. '(token' → logprob: -6.968101501464844
    9. '(data' → logprob: -7.468101501464844
    10. '`)' → logprob: -7.593101501464844

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07891799509525299
    2. ' input' → logprob: -2.578917980194092
    3. ')' → logprob: -11.07891845703125
    4. '(input' → logprob: -11.57891845703125
    5. 'list' → logprob: -13.95391845703125
    6. '```' → logprob: -14.82891845703125
    7. ',input' → logprob: -14.82891845703125
    8. 'raw' → logprob: -15.07891845703125
    9. '	input' → logprob: -15.57891845703125
    10. '<input' → logprob: -15.70391845703125

Token 12: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.763828694820404
    2. '())' → logprob: -0.888828694820404
    3. '()' → logprob: -3.263828754425049
    4. '(' → logprob: -4.388828754425049
    5. '`()' → logprob: -4.388828754425049
    6. '```' → logprob: -4.638828754425049
    7. '('' → logprob: -4.763828754425049
    8. '(""))' → logprob: -4.888828754425049
    9. '();)' → logprob: -5.263828754425049
    10. '`)' → logprob: -5.638828754425049

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007286362233571708
    2. 'strip' → logprob: -7.250728607177734
    3. 'rstrip' → logprob: -11.875728607177734
    4. 'read' → logprob: -12.000728607177734
    5. ' split' → logprob: -12.250728607177734
    6. '(split' → logprob: -15.250728607177734
    7. 'replace' → logprob: -15.750728607177734
    8. ')' → logprob: -15.875728607177734
    9. 'spl' → logprob: -16.375728607177734
    10. '```' → logprob: -17.000728607177734

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.44205620884895325
    2. ')' → logprob: -1.0670561790466309
    3. '))' → logprob: -5.067056179046631
    4. '()' → logprob: -5.442056179046631
    5. '()))' → logprob: -6.567056179046631
    6. '`)' → logprob: -7.942056179046631
    7. '('' → logprob: -8.192056655883789
    8. '(' → logprob: -8.192056655883789
    9. ' ())' → logprob: -10.317056655883789
    10. '')' → logprob: -10.567056655883789

Token 15: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1515733003616333
    2. '#' → logprob: -1.2765733003616333
    3. 'r' → logprob: -2.4015731811523438
    4. ',' → logprob: -2.7765731811523438
    5. 'print' → logprob: -3.1515731811523438
    6. 'if' → logprob: -3.2765731811523438
    7. '\n' → logprob: -3.6515731811523438
    8. ')' → logprob: -3.7765731811523438
    9. 'R' → logprob: -3.9015731811523438
    10. '*' → logprob: -4.026573181152344

Token 16: '(R' (ID: 4092)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021093101531732827
    2. '('' → logprob: -8.875210762023926
    3. '("("' → logprob: -10.125210762023926
    4. '()' → logprob: -11.375210762023926
    5. '((' → logprob: -12.750210762023926
    6. '(
' → logprob: -12.875210762023926
    7. '("""' → logprob: -13.125210762023926
    8. '(`' → logprob: -13.250210762023926
    9. '(R' → logprob: -13.375210762023926
    10. '(print' → logprob: -14.000210762023926

Token 17: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7386642098426819
    2. ')' → logprob: -0.9886642098426819
    3. ',' → logprob: -1.988664150238037
    4. ' +' → logprob: -4.988664150238037
    5. ' ,' → logprob: -5.738664150238037
    6. '+)' → logprob: -6.738664150238037
    7. '*' → logprob: -7.488664150238037
    8. ' )' → logprob: -7.488664150238037
    9. '+B' → logprob: -7.988664150238037
    10. '>' → logprob: -8.738664627075195

Token 18: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.22906622290611267
    2. ' B' → logprob: -1.604066252708435
    3. 'G' → logprob: -5.979066371917725
    4. ' ' → logprob: -7.354066371917725
    5. ' G' → logprob: -7.979066371917725
    6. 'W' → logprob: -9.354065895080566
    7. ' W' → logprob: -11.354065895080566
    8. '	B' → logprob: -11.791565895080566
    9. ' ' → logprob: -11.979065895080566
    10. '  ' → logprob: -12.229065895080566

Token 19: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3601679801940918
    2. '+' → logprob: -1.3601679801940918
    3. ' +' → logprob: -3.110167980194092
    4. ' )' → logprob: -7.360167980194092
    5. '))' → logprob: -8.23516845703125
    6. '+)' → logprob: -9.61016845703125
    7. '-' → logprob: -9.61016845703125
    8. '+B' → logprob: -9.73516845703125
    9. ' ' → logprob: -10.73516845703125
    10. ' -' → logprob: -10.73516845703125

Token 20: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.04224981740117073
    2. ' W' → logprob: -3.292249917984009
    3. 'G' → logprob: -5.54224967956543
    4. ' ' → logprob: -9.04224967956543
    5. ' G' → logprob: -9.16724967956543
    6. ')' → logprob: -10.41724967956543
    7. '1' → logprob: -12.54224967956543
    8. 'B' → logprob: -12.60474967956543
    9. '  ' → logprob: -12.72974967956543
    10. '   ' → logprob: -12.79224967956543

Token 21: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037607743870466948
    2. '+' → logprob: -5.753760814666748
    3. '))' → logprob: -8.25376033782959
    4. ' )' → logprob: -9.12876033782959
    5. ' +' → logprob: -9.50376033782959
    6. '`)' → logprob: -9.62876033782959
    7. '-' → logprob: -11.25376033782959
    8. '+)' → logprob: -11.62876033782959
    9. ')`' → logprob: -11.62876033782959
    10. ' -' → logprob: -11.75376033782959

Token 22: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.009799418970942497
    2. ' G' → logprob: -4.634799480438232
    3. ' ' → logprob: -10.634799003601074
    4. ')' → logprob: -11.259799003601074
    5. '1' → logprob: -13.259799003601074
    6. '   ' → logprob: -13.759799003601074
    7. '  ' → logprob: -14.134799003601074
    8. '(G' → logprob: -15.134799003601074
    9. ' ' → logprob: -15.259799003601074
    10. '(' → logprob: -15.259799003601074

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.876193169271573e-05
    2. '`)' → logprob: -9.750088691711426
    3. '))' → logprob: -10.625088691711426
    4. ' )' → logprob: -13.125088691711426
    5. '')' → logprob: -13.875088691711426
    6. '```' → logprob: -14.000088691711426
    7. ')`' → logprob: -14.000088691711426
    8. ')
' → logprob: -14.750088691711426
    9. '")' → logprob: -15.625088691711426
    10. '})' → logprob: -16.000089645385742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 21
Tokens correctement prédits (1ère position, stricte): 2
Tokens correctement prédits (1ère position, avec adaptation): 2
Tokens correctement prédits (top 10): 15
Précision stricte (1ère position): 9.52%
Précision adaptée (1ère position): 9.52%
Précision (top 10): 71.43%
================================================================================
