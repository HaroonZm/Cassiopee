================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
case_num = 1
while True:
    N = int(input())
    if N == 0:
        break
    mat = [[0]*N for _ in range(N)]
    num = 1
    for s in range(2*N-1):
        if s % 2 == 0:
            start = max(0, s-(N-1))
            end = min(s, N-1)
            for i in range(end, start-1, -1):
                j = s - i
                mat[i][j] = num
                num += 1
        else:
            start = max(0, s-(N-1))
            end = min(s, N-1)
            for j in range(end, start-1, -1):
                i = s - j
                mat[i][j] = num
                num += 1
    print(f"Case {case_num}:")
    for row in mat:
        print(''.join(f"{x:3}" for x in row))
    case_num += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'case' (ID: 9994)
  → Token d'amorce (pas de prédiction)

Token 1: '_num' (ID: 9834)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1233178973197937
    2. '0' → logprob: -2.8733179569244385
    3. '1' → logprob: -2.9983179569244385
    4. '10' → logprob: -5.498317718505859
    5. '"' → logprob: -6.373317718505859
    6. '32' → logprob: -6.498317718505859
    7. '42' → logprob: -6.873317718505859
    8. ''' → logprob: -7.373317718505859
    9. '5' → logprob: -8.37331771850586
    10. '20' → logprob: -9.12331771850586

Token 4: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2764194905757904
    2. '1' → logprob: -2.2764194011688232
    3. '42' → logprob: -2.2764194011688232
    4. '10' → logprob: -4.151419639587402
    5. ' ' → logprob: -4.401419639587402
    6. '5' → logprob: -4.901419639587402
    7. '123' → logprob: -8.276419639587402
    8. '100' → logprob: -8.651419639587402
    9. '"' → logprob: -8.776419639587402
    10. '4' → logprob: -9.901419639587402

Token 5: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3184703290462494
    2. '=' → logprob: -1.9434703588485718
    3. '.' → logprob: -3.1934702396392822
    4. ' =' → logprob: -3.8184702396392822
    5. ':' → logprob: -4.193470478057861
    6. ' +' → logprob: -4.568470478057861
    7. ',' → logprob: -4.693470478057861
    8. '_' → logprob: -4.693470478057861
    9. '```' → logprob: -5.193470478057861
    10. '#' → logprob: -5.568470478057861

Token 6: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.014248013496399
    2. '=' → logprob: -1.264248013496399
    3. ' =' → logprob: -1.639248013496399
    4. '.' → logprob: -2.3892478942871094
    5. '_' → logprob: -3.2642478942871094
    6. ',' → logprob: -4.514247894287109
    7. ' ' → logprob: -5.764247894287109
    8. ' +' → logprob: -5.889247894287109
    9. '```' → logprob: -6.264247894287109
    10. '#' → logprob: -6.264247894287109

Token 7: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001498791272751987
    2. ' case' → logprob: -7.376498699188232
    3. '  ' → logprob: -7.751498699188232
    4. ' not' → logprob: -8.50149917602539
    5. ' True' → logprob: -8.87649917602539
    6. ' ' → logprob: -9.75149917602539
    7. ' (' → logprob: -11.62649917602539
    8. 'case' → logprob: -11.75149917602539
    9. '```' → logprob: -11.87649917602539
    10. ' code' → logprob: -12.87649917602539

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026336227892898023
    2. ':
' → logprob: -8.750263214111328
    3. ' :' → logprob: -9.500263214111328
    4. '`:' → logprob: -12.250263214111328
    5. ':**' → logprob: -12.625263214111328
    6. '':'' → logprob: -12.750263214111328
    7. '):' → logprob: -12.750263214111328
    8. '':' → logprob: -12.875263214111328
    9. '   ' → logprob: -12.875263214111328
    10. '```' → logprob: -13.375263214111328

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008509631152264774
    2. '    
' → logprob: -8.250850677490234
    3. '```' → logprob: -8.500850677490234
    4. '    ' → logprob: -9.250850677490234
    5. ':' → logprob: -9.375850677490234
    6. ' print' → logprob: -10.500850677490234
    7. ' :' → logprob: -10.875850677490234
    8. '   ' → logprob: -10.875850677490234
    9. 'print' → logprob: -11.000850677490234
    10. ' if' → logprob: -11.125850677490234

Token 10: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22492057085037231
    2. '    ' → logprob: -2.4749205112457275
    3. ' if' → logprob: -3.9749205112457275
    4. ' i' → logprob: -4.224920749664307
    5. ' print' → logprob: -4.349920749664307
    6. ' input' → logprob: -4.599920749664307
    7. ' try' → logprob: -4.724920749664307
    8. ' user' → logprob: -4.849920749664307
    9. ' c' → logprob: -5.099920749664307
    10. 'i' → logprob: -5.224920749664307

Token 11: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9201369881629944
    2. '=' → logprob: -1.4201369285583496
    3. ' =' → logprob: -2.0451369285583496
    4. 'u' → logprob: -3.1701369285583496
    5. 'o' → logprob: -3.1701369285583496
    6. '  ' → logprob: -3.4201369285583496
    7. ' ' → logprob: -3.7951369285583496
    8. 'umber' → logprob: -3.7951369285583496
    9. 'um' → logprob: -4.29513692855835
    10. '.' → logprob: -4.42013692855835

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06250938028097153
    2. 'int' → logprob: -2.812509298324585
    3. ' input' → logprob: -7.687509536743164
    4. 'input' → logprob: -9.937509536743164
    5. ' ' → logprob: -10.937509536743164
    6. '=int' → logprob: -12.187509536743164
    7. '10' → logprob: -13.187509536743164
    8. ' eval' → logprob: -13.437509536743164
    9. '(int' → logprob: -13.687509536743164
    10. '20' → logprob: -13.812509536743164

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16028322279453278
    2. '(input' → logprob: -1.9102832078933716
    3. 'input' → logprob: -10.410283088684082
    4. ' (' → logprob: -11.660283088684082
    5. '('' → logprob: -12.285283088684082
    6. '(
' → logprob: -12.535283088684082
    7. '()' → logprob: -12.535283088684082
    8. '(open' → logprob: -13.660283088684082
    9. ' input' → logprob: -14.410283088684082
    10. '(eval' → logprob: -14.410283088684082

Token 14: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3190188705921173
    2. '())' → logprob: -1.319018840789795
    3. '(' → logprob: -5.819018840789795
    4. '('' → logprob: -6.444018840789795
    5. '()))' → logprob: -7.694018840789795
    6. ')' → logprob: -8.194019317626953
    7. '("("' → logprob: -9.194019317626953
    8. '(""))' → logprob: -9.444019317626953
    9. '()>' → logprob: -9.694019317626953
    10. '());' → logprob: -10.319019317626953

Token 15: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4752271771430969
    2. ' if' → logprob: -2.100227117538452
    3. ')' → logprob: -2.475227117538452
    4. '```' → logprob: -2.475227117538452
    5. '<|end|>' → logprob: -2.975227117538452
    6. 'if' (adapté à ' if') → logprob: -4.225227355957031
    7. '\n' → logprob: -4.600227355957031
    8. '    ' → logprob: -5.850227355957031
    9. ' ' → logprob: -5.850227355957031
    10. '\' → logprob: -6.725227355957031

Token 17: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.02931300550699234
    2. ' not' → logprob: -3.779313087463379
    3. ' ' → logprob: -5.404313087463379
    4. ' case' → logprob: -7.404313087463379
    5. 'N' → logprob: -7.529313087463379
    6. ' ' → logprob: -7.904313087463379
    7. 'not' → logprob: -11.279313087463379
    8. 'case' → logprob: -11.404313087463379
    9. '  ' → logprob: -12.529313087463379
    10. ' break' → logprob: -12.779313087463379

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09059266000986099
    2. ' <=' → logprob: -3.340592622756958
    3. '==' → logprob: -3.715592622756958
    4. ' <' → logprob: -4.215592861175537
    5. ' >' → logprob: -4.715592861175537
    6. '>' → logprob: -6.465592861175537
    7. '<=' → logprob: -7.590592861175537
    8. ' ' → logprob: -7.965592861175537
    9. '<' → logprob: -7.965592861175537
    10. ' >=' → logprob: -8.465592384338379

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05488566681742668
    2. '0' → logprob: -2.9298856258392334
    3. ' -' → logprob: -13.179885864257812
    4. '  ' → logprob: -14.679885864257812
    5. ' ' → logprob: -14.679885864257812
    6. '-' → logprob: -15.554885864257812
    7. ')' → logprob: -16.117385864257812
    8. ' EOF' → logprob: -16.804885864257812
    9. '1' → logprob: -16.867385864257812
    10. 'EOF' → logprob: -16.992385864257812

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043095219880342484
    2. ' ' → logprob: -3.168095111846924
    3. '-' → logprob: -9.418095588684082
    4. ' -' → logprob: -11.543095588684082
    5. '```' → logprob: -12.918095588684082
    6. '   ' → logprob: -14.543095588684082
    7. '=' → logprob: -14.543095588684082
    8. '  ' → logprob: -14.543095588684082
    9. '``' → logprob: -15.980595588684082
    10. ')' → logprob: -15.980595588684082

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036799011286348104
    2. '   ' → logprob: -9.000368118286133
    3. ':
' → logprob: -9.000368118286133
    4. '       ' → logprob: -9.375368118286133
    5. ' :' → logprob: -11.125368118286133
    6. '):' → logprob: -11.375368118286133
    7. ':return' → logprob: -12.250368118286133
    8. '    ' → logprob: -13.375368118286133
    9. ',' → logprob: -14.375368118286133
    10. '      ' → logprob: -15.000368118286133

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034007564187049866
    2. '   ' → logprob: -3.7840075492858887
    3. ':' → logprob: -4.659007549285889
    4. '    ' → logprob: -7.284007549285889
    5. ' break' → logprob: -8.784008026123047
    6. '     ' → logprob: -9.409008026123047
    7. ' ' → logprob: -9.659008026123047
    8. '	break' → logprob: -9.784008026123047
    9. '      ' → logprob: -10.159008026123047
    10. '        ' → logprob: -10.659008026123047

Token 23: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20628853142261505
    2. ' break' → logprob: -1.7062885761260986
    3. '   ' → logprob: -5.9562883377075195
    4. 'break' (adapté à ' break') → logprob: -6.3312883377075195
    5. '	break' → logprob: -7.7062883377075195
    6. '```' → logprob: -11.33128833770752
    7. '           ' → logprob: -11.45628833770752
    8. '    ' → logprob: -11.83128833770752
    9. '_break' → logprob: -12.45628833770752
    10. ' ' → logprob: -13.33128833770752

Token 24: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19387449324131012
    2. '
' → logprob: -2.6938745975494385
    3. '    
' → logprob: -3.1938745975494385
    4. '```' → logprob: -3.6938745975494385
    5. ':' → logprob: -3.8188745975494385
    6. '<|end|>' → logprob: -4.568874359130859
    7. '\n' → logprob: -5.068874359130859
    8. ':
' → logprob: -6.818874359130859
    9. '  
' → logprob: -7.068874359130859
    10. '#' → logprob: -7.568874359130859

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3269510567188263
    2. '
' → logprob: -1.826951026916504
    3. '    
' → logprob: -2.576951026916504
    4. '```' → logprob: -3.576951026916504
    5. '\n' → logprob: -5.326951026916504
    6. '<|end|>' → logprob: -5.576951026916504
    7. '  
' → logprob: -6.076951026916504
    8. '\' → logprob: -7.326951026916504
    9. '   
' → logprob: -7.951951026916504
    10. ' 
' → logprob: -7.951951026916504

Token 26: ' mat' (ID: 2450)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018847176805138588
    2. ' ' → logprob: -4.8938469886779785
    3. '    ' → logprob: -5.1438469886779785
    4. '    
' → logprob: -6.6438469886779785
    5. '\n' → logprob: -7.3938469886779785
    6. 'print' → logprob: -7.5188469886779785
    7. '<|end|>' → logprob: -7.7688469886779785
    8. '\' → logprob: -7.8938469886779785
    9. '  ' → logprob: -7.8938469886779785
    10. 'n' → logprob: -8.518847465515137

Token 27: ' =' (ID: 314)
  Prédit: 'rix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rix' → logprob: -0.3789169490337372
    2. ' =' → logprob: -1.2539169788360596
    3. 'r' → logprob: -4.5039167404174805
    4. 'rices' → logprob: -5.1289167404174805
    5. ' ' → logprob: -5.5039167404174805
    6. '=' → logprob: -5.6289167404174805
    7. '   ' → logprob: -6.6289167404174805
    8. '[' → logprob: -7.3789167404174805
    9. 'x' → logprob: -7.5039167404174805
    10. '_r' → logprob: -7.6289167404174805

Token 28: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9559300541877747
    2. ' [' → logprob: -1.0809299945831299
    3. ' []' → logprob: -1.8309299945831299
    4. '[]' → logprob: -2.20592999458313
    5. ' [[' → logprob: -6.205930233001709
    6. '[[' → logprob: -6.455930233001709
    7. ' [[]' → logprob: -7.455930233001709
    8. '[list' → logprob: -7.955930233001709
    9. '[n' → logprob: -8.20592975616455
    10. '[][]' → logprob: -8.83092975616455

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007575750816613436
    2. 'int' → logprob: -5.007575988769531
    3. ' ' → logprob: -7.632575988769531
    4. ' int' → logprob: -8.632575988769531
    5. 'False' → logprob: -8.882575988769531
    6. '   ' → logprob: -10.632575988769531
    7. ' False' → logprob: -12.382575988769531
    8. '(int' → logprob: -12.507575988769531
    9. '1' → logprob: -12.507575988769531
    10. ']' → logprob: -12.632575988769531

Token 30: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2059660106897354
    2. ']' → logprob: -2.080965995788574
    3. '<|end|>' → logprob: -3.705965995788574
    4. ' ]' → logprob: -4.330965995788574
    5. 'for' → logprob: -4.580965995788574
    6. ']*' → logprob: -4.580965995788574
    7. ',' → logprob: -6.580965995788574
    8. '	for' → logprob: -7.580965995788574
    9. ' ' → logprob: -8.080965995788574
    10. '<|end|>' → logprob: -8.455965995788574

Token 31: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0016670884797349572
    2. ' N' → logprob: -6.501667022705078
    3. '(N' → logprob: -9.501667022705078
    4. '10' → logprob: -10.501667022705078
    5. '100' → logprob: -10.626667022705078
    6. '9' → logprob: -12.126667022705078
    7. '(' → logprob: -12.251667022705078
    8. '5' → logprob: -12.251667022705078
    9. ' (' → logprob: -12.751667022705078
    10. '20' → logprob: -12.876667022705078

Token 32: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31329891085624695
    2. 'for' → logprob: -1.3132989406585693
    3. '	for' → logprob: -10.563299179077148
    4. '   ' → logprob: -12.313299179077148
    5. ')' → logprob: -13.438299179077148
    6. ']' → logprob: -13.563299179077148
    7. ' ' → logprob: -13.688299179077148
    8. '    ' → logprob: -14.313299179077148
    9. '```' → logprob: -14.313299179077148
    10. ' ' → logprob: -15.188299179077148

Token 33: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02118775062263012
    2. 'range' → logprob: -4.646187782287598
    3. ' _' → logprob: -5.021187782287598
    4. '_' → logprob: -5.521187782287598
    5. '_range' → logprob: -7.521187782287598
    6. ' ' → logprob: -9.521187782287598
    7. '(range' → logprob: -9.896187782287598
    8. ' i' → logprob: -9.896187782287598
    9. '	range' → logprob: -10.396187782287598
    10. ' xrange' → logprob: -11.271187782287598

Token 34: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07003958523273468
    2. ' range' → logprob: -2.6950395107269287
    3. 'in' → logprob: -10.070039749145508
    4. ' in' → logprob: -10.195039749145508
    5. '(range' → logprob: -11.195039749145508
    6. '	range' → logprob: -12.570039749145508
    7. '_range' → logprob: -13.195039749145508
    8. ' ' → logprob: -13.820039749145508
    9. 'ran' → logprob: -14.320039749145508
    10. '_' → logprob: -14.320039749145508

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692904472351074
    2. ' range' → logprob: -2.1269290447235107
    3. '	range' → logprob: -14.87692928314209
    4. ' ' → logprob: -15.00192928314209
    5. '(range' → logprob: -16.126928329467773
    6. '  ' → logprob: -16.876928329467773
    7. '   ' → logprob: -17.626928329467773
    8. 'rang' → logprob: -17.626928329467773
    9. '_range' → logprob: -17.626928329467773
    10. ')' → logprob: -17.876928329467773

Token 36: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0015141464537009597
    2. '(' → logprob: -6.501513957977295
    3. ' (' → logprob: -11.751514434814453
    4. '(n' → logprob: -13.376514434814453
    5. '   ' → logprob: -13.751514434814453
    6. 'N' → logprob: -14.251514434814453
    7. ' ' → logprob: -15.126514434814453
    8. '(
' → logprob: -16.251514434814453
    9. ' N' → logprob: -16.501514434814453
    10. ')' → logprob: -16.751514434814453

Token 37: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001249925117008388
    2. ')' → logprob: -9.62512493133545
    3. ']' → logprob: -9.87512493133545
    4. ' )' → logprob: -13.62512493133545
    5. '])]' → logprob: -13.62512493133545
    6. ')])' → logprob: -13.75012493133545
    7. ')],' → logprob: -14.12512493133545
    8. '   ' → logprob: -14.12512493133545
    9. '')]' → logprob: -14.25012493133545
    10. ')]
' → logprob: -14.50012493133545

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02180904895067215
    2. ' for' → logprob: -4.521809101104736
    3. 'for' → logprob: -5.271809101104736
    4. '    
' → logprob: -6.146809101104736
    5. '```' → logprob: -6.396809101104736
    6. '
' → logprob: -7.021809101104736
    7. '<|end|>' → logprob: -8.396808624267578
    8. ' ' → logprob: -9.271808624267578
    9. '[' → logprob: -9.521808624267578
    10. '  ' → logprob: -9.521808624267578

Token 39: ' num' (ID: 2269)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6672406792640686
    2. 'for' → logprob: -0.7922406792640686
    3. '   ' → logprob: -3.417240619659424
    4. '```' → logprob: -8.292241096496582
    5. '<|end|>' → logprob: -8.417241096496582
    6. '    
' → logprob: -8.667241096496582
    7. ' ' → logprob: -8.792241096496582
    8. '  ' → logprob: -9.167241096496582
    9. '	for' → logprob: -9.417241096496582
    10. ' 
' → logprob: -10.292241096496582

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03371267020702362
    2. '=' → logprob: -3.40871262550354
    3. '_' → logprob: -10.658712387084961
    4. ' ' → logprob: -11.033712387084961
    5. '<|end|>' → logprob: -12.033712387084961
    6. ' +=' → logprob: -12.783712387084961
    7. '   ' → logprob: -13.033712387084961
    8. 's' → logprob: -13.533712387084961
    9. '  ' → logprob: -13.658712387084961
    10. ')' → logprob: -13.658712387084961

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032195416279137135
    2. ' ' → logprob: -5.7532196044921875
    3. '   ' → logprob: -11.628219604492188
    4. 'N' → logprob: -11.628219604492188
    5. '0' → logprob: -11.753219604492188
    6. 'case' → logprob: -11.878219604492188
    7. ' N' → logprob: -13.378219604492188
    8. '  ' → logprob: -13.503219604492188
    9. '2' → logprob: -13.878219604492188
    10. 'n' → logprob: -14.003219604492188

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008727516396902502
    2. ' ' → logprob: -7.500872611999512
    3. 'N' → logprob: -8.500872611999512
    4. 'case' → logprob: -9.375872611999512
    5. 'num' → logprob: -11.875872611999512
    6. '0' → logprob: -12.000872611999512
    7. '2' → logprob: -12.250872611999512
    8. 'n' → logprob: -12.500872611999512
    9. ' N' → logprob: -12.875872611999512
    10. '  ' → logprob: -13.688372611999512

Token 43: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36276501417160034
    2. '<|end|>' → logprob: -1.2377650737762451
    3. '    
' → logprob: -5.737764835357666
    4. ' ' → logprob: -5.737764835357666
    5. ' for' → logprob: -6.362764835357666
    6. '  ' → logprob: -6.487764835357666
    7. '<|end|>' → logprob: -6.487764835357666
    8. '
' → logprob: -7.487764835357666
    9. 'for' → logprob: -7.612764835357666
    10. '    ' → logprob: -7.862764835357666

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01603061333298683
    2. '    
' → logprob: -4.891030788421631
    3. '<|end|>' → logprob: -5.641030788421631
    4. ' for' → logprob: -6.391030788421631
    5. 'for' → logprob: -6.391030788421631
    6. ',' → logprob: -7.391030788421631
    7. '    ' → logprob: -7.891030788421631
    8. '<|end|>' → logprob: -9.766030311584473
    9. '  ' → logprob: -9.891030311584473
    10. 'i' → logprob: -10.016030311584473

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5981378555297852
    2. 'for' (adapté à ' for') → logprob: -0.8481378555297852
    3. '   ' → logprob: -4.598137855529785
    4. 'i' → logprob: -5.473137855529785
    5. ' i' → logprob: -5.598137855529785
    6. 'r' → logprob: -6.223137855529785
    7. 'd' → logprob: -7.973137855529785
    8. 'top' → logprob: -8.348137855529785
    9. ' top' → logprob: -8.348137855529785
    10. 'row' → logprob: -8.473137855529785

Token 46: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3606022000312805
    2. 'i' → logprob: -1.2356021404266357
    3. ' j' → logprob: -4.860602378845215
    4. 'j' → logprob: -5.735602378845215
    5. ' r' → logprob: -7.860602378845215
    6. 'r' → logprob: -8.610602378845215
    7. ' layer' → logprob: -8.735602378845215
    8. ' row' → logprob: -8.985602378845215
    9. 'row' → logprob: -9.735602378845215
    10. ' ' → logprob: -10.360602378845215

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011390271596610546
    2. 'in' → logprob: -4.511390209197998
    3. ' i' → logprob: -9.136390686035156
    4. 'n' → logprob: -10.136390686035156
    5. 'i' → logprob: -10.386390686035156
    6. ' ' → logprob: -10.636390686035156
    7. 't' → logprob: -10.636390686035156
    8. 'e' → logprob: -11.011390686035156
    9. 'ize' → logprob: -11.011390686035156
    10. 'range' → logprob: -11.011390686035156

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38689443469047546
    2. 'range' → logprob: -1.1368944644927979
    3. '(range' → logprob: -11.761894226074219
    4. ' ' → logprob: -12.136894226074219
    5. '	range' → logprob: -12.511894226074219
    6. '[' → logprob: -13.761894226074219
    7. 'rang' → logprob: -13.886894226074219
    8. '   ' → logprob: -14.261894226074219
    9. '  ' → logprob: -14.511894226074219
    10. ' rang' → logprob: -14.699394226074219

Token 49: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5761585831642151
    2. '(' → logprob: -0.8261585831642151
    3. '(n' → logprob: -9.32615852355957
    4. '((' → logprob: -10.07615852355957
    5. 'N' → logprob: -10.32615852355957
    6. ' (' → logprob: -10.57615852355957
    7. '2' → logprob: -11.32615852355957
    8. '(len' → logprob: -12.20115852355957
    9. '0' → logprob: -12.70115852355957
    10. '   ' → logprob: -13.20115852355957

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0778544619679451
    2. 'N' → logprob: -2.7028543949127197
    3. '0' → logprob: -5.327854633331299
    4. '(' → logprob: -6.202854633331299
    5. '1' → logprob: -7.577854633331299
    6. ' ' → logprob: -8.45285415649414
    7. ' N' → logprob: -8.95285415649414
    8. '(N' → logprob: -9.45285415649414
    9. '3' → logprob: -10.95285415649414
    10. ' (' → logprob: -11.20285415649414

Token 51: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.03792063519358635
    2. ' *' → logprob: -3.5379207134246826
    3. '*' → logprob: -4.9129204750061035
    4. ',' → logprob: -7.6629204750061035
    5. 'N' → logprob: -8.287920951843262
    6. '*(' → logprob: -10.412920951843262
    7. '*n' → logprob: -10.912920951843262
    8. ' ' → logprob: -12.412920951843262
    9. ',N' → logprob: -12.537920951843262
    10. ':' → logprob: -13.162920951843262

Token 52: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16043585538864136
    2. '-' → logprob: -1.9104359149932861
    3. ' ' → logprob: -8.660435676574707
    4. ')' → logprob: -10.910435676574707
    5. ' )' → logprob: -11.910435676574707
    6. '):' → logprob: -12.035435676574707
    7. ' ):' → logprob: -12.785435676574707
    8. '1' → logprob: -13.035435676574707
    9. '  ' → logprob: -14.660435676574707
    10. '   ' → logprob: -14.910435676574707

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008388153510168195
    2. ' ' → logprob: -7.750838756561279
    3. '-' → logprob: -8.125839233398438
    4. ' -' → logprob: -9.875839233398438
    5. '2' → logprob: -10.000839233398438
    6. '11' → logprob: -12.500839233398438
    7. '   ' → logprob: -12.938339233398438
    8. '3' → logprob: -13.500839233398438
    9. '  ' → logprob: -13.875839233398438
    10. ')' → logprob: -13.875839233398438

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010496716946363449
    2. '):
' → logprob: -5.510496616363525
    3. ' ):' → logprob: -5.635496616363525
    4. ':' → logprob: -5.885496616363525
    5. '):
' → logprob: -11.135497093200684
    6. ')' → logprob: -11.385497093200684
    7. ' ):
' → logprob: -11.510497093200684
    8. ' :' → logprob: -12.260497093200684
    9. ',' → logprob: -12.760497093200684
    10. ' ' → logprob: -13.885497093200684

Token 55: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006779319606721401
    2. '   ' → logprob: -5.381779193878174
    3. '<|end|>' → logprob: -7.256779193878174
    4. '    ' → logprob: -7.631779193878174
    5. '       ' → logprob: -8.506779670715332
    6. ' :' → logprob: -8.506779670715332
    7. ':
' → logprob: -8.631779670715332
    8. '    
' → logprob: -9.006779670715332
    9. ' ' → logprob: -9.131779670715332
    10. '):' → logprob: -10.381779670715332

Token 56: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.531790018081665
    2. ' i' → logprob: -1.781790018081665
    3. ' if' → logprob: -2.281790018081665
    4. 'for' → logprob: -2.656790018081665
    5. ' r' → logprob: -3.906790018081665
    6. 'i' → logprob: -4.031789779663086
    7. 'if' (adapté à ' if') → logprob: -4.906789779663086
    8. '   ' → logprob: -5.031789779663086
    9. ' row' → logprob: -5.156789779663086
    10. 'r' → logprob: -5.156789779663086

Token 57: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.05515453591942787
    2. 's' → logprob: -2.93015456199646
    3. ' ' → logprob: -8.430154800415039
    4. '0' → logprob: -11.430154800415039
    5. ' N' → logprob: -11.867654800415039
    6. '(s' → logprob: -12.180154800415039
    7. ' num' → logprob: -12.367654800415039
    8. '	s' → logprob: -12.617654800415039
    9. 'N' → logprob: -12.742654800415039
    10. '1' → logprob: -12.992654800415039

Token 58: ' %' (ID: 1851)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09577388316392899
    2. '<' → logprob: -2.470773935317993
    3. '%' → logprob: -5.345773696899414
    4. ' %' → logprob: -6.345773696899414
    5. ' ' → logprob: -9.970773696899414
    6. '<len' → logprob: -9.970773696899414
    7. '<num' → logprob: -10.095773696899414
    8. ' <=' → logprob: -10.345773696899414
    9. '<int' → logprob: -10.720773696899414
    10. '<size' → logprob: -10.720773696899414

Token 59: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004642422776669264
    2. ' ' → logprob: -5.379642486572266
    3. '```' → logprob: -11.879642486572266
    4. '==' → logprob: -12.129642486572266
    5. '3' → logprob: -13.004642486572266
    6. '1' → logprob: -13.817142486572266
    7. ' ==' → logprob: -14.004642486572266
    8. '<' → logprob: -14.379642486572266
    9. 's' → logprob: -14.442142486572266
    10. '=' → logprob: -14.567142486572266

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.696077227592468e-05
    2. ' ' → logprob: -9.625077247619629
    3. '1' → logprob: -13.250077247619629
    4. '```' → logprob: -13.250077247619629
    5. '3' → logprob: -13.625077247619629
    6. '==' → logprob: -13.750077247619629
    7. '<' → logprob: -13.875077247619629
    8. '4' → logprob: -13.937577247619629
    9. 's' → logprob: -14.812577247619629
    10. '0' → logprob: -14.812577247619629

Token 61: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22543193399906158
    2. '==' → logprob: -1.6004319190979004
    3. ':' → logprob: -11.975432395935059
    4. '=' → logprob: -12.100432395935059
    5. '0' → logprob: -12.225432395935059
    6. ' ' → logprob: -13.975432395935059
    7. '==
' → logprob: -14.725432395935059
    8. ' =' → logprob: -15.100432395935059
    9. ' !=' → logprob: -15.600432395935059
    10. ')==' → logprob: -15.850432395935059

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002413349924609065
    2. '1' → logprob: -6.502413272857666
    3. ' ' → logprob: -7.002413272857666
    4. 's' → logprob: -14.502413749694824
    5. '   ' → logprob: -16.252412796020508
    6. '```' → logprob: -17.002412796020508
    7. '۰' → logprob: -17.252412796020508
    8. '    ' → logprob: -17.689912796020508
    9. '=' → logprob: -17.689912796020508
    10. '  ' → logprob: -17.814912796020508

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025728060863912106
    2. '1' → logprob: -6.002573013305664
    3. ' ' → logprob: -9.252573013305664
    4. 's' → logprob: -15.127573013305664
    5. '```' → logprob: -15.252573013305664
    6. '   ' → logprob: -15.377573013305664
    7. '۰' → logprob: -16.502573013305664
    8. '०' → logprob: -16.877573013305664
    9. '  ' → logprob: -17.690073013305664
    10. ')' → logprob: -17.877573013305664

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036406738217920065
    2. ':
' → logprob: -8.000364303588867
    3. ' :' → logprob: -10.500364303588867
    4. '):' → logprob: -14.875364303588867
    5. ':
' → logprob: -15.875364303588867
    6. ',' → logprob: -16.000364303588867
    7. ' :
' → logprob: -16.125364303588867
    8. ':

' → logprob: -16.875364303588867
    9. ':#' → logprob: -17.000364303588867
    10. ' and' → logprob: -17.125364303588867

Token 65: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6673542261123657
    2. ' for' → logprob: -1.2923542261123657
    3. 'for' → logprob: -1.9173542261123657
    4. '   ' → logprob: -3.292354106903076
    5. ' i' → logprob: -4.167354106903076
    6. 'i' → logprob: -5.042354106903076
    7. '           ' → logprob: -6.042354106903076
    8. 'row' → logprob: -7.167354106903076
    9. ' j' → logprob: -7.417354106903076
    10. 'j' → logprob: -7.792354106903076

Token 66: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4248455762863159
    2. 'i' → logprob: -1.424845576286316
    3. 'x' → logprob: -3.5498456954956055
    4. ' for' → logprob: -3.6748456954956055
    5. 'j' → logprob: -3.9248456954956055
    6. 'r' → logprob: -4.1748456954956055
    7. '   ' → logprob: -5.0498456954956055
    8. ' i' → logprob: -5.5498456954956055
    9. '       ' → logprob: -6.1748456954956055
    10. 'row' → logprob: -6.2998456954956055

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1301388293504715
    2. '=' → logprob: -2.130138874053955
    3. '_row' → logprob: -6.505138874053955
    4. ',' → logprob: -7.005138874053955
    5. '_x' → logprob: -8.505138397216797
    6. 'x' → logprob: -8.755138397216797
    7. '_i' → logprob: -9.255138397216797
    8. 'row' → logprob: -9.505138397216797
    9. '_col' → logprob: -9.880138397216797
    10. '   ' → logprob: -10.755138397216797

Token 68: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8203886151313782
    2. 'min' → logprob: -1.1953885555267334
    3. '0' → logprob: -1.5703885555267334
    4. 'N' → logprob: -3.9453885555267334
    5. 's' → logprob: -4.0703887939453125
    6. ' max' → logprob: -5.9453887939453125
    7. ' min' → logprob: -6.0703887939453125
    8. '(max' → logprob: -6.3203887939453125
    9. '(min' → logprob: -6.3203887939453125
    10. '1' → logprob: -6.4453887939453125

Token 69: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014433303149417043
    2. '(s' → logprob: -6.626443386077881
    3. '0' → logprob: -9.501442909240723
    4. ' (' → logprob: -10.376442909240723
    5. '((' → logprob: -12.626442909240723
    6. '(n' → logprob: -12.626442909240723
    7. '(N' → logprob: -12.876442909240723
    8. 's' → logprob: -14.251442909240723
    9. ' ' → logprob: -15.251442909240723
    10. '```' → logprob: -15.563942909240723

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018670023418962955
    2. '(' → logprob: -6.501866817474365
    3. ' ' → logprob: -8.501867294311523
    4. 's' → logprob: -9.126867294311523
    5. '(s' → logprob: -10.126867294311523
    6. ')' → logprob: -12.501867294311523
    7. ' s' → logprob: -12.751867294311523
    8. '   ' → logprob: -13.626867294311523
    9. ' (' → logprob: -14.001867294311523
    10. ',' → logprob: -14.314367294311523

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006329148542135954
    2. ',s' → logprob: -5.13132905960083
    3. ' ,' → logprob: -7.88132905960083
    4. ',len' → logprob: -12.506329536437988
    5. ',n' → logprob: -12.506329536437988
    6. 's' → logprob: -12.631329536437988
    7. ',
' → logprob: -12.756329536437988
    8. ' s' → logprob: -13.256329536437988
    9. '   ' → logprob: -13.881329536437988
    10. ',end' → logprob: -14.006329536437988

Token 72: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023265164345502853
    2. ' s' → logprob: -3.7732651233673096
    3. 'N' → logprob: -12.27326488494873
    4. ')' → logprob: -12.52326488494873
    5. '   ' → logprob: -12.89826488494873
    6. ')s' → logprob: -12.89826488494873
    7. '(s' → logprob: -13.39826488494873
    8. ' ' → logprob: -13.52326488494873
    9. '`s' → logprob: -14.14826488494873
    10. ' N' → logprob: -14.89826488494873

Token 73: '-(' (ID: 18825)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2269989550113678
    2. '-' → logprob: -2.226999044418335
    3. '-N' → logprob: -2.351999044418335
    4. '-M' → logprob: -10.601999282836914
    5. ' ' → logprob: -12.101999282836914
    6. '-n' → logprob: -12.351999282836914
    7. '-K' → logprob: -12.726999282836914
    8. '-I' → logprob: -12.976999282836914
    9. '   ' → logprob: -13.601999282836914
    10. ' N' → logprob: -14.101999282836914

Token 74: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.1557283111615106e-05
    2. '(N' → logprob: -10.750041961669922
    3. ' N' → logprob: -11.000041961669922
    4. '   ' → logprob: -13.250041961669922
    5. '{' → logprob: -14.250041961669922
    6. ' ' → logprob: -15.000041961669922
    7. ' (' → logprob: -15.500041961669922
    8. 'n' → logprob: -15.750041961669922
    9. '[N' → logprob: -16.625041961669922
    10. '(' → logprob: -16.750041961669922

Token 75: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004314872436225414
    2. ' -' → logprob: -5.87931489944458
    3. '1' → logprob: -6.50431489944458
    4. ' ' → logprob: -11.504314422607422
    5. ')' → logprob: -13.879314422607422
    6. '2' → logprob: -15.441814422607422
    7. '[' → logprob: -15.504314422607422
    8. '   ' → logprob: -15.816814422607422
    9. '```' → logprob: -16.629314422607422
    10. '−' → logprob: -17.254314422607422

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.000007629394531
    3. '   ' → logprob: -14.625007629394531
    4. ')' → logprob: -14.875007629394531
    5. '<|end|>' → logprob: -16.75000762939453
    6. '```' → logprob: -17.37500762939453
    7. '  ' → logprob: -17.75000762939453
    8. '2' → logprob: -17.93750762939453
    9. '-' → logprob: -17.93750762939453
    10. '       ' → logprob: -18.18750762939453

Token 77: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10102172195911407
    2. ')
' → logprob: -2.3510217666625977
    3. ')
' → logprob: -7.976021766662598
    4. '))' → logprob: -8.226021766662598
    5. ' )' → logprob: -9.351021766662598
    6. ' )
' → logprob: -9.976021766662598
    7. '))
' → logprob: -10.226021766662598
    8. ')

' → logprob: -10.851021766662598
    9. ');' → logprob: -13.351021766662598
    10. '   ' → logprob: -13.601021766662598

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47971558570861816
    2. '<|end|>' → logprob: -2.229715585708618
    3. '       ' → logprob: -2.354715585708618
    4. '   ' → logprob: -2.354715585708618
    5. '    ' → logprob: -3.604715585708618
    6. ' to' → logprob: -4.604715347290039
    7. '<|end|>' → logprob: -4.729715347290039
    8. '            ' → logprob: -4.854715347290039
    9. ' ' → logprob: -5.104715347290039
    10. ',' → logprob: -5.604715347290039

Token 79: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.31859853863716125
    2. ' end' → logprob: -1.3185985088348389
    3. '       ' → logprob: -5.943598747253418
    4. ' for' → logprob: -6.693598747253418
    5. 'min' → logprob: -7.443598747253418
    6. 'for' → logprob: -7.568598747253418
    7. '   ' → logprob: -9.193598747253418
    8. '           ' → logprob: -9.568598747253418
    9. '        ' → logprob: -10.068598747253418
    10. ' min' → logprob: -10.193598747253418

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015041481237858534
    2. '=' → logprob: -6.501503944396973
    3. 's' → logprob: -13.751503944396973
    4. ' ' → logprob: -15.001503944396973
    5. '   ' → logprob: -15.501503944396973
    6. '    ' → logprob: -16.37650489807129
    7. ' =
' → logprob: -17.75150489807129
    8. '＝' → logprob: -17.75150489807129
    9. '=s' → logprob: -18.00150489807129
    10. ',' → logprob: -18.31400489807129

Token 81: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.22549672424793243
    2. ' min' → logprob: -1.600496768951416
    3. 'max' → logprob: -10.475496292114258
    4. 's' → logprob: -10.725496292114258
    5. ' s' → logprob: -10.975496292114258
    6. '	min' → logprob: -12.600496292114258
    7. ' max' → logprob: -12.725496292114258
    8. ' ' → logprob: -12.850496292114258
    9. '=min' → logprob: -12.850496292114258
    10. '   ' → logprob: -13.350496292114258

Token 82: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00371599942445755
    2. '(' → logprob: -5.753715991973877
    3. '(N' → logprob: -7.753715991973877
    4. '(n' → logprob: -9.503716468811035
    5. ' (' → logprob: -10.503716468811035
    6. 's' → logprob: -12.753716468811035
    7. '((' → logprob: -13.128716468811035
    8. '(
' → logprob: -14.128716468811035
    9. '(i' → logprob: -14.628716468811035
    10. ' s' → logprob: -15.003716468811035

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016024599317461252
    2. ',N' → logprob: -6.751602649688721
    3. ' ,' → logprob: -7.876602649688721
    4. '+' → logprob: -10.001602172851562
    5. ' +' → logprob: -12.626602172851562
    6. '   ' → logprob: -13.501602172851562
    7. 's' → logprob: -14.126602172851562
    8. ',n' → logprob: -14.251602172851562
    9. ' ' → logprob: -15.126602172851562
    10. ',s' → logprob: -15.501602172851562

Token 84: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.18000881373882294
    2. 'N' → logprob: -1.8050087690353394
    3. ' ' → logprob: -8.430008888244629
    4. '	N' → logprob: -10.930008888244629
    5. ' (' → logprob: -11.055008888244629
    6. '   ' → logprob: -12.430008888244629
    7. '(N' → logprob: -13.180008888244629
    8. '  ' → logprob: -14.055008888244629
    9. 'n' → logprob: -14.117508888244629
    10. ')' → logprob: -14.117508888244629

Token 85: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016039175912737846
    2. ' -' → logprob: -4.1410393714904785
    3. '1' → logprob: -13.01603889465332
    4. ')' → logprob: -13.14103889465332
    5. ' ' → logprob: -14.26603889465332
    6. 's' → logprob: -16.14103889465332
    7. '2' → logprob: -16.76603889465332
    8. '−' → logprob: -17.64103889465332
    9. '0' → logprob: -18.01603889465332
    10. '   ' → logprob: -18.26603889465332

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.833878508885391e-05
    2. ' ' → logprob: -10.250038146972656
    3. '-' → logprob: -14.125038146972656
    4. ')' → logprob: -14.375038146972656
    5. 's' → logprob: -14.375038146972656
    6. '2' → logprob: -14.875038146972656
    7. '   ' → logprob: -15.125038146972656
    8. '```' → logprob: -15.875038146972656
    9. ' -' → logprob: -16.375038146972656
    10. '  ' → logprob: -17.062538146972656

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06474123150110245
    2. ')+' → logprob: -2.8147411346435547
    3. ' )' → logprob: -7.064741134643555
    4. ')
' → logprob: -7.064741134643555
    5. '+' → logprob: -7.189741134643555
    6. '):' → logprob: -9.314741134643555
    7. ' +' → logprob: -9.689741134643555
    8. '       ' → logprob: -10.064741134643555
    9. '):
' → logprob: -10.189741134643555
    10. '   ' → logprob: -10.689741134643555

Token 88: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9633775949478149
    2. '           ' → logprob: -1.338377594947815
    3. '<|end|>' → logprob: -1.713377594947815
    4. '   ' → logprob: -2.4633774757385254
    5. '       ' → logprob: -2.8383774757385254
    6. ' for' → logprob: -4.213377475738525
    7. '<|end|>' → logprob: -5.088377475738525
    8. '    
' → logprob: -6.088377475738525
    9. '  
' → logprob: -6.338377475738525
    10. ' ' → logprob: -6.588377475738525

Token 89: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.610906720161438
    2. ' for' → logprob: -1.360906720161438
    3. 'for' (adapté à ' for') → logprob: -1.610906720161438
    4. 'i' → logprob: -7.735906600952148
    5. '	       ' → logprob: -9.360906600952148
    6. '       ' → logprob: -9.610906600952148
    7. '	for' → logprob: -9.610906600952148
    8. '
' → logprob: -10.235906600952148
    9. ' ' → logprob: -10.235906600952148
    10. '   ' → logprob: -10.360906600952148

Token 90: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6016997694969177
    2. ' j' → logprob: -1.1016998291015625
    3. 'i' → logprob: -2.8516998291015625
    4. 'j' → logprob: -3.6016998291015625
    5. ' r' → logprob: -3.8516998291015625
    6. ' x' → logprob: -4.9766998291015625
    7. 'r' → logprob: -6.3516998291015625
    8. ' k' → logprob: -6.3516998291015625
    9. ' y' → logprob: -6.9766998291015625
    10. 'x' → logprob: -7.6016998291015625

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0789366066455841
    2. 'in' → logprob: -2.5789365768432617
    3. ' ' → logprob: -11.203936576843262
    4. '	in' → logprob: -11.328936576843262
    5. ' =' → logprob: -12.203936576843262
    6. '=' → logprob: -12.578936576843262
    7. 'In' → logprob: -12.578936576843262
    8. 's' → logprob: -13.828936576843262
    9. '_in' → logprob: -13.828936576843262
    10. 'range' → logprob: -13.828936576843262

Token 92: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005259610712528229
    2. 'range' → logprob: -5.2552595138549805
    3. ' ' → logprob: -11.38025951385498
    4. ' start' → logprob: -12.38025951385498
    5. '(range' → logprob: -12.75525951385498
    6. '	range' → logprob: -12.88025951385498
    7. '[start' → logprob: -13.63025951385498
    8. ' reversed' → logprob: -14.00525951385498
    9. 'start' → logprob: -14.75525951385498
    10. ' xrange' → logprob: -15.00525951385498

Token 93: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.3213725686073303
    2. '(start' → logprob: -1.3213725090026855
    3. 'end' → logprob: -5.6963725090026855
    4. '(' → logprob: -6.1963725090026855
    5. ' end' → logprob: -6.8213725090026855
    6. ' (' → logprob: -6.9463725090026855
    7. 'start' → logprob: -7.5713725090026855
    8. ' start' → logprob: -9.946372985839844
    9. '	end' → logprob: -10.821372985839844
    10. '=end' → logprob: -11.821372985839844

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028967633843421936
    2. ' ,' → logprob: -6.252896785736084
    3. ',start' → logprob: -7.502896785736084
    4. '+' → logprob: -8.377896308898926
    5. ',-' → logprob: -9.127896308898926
    6. ' +' → logprob: -10.252896308898926
    7. ' -' → logprob: -10.877896308898926
    8. ',end' → logprob: -11.877896308898926
    9. ',int' → logprob: -12.877896308898926
    10. '-' → logprob: -13.252896308898926

Token 95: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.020586034283041954
    2. ' start' → logprob: -3.8955860137939453
    3. '-' → logprob: -11.020586013793945
    4. '	start' → logprob: -11.395586013793945
    5. ' ' → logprob: -11.770586013793945
    6. '   ' → logprob: -12.770586013793945
    7. ' -' → logprob: -13.270586013793945
    8. '(start' → logprob: -13.395586013793945
    9. '=start' → logprob: -13.770586013793945
    10. '[start' → logprob: -14.645586013793945

Token 96: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028053484857082367
    2. ' -' → logprob: -5.877805233001709
    3. ' ' → logprob: -15.127805709838867
    4. '   ' → logprob: -15.752805709838867
    5. '```' → logprob: -16.252805709838867
    6. '−' → logprob: -17.627805709838867
    7. '1' → logprob: -17.752805709838867
    8. '	' → logprob: -18.127805709838867
    9. '       ' → logprob: -18.377805709838867
    10. '  ' → logprob: -18.377805709838867

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.825890159234405e-05
    2. ' ' → logprob: -9.875068664550781
    3. '-' → logprob: -11.250068664550781
    4. '   ' → logprob: -13.250068664550781
    5. '2' → logprob: -14.937568664550781
    6. '  ' → logprob: -15.000068664550781
    7. '```' → logprob: -15.625068664550781
    8. ' -' → logprob: -16.00006866455078
    9. ')' → logprob: -16.75006866455078
    10. '    ' → logprob: -16.81256866455078

Token 98: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18606984615325928
    2. ',' → logprob: -1.9360698461532593
    3. ',-' → logprob: -3.686069965362549
    4. ' -' → logprob: -8.06106948852539
    5. '   ' → logprob: -10.06106948852539
    6. '```' → logprob: -10.18606948852539
    7. 'step' → logprob: -11.81106948852539
    8. '-step' → logprob: -12.18606948852539
    9. ' step' → logprob: -12.31106948852539
    10. 'Step' → logprob: -12.43606948852539

Token 99: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00975833274424076
    2. ' -' → logprob: -4.634758472442627
    3. ' ' → logprob: -14.384757995605469
    4. '```' → logprob: -14.509757995605469
    5. '   ' → logprob: -14.634757995605469
    6. '1' → logprob: -15.509757995605469
    7. '  ' → logprob: -15.634757995605469
    8. ')' → logprob: -16.25975799560547
    9. ',-' → logprob: -16.38475799560547
    10. '-step' → logprob: -16.75975799560547

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '-' → logprob: -14.87501335144043
    4. ')' → logprob: -15.75001335144043
    5. '   ' → logprob: -16.50001335144043
    6. '```' → logprob: -16.50001335144043
    7. ' -' → logprob: -17.31251335144043
    8. '
' → logprob: -18.56251335144043
    9. '１' → logprob: -18.68751335144043
    10. '  ' → logprob: -18.81251335144043

Token 101: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16044925153255463
    2. '):' → logprob: -1.9104492664337158
    3. '):
' → logprob: -9.035449028015137
    4. ':' → logprob: -10.410449028015137
    5. '       ' → logprob: -10.535449028015137
    6. '):

' → logprob: -11.160449028015137
    7. ')' → logprob: -11.785449028015137
    8. ' ):
' → logprob: -11.910449028015137
    9. '   ' → logprob: -12.035449028015137
    10. '           ' → logprob: -12.410449028015137

Token 102: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06452342122793198
    2. '               ' → logprob: -3.564523458480835
    3. '<|end|>' → logprob: -4.064523220062256
    4. ' mat' → logprob: -5.439523220062256
    5. '        
' → logprob: -5.689523220062256
    6. ' ' → logprob: -6.439523220062256
    7. '[' → logprob: -6.564523220062256
    8. 'mat' → logprob: -6.814523220062256
    9. '   ' → logprob: -7.064523220062256
    10. '```' → logprob: -7.189523220062256

Token 103: ' j' (ID: 441)
  Prédit: ' mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mat' → logprob: -0.728461503982544
    2. ' j' → logprob: -0.853461503982544
    3. 'mat' → logprob: -2.853461503982544
    4. 'j' (adapté à ' j') → logprob: -3.478461503982544
    5. '               ' → logprob: -7.353461265563965
    6. ' row' → logprob: -7.728461265563965
    7. '                   ' → logprob: -7.853461265563965
    8. '   ' → logprob: -8.103461265563965
    9. ' ' → logprob: -8.478461265563965
    10. '                ' → logprob: -8.728461265563965

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22542023658752441
    2. ' =' → logprob: -1.6004202365875244
    3. ' ' → logprob: -12.475419998168945
    4. '=
' → logprob: -13.350419998168945
    5. '=s' → logprob: -14.100419998168945
    6. ')' → logprob: -14.725419998168945
    7. 's' → logprob: -15.350419998168945
    8. ' =
' → logprob: -15.975419998168945
    9. '=

' → logprob: -16.100419998168945
    10. '```' → logprob: -16.100419998168945

Token 105: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31328949332237244
    2. 's' → logprob: -1.3132895231246948
    3. ' ' → logprob: -10.813289642333984
    4. '(s' → logprob: -12.438289642333984
    5. ' ' → logprob: -13.063289642333984
    6. '  ' → logprob: -14.938289642333984
    7. ' (' → logprob: -15.188289642333984
    8. '   ' → logprob: -15.563289642333984
    9. '	s' → logprob: -15.563289642333984
    10. '{s' → logprob: -15.938289642333984

Token 106: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.040989119559526443
    2. '-' → logprob: -3.7909891605377197
    3. '-i' → logprob: -4.040988922119141
    4. ' i' → logprob: -12.91598892211914
    5. 'i' → logprob: -13.16598892211914
    6. ' ' → logprob: -13.29098892211914
    7. '-j' → logprob: -15.41598892211914
    8. '
' → logprob: -15.66598892211914
    9. '<|end|>' → logprob: -15.91598892211914
    10. '```' → logprob: -16.29098892211914

Token 107: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004892880679108202
    2. ' i' → logprob: -7.625489234924316
    3. '<|end|>' → logprob: -13.875489234924316
    4. '[i' → logprob: -16.375490188598633
    5. '	i' → logprob: -16.375490188598633
    6. '*i' → logprob: -16.500490188598633
    7. ' ' → logprob: -16.875490188598633
    8. '<|end|>' → logprob: -17.000490188598633
    9. ')i' → logprob: -17.375490188598633
    10. '_i' → logprob: -18.125490188598633

Token 108: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0197476577013731
    2. 'mat' → logprob: -4.644747734069824
    3. '
' → logprob: -6.019747734069824
    4. '       ' → logprob: -6.144747734069824
    5. '                
' → logprob: -6.144747734069824
    6. ' mat' → logprob: -6.894747734069824
    7. '<|end|>' → logprob: -7.269747734069824
    8. '           ' → logprob: -8.019747734069824
    9. '	mat' → logprob: -8.144747734069824
    10. ',' → logprob: -9.394747734069824

Token 109: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03036380559206009
    2. '
' → logprob: -4.780364036560059
    3. 'mat' → logprob: -5.030364036560059
    4. '                
' → logprob: -5.030364036560059
    5. ' mat' → logprob: -5.530364036560059
    6. '       ' → logprob: -6.405364036560059
    7. '<|end|>' → logprob: -7.280364036560059
    8. '	mat' → logprob: -7.655364036560059
    9. '(mat' → logprob: -8.030364036560059
    10. '           ' → logprob: -8.155364036560059

Token 110: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' (adapté à ' mat') → logprob: -0.07945875078439713
    2. ' mat' → logprob: -2.579458713531494
    3. '               ' → logprob: -7.579458713531494
    4. '	mat' → logprob: -10.454459190368652
    5. '                ' → logprob: -12.079459190368652
    6. '           ' → logprob: -12.079459190368652
    7. ' ' → logprob: -12.454459190368652
    8. '
' → logprob: -13.079459190368652
    9. '```' → logprob: -13.079459190368652
    10. '(mat' → logprob: -13.454459190368652

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019138160860165954
    2. '[' → logprob: -9.250191688537598
    3. '[j' → logprob: -9.750191688537598
    4. '][' → logprob: -10.625191688537598
    5. '[I' → logprob: -11.625191688537598
    6. '[s' → logprob: -14.500191688537598
    7. ')[' → logprob: -14.500191688537598
    8. ' [' → logprob: -14.750191688537598
    9. '[int' → logprob: -15.125191688537598
    10. '[row' → logprob: -15.375191688537598

Token 112: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007455448503606021
    2. '[j' → logprob: -7.62574577331543
    3. ']' → logprob: -8.50074577331543
    4. ' ][' → logprob: -10.00074577331543
    5. '[' → logprob: -12.12574577331543
    6. ']][' → logprob: -14.12574577331543
    7. '[i' → logprob: -14.37574577331543
    8. '"][' → logprob: -14.37574577331543
    9. ',j' → logprob: -15.37574577331543
    10. ''][' → logprob: -15.50074577331543

Token 113: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00014025058771949261
    2. ' j' → logprob: -8.875140190124512
    3. '[j' → logprob: -15.875140190124512
    4. '	j' → logprob: -16.125141143798828
    5. '<|end|>' → logprob: -17.500141143798828
    6. ' ' → logprob: -17.625141143798828
    7. ']' → logprob: -17.750141143798828
    8. ':j' → logprob: -18.125141143798828
    9. '$j' → logprob: -18.125141143798828
    10. '```' → logprob: -18.250141143798828

Token 114: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06209663674235344
    2. '=' → logprob: -3.43709659576416
    3. ' =' → logprob: -3.93709659576416
    4. ']=' → logprob: -5.43709659576416
    5. ' ]' → logprob: -5.56209659576416
    6. ')' → logprob: -8.06209659576416
    7. ')]' → logprob: -11.43709659576416
    8. ' ' → logprob: -11.56209659576416
    9. ')=' → logprob: -11.81209659576416
    10. ' )' → logprob: -12.68709659576416

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022443771362305
    2. '=' → logprob: -1.910224437713623
    3. ' +=' → logprob: -15.910224914550781
    4. ' ' → logprob: -16.41022491455078
    5. '＝' → logprob: -17.53522491455078
    6. '+=' → logprob: -17.66022491455078
    7. '=num' → logprob: -17.91022491455078
    8. ',' → logprob: -18.53522491455078
    9. ' =)' → logprob: -18.66022491455078
    10. '.=' → logprob: -19.28522491455078

Token 116: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.01815216802060604
    2. ' num' → logprob: -4.018152236938477
    3. '   ' → logprob: -14.143152236938477
    4. ' ' → logprob: -14.393152236938477
    5. 'str' → logprob: -14.643152236938477
    6. '	num' → logprob: -15.018152236938477
    7. '(num' → logprob: -17.268152236938477
    8. '  ' → logprob: -17.393152236938477
    9. ' ' → logprob: -17.518152236938477
    10. '           ' → logprob: -17.643152236938477

Token 117: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.179569077678025e-05
    2. '                
' → logprob: -10.625041961669922
    3. '```' → logprob: -12.250041961669922
    4. '<|end|>' → logprob: -12.750041961669922
    5. 'num' → logprob: -13.375041961669922
    6. '              ' → logprob: -13.625041961669922
    7. '\n' → logprob: -13.875041961669922
    8. ',' → logprob: -14.000041961669922
    9. '           ' → logprob: -14.500041961669922
    10. '
' → logprob: -14.500041961669922

Token 118: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.8889261304575484e-06
    2. '```' → logprob: -13.500003814697266
    3. 'num' → logprob: -13.875003814697266
    4. '           ' → logprob: -14.750003814697266
    5. '                
' → logprob: -14.875003814697266
    6. '       ' → logprob: -15.625003814697266
    7. '              ' → logprob: -15.875003814697266
    8. '                   ' → logprob: -16.125003814697266
    9. '                       ' → logprob: -17.125003814697266
    10. '
' → logprob: -17.125003814697266

Token 119: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -1.7432603272027336e-06
    2. ' num' → logprob: -14.000001907348633
    3. '               ' → logprob: -14.125001907348633
    4. '                   ' → logprob: -16.125001907348633
    5. '```' → logprob: -17.000001907348633
    6. '	num' → logprob: -17.125001907348633
    7. '   ' → logprob: -18.875001907348633
    8. '           ' → logprob: -19.250001907348633
    9. '``' → logprob: -20.375001907348633
    10. '
' → logprob: -20.375001907348633

Token 120: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048893582075834274
    2. ' +=' → logprob: -3.048893690109253
    3. '+' → logprob: -8.173893928527832
    4. '=' → logprob: -11.173893928527832
    5. ']+=' → logprob: -11.673893928527832
    6. '```' → logprob: -14.673893928527832
    7. '+='' → logprob: -15.048893928527832
    8. '<|end|>' → logprob: -15.173893928527832
    9. '+="' → logprob: -15.298893928527832
    10. '+=(' → logprob: -16.423892974853516

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -20.000001907348633
    5. '<|end|>' → logprob: -21.250001907348633
    6. '１' → logprob: -21.250001907348633
    7. '+' → logprob: -21.500001907348633
    8. '
' → logprob: -21.875001907348633
    9. '۱' → logprob: -21.875001907348633
    10. '           ' → logprob: -22.000001907348633

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -20.875
    5. '１' → logprob: -21.0
    6. '۱' → logprob: -21.875
    7. '<|end|>' → logprob: -22.625
    8. '
' → logprob: -22.875
    9. '-' → logprob: -22.875
    10. '           ' → logprob: -23.25

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002280030632391572
    2. '   ' → logprob: -6.377280235290527
    3. 'else' → logprob: -7.502280235290527
    4. ' else' → logprob: -11.127280235290527
    5. '```' → logprob: -12.627280235290527
    6. 'elif' → logprob: -13.252280235290527
    7. 'print' → logprob: -13.502280235290527
    8. '<|end|>' → logprob: -13.752280235290527
    9. '           ' → logprob: -14.252280235290527
    10. '
' → logprob: -15.127280235290527

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002714999485760927
    2. '   ' → logprob: -6.002715110778809
    3. 'else' → logprob: -8.377715110778809
    4. ' else' → logprob: -12.752715110778809
    5. '```' → logprob: -12.877715110778809
    6. 'print' → logprob: -13.502715110778809
    7. 'elif' → logprob: -13.877715110778809
    8. '           ' → logprob: -15.252715110778809
    9. '<|end|>' → logprob: -15.502715110778809
    10. '...' → logprob: -16.127714157104492

Token 125: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7219332456588745
    2. '       ' → logprob: -0.9719332456588745
    3. '   ' → logprob: -2.221933364868164
    4. ' else' → logprob: -3.596933364868164
    5. '	else' → logprob: -11.346933364868164
    6. 'elif' → logprob: -11.471933364868164
    7. '```' → logprob: -13.096933364868164
    8. 'for' → logprob: -14.096933364868164
    9. '           ' → logprob: -14.096933364868164
    10. '    ' → logprob: -14.721933364868164

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02733980491757393
    2. ':
' → logprob: -3.9023396968841553
    3. '           ' → logprob: -5.527339935302734
    4. '       ' → logprob: -5.902339935302734
    5. '        ' → logprob: -11.527339935302734
    6. '   ' → logprob: -11.777339935302734
    7. '=' → logprob: -11.902339935302734
    8. '               ' → logprob: -12.027339935302734
    9. ':

' → logprob: -12.277339935302734
    10. '          ' → logprob: -12.402339935302734

Token 127: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.724082887172699
    2. 'start' → logprob: -1.3490829467773438
    3. '           ' → logprob: -1.7240829467773438
    4. ' start' → logprob: -2.5990829467773438
    5. '   ' → logprob: -6.474082946777344
    6. '        ' → logprob: -7.599082946777344
    7. '```' → logprob: -7.599082946777344
    8. '	start' → logprob: -8.724082946777344
    9. '               ' → logprob: -9.599082946777344
    10. '    ' → logprob: -10.099082946777344

Token 128: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.0015506906202062964
    2. ' start' → logprob: -6.626550674438477
    3. '           ' → logprob: -9.626550674438477
    4. '       ' → logprob: -9.751550674438477
    5. 'for' → logprob: -10.126550674438477
    6. '   ' → logprob: -10.501550674438477
    7. 'end' → logprob: -11.251550674438477
    8. 'j' → logprob: -11.501550674438477
    9. '	start' → logprob: -12.626550674438477
    10. 'i' → logprob: -13.376550674438477

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931473612785339
    2. ' =' → logprob: -0.6931473612785339
    3. '=max' → logprob: -17.068147659301758
    4. '=min' → logprob: -17.318147659301758
    5. '=

' → logprob: -17.818147659301758
    6. '=
' → logprob: -18.193147659301758
    7. '   ' → logprob: -18.443147659301758
    8. ' ' → logprob: -18.693147659301758
    9. '```' → logprob: -18.818147659301758
    10. '＝' → logprob: -19.068147659301758

Token 130: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.051701340824365616
    2. 'min' → logprob: -3.051701307296753
    3. '0' → logprob: -6.176701545715332
    4. ' max' → logprob: -6.926701545715332
    5. ' min' → logprob: -10.051701545715332
    6. ' ' → logprob: -12.551701545715332
    7. '   ' → logprob: -13.426701545715332
    8. 's' → logprob: -13.676701545715332
    9. '	max' → logprob: -14.801701545715332
    10. '       ' → logprob: -15.551701545715332

Token 131: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01816621422767639
    2. '0' → logprob: -4.0181660652160645
    3. '(
' → logprob: -11.768166542053223
    4. ' (' → logprob: -12.143166542053223
    5. 'def' → logprob: -13.768166542053223
    6. ' ' → logprob: -14.143166542053223
    7. '```' → logprob: -15.268166542053223
    8. '1' → logprob: -15.518166542053223
    9. ',' → logprob: -15.643166542053223
    10. '=' → logprob: -16.268165588378906

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06999479234218597
    2. '(' → logprob: -2.6949946880340576
    3. ' ' → logprob: -10.694994926452637
    4. '(s' → logprob: -11.069994926452637
    5. 's' → logprob: -12.069994926452637
    6. '(N' → logprob: -12.319994926452637
    7. ' (' → logprob: -12.694994926452637
    8. ',' → logprob: -13.319994926452637
    9. '1' → logprob: -13.819994926452637
    10. '((' → logprob: -14.507494926452637

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001544321421533823
    2. ',s' → logprob: -9.125154495239258
    3. '(s' → logprob: -10.500154495239258
    4. ' ,' → logprob: -11.500154495239258
    5. '(' → logprob: -12.500154495239258
    6. ')' → logprob: -13.750154495239258
    7. 's' → logprob: -13.875154495239258
    8. '   ' → logprob: -14.500154495239258
    9. ',start' → logprob: -14.625154495239258
    10. ',j' → logprob: -15.125154495239258

Token 134: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013910084962844849
    2. 'N' → logprob: -5.138910293579102
    3. ' s' → logprob: -5.263910293579102
    4. '0' → logprob: -6.888910293579102
    5. '(s' → logprob: -7.263910293579102
    6. '(N' → logprob: -7.388910293579102
    7. 'i' → logprob: -8.763910293579102
    8. ')' → logprob: -10.138910293579102
    9. '   ' → logprob: -10.138910293579102
    10. ' N' → logprob: -10.263910293579102

Token 135: '-(' (ID: 18825)
  Prédit: '-('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-(' → logprob: -0.03788195177912712
    2. '-' → logprob: -3.412881851196289
    3. ' -' → logprob: -5.662881851196289
    4. '-s' → logprob: -8.037881851196289
    5. '-N' → logprob: -8.412881851196289
    6. ' -(' → logprob: -8.787881851196289
    7. '-n' → logprob: -10.537881851196289
    8. '-i' → logprob: -11.287881851196289
    9. '-j' → logprob: -12.412881851196289
    10. '-min' → logprob: -12.662881851196289

Token 136: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02975570224225521
    2. '(N' → logprob: -3.5297555923461914
    3. ' N' → logprob: -13.279755592346191
    4. '[N' → logprob: -13.779755592346191
    5. '   ' → logprob: -13.904755592346191
    6. ' (' → logprob: -14.154755592346191
    7. '1' → logprob: -16.154756546020508
    8. '(' → logprob: -16.154756546020508
    9. ' ' → logprob: -16.154756546020508
    10. '	N' → logprob: -16.404756546020508

Token 137: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024976562708616257
    2. '1' → logprob: -6.002497673034668
    3. ' -' → logprob: -10.877497673034668
    4. ' ' → logprob: -13.877497673034668
    5. '2' → logprob: -14.377497673034668
    6. '```' → logprob: -14.627497673034668
    7. '   ' → logprob: -15.127497673034668
    8. '[' → logprob: -15.502497673034668
    9. ')' → logprob: -15.502497673034668
    10. '#' → logprob: -15.752497673034668

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. ')' → logprob: -17.625
    4. '(' → logprob: -18.25
    5. '<|end|>' → logprob: -19.875
    6. '-' → logprob: -20.0
    7. '[' → logprob: -20.125
    8. '(N' → logprob: -20.375
    9. '```' → logprob: -21.125
    10. '   ' → logprob: -21.5

Token 139: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008693872950971127
    2. ')' → logprob: -4.758693695068359
    3. 'end' → logprob: -10.63369369506836
    4. '           ' → logprob: -10.88369369506836
    5. ')
' → logprob: -10.88369369506836
    6. ' )
' → logprob: -11.13369369506836
    7. ')

' → logprob: -13.63369369506836
    8. '   ' → logprob: -14.38369369506836
    9. '       ' → logprob: -14.75869369506836
    10. ' )' → logprob: -15.50869369506836

Token 140: '           ' (ID: 352)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03682232275605202
    2. '           ' → logprob: -3.6618223190307617
    3. ' end' → logprob: -4.911822319030762
    4. '   ' → logprob: -5.786822319030762
    5. '       ' → logprob: -10.411822319030762
    6. '	end' → logprob: -12.536822319030762
    7. '    ' → logprob: -13.661822319030762
    8. ' ' → logprob: -13.786822319030762
    9. '=end' → logprob: -14.536822319030762
    10. '(end' → logprob: -14.661822319030762

Token 141: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.0004315036640036851
    2. ' end' → logprob: -7.750431537628174
    3. '           ' → logprob: -14.000431060791016
    4. '       ' → logprob: -17.250431060791016
    5. 'for' → logprob: -17.625431060791016
    6. '	end' → logprob: -19.500431060791016
    7. '(end' → logprob: -20.250431060791016
    8. '   ' → logprob: -20.250431060791016
    9. '.end' → logprob: -21.125431060791016
    10. ',end' → logprob: -21.250431060791016

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889298349618912
    2. '=' → logprob: -2.578892946243286
    3. '           ' → logprob: -13.078892707824707
    4. '   ' → logprob: -14.203892707824707
    5. '    ' → logprob: -15.828892707824707
    6. '       ' → logprob: -16.578893661499023
    7. '            ' → logprob: -16.703893661499023
    8. ' ' → logprob: -16.703893661499023
    9. '```' → logprob: -17.328893661499023
    10. ')' → logprob: -17.828893661499023

Token 143: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0019289902411401272
    2. ' min' → logprob: -6.251928806304932
    3. 's' → logprob: -14.87692928314209
    4. 'max' → logprob: -16.751928329467773
    5. '(min' → logprob: -18.001928329467773
    6. ' s' → logprob: -19.001928329467773
    7. '   ' → logprob: -19.501928329467773
    8. '	min' → logprob: -19.751928329467773
    9. ' ' → logprob: -20.751928329467773
    10. '[min' → logprob: -21.251928329467773

Token 144: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00011033779446734115
    2. '(' → logprob: -9.125110626220703
    3. 's' → logprob: -14.250110626220703
    4. '(N' → logprob: -15.375110626220703
    5. '(
' → logprob: -15.500110626220703
    6. '(n' → logprob: -15.875110626220703
    7. ' (' → logprob: -16.750110626220703
    8. 'N' → logprob: -16.875110626220703
    9. '((' → logprob: -17.000110626220703
    10. '(end' → logprob: -17.875110626220703

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004935935605317354
    2. '+' → logprob: -6.0049357414245605
    3. ',N' → logprob: -6.2549357414245605
    4. ')' → logprob: -8.504936218261719
    5. ' ,' → logprob: -8.504936218261719
    6. ' +' → logprob: -9.879936218261719
    7. '(N' → logprob: -10.129936218261719
    8. ',
' → logprob: -12.129936218261719
    9. ',s' → logprob: -12.129936218261719
    10. '   ' → logprob: -12.379936218261719

Token 146: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015222413931041956
    2. ' N' → logprob: -6.626522064208984
    3. 's' → logprob: -8.626522064208984
    4. '(N' → logprob: -12.376522064208984
    5. 'i' → logprob: -12.626522064208984
    6. ' s' → logprob: -12.876522064208984
    7. '   ' → logprob: -12.876522064208984
    8. ' ' → logprob: -13.626522064208984
    9. '0' → logprob: -13.626522064208984
    10. 'j' → logprob: -14.626522064208984

Token 147: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00039885283331386745
    2. '[' → logprob: -9.000398635864258
    3. '1' → logprob: -9.000398635864258
    4. ')' → logprob: -9.125398635864258
    5. ' -' → logprob: -10.250398635864258
    6. '<|end|>' → logprob: -13.000398635864258
    7. '```' → logprob: -13.625398635864258
    8. '+' → logprob: -14.000398635864258
    9. '
' → logprob: -14.625398635864258
    10. '   ' → logprob: -14.875398635864258

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.500000953674316
    3. '0' → logprob: -15.250000953674316
    4. '-' → logprob: -16.125001907348633
    5. ')' → logprob: -16.500001907348633
    6. '```' → logprob: -16.500001907348633
    7. '2' → logprob: -16.750001907348633
    8. '
' → logprob: -17.687501907348633
    9. '   ' → logprob: -18.187501907348633
    10. 's' → logprob: -19.250001907348633

Token 149: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008531357161700726
    2. 'for' → logprob: -4.88353157043457
    3. ' for' → logprob: -7.63353157043457
    4. ')' → logprob: -8.13353157043457
    5. ')
' → logprob: -9.38353157043457
    6. '       ' → logprob: -10.38353157043457
    7. '   ' → logprob: -10.88353157043457
    8. '
' → logprob: -12.88353157043457
    9. '```' → logprob: -12.88353157043457
    10. '               ' → logprob: -13.00853157043457

Token 150: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04284913092851639
    2. '           ' → logprob: -3.292849063873291
    3. ' for' → logprob: -5.792849063873291
    4. '```' → logprob: -7.042849063873291
    5. '   ' → logprob: -7.417849063873291
    6. '	for' → logprob: -8.66784954071045
    7. '       ' → logprob: -9.41784954071045
    8. '		' → logprob: -11.66784954071045
    9. '	       ' → logprob: -12.91784954071045
    10. '               ' → logprob: -13.41784954071045

Token 151: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003919295500963926
    2. '           ' → logprob: -6.1289191246032715
    3. ' for' → logprob: -6.3789191246032715
    4. '	for' → logprob: -10.75391960144043
    5. '```' → logprob: -12.00391960144043
    6. '       ' → logprob: -12.37891960144043
    7. '   ' → logprob: -13.12891960144043
    8. '		' → logprob: -13.75391960144043
    9. '
' → logprob: -14.62891960144043
    10. '	       ' → logprob: -16.12891960144043

Token 152: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16042326390743256
    2. 'j' → logprob: -1.9104232788085938
    3. ' i' → logprob: -8.910423278808594
    4. ' j' → logprob: -9.660423278808594
    5. '```' → logprob: -16.035423278808594
    6. '   ' → logprob: -16.285423278808594
    7. '	i' → logprob: -16.910423278808594
    8. 's' → logprob: -17.535423278808594
    9. '	j' → logprob: -17.535423278808594
    10. '_j' → logprob: -17.785423278808594

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602427214384079
    2. 'in' → logprob: -1.9102426767349243
    3. 'range' → logprob: -11.410243034362793
    4. 'start' → logprob: -12.660243034362793
    5. 'from' → logprob: -13.660243034362793
    6. 'import' → logprob: -14.160243034362793
    7. 'd' → logprob: -14.660243034362793
    8. '   ' → logprob: -14.785243034362793
    9. '[start' → logprob: -15.410243034362793
    10. ' ' → logprob: -15.660243034362793

Token 154: ' range' (ID: 3352)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.13797229528427124
    2. 'start' → logprob: -2.137972354888916
    3. 'range' → logprob: -4.762972354888916
    4. ' end' → logprob: -6.262972354888916
    5. ' start' → logprob: -8.387971878051758
    6. '(end' → logprob: -8.512971878051758
    7. '(start' → logprob: -9.887971878051758
    8. ' range' → logprob: -9.887971878051758
    9. '   ' → logprob: -13.012971878051758
    10. '=end' → logprob: -14.012971878051758

Token 155: '(end' (ID: 29409)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.2728477716445923
    2. '(end' → logprob: -1.2728477716445923
    3. 'end' → logprob: -1.3978477716445923
    4. '(start' → logprob: -1.6478477716445923
    5. ' end' → logprob: -8.897848129272461
    6. ' start' → logprob: -10.022848129272461
    7. ' (' → logprob: -10.022848129272461
    8. '(' → logprob: -10.147848129272461
    9. '[end' → logprob: -11.272848129272461
    10. ',end' → logprob: -11.897848129272461

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.068900465965271
    2. ',start' → logprob: -2.8189005851745605
    3. 'start' → logprob: -5.0689005851745605
    4. ' ,' → logprob: -8.068900108337402
    5. '(start' → logprob: -8.318900108337402
    6. ' start' → logprob: -11.193900108337402
    7. '   ' → logprob: -11.318900108337402
    8. '           ' → logprob: -11.568900108337402
    9. '=start' → logprob: -12.318900108337402
    10. '       ' → logprob: -12.818900108337402

Token 157: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.001502598519437015
    2. ' start' → logprob: -6.501502513885498
    3. '[start' → logprob: -16.251502990722656
    4. '(start' → logprob: -16.376502990722656
    5. '   ' → logprob: -16.751502990722656
    6. ' ' → logprob: -17.501502990722656
    7. '	start' → logprob: -18.251502990722656
    8. '=start' → logprob: -18.501502990722656
    9. '  ' → logprob: -20.001502990722656
    10. '       ' → logprob: -20.251502990722656

Token 158: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.157039049663581e-05
    2. ' -' → logprob: -9.875051498413086
    3. ',' → logprob: -18.000051498413086
    4. '           ' → logprob: -18.250051498413086
    5. '+' → logprob: -18.500051498413086
    6. '1' → logprob: -18.875051498413086
    7. ' ' → logprob: -19.125051498413086
    8. '```' → logprob: -19.125051498413086
    9. '   ' → logprob: -19.625051498413086
    10. '       ' → logprob: -19.750051498413086

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602560132741928
    2. '-' → logprob: -1.910256028175354
    3. ' -' → logprob: -10.535256385803223
    4. ' ' → logprob: -13.035256385803223
    5. '0' → logprob: -13.660256385803223
    6. '   ' → logprob: -13.910256385803223
    7. '```' → logprob: -14.535256385803223
    8. '
' → logprob: -15.410256385803223
    9. '

' → logprob: -16.285255432128906
    10. '  ' → logprob: -16.660255432128906

Token 160: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06404241174459457
    2. ',' → logprob: -2.814042329788208
    3. ',-' → logprob: -6.439042568206787
    4. ' -' → logprob: -7.814042568206787
    5. '           ' → logprob: -10.814042091369629
    6. ' ,' → logprob: -10.814042091369629
    7. '```' → logprob: -11.439042091369629
    8. '               ' → logprob: -12.189042091369629
    9. '-,' → logprob: -12.689042091369629
    10. 's' → logprob: -13.314042091369629

Token 161: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1472419600977446e-06
    2. ' -' → logprob: -13.750000953674316
    3. '```' → logprob: -19.000001907348633
    4. '1' → logprob: -19.375001907348633
    5. '-step' → logprob: -20.000001907348633
    6. ' ' → logprob: -21.750001907348633
    7. '-i' → logprob: -21.875001907348633
    8. '﻿' → logprob: -22.250001907348633
    9. '   ' → logprob: -22.250001907348633
    10. ')' → logprob: -22.500001907348633

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016049502417445183
    2. '-' → logprob: -4.141049385070801
    3. ' -' → logprob: -11.1410493850708
    4. '```' → logprob: -14.7660493850708
    5. ' ' → logprob: -15.8910493850708
    6. ')' → logprob: -16.141050338745117
    7. '(-' → logprob: -17.141050338745117
    8. '   ' → logprob: -17.266050338745117
    9. '
' → logprob: -18.766050338745117
    10. '

' → logprob: -18.891050338745117

Token 163: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04313289746642113
    2. '):' → logprob: -3.168132781982422
    3. ':' → logprob: -9.668132781982422
    4. ':
' → logprob: -10.418132781982422
    5. '):
' → logprob: -10.668132781982422
    6. '):

' → logprob: -12.293132781982422
    7. '():
' → logprob: -12.293132781982422
    8. '               ' → logprob: -13.293132781982422
    9. ')' → logprob: -13.543132781982422
    10. '       ' → logprob: -13.668132781982422

Token 164: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.308403342962265
    2. 'i' → logprob: -1.4334033727645874
    3. '```' → logprob: -4.558403491973877
    4. ' i' → logprob: -4.808403491973877
    5. '           ' → logprob: -5.433403491973877
    6. '   ' → logprob: -6.558403491973877
    7. '       ' → logprob: -6.683403491973877
    8. '<|end|>' → logprob: -8.058403015136719
    9. ' ' → logprob: -8.433403015136719
    10. '	       ' → logprob: -8.808403015136719

Token 165: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -3.5954712075181305e-05
    2. ' i' → logprob: -10.250036239624023
    3. '```' → logprob: -15.500036239624023
    4. '	i' → logprob: -16.250036239624023
    5. '   ' → logprob: -16.375036239624023
    6. '           ' → logprob: -17.625036239624023
    7. '<|end|>' → logprob: -17.875036239624023
    8. '               ' → logprob: -18.125036239624023
    9. '       ' → logprob: -18.375036239624023
    10. ' ' → logprob: -18.375036239624023

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269284337759018
    2. ' =' → logprob: -2.1269283294677734
    3. ')' → logprob: -16.126928329467773
    4. 's' → logprob: -16.251928329467773
    5. '=s' → logprob: -16.251928329467773
    6. ' ' → logprob: -17.001928329467773
    7. '=

' → logprob: -17.001928329467773
    8. '=
' → logprob: -17.126928329467773
    9. '<|end|>' → logprob: -18.126928329467773
    10. '＝' → logprob: -18.876928329467773

Token 167: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008614808320999146
    2. ' s' → logprob: -4.758615016937256
    3. 'j' → logprob: -16.008615493774414
    4. '`s' → logprob: -16.883615493774414
    5. '```' → logprob: -17.633615493774414
    6. '	s' → logprob: -18.008615493774414
    7. '(s' → logprob: -18.133615493774414
    8. '<s' → logprob: -18.633615493774414
    9. ' ' → logprob: -19.008615493774414
    10. 'S' → logprob: -19.258615493774414

Token 168: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09179466962814331
    2. ' -' → logprob: -2.466794729232788
    3. '=' → logprob: -6.466794490814209
    4. '-j' → logprob: -7.341794490814209
    5. ' =' → logprob: -7.591794490814209
    6. ' ' → logprob: -9.966794967651367
    7. '<|end|>' → logprob: -10.216794967651367
    8. 'j' → logprob: -11.216794967651367
    9. '-=' → logprob: -11.966794967651367
    10. '`' → logprob: -11.966794967651367

Token 169: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. ' j' → logprob: -13.000001907348633
    3. '[j' → logprob: -19.375001907348633
    4. '```' → logprob: -19.500001907348633
    5. '	j' → logprob: -19.875001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '$j' → logprob: -21.375001907348633
    8. '`' → logprob: -22.125001907348633
    9. '``' → logprob: -22.375001907348633
    10. '       ' → logprob: -22.500001907348633

Token 170: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6340257525444031
    2. 'mat' → logprob: -0.7590257525444031
    3. '           ' → logprob: -7.009025573730469
    4. ' mat' → logprob: -8.509025573730469
    5. '<|end|>' → logprob: -9.259025573730469
    6. '       ' → logprob: -9.509025573730469
    7. '	mat' → logprob: -10.134025573730469
    8. '              ' → logprob: -10.509025573730469
    9. '                   ' → logprob: -10.759025573730469
    10. '   ' → logprob: -11.384025573730469

Token 171: '               ' (ID: 506)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.20180641114711761
    2. '               ' → logprob: -1.7018064260482788
    3. '           ' → logprob: -8.57680606842041
    4. ' mat' → logprob: -9.20180606842041
    5. '	mat' → logprob: -10.32680606842041
    6. '       ' → logprob: -10.95180606842041
    7. '```' → logprob: -11.45180606842041
    8. '                   ' → logprob: -11.45180606842041
    9. '   ' → logprob: -11.57680606842041
    10. '<|end|>' → logprob: -11.57680606842041

Token 172: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' (adapté à ' mat') → logprob: -2.629921436891891e-05
    2. ' mat' → logprob: -10.62502670288086
    3. '               ' → logprob: -13.50002670288086
    4. '```' → logprob: -15.37502670288086
    5. '	mat' → logprob: -15.62502670288086
    6. '           ' → logprob: -16.12502670288086
    7. '                   ' → logprob: -16.75002670288086
    8. '``' → logprob: -18.00002670288086
    9. '
' → logprob: -18.00002670288086
    10. '   ' → logprob: -18.25002670288086

Token 173: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -13.125004768371582
    3. '[j' → logprob: -13.125004768371582
    4. '][' → logprob: -15.125004768371582
    5. 'i' → logprob: -15.375004768371582
    6. '[I' → logprob: -16.0000057220459
    7. ')[' → logprob: -17.3750057220459
    8. '[int' → logprob: -17.5000057220459
    9. '<|end|>' → logprob: -17.5000057220459
    10. '[user' → logprob: -17.6250057220459

Token 174: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001698094274615869
    2. ']' → logprob: -9.12516975402832
    3. '[j' → logprob: -9.87516975402832
    4. '[' → logprob: -12.00016975402832
    5. ' ][' → logprob: -13.87516975402832
    6. '[i' → logprob: -14.62516975402832
    7. ']][' → logprob: -14.62516975402832
    8. '"][' → logprob: -15.37516975402832
    9. '>[' → logprob: -15.50016975402832
    10. ')[' → logprob: -15.62516975402832

Token 175: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.4849443838757e-06
    2. 's' → logprob: -12.500004768371582
    3. ' j' → logprob: -14.875004768371582
    4. '[j' → logprob: -15.875004768371582
    5. '```' → logprob: -16.375003814697266
    6. ' ' → logprob: -17.000003814697266
    7. '<|end|>' → logprob: -17.000003814697266
    8. '   ' → logprob: -17.000003814697266
    9. '[' → logprob: -17.125003814697266
    10. ')' → logprob: -18.875003814697266

Token 176: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13534432649612427
    2. ']' → logprob: -2.3853442668914795
    3. ' =' → logprob: -3.5103442668914795
    4. ']=' → logprob: -5.385344505310059
    5. ' ]' → logprob: -10.385344505310059
    6. ')' → logprob: -10.760344505310059
    7. ')=' → logprob: -12.885344505310059
    8. '[' → logprob: -13.260344505310059
    9. ' ' → logprob: -15.260344505310059
    10. '```' → logprob: -15.510344505310059

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00317783304490149
    2. ' =' → logprob: -5.753177642822266
    3. ']' → logprob: -16.753177642822266
    4. ')' → logprob: -17.128177642822266
    5. ']=' → logprob: -17.628177642822266
    6. '=

' → logprob: -17.878177642822266
    7. '```' → logprob: -18.753177642822266
    8. '[' → logprob: -18.878177642822266
    9. ')=' → logprob: -19.003177642822266
    10. '   ' → logprob: -19.128177642822266

Token 178: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0007100477814674377
    2. ' num' → logprob: -7.2507100105285645
    3. '	num' → logprob: -18.625709533691406
    4. '[num' → logprob: -19.375709533691406
    5. '(num' → logprob: -20.000709533691406
    6. '$num' → logprob: -20.125709533691406
    7. '           ' → logprob: -20.375709533691406
    8. '<num' → logprob: -20.375709533691406
    9. '   ' → logprob: -20.875709533691406
    10. ' ' → logprob: -21.000709533691406

Token 179: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.705242395401001
    2. 'num' → logprob: -0.705242395401001
    3. ' num' → logprob: -4.455242156982422
    4. '
' → logprob: -9.330242156982422
    5. '           ' → logprob: -9.580242156982422
    6. '	num' → logprob: -9.580242156982422
    7. '                
' → logprob: -9.955242156982422
    8. ',num' → logprob: -10.455242156982422
    9. '   ' → logprob: -11.080242156982422
    10. '```' → logprob: -11.080242156982422

Token 180: '               ' (ID: 506)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2326769083738327
    2. '               ' → logprob: -2.1076769828796387
    3. ' num' → logprob: -2.4826769828796387
    4. '   ' → logprob: -7.107676982879639
    5. '	num' → logprob: -7.357676982879639
    6. '```' → logprob: -8.10767650604248
    7. ',num' → logprob: -8.23267650604248
    8. '           ' → logprob: -8.73267650604248
    9. '       ' → logprob: -9.10767650604248
    10. ' ' → logprob: -9.23267650604248

Token 181: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.03804149478673935
    2. ' num' → logprob: -3.288041591644287
    3. '	num' → logprob: -16.663042068481445
    4. '(num' → logprob: -19.163042068481445
    5. '               ' → logprob: -19.663042068481445
    6. '```' → logprob: -19.788042068481445
    7. '   ' → logprob: -19.913042068481445
    8. ',num' → logprob: -19.913042068481445
    9. ' ' → logprob: -20.038042068481445
    10. '           ' → logprob: -20.413042068481445

Token 182: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3869036138057709
    2. '+=' → logprob: -1.1369036436080933
    3. '+' → logprob: -11.136903762817383
    4. '```' → logprob: -11.636903762817383
    5. ']+=' → logprob: -12.511903762817383
    6. '=' → logprob: -12.761903762817383
    7. '<|end|>' → logprob: -14.761903762817383
    8. ' ' → logprob: -14.886903762817383
    9. '+='' → logprob: -14.886903762817383
    10. ' +' → logprob: -14.886903762817383

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008615515194833279
    2. ' ' → logprob: -4.758615493774414
    3. '```' → logprob: -14.383615493774414
    4. ' ' → logprob: -15.383615493774414
    5. '   ' → logprob: -16.758615493774414
    6. '               ' → logprob: -17.571115493774414
    7. '	' → logprob: -18.071115493774414
    8. '0' → logprob: -18.258615493774414
    9. '`' → logprob: -18.383615493774414
    10. '+' → logprob: -18.508615493774414

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -16.125001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '
' → logprob: -19.812501907348633
    6. '`' → logprob: -19.875001907348633
    7. '１' → logprob: -19.937501907348633
    8. '``' → logprob: -20.375001907348633
    9. '+' → logprob: -20.437501907348633
    10. '2' → logprob: -20.437501907348633

Token 185: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004657256882637739
    2. ' print' → logprob: -6.62965726852417
    3. '```' → logprob: -6.75465726852417
    4. '
' → logprob: -7.00465726852417
    5. ' for' → logprob: -7.37965726852417
    6. 'print' → logprob: -7.75465726852417
    7. '    
' → logprob: -8.879656791687012
    8. 'for' → logprob: -10.379656791687012
    9. '``' → logprob: -11.129656791687012
    10. '<|end|>' → logprob: -11.754656791687012

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04990862309932709
    2. 'print' → logprob: -3.2999086380004883
    3. '```' → logprob: -4.799908638000488
    4. '
' → logprob: -6.424908638000488
    5. ' print' → logprob: -6.674908638000488
    6. 'for' → logprob: -7.799908638000488
    7. '    
' → logprob: -8.799908638000488
    8. ' for' → logprob: -9.674908638000488
    9. '``' → logprob: -9.799908638000488
    10. '
' → logprob: -13.674908638000488

Token 187: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32150861620903015
    2. 'print' (adapté à ' print') → logprob: -1.3215086460113525
    3. ' print' → logprob: -4.821508407592773
    4. '```' → logprob: -8.946508407592773
    5. 'for' → logprob: -10.821508407592773
    6. '
' → logprob: -12.571508407592773
    7. ' for' → logprob: -13.071508407592773
    8. '    
' → logprob: -13.321508407592773
    9. '``' → logprob: -14.446508407592773
    10. '#print' → logprob: -16.571508407592773

Token 188: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.6316721439361572
    2. '(case' → logprob: -1.1316721439361572
    3. '("' → logprob: -2.2566721439361572
    4. '(' → logprob: -3.3816721439361572
    5. '('' → logprob: -5.006671905517578
    6. '()' → logprob: -8.256671905517578
    7. 'case' → logprob: -9.756671905517578
    8. '(*' → logprob: -10.631671905517578
    9. '("("' → logprob: -10.881671905517578
    10. '("")' → logprob: -11.256671905517578

Token 189: '"' (ID: 1)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8579187393188477
    2. '("' → logprob: -1.1079187393188477
    3. '(f' → logprob: -2.1079187393188477
    4. '(case' → logprob: -2.3579187393188477
    5. '"' → logprob: -4.357918739318848
    6. '(C' → logprob: -4.607918739318848
    7. 'case' → logprob: -6.482918739318848
    8. 'Case' → logprob: -6.482918739318848
    9. '('' → logprob: -6.482918739318848
    10. ')' → logprob: -6.607918739318848

Token 190: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -0.013102110475301743
    2. 'case' → logprob: -4.638102054595947
    3. 'Matrix' → logprob: -6.638102054595947
    4. 'mat' → logprob: -7.388102054595947
    5. 'Quadr' → logprob: -8.388102531433105
    6. 'Caso' → logprob: -8.388102531433105
    7. '"' → logprob: -8.513102531433105
    8. 'Quad' → logprob: -8.513102531433105
    9. 'Mat' → logprob: -9.263102531433105
    10. 'Pattern' → logprob: -9.638102531433105

Token 191: ' {' (ID: 354)
  Prédit: ' #{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #{' → logprob: -0.09252206981182098
    2. ' #' → logprob: -3.092522144317627
    3. ' {' → logprob: -3.217522144317627
    4. '#{' → logprob: -6.092522144317627
    5. '{' → logprob: -7.967522144317627
    6. '#' → logprob: -9.092521667480469
    7. '_' → logprob: -9.217521667480469
    8. ' #%' → logprob: -10.217521667480469
    9. '_{' → logprob: -10.342521667480469
    10. ' _' → logprob: -11.217521667480469

Token 192: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.008639270439743996
    2. ' case' → logprob: -4.758639335632324
    3. '_case' → logprob: -10.633639335632324
    4. '(case' → logprob: -15.133639335632324
    5. '{' → logprob: -15.258639335632324
    6. '}' → logprob: -17.258638381958008
    7. '.case' → logprob: -18.008638381958008
    8. '	case' → logprob: -18.508638381958008
    9. ' ' → logprob: -18.633638381958008
    10. 'Case' → logprob: -19.008638381958008

Token 193: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -3.128163257315464e-07
    2. '}_' → logprob: -16.125
    3. 'num' → logprob: -16.25
    4. '_NUM' → logprob: -17.25
    5. ' _' → logprob: -18.125
    6. 'Num' → logprob: -18.25
    7. '_' → logprob: -18.25
    8. '_Num' → logprob: -18.625
    9. '_case' → logprob: -18.75
    10. '#' → logprob: -19.375

Token 194: '}:' (ID: 33132)
  Prédit: '}:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}:' → logprob: -0.020725931972265244
    2. ':' → logprob: -3.895725965499878
    3. '}")' → logprob: -9.020726203918457
    4. '}' → logprob: -10.645726203918457
    5. ':")
' → logprob: -10.770726203918457
    6. '):' → logprob: -11.520726203918457
    7. '":' → logprob: -13.020726203918457
    8. ':
' → logprob: -13.395726203918457
    9. '}")
' → logprob: -13.520726203918457
    10. ':\' → logprob: -14.145726203918457

Token 195: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.009574398398399353
    2. '")
' → logprob: -4.7595744132995605
    3. '\n' → logprob: -7.1345744132995605
    4. '{' → logprob: -10.009573936462402
    5. '\' → logprob: -10.509573936462402
    6. '"' → logprob: -10.509573936462402
    7. ')' → logprob: -10.634573936462402
    8. '")
' → logprob: -11.009573936462402
    9. '}")' → logprob: -12.759573936462402
    10. '[' → logprob: -13.009573936462402

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004462812503334135
    2. 'for' → logprob: -7.875446319580078
    3. ' for' → logprob: -9.625446319580078
    4. '```' → logprob: -16.625446319580078
    5. '<|end|>' → logprob: -17.625446319580078
    6. '	for' → logprob: -19.000446319580078
    7. '    
' → logprob: -19.250446319580078
    8. '   ' → logprob: -19.375446319580078
    9. '       ' → logprob: -19.500446319580078
    10. '[' → logprob: -19.625446319580078

Token 197: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005662360228598118
    2. '   ' → logprob: -5.255662441253662
    3. ' for' → logprob: -7.755662441253662
    4. '	for' → logprob: -15.630661964416504
    5. '```' → logprob: -18.63066291809082
    6. 'print' → logprob: -18.75566291809082
    7. '    
' → logprob: -19.75566291809082
    8. ' ' → logprob: -20.63066291809082
    9. '<|end|>' → logprob: -20.88066291809082
    10. '       ' → logprob: -21.50566291809082

Token 198: ' row' (ID: 5225)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8472775220870972
    2. 'row' → logprob: -1.0972775220870972
    3. ' row' → logprob: -1.5972775220870972
    4. ' i' → logprob: -3.3472776412963867
    5. '   ' → logprob: -11.347277641296387
    6. 'r' → logprob: -13.597277641296387
    7. ' ' → logprob: -14.347277641296387
    8. '	row' → logprob: -15.472277641296387
    9. 'line' → logprob: -15.722277641296387
    10. '```' → logprob: -15.972277641296387

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021861877758055925
    2. 'in' → logprob: -6.127186298370361
    3. '   ' → logprob: -14.252185821533203
    4. ' ' → logprob: -15.877185821533203
    5. 'print' → logprob: -16.252185821533203
    6. '  ' → logprob: -16.877185821533203
    7. '	in' → logprob: -17.127185821533203
    8. 'import' → logprob: -17.252185821533203
    9. '    ' → logprob: -17.377185821533203
    10. '_in' → logprob: -17.752185821533203

Token 200: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.25206851959228516
    2. ' mat' → logprob: -1.5020685195922852
    3. 'range' → logprob: -9.502068519592285
    4. ' range' → logprob: -9.752068519592285
    5. '(mat' → logprob: -12.127068519592285
    6. '	mat' → logprob: -14.002068519592285
    7. '   ' → logprob: -15.502068519592285
    8. ' ' → logprob: -17.37706756591797
    9. 'print' → logprob: -17.50206756591797
    10. '.mat' → logprob: -17.50206756591797

Token 201: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48535865545272827
    2. ':' → logprob: -0.9853586554527283
    3. ' in' → logprob: -4.860358715057373
    4. '):
' → logprob: -6.735358715057373
    5. '   ' → logprob: -7.110358715057373
    6. '():
' → logprob: -7.360358715057373
    7. '       ' → logprob: -8.735358238220215
    8. '):' → logprob: -8.735358238220215
    9. '<|end|>' → logprob: -8.985358238220215
    10. 'print' → logprob: -9.235358238220215

Token 202: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20283013582229614
    2. '       ' → logprob: -1.9528300762176514
    3. ' print' → logprob: -3.2028300762176514
    4. 'print' → logprob: -7.0778303146362305
    5. '```' → logprob: -8.57783031463623
    6. '<|end|>' → logprob: -11.82783031463623
    7. '	print' → logprob: -11.95283031463623
    8. ',' → logprob: -12.32783031463623
    9. '   ' → logprob: -12.82783031463623
    10. ' for' → logprob: -13.07783031463623

Token 203: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10837287455797195
    2. ' print' → logprob: -2.358372926712036
    3. '   ' → logprob: -4.858372688293457
    4. '       ' → logprob: -8.358372688293457
    5. '```' → logprob: -9.608372688293457
    6. 'for' → logprob: -10.108372688293457
    7. ' for' → logprob: -10.733372688293457
    8. '	print' → logprob: -12.608372688293457
    9. '           ' → logprob: -13.608372688293457
    10. ' ' → logprob: -14.608372688293457

Token 204: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.43723130226135254
    2. '(*' → logprob: -1.4372313022613525
    3. '("' → logprob: -2.1872313022613525
    4. '(' → logprob: -5.437231063842773
    5. '(f' → logprob: -12.562231063842773
    6. '*' → logprob: -12.562231063842773
    7. '()' → logprob: -13.062231063842773
    8. '"' → logprob: -14.062231063842773
    9. '(row' → logprob: -14.062231063842773
    10. '(("' → logprob: -14.687231063842773

Token 205: ''.' (ID: 6120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15343977510929108
    2. ' '.' → logprob: -2.15343976020813
    3. ' ' → logprob: -4.403439998626709
    4. ' '' → logprob: -5.528439998626709
    5. ''.' → logprob: -5.653439998626709
    6. '('' → logprob: -6.278439998626709
    7. '{' → logprob: -6.403439998626709
    8. '{:' → logprob: -7.028439998626709
    9. '   ' → logprob: -7.653439998626709
    10. '"' → logprob: -8.02843952178955

Token 206: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.008054785430431366
    2. ''.' → logprob: -5.383054733276367
    3. ''' → logprob: -5.883054733276367
    4. 'format' → logprob: -7.758054733276367
    5. '   ' → logprob: -9.758054733276367
    6. ' join' → logprob: -10.133054733276367
    7. ''\' → logprob: -10.133054733276367
    8. ''{' → logprob: -10.883054733276367
    9. '.join' → logprob: -11.633054733276367
    10. '''.' → logprob: -11.758054733276367

Token 207: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.009118752554059029
    2. '(str' → logprob: -5.634118556976318
    3. 'f' → logprob: -6.009118556976318
    4. '('{' → logprob: -6.009118556976318
    5. '("{' → logprob: -8.634119033813477
    6. '[f' → logprob: -9.009119033813477
    7. '([' → logprob: -9.509119033813477
    8. '(map' → logprob: -9.884119033813477
    9. 'str' → logprob: -10.134119033813477
    10. '(' → logprob: -10.134119033813477

Token 208: '"{' (ID: 27510)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.27820146083831787
    2. '(f' → logprob: -1.7782014608383179
    3. '{' → logprob: -3.1532015800476074
    4. ' f' → logprob: -3.9032015800476074
    5. '"{' → logprob: -4.653201580047607
    6. ''{' → logprob: -7.028201580047607
    7. '[f' → logprob: -8.27820110321045
    8. '("{' → logprob: -9.15320110321045
    9. '   ' → logprob: -9.15320110321045
    10. 'str' → logprob: -10.40320110321045

Token 209: 'x' (ID: 87)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4621955156326294
    2. 'str' → logprob: -1.7121955156326294
    3. 'num' → logprob: -2.21219539642334
    4. '{' → logprob: -3.08719539642334
    5. 'x' → logprob: -3.71219539642334
    6. '"{' → logprob: -5.83719539642334
    7. 'val' → logprob: -6.21219539642334
    8. 'v' → logprob: -6.33719539642334
    9. 'cell' → logprob: -7.08719539642334
    10. 'n' → logprob: -7.71219539642334

Token 210: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021224225929472595
    2. '}' → logprob: -9.875212669372559
    3. '{' → logprob: -9.875212669372559
    4. '"{' → logprob: -10.000212669372559
    5. ' ' → logprob: -10.750212669372559
    6. '>' → logprob: -11.375212669372559
    7. '"' → logprob: -11.750212669372559
    8. '{:' → logprob: -12.250212669372559
    9. '   ' → logprob: -12.375212669372559
    10. '  ' → logprob: -12.500212669372559

Token 211: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10597813874483109
    2. '4' → logprob: -2.35597825050354
    3. '5' → logprob: -5.355978012084961
    4. '>' → logprob: -7.355978012084961
    5. '{' → logprob: -8.605978012084961
    6. ' ' → logprob: -8.855978012084961
    7. '6' → logprob: -9.980978012084961
    8. '7' → logprob: -11.855978012084961
    9. '2' → logprob: -12.355978012084961
    10. 'd' → logprob: -12.730978012084961

Token 212: '}"' (ID: 21503)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07891666889190674
    2. '}"' → logprob: -2.578916549682617
    3. '}' → logprob: -10.703916549682617
    4. '"d' → logprob: -13.703916549682617
    5. ' d' → logprob: -14.078916549682617
    6. '}'' → logprob: -14.203916549682617
    7. ' }' → logprob: -14.328916549682617
    8. '```' → logprob: -14.453916549682617
    9. '}")' → logprob: -15.328916549682617
    10. '}}"' → logprob: -15.703916549682617

Token 213: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3680146038532257
    2. ' for' → logprob: -1.6180145740509033
    3. 'for' → logprob: -2.3680145740509033
    4. '))' → logprob: -4.743014812469482
    5. '"' → logprob: -6.243014812469482
    6. ''' → logprob: -6.493014812469482
    7. ' ' → logprob: -6.868014812469482
    8. '}' → logprob: -6.993014812469482
    9. 'end' → logprob: -7.868014812469482
    10. '```' → logprob: -7.993014812469482

Token 214: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06196824833750725
    2. ' x' → logprob: -2.8119683265686035
    3. '(x' → logprob: -15.311967849731445
    4. '	x' → logprob: -15.686967849731445
    5. 'row' → logprob: -16.186967849731445
    6. ' ' → logprob: -17.436967849731445
    7. '_x' → logprob: -17.436967849731445
    8. ' ' → logprob: -18.061967849731445
    9. ' row' → logprob: -18.061967849731445
    10. '$x' → logprob: -18.561967849731445

Token 215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008856589905917645
    2. 'in' → logprob: -5.133856773376465
    3. 'x' → logprob: -5.883856773376465
    4. ' x' → logprob: -8.883856773376465
    5. ' ' → logprob: -14.633856773376465
    6. ')' → logprob: -15.633856773376465
    7. 's' → logprob: -16.00885581970215
    8. '(x' → logprob: -16.13385581970215
    9. '[' → logprob: -16.63385581970215
    10. 'n' → logprob: -17.38385581970215

Token 216: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.006716674659401178
    2. ' row' → logprob: -5.006716728210449
    3. '[row' → logprob: -14.13171672821045
    4. '(row' → logprob: -15.00671672821045
    5. '	row' → logprob: -15.13171672821045
    6. ' ' → logprob: -17.381715774536133
    7. ',row' → logprob: -17.756715774536133
    8. '   ' → logprob: -17.881715774536133
    9. '=row' → logprob: -18.506715774536133
    10. '$row' → logprob: -19.006715774536133

Token 217: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4858916997909546
    2. '))' → logprob: -0.9858916997909546
    3. '))
' → logprob: -4.735891819000244
    4. ')
' → logprob: -5.860891819000244
    5. '   ' → logprob: -9.360891342163086
    6. ')))' → logprob: -10.985891342163086
    7. '       ' → logprob: -11.610891342163086
    8. ')")' → logprob: -12.735891342163086
    9. ')`' → logprob: -13.860891342163086
    10. ')')
' → logprob: -13.985891342163086

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002850998193025589
    2. '
' → logprob: -6.6278510093688965
    3. 'case' → logprob: -7.1278510093688965
    4. ' case' → logprob: -7.7528510093688965
    5. '    
' → logprob: -8.502850532531738
    6. '(case' → logprob: -10.002850532531738
    7. '\n' → logprob: -11.627850532531738
    8. '<|end|>' → logprob: -11.627850532531738
    9. 'Case' → logprob: -12.002850532531738
    10. '```' → logprob: -12.127850532531738

Token 219: ' case' (ID: 1890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002113381866365671
    2. 'case' (adapté à ' case') → logprob: -6.252113342285156
    3. ' case' → logprob: -8.627113342285156
    4. '
' → logprob: -12.752113342285156
    5. '(case' → logprob: -13.002113342285156
    6. '    
' → logprob: -15.252113342285156
    7. '```' → logprob: -15.627113342285156
    8. 'Case' → logprob: -17.877113342285156
    9. '	case' → logprob: -18.627113342285156
    10. '_case' → logprob: -18.752113342285156

Token 220: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.0
    3. '_case' → logprob: -17.5
    4. '_nums' → logprob: -18.125
    5. '_n' → logprob: -18.25
    6. '_NUM' → logprob: -18.75
    7. ' _' → logprob: -18.875
    8. '=_' → logprob: -19.0
    9. '##_' → logprob: -19.75
    10. 'num' → logprob: -19.875

Token 221: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07889672368764877
    2. ' +=' → logprob: -2.5788967609405518
    3. '=' → logprob: -12.828896522521973
    4. ']+=' → logprob: -13.203896522521973
    5. '   ' → logprob: -13.953896522521973
    6. '```' → logprob: -14.078896522521973
    7. '+' → logprob: -14.953896522521973
    8. '+="' → logprob: -15.953896522521973
    9. '+=(' → logprob: -16.45389747619629
    10. '+='' → logprob: -16.45389747619629

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31326186656951904
    2. ' ' → logprob: -1.313261866569519
    3. '   ' → logprob: -16.563261032104492
    4. ' ' → logprob: -16.563261032104492
    5. '```' → logprob: -17.313261032104492
    6. '  ' → logprob: -18.188261032104492
    7. '<|end|>' → logprob: -19.063261032104492
    8. 's' → logprob: -19.375761032104492
    9. '    ' → logprob: -19.750761032104492
    10. '‌' → logprob: -19.813261032104492

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -21.0
    5. '１' → logprob: -22.0
    6. '۱' → logprob: -22.125
    7. '१' → logprob: -22.75
    8. '2' → logprob: -22.8125
    9. '
' → logprob: -22.9375
    10. '  ' → logprob: -23.3125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 221
Tokens correctement prédits (1ère position, stricte): 103
Tokens correctement prédits (1ère position, avec adaptation): 115
Tokens correctement prédits (top 10): 209
Précision stricte (1ère position): 46.61%
Précision adaptée (1ère position): 52.04%
Précision (top 10): 94.57%
================================================================================
