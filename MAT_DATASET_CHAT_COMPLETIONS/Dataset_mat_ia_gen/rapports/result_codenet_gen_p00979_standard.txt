================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

t = int(input())
if t == 0:
    print(0)
    exit()

from functools import lru_cache

@lru_cache(None)
def dfs(x):
    if x == 0:
        return 0
    res = x  # all normal speed
    if x % 3 == 0:
        res = min(res, dfs(x // 3) + 1)
    else:
        res = min(res, dfs(x - 1) + 1)
        if (x + 1) % 3 == 0:
            res = min(res, dfs((x + 1) // 3) + 2)
    return res

print(dfs(t))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.297342985868454
    2. '\n' → logprob: -1.5473430156707764
    3. '<|end|>' → logprob: -3.7973430156707764
    4. '\' → logprob: -4.922342777252197
    5. 'import' → logprob: -5.672342777252197
    6. 'newline' → logprob: -5.672342777252197
    7. '<|end|>' → logprob: -6.047342777252197
    8. '
' → logprob: -6.922342777252197
    9. '```' → logprob: -6.922342777252197
    10. '' → logprob: -7.672342777252197

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.1689596148207784e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.492287278175354
    2. 'limit' → logprob: -1.242287278175354
    3. '_depth' → logprob: -2.3672871589660645
    4. 'depth' → logprob: -6.1172871589660645
    5. '_' → logprob: -6.4922871589660645
    6. 'error' → logprob: -6.8672871589660645
    7. '_error' → logprob: -7.3672871589660645
    8. '_limits' → logprob: -8.867287635803223
    9. '('_' → logprob: -9.367287635803223
    10. '_rate' → logprob: -9.367287635803223

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004474508576095104
    2. '9' → logprob: -6.004474639892578
    3. '6' → logprob: -6.254474639892578
    4. '8' → logprob: -9.504474639892578
    5. '```' → logprob: -15.254474639892578
    6. ' ' → logprob: -15.754474639892578
    7. '(' → logprob: -16.754474639892578
    8. '``' → logprob: -17.879474639892578
    9. '5' → logprob: -18.129474639892578
    10. ')' → logprob: -18.254474639892578

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 't' (ID: 83)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046520017087459564
    2. '
' → logprob: -3.5465199947357178
    3. '

' → logprob: -4.921520233154297
    4. '```' → logprob: -5.296520233154297
    5. '\' → logprob: -6.421520233154297
    6. '
' → logprob: -7.046520233154297
    7. 'class' → logprob: -7.546520233154297
    8. '\n' → logprob: -7.671520233154297
    9. 'import' → logprob: -8.046520233154297
    10. ')' → logprob: -8.921520233154297

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3202784061431885
    2. '=' → logprob: -1.4452784061431885
    3. ' ' → logprob: -3.3202784061431885
    4. 's' → logprob: -6.945278167724609
    5. '.' → logprob: -7.445278167724609
    6. '=int' → logprob: -8.07027816772461
    7. 'c' → logprob: -9.07027816772461
    8. ',' → logprob: -9.32027816772461
    9. '_' → logprob: -10.07027816772461
    10. 'r' → logprob: -10.94527816772461

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03812744468450546
    2. 'int' → logprob: -3.2881274223327637
    3. ' ' → logprob: -9.538127899169922
    4. '=int' → logprob: -11.788127899169922
    5. ' input' → logprob: -12.788127899169922
    6. '[int' → logprob: -14.163127899169922
    7. 'input' → logprob: -14.413127899169922
    8. '	int' → logprob: -14.663127899169922
    9. '  ' → logprob: -14.788127899169922
    10. '10' → logprob: -14.913127899169922

Token 16: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.874882430769503e-05
    2. '(sys' → logprob: -9.750079154968262
    3. '(input' → logprob: -11.750079154968262
    4. ' (' → logprob: -12.375079154968262
    5. '(
' → logprob: -12.375079154968262
    6. '(t' → logprob: -14.000079154968262
    7. '('' → logprob: -14.750079154968262
    8. '(

' → logprob: -14.875079154968262
    9. '(s' → logprob: -15.125079154968262
    10. '(\' → logprob: -15.500079154968262

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29962626099586487
    2. '(' → logprob: -2.299626350402832
    3. '()' → logprob: -2.424626350402832
    4. '())' → logprob: -2.674626350402832
    5. '('' → logprob: -8.174626350402832
    6. '))' → logprob: -8.174626350402832
    7. '")' → logprob: -9.049626350402832
    8. '(
' → logprob: -9.299626350402832
    9. '')' → logprob: -9.674626350402832
    10. '`)' → logprob: -9.674626350402832

Token 18: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013933476991951466
    2. '\n' → logprob: -4.5139336585998535
    3. '
' → logprob: -6.1389336585998535
    4. '\' → logprob: -8.013933181762695
    5. ' for' → logprob: -8.888933181762695
    6. '```' → logprob: -9.013933181762695
    7. '' → logprob: -10.138933181762695
    8. '``' → logprob: -10.263933181762695
    9. '`
' → logprob: -11.138933181762695
    10. 'n' → logprob: -11.388933181762695

Token 19: ' t' (ID: 260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11295998841524124
    2. ' t' → logprob: -2.23796010017395
    3. '  ' → logprob: -9.362959861755371
    4. 't' → logprob: -10.737959861755371
    5. ' not' → logprob: -11.112959861755371
    6. ' ' → logprob: -11.737959861755371
    7. ' system' → logprob: -13.362959861755371
    8. ' sys' → logprob: -13.737959861755371
    9. ' space' → logprob: -14.237959861755371
    10. ' )' → logprob: -14.487959861755371

Token 20: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.026116356253623962
    2. '>' → logprob: -3.901116371154785
    3. ' ' → logprob: -5.651116371154785
    4. ' ==' → logprob: -7.151116371154785
    5. ' <' → logprob: -7.151116371154785
    6. ' <=' → logprob: -8.526116371154785
    7. ' >=' → logprob: -9.151116371154785
    8. '  ' → logprob: -9.526116371154785
    9. ' !=' → logprob: -10.276116371154785
    10. '==' → logprob: -11.026116371154785

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00947521347552538
    2. ''' → logprob: -5.634475231170654
    3. '1' → logprob: -5.884475231170654
    4. '0' → logprob: -6.009475231170654
    5. '"' → logprob: -7.759475231170654
    6. ' )' → logprob: -10.009474754333496
    7. '  ' → logprob: -10.384474754333496
    8. '2' → logprob: -11.009474754333496
    9. ' >' → logprob: -11.134474754333496
    10. ' '' → logprob: -11.384474754333496

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24864545464515686
    2. ' ' → logprob: -1.6236454248428345
    3. '1' → logprob: -4.373645305633545
    4. ''' → logprob: -4.623645305633545
    5. '"' → logprob: -7.998645305633545
    6. '  ' → logprob: -10.123645782470703
    7. ''s' → logprob: -10.373645782470703
    8. '2' → logprob: -10.748645782470703
    9. '3' → logprob: -10.998645782470703
    10. '   ' → logprob: -11.123645782470703

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.492120155598968e-05
    2. ' :' → logprob: -9.875064849853516
    3. ':
' → logprob: -11.375064849853516
    4. ':return' → logprob: -13.500064849853516
    5. ':**' → logprob: -15.375064849853516
    6. '):' → logprob: -16.750064849853516
    7. ':

' → logprob: -16.750064849853516
    8. '':' → logprob: -17.000064849853516
    9. '':'' → logprob: -17.125064849853516
    10. ':\' → logprob: -17.375064849853516

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6242259740829468
    2. '\n' → logprob: -1.8742259740829468
    3. ' pass' → logprob: -2.1242260932922363
    4. '    ' → logprob: -2.7492260932922363
    5. ':' → logprob: -3.1242260932922363
    6. ' ' → logprob: -3.2492260932922363
    7. ' \' → logprob: -4.749226093292236
    8. ' print' → logprob: -5.249226093292236
    9. '\' → logprob: -5.374226093292236
    10. ' 
' → logprob: -5.499226093292236

Token 25: ' print' (ID: 2123)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.10844796150922775
    2. ' print' → logprob: -3.233448028564453
    3. ' ' → logprob: -3.483448028564453
    4. '    ' → logprob: -4.733448028564453
    5. '\n' → logprob: -5.233448028564453
    6. ' None' → logprob: -5.233448028564453
    7. ' exit' → logprob: -5.358448028564453
    8. ' 
' → logprob: -5.858448028564453
    9. 'pass' → logprob: -6.108448028564453
    10. 'print' (adapté à ' print') → logprob: -6.983448028564453

Token 26: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03068731538951397
    2. '(' → logprob: -3.5306873321533203
    3. '("")' → logprob: -7.90568733215332
    4. '('' → logprob: -8.15568733215332
    5. '("' → logprob: -8.53068733215332
    6. '(None' → logprob: -10.03068733215332
    7. '("("' → logprob: -11.65568733215332
    8. '()
' → logprob: -12.03068733215332
    9. '(False' → logprob: -12.28068733215332
    10. '(True' → logprob: -12.65568733215332

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24375739693641663
    2. '"' → logprob: -1.7437573671340942
    3. ')' → logprob: -3.618757486343384
    4. ''' → logprob: -4.743757247924805
    5. '")' → logprob: -5.493757247924805
    6. '""' → logprob: -7.368757247924805
    7. '1' → logprob: -7.868757247924805
    8. '()' → logprob: -8.618757247924805
    9. ' ' → logprob: -8.868757247924805
    10. '(' → logprob: -8.868757247924805

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ')
' → logprob: -12.125006675720215
    3. '`)' → logprob: -15.000006675720215
    4. '')' → logprob: -15.625006675720215
    5. '```' → logprob: -16.3750057220459
    6. ' )' → logprob: -16.6250057220459
    7. ')

' → logprob: -17.1250057220459
    8. '()' → logprob: -17.2500057220459
    9. ')return' → logprob: -17.3750057220459
    10. '）' → logprob: -17.5000057220459

Token 29: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.030667202547192574
    2. '
' → logprob: -4.030667304992676
    3. '```' → logprob: -5.030667304992676
    4. 'elif' → logprob: -6.530667304992676
    5. '\n' → logprob: -6.655667304992676
    6. ' else' → logprob: -7.030667304992676
    7. '<|end|>' → logprob: -7.030667304992676
    8. ')' → logprob: -8.405667304992676
    9. '\' → logprob: -8.530667304992676
    10. '#' → logprob: -8.780667304992676

Token 30: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.008130471222102642
    2. 'elif' → logprob: -6.0081305503845215
    3. '
' → logprob: -6.2581305503845215
    4. ' else' → logprob: -6.3831305503845215
    5. '```' → logprob: -7.1331305503845215
    6. '\n' → logprob: -7.5081305503845215
    7. ')' → logprob: -8.383130073547363
    8. '#' → logprob: -8.633130073547363
    9. '    
' → logprob: -9.883130073547363
    10. ' ' → logprob: -10.508130073547363

Token 31: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03441261127591133
    2. '(' → logprob: -3.4094126224517822
    3. '()
' → logprob: -7.284412384033203
    4. '()

' → logprob: -10.284412384033203
    5. '(
' → logprob: -10.409412384033203
    6. '()\' → logprob: -11.659412384033203
    7. '(

' → logprob: -13.284412384033203
    8. '()`' → logprob: -13.534412384033203
    9. ' ()' → logprob: -13.659412384033203
    10. '()
' → logprob: -14.034412384033203

Token 32: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0936377048492432
    2. 'n' → logprob: -1.3436377048492432
    3. 'for' → logprob: -1.5936377048492432
    4. '
' → logprob: -2.593637704849243
    5. 'd' → logprob: -3.093637704849243
    6. '\n' → logprob: -3.468637704849243
    7. '```' → logprob: -3.968637704849243
    8. '\' → logprob: -4.593637466430664
    9. 's' → logprob: -4.718637466430664
    10. 'else' → logprob: -6.218637466430664

Token 33: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.029310569167137146
    2. ' math' → logprob: -4.029310703277588
    3. 'collections' → logprob: -4.654310703277588
    4. ' sys' → logprob: -6.529310703277588
    5. ' itertools' → logprob: -9.52931022644043
    6. ' functools' → logprob: -10.52931022644043
    7. 'math' → logprob: -11.52931022644043
    8. 'sys' → logprob: -12.27931022644043
    9. ' queue' → logprob: -13.65431022644043
    10. ' collection' → logprob: -13.90431022644043

Token 34: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1656680703163147
    2. 'import' → logprob: -2.04066801071167
    3. '_import' → logprob: -4.04066801071167
    4. '_' → logprob: -5.66566801071167
    5. ' _' → logprob: -7.16566801071167
    6. '.' → logprob: -8.290668487548828
    7. '	import' → logprob: -8.290668487548828
    8. ' ' → logprob: -8.540668487548828
    9. ' .' → logprob: -9.040668487548828
    10. ' ' → logprob: -10.790668487548828

Token 35: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014332851395010948
    2. ' l' → logprob: -4.2643327713012695
    3. 'reduce' → logprob: -9.01433277130127
    4. 'cache' → logprob: -10.01433277130127
    5. 'cmp' → logprob: -13.76433277130127
    6. 'partial' → logprob: -14.76433277130127
    7. 'wrap' → logprob: -15.26433277130127
    8. 'import' → logprob: -15.51433277130127
    9. '```' → logprob: -15.51433277130127
    10. ' reduce' → logprob: -15.76433277130127

Token 36: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -6.153795766294934e-06
    2. 'r' → logprob: -12.125005722045898
    3. 'ruz' → logprob: -15.500005722045898
    4. 'ruff' → logprob: -15.750005722045898
    5. '_ru' → logprob: -16.5000057220459
    6. 'ruh' → logprob: -17.2500057220459
    7. 'rum' → logprob: -17.3750057220459
    8. 'rup' → logprob: -17.6250057220459
    9. 'RU' → logprob: -17.7500057220459
    10. 'reduce' → logprob: -17.7500057220459

Token 37: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -2.9875325708417222e-05
    2. 'cache' → logprob: -10.625029563903809
    3. '_c' → logprob: -13.250029563903809
    4. '_cached' → logprob: -13.750029563903809
    5. 'c' → logprob: -14.375029563903809
    6. '_' → logprob: -14.750029563903809
    7. '```' → logprob: -15.000029563903809
    8. '_CACHE' → logprob: -15.125029563903809
    9. '-cache' → logprob: -15.750029563903809
    10. '_cash' → logprob: -15.750029563903809

Token 38: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00046963783097453415
    2. '
' → logprob: -8.750469207763672
    3. '@

' → logprob: -9.375469207763672
    4. '@n' → logprob: -9.500469207763672
    5. '@
' → logprob: -9.875469207763672
    6. '

' → logprob: -9.875469207763672
    7. '@index' → logprob: -11.125469207763672
    8. '```' → logprob: -11.750469207763672
    9. '@login' → logprob: -11.750469207763672
    10. '@return' → logprob: -13.125469207763672

Token 39: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -8.911954500945285e-05
    2. '@
' → logprob: -10.125088691711426
    3. '@n' → logprob: -10.375088691711426
    4. '
' → logprob: -12.125088691711426
    5. '@

' → logprob: -12.875088691711426
    6. '```' → logprob: -12.875088691711426
    7. '@index' → logprob: -13.375088691711426
    8. '@s' → logprob: -14.000088691711426
    9. '@login' → logprob: -14.125088691711426
    10. '\' → logprob: -14.250088691711426

Token 40: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -17.0
    3. '```' → logprob: -18.0
    4. 'lr' → logprob: -19.625
    5. 'staticmethod' → logprob: -20.75
    6. '@' → logprob: -20.875
    7. '	l' → logprob: -21.25
    8. 'fun' → logprob: -21.375
    9. '
' → logprob: -21.75
    10. '`' → logprob: -21.875

Token 41: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.014391263015568256
    2. 'r' → logprob: -4.2643914222717285
    3. '_cache' → logprob: -8.63939094543457
    4. 'cache' → logprob: -11.51439094543457
    5. '_cached' → logprob: -11.63939094543457
    6. '_r' → logprob: -11.88939094543457
    7. '_ru' → logprob: -11.88939094543457
    8. 'rc' → logprob: -12.26439094543457
    9. 'cached' → logprob: -12.88939094543457
    10. '_' → logprob: -13.13939094543457

Token 42: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -7.076218025758862e-05
    2. '_cached' → logprob: -10.125070571899414
    3. '_' → logprob: -10.875070571899414
    4. ' _' → logprob: -13.125070571899414
    5. '._' → logprob: -13.375070571899414
    6. '_c' → logprob: -13.500070571899414
    7. '@' → logprob: -13.750070571899414
    8. 'cache' → logprob: -13.875070571899414
    9. '_ca' → logprob: -13.875070571899414
    10. '```' → logprob: -14.125070571899414

Token 43: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.6460942029953003
    2. 'def' → logprob: -0.8960942029953003
    3. '()' → logprob: -3.39609432220459
    4. '(' → logprob: -4.27109432220459
    5. '(max' → logprob: -4.27109432220459
    6. '()
' → logprob: -6.27109432220459
    7. '
' → logprob: -6.39609432220459
    8. '(def' → logprob: -6.89609432220459
    9. 'None' → logprob: -7.02109432220459
    10. '(True' → logprob: -8.64609432220459

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004663899540901184
    2. ')
' → logprob: -5.379663944244385
    3. 'def' → logprob: -10.129663467407227
    4. ')
' → logprob: -14.129663467407227
    5. ' )' → logprob: -14.379663467407227
    6. ')`' → logprob: -14.629663467407227
    7. '))' → logprob: -14.754663467407227
    8. ')

' → logprob: -14.879663467407227
    9. '`)' → logprob: -15.254663467407227
    10. '):' → logprob: -15.629663467407227

Token 45: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.41129949549213e-05
    2. '
' → logprob: -9.625083923339844
    3. '(def' → logprob: -11.875083923339844
    4. ' def' → logprob: -12.000083923339844
    5. '<|end|>' → logprob: -13.250083923339844
    6. '\' → logprob: -14.250083923339844
    7. 'de' → logprob: -15.000083923339844
    8. '(' → logprob: -15.000083923339844
    9. '-def' → logprob: -15.125083923339844
    10. ':def' → logprob: -15.250083923339844

Token 46: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6839967966079712
    2. 'f' → logprob: -1.5589967966079712
    3. 'dfs' → logprob: -1.5589967966079712
    4. ' fib' → logprob: -4.058996677398682
    5. 'fib' → logprob: -4.308996677398682
    6. ' solve' → logprob: -4.683996677398682
    7. 'dp' → logprob: -4.808996677398682
    8. ' fibonacci' → logprob: -4.933996677398682
    9. ' f' → logprob: -5.183996677398682
    10. 'solve' → logprob: -5.183996677398682

Token 47: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0140224639326334
    2. '(node' → logprob: -4.764022350311279
    3. '(n' → logprob: -6.014022350311279
    4. '(i' → logprob: -6.639022350311279
    5. '(x' → logprob: -7.014022350311279
    6. '(a' → logprob: -8.264022827148438
    7. '(depth' → logprob: -8.764022827148438
    8. '(s' → logprob: -9.389022827148438
    9. ' (' → logprob: -9.639022827148438
    10. '(number' → logprob: -10.639022827148438

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06310508400201797
    2. ',' → logprob: -2.8131051063537598
    3. ')' → logprob: -7.31310510635376
    4. '):
' → logprob: -8.563104629516602
    5. ':' → logprob: -8.688104629516602
    6. ' ):' → logprob: -9.938104629516602
    7. ',x' → logprob: -10.938104629516602
    8. ',y' → logprob: -11.563104629516602
    9. '   ' → logprob: -12.563104629516602
    10. ',k' → logprob: -12.563104629516602

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11686267703771591
    2. ':' → logprob: -2.2418627738952637
    3. ' if' → logprob: -6.491862773895264
    4. 'if' → logprob: -6.991862773895264
    5. ',' → logprob: -7.366862773895264
    6. '<|end|>' → logprob: -8.116862297058105
    7. ' :' → logprob: -9.116862297058105
    8. ' ' → logprob: -9.241862297058105
    9. ':return' → logprob: -9.366862297058105
    10. '):' → logprob: -9.866862297058105

Token 50: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3071144223213196
    2. 'if' (adapté à ' if') → logprob: -1.8071143627166748
    3. '   ' → logprob: -2.307114362716675
    4. ' ' → logprob: -8.432114601135254
    5. ' return' → logprob: -8.807114601135254
    6. 'return' → logprob: -9.057114601135254
    7. '    ' → logprob: -9.182114601135254
    8. ')' → logprob: -10.057114601135254
    9. ':' → logprob: -10.682114601135254
    10. '0' → logprob: -11.057114601135254

Token 51: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020545274019241333
    2. ' x' → logprob: -3.895545244216919
    3. ' ' → logprob: -12.89554500579834
    4. '   ' → logprob: -15.02054500579834
    5. '0' → logprob: -15.89554500579834
    6. '1' → logprob: -16.145545959472656
    7. '  ' → logprob: -16.645545959472656
    8. ' not' → logprob: -16.895545959472656
    9. '2' → logprob: -17.270545959472656
    10. '	x' → logprob: -17.333045959472656

Token 52: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7232497930526733
    2. ' ==' → logprob: -0.7232497930526733
    3. '<=' → logprob: -4.098249912261963
    4. ' <=' → logprob: -4.598249912261963
    5. ' <' → logprob: -6.473249912261963
    6. '<' → logprob: -6.598249912261963
    7. '0' → logprob: -11.473249435424805
    8. '%' → logprob: -11.473249435424805
    9. ' ' → logprob: -11.473249435424805
    10. ' in' → logprob: -11.848249435424805

Token 53: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055205076932907104
    2. '1' → logprob: -2.9302051067352295
    3. ' ' → logprob: -8.180205345153809
    4. '2' → logprob: -11.430205345153809
    5. 't' → logprob: -11.555205345153809
    6. '100' → logprob: -13.055205345153809
    7. '10' → logprob: -13.430205345153809
    8. 'n' → logprob: -13.430205345153809
    9. '3' → logprob: -13.617705345153809
    10. '   ' → logprob: -13.617705345153809

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02640921249985695
    2. '1' → logprob: -3.651409149169922
    3. ' ' → logprob: -9.901409149169922
    4. 't' → logprob: -10.713909149169922
    5. '2' → logprob: -11.276409149169922
    6. 'n' → logprob: -12.588909149169922
    7. '-' → logprob: -13.088909149169922
    8. '10' → logprob: -13.401409149169922
    9. '100' → logprob: -13.651409149169922
    10. 's' → logprob: -13.651409149169922

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019348275382071733
    2. ':return' → logprob: -6.626935005187988
    3. ':
' → logprob: -7.626935005187988
    4. '   ' → logprob: -9.626935005187988
    5. ' or' → logprob: -10.626935005187988
    6. ' :' → logprob: -11.001935005187988
    7. '):' → logprob: -11.376935005187988
    8. ',' → logprob: -14.501935005187988
    9. ':
' → logprob: -14.501935005187988
    10. ')' → logprob: -14.751935005187988

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027853641659021378
    2. '   ' → logprob: -3.7778537273406982
    3. 'return' → logprob: -5.777853488922119
    4. ' return' → logprob: -6.527853488922119
    5. '<|end|>' → logprob: -11.402853965759277
    6. ':return' → logprob: -11.527853965759277
    7. '0' → logprob: -12.277853965759277
    8. '	return' → logprob: -12.277853965759277
    9. '    
' → logprob: -13.402853965759277
    10. ' ' → logprob: -13.902853965759277

Token 57: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5001508593559265
    2. ' return' → logprob: -1.2501509189605713
    3. '   ' → logprob: -2.2501509189605713
    4. '       ' → logprob: -6.750150680541992
    5. '0' → logprob: -8.500150680541992
    6. ' ' → logprob: -8.875150680541992
    7. '1' → logprob: -9.125150680541992
    8. ':return' → logprob: -10.125150680541992
    9. '	return' → logprob: -10.625150680541992
    10. '  ' → logprob: -11.500150680541992

Token 58: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0395260713994503
    2. '1' → logprob: -3.4145259857177734
    3. ' ' → logprob: -5.164525985717773
    4. 'x' → logprob: -9.539525985717773
    5. '(' → logprob: -10.664525985717773
    6. 'True' → logprob: -10.664525985717773
    7. '[]' → logprob: -11.914525985717773
    8. '[' → logprob: -11.914525985717773
    9. ' True' → logprob: -12.539525985717773
    10. ' x' → logprob: -12.789525985717773

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0340544655919075
    2. '1' → logprob: -3.4090545177459717
    3. '(' → logprob: -8.53405475616455
    4. 'True' → logprob: -9.53405475616455
    5. '[]' → logprob: -9.78405475616455
    6. 'x' → logprob: -10.53405475616455
    7. ' ' → logprob: -10.90905475616455
    8. '[' → logprob: -11.03405475616455
    9. 'False' → logprob: -12.03405475616455
    10. '-' → logprob: -12.53405475616455

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06890858709812164
    2. '
' → logprob: -3.19390869140625
    3. '<|end|>' → logprob: -4.06890869140625
    4. '    
' → logprob: -5.44390869140625
    5. '\n' → logprob: -6.56890869140625
    6. ')' → logprob: -6.81890869140625
    7. '<|end|>' → logprob: -7.69390869140625
    8. ',' → logprob: -7.81890869140625
    9. '  ' → logprob: -8.19390869140625
    10. '   
' → logprob: -8.81890869140625

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01570737734436989
    2. '<|end|>' → logprob: -4.640707492828369
    3. '    
' → logprob: -6.140707492828369
    4. '
' → logprob: -6.140707492828369
    5. '\n' → logprob: -7.140707492828369
    6. ')' → logprob: -8.640707015991211
    7. '<|end|>' → logprob: -8.890707015991211
    8. '  ' → logprob: -8.890707015991211
    9. '   
' → logprob: -9.390707015991211
    10. '  
' → logprob: -9.515707015991211

Token 62: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.6686813831329346
    2. ' res' → logprob: -2.1686813831329346
    3. 'if' → logprob: -2.6686813831329346
    4. 'n' → logprob: -2.7936813831329346
    5. 'dp' → logprob: -3.0436813831329346
    6. ' if' → logprob: -3.2936813831329346
    7. 'max' → logprob: -3.4186813831329346
    8. '   ' → logprob: -3.6686813831329346
    9. 'return' → logprob: -4.0436811447143555
    10. 'result' → logprob: -4.1686811447143555

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325153350830078
    2. '=' → logprob: -3.773251533508301
    3. ' ' → logprob: -12.3982515335083
    4. ',' → logprob: -14.2732515335083
    5. ')' → logprob: -15.2732515335083
    6. 's' → logprob: -15.5232515335083
    7. '   ' → logprob: -16.023250579833984
    8. ' ' → logprob: -16.523250579833984
    9. 'max' → logprob: -16.648250579833984
    10. '  ' → logprob: -16.773250579833984

Token 64: ' x' (ID: 1215)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6660121083259583
    2. ' float' → logprob: -1.6660120487213135
    3. 'dfs' → logprob: -2.5410120487213135
    4. ' dfs' → logprob: -3.0410120487213135
    5. 'x' → logprob: -3.1660120487213135
    6. 'max' → logprob: -3.6660120487213135
    7. ' max' → logprob: -3.6660120487213135
    8. '0' → logprob: -4.041012287139893
    9. '10' → logprob: -4.291012287139893
    10. ' x' → logprob: -4.291012287139893

Token 65: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2810973525047302
    2. '+' → logprob: -1.656097412109375
    3. ' +' → logprob: -4.156097412109375
    4. ' ' → logprob: -4.656097412109375
    5. '<|end|>' → logprob: -4.656097412109375
    6. ' 
' → logprob: -5.406097412109375
    7. '*' → logprob: -5.656097412109375
    8. '<|end|>' → logprob: -5.906097412109375
    9. '-' → logprob: -6.406097412109375
    10. '
' → logprob: -6.656097412109375

Token 66: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1671174168586731
    2. '+' → logprob: -2.0421173572540283
    3. '<|end|>' → logprob: -4.417117595672607
    4. '<|end|>' → logprob: -6.042117595672607
    5. '-' → logprob: -6.292117595672607
    6. 'for' → logprob: -6.417117595672607
    7. ' ' → logprob: -6.917117595672607
    8. ')' → logprob: -7.417117595672607
    9. '    
' → logprob: -7.417117595672607
    10. ' 
' → logprob: -7.417117595672607

Token 67: ' all' (ID: 722)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5029422044754028
    2. ' ' → logprob: -1.1279422044754028
    3. '1' → logprob: -3.7529420852661133
    4. '<|end|>' → logprob: -3.7529420852661133
    5. '<|end|>' → logprob: -5.502942085266113
    6. ' #' → logprob: -5.502942085266113
    7. '#' → logprob: -5.627942085266113
    8. ' 
' → logprob: -6.002942085266113
    9. '+' → logprob: -6.377942085266113
    10. ' for' → logprob: -6.627942085266113

Token 68: ' normal' (ID: 6078)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' speed' (ID: 7733)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.1333118677139282
    2. 'operations' → logprob: -1.2583118677139282
    3. '+' → logprob: -2.5083117485046387
    4. 'steps' → logprob: -2.6333117485046387
    5. '<|end|>' → logprob: -3.1333117485046387
    6. '-' → logprob: -3.1333117485046387
    7. 'cost' → logprob: -3.3833117485046387
    8. 'ops' → logprob: -3.5083117485046387
    9. ' moves' → logprob: -4.633311748504639
    10. ' steps' → logprob: -4.758311748504639

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36111316084861755
    2. '+' → logprob: -1.48611319065094
    3. ' +' → logprob: -3.2361130714416504
    4. '\n' → logprob: -4.73611307144165
    5. ')' → logprob: -4.86111307144165
    6. '
' → logprob: -5.36111307144165
    7. '<|end|>' → logprob: -5.48611307144165
    8. '*' → logprob: -6.11111307144165
    9. '   ' → logprob: -6.36111307144165
    10. '<|end|>' → logprob: -6.48611307144165

Token 71: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38546517491340637
    2. '+' → logprob: -2.260465145111084
    3. ' +' → logprob: -2.385465145111084
    4. '   ' → logprob: -2.510465145111084
    5. '\n' → logprob: -4.510465145111084
    6. '*' → logprob: -5.385465145111084
    7. '    
' → logprob: -5.510465145111084
    8. ' 
' → logprob: -5.635465145111084
    9. ' ' → logprob: -5.760465145111084
    10. '
' → logprob: -5.885465145111084

Token 72: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.026643991470337
    2. '   ' → logprob: -1.151643991470337
    3. ' for' → logprob: -1.151643991470337
    4. '
' → logprob: -5.651643753051758
    5. '    
' → logprob: -6.026643753051758
    6. 'res' → logprob: -7.026643753051758
    7. 'if' (adapté à ' if') → logprob: -7.401643753051758
    8. ' if' → logprob: -8.151643753051758
    9. ' res' → logprob: -8.276643753051758
    10. 'step' → logprob: -8.901643753051758

Token 73: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02058708667755127
    2. 'x' → logprob: -3.8955869674682617
    3. ' ' → logprob: -11.020586967468262
    4. ' (' → logprob: -11.645586967468262
    5. '(' → logprob: -12.645586967468262
    6. '(x' → logprob: -12.645586967468262
    7. '   ' → logprob: -12.895586967468262
    8. '	x' → logprob: -13.645586967468262
    9. ')' → logprob: -13.958086967468262
    10. '1' → logprob: -14.458086967468262

Token 74: ' %' (ID: 1851)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.1019439697265625
    2. '>=' → logprob: -1.3519439697265625
    3. ' >' → logprob: -1.6019439697265625
    4. '>' → logprob: -1.7269439697265625
    5. '%' → logprob: -3.7269439697265625
    6. ' ' → logprob: -5.9769439697265625
    7. ' %' → logprob: -6.2269439697265625
    8. '-' → logprob: -8.476943969726562
    9. ' <' → logprob: -8.601943969726562
    10. '<' → logprob: -9.414443969726562

Token 75: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015631916001439095
    2. '3' → logprob: -4.640632152557373
    3. ' ' → logprob: -5.640632152557373
    4. '7' → logprob: -7.390632152557373
    5. '10' → logprob: -7.390632152557373
    6. '6' → logprob: -7.640632152557373
    7. '4' → logprob: -8.640631675720215
    8. '5' → logprob: -8.640631675720215
    9. '60' → logprob: -9.890631675720215
    10. '20' → logprob: -10.140631675720215

Token 76: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005671256221830845
    2. '3' → logprob: -5.38067102432251
    3. '10' → logprob: -7.88067102432251
    4. '4' → logprob: -8.505671501159668
    5. '6' → logprob: -8.880671501159668
    6. '7' → logprob: -9.380671501159668
    7. '20' → logprob: -9.505671501159668
    8. '5' → logprob: -9.630671501159668
    9. ' ' → logprob: -11.005671501159668
    10. '60' → logprob: -11.130671501159668

Token 77: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31356632709503174
    2. '==' → logprob: -1.3135663270950317
    3. '0' → logprob: -8.313566207885742
    4. ':' → logprob: -10.563566207885742
    5. ' ' → logprob: -11.688566207885742
    6. '=' → logprob: -12.063566207885742
    7. '==
' → logprob: -12.063566207885742
    8. ')==' → logprob: -12.188566207885742
    9. '```' → logprob: -13.688566207885742
    10. '===' → logprob: -13.688566207885742

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010070422664284706
    2. ' ' → logprob: -4.635070323944092
    3. '1' → logprob: -8.26007080078125
    4. '2' → logprob: -9.88507080078125
    5. '```' → logprob: -13.63507080078125
    6. '

' → logprob: -14.19757080078125
    7. '=' → logprob: -14.69757080078125
    8. '  ' → logprob: -15.01007080078125
    9. '۰' → logprob: -15.51007080078125
    10. '   ' → logprob: -15.69757080078125

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007974773179739714
    2. '1' → logprob: -7.500797271728516
    3. ' ' → logprob: -8.875797271728516
    4. '2' → logprob: -9.250797271728516
    5. '```' → logprob: -13.875797271728516
    6. '۰' → logprob: -14.313297271728516
    7. '01' → logprob: -14.438297271728516
    8. '3' → logprob: -14.563297271728516
    9. '०' → logprob: -15.000797271728516
    10. '=' → logprob: -15.063297271728516

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20143799483776093
    2. ':
' → logprob: -1.7014379501342773
    3. ':
' → logprob: -11.701437950134277
    4. '):
' → logprob: -12.201437950134277
    5. ':

' → logprob: -12.451437950134277
    6. ',' → logprob: -13.326437950134277
    7. ' and' → logprob: -13.451437950134277
    8. '   ' → logprob: -13.576437950134277
    9. '):' → logprob: -13.576437950134277
    10. ' :
' → logprob: -14.326437950134277

Token 81: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1210135668516159
    2. '       ' → logprob: -2.621013641357422
    3. '   ' → logprob: -3.871013641357422
    4. 'res' → logprob: -4.121013641357422
    5. ' res' → logprob: -6.246013641357422
    6. '    
' → logprob: -7.246013641357422
    7. '
' → logprob: -7.496013641357422
    8. '<|end|>' → logprob: -7.746013641357422
    9. '        
' → logprob: -8.746013641357422
    10. ' 
' → logprob: -8.871013641357422

Token 82: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.14480338990688324
    2. ' res' → logprob: -2.144803285598755
    3. '
' → logprob: -4.144803524017334
    4. '   ' → logprob: -6.519803524017334
    5. '
' → logprob: -8.894803047180176
    6. '	res' → logprob: -9.519803047180176
    7. 'return' → logprob: -9.769803047180176
    8. '           ' → logprob: -10.519803047180176
    9. '    
' → logprob: -10.644803047180176
    10. 'r' → logprob: -11.769803047180176

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018166683614253998
    2. '=' → logprob: -4.018166542053223
    3. '=min' → logprob: -11.018166542053223
    4. 'min' → logprob: -15.018166542053223
    5. ' ' → logprob: -18.01816749572754
    6. '   ' → logprob: -18.26816749572754
    7. '=max' → logprob: -18.51816749572754
    8. ' min' → logprob: -18.51816749572754
    9. ',' → logprob: -18.76816749572754
    10. 's' → logprob: -19.39316749572754

Token 84: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.16036781668663025
    2. 'min' → logprob: -1.9103678464889526
    3. ' dfs' → logprob: -9.535367965698242
    4. ' max' → logprob: -10.160367965698242
    5. 'dfs' → logprob: -11.035367965698242
    6. 'max' → logprob: -11.285367965698242
    7. '	min' → logprob: -13.035367965698242
    8. ' ' → logprob: -14.660367965698242
    9. '=min' → logprob: -15.910367965698242
    10. ' m' → logprob: -16.035367965698242

Token 85: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0018790162866935134
    2. '(d' → logprob: -6.6268792152404785
    3. '(' → logprob: -7.5018792152404785
    4. '(
' → logprob: -15.12687873840332
    5. '(

' → logprob: -15.37687873840332
    6. '(re' → logprob: -16.37687873840332
    7. '((' → logprob: -16.62687873840332
    8. ' (' → logprob: -16.75187873840332
    9. 'res' → logprob: -16.75187873840332
    10. '(df' → logprob: -17.37687873840332

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03927692025899887
    2. '(d' → logprob: -3.5392768383026123
    3. '(' → logprob: -5.164277076721191
    4. ',d' → logprob: -6.414277076721191
    5. ' ,' → logprob: -6.539277076721191
    6. 'dfs' → logprob: -7.914277076721191
    7. 'd' → logprob: -9.039277076721191
    8. ' (' → logprob: -10.289277076721191
    9. '1' → logprob: -10.539277076721191
    10. ',
' → logprob: -11.039277076721191

Token 87: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.3619578182697296
    2. ' dfs' → logprob: -1.2369577884674072
    3. '1' → logprob: -4.611958026885986
    4. ' ' → logprob: -5.861958026885986
    5. '   ' → logprob: -7.736958026885986
    6. 'd' → logprob: -9.361957550048828
    7. 'df' → logprob: -10.111957550048828
    8. '  ' → logprob: -11.549457550048828
    9. '    ' → logprob: -11.674457550048828
    10. ' DFS' → logprob: -11.861957550048828

Token 88: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -7.743758760625497e-05
    2. '(' → logprob: -9.750077247619629
    3. 'x' → logprob: -10.875077247619629
    4. ' x' → logprob: -16.625078201293945
    5. '(
' → logprob: -16.750078201293945
    6. ' (' → logprob: -17.000078201293945
    7. ')x' → logprob: -17.625078201293945
    8. ',x' → logprob: -17.750078201293945
    9. ')' → logprob: -18.000078201293945
    10. ' ' → logprob: -18.500078201293945

Token 89: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.061989083886146545
    2. ' //' → logprob: -2.8119890689849854
    3. ' ' → logprob: -11.561988830566406
    4. '3' → logprob: -12.186988830566406
    5. '1' → logprob: -13.311988830566406
    6. '(' → logprob: -13.561988830566406
    7. '#' → logprob: -13.936988830566406
    8. 'x' → logprob: -14.311988830566406
    9. '   ' → logprob: -14.436988830566406
    10. '(x' → logprob: -14.811988830566406

Token 90: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00010473522706888616
    2. ' ' → logprob: -9.250104904174805
    3. '   ' → logprob: -12.375104904174805
    4. '```' → logprob: -13.625104904174805
    5. '2' → logprob: -13.750104904174805
    6. ')' → logprob: -14.375104904174805
    7. '  ' → logprob: -14.937604904174805
    8. '33' → logprob: -15.625104904174805
    9. '３' → logprob: -16.437604904174805
    10. '1' → logprob: -16.500104904174805

Token 91: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00016337241686414927
    2. ' ' → logprob: -8.750163078308105
    3. '   ' → logprob: -13.125163078308105
    4. ')' → logprob: -14.562663078308105
    5. '```' → logprob: -14.625163078308105
    6. '  ' → logprob: -15.000163078308105
    7. '1' → logprob: -15.000163078308105
    8. '2' → logprob: -15.062663078308105
    9. '33' → logprob: -15.750163078308105
    10. '３' → logprob: -16.375164031982422

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004269812779966742
    2. ' )' → logprob: -8.00042724609375
    3. ')+' → logprob: -9.50042724609375
    4. '   ' → logprob: -11.37542724609375
    5. '))' → logprob: -13.62542724609375
    6. ' ' → logprob: -13.75042724609375
    7. '1' → logprob: -14.50042724609375
    8. '```' → logprob: -14.62542724609375
    9. '  ' → logprob: -15.12542724609375
    10. '`)' → logprob: -15.75042724609375

Token 93: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06910118460655212
    2. '+' → logprob: -2.819101095199585
    3. ')' → logprob: -5.069101333618164
    4. '   ' → logprob: -7.944101333618164
    5. ' ' → logprob: -9.069101333618164
    6. ' )' → logprob: -9.069101333618164
    7. ')+' → logprob: -10.069101333618164
    8. '  ' → logprob: -10.319101333618164
    9. '```' → logprob: -10.319101333618164
    10. '*' → logprob: -10.694101333618164

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015064085833728313
    2. ' ' → logprob: -4.890064239501953
    3. '10' → logprob: -5.015064239501953
    4. '2' → logprob: -7.640064239501953
    5. '3' → logprob: -9.515064239501953
    6. '7' → logprob: -9.640064239501953
    7. '5' → logprob: -10.015064239501953
    8. '```' → logprob: -10.015064239501953
    9. 'x' → logprob: -10.890064239501953
    10. '   ' → logprob: -11.015064239501953

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005567294079810381
    2. ' ' → logprob: -5.6305670738220215
    3. '10' → logprob: -6.3805670738220215
    4. '2' → logprob: -8.88056755065918
    5. '7' → logprob: -9.88056755065918
    6. '3' → logprob: -11.06806755065918
    7. '```' → logprob: -11.19306755065918
    8. '5' → logprob: -11.56806755065918
    9. 'x' → logprob: -11.88056755065918
    10. 't' → logprob: -12.25556755065918

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03948207199573517
    2. ')
' → logprob: -3.2894821166992188
    3. '   ' → logprob: -6.664482116699219
    4. ' )' → logprob: -9.164482116699219
    5. ' )
' → logprob: -10.414482116699219
    6. ')
' → logprob: -10.789482116699219
    7. ' ' → logprob: -11.789482116699219
    8. ')

' → logprob: -14.539482116699219
    9. '  ' → logprob: -15.539482116699219
    10. ')`
' → logprob: -15.914482116699219

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019007037917617708
    2. ' ' → logprob: -10.000189781188965
    3. '    
' → logprob: -10.625189781188965
    4. ')' → logprob: -10.750189781188965
    5. ' else' → logprob: -10.750189781188965
    6. 'else' → logprob: -11.000189781188965
    7. '<|end|>' → logprob: -11.250189781188965
    8. '  ' → logprob: -11.625189781188965
    9. 'elif' → logprob: -11.625189781188965
    10. '```' → logprob: -11.750189781188965

Token 98: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04452655091881752
    2. 'elif' → logprob: -4.54452657699585
    3. ' if' → logprob: -4.91952657699585
    4. 'else' (adapté à ' else') → logprob: -4.91952657699585
    5. 'if' → logprob: -5.04452657699585
    6. 'res' → logprob: -5.54452657699585
    7. ' else' → logprob: -6.16952657699585
    8. ' elif' → logprob: -6.29452657699585
    9. ' ' → logprob: -6.41952657699585
    10. 'return' → logprob: -6.91952657699585

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1902772188186646
    2. '   ' → logprob: -1.1902772188186646
    3. 'res' → logprob: -1.8152772188186646
    4. '       ' → logprob: -1.9402772188186646
    5. ':
' → logprob: -3.190277099609375
    6. ' res' → logprob: -3.440277099609375
    7. '    ' → logprob: -5.065277099609375
    8. ' ' → logprob: -6.065277099609375
    9. '  ' → logprob: -7.065277099609375
    10. ',' → logprob: -7.815277099609375

Token 100: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.039492737501859665
    2. '   ' → logprob: -3.4144928455352783
    3. ' res' → logprob: -5.164492607116699
    4. ' ' → logprob: -9.6644926071167
    5. '  ' → logprob: -10.9144926071167
    6. '	res' → logprob: -11.6644926071167
    7. 'for' → logprob: -12.6644926071167
    8. '
' → logprob: -12.6644926071167
    9. '    ' → logprob: -13.0394926071167
    10. 'r' → logprob: -13.0394926071167

Token 101: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.3297410011291504
    2. ' res' → logprob: -1.3297410011291504
    3. '   ' → logprob: -4.70474100112915
    4. 'if' → logprob: -6.45474100112915
    5. ' if' → logprob: -6.95474100112915
    6. 'diff' → logprob: -7.20474100112915
    7. 'r' → logprob: -7.45474100112915
    8. 'd' → logprob: -7.82974100112915
    9. ' diff' → logprob: -7.82974100112915
    10. ' remainder' → logprob: -7.95474100112915

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602364182472229
    2. '=' → logprob: -1.9102363586425781
    3. ' ' → logprob: -11.910236358642578
    4. ' +=' → logprob: -12.660236358642578
    5. '+=' → logprob: -13.660236358642578
    6. '   ' → logprob: -14.285236358642578
    7. ' -=' → logprob: -15.535236358642578
    8. '  ' → logprob: -16.035236358642578
    9. '=min' → logprob: -16.785236358642578
    10. '    ' → logprob: -17.035236358642578

Token 103: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5759507417678833
    2. 'min' → logprob: -0.8259507417678833
    3. '(min' → logprob: -12.200950622558594
    4. '	min' → logprob: -13.575950622558594
    5. ' ' → logprob: -13.950950622558594
    6. ' ' → logprob: -14.075950622558594
    7. 'x' → logprob: -14.950950622558594
    8. 'm' → logprob: -15.075950622558594
    9. '   ' → logprob: -15.075950622558594
    10. '[min' → logprob: -15.075950622558594

Token 104: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00010235115041723475
    2. 'res' → logprob: -9.375102043151855
    3. '(' → logprob: -11.000102043151855
    4. ',res' → logprob: -15.000102043151855
    5. '(
' → logprob: -15.875102043151855
    6. ' res' → logprob: -16.625102996826172
    7. '$res' → logprob: -17.125102996826172
    8. '(d' → logprob: -17.250102996826172
    9. '```' → logprob: -17.500102996826172
    10. '	res' → logprob: -17.500102996826172

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015342625556513667
    2. '(res' → logprob: -7.376534461975098
    3. '(x' → logprob: -8.251534461975098
    4. ' ,' → logprob: -8.501534461975098
    5. '(' → logprob: -8.626534461975098
    6. ',res' → logprob: -8.626534461975098
    7. ',d' → logprob: -10.501534461975098
    8. '(dx' → logprob: -11.001534461975098
    9. 'dfs' → logprob: -11.751534461975098
    10. 'res' → logprob: -12.126534461975098

Token 106: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.06203882396221161
    2. ' dfs' → logprob: -2.8120388984680176
    3. '   ' → logprob: -10.68703842163086
    4. ' ' → logprob: -11.18703842163086
    5. 'd' → logprob: -11.43703842163086
    6. 'df' → logprob: -12.31203842163086
    7. '  ' → logprob: -12.68703842163086
    8. 'x' → logprob: -12.68703842163086
    9. 'ds' → logprob: -13.18703842163086
    10. 'fs' → logprob: -13.31203842163086

Token 107: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.196732960641384e-05
    2. '(' → logprob: -9.625082015991211
    3. '((' → logprob: -11.250082015991211
    4. '(abs' → logprob: -13.125082015991211
    5. ' (' → logprob: -15.125082015991211
    6. '(max' → logprob: -15.250082015991211
    7. '(
' → logprob: -15.500082015991211
    8. 'x' → logprob: -15.875082015991211
    9. '   ' → logprob: -17.50008201599121
    10. '(

' → logprob: -18.00008201599121

Token 108: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3875499367713928
    2. '-' → logprob: -1.137549877166748
    3. '1' → logprob: -7.762549877166748
    4. ' ' → logprob: -9.137550354003906
    5. 'x' → logprob: -9.887550354003906
    6. '(x' → logprob: -10.637550354003906
    7. ' x' → logprob: -10.762550354003906
    8. ' (' → logprob: -11.887550354003906
    9. ')' → logprob: -12.137550354003906
    10. '(' → logprob: -12.137550354003906

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000633566698525101
    2. ' ' → logprob: -7.375633716583252
    3. ')' → logprob: -13.188133239746094
    4. '   ' → logprob: -13.688133239746094
    5. '3' → logprob: -14.313133239746094
    6. '```' → logprob: -14.313133239746094
    7. '2' → logprob: -14.500633239746094
    8. '(' → logprob: -15.125633239746094
    9. '10' → logprob: -15.438133239746094
    10. '  ' → logprob: -15.688133239746094

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.019237768370658e-05
    2. ' ' → logprob: -9.375090599060059
    3. '3' → logprob: -13.000090599060059
    4. '(' → logprob: -13.625090599060059
    5. '2' → logprob: -14.375090599060059
    6. '```' → logprob: -14.875090599060059
    7. ')' → logprob: -15.375090599060059
    8. '10' → logprob: -16.500089645385742
    9. ' (' → logprob: -16.625089645385742
    10. '   ' → logprob: -17.250089645385742

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -12.750004768371582
    3. ')+' → logprob: -13.625004768371582
    4. '   ' → logprob: -14.875004768371582
    5. '`)' → logprob: -17.125003814697266
    6. '()' → logprob: -17.250003814697266
    7. '')' → logprob: -17.375003814697266
    8. '）' → logprob: -18.125003814697266
    9. ' ' → logprob: -18.125003814697266
    10. ']' → logprob: -18.250003814697266

Token 112: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.27551570534706116
    2. '+' → logprob: -1.6505156755447388
    3. ')' → logprob: -3.0255157947540283
    4. ')+' → logprob: -8.52551555633545
    5. '   ' → logprob: -9.77551555633545
    6. ' )' → logprob: -10.27551555633545
    7. ' ' → logprob: -10.40051555633545
    8. '()' → logprob: -12.27551555633545
    9. '    ' → logprob: -12.90051555633545
    10. '  ' → logprob: -13.15051555633545

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017025562701746821
    2. ' ' → logprob: -6.376702785491943
    3. '   ' → logprob: -15.626702308654785
    4. '2' → logprob: -16.6267032623291
    5. ')' → logprob: -16.7517032623291
    6. '```' → logprob: -17.5017032623291
    7. '  ' → logprob: -19.5017032623291
    8. '0' → logprob: -19.8767032623291
    9. '    ' → logprob: -20.0017032623291
    10. '4' → logprob: -20.0017032623291

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.911954500945285e-05
    2. '2' → logprob: -9.875088691711426
    3. '3' → logprob: -11.000088691711426
    4. ' ' → logprob: -11.125088691711426
    5. '10' → logprob: -13.000088691711426
    6. '4' → logprob: -13.625088691711426
    7. '100' → logprob: -15.062588691711426
    8. 'dfs' → logprob: -15.062588691711426
    9. '0' → logprob: -15.125088691711426
    10. ')' → logprob: -15.187588691711426

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48549437522888184
    2. ')
' → logprob: -0.9854943752288818
    3. '   ' → logprob: -4.485494613647461
    4. ')
' → logprob: -9.735494613647461
    5. ' )
' → logprob: -11.985494613647461
    6. ')

' → logprob: -11.985494613647461
    7. ' )' → logprob: -12.735494613647461
    8. ')`
' → logprob: -12.985494613647461
    9. '```' → logprob: -13.485494613647461
    10. ' ' → logprob: -13.860494613647461

Token 116: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005666394717991352
    2. 'return' → logprob: -5.255666255950928
    3. ' return' → logprob: -7.755666255950928
    4. '```' → logprob: -12.630666732788086
    5. '    
' → logprob: -14.630666732788086
    6. '  ' → logprob: -16.255666732788086
    7. '	return' → logprob: -16.505666732788086
    8. ' ' → logprob: -16.630666732788086
    9. 'else' → logprob: -16.755666732788086
    10. '``' → logprob: -17.630666732788086

Token 117: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9053119421005249
    2. 'if' (adapté à ' if') → logprob: -1.280311942100525
    3. 'res' → logprob: -1.905311942100525
    4. 'return' → logprob: -1.905311942100525
    5. ' if' → logprob: -4.1553120613098145
    6. ' return' → logprob: -6.0303120613098145
    7. ' res' → logprob: -6.5303120613098145
    8. '```' → logprob: -8.405311584472656
    9. ' ' → logprob: -8.530311584472656
    10. '
' → logprob: -10.280311584472656

Token 118: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3510734736919403
    2. 'x' → logprob: -1.2260735034942627
    3. '(x' → logprob: -6.351073265075684
    4. ' (' → logprob: -7.351073265075684
    5. ' ' → logprob: -9.101073265075684
    6. '   ' → logprob: -9.351073265075684
    7. '(' → logprob: -11.601073265075684
    8. ' abs' → logprob: -12.101073265075684
    9. '  ' → logprob: -12.351073265075684
    10. 'abs' → logprob: -12.601073265075684

Token 119: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015170343220233917
    2. '(x' → logprob: -4.390170574188232
    3. ' x' → logprob: -6.015170574188232
    4. ' (' → logprob: -8.515170097351074
    5. '(' → logprob: -12.140170097351074
    6. ')' → logprob: -13.015170097351074
    7. ' ' → logprob: -13.265170097351074
    8. 'res' → logprob: -14.015170097351074
    9. '   ' → logprob: -14.140170097351074
    10. '(t' → logprob: -14.140170097351074

Token 120: ' +' (ID: 659)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5154916048049927
    2. '%' → logprob: -1.5154916048049927
    3. '+' → logprob: -2.515491485595703
    4. ' +' → logprob: -3.140491485595703
    5. ' ' → logprob: -3.890491485595703
    6. ' -' → logprob: -4.015491485595703
    7. '-' → logprob: -4.015491485595703
    8. '>' → logprob: -6.515491485595703
    9. ' >' → logprob: -7.140491485595703
    10. '   ' → logprob: -10.015491485595703

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04744207486510277
    2. ' ' → logprob: -3.2974419593811035
    3. '2' → logprob: -4.6724419593811035
    4. ')' → logprob: -13.047442436218262
    5. '   ' → logprob: -14.297442436218262
    6. ' (' → logprob: -14.422442436218262
    7. '4' → logprob: -14.422442436218262
    8. '5' → logprob: -14.422442436218262
    9. '  ' → logprob: -14.547442436218262
    10. '```' → logprob: -14.672442436218262

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04315504804253578
    2. '2' → logprob: -3.1681549549102783
    3. ' ' → logprob: -8.7931547164917
    4. ')' → logprob: -12.7931547164917
    5. '```' → logprob: -15.1681547164917
    6. '(' → logprob: -15.2931547164917
    7. '   ' → logprob: -15.6681547164917
    8. '
' → logprob: -15.7931547164917
    9. '4' → logprob: -16.043155670166016
    10. '

' → logprob: -16.355655670166016

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017167085316032171
    2. ' )' → logprob: -7.126716613769531
    3. ' <=' → logprob: -7.501716613769531
    4. ')<=' → logprob: -8.751716613769531
    5. ')%' → logprob: -9.126716613769531
    6. '   ' → logprob: -10.501716613769531
    7. '<=' → logprob: -10.626716613769531
    8. ' ' → logprob: -11.251716613769531
    9. ' %' → logprob: -11.876716613769531
    10. '  ' → logprob: -12.126716613769531

Token 124: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5071488618850708
    2. '%' → logprob: -1.2571488618850708
    3. ' <=' → logprob: -2.3821487426757812
    4. ')' → logprob: -4.632148742675781
    5. ' ' → logprob: -5.382148742675781
    6. '<=' → logprob: -5.632148742675781
    7. ' ==' → logprob: -6.507148742675781
    8. '   ' → logprob: -7.382148742675781
    9. '==' → logprob: -8.007148742675781
    10. '  ' → logprob: -8.757148742675781

Token 125: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.00020408630371
    4. '33' → logprob: -17.62520408630371
    5. '۳' → logprob: -17.68770408630371
    6. '  ' → logprob: -17.81270408630371
    7. '```' → logprob: -17.87520408630371
    8. '<|end|>' → logprob: -18.18770408630371
    9. '৩' → logprob: -18.37520408630371
    10. '٣' → logprob: -18.43770408630371

Token 126: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۳' → logprob: -16.937503814697266
    4. '٣' → logprob: -16.937503814697266
    5. '৩' → logprob: -17.187503814697266
    6. '6' → logprob: -17.250003814697266
    7. '३' → logprob: -17.312503814697266
    8. '2' → logprob: -17.750003814697266
    9. '```' → logprob: -18.000003814697266
    10. '３' → logprob: -18.062503814697266

Token 127: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38690853118896484
    2. ' ==' → logprob: -1.1369085311889648
    3. '0' → logprob: -10.886908531188965
    4. ')==' → logprob: -11.636908531188965
    5. ' ' → logprob: -12.886908531188965
    6. '==
' → logprob: -13.136908531188965
    7. '===' → logprob: -13.886908531188965
    8. '   ' → logprob: -13.886908531188965
    9. ']==' → logprob: -14.136908531188965
    10. ')' → logprob: -14.261908531188965

Token 128: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011055364273488522
    2. ' ' → logprob: -4.5110554695129395
    3. '3' → logprob: -11.886054992675781
    4. '==' → logprob: -15.886054992675781
    5. '   ' → logprob: -15.886054992675781
    6. '```' → logprob: -16.01105499267578
    7. '
' → logprob: -16.32355499267578
    8. '  ' → logprob: -16.88605499267578
    9. ' ' → logprob: -17.19855499267578
    10. '

' → logprob: -17.32355499267578

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014302179217338562
    2. '3' → logprob: -4.2643022537231445
    3. ' ' → logprob: -8.889302253723145
    4. '```' → logprob: -15.201802253723145
    5. '==' → logprob: -16.014301300048828
    6. '1' → logprob: -16.389301300048828
    7. '   ' → logprob: -16.701801300048828
    8. '

' → logprob: -17.139301300048828
    9. '
' → logprob: -17.201801300048828
    10. '2' → logprob: -17.576801300048828

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22780728340148926
    2. ':
' → logprob: -1.6028072834014893
    3. '           ' → logprob: -6.10280704498291
    4. '       ' → logprob: -9.60280704498291
    5. '):
' → logprob: -10.22780704498291
    6. ' and' → logprob: -11.35280704498291
    7. ' :
' → logprob: -11.35280704498291
    8. ' :' → logprob: -11.85280704498291
    9. '   ' → logprob: -12.22780704498291
    10. ',' → logprob: -12.35280704498291

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.470901229884475e-05
    2. 'res' → logprob: -10.75008487701416
    3. '       ' → logprob: -11.37508487701416
    4. ' res' → logprob: -11.50008487701416
    5. '<|end|>' → logprob: -12.00008487701416
    6. '            
' → logprob: -12.12508487701416
    7. '          ' → logprob: -12.25008487701416
    8. '
' → logprob: -12.37508487701416
    9. ',' → logprob: -12.75008487701416
    10. 'dfs' → logprob: -12.87508487701416

Token 132: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.03462347388267517
    2. ' res' → logprob: -3.409623384475708
    3. '           ' → logprob: -7.034623622894287
    4. '
' → logprob: -10.409623146057129
    5. '   ' → logprob: -10.909623146057129
    6. '       ' → logprob: -11.159623146057129
    7. '               ' → logprob: -11.159623146057129
    8. '	res' → logprob: -11.409623146057129
    9. ' ' → logprob: -12.284623146057129
    10. ',res' → logprob: -14.534623146057129

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868713676929474
    2. ' =' → logprob: -1.136871337890625
    3. '   ' → logprob: -15.011871337890625
    4. '=min' → logprob: -17.261871337890625
    5. ' ' → logprob: -17.761871337890625
    6. '    ' → logprob: -19.261871337890625
    7. '       ' → logprob: -19.386871337890625
    8. '＝' → logprob: -19.511871337890625
    9. '```' → logprob: -19.886871337890625
    10. '=
' → logprob: -20.011871337890625

Token 134: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.061967913061380386
    2. 'min' → logprob: -2.8119678497314453
    3. '(min' → logprob: -15.436967849731445
    4. '	min' → logprob: -16.686967849731445
    5. '_min' → logprob: -18.561967849731445
    6. ' ' → logprob: -18.936967849731445
    7. '.min' → logprob: -19.311967849731445
    8. '=min' → logprob: -19.311967849731445
    9. ' ' → logprob: -19.561967849731445
    10. ' minimum' → logprob: -20.186967849731445

Token 135: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.981667537620524e-06
    2. 'res' → logprob: -13.500001907348633
    3. '(' → logprob: -14.500001907348633
    4. ',res' → logprob: -17.125001907348633
    5. '$res' → logprob: -17.250001907348633
    6. '	res' → logprob: -18.375001907348633
    7. ' res' → logprob: -18.375001907348633
    8. '=res' → logprob: -18.875001907348633
    9. '(
' → logprob: -19.125001907348633
    10. '```' → logprob: -19.875001907348633

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06615693122148514
    2. '(res' → logprob: -3.0661568641662598
    3. ',res' → logprob: -4.06615686416626
    4. ',d' → logprob: -8.691157341003418
    5. '(d' → logprob: -9.566157341003418
    6. '(' → logprob: -10.691157341003418
    7. ' ,' → logprob: -11.816157341003418
    8. 'res' → logprob: -13.566157341003418
    9. ',min' → logprob: -13.816157341003418
    10. 'dfs' → logprob: -13.941157341003418

Token 137: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.016071675345301628
    2. ' dfs' → logprob: -4.141071796417236
    3. 'd' → logprob: -10.641071319580078
    4. '   ' → logprob: -12.391071319580078
    5. '(d' → logprob: -12.766071319580078
    6. 'df' → logprob: -13.016071319580078
    7. ' ' → logprob: -13.891071319580078
    8. ')' → logprob: -14.266071319580078
    9. '  ' → logprob: -14.391071319580078
    10. 'ds' → logprob: -15.016071319580078

Token 138: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5232442617416382
    2. '((' → logprob: -0.8982442617416382
    3. '(' → logprob: -9.27324390411377
    4. '(((' → logprob: -11.02324390411377
    5. 'x' → logprob: -11.77324390411377
    6. ' (' → logprob: -13.39824390411377
    7. ' ((' → logprob: -14.64824390411377
    8. '(
' → logprob: -16.148244857788086
    9. '((((' → logprob: -16.148244857788086
    10. '```' → logprob: -16.148244857788086

Token 139: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6939792037010193
    2. '(x' → logprob: -0.6939792037010193
    3. ' (' → logprob: -7.443979263305664
    4. ' x' → logprob: -8.443979263305664
    5. '   ' → logprob: -10.943979263305664
    6. '(' → logprob: -12.193979263305664
    7. '((' → logprob: -12.818979263305664
    8. '
' → logprob: -13.818979263305664
    9. '	x' → logprob: -14.068979263305664
    10. ' ' → logprob: -14.318979263305664

Token 140: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269530951976776
    2. '+' → logprob: -2.126953125
    3. '+x' → logprob: -11.626953125
    4. '//' → logprob: -11.751953125
    5. ' ' → logprob: -13.001953125
    6. ' //' → logprob: -13.376953125
    7. '(x' → logprob: -14.001953125
    8. ' -' → logprob: -14.376953125
    9. 'x' → logprob: -14.501953125
    10. ' x' → logprob: -14.501953125

Token 141: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.25023078918457
    4. '  ' → logprob: -16.75023078918457
    5. '```' → logprob: -17.56273078918457
    6. '0' → logprob: -18.06273078918457
    7. ')' → logprob: -18.25023078918457
    8. '2' → logprob: -18.31273078918457
    9. '１' → logprob: -18.87523078918457
    10. '
' → logprob: -19.00023078918457

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.750021934509277
    4. '2' → logprob: -16.000022888183594
    5. '```' → logprob: -16.250022888183594
    6. ')' → logprob: -16.437522888183594
    7. '  ' → logprob: -16.812522888183594
    8. '0' → logprob: -17.062522888183594
    9. '-' → logprob: -17.312522888183594
    10. '１' → logprob: -17.375022888183594

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008016457431949675
    2. '//' → logprob: -8.125802040100098
    3. ')//' → logprob: -8.250802040100098
    4. ' )' → logprob: -8.375802040100098
    5. ' //' → logprob: -11.625802040100098
    6. ' ' → logprob: -13.375802040100098
    7. '   ' → logprob: -14.000802040100098
    8. '#' → logprob: -14.625802040100098
    9. '```' → logprob: -14.625802040100098
    10. '``' → logprob: -15.375802040100098

Token 144: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4521102011203766
    2. ' //' → logprob: -1.3271101713180542
    3. ')' → logprob: -2.3271102905273438
    4. ' ' → logprob: -8.202110290527344
    5. ' )' → logprob: -8.327110290527344
    6. '()' → logprob: -8.452110290527344
    7. ')//' → logprob: -9.577110290527344
    8. '```' → logprob: -10.452110290527344
    9. '#' → logprob: -10.577110290527344
    10. '   ' → logprob: -11.077110290527344

Token 145: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00011367550177965313
    2. ' ' → logprob: -9.125113487243652
    3. '   ' → logprob: -12.875113487243652
    4. '           ' → logprob: -14.875113487243652
    5. ')' → logprob: -15.500113487243652
    6. '       ' → logprob: -15.562613487243652
    7. '  ' → logprob: -15.687613487243652
    8. '```' → logprob: -15.812613487243652
    9. '۳' → logprob: -16.12511444091797
    10. '３' → logprob: -16.50011444091797

Token 146: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.37501335144043
    3. '   ' → logprob: -14.87501335144043
    4. '```' → logprob: -15.25001335144043
    5. ')' → logprob: -15.37501335144043
    6. '۳' → logprob: -16.06251335144043
    7. '৩' → logprob: -16.37501335144043
    8. '३' → logprob: -16.75001335144043
    9. '３' → logprob: -16.87501335144043
    10. '  ' → logprob: -17.18751335144043

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.742448022123426e-05
    2. ' )' → logprob: -10.375067710876465
    3. ')+' → logprob: -10.375067710876465
    4. '   ' → logprob: -12.500067710876465
    5. ' ' → logprob: -14.875067710876465
    6. '+' → logprob: -15.000067710876465
    7. '  ' → logprob: -16.50006675720215
    8. ' +' → logprob: -16.75006675720215
    9. '`)' → logprob: -16.87506675720215
    10. '')' → logprob: -17.00006675720215

Token 148: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08905059099197388
    2. '+' → logprob: -2.464050531387329
    3. ')' → logprob: -9.21405029296875
    4. ')+' → logprob: -11.58905029296875
    5. ' ' → logprob: -13.83905029296875
    6. '   ' → logprob: -14.96405029296875
    7. ' )' → logprob: -15.71405029296875
    8. '```' → logprob: -15.96405029296875
    9. ' ' → logprob: -16.21405029296875
    10. '()+' → logprob: -16.58905029296875

Token 149: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1130322813987732
    2. '1' → logprob: -2.238032341003418
    3. ' ' → logprob: -8.988032341003418
    4. '3' → logprob: -9.613032341003418
    5. '4' → logprob: -11.800532341003418
    6. ')' → logprob: -13.300532341003418
    7. '   ' → logprob: -13.488032341003418
    8. '```' → logprob: -13.488032341003418
    9. '7' → logprob: -13.988032341003418
    10. '

' → logprob: -14.488032341003418

Token 150: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006739881355315447
    2. '1' → logprob: -5.006740093231201
    3. '3' → logprob: -11.256739616394043
    4. ' ' → logprob: -12.194239616394043
    5. '```' → logprob: -13.569239616394043
    6. '   ' → logprob: -14.194239616394043
    7. '
' → logprob: -14.506739616394043
    8. '4' → logprob: -14.569239616394043
    9. '۲' → logprob: -14.756739616394043
    10. '+' → logprob: -14.881739616394043

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28410670161247253
    2. ')
' → logprob: -1.784106731414795
    3. '   ' → logprob: -2.534106731414795
    4. '       ' → logprob: -11.534106254577637
    5. ')

' → logprob: -11.784106254577637
    6. ')
' → logprob: -11.909106254577637
    7. ')`
' → logprob: -12.284106254577637
    8. ' )
' → logprob: -12.784106254577637
    9. ' )' → logprob: -13.784106254577637
    10. '```' → logprob: -15.284106254577637

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006305903079919517
    2. 'return' → logprob: -7.6256303787231445
    3. ' return' → logprob: -9.000630378723145
    4. '```' → logprob: -10.875630378723145
    5. '``' → logprob: -15.875630378723145
    6. '	return' → logprob: -16.87563133239746
    7. ')' → logprob: -17.00063133239746
    8. ')return' → logprob: -17.37563133239746
    9. '    
' → logprob: -17.50063133239746
    10. '<|end|>' → logprob: -17.62563133239746

Token 153: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16187351942062378
    2. 'return' (adapté à ' return') → logprob: -1.9118735790252686
    3. ' return' → logprob: -6.4118733406066895
    4. '```' → logprob: -12.286873817443848
    5. '	return' → logprob: -14.411873817443848
    6. ' ' → logprob: -15.411873817443848
    7. '  ' → logprob: -15.536873817443848
    8. '    
' → logprob: -15.911873817443848
    9. '       ' → logprob: -16.03687286376953
    10. 'else' → logprob: -16.41187286376953

Token 154: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004078401252627373
    2. ' res' → logprob: -5.504078388214111
    3. '(res' → logprob: -18.754077911376953
    4. '	res' → logprob: -20.379077911376953
    5. '   ' → logprob: -21.004077911376953
    6. '$res' → logprob: -21.254077911376953
    7. '
' → logprob: -21.754077911376953
    8. '```' → logprob: -22.754077911376953
    9. ' ' → logprob: -23.129077911376953
    10. '_res' → logprob: -23.254077911376953

Token 155: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003045994380954653
    2. 'for' → logprob: -8.250304222106934
    3. 'result' → logprob: -10.500304222106934
    4. '
' → logprob: -12.000304222106934
    5. '```' → logprob: -12.375304222106934
    6. 'ans' → logprob: -13.375304222106934
    7. '    
' → logprob: -13.750304222106934
    8. ' print' → logprob: -13.875304222106934
    9. 'answer' → logprob: -13.875304222106934
    10. '  
' → logprob: -15.375304222106934

Token 156: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.153795766294934e-06
    2. 'result' → logprob: -12.750005722045898
    3. 'for' → logprob: -13.250005722045898
    4. ' print' → logprob: -13.750005722045898
    5. '```' → logprob: -15.625005722045898
    6. '
' → logprob: -16.0000057220459
    7. 'answer' → logprob: -17.6250057220459
    8. '    
' → logprob: -18.7500057220459
    9. '#print' → logprob: -19.6250057220459
    10. '  
' → logprob: -20.0000057220459

Token 157: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.029878105968236923
    2. '(' → logprob: -3.5298781394958496
    3. '(t' → logprob: -9.154877662658691
    4. '(df' → logprob: -11.029877662658691
    5. '(f' → logprob: -12.779877662658691
    6. '((' → logprob: -14.029877662658691
    7. '('' → logprob: -14.279877662658691
    8. '(
' → logprob: -15.279877662658691
    9. '(sys' → logprob: -15.279877662658691
    10. '(s' → logprob: -15.404877662658691

Token 158: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0003607296966947615
    2. 'f' → logprob: -8.750360488891602
    3. '(t' → logprob: -9.625360488891602
    4. 's' → logprob: -9.875360488891602
    5. 't' → logprob: -10.625360488891602
    6. 'dfs' → logprob: -11.000360488891602
    7. '(fs' → logprob: -11.750360488891602
    8. ')' → logprob: -12.000360488891602
    9. 'fst' → logprob: -12.375360488891602
    10. 'fsi' → logprob: -12.375360488891602

Token 159: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -7.896309739408025e-07
    2. 't' → logprob: -14.625000953674316
    3. '(' → logprob: -15.625000953674316
    4. ')t' → logprob: -16.125
    5. '(x' → logprob: -18.5
    6. ')' → logprob: -18.875
    7. '(s' → logprob: -19.0
    8. ' t' → logprob: -20.0
    9. ')(' → logprob: -20.5
    10. '(
' → logprob: -20.625

Token 160: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931579113006592
    2. '))' → logprob: -0.6931579113006592
    3. '))
' → logprob: -12.818158149719238
    4. ')))' → logprob: -12.818158149719238
    5. ')
' → logprob: -12.943158149719238
    6. '())' → logprob: -13.693158149719238
    7. ' )' → logprob: -14.068158149719238
    8. ' ))' → logprob: -15.693158149719238
    9. '})' → logprob: -15.818158149719238
    10. ')")' → logprob: -16.443157196044922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 158
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 141
Précision stricte (1ère position): 46.84%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 89.24%
================================================================================
