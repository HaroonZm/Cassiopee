================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Cette solution utilise l'algorithme de reconstruction d'arbre phylogénétique UPGMA (Unweighted Pair Group Method with Arithmetic Mean),
# adapté ici pour reconstruire un arbre à partir d'une matrice de distances entre feuilles (ordinateurs).
# Le résultat final est la liste des degrés (nombre de connexions) des noeuds internes (switches) de l'arbre,
# triés en ordre croissant.

# Approche générale :
# 1) Chaque ordinateur est initialement un cluster séparé.
# 2) À chaque étape, on trouve la paire de clusters avec la distance moyenne la plus faible.
# 3) On les fusionne en un nouveau cluster (représentant un switch).
# 4) On met à jour la matrice de distances entre clusters avec la moyenne arithmétique des distances.
# 5) On répète jusqu'à obtenir un seul cluster (l'arbre complet).
# 6) On calcule les degrés des noeuds internes de l'arbre, correspondant aux switches.
#
# Remarque importante : 
# Les feuilles sont les ordinateurs et ne sont jamais internes.
# Les noeuds internes sont les switchs et ont donc un degré >= 2.
# Chaque cluster fusionné correspond à un switch.
# Le résultat est la liste (triée) des degrés de ces noeuds internes.

class Node:
    def __init__(self, idx, left=None, right=None):
        self.idx = idx           # identifiant unique du noeud
        self.left = left         # fils gauche (cluster fusionné)
        self.right = right       # fils droit (cluster fusionné)
        self.size = 1            # nombre de feuilles sous ce noeud
        self.degree = 0          # degré du noeud (nombre de connexions)
        # Le degré sera calculé ensuite à partir de la structure de l'arbre

def parse_input():
    # Lit les entrées jusqu'à '0' seul sur une ligne
    inputs = []
    lines = sys.stdin.read().strip().split('\n')
    i = 0
    while True:
        if i>=len(lines):
            break
        n = lines[i].strip()
        i += 1
        if n == '0':
            break
        n = int(n)
        matrix = []
        # les distances peuvent être sur plusieurs lignes
        while len(matrix) < n:
            row = []
            while len(row) < n:
                parts = lines[i].strip().split()
                i += 1
                row.extend(map(int, parts))
            matrix.append(row[:n])
        inputs.append((n, matrix))
    return inputs

def upgma(n, dist_matrix):
    # Initialisation : chaque feuille est un cluster initial
    clusters = [Node(i) for i in range(n)]
    active = [True]*n   # indique quels clusters sont encore actifs
    distances = {}
    # Stocker distances entre clusters dans un dict avec tuple (i,j) i<j
    for i in range(n):
        for j in range(i+1,n):
            distances[(i,j)] = dist_matrix[i][j]

    next_node_id = n    # identifiants pour noeuds internes

    # Fonction pour trouver la paire minimale
    def find_min_pair():
        min_dist = float('inf')
        min_pair = None
        for (x,y), d in distances.items():
            if active[x] and active[y]:
                if d < min_dist:
                    min_dist = d
                    min_pair = (x,y)
        return min_pair, min_dist

    # Stocker les noeuds internes pour calcul des degrés
    internal_nodes = []

    # Fusionner jusqu'à ce qu'il reste un cluster
    remaining = sum(active)
    while remaining > 1:
        (i,j), md = find_min_pair()
        # Créer noeud interne représentant la fusion
        new_node = Node(next_node_id, clusters[i], clusters[j])
        new_node.size = clusters[i].size + clusters[j].size
        internal_nodes.append(new_node)
        clusters.append(new_node)
        active.append(True)
        # Désactiver i et j
        active[i] = False
        active[j] = False
        active_count = sum(active)
        # Mise à jour des distances entre nouveau cluster et autres clusters actifs
        for k in range(len(clusters)-1):
            if active[k]:
                # calcul distance moyenne pondérée
                # distance(new,k) = (dist(i,k)*size(i) + dist(j,k)*size(j)) / (size(i) + size(j))
                # récupère distances dans distances dict (attention aux indices ordre)
                def get_dist(x,y):
                    a,b = min(x,y), max(x,y)
                    return distances[(a,b)] if (a,b) in distances else None

                di = get_dist(i,k)
                dj = get_dist(j,k)
                size_i = clusters[i].size
                size_j = clusters[j].size
                if di is None or dj is None:
                    # Peut arriver quand k = i ou j, mais on évite ces cas en testant active[k]
                    continue
                new_dist = (di*size_i + dj*size_j) / (size_i + size_j)
                # stocker nouvelle distance sous nouvel index next_node_id
                a,b = min(k,next_node_id), max(k,next_node_id)
                distances[(a,b)] = new_dist
        # enlever distances liées à i,j pour optimisation
        keys_to_remove = []
        for key in distances:
            if i in key or j in key:
                keys_to_remove.append(key)
        for key in keys_to_remove:
            del distances[key]

        next_node_id += 1
        remaining -= 1

    # Le dernier noeud actif est la racine
    root_idx = None
    for idx, act in enumerate(active):
        if act:
            root_idx = idx
            break
    root = clusters[root_idx]

    # Calculer degrés :
    # Feuilles (ordinateurs) ont degré 1.
    # Noeuds internes (switches) ont degré = nombre de voisins.
    # Dans notre arbre binaire, chaque noeud a des liens vers fils et vers son père.
    # On construit une adjacency list pour tous noeuds (feuilles + internes)
    # puis on calcule le degré des noeuds internes.

    # Construire adjacency list (dictionnaire de sets)
    adj = {}
    def add_edge(u,v):
        adj.setdefault(u,set()).add(v)
        adj.setdefault(v,set()).add(u)

    def build_adj(node):
        if node.left is not None and node.right is not None:
            add_edge(node.idx, node.left.idx)
            add_edge(node.idx, node.right.idx)
            build_adj(node.left)
            build_adj(node.right)

    build_adj(root)

    # Les feuilles sont 0..n-1, internes n.. next_node_id-1
    degrees_internal = []
    for nodeid in range(n, next_node_id):
        deg = len(adj[nodeid]) if nodeid in adj else 0
        degrees_internal.append(deg)

    degrees_internal.sort()
    return degrees_internal

def main():
    inputs = parse_input()
    for n, dist_matrix in inputs:
        degrees = upgma(n, dist_matrix)
        print(' '.join(map(str, degrees)))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0673334077000618
    2. '\n' → logprob: -3.442333459854126
    3. 'import' → logprob: -3.817333459854126
    4. '<|end|>' → logprob: -5.942333221435547
    5. '\' → logprob: -6.317333221435547
    6. 'newline' → logprob: -6.692333221435547
    7. ',' → logprob: -6.942333221435547
    8. '' → logprob: -7.442333221435547
    9. '
' → logprob: -7.692333221435547
    10. '<|end|>' → logprob: -7.692333221435547

Token 4: ' Cette' (ID: 27383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47927364706993103
    2. 'def' → logprob: -2.354273557662964
    3. ' This' → logprob: -2.979273557662964
    4. ' def' → logprob: -3.229273557662964
    5. 'import' → logprob: -3.354273557662964
    6. ' The' → logprob: -3.854273557662964
    7. ' #' → logprob: -3.979273557662964
    8. ' argparse' → logprob: -3.979273557662964
    9. '!' → logprob: -4.354273796081543
    10. '#' → logprob: -4.479273796081543

Token 5: ' solution' (ID: 7578)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002492779865860939
    2. '_' → logprob: -6.127492904663086
    3. '  ' → logprob: -9.752492904663086
    4. ' code' → logprob: -9.877492904663086
    5. ' ‌' → logprob: -10.002492904663086
    6. ' is' → logprob: -10.502492904663086
    7. ' ```' → logprob: -11.002492904663086
    8. ' ' → logprob: -11.252492904663086
    9. '   ' → logprob: -11.502492904663086
    10. 's' → logprob: -11.877492904663086

Token 6: ' utilise' (ID: 70283)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31919482350349426
    2. '_' → logprob: -1.3191947937011719
    3. ' est' → logprob: -6.194194793701172
    4. ' a' → logprob: -6.569194793701172
    5. 's' → logprob: -7.944194793701172
    6. '.' → logprob: -8.444194793701172
    7. ' ‌' → logprob: -8.569194793701172
    8. ' s' → logprob: -8.694194793701172
    9. ' ' → logprob: -8.694194793701172
    10. '  ' → logprob: -9.444194793701172

Token 7: ' l' (ID: 305)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5548854470252991
    2. ' ' → logprob: -2.1798853874206543
    3. ' l' → logprob: -2.1798853874206543
    4. ' la' → logprob: -2.3048853874206543
    5. ' des' → logprob: -3.4298853874206543
    6. ' un' → logprob: -3.6798853874206543
    7. ' une' → logprob: -4.679885387420654
    8. ' les' → logprob: -5.054885387420654
    9. 'l' → logprob: -5.304885387420654
    10. ' le' → logprob: -5.554885387420654

Token 8: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1955721229314804
    2. ''' → logprob: -2.5705721378326416
    3. 'e' → logprob: -3.3205721378326416
    4. ''import' → logprob: -3.8205721378326416
    5. ''espace' → logprob: -3.9455721378326416
    6. 'es' → logprob: -4.9455718994140625
    7. ''ap' → logprob: -6.5705718994140625
    8. ''a' → logprob: -6.5705718994140625
    9. ''utilisation' → logprob: -6.8205718994140625
    10. ''''' → logprob: -6.9455718994140625

Token 9: 'alg' (ID: 15258)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9241904616355896
    2. 'import' → logprob: -1.6741905212402344
    3. 'it' → logprob: -2.4241905212402344
    4. 'arg' → logprob: -2.5491905212402344
    5. 'i' → logprob: -2.6741905212402344
    6. 'os' → logprob: -4.424190521240234
    7. 'im' → logprob: -4.549190521240234
    8. 'alg' → logprob: -4.549190521240234
    9. 'appro' → logprob: -4.799190521240234
    10. 'in' → logprob: -4.799190521240234

Token 10: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.003479500999674201
    2. 'orithm' → logprob: -5.878479480743408
    3. 'o' → logprob: -8.253479957580566
    4. '#' → logprob: -8.628479957580566
    5. '```' → logprob: -9.753479957580566
    6. '\' → logprob: -10.503479957580566
    7. 'orithms' → logprob: -10.628479957580566
    8. 'or' → logprob: -11.128479957580566
    9. 'orit' → logprob: -11.253479957580566
    10. 'о' → logprob: -11.253479957580566

Token 11: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.014318509958684444
    2. 'm' → logprob: -4.264318466186523
    3. 'mes' → logprob: -9.639318466186523
    4. '```' → logprob: -11.389318466186523
    5. 'mie' → logprob: -11.514318466186523
    6. '\' → logprob: -11.889318466186523
    7. 'que' → logprob: -12.389318466186523
    8. 'e' → logprob: -12.389318466186523
    9. '#' → logprob: -12.514318466186523
    10. 'mme' → logprob: -12.889318466186523

Token 12: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5832556486129761
    2. ' de' → logprob: -0.9582556486129761
    3. 'd' → logprob: -3.4582557678222656
    4. 'gre' → logprob: -5.208255767822266
    5. ' A' → logprob: -5.583255767822266
    6. 'A' → logprob: -5.583255767822266
    7. ' d' → logprob: -6.083255767822266
    8. 'du' → logprob: -6.583255767822266
    9. ' greedy' → logprob: -6.583255767822266
    10. ' du' → logprob: -6.958255767822266

Token 13: ' reconstruction' (ID: 68152)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9788160920143127
    2. 'tri' → logprob: -0.9788160920143127
    3. 'l' → logprob: -2.728816032409668
    4. 'D' → logprob: -3.228816032409668
    5. 'la' → logprob: -3.478816032409668
    6. 'diff' → logprob: -3.853816032409668
    7. 'div' → logprob: -3.978816032409668
    8. 'division' → logprob: -4.228816032409668
    9. 'gl' → logprob: -4.603816032409668
    10. 'K' → logprob: -5.103816032409668

Token 14: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11243140697479248
    2. ' d' → logprob: -3.362431526184082
    3. ' de' → logprob: -3.362431526184082
    4. ' ' → logprob: -4.362431526184082
    5. ' _' → logprob: -4.862431526184082
    6. 'd' → logprob: -5.487431526184082
    7. '_de' → logprob: -6.362431526184082
    8. ' à' → logprob: -6.612431526184082
    9. ' des' → logprob: -6.612431526184082
    10. 'de' → logprob: -6.612431526184082

Token 15: ''ar' (ID: 54307)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.3953651487827301
    2. ''' → logprob: -1.6453651189804077
    3. 'e' → logprob: -2.8953652381896973
    4. ''une' → logprob: -3.5203652381896973
    5. 'u' → logprob: -4.520365238189697
    6. 'a' → logprob: -4.520365238189697
    7. ''ar' → logprob: -4.770365238189697
    8. ''u' → logprob: -5.270365238189697
    9. ''e' → logprob: -5.645365238189697
    10. ''a' → logprob: -6.270365238189697

Token 16: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.056064750999212265
    2. 'bres' → logprob: -2.9310648441314697
    3. 'b' → logprob: -7.931064605712891
    4. 'bo' → logprob: -8.43106460571289
    5. 'br' → logprob: -8.68106460571289
    6. 'r' → logprob: -9.43106460571289
    7. 'e' → logprob: -9.80606460571289
    8. '```' → logprob: -10.43106460571289
    9. 'cs' → logprob: -10.55606460571289
    10. 'brev' → logprob: -10.55606460571289

Token 17: ' phy' (ID: 76446)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0187901258468628
    2. '_' → logprob: -2.0187902450561523
    3. 's' → logprob: -2.1437902450561523
    4. '.' → logprob: -2.5187902450561523
    5. ' à' → logprob: -2.5187902450561523
    6. ' de' → logprob: -3.2687902450561523
    7. ' ' → logprob: -3.8937902450561523
    8. '```' → logprob: -3.8937902450561523
    9. ' b' → logprob: -4.643790245056152
    10. ',' → logprob: -4.706290245056152

Token 18: 'log' (ID: 2133)
  Prédit: 'log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.00992619339376688
    2. 'l' → logprob: -5.1349263191223145
    3. 'logen' → logprob: -5.7599263191223145
    4. '#' → logprob: -7.8849263191223145
    5. 'lom' → logprob: -8.134925842285156
    6. 'los' → logprob: -10.134925842285156
    7. 'lo' → logprob: -10.384925842285156
    8. 's' → logprob: -11.259925842285156
    9. 'lot' → logprob: -11.384925842285156
    10. 'LOG' → logprob: -11.509925842285156

Token 19: 'én' (ID: 3289)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.025279000401496887
    2. 'én' → logprob: -4.6502790451049805
    3. 'è' → logprob: -4.7752790451049805
    4. '#' → logprob: -6.4002790451049805
    5. 'éné' → logprob: -6.4002790451049805
    6. 'ène' → logprob: -6.7752790451049805
    7. 'en' → logprob: -7.2752790451049805
    8. 'èn' → logprob: -8.02527904510498
    9. 'énom' → logprob: -8.15027904510498
    10. 'e' → logprob: -8.52527904510498

Token 20: 'étique' (ID: 41132)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.29824984073638916
    2. 'étique' → logprob: -1.5482498407363892
    3. 'é' → logprob: -4.0482497215271
    4. 'y' → logprob: -4.6732497215271
    5. 'ie' → logprob: -4.9232497215271
    6. 'e' → logprob: -5.2982497215271
    7. 'i' → logprob: -6.4232497215271
    8. 'et' → logprob: -6.7982497215271
    9. '```' → logprob: -7.2982497215271
    10. '#' → logprob: -7.2982497215271

Token 21: ' U' (ID: 601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43201974034309387
    2. '_' → logprob: -1.8070197105407715
    3. ',' → logprob: -2.6820197105407715
    4. 's' → logprob: -3.8070197105407715
    5. ' basé' → logprob: -4.0570197105407715
    6. ' à' → logprob: -4.3070197105407715
    7. '.' → logprob: -4.3070197105407715
    8. 'e' → logprob: -4.6820197105407715
    9. ' based' → logprob: -4.6820197105407715
    10. ' basée' → logprob: -5.9320197105407715

Token 22: 'PG' (ID: 18421)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.6045168042182922
    2. 'N' → logprob: -1.4795167446136475
    3. 'n' → logprob: -2.4795167446136475
    4. 'C' → logprob: -3.7295167446136475
    5. '-' → logprob: -4.229516983032227
    6. '```' → logprob: -4.354516983032227
    7. 'PG' → logprob: -4.604516983032227
    8. 'l' → logprob: -4.604516983032227
    9. 'p' → logprob: -4.729516983032227
    10. '#' → logprob: -4.854516983032227

Token 23: 'MA' (ID: 8131)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3414156138896942
    2. '_' → logprob: -2.2164156436920166
    3. '```' → logprob: -2.8414156436920166
    4. 'ma' → logprob: -3.5914156436920166
    5. '-ma' → logprob: -4.4664154052734375
    6. 'g' → logprob: -4.5914154052734375
    7. '_root' → logprob: -5.0914154052734375
    8. 'rade' → logprob: -5.0914154052734375
    9. '_tree' → logprob: -5.3414154052734375
    10. 'a' → logprob: -5.3414154052734375

Token 24: ' (' (ID: 350)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4398921728134155
    2. 'import' → logprob: -1.4398921728134155
    3. '```' → logprob: -2.439892292022705
    4. ' ' → logprob: -2.689892292022705
    5. '\n' → logprob: -2.689892292022705
    6. '#' → logprob: -2.814892292022705
    7. 'def' → logprob: -2.939892292022705
    8. '_' → logprob: -3.064892292022705
    9. '
' → logprob: -3.314892292022705
    10. 'from' → logprob: -3.314892292022705

Token 25: 'Un' (ID: 2265)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033745165914297104
    2. ' )' → logprob: -3.533745050430298
    3. ' ' → logprob: -6.408745288848877
    4. '_' → logprob: -6.783745288848877
    5. ',' → logprob: -7.908745288848877
    6. ':' → logprob: -8.908744812011719
    7. '')' → logprob: -9.033744812011719
    8. '#' → logprob: -9.533744812011719
    9. 'a' → logprob: -9.908744812011719
    10. 'u' → logprob: -9.908744812011719

Token 26: 'weighted' (ID: 182995)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.010267368517816067
    2. ' p' → logprob: -4.63526725769043
    3. 'n' → logprob: -8.13526725769043
    4. '#' → logprob: -10.13526725769043
    5. 'pper' → logprob: -10.38526725769043
    6. 'i' → logprob: -10.63526725769043
    7. '   ' → logprob: -11.38526725769043
    8. 'l' → logprob: -11.63526725769043
    9. '	p' → logprob: -11.69776725769043
    10. 's' → logprob: -11.94776725769043

Token 27: ' Pair' (ID: 41250)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7813704609870911
    2. ' )' → logprob: -1.1563704013824463
    3. ' Neighbor' → logprob: -2.7813704013824463
    4. ')' → logprob: -3.5313704013824463
    5. '_' → logprob: -3.9063704013824463
    6. ' space' → logprob: -4.031370639801025
    7. ' Pair' → logprob: -4.156370639801025
    8. 'P' → logprob: -4.406370639801025
    9. ' P' → logprob: -4.531370639801025
    10. ' Complete' → logprob: -5.031370639801025

Token 28: ' Group' (ID: 7849)
  Prédit: 'wise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.48862510919570923
    2. '-' → logprob: -0.9886251091957092
    3. '-wise' → logprob: -4.9886250495910645
    4. 'd' → logprob: -5.9886250495910645
    5. 'g' → logprob: -6.7386250495910645
    6. '-end' → logprob: -7.1136250495910645
    7. '' → logprob: -7.7386250495910645
    8. '-End' → logprob: -7.8636250495910645
    9. '```' → logprob: -8.113625526428223
    10. '	' → logprob: -8.363625526428223

Token 29: ' Method' (ID: 11109)
  Prédit: 'Method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Method' → logprob: -0.34898847341537476
    2. ' ' → logprob: -1.8489885330200195
    3. ' Method' → logprob: -3.4739885330200195
    4. 'A' → logprob: -3.5989885330200195
    5. 'ing' → logprob: -4.2239885330200195
    6. '```' → logprob: -4.3489885330200195
    7. 'wise' → logprob: -4.4739885330200195
    8. ' method' → logprob: -4.5989885330200195
    9. ' A' → logprob: -5.5989885330200195
    10. '  ' → logprob: -6.0989885330200195

Token 30: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.0314396619796753
    2. ' for' → logprob: -1.1564396619796753
    3. 's' → logprob: -1.9064396619796753
    4. 'for' → logprob: -2.531439781188965
    5. 'with' → logprob: -2.781439781188965
    6. ')' → logprob: -3.656439781188965
    7. '```' → logprob: -5.656439781188965
    8. ' avec' → logprob: -6.031439781188965
    9. ' ' → logprob: -6.781439781188965
    10. ' de' → logprob: -7.031439781188965

Token 31: ' Arithmetic' (ID: 179942)
  Prédit: 'Arithmetic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arithmetic' → logprob: -0.03935199975967407
    2. 'Ar' → logprob: -4.039351940155029
    3. ' Arithmetic' → logprob: -4.539351940155029
    4. 'A' → logprob: -4.789351940155029
    5. 'Average' → logprob: -7.539351940155029
    6. ' Ar' → logprob: -8.289352416992188
    7. ')' → logprob: -8.414352416992188
    8. ' ' → logprob: -8.539352416992188
    9. '```' → logprob: -8.914352416992188
    10. '1' → logprob: -10.039352416992188

Token 32: ' Mean' (ID: 26319)
  Prédit: 'Mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mean' → logprob: -0.1471676081418991
    2. 'Means' → logprob: -2.272167682647705
    3. 'Average' → logprob: -4.397167682647705
    4. 'A' → logprob: -4.522167682647705
    5. ' Mean' → logprob: -5.397167682647705
    6. ')' → logprob: -5.772167682647705
    7. 'mean' → logprob: -7.522167682647705
    8. ' averages' → logprob: -7.522167682647705
    9. ' Means' → logprob: -7.772167682647705
    10. '```' → logprob: -7.897167682647705

Token 33: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004975086078047752
    2. ' )' → logprob: -5.379975318908691
    3. 'e' → logprob: -9.004975318908691
    4. 's' → logprob: -9.504975318908691
    5. ',' → logprob: -10.004975318908691
    6. '#' → logprob: -11.004975318908691
    7. '')' → logprob: -11.379975318908691
    8. ').' → logprob: -11.629975318908691
    9. '_' → logprob: -11.629975318908691
    10. '```' → logprob: -11.754975318908691

Token 34: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8318069577217102
    2. ' ' → logprob: -1.3318068981170654
    3. ' 
' → logprob: -2.4568068981170654
    4. ' 

' → logprob: -3.4568068981170654
    5. '<|end|>' → logprob: -3.4568068981170654
    6. ' import' → logprob: -3.7068068981170654
    7. 'def' → logprob: -3.8318068981170654
    8. '
' → logprob: -4.0818071365356445
    9. ' ,' → logprob: -4.2068071365356445
    10. '  
' → logprob: -4.4568071365356445

Token 35: ' adapté' (ID: 102650)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044943418353796005
    2. ' import' → logprob: -3.669943332672119
    3. 'import' → logprob: -4.794943332672119
    4. ' 
' → logprob: -6.169943332672119
    5. ' ,' → logprob: -6.794943332672119
    6. '  
' → logprob: -7.169943332672119
    7. ' a' → logprob: -7.544943332672119
    8. ' #' → logprob: -7.669943332672119
    9. ' ' → logprob: -7.669943332672119
    10. ' from' → logprob: -7.794943332672119

Token 36: ' ici' (ID: 27994)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8513942956924438
    2. ' au' → logprob: -1.4763942956924438
    3. ' aux' → logprob: -1.8513942956924438
    4. ' ' → logprob: -2.1013941764831543
    5. ' for' → logprob: -4.101394176483154
    6. ' to' → logprob: -4.101394176483154
    7. ' pour' → logprob: -4.726394176483154
    8. '<|end|>' → logprob: -5.226394176483154
    9. ' ' → logprob: -5.726394176483154
    10. ' des' → logprob: -6.101394176483154

Token 37: ' pour' (ID: 1930)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.15334376692771912
    2. ' pour' → logprob: -2.778343677520752
    3. ' au' → logprob: -3.403343677520752
    4. ' ' → logprob: -3.528343677520752
    5. ' aux' → logprob: -4.778343677520752
    6. 'à' → logprob: -5.778343677520752
    7. 'pour' → logprob: -5.778343677520752
    8. 'au' → logprob: -7.278343677520752
    9. ',' → logprob: -7.653343677520752
    10. ' for' → logprob: -7.903343677520752

Token 38: ' reconstru' (ID: 108053)
  Prédit: ' reconstru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reconstru' → logprob: -0.8645122647285461
    2. ' des' → logprob: -2.2395122051239014
    3. ' l' → logprob: -2.3645122051239014
    4. 'l' → logprob: -2.3645122051239014
    5. ' construire' → logprob: -2.4895122051239014
    6. ' la' → logprob: -3.2395122051239014
    7. ' calcul' → logprob: -3.4895122051239014
    8. ' un' → logprob: -3.9895122051239014
    9. ' traiter' → logprob: -4.1145124435424805
    10. 'la' → logprob: -4.1145124435424805

Token 39: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.13156765699386597
    2. 'i' → logprob: -3.2565677165985107
    3. 'ction' → logprob: -3.8815677165985107
    4. '-' → logprob: -4.506567478179932
    5. 'ir' → logprob: -4.506567478179932
    6. '#' → logprob: -4.881567478179932
    7. 'ct' → logprob: -5.006567478179932
    8. 'e' → logprob: -5.006567478179932
    9. '\' → logprob: -6.006567478179932
    10. '```' → logprob: -6.006567478179932

Token 40: ' un' (ID: 537)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2748531997203827
    2. ' un' → logprob: -2.149853229522705
    3. 'l' → logprob: -2.649853229522705
    4. ' une' → logprob: -4.649853229522705
    5. ' les' → logprob: -4.649853229522705
    6. ' la' → logprob: -4.649853229522705
    7. ' des' → logprob: -5.024853229522705
    8. ' ' → logprob: -5.149853229522705
    9. ' le' → logprob: -5.274853229522705
    10. ' ' → logprob: -5.899853229522705

Token 41: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.003516329685226083
    2. 'a' → logprob: -6.62851619720459
    3. 'ar' → logprob: -7.00351619720459
    4. 'e' → logprob: -7.75351619720459
    5. ' arbres' → logprob: -8.12851619720459
    6. ' tree' → logprob: -8.87851619720459
    7. ' phy' → logprob: -9.37851619720459
    8. ' dend' → logprob: -9.75351619720459
    9. 's' → logprob: -10.81601619720459
    10. 'é' → logprob: -11.06601619720459

Token 42: ' à' (ID: 1221)
  Prédit: ' phy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' phy' → logprob: -0.07157943397760391
    2. 'phy' → logprob: -3.0715794563293457
    3. '_phy' → logprob: -4.946579456329346
    4. '<|end|>' → logprob: -5.321579456329346
    5. ' de' → logprob: -5.821579456329346
    6. ' à' → logprob: -6.196579456329346
    7. 'ph' → logprob: -6.946579456329346
    8. ' gén' → logprob: -7.696579456329346
    9. 'from' → logprob: -7.821579456329346
    10. ' complet' → logprob: -7.821579456329346

Token 43: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.0010474584996700287
    2. 'part' → logprob: -7.001047611236572
    3. 'distance' → logprob: -10.501047134399414
    4. ' distance' → logprob: -10.876047134399414
    5. ' ' → logprob: -11.126047134399414
    6. ' distances' → logprob: -11.501047134399414
    7. 'l' → logprob: -11.751047134399414
    8. ' partire' → logprob: -11.876047134399414
    9. ' base' → logprob: -12.001047134399414
    10. 'from' → logprob: -12.001047134399414

Token 44: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.09037008136510849
    2. 'd' → logprob: -2.8403701782226562
    3. ' des' → logprob: -4.215370178222656
    4. ' de' → logprob: -4.465370178222656
    5. 'des' → logprob: -7.215370178222656
    6. 'de' → logprob: -7.715370178222656
    7. ' du' → logprob: -8.340370178222656
    8. ' ' → logprob: -9.590370178222656
    9. '#' → logprob: -10.090370178222656
    10. '_d' → logprob: -10.465370178222656

Token 45: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5092298984527588
    2. ''une' → logprob: -1.1342298984527588
    3. ''un' → logprob: -2.634229898452759
    4. 'e' → logprob: -6.63422966003418
    5. ''u' → logprob: -7.13422966003418
    6. 'u' → logprob: -7.13422966003418
    7. '’une' → logprob: -7.50922966003418
    8. 'es' → logprob: -8.00922966003418
    9. 'd' → logprob: -8.13422966003418
    10. 'une' → logprob: -8.25922966003418

Token 46: ' matr' (ID: 25095)
  Prédit: ' matr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matr' → logprob: -0.31724897027015686
    2. ' ' → logprob: -1.5672489404678345
    3. ' distance' → logprob: -3.942249059677124
    4. ' liste' → logprob: -4.942248821258545
    5. ' matrix' → logprob: -5.067248821258545
    6. ' table' → logprob: -5.192248821258545
    7. ' m' → logprob: -5.692248821258545
    8. 'mat' → logprob: -5.942248821258545
    9. 'distance' → logprob: -5.942248821258545
    10. ' chaîne' → logprob: -6.067248821258545

Token 47: 'ice' (ID: 603)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15168397128582
    2. 'i' → logprob: -2.776684045791626
    3. 'rice' → logprob: -3.401684045791626
    4. 'ice' → logprob: -3.526684045791626
    5. 'h' → logprob: -5.401683807373047
    6. 'e' → logprob: -6.401683807373047
    7. '```' → logprob: -6.651683807373047
    8. 'ri' → logprob: -6.776683807373047
    9. '_r' → logprob: -7.276683807373047
    10. 'c' → logprob: -7.526683807373047

Token 48: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6218013763427734
    2. ' de' → logprob: -2.1218013763427734
    3. 'import' → logprob: -2.2468013763427734
    4. '_' → logprob: -2.4968013763427734
    5. '[' → logprob: -3.4968013763427734
    6. ' d' → logprob: -3.4968013763427734
    7. '<|end|>' → logprob: -3.4968013763427734
    8. 'd' → logprob: -4.496801376342773
    9. ',' → logprob: -4.496801376342773
    10. 'de' → logprob: -4.746801376342773

Token 49: ' distances' (ID: 48294)
  Prédit: ' distances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.03808693215250969
    2. ' distance' → logprob: -4.038086891174316
    3. 'distance' → logprob: -4.288086891174316
    4. 'dist' → logprob: -5.538086891174316
    5. 'd' → logprob: -7.163086891174316
    6. ' dist' → logprob: -8.413086891174316
    7. ' similar' → logprob: -8.538086891174316
    8. ' dis' → logprob: -8.788086891174316
    9. 'similar' → logprob: -8.913086891174316
    10. ' ' → logprob: -9.038086891174316

Token 50: ' entre' (ID: 3853)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2479432225227356
    2. '

' → logprob: -2.372943162918091
    3. '#' → logprob: -2.872943162918091
    4. ' 

' → logprob: -4.12294340133667
    5. '' → logprob: -4.24794340133667
    6. ' ' → logprob: -4.49794340133667
    7. 'import' → logprob: -4.62294340133667
    8. '```' → logprob: -5.62294340133667
    9. '.' → logprob: -6.12294340133667
    10. ',' → logprob: -6.12294340133667

Token 51: ' feuilles' (ID: 109727)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5097724199295044
    2. ' espèces' → logprob: -1.6347724199295044
    3. 'tax' → logprob: -1.8847724199295044
    4. 'esp' → logprob: -2.259772300720215
    5. ' tax' → logprob: -2.259772300720215
    6. ' les' → logprob: -3.009772300720215
    7. ' s' → logprob: -3.134772300720215
    8. 'les' → logprob: -3.259772300720215
    9. ' différentes' → logprob: -3.759772300720215
    10. ' des' → logprob: -3.884772300720215

Token 52: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.668643057346344
    2. '

' → logprob: -1.2936429977416992
    3. '#' → logprob: -2.043642997741699
    4. 'import' → logprob: -2.918642997741699
    5. '' → logprob: -4.418642997741699
    6. '```' → logprob: -5.793642997741699
    7. '\n' → logprob: -5.793642997741699
    8. '\' → logprob: -6.043642997741699
    9. ' 

' → logprob: -6.293642997741699
    10. 'def' → logprob: -6.418642997741699

Token 53: 'ordinate' (ID: 14586)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.053776502609253
    2. ' ).' → logprob: -1.428776502609253
    3. ')' → logprob: -1.678776502609253
    4. ').' → logprob: -1.803776502609253
    5. 'les' → logprob: -3.803776502609253
    6. ' des' → logprob: -5.178776741027832
    7. ' les' → logprob: -5.303776741027832
    8. 'le' → logprob: -5.553776741027832
    9. 'des' → logprob: -5.678776741027832
    10. 'l' → logprob: -6.303776741027832

Token 54: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.007970706559717655
    2. 'u' → logprob: -5.007970809936523
    3. 'ur' → logprob: -7.007970809936523
    4. 's' → logprob: -8.507970809936523
    5. 'n' → logprob: -9.507970809936523
    6. 'urons' → logprob: -10.507970809936523
    7. 'rs' → logprob: -11.757970809936523
    8. 'us' → logprob: -12.132970809936523
    9. '```' → logprob: -12.132970809936523
    10. 'ux' → logprob: -12.882970809936523

Token 55: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7515702843666077
    2. ').' → logprob: -1.126570224761963
    3. ' )' → logprob: -2.001570224761963
    4. ' ).' → logprob: -3.126570224761963
    5. 's' → logprob: -4.501570224761963
    6. ',' → logprob: -4.876570224761963
    7. '.' → logprob: -6.626570224761963
    8. ' ,' → logprob: -7.251570224761963
    9. '),' → logprob: -7.251570224761963
    10. ' ' → logprob: -8.001570701599121

Token 56: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35793066024780273
    2. '#' → logprob: -1.9829306602478027
    3. '

' → logprob: -2.2329306602478027
    4. '' → logprob: -4.107930660247803
    5. 'def' → logprob: -4.107930660247803
    6. 'import' → logprob: -4.982930660247803
    7. ' 

' → logprob: -5.482930660247803
    8. '\' → logprob: -5.732930660247803
    9. '```' → logprob: -5.857930660247803
    10. '
' → logprob: -6.982930660247803

Token 57: ' Le' (ID: 2018)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7267815470695496
    2. '
' → logprob: -0.9767815470695496
    3. ' 

' → logprob: -2.2267816066741943
    4. 'def' → logprob: -4.351781368255615
    5. 'import' → logprob: -4.976781368255615
    6. '' → logprob: -5.476781368255615
    7. '```' → logprob: -6.476781368255615
    8. '#' → logprob: -6.726781368255615
    9. '\' → logprob: -6.976781368255615
    10. ' 
' → logprob: -7.351781368255615

Token 58: ' résultat' (ID: 62556)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4285341501235962
    2. ' #' → logprob: -1.8035341501235962
    3. ' code' → logprob: -2.5535340309143066
    4. ' ' → logprob: -4.053534030914307
    5. '_' → logprob: -4.428534030914307
    6. ' import' → logprob: -4.928534030914307
    7. ' matrices' → logprob: -4.928534030914307
    8. ' _' → logprob: -5.053534030914307
    9. ' def' → logprob: -5.178534030914307
    10. ' d' → logprob: -5.178534030914307

Token 59: ' final' (ID: 1721)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026363704353570938
    2. '_' → logprob: -4.776363849639893
    3. ' est' → logprob: -5.526363849639893
    4. ' de' → logprob: -5.651363849639893
    5. 's' → logprob: -5.901363849639893
    6. ' s' → logprob: -6.276363849639893
    7. '.' → logprob: -7.276363849639893
    8. ':' → logprob: -7.651363849639893
    9. ' ,' → logprob: -7.651363849639893
    10. ' :' → logprob: -7.651363849639893

Token 60: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0017544031143188
    2. ' est' → logprob: -1.2517544031143188
    3. 's' → logprob: -3.0017542839050293
    4. ' is' → logprob: -3.3767542839050293
    5. ' s' → logprob: -3.3767542839050293
    6. ' ,' → logprob: -3.6267542839050293
    7. ' :' → logprob: -3.8767542839050293
    8. ' de' → logprob: -4.001754283905029
    9. 'est' → logprob: -4.001754283905029
    10. ' =' → logprob: -4.126754283905029

Token 61: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4821993112564087
    2. ' ' → logprob: -1.6071993112564087
    3. ' un' → logprob: -2.107199192047119
    4. ' "' → logprob: -4.732199192047119
    5. ' retourn' → logprob: -4.857199192047119
    6. ' la' → logprob: -5.107199192047119
    7. ' l' → logprob: -5.107199192047119
    8. ' représent' → logprob: -5.357199192047119
    9. ' '' → logprob: -5.482199192047119
    10. ' affich' → logprob: -5.732199192047119

Token 62: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9020340442657471
    2. ' structure' → logprob: -1.277034044265747
    3. ' représentation' → logprob: -1.777034044265747
    4. 's' → logprob: -3.902034044265747
    5. ' chaîne' → logprob: -3.902034044265747
    6. ' reconstruction' → logprob: -4.402033805847168
    7. ' fonction' → logprob: -4.652033805847168
    8. ' liste' → logprob: -4.777033805847168
    9. ' description' → logprob: -5.027033805847168
    10. ' distance' → logprob: -5.152033805847168

Token 63: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23066526651382446
    2. 'des' → logprob: -2.3556652069091797
    3. ' de' → logprob: -3.8556652069091797
    4. ' complète' → logprob: -4.10566520690918
    5. ' d' → logprob: -4.23066520690918
    6. '[' → logprob: -4.23066520690918
    7. 'd' → logprob: -4.85566520690918
    8. ' ' → logprob: -4.85566520690918
    9. '_des' → logprob: -4.85566520690918
    10. 's' → logprob: -5.60566520690918

Token 64: ' degrés' (ID: 195297)
  Prédit: ' clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.30229631066322327
    2. ' liens' → logprob: -2.0522964000701904
    3. 'clusters' → logprob: -3.3022964000701904
    4. ' noe' → logprob: -4.052296161651611
    5. ' tuples' → logprob: -4.177296161651611
    6. ' voisins' → logprob: -4.552296161651611
    7. ' branches' → logprob: -5.052296161651611
    8. ' cluster' → logprob: -5.052296161651611
    9. ' n' → logprob: -5.302296161651611
    10. ' nodes' → logprob: -5.427296161651611

Token 65: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40918827056884766
    2. 's' → logprob: -2.4091882705688477
    3. '<|end|>' → logprob: -2.6591882705688477
    4. ' de' → logprob: -2.7841882705688477
    5. '_' → logprob: -3.1591882705688477
    6. ' d' → logprob: -3.9091882705688477
    7. ')' → logprob: -4.409188270568848
    8. '[' → logprob: -4.534188270568848
    9. ',' → logprob: -5.284188270568848
    10. ' ,' → logprob: -5.659188270568848

Token 66: 'nombre' (ID: 28576)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.7589595317840576
    2. 'des' → logprob: -1.7589595317840576
    3. ')' → logprob: -1.8839595317840576
    4. 'd' → logprob: -2.1339595317840576
    5. ' d' → logprob: -2.3839595317840576
    6. 'de' → logprob: -2.3839595317840576
    7. ' de' → logprob: -2.5089595317840576
    8. ' )' → logprob: -2.6339595317840576
    9. ' ' → logprob: -3.2589595317840576
    10. ' chaque' → logprob: -6.633959770202637

Token 67: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7869150638580322
    2. ')' → logprob: -1.7869150638580322
    3. ' de' → logprob: -1.9119150638580322
    4. 's' → logprob: -2.2869150638580322
    5. 'd' → logprob: -2.9119150638580322
    6. 'de' → logprob: -3.5369150638580322
    7. ' ' → logprob: -3.5369150638580322
    8. ' )' → logprob: -4.661914825439453
    9. ' des' → logprob: -6.536914825439453
    10. ']' → logprob: -7.536914825439453

Token 68: ' connex' (ID: 154480)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.9869549870491028
    2. ' ' → logprob: -1.361954927444458
    3. ' l' → logprob: -2.736954927444458
    4. ' connex' → logprob: -2.861954927444458
    5. 'connections' → logprob: -2.986954927444458
    6. ' connections' → logprob: -2.986954927444458
    7. 'connexion' → logprob: -3.361954927444458
    8. ' conn' → logprob: -3.486954927444458
    9. ' connexion' → logprob: -4.111955165863037
    10. 'lib' → logprob: -4.236955165863037

Token 69: 'ions' (ID: 756)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.5878410935401917
    2. 'ions' → logprob: -0.9628410935401917
    3. 'i' → logprob: -3.712841033935547
    4. 'ité' → logprob: -5.087841033935547
    5. 'é' → logprob: -5.212841033935547
    6. 'e' → logprob: -5.462841033935547
    7. 'ivité' → logprob: -5.462841033935547
    8. 's' → logprob: -6.087841033935547
    9. '#' → logprob: -6.087841033935547
    10. 'ités' → logprob: -6.337841033935547

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4094475507736206
    2. ' )' → logprob: -1.2844475507736206
    3. ' des' → logprob: -3.53444766998291
    4. ' ' → logprob: -4.15944766998291
    5. ' de' → logprob: -4.53444766998291
    6. ' d' → logprob: -7.03444766998291
    7. 'de' → logprob: -7.65944766998291
    8. 'des' → logprob: -7.65944766998291
    9. ' par' → logprob: -8.03444766998291
    10. ' du' → logprob: -8.15944766998291

Token 71: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9391837120056152
    2. ' 

' → logprob: -1.1891837120056152
    3. '
' → logprob: -2.0641837120056152
    4. '

' → logprob: -2.5641837120056152
    5. 'import' → logprob: -3.9391837120056152
    6. '#' → logprob: -3.9391837120056152
    7. '\' → logprob: -4.314183712005615
    8. '' → logprob: -4.689183712005615
    9. '```' → logprob: -5.314183712005615
    10. ',' → logprob: -5.439183712005615

Token 72: ' noe' (ID: 49921)
  Prédit: ' noe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' noe' → logprob: -0.8895635008811951
    2. ' n' → logprob: -1.6395635604858398
    3. ' nodes' → logprob: -1.8895635604858398
    4. ' ' → logprob: -1.8895635604858398
    5. ' espaces' → logprob: -3.63956356048584
    6. ' chaque' → logprob: -3.88956356048584
    7. ' feuilles' → logprob: -4.38956356048584
    8. 'n' → logprob: -5.01456356048584
    9. ' somm' → logprob: -5.13956356048584
    10. ' node' → logprob: -5.63956356048584

Token 73: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.11320049315690994
    2. 'ud' → logprob: -2.2382004261016846
    3. 'ds' → logprob: -8.738200187683105
    4. 'u' → logprob: -9.488200187683105
    5. 's' → logprob: -9.738200187683105
    6. 'd' → logprob: -10.238200187683105
    7. '```' → logprob: -11.488200187683105
    8. 'e' → logprob: -11.863200187683105
    9. '#' → logprob: -12.238200187683105
    10. '\' → logprob: -12.613200187683105

Token 74: ' internes' (ID: 183434)
  Prédit: ' 

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 

' → logprob: -0.6169799566268921
    2. '
' → logprob: -1.366979956626892
    3. '

' → logprob: -2.7419800758361816
    4. ' ' → logprob: -2.8669800758361816
    5. 'import' → logprob: -3.4919800758361816
    6. '#' → logprob: -4.366980075836182
    7. '```' → logprob: -4.491980075836182
    8. '\' → logprob: -4.866980075836182
    9. '' → logprob: -5.491980075836182
    10. '\n' → logprob: -5.866980075836182

Token 75: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2934381067752838
    2. '

' → logprob: -1.7934380769729614
    3. ' 

' → logprob: -3.543438196182251
    4. 'import' → logprob: -4.293437957763672
    5. '#' → logprob: -4.543437957763672
    6. '\' → logprob: -4.918437957763672
    7. ' ' → logprob: -5.168437957763672
    8. '' → logprob: -5.418437957763672
    9. '\n' → logprob: -5.668437957763672
    10. '.' → logprob: -6.043437957763672

Token 76: 'switch' (ID: 41694)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4150952100753784
    2. ' )' → logprob: -1.1650952100753784
    3. 'l' → logprob: -4.915095329284668
    4. ').' → logprob: -6.040095329284668
    5. ' l' → logprob: -6.290095329284668
    6. 'inter' → logprob: -6.540095329284668
    7. ' ).' → logprob: -6.540095329284668
    8. ' inter' → logprob: -6.790095329284668
    9. ',' → logprob: -6.915095329284668
    10. ' ')' → logprob: -6.915095329284668

Token 77: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010083634406328201
    2. ')' → logprob: -5.0100836753845215
    3. ').' → logprob: -6.5100836753845215
    4. ')s' → logprob: -7.1350836753845215
    5. ' s' → logprob: -7.8850836753845215
    6. 'es' → logprob: -8.260083198547363
    7. 'e' → logprob: -8.885083198547363
    8. ' )' → logprob: -9.135083198547363
    9. ' ).' → logprob: -10.510083198547363
    10. '')' → logprob: -10.635083198547363

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004489462357014418
    2. 's' → logprob: -6.379489421844482
    3. ',' → logprob: -7.004489421844482
    4. ').' → logprob: -7.129489421844482
    5. '.' → logprob: -8.00448989868164
    6. ' )' → logprob: -8.37948989868164
    7. ')
' → logprob: -9.00448989868164
    8. '#' → logprob: -9.00448989868164
    9. '```' → logprob: -10.37948989868164
    10. 'import' → logprob: -10.50448989868164

Token 79: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2564363479614258
    2. '

' → logprob: -2.631436347961426
    3. ' 

' → logprob: -3.006436347961426
    4. 'import' → logprob: -3.756436347961426
    5. '' → logprob: -4.006436347961426
    6. 'def' → logprob: -4.131436347961426
    7. '\' → logprob: -4.381436347961426
    8. ' ' → logprob: -4.506436347961426
    9. '#' → logprob: -5.256436347961426
    10. '```' → logprob: -5.506436347961426

Token 80: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6346447467803955
    2. 'l' → logprob: -0.7596447467803955
    3. ' ' → logprob: -7.384644508361816
    4. ' la' → logprob: -7.634644508361816
    5. 'la' → logprob: -8.884644508361816
    6. 's' → logprob: -9.259644508361816
    7. ' ce' → logprob: -9.384644508361816
    8. ' code' → logprob: -10.259644508361816
    9. ' votre' → logprob: -10.384644508361816
    10. ' réseau' → logprob: -10.384644508361816

Token 81: ''ar' (ID: 54307)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09428929537534714
    2. 'a' → logprob: -2.4692893028259277
    3. ''a' → logprob: -5.844289302825928
    4. ''ar' → logprob: -7.094289302825928
    5. 'e' → logprob: -7.469289302825928
    6. '')' → logprob: -8.96928882598877
    7. ' '' → logprob: -9.09428882598877
    8. 'u' → logprob: -9.34428882598877
    9. ''#' → logprob: -9.46928882598877
    10. ''ap' → logprob: -9.59428882598877

Token 82: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.5117862224578857
    2. 'b' → logprob: -1.0117862224578857
    3. 't' → logprob: -4.136786460876465
    4. 'e' → logprob: -4.761786460876465
    5. 'i' → logprob: -5.261786460876465
    6. 'r' → logprob: -6.011786460876465
    7. 'tre' → logprob: -6.386786460876465
    8. '```' → logprob: -7.136786460876465
    9. 'ê' → logprob: -8.011786460876465
    10. '#' → logprob: -8.386786460876465

Token 83: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3123181164264679
    2. '#' → logprob: -2.6873180866241455
    3. '

' → logprob: -3.0623180866241455
    4. '' → logprob: -3.4373180866241455
    5. ' ' → logprob: -3.5623180866241455
    6. '\' → logprob: -3.8123180866241455
    7. ' 

' → logprob: -4.062318325042725
    8. 'def' → logprob: -4.437318325042725
    9. '```' → logprob: -4.812318325042725
    10. '.' → logprob: -5.187318325042725

Token 84: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0086028575897217
    2. '.' → logprob: -1.7586028575897217
    3. ',' → logprob: -2.1336028575897217
    4. '\' → logprob: -2.7586028575897217
    5. ' ,' → logprob: -2.7586028575897217
    6. '```' → logprob: -2.7586028575897217
    7. 'import' → logprob: -3.2586028575897217
    8. ' 

' → logprob: -3.8836028575897217
    9. '<|end|>' → logprob: -4.008603096008301
    10. ' 
' → logprob: -4.008603096008301

Token 85: ' tri' (ID: 12665)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2703261375427246
    2. ' ,' → logprob: -1.3953261375427246
    3. ' ' → logprob: -2.1453261375427246
    4. '.' → logprob: -3.0203261375427246
    5. ' en' → logprob: -3.0203261375427246
    6. 'import' → logprob: -3.3953261375427246
    7. '#' → logprob: -3.7703261375427246
    8. '```' → logprob: -3.8953261375427246
    9. ''' → logprob: -4.270326137542725
    10. 's' → logprob: -4.270326137542725

Token 86: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0007952123996801674
    2. 'e' → logprob: -8.125795364379883
    3. 'ée' → logprob: -8.375795364379883
    4. 'és' → logprob: -8.625795364379883
    5. 's' → logprob: -10.500795364379883
    6. 'd' → logprob: -11.000795364379883
    7. 'ées' → logprob: -11.625795364379883
    8. 'è' → logprob: -11.875795364379883
    9. ' é' → logprob: -12.125795364379883
    10. ')' → logprob: -12.750795364379883

Token 87: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.1567870378494263
    2. ' par' → logprob: -1.4067870378494263
    3. 'e' → logprob: -2.6567869186401367
    4. ' à' → logprob: -2.6567869186401367
    5. ')' → logprob: -3.0317869186401367
    6. ',' → logprob: -3.5317869186401367
    7. ' )' → logprob: -3.6567869186401367
    8. ' et' → logprob: -3.9067869186401367
    9. 's' → logprob: -4.031786918640137
    10. ' space' → logprob: -4.156786918640137

Token 88: ' ordre' (ID: 103061)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.30015671253204346
    2. ' ' → logprob: -1.8001567125320435
    3. ' ordre' → logprob: -3.175156593322754
    4. 'ordre' → logprob: -4.050156593322754
    5. 'l' → logprob: -4.425156593322754
    6. ' order' → logprob: -5.300156593322754
    7. ''ordre' → logprob: -5.800156593322754
    8. ' ascending' → logprob: -6.050156593322754
    9. 's' → logprob: -6.675156593322754
    10. ' fonction' → logprob: -7.112656593322754

Token 89: ' cro' (ID: 11270)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6616944670677185
    2. 's' → logprob: -1.5366945266723633
    3. 'd' → logprob: -2.6616945266723633
    4. ' alph' → logprob: -2.9116945266723633
    5. ' décro' → logprob: -3.4116945266723633
    6. ' cro' → logprob: -3.7866945266723633
    7. ' d' → logprob: -3.7866945266723633
    8. 'cro' → logprob: -4.661694526672363
    9. '_d' → logprob: -5.036694526672363
    10. '_c' → logprob: -5.286694526672363

Token 90: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.3968799412250519
    2. 'issante' → logprob: -2.1468799114227295
    3. 'nt' → logprob: -2.2718799114227295
    4. 'n' → logprob: -3.8968799114227295
    5. 'i' → logprob: -4.146880149841309
    6. 'is' → logprob: -4.146880149841309
    7. 'p' → logprob: -4.396880149841309
    8. 'ss' → logprob: -4.771880149841309
    9. 'mp' → logprob: -5.271880149841309
    10. 'iss' → logprob: -5.271880149841309

Token 91: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4539779722690582
    2. '

' → logprob: -1.0789779424667358
    3. ' 

' → logprob: -5.203978061676025
    4. 'import' → logprob: -5.328978061676025
    5. '' → logprob: -5.453978061676025
    6. '```' → logprob: -5.578978061676025
    7. '#' → logprob: -5.953978061676025
    8. '\' → logprob: -6.953978061676025
    9. 'def' → logprob: -7.328978061676025
    10. ' ' → logprob: -8.078977584838867

Token 92: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0244020223617554
    2. 'def' → logprob: -1.0244020223617554
    3. 'import' → logprob: -1.5244020223617554
    4. '

' → logprob: -3.774402141571045
    5. '\' → logprob: -4.649402141571045
    6. '```' → logprob: -4.649402141571045
    7. 'class' → logprob: -4.899402141571045
    8. 'd' → logprob: -5.649402141571045
    9. '\n' → logprob: -5.899402141571045
    10. '' → logprob: -5.899402141571045

Token 93: ' Appro' (ID: 24145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9221328496932983
    2. 'd' → logprob: -1.2971328496932983
    3. ' ' → logprob: -2.547132968902588
    4. 'import' → logprob: -2.547132968902588
    5. 'class' → logprob: -2.672132968902588
    6. '#' → logprob: -2.797132968902588
    7. ' 
' → logprob: -4.297132968902588
    8. ' 

' → logprob: -5.172132968902588
    9. ' class' → logprob: -5.297132968902588
    10. 'de' → logprob: -5.422132968902588

Token 94: 'che' (ID: 926)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6985916495323181
    2. 'xim' → logprob: -1.698591709136963
    3. 'che' → logprob: -1.948591709136963
    4. 'ach' → logprob: -3.198591709136963
    5. 'def' → logprob: -3.323591709136963
    6. 'xima' → logprob: -3.823591709136963
    7. '#' → logprob: -3.948591709136963
    8. 'ches' → logprob: -4.073591709136963
    9. 'ch' → logprob: -4.698591709136963
    10. 'aching' → logprob: -4.823591709136963

Token 95: ' générale' (ID: 66899)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.01817101612687111
    2. ':' → logprob: -4.1431708335876465
    3. ' ' → logprob: -6.7681708335876465
    4. 'def' → logprob: -7.3931708335876465
    5. ' def' → logprob: -9.143171310424805
    6. ' ' → logprob: -9.768171310424805
    7. ' #' → logprob: -10.143171310424805
    8. ' de' → logprob: -10.268171310424805
    9. ' =' → logprob: -10.393171310424805
    10. '#' → logprob: -10.393171310424805

Token 96: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.035911668092012405
    2. ':' → logprob: -4.035911560058594
    3. ' :' → logprob: -5.160911560058594
    4. ' ' → logprob: -5.535911560058594
    5. '#' → logprob: -6.035911560058594
    6. ' def' → logprob: -6.160911560058594
    7. 'import' → logprob: -6.660911560058594
    8. 'd' → logprob: -7.035911560058594
    9. '```' → logprob: -8.035911560058594
    10. 'de' → logprob: -8.410911560058594

Token 97: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026582540944218636
    2. '#' → logprob: -4.276582717895508
    3. 'import' → logprob: -4.776582717895508
    4. ' def' → logprob: -6.151582717895508
    5. 'from' → logprob: -7.026582717895508
    6. 'class' → logprob: -8.026582717895508
    7. '```' → logprob: -8.651582717895508
    8. ' #' → logprob: -9.151582717895508
    9. ' import' → logprob: -9.901582717895508
    10. 'distance' → logprob: -10.276582717895508

Token 98: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9747858047485352
    2. '#' → logprob: -1.4747858047485352
    3. ' def' → logprob: -1.8497858047485352
    4. ' ' → logprob: -2.099785804748535
    5. ' #' → logprob: -2.474785804748535
    6. 'd' → logprob: -4.099785804748535
    7. ' d' → logprob: -5.224785804748535
    8. 'from' → logprob: -6.849785804748535
    9. 'import' → logprob: -6.974785804748535
    10. ' import' → logprob: -7.224785804748535

Token 99: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6092416048049927
    2. 'd' → logprob: -1.2342416048049927
    3. '#' → logprob: -1.8592416048049927
    4. 'from' → logprob: -5.109241485595703
    5. 'de' → logprob: -6.609241485595703
    6. 'import' → logprob: -6.859241485595703
    7. 'f' → logprob: -9.109241485595703
    8. ' ' → logprob: -9.109241485595703
    9. 'dé' → logprob: -9.109241485595703
    10. '1' → logprob: -9.484241485595703

Token 100: ')' (ID: 8)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11749394983053207
    2. ' #' → logprob: -2.9924938678741455
    3. ' ' → logprob: -4.117494106292725
    4. ':' → logprob: -4.242494106292725
    5. 'import' → logprob: -4.867494106292725
    6. 'def' → logprob: -4.992494106292725
    7. ' import' → logprob: -5.242494106292725
    8. '.' → logprob: -5.742494106292725
    9. ',' → logprob: -6.617494106292725
    10. ' :' → logprob: -7.367494106292725

Token 101: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6324307322502136
    2. ' Lire' → logprob: -2.3824307918548584
    3. 'Lire' → logprob: -2.8824307918548584
    4. ' import' → logprob: -3.0074307918548584
    5. ' Initial' → logprob: -3.1324307918548584
    6. ' On' → logprob: -3.5074307918548584
    7. 'import' → logprob: -3.7574307918548584
    8. ' R' → logprob: -4.257430553436279
    9. 'Lecture' → logprob: -4.257430553436279
    10. 'def' → logprob: -4.257430553436279

Token 102: ' ordinateur' (ID: 97806)
  Prédit: ' ordinateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ordinateur' → logprob: -0.7901033163070679
    2. 'ordinateur' → logprob: -0.7901033163070679
    3. 'fe' → logprob: -3.2901034355163574
    4. ' noe' → logprob: -3.7901034355163574
    5. ' feuille' → logprob: -5.165103435516357
    6. ' cluster' → logprob: -5.540103435516357
    7. 'élé' → logprob: -5.665103435516357
    8. ' n' → logprob: -5.665103435516357
    9. ' élément' → logprob: -6.165103435516357
    10. 'n' → logprob: -6.290103435516357

Token 103: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.25863468647003174
    2. ' a' → logprob: -2.758634567260742
    3. ' ' → logprob: -3.008634567260742
    4. 's' → logprob: -3.508634567260742
    5. ',' → logprob: -4.008634567260742
    6. ' ,' → logprob: -4.133634567260742
    7. ' s' → logprob: -4.758634567260742
    8. ' is' → logprob: -5.133634567260742
    9. ' import' → logprob: -5.133634567260742
    10. ' et' → logprob: -5.633634567260742

Token 104: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0379161611199379
    2. ' initial' → logprob: -4.16291618347168
    3. 're' → logprob: -5.53791618347168
    4. 'd' → logprob: -5.78791618347168
    5. ' représent' → logprob: -6.03791618347168
    6. 'trait' → logprob: -6.41291618347168
    7. ' considéré' → logprob: -6.53791618347168
    8. 'cons' → logprob: -6.66291618347168
    9. ' initially' → logprob: -6.78791618347168
    10. 'un' → logprob: -6.78791618347168

Token 105: 'ement' (ID: 962)
  Prédit: 'isé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.023286473006010056
    2. 'aris' → logprob: -4.52328634262085
    3. 'é' → logprob: -5.14828634262085
    4. 'al' → logprob: -6.64828634262085
    5. 'alis' → logprob: -6.64828634262085
    6. 'ement' → logprob: -6.89828634262085
    7. 'isée' → logprob: -7.14828634262085
    8. 'e' → logprob: -8.523286819458008
    9. 'a' → logprob: -8.898286819458008
    10. 't' → logprob: -9.023286819458008

Token 106: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.1660242080688477
    2. 'dans' → logprob: -1.7910242080688477
    3. ' considéré' → logprob: -2.4160242080688477
    4. 'cons' → logprob: -2.5410242080688477
    5. 're' → logprob: -2.9160242080688477
    6. ' représent' → logprob: -3.0410242080688477
    7. 'une' → logprob: -3.1660242080688477
    8. 'consider' → logprob: -3.1660242080688477
    9. ' un' → logprob: -3.2910242080688477
    10. 'son' → logprob: -3.5410242080688477

Token 107: ' cluster' (ID: 19723)
  Prédit: ' cluster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -0.19414588809013367
    2. 'cluster' → logprob: -2.069145917892456
    3. ' noe' → logprob: -4.069145679473877
    4. ' singleton' → logprob: -4.069145679473877
    5. ' n' → logprob: -5.694145679473877
    6. ' groupe' → logprob: -5.819145679473877
    7. 'n' → logprob: -5.944145679473877
    8. 'e' → logprob: -6.944145679473877
    9. 'fe' → logprob: -7.319145679473877
    10. 's' → logprob: -7.319145679473877

Token 108: ' sépar' (ID: 97160)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2619497776031494
    2. '.' → logprob: -2.0119497776031494
    3. ' ,' → logprob: -2.6369497776031494
    4. 's' → logprob: -5.51194953918457
    5. ' =' → logprob: -5.51194953918457
    6. '<|end|>' → logprob: -5.63694953918457
    7. ' (' → logprob: -6.26194953918457
    8. '_' → logprob: -6.51194953918457
    9. 'import' → logprob: -6.51194953918457
    10. '#' → logprob: -6.63694953918457

Token 109: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00380150368437171
    2. 'ément' → logprob: -5.878801345825195
    3. '#' → logprob: -7.128801345825195
    4. 'e' → logprob: -9.878801345825195
    5. 'és' → logprob: -10.003801345825195
    6. 'ée' → logprob: -10.378801345825195
    7. '```' → logprob: -11.378801345825195
    8. 'ate' → logprob: -11.628801345825195
    9. 'i' → logprob: -12.378801345825195
    10. 'ié' → logprob: -12.628801345825195

Token 110: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.40822935104370117
    2. ',' → logprob: -1.2832293510437012
    3. 's' → logprob: -3.408229351043701
    4. ' ,' → logprob: -4.283229351043701
    5. 'import' → logprob: -6.283229351043701
    6. ' .' → logprob: -6.408229351043701
    7. ' (' → logprob: -6.658229351043701
    8. '#' → logprob: -6.658229351043701
    9. 'e' → logprob: -7.283229351043701
    10. ':' → logprob: -7.283229351043701

Token 111: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09545297920703888
    2. '2' → logprob: -3.0954530239105225
    3. ',' → logprob: -4.095452785491943
    4. 'import' → logprob: -4.595452785491943
    5. ' ' → logprob: -4.595452785491943
    6. '
' → logprob: -6.220452785491943
    7. '.' → logprob: -6.220452785491943
    8. ' #' → logprob: -6.845452785491943
    9. '\' → logprob: -7.095452785491943
    10. '\n' → logprob: -7.345452785491943

Token 112: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5723106861114502
    2. '#' → logprob: -1.0723106861114502
    3. ' ' → logprob: -2.57231068611145
    4. ' #' → logprob: -4.322310447692871
    5. 'import' → logprob: -6.197310447692871
    6. 'def' → logprob: -7.947310447692871
    7. 'for' → logprob: -8.447310447692871
    8. ',' → logprob: -8.697310447692871
    9. ' import' → logprob: -8.822310447692871
    10. '1' → logprob: -8.822310447692871

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.48140114545822144
    2. '#' → logprob: -0.9814011454582214
    3. 'clusters' → logprob: -6.106400966644287
    4. ' #' → logprob: -6.356400966644287
    5. ' ' → logprob: -6.481400966644287
    6. 'n' → logprob: -7.481400966644287
    7. 'for' → logprob: -7.731400966644287
    8. 'def' → logprob: -8.731401443481445
    9. 'import' → logprob: -8.731401443481445
    10. 'cluster' → logprob: -9.106401443481445

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07034306973218918
    2. ' )' → logprob: -2.695343017578125
    3. '#' → logprob: -7.945343017578125
    4. ' #' → logprob: -10.820343017578125
    5. ' ' → logprob: -12.195343017578125
    6. 'def' → logprob: -12.695343017578125
    7. ',' → logprob: -12.695343017578125
    8. 'import' → logprob: -12.695343017578125
    9. ')#' → logprob: -12.695343017578125
    10. '3' → logprob: -13.070343017578125

Token 115: ' À' (ID: 27643)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5815730094909668
    2. ' On' → logprob: -1.9565730094909668
    3. ' #' → logprob: -2.206573009490967
    4. ' on' → logprob: -3.206573009490967
    5. 'On' → logprob: -3.331573009490967
    6. ' Trou' → logprob: -3.831573009490967
    7. 'for' → logprob: -4.081573009490967
    8. ' Les' → logprob: -4.456573009490967
    9. ' for' → logprob: -4.581573009490967
    10. ' Chaque' → logprob: -4.956573009490967

Token 116: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.026940712705254555
    2. ' partir' → logprob: -4.276940822601318
    3. ' la' → logprob: -5.651940822601318
    4. 'l' → logprob: -6.276940822601318
    5. 'u' → logprob: -6.526940822601318
    6. ' ' → logprob: -6.651940822601318
    7. ' l' → logprob: -6.901940822601318
    8. 'la' → logprob: -7.276940822601318
    9. 'n' → logprob: -7.901940822601318
    10. 's' → logprob: -8.40194034576416

Token 117: ' étape' (ID: 83661)
  Prédit: ' étape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étape' → logprob: -0.018933266401290894
    2. ' it' → logprob: -4.143933296203613
    3. ' ' → logprob: -6.893933296203613
    4. ' step' → logprob: -7.893933296203613
    5. ' pas' → logprob: -8.268933296203613
    6. ' iteration' → logprob: -8.393933296203613
    7. '_' → logprob: -8.893933296203613
    8. ' ligne' → logprob: -8.893933296203613
    9. 'ét' → logprob: -9.018933296203613
    10. ' tour' → logprob: -9.268933296203613

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04084951430559158
    2. ' ,' → logprob: -3.415849447250366
    3. ' ' → logprob: -5.540849685668945
    4. '  ' → logprob: -6.540849685668945
    5. ' on' → logprob: -8.540849685668945
    6. '_' → logprob: -8.665849685668945
    7. ')' → logprob: -8.790849685668945
    8. ' de' → logprob: -8.790849685668945
    9. ' d' → logprob: -9.040849685668945
    10. '#' → logprob: -9.165849685668945

Token 119: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1512267142534256
    2. '#' → logprob: -2.276226758956909
    3. ' #' → logprob: -4.15122652053833
    4. 'on' → logprob: -4.27622652053833
    5. ' ' → logprob: -5.52622652053833
    6. 'import' → logprob: -6.40122652053833
    7. ' ' → logprob: -8.026226997375488
    8. ',' → logprob: -8.901226997375488
    9. ')' → logprob: -9.026226997375488
    10. ' import' → logprob: -9.151226997375488

Token 120: ' trouve' (ID: 30913)
  Prédit: ' chois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chois' → logprob: -1.3778685331344604
    2. ' fusion' → logprob: -1.5028685331344604
    3. ' cherche' → logprob: -2.00286865234375
    4. ' trouve' → logprob: -2.12786865234375
    5. ' recherche' → logprob: -2.37786865234375
    6. 'cherche' → logprob: -2.62786865234375
    7. ' reg' → logprob: -3.87786865234375
    8. 'fusion' → logprob: -4.00286865234375
    9. ' regarde' → logprob: -4.37786865234375
    10. ' sélection' → logprob: -4.62786865234375

Token 121: ' la' (ID: 557)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.7541797161102295
    2. ' les' → logprob: -1.6291797161102295
    3. 'les' → logprob: -2.2541797161102295
    4. ' le' → logprob: -2.2541797161102295
    5. 'le' → logprob: -3.1291797161102295
    6. 'de' → logprob: -3.5041797161102295
    7. ' la' → logprob: -3.7541797161102295
    8. ' l' → logprob: -4.504179954528809
    9. ' ' → logprob: -5.629179954528809
    10. 'l' → logprob: -6.004179954528809

Token 122: ' paire' (ID: 148856)
  Prédit: ' couple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couple' → logprob: -0.1334487348794937
    2. ' paire' → logprob: -2.758448839187622
    3. ' cluster' → logprob: -3.383448839187622
    4. ' pair' → logprob: -3.883448839187622
    5. 'cluster' → logprob: -5.633448600769043
    6. ' ' → logprob: -6.508448600769043
    7. 'pair' → logprob: -7.133448600769043
    8. 'cou' → logprob: -7.758448600769043
    9. ',' → logprob: -9.008448600769043
    10. ' p' → logprob: -9.758448600769043

Token 123: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.026610754430294037
    2. ' d' → logprob: -4.401610851287842
    3. 'de' → logprob: -4.901610851287842
    4. ' ' → logprob: -6.026610851287842
    5. ' la' → logprob: -6.026610851287842
    6. ' #' → logprob: -8.526610374450684
    7. 'd' → logprob: -9.026610374450684
    8. '_' → logprob: -9.026610374450684
    9. ' cluster' → logprob: -9.026610374450684
    10. ' closest' → logprob: -9.026610374450684

Token 124: ' clusters' (ID: 51310)
  Prédit: ' clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.044501252472400665
    2. 'clusters' → logprob: -3.169501304626465
    3. ' cluster' → logprob: -7.294501304626465
    4. '_clusters' → logprob: -7.419501304626465
    5. 'cluster' → logprob: -9.044501304626465
    6. ' espaces' → logprob: -10.419501304626465
    7. ' groupes' → logprob: -11.294501304626465
    8. 'cl' → logprob: -11.919501304626465
    9. 'Clusters' → logprob: -12.044501304626465
    10. ' clu' → logprob: -12.294501304626465

Token 125: ' avec' (ID: 3937)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.639900803565979
    2. ' la' → logprob: -0.764900803565979
    3. 'l' → logprob: -5.5149006843566895
    4. ' l' → logprob: -7.0149006843566895
    5. 'le' → logprob: -7.5149006843566895
    6. 'distance' → logprob: -8.264901161193848
    7. 'the' → logprob: -8.514901161193848
    8. 'une' → logprob: -8.764901161193848
    9. '#' → logprob: -9.014901161193848
    10. 'au' → logprob: -9.139901161193848

Token 127: ' distance' (ID: 9324)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.05326910689473152
    2. ' distance' → logprob: -3.428269147872925
    3. 'plus' → logprob: -4.678268909454346
    4. 'distance' → logprob: -5.053268909454346
    5. ' minimum' → logprob: -7.178268909454346
    6. ' moindre' → logprob: -7.178268909454346
    7. ' minimal' → logprob: -7.303268909454346
    8. ' ' → logprob: -7.553268909454346
    9. ' minimale' → logprob: -8.553269386291504
    10. ' dist' → logprob: -9.303269386291504

Token 128: ' moyenne' (ID: 57480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5068596601486206
    2. ' minimale' → logprob: -1.1318596601486206
    3. '_min' → logprob: -3.13185977935791
    4. ' _' → logprob: -4.50685977935791
    5. ' la' → logprob: -4.75685977935791
    6. ' ' → logprob: -6.50685977935791
    7. ' maximale' → logprob: -6.63185977935791
    8. 'minimum' → logprob: -6.75685977935791
    9. '_la' → logprob: -6.88185977935791
    10. 'min' → logprob: -7.00685977935791

Token 129: ' la' (ID: 557)
  Prédit: ' minimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.19210630655288696
    2. ' la' → logprob: -1.8171062469482422
    3. 'min' → logprob: -5.567106246948242
    4. 'minimum' → logprob: -6.192106246948242
    5. ' minimum' → logprob: -6.567106246948242
    6. '<|end|>' → logprob: -6.817106246948242
    7. 'la' → logprob: -6.942106246948242
    8. ' minimal' → logprob: -6.942106246948242
    9. ' minim' → logprob: -8.317106246948242
    10. '_min' → logprob: -8.317106246948242

Token 130: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.017532356083393097
    2. ' plus' → logprob: -4.2675323486328125
    3. 'moins' → logprob: -6.0175323486328125
    4. 'Plus' → logprob: -8.392532348632812
    5. '_plus' → logprob: -8.642532348632812
    6. '+' → logprob: -8.642532348632812
    7. 'mo' → logprob: -9.642532348632812
    8. ' ' → logprob: -9.892532348632812
    9. ' moindre' → logprob: -9.892532348632812
    10. '```' → logprob: -10.017532348632812

Token 131: ' faible' (ID: 75786)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.5862132906913757
    2. 'pet' → logprob: -1.0862133502960205
    3. ' faible' → logprob: -2.4612133502960205
    4. 'pro' → logprob: -4.836213111877441
    5. 'b' → logprob: -5.211213111877441
    6. '```' → logprob: -5.461213111877441
    7. 'small' → logprob: -6.836213111877441
    8. 'import' → logprob: -7.211213111877441
    9. 'cour' → logprob: -8.211213111877441
    10. ' faibles' → logprob: -8.586213111877441

Token 132: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17431186139583588
    2. '<|end|>' → logprob: -2.924311876296997
    3. ' ,' → logprob: -3.049311876296997
    4. ' ' → logprob: -3.424311876296997
    5. '.' → logprob: -3.924311876296997
    6. '  ' → logprob: -6.924311637878418
    7. '<|end|>' → logprob: -7.049311637878418
    8. '_' → logprob: -7.049311637878418
    9. ')' → logprob: -7.424311637878418
    10. ':' → logprob: -7.799311637878418

Token 133: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8005802631378174
    2. ''' → logprob: -1.8005802631378174
    3. ' ' → logprob: -1.8005802631378174
    4. ' ,' → logprob: -2.9255802631378174
    5. '_' → logprob: -3.6755802631378174
    6. ')' → logprob: -3.9255802631378174
    7. '.' → logprob: -4.175580024719238
    8. '\' → logprob: -4.175580024719238
    9. '#' → logprob: -4.175580024719238
    10. 'import' → logprob: -4.300580024719238

Token 134: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6644959449768066
    2. '#' → logprob: -0.9144959449768066
    3. '<|end|>' → logprob: -2.9144959449768066
    4. ' #' → logprob: -4.414495944976807
    5. 'import' → logprob: -5.539495944976807
    6. 'def' → logprob: -5.664495944976807
    7. '<|end|>' → logprob: -6.039495944976807
    8. ')' → logprob: -6.164495944976807
    9. ',' → logprob: -6.414495944976807
    10. ' ' → logprob: -7.164495944976807

Token 135: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.037169843912124634
    2. ' ' → logprob: -4.787169933319092
    3. 'import' → logprob: -5.287169933319092
    4. '3' → logprob: -5.287169933319092
    5. ',' → logprob: -5.912169933319092
    6. ' #' → logprob: -6.162169933319092
    7. 'def' → logprob: -6.162169933319092
    8. ')' → logprob: -6.412169933319092
    9. '_' → logprob: -6.537169933319092
    10. ''' → logprob: -7.037169933319092

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04107528552412987
    2. ' )' → logprob: -3.2910752296447754
    3. ',' → logprob: -7.291075229644775
    4. ' ' → logprob: -7.416075229644775
    5. '#' → logprob: -7.541075229644775
    6. ' #' → logprob: -8.041075706481934
    7. '.' → logprob: -8.291075706481934
    8. 'def' → logprob: -8.791075706481934
    9. 'import' → logprob: -9.291075706481934
    10. '  ' → logprob: -9.291075706481934

Token 137: ' On' (ID: 2160)
  Prédit: ' fusion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fusion' → logprob: -0.5637444853782654
    2. '#' → logprob: -2.31374454498291
    3. ' Fusion' → logprob: -2.31374454498291
    4. ' #' → logprob: -2.43874454498291
    5. 'fusion' → logprob: -3.06374454498291
    6. ' On' → logprob: -3.43874454498291
    7. 'Fusion' → logprob: -4.06374454498291
    8. ' merged' → logprob: -4.56374454498291
    9. ' Les' → logprob: -5.06374454498291
    10. ' f' → logprob: -5.31374454498291

Token 138: ' les' (ID: 1341)
  Prédit: ' fusion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fusion' → logprob: -1.2501429319381714
    2. ' trouve' → logprob: -1.3751429319381714
    3. ' chois' → logprob: -2.750143051147461
    4. ' merge' → logprob: -2.875143051147461
    5. ' calc' → logprob: -2.875143051147461
    6. ' met' → logprob: -3.250143051147461
    7. ' continue' → logprob: -3.250143051147461
    8. 'merge' → logprob: -3.875143051147461
    9. ' cherche' → logprob: -3.875143051147461
    10. 'fusion' → logprob: -4.125143051147461

Token 139: ' fusion' (ID: 48115)
  Prédit: ' fusion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fusion' → logprob: -0.7081539630889893
    2. 'fusion' → logprob: -0.7081539630889893
    3. 'merge' → logprob: -4.95815372467041
    4. 'f' → logprob: -5.95815372467041
    5. ' reg' → logprob: -6.45815372467041
    6. 'reg' → logprob: -6.83315372467041
    7. 'combine' → logprob: -7.08315372467041
    8. ' rassemble' → logprob: -8.33315372467041
    9. ' merge' → logprob: -8.45815372467041
    10. '#' → logprob: -8.58315372467041

Token 140: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.10147105902433395
    2. 'e' → logprob: -2.726470947265625
    3. 'n' → logprob: -4.351470947265625
    4. '_' → logprob: -4.601470947265625
    5. 'né' → logprob: -6.351470947265625
    6. 'ner' → logprob: -6.351470947265625
    7. 'nne' → logprob: -6.601470947265625
    8. 'on' → logprob: -6.851470947265625
    9. 'onne' → logprob: -7.226470947265625
    10. '=' → logprob: -8.726470947265625

Token 141: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.01933722384274006
    2. 'un' → logprob: -4.019337177276611
    3. ''un' → logprob: -7.769337177276611
    4. ' une' → logprob: -7.894337177276611
    5. ' ' → logprob: -9.01933765411377
    6. '_un' → logprob: -9.76933765411377
    7. 't' → logprob: -10.01933765411377
    8. 'n' → logprob: -10.14433765411377
    9. 'une' → logprob: -10.14433765411377
    10. '_' → logprob: -10.51933765411377

Token 143: ' nouveau' (ID: 23184)
  Prédit: ' cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -0.8014028668403625
    2. ' nouveau' → logprob: -1.3014028072357178
    3. ' seul' → logprob: -1.6764028072357178
    4. ' unique' → logprob: -2.9264028072357178
    5. ' nouvel' → logprob: -4.301403045654297
    6. ' ' → logprob: -4.551403045654297
    7. 'cluster' → logprob: -4.926403045654297
    8. ' new' → logprob: -5.551403045654297
    9. 'nou' → logprob: -6.926403045654297
    10. 'e' → logprob: -7.801403045654297

Token 144: ' cluster' (ID: 19723)
  Prédit: ' cluster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -0.003044500946998596
    2. 'cluster' → logprob: -6.003044605255127
    3. '_cluster' → logprob: -7.628044605255127
    4. ' ' → logprob: -10.378044128417969
    5. '_' → logprob: -10.753044128417969
    6. '	cluster' → logprob: -11.378044128417969
    7. ' _' → logprob: -12.503044128417969
    8. ' clu' → logprob: -13.128044128417969
    9. '(cluster' → logprob: -13.253044128417969
    10. ' ' → logprob: -13.628044128417969

Token 145: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03288421034812927
    2. '.' → logprob: -4.282884120941162
    3. ' ,' → logprob: -4.782884120941162
    4. ' ' → logprob: -5.407884120941162
    5. '<|end|>' → logprob: -6.407884120941162
    6. ' =' → logprob: -7.282884120941162
    7. '_' → logprob: -7.282884120941162
    8. ')' → logprob: -7.282884120941162
    9. '#' → logprob: -7.782884120941162
    10. ':' → logprob: -8.15788459777832

Token 146: 're' (ID: 264)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5065040588378906
    2. ' )' → logprob: -1.0065040588378906
    3. ' ' → logprob: -4.381504058837891
    4. ',' → logprob: -4.381504058837891
    5. ' ' → logprob: -6.756504058837891
    6. ' ,' → logprob: -6.881504058837891
    7. ' cluster' → logprob: -7.131504058837891
    8. 'cluster' → logprob: -7.131504058837891
    9. '   ' → logprob: -8.13150405883789
    10. ' un' → logprob: -8.13150405883789

Token 147: 'prés' (ID: 61592)
  Prédit: 'prés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.7382948994636536
    2. 'm' → logprob: -1.6132948398590088
    3. ')' → logprob: -2.988294839859009
    4. 'st' → logprob: -3.613294839859009
    5. 'n' → logprob: -3.988294839859009
    6. 'merged' → logprob: -3.988294839859009
    7. 'g' → logprob: -4.113295078277588
    8. 'd' → logprob: -4.238295078277588
    9. 'ster' → logprob: -4.363295078277588
    10. 'pr' → logprob: -4.363295078277588

Token 148: 'ent' (ID: 299)
  Prédit: 'sent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sent' → logprob: -0.08846668899059296
    2. 's' → logprob: -2.5884666442871094
    3. 'ent' → logprob: -4.963466644287109
    4. 'esent' → logprob: -7.213466644287109
    5. 'ented' → logprob: -7.463466644287109
    6. 'nt' → logprob: -7.963466644287109
    7. ' sent' → logprob: -8.71346664428711
    8. 'és' → logprob: -8.83846664428711
    9. '```' → logprob: -8.96346664428711
    10. ')' → logprob: -8.96346664428711

Token 149: 'ant' (ID: 493)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.08053950220346451
    2. 'ant' → logprob: -2.5805394649505615
    3. 'e' → logprob: -7.205539703369141
    4. ')' → logprob: -8.33053970336914
    5. '#' → logprob: -8.45553970336914
    6. 'ée' → logprob: -9.20553970336914
    7. 'és' → logprob: -9.58053970336914
    8. 'a' → logprob: -9.58053970336914
    9. 'ation' → logprob: -9.95553970336914
    10. 'ent' → logprob: -9.95553970336914

Token 150: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.08239103853702545
    2. ' une' → logprob: -3.3323910236358643
    3. 'un' → logprob: -3.4573910236358643
    4. ' ' → logprob: -5.457391262054443
    5. 'une' → logprob: -6.082391262054443
    6. ' deux' → logprob: -6.082391262054443
    7. ' par' → logprob: -7.582391262054443
    8. ' l' → logprob: -7.832391262054443
    9. ')' → logprob: -8.207390785217285
    10. ' des' → logprob: -8.207390785217285

Token 151: ' switch' (ID: 6160)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.48126956820487976
    2. ' switch' → logprob: -1.1062695980072021
    3. ' noe' → logprob: -3.856269598007202
    4. 'no' → logprob: -4.981269359588623
    5. 'n' → logprob: -5.106269359588623
    6. ' n' → logprob: -5.981269359588623
    7. ' comm' → logprob: -6.606269359588623
    8. 'nou' → logprob: -6.731269359588623
    9. ' no' → logprob: -6.731269359588623
    10. '```' → logprob: -6.981269359588623

Token 152: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4773542284965515
    2. '),' → logprob: -1.6023542881011963
    3. ').' → logprob: -2.1023542881011963
    4. ' )' → logprob: -3.4773542881011963
    5. ' ),' → logprob: -3.8523542881011963
    6. ' ).' → logprob: -5.852354049682617
    7. ',' → logprob: -7.727354049682617
    8. ' de' → logprob: -8.477354049682617
    9. ' ,' → logprob: -9.602354049682617
    10. ' qui' → logprob: -10.977354049682617

Token 153: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1846227645874023
    2. 'import' → logprob: -1.4346227645874023
    3. ',' → logprob: -2.0596227645874023
    4. ' ' → logprob: -2.1846227645874023
    5. ')' → logprob: -2.5596227645874023
    6. '4' → logprob: -2.8096227645874023
    7. 'def' → logprob: -3.8096227645874023
    8. '\' → logprob: -4.809622764587402
    9. '```' → logprob: -4.934622764587402
    10. '
' → logprob: -5.059622764587402

Token 154: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5643508434295654
    2. 'import' → logprob: -1.3143508434295654
    3. ' ' → logprob: -2.3143508434295654
    4. 'from' → logprob: -4.0643510818481445
    5. '#' → logprob: -4.3143510818481445
    6. ' def' → logprob: -4.5643510818481445
    7. '4' → logprob: -4.6893510818481445
    8. ' import' → logprob: -4.6893510818481445
    9. ' #' → logprob: -7.0643510818481445
    10. '```' → logprob: -7.4393510818481445

Token 155: '4' (ID: 19)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2645089626312256
    2. 'def' → logprob: -2.1395089626312256
    3. '4' → logprob: -2.3895089626312256
    4. 'import' → logprob: -4.139509201049805
    5. ' ' → logprob: -6.139509201049805
    6. 'from' → logprob: -7.014509201049805
    7. ' #' → logprob: -7.014509201049805
    8. 'distance' → logprob: -7.389509201049805
    9. ' def' → logprob: -7.514509201049805
    10. 'n' → logprob: -7.514509201049805

Token 156: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006932547548785806
    2. ' )' → logprob: -7.500693321228027
    3. '#' → logprob: -9.125693321228027
    4. 'def' → logprob: -11.250693321228027
    5. '   ' → logprob: -11.750693321228027
    6. 'import' → logprob: -12.375693321228027
    7. ' #' → logprob: -13.625693321228027
    8. ')#' → logprob: -13.875693321228027
    9. '0' → logprob: -14.625693321228027
    10. '')' → logprob: -14.750693321228027

Token 157: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48549601435661316
    2. ' #' → logprob: -1.2354960441589355
    3. 'import' → logprob: -3.2354960441589355
    4. ' import' → logprob: -4.8604960441589355
    5. 'On' → logprob: -4.8604960441589355
    6. ' On' → logprob: -4.9854960441589355
    7. 'def' → logprob: -5.4854960441589355
    8. ' Met' → logprob: -5.6104960441589355
    9. ' on' → logprob: -5.7354960441589355
    10. 'Met' → logprob: -5.9854960441589355

Token 158: ' met' (ID: 1421)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.3039952516555786
    2. ' continue' → logprob: -1.6789952516555786
    3. 'merge' → logprob: -1.8039952516555786
    4. ' ajoute' → logprob: -3.053995132446289
    5. 'aj' → logprob: -3.428995132446289
    6. 'fusion' → logprob: -3.428995132446289
    7. ' crée' → logprob: -3.428995132446289
    8. ' fusion' → logprob: -3.803995132446289
    9. ' calc' → logprob: -3.803995132446289
    10. ' merge' → logprob: -4.053995132446289

Token 159: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.00022356293629854918
    2. 'à' → logprob: -9.000223159790039
    3. ' ' → logprob: -9.500223159790039
    4. ' ' → logprob: -11.375223159790039
    5. ' a' → logprob: -11.875223159790039
    6. '```' → logprob: -13.500223159790039
    7. ''à' → logprob: -13.750223159790039
    8. ' jour' → logprob: -13.750223159790039
    9. '-à' → logprob: -14.250223159790039
    10. '_' → logprob: -14.625223159790039

Token 160: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0010276889661327004
    2. 'jou' → logprob: -7.251027584075928
    3. 'jours' → logprob: -9.501028060913086
    4. ' jour' → logprob: -9.626028060913086
    5. '```' → logprob: -9.751028060913086
    6. '_j' → logprob: -10.001028060913086
    7. '-' → logprob: -11.001028060913086
    8. '#' → logprob: -11.626028060913086
    9. 'journ' → logprob: -11.751028060913086
    10. 'j' → logprob: -11.751028060913086

Token 161: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2698356509208679
    2. ' les' → logprob: -1.6448357105255127
    3. ' ' → logprob: -3.3948357105255127
    4. ' l' → logprob: -6.144835472106934
    5. ' ' → logprob: -6.144835472106934
    6. 'la' → logprob: -6.394835472106934
    7. 'les' → logprob: -6.394835472106934
    8. '_' → logprob: -7.019835472106934
    9. ' distances' → logprob: -7.519835472106934
    10. 'l' → logprob: -8.394835472106934

Token 162: ' matr' (ID: 25095)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.915212094783783
    2. ' matr' → logprob: -0.915212094783783
    3. 'distance' → logprob: -2.6652121543884277
    4. 'mat' → logprob: -2.7902121543884277
    5. ' matrix' → logprob: -3.6652121543884277
    6. ' distances' → logprob: -4.290212154388428
    7. ' ' → logprob: -4.790212154388428
    8. 'matrix' → logprob: -5.040212154388428
    9. 'dist' → logprob: -5.540212154388428
    10. ' dist' → logprob: -5.790212154388428

Token 163: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0385538712143898
    2. 'ix' → logprob: -3.4135539531707764
    3. 'i' → logprob: -6.663553714752197
    4. 'ic' → logprob: -6.788553714752197
    5. '#' → logprob: -7.163553714752197
    6. 'ixe' → logprob: -7.788553714752197
    7. 'rice' → logprob: -8.163554191589355
    8. 'rix' → logprob: -8.663554191589355
    9. 'tr' → logprob: -8.788554191589355
    10. 'e' → logprob: -9.538554191589355

Token 164: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18108579516410828
    2. ' de' → logprob: -2.6810858249664307
    3. '_de' → logprob: -2.6810858249664307
    4. '[' → logprob: -5.306085586547852
    5. '_dist' → logprob: -5.431085586547852
    6. '_d' → logprob: -5.556085586547852
    7. 'de' → logprob: -5.681085586547852
    8. ' _' → logprob: -6.556085586547852
    9. '_des' → logprob: -6.556085586547852
    10. '_distance' → logprob: -6.681085586547852

Token 165: ' distances' (ID: 48294)
  Prédit: ' distances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.23787738382816315
    2. 'dist' → logprob: -1.737877368927002
    3. 'distance' → logprob: -3.612877368927002
    4. ' distance' → logprob: -4.987877368927002
    5. ' dist' → logprob: -6.237877368927002
    6. 'd' → logprob: -10.73787784576416
    7. '_distance' → logprob: -11.73787784576416
    8. 'Distances' → logprob: -11.98787784576416
    9. ' distante' → logprob: -12.61287784576416
    10. '_dist' → logprob: -12.98787784576416

Token 166: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30086401104927063
    2. ' ' → logprob: -1.9258639812469482
    3. ' entre' → logprob: -2.9258639812469482
    4. ' ,' → logprob: -3.6758639812469482
    5. '.' → logprob: -3.8008639812469482
    6. '#' → logprob: -5.675864219665527
    7. 'import' → logprob: -6.175864219665527
    8. ' between' → logprob: -7.300864219665527
    9. ' des' → logprob: -7.550864219665527
    10. '   ' → logprob: -7.675864219665527

Token 167: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.7949382066726685
    2. 't' → logprob: -1.6699382066726685
    3. 'ces' → logprob: -2.169938087463379
    4. ' clusters' → logprob: -2.294938087463379
    5. 'les' → logprob: -2.544938087463379
    6. ' tous' → logprob: -3.544938087463379
    7. ' les' → logprob: -3.919938087463379
    8. '#' → logprob: -4.919938087463379
    9. ' ces' → logprob: -5.169938087463379
    10. 'c' → logprob: -6.669938087463379

Token 168: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11696799099445343
    2. '.' → logprob: -2.8669679164886475
    3. 's' → logprob: -4.241968154907227
    4. ' ,' → logprob: -4.366968154907227
    5. 'import' → logprob: -4.491968154907227
    6. ' ' → logprob: -5.241968154907227
    7. '#' → logprob: -5.616968154907227
    8. ',
' → logprob: -6.116968154907227
    9. ')' → logprob: -6.741968154907227
    10. 'def' → logprob: -7.116968154907227

Token 169: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.25556352734565735
    2. ' la' → logprob: -1.630563497543335
    3. 'les' → logprob: -3.880563497543335
    4. '#' → logprob: -5.505563735961914
    5. 'la' → logprob: -6.630563735961914
    6. ' leurs' → logprob: -6.755563735961914
    7. ' le' → logprob: -6.880563735961914
    8. ' l' → logprob: -8.380563735961914
    9. ' ' → logprob: -8.380563735961914
    10. ' #' → logprob: -8.630563735961914

Token 170: ' moyenne' (ID: 57480)
  Prédit: ' nouvelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nouvelle' → logprob: -1.1384520530700684
    2. 'nou' → logprob: -1.3884520530700684
    3. ' moyenne' → logprob: -1.6384520530700684
    4. 'm' → logprob: -2.1384520530700684
    5. ' nouvelles' → logprob: -3.2634520530700684
    6. ' nouveau' → logprob: -3.6384520530700684
    7. 'n' → logprob: -4.513452053070068
    8. ' plus' → logprob: -5.138452053070068
    9. ' nouveaux' → logprob: -5.263452053070068
    10. ' moy' → logprob: -5.263452053070068

Token 171: ' ar' (ID: 646)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.0061810677871108055
    2. 'des' → logprob: -5.881181240081787
    3. ',' → logprob: -6.881181240081787
    4. ' ' → logprob: -8.006180763244629
    5. ' entre' → logprob: -8.256180763244629
    6. 's' → logprob: -8.381180763244629
    7. '.' → logprob: -8.381180763244629
    8. '_des' → logprob: -9.256180763244629
    9. '```' → logprob: -9.381180763244629
    10. ' de' → logprob: -9.381180763244629

Token 172: 'ith' (ID: 437)
  Prédit: 'ith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ith' → logprob: -0.04722093790769577
    2. 'r' → logprob: -3.9222209453582764
    3. 'i' → logprob: -4.172220706939697
    4. 'é' → logprob: -5.547220706939697
    5. 'it' → logprob: -6.422220706939697
    6. 'ythm' → logprob: -7.047220706939697
    7. 'm' → logprob: -7.047220706939697
    8. 'itm' → logprob: -7.422220706939697
    9. 'p' → logprob: -7.672220706939697
    10. 'ré' → logprob: -7.922220706939697

Token 173: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002100965939462185
    2. 'mé' → logprob: -9.25020980834961
    3. 't' → logprob: -9.87520980834961
    4. 'étique' → logprob: -10.00020980834961
    5. 'th' → logprob: -12.00020980834961
    6. 'met' → logprob: -12.87520980834961
    7. '1' → logprob: -13.75020980834961
    8. 'étiques' → logprob: -13.75020980834961
    9. '#' → logprob: -13.87520980834961
    10. 'l' → logprob: -14.12520980834961

Token 174: 'étique' (ID: 41132)
  Prédit: 'étique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étique' → logprob: -0.018856652081012726
    2. 'é' → logprob: -4.268856525421143
    3. 'étiques' → logprob: -5.393856525421143
    4. 'ét' → logprob: -9.6438570022583
    5. 'ético' → logprob: -11.2688570022583
    6. 'èt' → logprob: -11.3938570022583
    7. 'étr' → logprob: -11.5188570022583
    8. 't' → logprob: -11.5188570022583
    9. 'ique' → logprob: -12.0188570022583
    10. 'è' → logprob: -12.2688570022583

Token 175: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.17876040935516357
    2. ',' → logprob: -2.303760528564453
    3. ' ' → logprob: -3.928760528564453
    4. '.' → logprob: -4.928760528564453
    5. '<|end|>' → logprob: -5.053760528564453
    6. ' ,' → logprob: -5.303760528564453
    7. 'des' → logprob: -5.428760528564453
    8. '  ' → logprob: -5.803760528564453
    9. ')' → logprob: -5.928760528564453
    10. ' entre' → logprob: -5.928760528564453

Token 176: ' distances' (ID: 48294)
  Prédit: ' distances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.033685352653265
    2. ' deux' → logprob: -4.033685207366943
    3. 'dist' → logprob: -4.533685207366943
    4. 'de' → logprob: -6.658685207366943
    5. ' clusters' → logprob: -6.783685207366943
    6. 'clusters' → logprob: -7.283685207366943
    7. 'distance' → logprob: -7.658685207366943
    8. ' ' → logprob: -8.408685684204102
    9. ' dist' → logprob: -8.658685684204102
    10. '2' → logprob: -8.658685684204102

Token 177: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19703762233257294
    2. 's' → logprob: -3.072037696838379
    3. ' entre' → logprob: -3.197037696838379
    4. ' ,' → logprob: -3.447037696838379
    5. '.' → logprob: -3.947037696838379
    6. 'import' → logprob: -4.072037696838379
    7. '#' → logprob: -5.072037696838379
    8. ' ' → logprob: -5.447037696838379
    9. ')' → logprob: -5.447037696838379
    10. '(s' → logprob: -6.947037696838379

Token 178: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.819555401802063
    2. 'def' → logprob: -1.569555401802063
    3. ')' → logprob: -2.4445552825927734
    4. '
' → logprob: -2.5695552825927734
    5. ',' → logprob: -2.8195552825927734
    6. '#' → logprob: -3.4445552825927734
    7. ' ' → logprob: -4.069555282592773
    8. '\' → logprob: -4.319555282592773
    9. '

' → logprob: -4.444555282592773
    10. '\n' → logprob: -4.569555282592773

Token 179: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6487126350402832
    2. 'import' → logprob: -1.2737126350402832
    3. '
' → logprob: -1.7737126350402832
    4. '

' → logprob: -4.273712635040283
    5. 'from' → logprob: -5.898712635040283
    6. ' 
' → logprob: -5.898712635040283
    7. ' 

' → logprob: -6.273712635040283
    8. '#' → logprob: -6.898712635040283
    9. '\n' → logprob: -7.148712635040283
    10. '\' → logprob: -7.398712635040283

Token 180: '5' (ID: 20)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012230133637785912
    2. 'import' → logprob: -4.512229919433594
    3. 'from' → logprob: -7.262229919433594
    4. '#' → logprob: -8.637229919433594
    5. ')' → logprob: -9.387229919433594
    6. '```' → logprob: -9.637229919433594
    7. ' def' → logprob: -10.262229919433594
    8. '\' → logprob: -10.762229919433594
    9. 'n' → logprob: -11.012229919433594
    10. '

' → logprob: -11.137229919433594

Token 181: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002622743137180805
    2. '#' → logprob: -6.002622604370117
    3. ' )' → logprob: -9.252622604370117
    4. 'def' → logprob: -10.127622604370117
    5. ')#' → logprob: -12.752622604370117
    6. ' ' → logprob: -13.502622604370117
    7. ':' → logprob: -13.627622604370117
    8. ' #' → logprob: -13.877622604370117
    9. ')
' → logprob: -14.377622604370117
    10. ' ' → logprob: -14.502622604370117

Token 182: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.064317986369133
    2. 'def' → logprob: -3.4393179416656494
    3. ' #' → logprob: -4.3143181800842285
    4. 'On' → logprob: -5.8143181800842285
    5. ' def' → logprob: -5.9393181800842285
    6. ' Contin' → logprob: -6.3143181800842285
    7. 'contin' → logprob: -6.6893181800842285
    8. 'Contin' → logprob: -6.6893181800842285
    9. 'for' → logprob: -6.8143181800842285
    10. 'import' → logprob: -7.5643181800842285

Token 183: ' rép' (ID: 64372)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.08982987701892853
    2. ' continue' → logprob: -2.839829921722412
    3. 'sup' → logprob: -5.089829921722412
    4. 'contin' → logprob: -5.089829921722412
    5. '#' → logprob: -5.714829921722412
    6. 're' → logprob: -6.589829921722412
    7. 'p' → logprob: -6.839829921722412
    8. 'merge' → logprob: -6.964829921722412
    9. 'ré' → logprob: -7.089829921722412
    10. 'fusion' → logprob: -7.214829921722412

Token 184: 'ète' (ID: 28789)
  Prédit: 'ète'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ète' → logprob: -0.012002123519778252
    2. 'éter' → logprob: -5.762001991271973
    3. 'r' → logprob: -6.012001991271973
    4. 'l' → logprob: -6.387001991271973
    5. 'é' → logprob: -6.887001991271973
    6. 'ete' → logprob: -7.637001991271973
    7. 'e' → logprob: -7.887001991271973
    8. 'lace' → logprob: -8.012001991271973
    9. 'ête' → logprob: -8.262001991271973
    10. 'ro' → logprob: -8.262001991271973

Token 185: ' jusqu' (ID: 21961)
  Prédit: ' jusqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.5344748497009277
    2. ' until' → logprob: -1.9094748497009277
    3. ' ' → logprob: -2.0344748497009277
    4. '_' → logprob: -3.6594748497009277
    5. ',' → logprob: -3.9094748497009277
    6. ' la' → logprob: -4.159474849700928
    7. '<|end|>' → logprob: -4.534474849700928
    8. ' l' → logprob: -4.909474849700928
    9. 'until' → logprob: -5.034474849700928
    10. '.' → logprob: -5.159474849700928

Token 186: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.011916478164494038
    2. ''' → logprob: -5.386916637420654
    3. ''au' → logprob: -5.761916637420654
    4. '’à' → logprob: -6.011916637420654
    5. '_' → logprob: -7.136916637420654
    6. 'à' → logprob: -7.761916637420654
    7. ' à' → logprob: -8.511916160583496
    8. 'a' → logprob: -9.386916160583496
    9. ''a' → logprob: -9.761916160583496
    10. 'au' → logprob: -10.136916160583496

Token 187: ' obtenir' (ID: 54423)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.22903381288051605
    2. 'len' → logprob: -2.1040337085723877
    3. ' len' → logprob: -3.2290337085723877
    4. ' il' → logprob: -4.229033946990967
    5. ' n' → logprob: -4.479033946990967
    6. 'n' → logprob: -4.604033946990967
    7. 'il' → logprob: -5.979033946990967
    8. ' un' → logprob: -6.479033946990967
    9. 'un' → logprob: -6.604033946990967
    10. 'ce' → logprob: -7.229033946990967

Token 188: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.07865367829799652
    2. 'un' → logprob: -2.828653573989868
    3. ' une' → logprob: -4.953653812408447
    4. '1' → logprob: -5.953653812408447
    5. ''un' → logprob: -5.953653812408447
    6. ' ' → logprob: -5.953653812408447
    7. ' qu' → logprob: -6.828653812408447
    8. 'une' → logprob: -8.578653335571289
    9. 'n' → logprob: -8.953653335571289
    10. '   ' → logprob: -9.328653335571289

Token 189: ' seul' (ID: 33041)
  Prédit: ' seul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seul' → logprob: -0.21713919937610626
    2. ' unique' → logprob: -1.8421392440795898
    3. ' cluster' → logprob: -3.96713924407959
    4. 'se' → logprob: -4.46713924407959
    5. ' arbre' → logprob: -5.71713924407959
    6. 'unique' → logprob: -6.34213924407959
    7. ' seule' → logprob: -6.96713924407959
    8. 'cluster' → logprob: -9.34213924407959
    9. '_unique' → logprob: -10.09213924407959
    10. 'e' → logprob: -10.34213924407959

Token 190: ' cluster' (ID: 19723)
  Prédit: ' cluster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -0.0007528089336119592
    2. 'cluster' → logprob: -7.250752925872803
    3. ' arbre' → logprob: -11.000752449035645
    4. ' espace' → logprob: -11.500752449035645
    5. ' ' → logprob: -11.750752449035645
    6. '_cluster' → logprob: -12.375752449035645
    7. ' ' → logprob: -14.125752449035645
    8. ' cl' → logprob: -14.125752449035645
    9. '	cluster' → logprob: -14.375752449035645
    10. ' clusters' → logprob: -14.375752449035645

Token 191: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7780368328094482
    2. ',' → logprob: -1.4030368328094482
    3. ':' → logprob: -1.6530368328094482
    4. '<|end|>' → logprob: -3.6530368328094482
    5. 'import' → logprob: -3.7780368328094482
    6. 'def' → logprob: -3.7780368328094482
    7. '#' → logprob: -5.028037071228027
    8. '
' → logprob: -5.278037071228027
    9. '<|end|>' → logprob: -5.903037071228027
    10. '\' → logprob: -5.903037071228027

Token 192: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38508954644203186
    2. ').' → logprob: -1.2600895166397095
    3. ' )' → logprob: -3.885089635848999
    4. ' ).' → logprob: -5.01008939743042
    5. ' arbre' → logprob: -5.88508939743042
    6. '#' → logprob: -6.38508939743042
    7. ')#' → logprob: -7.38508939743042
    8. ')\' → logprob: -7.51008939743042
    9. ' cluster' → logprob: -7.88508939743042
    10. '.' → logprob: -8.010089874267578

Token 193: ''ar' (ID: 54307)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6928389072418213
    2. ''ar' → logprob: -0.8178389072418213
    3. 'a' → logprob: -3.5678389072418213
    4. ''a' → logprob: -3.9428389072418213
    5. 'e' → logprob: -4.942838668823242
    6. ''ensemble' → logprob: -7.317838668823242
    7. ''e' → logprob: -7.317838668823242
    8. ''#' → logprob: -7.317838668823242
    9. '')' → logprob: -7.942838668823242
    10. '#' → logprob: -8.567838668823242

Token 194: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.0004938178462907672
    2. 'b' → logprob: -8.125494003295898
    3. 'bo' → logprob: -8.875494003295898
    4. 'br' → logprob: -10.500494003295898
    5. 'e' → logprob: -11.500494003295898
    6. '#' → logprob: -12.750494003295898
    7. 'be' → logprob: -13.000494003295898
    8. 'Bre' → logprob: -13.250494003295898
    9. '```' → logprob: -13.500494003295898
    10. 'brev' → logprob: -14.000494003295898

Token 195: ' complet' (ID: 5127)
  Prédit: ' complet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complet' → logprob: -0.1366773098707199
    2. ').' → logprob: -2.2616772651672363
    3. ')' → logprob: -3.8866772651672363
    4. 'com' → logprob: -6.261677265167236
    5. ' final' → logprob: -8.011677742004395
    6. ' complète' → logprob: -8.636677742004395
    7. ' entier' → logprob: -8.761677742004395
    8. ' ).' → logprob: -8.761677742004395
    9. '):' → logprob: -9.386677742004395
    10. 'final' → logprob: -9.511677742004395

Token 196: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016846880316734314
    2. ').' → logprob: -4.141846656799316
    3. '):' → logprob: -8.266846656799316
    4. ' )' → logprob: -8.391846656799316
    5. '.' → logprob: -9.266846656799316
    6. 'def' → logprob: -9.516846656799316
    7. ')
' → logprob: -10.016846656799316
    8. '.)' → logprob: -10.016846656799316
    9. 'e' → logprob: -11.016846656799316
    10. '),' → logprob: -11.641846656799316

Token 197: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5657246112823486
    2. '

' → logprob: -1.5657246112823486
    3. 'def' → logprob: -2.1907246112823486
    4. 'import' → logprob: -3.5657246112823486
    5. ' 

' → logprob: -4.0657243728637695
    6. '#' → logprob: -4.1907243728637695
    7. '\n' → logprob: -4.3157243728637695
    8. '\' → logprob: -4.6907243728637695
    9. ',' → logprob: -5.3157243728637695
    10. ' ' → logprob: -5.4407243728637695

Token 198: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5825722813606262
    2. '
' → logprob: -0.9575722813606262
    3. '

' → logprob: -3.2075722217559814
    4. 'import' → logprob: -4.3325724601745605
    5. '\n' → logprob: -7.2075724601745605
    6. ' 
' → logprob: -7.2075724601745605
    7. ' 

' → logprob: -7.3325724601745605
    8. '
 
' → logprob: -7.4575724601745605
    9. '\' → logprob: -7.5825724601745605
    10. '```' → logprob: -8.082571983337402

Token 199: '6' (ID: 21)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027246657758951187
    2. 'd' → logprob: -3.7772467136383057
    3. 'import' → logprob: -6.777246475219727
    4. '#' → logprob: -7.152246475219727
    5. ' 
' → logprob: -7.152246475219727
    6. '
' → logprob: -7.402246475219727
    7. 'de' → logprob: -8.527246475219727
    8. '\' → logprob: -8.902246475219727
    9. 'n' → logprob: -9.277246475219727
    10. ' ' → logprob: -9.902246475219727

Token 200: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019091879948973656
    2. 'def' → logprob: -4.394092082977295
    3. '#' → logprob: -5.144092082977295
    4. ' )' → logprob: -7.519092082977295
    5. ' def' → logprob: -9.519091606140137
    6. 'import' → logprob: -10.394091606140137
    7. ':' → logprob: -10.644091606140137
    8. ']' → logprob: -11.394091606140137
    9. ' #' → logprob: -11.644091606140137
    10. '.' → logprob: -12.019091606140137

Token 201: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43611133098602295
    2. 'def' → logprob: -1.061111330986023
    3. 'import' → logprob: -6.0611114501953125
    4. ' def' → logprob: -6.3111114501953125
    5. ' #' → logprob: -6.4361114501953125
    6. 'from' → logprob: -7.4361114501953125
    7. 'On' → logprob: -8.311111450195312
    8. 'Voici' → logprob: -8.686111450195312
    9. 'Ajouter' → logprob: -9.936111450195312
    10. 'for' → logprob: -9.936111450195312

Token 202: ' calc' (ID: 25691)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.5837536454200745
    2. 'r' → logprob: -2.2087535858154297
    3. ' récup' → logprob: -2.9587535858154297
    4. ' calc' → logprob: -3.0837535858154297
    5. 'aff' → logprob: -3.0837535858154297
    6. '#' → logprob: -3.7087535858154297
    7. 'calc' → logprob: -3.9587535858154297
    8. 'continue' → logprob: -4.08375358581543
    9. 'def' → logprob: -4.20875358581543
    10. 'ob' → logprob: -4.45875358581543

Token 203: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.024870112538337708
    2. 'ul' → logprob: -4.399869918823242
    3. 'uler' → logprob: -4.524869918823242
    4. 'ulé' → logprob: -6.649869918823242
    5. 'u' → logprob: -9.774869918823242
    6. '#' → logprob: -10.274869918823242
    7. 'er' → logprob: -11.149869918823242
    8. 'ulate' → logprob: -11.899869918823242
    9. ' ul' → logprob: -12.274869918823242
    10. '_' → logprob: -12.524869918823242

Token 204: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5653440356254578
    2. ' la' → logprob: -1.1903440952301025
    3. ' le' → logprob: -2.8153440952301025
    4. ' l' → logprob: -3.1903440952301025
    5. 'les' → logprob: -4.565343856811523
    6. 'le' → logprob: -5.690343856811523
    7. '<|end|>' → logprob: -6.190343856811523
    8. '#' → logprob: -6.440343856811523
    9. ' et' → logprob: -6.690343856811523
    10. ' ' → logprob: -6.690343856811523

Token 205: ' degrés' (ID: 195297)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.026947084814310074
    2. ' degrés' → logprob: -3.651947021484375
    3. 'degrees' → logprob: -7.776947021484375
    4. ' degré' → logprob: -9.276947021484375
    5. 'deg' → logprob: -10.026947021484375
    6. ' degr' → logprob: -10.401947021484375
    7. ' degrees' → logprob: -10.901947021484375
    8. '_de' → logprob: -11.151947021484375
    9. 'd' → logprob: -11.651947021484375
    10. 'degree' → logprob: -12.026947021484375

Token 206: ' des' (ID: 731)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.495098739862442
    2. '

' → logprob: -1.3700987100601196
    3. 'import' → logprob: -2.370098829269409
    4. '
' → logprob: -3.870098829269409
    5. ',' → logprob: -5.62009859085083
    6. '#' → logprob: -5.74509859085083
    7. '
 
' → logprob: -6.24509859085083
    8. 's' → logprob: -6.37009859085083
    9. '

' → logprob: -6.74509859085083
    10. ' 

' → logprob: -6.74509859085083

Token 207: ' noe' (ID: 49921)
  Prédit: ' noe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' noe' → logprob: -0.0240608099848032
    2. ' clusters' → logprob: -4.6490607261657715
    3. 'no' → logprob: -5.1490607261657715
    4. ' n' → logprob: -5.8990607261657715
    5. 'n' → logprob: -6.0240607261657715
    6. 'clusters' → logprob: -6.5240607261657715
    7. ' switches' → logprob: -8.02406120300293
    8. ' nodes' → logprob: -8.27406120300293
    9. ' no' → logprob: -8.27406120300293
    10. 'nodes' → logprob: -8.89906120300293

Token 208: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.0021261146757751703
    2. 'ds' → logprob: -6.752126216888428
    3. 'ud' → logprob: -7.127126216888428
    4. '#' → logprob: -10.25212574005127
    5. 's' → logprob: -10.25212574005127
    6. '```' → logprob: -11.00212574005127
    7. ' uds' → logprob: -11.62712574005127
    8. '   ' → logprob: -12.00212574005127
    9. 'd' → logprob: -12.00212574005127
    10. '``' → logprob: -12.12712574005127

Token 209: ' internes' (ID: 183434)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8734296560287476
    2. '_' → logprob: -1.9984296560287476
    3. '<|end|>' → logprob: -2.373429775238037
    4. '_internal' → logprob: -2.623429775238037
    5. '_inter' → logprob: -2.873429775238037
    6. ' internes' → logprob: -3.248429775238037
    7. ',' → logprob: -3.498429775238037
    8. 'intern' → logprob: -3.873429775238037
    9. '_s' → logprob: -3.873429775238037
    10. 'def' → logprob: -3.998429775238037

Token 210: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4516172707080841
    2. '

' → logprob: -1.3266172409057617
    3. '
' → logprob: -3.2016172409057617
    4. 'import' → logprob: -3.3266172409057617
    5. ' 

' → logprob: -5.576617240905762
    6. '\' → logprob: -5.701617240905762
    7. ',' → logprob: -5.951617240905762
    8. '
 
' → logprob: -6.326617240905762
    9. '\n' → logprob: -6.451617240905762
    10. '#' → logprob: -6.451617240905762

Token 211: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5233445167541504
    2. ' l' → logprob: -0.8983445167541504
    3. 's' → logprob: -8.898344039916992
    4. ' ' → logprob: -11.023344039916992
    5. 'n' → logprob: -11.398344039916992
    6. '#' → logprob: -11.398344039916992
    7. ' clusters' → logprob: -12.523344039916992
    8. 'la' → logprob: -12.523344039916992
    9. ' arbre' → logprob: -12.523344039916992
    10. ' chaque' → logprob: -12.898344039916992

Token 212: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.006248595658689737
    2. 'ar' → logprob: -5.631248474121094
    3. ''' → logprob: -6.006248474121094
    4. '’ar' → logprob: -9.756248474121094
    5. '#' → logprob: -10.256248474121094
    6. ''#' → logprob: -10.256248474121094
    7. 'a' → logprob: -11.131248474121094
    8. ''ab' → logprob: -11.631248474121094
    9. ' arbre' → logprob: -11.881248474121094
    10. ''a' → logprob: -12.506248474121094

Token 213: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -3.5597102396423e-05
    2. 'bo' → logprob: -11.125035285949707
    3. 'bres' → logprob: -11.625035285949707
    4. 'b' → logprob: -12.000035285949707
    5. 'tree' → logprob: -13.000035285949707
    6. 'Bre' → logprob: -14.125035285949707
    7. 'tre' → logprob: -14.500035285949707
    8. 'br' → logprob: -14.625035285949707
    9. 'BRE' → logprob: -14.750035285949707
    10. 'e' → logprob: -15.000035285949707

Token 214: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03297187015414238
    2. '
' → logprob: -4.2829718589782715
    3. 'import' → logprob: -4.4079718589782715
    4. ':' → logprob: -5.9079718589782715
    5. '

' → logprob: -6.4079718589782715
    6. '```' → logprob: -7.2829718589782715
    7. ',' → logprob: -8.28297233581543
    8. '.' → logprob: -8.90797233581543
    9. 'n' → logprob: -8.90797233581543
    10. 'class' → logprob: -9.15797233581543

Token 215: ' correspondant' (ID: 146058)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05118567496538162
    2. 'def' → logprob: -4.301185607910156
    3. ' puis' → logprob: -4.801185607910156
    4. ' #' → logprob: -5.051185607910156
    5. 'import' → logprob: -5.051185607910156
    6. ' en' → logprob: -5.676185607910156
    7. 'c' → logprob: -5.926185607910156
    8. 'en' → logprob: -6.176185607910156
    9. ' et' → logprob: -6.676185607910156
    10. 'et' → logprob: -6.676185607910156

Token 216: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.3023296296596527
    2. ' à' → logprob: -1.552329659461975
    3. ' au' → logprob: -3.0523295402526855
    4. 'aux' → logprob: -6.8023295402526855
    5. 'à' → logprob: -8.302330017089844
    6. ' a' → logprob: -8.802330017089844
    7. 'au' → logprob: -8.802330017089844
    8. ' ' → logprob: -9.802330017089844
    9. '_aux' → logprob: -10.177330017089844
    10. '#' → logprob: -10.552330017089844

Token 217: ' switches' (ID: 57537)
  Prédit: ' connex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connex' → logprob: -1.1748192310333252
    2. 'conn' → logprob: -1.6748192310333252
    3. ' connections' → logprob: -1.6748192310333252
    4. ' nombres' → logprob: -2.049819231033325
    5. ' liens' → logprob: -2.924819231033325
    6. ' nombre' → logprob: -3.424819231033325
    7. 'connections' → logprob: -3.424819231033325
    8. 'nombre' → logprob: -4.174818992614746
    9. ' clusters' → logprob: -4.299818992614746
    10. ' branches' → logprob: -4.799818992614746

Token 218: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17252317070960999
    2. 'import' → logprob: -2.172523260116577
    3. ',' → logprob: -4.047523021697998
    4. '
' → logprob: -5.047523021697998
    5. '.' → logprob: -5.297523021697998
    6. '

' → logprob: -5.422523021697998
    7. '```' → logprob: -5.922523021697998
    8. '#' → logprob: -6.047523021697998
    9. 's' → logprob: -6.422523021697998
    10. ':' → logprob: -6.422523021697998

Token 219: '#
' (ID: 11240)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4521462619304657
    2. 'def' → logprob: -1.452146291732788
    3. '

' → logprob: -2.577146291732788
    4. 'import' → logprob: -3.577146291732788
    5. ' 
' → logprob: -4.452146053314209
    6. '```' → logprob: -5.827146053314209
    7. '
 
' → logprob: -5.827146053314209
    8. '\n' → logprob: -6.327146053314209
    9. ' 

' → logprob: -6.577146053314209
    10. '\' → logprob: -6.952146053314209

Token 220: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02291954681277275
    2. 'import' → logprob: -3.8979196548461914
    3. 'from' → logprob: -6.897919654846191
    4. 'class' → logprob: -7.147919654846191
    5. '#' → logprob: -8.397919654846191
    6. '
' → logprob: -8.522919654846191
    7. '```' → logprob: -9.772919654846191
    8. ' def' → logprob: -10.147919654846191
    9. 'n' → logprob: -11.022919654846191
    10. ' 
' → logprob: -11.272919654846191

Token 221: ' Rem' (ID: 6890)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01089076790958643
    2. 'import' → logprob: -4.760890960693359
    3. 'class' → logprob: -7.260890960693359
    4. '
' → logprob: -7.385890960693359
    5. 'from' → logprob: -7.385890960693359
    6. ' def' → logprob: -8.26089096069336
    7. ' 
' → logprob: -10.26089096069336
    8. '```' → logprob: -11.51089096069336
    9. ' import' → logprob: -11.63589096069336
    10. ' class' → logprob: -12.38589096069336

Token 222: 'arque' (ID: 167524)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.9830596446990967
    2. 'pl' → logprob: -1.9830596446990967
    3. 'arque' → logprob: -1.9830596446990967
    4. 'def' → logprob: -2.1080596446990967
    5. 'placer' → logprob: -2.6080596446990967
    6. 'import' → logprob: -2.7330596446990967
    7. 'er' → logprob: -2.9830596446990967
    8. 'ains' → logprob: -3.1080596446990967
    9. 'ar' → logprob: -3.3580596446990967
    10. 'oved' → logprob: -3.4830596446990967

Token 223: ' importante' (ID: 13431)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5465365052223206
    2. ' :' → logprob: -0.9215365052223206
    3. ',' → logprob: -4.546536445617676
    4. 's' → logprob: -4.796536445617676
    5. '#' → logprob: -6.921536445617676
    6. 'import' → logprob: -7.296536445617676
    7. ' =' → logprob: -7.671536445617676
    8. ' ' → logprob: -7.671536445617676
    9. '<|end|>' → logprob: -7.796536445617676
    10. ' #' → logprob: -8.796536445617676

Token 224: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.2558692693710327
    2. ':' → logprob: -1.6308692693710327
    3. '#' → logprob: -4.005869388580322
    4. ',' → logprob: -4.630869388580322
    5. ' #' → logprob: -6.755869388580322
    6. ' ,' → logprob: -7.630869388580322
    7. ' ' → logprob: -9.380868911743164
    8. ' :
' → logprob: -9.505868911743164
    9. ' ' → logprob: -9.755868911743164
    10. 's' → logprob: -10.255868911743164

Token 225: ' 
' (ID: 793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20283031463623047
    2. ' #' → logprob: -1.8278303146362305
    3. ' la' → logprob: -4.2028303146362305
    4. ' les' → logprob: -6.4528303146362305
    5. ' l' → logprob: -6.7028303146362305
    6. ' ' → logprob: -6.8278303146362305
    7. 'import' → logprob: -6.9528303146362305
    8. ' le' → logprob: -6.9528303146362305
    9. ' import' → logprob: -7.3278303146362305
    10. ' il' → logprob: -8.57783031463623

Token 226: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02075710892677307
    2. ' #' → logprob: -3.8957571983337402
    3. 'import' → logprob: -8.895756721496582
    4. ' import' → logprob: -10.770756721496582
    5. ' Le' → logprob: -11.145756721496582
    6. ' ' → logprob: -11.895756721496582
    7. ' 
' → logprob: -12.520756721496582
    8. 'def' → logprob: -12.520756721496582
    9. '#
' → logprob: -12.520756721496582
    10. ' ' → logprob: -13.145756721496582

Token 227: ' Les' (ID: 7029)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18873737752437592
    2. ' #' → logprob: -1.813737392425537
    3. ' Le' → logprob: -5.938737392425537
    4. ' La' → logprob: -6.188737392425537
    5. ' Les' → logprob: -6.813737392425537
    6. ' Chaque' → logprob: -7.313737392425537
    7. ' Il' → logprob: -7.813737392425537
    8. ' la' → logprob: -8.063736915588379
    9. ' L' → logprob: -8.188736915588379
    10. ' ' → logprob: -8.563736915588379

Token 228: ' feuilles' (ID: 109727)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.915806233882904
    2. ' distances' → logprob: -1.9158062934875488
    3. ' clusters' → logprob: -2.165806293487549
    4. ' #' → logprob: -2.415806293487549
    5. 'clusters' → logprob: -2.665806293487549
    6. ' matrices' → logprob: -3.665806293487549
    7. ' espaces' → logprob: -3.915806293487549
    8. 'd' → logprob: -4.290806293487549
    9. ' commentaires' → logprob: -4.290806293487549
    10. 'dist' → logprob: -4.415806293487549

Token 229: ' sont' (ID: 5242)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3719865083694458
    2. ' sont' → logprob: -1.3719865083694458
    3. ' #' → logprob: -2.1219863891601562
    4. ',' → logprob: -2.4969863891601562
    5. ' (' → logprob: -2.8719863891601562
    6. ' ' → logprob: -2.9969863891601562
    7. 's' → logprob: -3.2469863891601562
    8. ' ,' → logprob: -3.3719863891601562
    9. ' de' → logprob: -4.496986389160156
    10. ' =' → logprob: -4.746986389160156

Token 230: ' les' (ID: 1341)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.39686328172683716
    2. ' num' → logprob: -1.1468632221221924
    3. 'index' → logprob: -6.3968634605407715
    4. 'les' → logprob: -6.5218634605407715
    5. 'des' → logprob: -7.1468634605407715
    6. 'initial' → logprob: -7.1468634605407715
    7. ' des' → logprob: -7.3968634605407715
    8. ' index' → logprob: -7.3968634605407715
    9. ' les' → logprob: -7.5218634605407715
    10. ' initial' → logprob: -7.7718634605407715

Token 231: ' ordinate' (ID: 79571)
  Prédit: 'ordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinate' → logprob: -0.48578080534935
    2. ' ordinate' → logprob: -1.4857808351516724
    3. '"' → logprob: -3.235780715942383
    4. '#' → logprob: -3.610780715942383
    5. ' n' → logprob: -3.735780715942383
    6. 'n' → logprob: -4.485780715942383
    7. 'ordinateur' → logprob: -5.110780715942383
    8. ' noe' → logprob: -5.235780715942383
    9. 'machines' → logprob: -5.360780715942383
    10. ' #' → logprob: -5.485780715942383

Token 232: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -6.511406809295295e-06
    2. 'ur' → logprob: -12.375006675720215
    3. 'rs' → logprob: -14.000006675720215
    4. 'u' → logprob: -15.125006675720215
    5. '#' → logprob: -15.250006675720215
    6. 'eurs' → logprob: -15.375006675720215
    7. 's' → logprob: -15.875006675720215
    8. 'urses' → logprob: -16.1250057220459
    9. 'urons' → logprob: -16.5000057220459
    10. ' urs' → logprob: -16.6250057220459

Token 233: ' et' (ID: 859)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7877511382102966
    2. 'import' → logprob: -1.2877511978149414
    3. ',' → logprob: -1.9127511978149414
    4. '
' → logprob: -3.1627511978149414
    5. 'def' → logprob: -3.7877511978149414
    6. '#' → logprob: -4.162751197814941
    7. ',
' → logprob: -4.912751197814941
    8. ',

' → logprob: -4.912751197814941
    9. '```' → logprob: -5.037751197814941
    10. '
 
' → logprob: -5.787751197814941

Token 234: ' ne' (ID: 453)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5223907232284546
    2. 'les' → logprob: -1.6473907232284546
    3. ' les' → logprob: -2.272390842437744
    4. 'non' → logprob: -3.022390842437744
    5. ' non' → logprob: -3.522390842437744
    6. ' leurs' → logprob: -5.272390842437744
    7. ' #' → logprob: -5.397390842437744
    8. 'le' → logprob: -5.772390842437744
    9. 'ne' → logprob: -5.897390842437744
    10. 's' → logprob: -5.897390842437744

Token 235: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011027427390217781
    2. '#' → logprob: -5.0110273361206055
    3. ' sont' → logprob: -6.0110273361206055
    4. 'ont' → logprob: -6.8860273361206055
    5. 'pas' → logprob: -7.8860273361206055
    6. 'pe' → logprob: -9.386027336120605
    7. ' #' → logprob: -9.511027336120605
    8. ''ont' → logprob: -9.761027336120605
    9. ''s' → logprob: -10.636027336120605
    10. ' ' → logprob: -10.761027336120605

Token 236: ' jamais' (ID: 23077)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.12474487721920013
    2. ' pas' → logprob: -2.2497448921203613
    3. ' jamais' → logprob: -4.499744892120361
    4. 'connect' → logprob: -8.124744415283203
    5. 'jam' → logprob: -8.249744415283203
    6. ' donc' → logprob: -9.749744415283203
    7. ' connect' → logprob: -10.874744415283203
    8. ' reli' → logprob: -10.874744415283203
    9. ' ' → logprob: -11.749744415283203
    10. 'conn' → logprob: -11.874744415283203

Token 237: ' internes' (ID: 183434)
  Prédit: 'fusion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fusion' → logprob: -0.09105771034955978
    2. 'mod' → logprob: -3.466057777404785
    3. 'connect' → logprob: -3.466057777404785
    4. ' fusion' → logprob: -4.216057777404785
    5. 'com' → logprob: -6.466057777404785
    6. 'comp' → logprob: -6.841057777404785
    7. 'conn' → logprob: -6.966057777404785
    8. 'fus' → logprob: -7.341057777404785
    9. 'conc' → logprob: -7.466057777404785
    10. 'mer' → logprob: -7.591057777404785

Token 238: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6773316264152527
    2. '

' → logprob: -1.1773316860198975
    3. '
' → logprob: -2.4273316860198975
    4. 'import' → logprob: -2.5523316860198975
    5. '
 
' → logprob: -5.177331447601318
    6. '```' → logprob: -5.677331447601318
    7. '\' → logprob: -6.677331447601318
    8. '\n' → logprob: -6.677331447601318
    9. '

' → logprob: -7.177331447601318
    10. '
' → logprob: -7.177331447601318

Token 239: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.487773060798645
    2. '
' → logprob: -1.362773060798645
    3. '

' → logprob: -2.3627729415893555
    4. 'import' → logprob: -4.3627729415893555
    5. '\' → logprob: -5.2377729415893555
    6. ' 

' → logprob: -5.7377729415893555
    7. '\n' → logprob: -5.9877729415893555
    8. '
 
' → logprob: -5.9877729415893555
    9. ' 
' → logprob: -6.2377729415893555
    10. '```' → logprob: -6.4877729415893555

Token 240: ' Les' (ID: 7029)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09015758335590363
    2. 'import' → logprob: -3.3401575088500977
    3. '
' → logprob: -3.5901575088500977
    4. '

' → logprob: -5.340157508850098
    5. ' 
' → logprob: -5.590157508850098
    6. '\' → logprob: -5.715157508850098
    7. '#' → logprob: -6.340157508850098
    8. ' def' → logprob: -6.340157508850098
    9. '\n' → logprob: -6.590157508850098
    10. ' 

' → logprob: -7.215157508850098

Token 241: ' noe' (ID: 49921)
  Prédit: ' internes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' internes' → logprob: -1.6189208030700684
    2. ' ' → logprob: -1.7439208030700684
    3. ' noe' → logprob: -1.8689208030700684
    4. ' #' → logprob: -2.7439208030700684
    5. 'intern' → logprob: -2.8689208030700684
    6. 'n' → logprob: -2.9939208030700684
    7. '#' → logprob: -3.1189208030700684
    8. ' switches' → logprob: -3.2439208030700684
    9. 'inter' → logprob: -3.2439208030700684
    10. ' espaces' → logprob: -3.3689208030700684

Token 242: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.0009115827269852161
    2. 'ud' → logprob: -7.500911712646484
    3. 'ds' → logprob: -8.500911712646484
    4. ' uds' → logprob: -9.500911712646484
    5. 'u' → logprob: -10.625911712646484
    6. '#' → logprob: -11.000911712646484
    7. 's' → logprob: -11.250911712646484
    8. 'd' → logprob: -11.500911712646484
    9. '```' → logprob: -12.625911712646484
    10. 'e' → logprob: -13.125911712646484

Token 243: ' internes' (ID: 183434)
  Prédit: ' internes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' internes' → logprob: -0.25504249334335327
    2. 'intern' → logprob: -1.505042552947998
    3. ' intern' → logprob: -6.255042552947998
    4. '_inter' → logprob: -8.00504207611084
    5. ' internos' → logprob: -8.13004207611084
    6. 'inter' → logprob: -9.00504207611084
    7. ' interne' → logprob: -9.13004207611084
    8. ' interna' → logprob: -9.25504207611084
    9. '_in' → logprob: -10.13004207611084
    10. ' ' → logprob: -10.25504207611084

Token 244: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.5535134673118591
    2. ' (' → logprob: -2.053513526916504
    3. 's' → logprob: -2.553513526916504
    4. '#' → logprob: -2.803513526916504
    5. ' #' → logprob: -2.928513526916504
    6. ' =' → logprob: -3.178513526916504
    7. ' de' → logprob: -4.053513526916504
    8. ' internes' → logprob: -4.428513526916504
    9. '<|end|>' → logprob: -5.053513526916504
    10. ' ' → logprob: -5.178513526916504

Token 245: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.36676186323165894
    2. ' des' → logprob: -2.1167619228363037
    3. 'les' → logprob: -2.4917619228363037
    4. ' ceux' → logprob: -2.6167619228363037
    5. ' toujours' → logprob: -4.741761684417725
    6. ' représent' → logprob: -5.116761684417725
    7. 'des' → logprob: -5.241761684417725
    8. ' form' → logprob: -5.991761684417725
    9. ' cré' → logprob: -5.991761684417725
    10. 'cré' → logprob: -6.366761684417725

Token 246: ' switch' (ID: 6160)
  Prédit: ' switches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' switches' → logprob: -0.22075913846492767
    2. 'switch' → logprob: -2.345759153366089
    3. ' clusters' → logprob: -2.720759153366089
    4. ' switch' → logprob: -4.22075891494751
    5. 'clusters' → logprob: -4.47075891494751
    6. '"' → logprob: -5.72075891494751
    7. ' "' → logprob: -5.72075891494751
    8. ' ' → logprob: -7.22075891494751
    9. ' cluster' → logprob: -7.84575891494751
    10. ' ' → logprob: -8.220759391784668

Token 247: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002204378368332982
    2. 'es' → logprob: -6.627204418182373
    3. '_' → logprob: -7.377204418182373
    4. '_s' → logprob: -8.877203941345215
    5. ' s' → logprob: -10.002203941345215
    6. ')' → logprob: -10.002203941345215
    7. ' _' → logprob: -11.627203941345215
    8. 'e' → logprob: -12.752203941345215
    9. ' ' → logprob: -13.127203941345215
    10. ' )' → logprob: -13.627203941345215

Token 248: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6693517565727234
    2. 'import' → logprob: -1.6693518161773682
    3. '

' → logprob: -1.7943518161773682
    4. '
' → logprob: -2.794351816177368
    5. '#' → logprob: -3.919351816177368
    6. ':' → logprob: -4.169351577758789
    7. ',' → logprob: -4.419351577758789
    8. '.' → logprob: -5.169351577758789
    9. '\' → logprob: -5.294351577758789
    10. 's' → logprob: -6.169351577758789

Token 249: ' ont' (ID: 4930)
  Prédit: ' ont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ont' → logprob: -0.5147600173950195
    2. '#' → logprob: -1.2647600173950195
    3. 'ont' → logprob: -2.8897600173950195
    4. ' représentent' → logprob: -3.5147600173950195
    5. ' #' → logprob: -4.6397600173950195
    6. 's' → logprob: -5.1397600173950195
    7. ' sont' → logprob: -5.3897600173950195
    8. ' poss' → logprob: -5.5147600173950195
    9. ' donc' → logprob: -6.5147600173950195
    10. ' les' → logprob: -6.6397600173950195

Token 250: ' donc' (ID: 14206)
  Prédit: ' toujours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' toujours' → logprob: -0.4483560621738434
    2. ' au' → logprob: -1.323356032371521
    3. ' ' → logprob: -3.3233561515808105
    4. 'au' → logprob: -4.0733561515808105
    5. 'de' → logprob: -4.3233561515808105
    6. ' un' → logprob: -4.9483561515808105
    7. ' une' → logprob: -5.3233561515808105
    8. ' généralement' → logprob: -5.6983561515808105
    9. ' always' → logprob: -5.6983561515808105
    10. 'tou' → logprob: -5.6983561515808105

Token 251: ' un' (ID: 537)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.368201345205307
    2. ' au' → logprob: -1.9932013750076294
    3. 'de' → logprob: -2.11820125579834
    4. ' toujours' → logprob: -3.61820125579834
    5. 'tou' → logprob: -4.24320125579834
    6. 'un' → logprob: -5.49320125579834
    7. ' forcément' → logprob: -6.49320125579834
    8. ' un' → logprob: -6.86820125579834
    9. 'always' → logprob: -6.86820125579834
    10. ' ' → logprob: -7.61820125579834

Token 252: ' degré' (ID: 169072)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6373909115791321
    2. ' degré' → logprob: -0.7623909115791321
    3. 'degree' → logprob: -6.637391090393066
    4. ' de' → logprob: -7.387391090393066
    5. ' degree' → logprob: -7.387391090393066
    6. ' espace' → logprob: -7.512391090393066
    7. ' nombre' → logprob: -8.137391090393066
    8. 'deg' → logprob: -8.262391090393066
    9. 'd' → logprob: -8.262391090393066
    10. ' degr' → logprob: -9.137391090393066

Token 253: ' >=' (ID: 5064)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.312746524810791
    2. '=' → logprob: -2.687746524810791
    3. ' =' → logprob: -3.062746524810791
    4. ' de' → logprob: -3.312746524810791
    5. 'au' → logprob: -3.437746524810791
    6. '>=' → logprob: -3.937746524810791
    7. ' >=' → logprob: -4.687746524810791
    8. '   ' → logprob: -4.687746524810791
    9. ' minimal' → logprob: -5.187746524810791
    10. ' minimum' → logprob: -5.187746524810791

Token 254: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05509643629193306
    2. '3' → logprob: -3.305096387863159
    3. ' ' → logprob: -4.430096626281738
    4. '1' → logprob: -5.305096626281738
    5. '0' → logprob: -11.430096626281738
    6. '   ' → logprob: -11.680096626281738
    7. '```' → logprob: -13.055096626281738
    8. '  ' → logprob: -13.180096626281738
    9. ' ' → logprob: -13.430096626281738
    10. '4' → logprob: -13.742596626281738

Token 255: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16362202167510986
    2. '3' → logprob: -1.9136220216751099
    3. ' ' → logprob: -6.16362190246582
    4. '1' → logprob: -6.66362190246582
    5. '```' → logprob: -12.53862190246582
    6. '   ' → logprob: -12.91362190246582
    7. '0' → logprob: -13.28862190246582
    8. '

' → logprob: -14.16362190246582
    9. '  ' → logprob: -14.85112190246582
    10. '4' → logprob: -15.10112190246582

Token 256: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2280275672674179
    2. '

' → logprob: -2.103027582168579
    3. '
' → logprob: -2.603027582168579
    4. '\' → logprob: -6.10302734375
    5. 'import' → logprob: -6.22802734375
    6. '\n' → logprob: -6.72802734375
    7. '
 
' → logprob: -6.85302734375
    8. ' def' → logprob: -8.10302734375
    9. '


' → logprob: -8.72802734375
    10. ' 

' → logprob: -8.85302734375

Token 257: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.674034059047699
    2. '
' → logprob: -1.4240341186523438
    3. '

' → logprob: -1.4240341186523438
    4. '
 
' → logprob: -6.174034118652344
    5. '\n' → logprob: -6.299034118652344
    6. ' def' → logprob: -6.674034118652344
    7. '\' → logprob: -6.799034118652344
    8. '


' → logprob: -7.424034118652344
    9. '```' → logprob: -7.674034118652344
    10. '
' → logprob: -8.049034118652344

Token 258: ' Chaque' (ID: 94758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43746957182884216
    2. '
' → logprob: -1.4374696016311646
    3. '

' → logprob: -2.187469482421875
    4. '
 
' → logprob: -6.062469482421875
    5. 'import' → logprob: -7.437469482421875
    6. '


' → logprob: -7.812469482421875
    7. '\' → logprob: -8.562469482421875
    8. '\n' → logprob: -8.562469482421875
    9. '
' → logprob: -8.687469482421875
    10. ' 
 
' → logprob: -8.937469482421875

Token 259: ' cluster' (ID: 19723)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23425179719924927
    2. ' _' → logprob: -2.1092517375946045
    3. ' cluster' → logprob: -2.8592517375946045
    4. ' ' → logprob: -4.734251976013184
    5. 'cluster' → logprob: -4.984251976013184
    6. '_cluster' → logprob: -5.359251976013184
    7. 'n' → logprob: -5.859251976013184
    8. ' noe' → logprob: -6.484251976013184
    9. ' switch' → logprob: -7.359251976013184
    10. ' ' → logprob: -7.359251976013184

Token 260: ' fusion' (ID: 48115)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2061668038368225
    2. '_' → logprob: -2.7061667442321777
    3. 'est' → logprob: -2.9561667442321777
    4. ' =' → logprob: -4.331166744232178
    5. ' a' → logprob: -4.331166744232178
    6. ' contient' → logprob: -4.706166744232178
    7. ' représente' → logprob: -4.831166744232178
    8. 's' → logprob: -4.956166744232178
    9. ' ' → logprob: -6.206166744232178
    10. '_est' → logprob: -6.581166744232178

Token 261: 'né' (ID: 10149)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.402069330215454
    2. 's' → logprob: -1.777069330215454
    3. ' est' → logprob: -2.027069330215454
    4. ')' → logprob: -2.402069330215454
    5. ' ' → logprob: -3.402069330215454
    6. 'né' → logprob: -3.402069330215454
    7. 'ée' → logprob: -3.527069330215454
    8. 'e' → logprob: -3.652069330215454
    9. ' constitué' → logprob: -3.652069330215454
    10. ' s' → logprob: -3.902069330215454

Token 262: ' correspond' (ID: 11095)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.504304051399231
    2. ' contient' → logprob: -2.3793039321899414
    3. ' a' → logprob: -2.5043039321899414
    4. '_' → logprob: -3.0043039321899414
    5. ' représente' → logprob: -3.1293039321899414
    6. 'est' → logprob: -3.1293039321899414
    7. ' possède' → logprob: -3.5043039321899414
    8. ' ' → logprob: -4.129303932189941
    9. ' ' → logprob: -4.879303932189941
    10. ' correspond' → logprob: -5.629303932189941

Token 263: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.01177982334047556
    2. 'à' → logprob: -5.63677978515625
    3. '_' → logprob: -5.76177978515625
    4. ' a' → logprob: -6.88677978515625
    5. ' ' → logprob: -6.88677978515625
    6. ' au' → logprob: -6.88677978515625
    7. ' =' → logprob: -7.76177978515625
    8. ''à' → logprob: -8.13677978515625
    9. '_a' → logprob: -8.76177978515625
    10. 's' → logprob: -9.01177978515625

Token 264: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3878571093082428
    2. 'un' → logprob: -1.1378570795059204
    3. ' une' → logprob: -7.262856960296631
    4. 'une' → logprob: -8.387857437133789
    5. ' ' → logprob: -10.512857437133789
    6. ''un' → logprob: -11.637857437133789
    7. ' ' → logprob: -11.887857437133789
    8. 'n' → logprob: -12.887857437133789
    9. '_un' → logprob: -13.262857437133789
    10. '	un' → logprob: -13.262857437133789

Token 265: ' switch' (ID: 6160)
  Prédit: ' switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' switch' → logprob: -0.17508304119110107
    2. ' noe' → logprob: -2.0500831604003906
    3. 'switch' → logprob: -4.300083160400391
    4. ' no' → logprob: -5.175083160400391
    5. ' node' → logprob: -5.800083160400391
    6. 'no' → logprob: -6.175083160400391
    7. ' n' → logprob: -6.675083160400391
    8. 'n' → logprob: -6.925083160400391
    9. ' internal' → logprob: -7.050083160400391
    10. ' nouveau' → logprob: -7.175083160400391

Token 266: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19880147278308868
    2. '
' → logprob: -2.5738015174865723
    3. ':' → logprob: -3.4488015174865723
    4. 'import' → logprob: -3.8238015174865723
    5. '

' → logprob: -4.198801517486572
    6. ',' → logprob: -4.573801517486572
    7. '#' → logprob: -5.448801517486572
    8. ')' → logprob: -5.948801517486572
    9. '<|end|>' → logprob: -6.073801517486572
    10. 's' → logprob: -6.448801517486572

Token 267: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0571342371404171
    2. '
' → logprob: -2.9321341514587402
    3. '

' → logprob: -7.05713415145874
    4. ':' → logprob: -8.182134628295898
    5. '
' → logprob: -8.432134628295898
    6. 'import' → logprob: -8.807134628295898
    7. '```' → logprob: -9.182134628295898
    8. ' def' → logprob: -9.557134628295898
    9. '
 
' → logprob: -9.557134628295898
    10. '#' → logprob: -9.557134628295898

Token 268: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008856709115207195
    2. '
' → logprob: -5.133856773376465
    3. ' def' → logprob: -7.133856773376465
    4. '

' → logprob: -7.133856773376465
    5. ' 
' → logprob: -8.133856773376465
    6. 'import' → logprob: -8.133856773376465
    7. ' 

' → logprob: -8.758856773376465
    8. '
 
' → logprob: -8.883856773376465
    9. ' 
 
' → logprob: -9.008856773376465
    10. '\' → logprob: -9.133856773376465

Token 269: ' résultat' (ID: 62556)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8642994165420532
    2. ' code' → logprob: -1.3642994165420532
    3. '#' → logprob: -2.7392992973327637
    4. ' def' → logprob: -2.8642992973327637
    5. 's' → logprob: -2.8642992973327637
    6. ' #' → logprob: -3.7392992973327637
    7. ' ' → logprob: -3.8642992973327637
    8. ' next' → logprob: -3.9892992973327637
    9. '_' → logprob: -3.9892992973327637
    10. ' cluster' → logprob: -4.114299297332764

Token 270: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024733472615480423
    2. 's' → logprob: -4.399733543395996
    3. '=' → logprob: -5.024733543395996
    4. '_' → logprob: -6.274733543395996
    5. ' s' → logprob: -6.774733543395996
    6. ' ' → logprob: -7.024733543395996
    7. ' est' → logprob: -7.024733543395996
    8. '_s' → logprob: -9.649733543395996
    9. ' is' → logprob: -9.774733543395996
    10. '[' → logprob: -9.774733543395996

Token 271: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.47382915019989014
    2. ' ' → logprob: -2.3488292694091797
    3. '[]' → logprob: -2.8488292694091797
    4. ' []' → logprob: -3.0988292694091797
    5. ' un' → logprob: -3.2238292694091797
    6. '[' → logprob: -3.5988292694091797
    7. ' [' → logprob: -3.7238292694091797
    8. ' la' → logprob: -3.8488292694091797
    9. 'une' → logprob: -4.22382926940918
    10. ' a' → logprob: -4.59882926940918

Token 272: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5088068842887878
    2. ' liste' → logprob: -1.6338069438934326
    3. 'liste' → logprob: -2.7588069438934326
    4. '[' → logprob: -2.8838069438934326
    5. 'list' → logprob: -2.8838069438934326
    6. ' [' → logprob: -4.6338067054748535
    7. ' sorted' → logprob: -4.6338067054748535
    8. 'sorted' → logprob: -6.1338067054748535
    9. ' ' → logprob: -6.3838067054748535
    10. 's' → logprob: -7.2588067054748535

Token 273: ' (' (ID: 350)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.028138339519500732
    2. '[' → logprob: -4.403138160705566
    3. 'des' → logprob: -4.528138160705566
    4. ' de' → logprob: -6.403138160705566
    5. '_des' → logprob: -7.028138160705566
    6. ' of' → logprob: -7.403138160705566
    7. '[]' → logprob: -7.403138160705566
    8. ' d' → logprob: -8.403138160705566
    9. '[::-' → logprob: -9.028138160705566
    10. ''' → logprob: -9.153138160705566

Token 274: 'tri' (ID: 22343)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.640632152557373
    2. ')' → logprob: -1.765632152557373
    3. 'des' → logprob: -1.890632152557373
    4. '[' → logprob: -2.515632152557373
    5. ' )' → logprob: -3.765632152557373
    6. ' de' → logprob: -4.265632152557373
    7. ' of' → logprob: -5.265632152557373
    8. 'd' → logprob: -5.390632152557373
    9. '[]' → logprob: -5.390632152557373
    10. 's' → logprob: -5.515632152557373

Token 275: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.2587839663028717
    2. 'é' → logprob: -2.758784055709839
    3. 'e' → logprob: -2.883784055709839
    4. ']' → logprob: -3.133784055709839
    5. ' des' → logprob: -3.508784055709839
    6. ')' → logprob: -4.50878381729126
    7. ' ]' → logprob: -4.88378381729126
    8. '[' → logprob: -5.50878381729126
    9. '[]' → logprob: -5.75878381729126
    10. ' )' → logprob: -5.88378381729126

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0831524208188057
    2. ' des' → logprob: -3.0831525325775146
    3. ' )' → logprob: -3.7081525325775146
    4. '[' → logprob: -5.5831522941589355
    5. 'des' → logprob: -5.8331522941589355
    6. ']' → logprob: -7.3331522941589355
    7. '(sorted' → logprob: -7.9581522941589355
    8. '(' → logprob: -8.208152770996094
    9. ' ' → logprob: -8.333152770996094
    10. 'sorted' → logprob: -8.708152770996094

Token 277: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4552435278892517
    2. 'des' → logprob: -1.3302435874938965
    3. '_des' → logprob: -3.3302435874938965
    4. ')' → logprob: -3.7052435874938965
    5. '[' → logprob: -3.7052435874938965
    6. ' of' → logprob: -5.2052435874938965
    7. 'def' → logprob: -6.7052435874938965
    8. ']' → logprob: -6.7052435874938965
    9. '_' → logprob: -6.8302435874938965
    10. '```' → logprob: -7.0802435874938965

Token 278: ' degrés' (ID: 195297)
  Prédit: ' degrés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degrés' → logprob: -0.5890086889266968
    2. 'de' → logprob: -0.8390086889266968
    3. 'degrees' → logprob: -5.339008808135986
    4. ' degrees' → logprob: -5.714008808135986
    5. 'deg' → logprob: -6.464008808135986
    6. ' degr' → logprob: -6.714008808135986
    7. ' deg' → logprob: -7.464008808135986
    8. ' degré' → logprob: -7.839008808135986
    9. '_de' → logprob: -7.964008808135986
    10. '[' → logprob: -8.839008331298828

Token 279: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: ' ces' (ID: 10532)
  Prédit: ' tous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.013460424728691578
    2. 't' → logprob: -5.513460636138916
    3. ' l' → logprob: -6.138460636138916
    4. ' chaque' → logprob: -6.888460636138916
    5. ' switch' → logprob: -6.888460636138916
    6. ' ces' → logprob: -7.013460636138916
    7. 'ces' → logprob: -7.263460636138916
    8. 'l' → logprob: -7.638460636138916
    9. ' ' → logprob: -7.638460636138916
    10. ' ' → logprob: -7.888460636138916

Token 281: ' noe' (ID: 49921)
  Prédit: ' noe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' noe' → logprob: -0.3011299967765808
    2. ' switches' → logprob: -1.6761300563812256
    3. ' clusters' → logprob: -3.9261300563812256
    4. ' espaces' → logprob: -4.6761298179626465
    5. 'switch' → logprob: -4.6761298179626465
    6. ' switch' → logprob: -4.8011298179626465
    7. ' ' → logprob: -4.9261298179626465
    8. ' ' → logprob: -5.1761298179626465
    9. ' nodes' → logprob: -5.1761298179626465
    10. 'no' → logprob: -6.5511298179626465

Token 282: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -1.843177233240567e-05
    2. 'ds' → logprob: -11.500018119812012
    3. 'ud' → logprob: -11.875018119812012
    4. 'e' → logprob: -14.375018119812012
    5. 's' → logprob: -15.250018119812012
    6. 'd' → logprob: -16.125019073486328
    7. ' uds' → logprob: -16.250019073486328
    8. 'ux' → logprob: -16.625019073486328
    9. 'nds' → logprob: -17.000019073486328
    10. '#' → logprob: -17.125019073486328

Token 283: ' internes' (ID: 183434)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5550339818000793
    2. '_' → logprob: -1.1800339221954346
    3. ')' → logprob: -2.9300339221954346
    4. '[' → logprob: -4.055034160614014
    5. 'import' → logprob: -4.180034160614014
    6. '<|end|>' → logprob: -5.430034160614014
    7. ',' → logprob: -5.680034160614014
    8. '_s' → logprob: -5.805034160614014
    9. '_tokens' → logprob: -5.805034160614014
    10. 'def' → logprob: -6.305034160614014

Token 284: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8035141229629517
    2. ':' → logprob: -1.5535141229629517
    3. '
' → logprob: -1.8035141229629517
    4. 'import' → logprob: -3.178514003753662
    5. '

' → logprob: -3.303514003753662
    6. '.' → logprob: -4.053514003753662
    7. '<|end|>' → logprob: -4.053514003753662
    8. ',' → logprob: -4.428514003753662
    9. '\n' → logprob: -4.678514003753662
    10. '\' → logprob: -4.678514003753662

Token 285: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.049625180661678314
    2. '
' → logprob: -3.5496251583099365
    3. '

' → logprob: -4.049625396728516
    4. 'import' → logprob: -6.174625396728516
    5. '
 
' → logprob: -10.049625396728516
    6. '


' → logprob: -10.674625396728516
    7. 'class' → logprob: -10.799625396728516
    8. '\' → logprob: -11.174625396728516
    9. '```' → logprob: -11.424625396728516
    10. ' 
' → logprob: -11.424625396728516

Token 286: ' Node' (ID: 10882)
  Prédit: ' Cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Cluster' → logprob: -0.4144580066204071
    2. ' Tree' → logprob: -2.0394580364227295
    3. ' Node' → logprob: -3.1644580364227295
    4. ' U' → logprob: -3.2894580364227295
    5. 'UP' → logprob: -3.2894580364227295
    6. ' UP' → logprob: -3.4144580364227295
    7. ' Up' → logprob: -3.9144580364227295
    8. 'Cluster' → logprob: -3.9144580364227295
    9. ' Union' → logprob: -4.16445779800415
    10. 'Node' → logprob: -6.28945779800415

Token 287: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001402621390298009
    2. ' :' → logprob: -6.626402854919434
    3. '(' → logprob: -9.751402854919434
    4. '():' → logprob: -11.376402854919434
    5. ':
' → logprob: -12.251402854919434
    6. '(object' → logprob: -14.001402854919434
    7. ' (' → logprob: -15.251402854919434
    8. '：' → logprob: -15.876402854919434
    9. '(":' → logprob: -15.876402854919434
    10. ':**' → logprob: -15.876402854919434

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9033235311508179
    2. ':' → logprob: -1.6533235311508179
    3. ' :' → logprob: -1.6533235311508179
    4. ' ' → logprob: -1.9033235311508179
    5. '    ' → logprob: -3.4033236503601074
    6. ' :
' → logprob: -5.153323650360107
    7. ' def' → logprob: -5.403323650360107
    8. ' (' → logprob: -5.403323650360107
    9. '(' → logprob: -5.528323650360107
    10. '  ' → logprob: -6.403323650360107

Token 289: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4611603617668152
    2. 'def' (adapté à ' def') → logprob: -1.08616042137146
    3. ' __' → logprob: -3.83616042137146
    4. '__' → logprob: -4.586160182952881
    5. '   ' → logprob: -9.586160659790039
    6. ' ' → logprob: -10.086160659790039
    7. ' ' → logprob: -11.086160659790039
    8. ':' → logprob: -11.211160659790039
    9. ':def' → logprob: -11.211160659790039
    10. ' =' → logprob: -12.711160659790039

Token 290: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.05753316730260849
    2. ' init' → logprob: -3.3075332641601562
    3. ' __' → logprob: -4.307533264160156
    4. '__' → logprob: -5.307533264160156
    5. 'class' → logprob: -7.932533264160156
    6. '_init' → logprob: -8.307533264160156
    7. 'name' → logprob: -8.682533264160156
    8. '(init' → logprob: -10.932533264160156
    9. ' name' → logprob: -11.557533264160156
    10. 'int' → logprob: -11.557533264160156

Token 291: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.375
    3. 'inite' → logprob: -19.125
    4. 'ini' → logprob: -20.375
    5. 'int' → logprob: -20.5
    6. 'class' → logprob: -20.625
    7. '	init' → logprob: -21.25
    8. 'in' → logprob: -21.5
    9. '(init' → logprob: -21.75
    10. 'initi' → logprob: -22.375

Token 292: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12874282896518707
    2. '__(' → logprob: -2.1287429332733154
    3. ' (' → logprob: -6.878742694854736
    4. '(' → logprob: -7.253742694854736
    5. '__' → logprob: -9.753743171691895
    6. 'self' → logprob: -11.753743171691895
    7. '__(
' → logprob: -12.253743171691895
    8. ' self' → logprob: -13.378743171691895
    9. '__((' → logprob: -13.753743171691895
    10. '_(' → logprob: -14.128743171691895

Token 293: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078401252627373
    2. ' self' → logprob: -5.504078388214111
    3. '	self' → logprob: -18.129077911376953
    4. ')' → logprob: -18.254077911376953
    5. '   ' → logprob: -18.379077911376953
    6. ',' → logprob: -18.629077911376953
    7. ' ' → logprob: -18.879077911376953
    8. '(self' → logprob: -19.129077911376953
    9. '    ' → logprob: -20.629077911376953
    10. 'sel' → logprob: -21.129077911376953

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3245435357093811
    2. ' ,' → logprob: -1.3245434761047363
    3. 'self' → logprob: -4.574543476104736
    4. ' self' → logprob: -8.199543952941895
    5. ' )' → logprob: -8.199543952941895
    6. ')' → logprob: -9.449543952941895
    7. ' ):' → logprob: -9.574543952941895
    8. '):' → logprob: -9.574543952941895
    9. ' ' → logprob: -10.699543952941895
    10. '_,' → logprob: -10.949543952941895

Token 295: ' idx' (ID: 14016)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.8035382628440857
    2. ' id' → logprob: -2.0535383224487305
    3. ' leaves' → logprob: -2.5535383224487305
    4. 'members' → logprob: -2.8035383224487305
    5. 'cluster' → logprob: -3.1785383224487305
    6. ' members' → logprob: -3.3035383224487305
    7. 'elements' → logprob: -3.5535383224487305
    8. 'leaf' → logprob: -3.9285383224487305
    9. 'le' → logprob: -4.0535383224487305
    10. 'clusters' → logprob: -4.1785383224487305

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18405134975910187
    2. '):' → logprob: -1.8090513944625854
    3. '):
' → logprob: -6.059051513671875
    4. ' ,' → logprob: -6.434051513671875
    5. ' ):' → logprob: -8.059051513671875
    6. '=' → logprob: -11.684051513671875
    7. '=None' → logprob: -11.809051513671875
    8. '   ' → logprob: -12.059051513671875
    9. '):
' → logprob: -13.184051513671875
    10. ':' → logprob: -13.309051513671875

Token 297: ' left' (ID: 3561)
  Prédit: ' leaves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaves' → logprob: -0.6512426733970642
    2. ' children' → logprob: -1.151242733001709
    3. 'children' → logprob: -3.026242733001709
    4. ' neighbors' → logprob: -3.401242733001709
    5. ' members' → logprob: -4.151242733001709
    6. ' left' → logprob: -4.526242733001709
    7. ' name' → logprob: -4.651242733001709
    8. ' nodes' → logprob: -4.776242733001709
    9. 'neighbors' → logprob: -4.901242733001709
    10. ' size' → logprob: -5.026242733001709

Token 298: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.055547840893268585
    2. ',' → logprob: -3.3055479526519775
    3. '=' → logprob: -4.055547714233398
    4. ' =' → logprob: -10.930547714233398
    5. 'None' → logprob: -12.555547714233398
    6. ' None' → logprob: -12.555547714233398
    7. ' ,' → logprob: -13.430547714233398
    8. ',None' → logprob: -13.680547714233398
    9. ')' → logprob: -15.555547714233398
    10. '):' → logprob: -16.3055477142334

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020628207130357623
    2. ' ,' → logprob: -8.500205993652344
    3. ',left' → logprob: -13.250205993652344
    4. '   ' → logprob: -14.250205993652344
    5. ',right' → logprob: -15.500205993652344
    6. ',
' → logprob: -16.750205993652344
    7. ',parent' → logprob: -17.500205993652344
    8. ')' → logprob: -17.500205993652344
    9. '‌,' → logprob: -17.625205993652344
    10. ',None' → logprob: -17.875205993652344

Token 300: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3868798017501831
    2. ' right' → logprob: -1.136879801750183
    3. '   ' → logprob: -11.886879920959473
    4. '	right' → logprob: -14.261879920959473
    5. ' ' → logprob: -14.761879920959473
    6. ',right' → logprob: -15.761879920959473
    7. '    ' → logprob: -16.011878967285156
    8. 'rig' → logprob: -16.011878967285156
    9. '  ' → logprob: -16.261878967285156
    10. 'parent' → logprob: -16.386878967285156

Token 301: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.042571112513542175
    2. ',' → logprob: -3.2925710678100586
    3. '):
' → logprob: -5.542571067810059
    4. '=None' → logprob: -7.667571067810059
    5. ')' → logprob: -9.792571067810059
    6. ' ):' → logprob: -10.417571067810059
    7. '=' → logprob: -11.167571067810059
    8. '<|end|>' → logprob: -12.042571067810059
    9. ' ,' → logprob: -12.167571067810059
    10. '   ' → logprob: -12.292571067810059

Token 302: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03284855931997299
    2. ',' → logprob: -3.907848596572876
    3. '):
' → logprob: -4.407848358154297
    4. '   ' → logprob: -10.657848358154297
    5. ' ):' → logprob: -11.157848358154297
    6. ')' → logprob: -11.907848358154297
    7. '):
' → logprob: -13.282848358154297
    8. ' ,' → logprob: -13.657848358154297
    9. '       ' → logprob: -14.282848358154297
    10. '):

' → logprob: -14.907848358154297

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003281944082118571
    2. 'self' → logprob: -8.375328063964844
    3. ' self' → logprob: -9.375328063964844
    4. ',' → logprob: -12.250328063964844
    5. ')' → logprob: -12.750328063964844
    6. '):' → logprob: -14.000328063964844
    7. '           ' → logprob: -14.250328063964844
    8. '   ' → logprob: -14.375328063964844
    9. ' ' → logprob: -14.375328063964844
    10. ' None' → logprob: -14.875328063964844

Token 304: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3872545659542084
    2. 'self' (adapté à ' self') → logprob: -1.1372545957565308
    3. '       ' → logprob: -7.88725471496582
    4. '   ' → logprob: -12.38725471496582
    5. '	self' → logprob: -12.63725471496582
    6. ' ' → logprob: -15.13725471496582
    7. ' ' → logprob: -16.26225471496582
    8. 'idx' → logprob: -17.26225471496582
    9. '	' → logprob: -17.38725471496582
    10. ' idx' → logprob: -17.38725471496582

Token 305: '.idx' (ID: 119077)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1592312902212143
    2. '=' → logprob: -2.284231185913086
    3. '.' → logprob: -4.409231185913086
    4. ' idx' → logprob: -4.659231185913086
    5. '_idx' → logprob: -4.784231185913086
    6. '.idx' → logprob: -4.909231185913086
    7. ' .' → logprob: -5.534231185913086
    8. ' ' → logprob: -6.534231185913086
    9. 'idx' → logprob: -6.909231185913086
    10. ',' → logprob: -7.534231185913086

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002611368894577
    2. '=' → logprob: -2.3502612113952637
    3. ' ' → logprob: -10.225260734558105
    4. ',' → logprob: -11.475260734558105
    5. '<|end|>' → logprob: -13.225260734558105
    6. ' ,' → logprob: -13.350260734558105
    7. '=None' → logprob: -13.600260734558105
    8. '        ' → logprob: -14.100260734558105
    9. '    ' → logprob: -14.600260734558105
    10. ')' → logprob: -14.725260734558105

Token 307: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.38687559962272644
    2. ' idx' → logprob: -1.1368756294250488
    3. '	idx' → logprob: -12.51187515258789
    4. '(idx' → logprob: -14.38687515258789
    5. '[idx' → logprob: -15.63687515258789
    6. '_idx' → logprob: -16.63687515258789
    7. '   ' → logprob: -16.76187515258789
    8. '.idx' → logprob: -18.01187515258789
    9. ' ' → logprob: -18.38687515258789
    10. '0' → logprob: -18.88687515258789

Token 308: '          ' (ID: 3550)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008489366737194359
    2. 'self' → logprob: -7.875848770141602
    3. '
' → logprob: -8.000848770141602
    4. '        
' → logprob: -10.125848770141602
    5. '<|end|>' → logprob: -10.375848770141602
    6. ',' → logprob: -10.375848770141602
    7. ' self' → logprob: -11.000848770141602
    8. ',
' → logprob: -12.750848770141602
    9. ' 
' → logprob: -13.250848770141602
    10. '   ' → logprob: -13.500848770141602

Token 309: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03853609785437584
    2. '
' → logprob: -3.6635360717773438
    3. '<|end|>' → logprob: -4.663536071777344
    4. 'self' → logprob: -6.538536071777344
    5. '        
' → logprob: -7.538536071777344
    6. ',' → logprob: -8.288536071777344
    7. '  
' → logprob: -8.413536071777344
    8. ' 
' → logprob: -9.288536071777344
    9. ' ' → logprob: -10.038536071777344
    10. '<|end|>' → logprob: -10.538536071777344

Token 310: ' ident' (ID: 3951)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3583463728427887
    2. ' self' → logprob: -1.4833463430404663
    3. 'int' → logprob: -3.858346462249756
    4. 'index' → logprob: -4.108346462249756
    5. ' index' → logprob: -4.733346462249756
    6. ' ident' → logprob: -5.108346462249756
    7. 'indice' → logprob: -5.358346462249756
    8. ' int' → logprob: -5.858346462249756
    9. 'idx' → logprob: -5.983346462249756
    10. ' indice' → logprob: -6.483346462249756

Token 311: 'ifiant' (ID: 91447)
  Prédit: 'ifiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiant' → logprob: -0.0034576444886624813
    2. 'ificate' → logprob: -6.378457546234131
    3. 'ité' → logprob: -6.628457546234131
    4. 'if' → logprob: -9.128458023071289
    5. '   ' → logprob: -9.628458023071289
    6. 'fi' → logprob: -10.378458023071289
    7. '  ' → logprob: -10.378458023071289
    8. '#' → logprob: -10.378458023071289
    9. 'ifi' → logprob: -10.503458023071289
    10. '_' → logprob: -10.503458023071289

Token 312: ' unique' (ID: 5746)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04460727423429489
    2. '<|end|>' → logprob: -3.669607162475586
    3. ',' → logprob: -4.169607162475586
    4. '   ' → logprob: -7.044607162475586
    5. ' des' → logprob: -7.794607162475586
    6. '        
' → logprob: -8.294607162475586
    7. '<|end|>' → logprob: -8.794607162475586
    8. ' ,' → logprob: -9.044607162475586
    9. ' du' → logprob: -9.419607162475586
    10. ' ' → logprob: -9.419607162475586

Token 313: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005060956347733736
    2. '<|end|>' → logprob: -5.380061149597168
    3. ',' → logprob: -8.255061149597168
    4. '
' → logprob: -9.130061149597168
    5. '<|end|>' → logprob: -10.505061149597168
    6. '        
' → logprob: -10.880061149597168
    7. '   ' → logprob: -12.130061149597168
    8. ',
' → logprob: -12.630061149597168
    9. 'self' → logprob: -12.755061149597168
    10. '      ' → logprob: -13.130061149597168

Token 314: ' noe' (ID: 49921)
  Prédit: ' noe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' noe' → logprob: -0.2310294210910797
    2. ' node' → logprob: -2.481029510498047
    3. ' n' → logprob: -3.106029510498047
    4. 'node' → logprob: -3.356029510498047
    5. 'n' → logprob: -3.356029510498047
    6. ' cluster' → logprob: -5.481029510498047
    7. 'no' → logprob: -5.856029510498047
    8. 'cluster' → logprob: -7.231029510498047
    9. ' no' → logprob: -8.356029510498047
    10. ' ' → logprob: -10.481029510498047

Token 315: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.0005990233621560037
    2. 'd' → logprob: -8.000598907470703
    3. 'de' → logprob: -9.250598907470703
    4. ' ' → logprob: -10.250598907470703
    5. ' ud' → logprob: -10.250598907470703
    6. ' de' → logprob: -10.500598907470703
    7. 'e' → logprob: -10.625598907470703
    8. 'u' → logprob: -11.125598907470703
    9. 'uds' → logprob: -11.375598907470703
    10. '   ' → logprob: -12.625598907470703

Token 316: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005799580831080675
    2. 'self' → logprob: -8.500579833984375
    3. '<|end|>' → logprob: -8.500579833984375
    4. ',' → logprob: -8.875579833984375
    5. '
' → logprob: -11.375579833984375
    6. ' self' → logprob: -11.500579833984375
    7. '        
' → logprob: -13.000579833984375
    8. ',
' → logprob: -13.250579833984375
    9. '   ' → logprob: -13.625579833984375
    10. ' ' → logprob: -13.625579833984375

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05236596241593361
    2. 'self' → logprob: -3.177366018295288
    3. ' self' → logprob: -4.677365779876709
    4. ',' → logprob: -11.802366256713867
    5. '   ' → logprob: -11.802366256713867
    6. ' ' → logprob: -12.927366256713867
    7. '           ' → logprob: -14.552366256713867
    8. '	self' → logprob: -14.552366256713867
    9. '      ' → logprob: -15.302366256713867
    10. '     ' → logprob: -15.427366256713867

Token 318: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008330758661031723
    2. ' self' → logprob: -4.883330821990967
    3. '       ' → logprob: -7.383330821990967
    4. 'left' → logprob: -9.258330345153809
    5. 'children' → logprob: -12.633330345153809
    6. ' left' → logprob: -13.258330345153809
    7. '   ' → logprob: -13.883330345153809
    8. 'parent' → logprob: -14.633330345153809
    9. '	self' → logprob: -15.008330345153809
    10. 'degree' → logprob: -15.008330345153809

Token 319: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8622716069221497
    2. '.left' → logprob: -0.8622716069221497
    3. ' .' → logprob: -2.862271547317505
    4. '.degree' → logprob: -3.737271547317505
    5. '.name' → logprob: -3.862271547317505
    6. '.val' → logprob: -4.487271785736084
    7. '.space' → logprob: -4.487271785736084
    8. '.le' → logprob: -5.237271785736084
    9. ',' → logprob: -5.487271785736084
    10. '.idx' → logprob: -5.487271785736084

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10597041249275208
    2. ',' → logprob: -2.3559703826904297
    3. ' =' → logprob: -5.35597038269043
    4. '=None' → logprob: -6.98097038269043
    5. ' ,' → logprob: -9.35597038269043
    6. ')' → logprob: -12.35597038269043
    7. ',None' → logprob: -13.48097038269043
    8. ',
' → logprob: -13.48097038269043
    9. '<|end|>' → logprob: -13.60597038269043
    10. '),' → logprob: -14.73097038269043

Token 321: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.07889573276042938
    2. ' left' → logprob: -2.5788958072662354
    3. 'None' → logprob: -12.453895568847656
    4. ' None' → logprob: -13.578895568847656
    5. '	left' → logprob: -14.578895568847656
    6. '(left' → logprob: -16.328895568847656
    7. ' lef' → logprob: -16.953895568847656
    8. '[left' → logprob: -17.453895568847656
    9. '   ' → logprob: -17.703895568847656
    10. ' ' → logprob: -17.703895568847656

Token 322: '        ' (ID: 269)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04734180495142937
    2. ',
' → logprob: -3.797341823577881
    3. '       ' → logprob: -3.797341823577881
    4. '<|end|>' → logprob: -7.297341823577881
    5. '   ' → logprob: -8.422341346740723
    6. ' ,' → logprob: -8.797341346740723
    7. '<|end|>' → logprob: -9.172341346740723
    8. ' ' → logprob: -10.047341346740723
    9. '
' → logprob: -10.172341346740723
    10. '        
' → logprob: -10.172341346740723

Token 323: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055224139243364334
    2. '       ' → logprob: -3.0552241802215576
    3. ',
' → logprob: -5.5552239418029785
    4. '<|end|>' → logprob: -6.1802239418029785
    5. '<|end|>' → logprob: -8.680224418640137
    6. '   ' → logprob: -8.930224418640137
    7. ' ' → logprob: -9.055224418640137
    8. ' ,' → logprob: -9.305224418640137
    9. ')' → logprob: -10.180224418640137
    10. '
' → logprob: -10.680224418640137

Token 324: ' fils' (ID: 56114)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5008734464645386
    2. ' left' → logprob: -1.0008734464645386
    3. 'None' → logprob: -4.000873565673828
    4. ' None' → logprob: -5.500873565673828
    5. 'Node' → logprob: -5.750873565673828
    6. 'right' → logprob: -7.875873565673828
    7. ' Node' → logprob: -8.750873565673828
    8. 'self' → logprob: -9.000873565673828
    9. ' right' → logprob: -9.000873565673828
    10. 'node' → logprob: -10.375873565673828

Token 325: ' gauche' (ID: 58367)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5729849934577942
    2. ',' → logprob: -1.9479849338531494
    3. '   ' → logprob: -2.4479849338531494
    4. '=None' → logprob: -2.6979849338531494
    5. '<|end|>' → logprob: -3.1979849338531494
    6. ' gauche' → logprob: -3.5729849338531494
    7. ' droit' → logprob: -4.4479851722717285
    8. 'right' → logprob: -4.5729851722717285
    9. 'None' → logprob: -4.6979851722717285
    10. ' None' → logprob: -4.9479851722717285

Token 326: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09926886856555939
    2. '       ' → logprob: -2.599268913269043
    3. ',
' → logprob: -3.974268913269043
    4. '<|end|>' → logprob: -7.224268913269043
    5. ' ,' → logprob: -8.349268913269043
    6. '   ' → logprob: -8.349268913269043
    7. '
' → logprob: -9.724268913269043
    8. '        
' → logprob: -10.349268913269043
    9. ' ' → logprob: -11.474268913269043
    10. '<|end|>' → logprob: -11.599268913269043

Token 327: 'cluster' (ID: 39831)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5371111631393433
    2. ' ou' → logprob: -2.037111282348633
    3. ')' → logprob: -2.412111282348633
    4. ' or' → logprob: -2.412111282348633
    5. ' None' → logprob: -2.412111282348633
    6. 'Node' → logprob: -4.787111282348633
    7. ' Node' → logprob: -5.537111282348633
    8. 'ou' → logprob: -6.287111282348633
    9. ' )' → logprob: -6.662111282348633
    10. 'or' → logprob: -8.662111282348633

Token 328: ' fusion' (ID: 48115)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.2287934422492981
    2. ')' → logprob: -2.1037933826446533
    3. ' interne' → logprob: -3.1037933826446533
    4. 'ou' → logprob: -3.9787933826446533
    5. ' or' → logprob: -5.353793621063232
    6. 'inter' → logprob: -5.853793621063232
    7. '   ' → logprob: -5.978793621063232
    8. ',' → logprob: -6.728793621063232
    9. ' internal' → logprob: -6.978793621063232
    10. 'cluster' → logprob: -7.103793621063232

Token 329: 'né' (ID: 10149)
  Prédit: 'né'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'né' → logprob: -0.0016387656796723604
    2. 'née' → logprob: -7.001638889312744
    3. ')' → logprob: -7.501638889312744
    4. 'None' → logprob: -9.876638412475586
    5. 'é' → logprob: -10.251638412475586
    6. '=None' → logprob: -10.626638412475586
    7. 'nés' → logprob: -11.251638412475586
    8. 'nées' → logprob: -11.501638412475586
    9. 'n' → logprob: -11.751638412475586
    10. '   ' → logprob: -11.751638412475586

Token 330: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03217131644487381
    2. ' ou' → logprob: -3.5321712493896484
    3. ')
' → logprob: -6.657171249389648
    4. ',' → logprob: -7.532171249389648
    5. ' )' → logprob: -8.282171249389648
    6. 'ou' → logprob: -8.907171249389648
    7. ')
' → logprob: -9.907171249389648
    8. '),' → logprob: -10.032171249389648
    9. ' or' → logprob: -10.282171249389648
    10. '   ' → logprob: -10.657171249389648

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028648413717746735
    2. ',' → logprob: -8.500286102294922
    3. '   ' → logprob: -9.750286102294922
    4. 'self' → logprob: -10.750286102294922
    5. ',
' → logprob: -14.375286102294922
    6. ' self' → logprob: -14.375286102294922
    7. ' ,' → logprob: -15.000286102294922
    8. '           ' → logprob: -15.000286102294922
    9. '      ' → logprob: -15.125286102294922
    10. '	' → logprob: -15.250286102294922

Token 332: ' self' (ID: 1051)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5298112034797668
    2. ' right' → logprob: -1.029811143875122
    3. 'self' (adapté à ' self') → logprob: -3.029811143875122
    4. ' self' → logprob: -5.279811382293701
    5. '       ' → logprob: -7.154811382293701
    6. '   ' → logprob: -13.279810905456543
    7. '.right' → logprob: -13.779810905456543
    8. 'left' → logprob: -13.779810905456543
    9. ' ' → logprob: -14.029810905456543
    10. ',right' → logprob: -14.029810905456543

Token 333: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.012524725869297981
    2. '.' → logprob: -4.512524604797363
    3. '=' → logprob: -7.637524604797363
    4. 'right' → logprob: -7.762524604797363
    5. '.left' → logprob: -8.762524604797363
    6. ',' → logprob: -9.012524604797363
    7. '=None' → logprob: -9.262524604797363
    8. ' .' → logprob: -9.262524604797363
    9. ' ' → logprob: -10.512524604797363
    10. '   ' → logprob: -10.637524604797363

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014179266057908535
    2. ' =' → logprob: -4.264179229736328
    3. '=None' → logprob: -11.264179229736328
    4. ')' → logprob: -13.764179229736328
    5. ',' → logprob: -14.139179229736328
    6. '=self' → logprob: -15.514179229736328
    7. '=node' → logprob: -15.764179229736328
    8. ' ' → logprob: -16.014179229736328
    9. '   ' → logprob: -16.264179229736328
    10. '=root' → logprob: -16.389179229736328

Token 335: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5759404301643372
    2. ' right' → logprob: -0.8259404301643372
    3. '	right' → logprob: -14.575940132141113
    4. '(right' → logprob: -15.575940132141113
    5. '[right' → logprob: -16.07594108581543
    6. 'r' → logprob: -16.57594108581543
    7. ' ' → logprob: -17.20094108581543
    8. ',right' → logprob: -17.32594108581543
    9. 'Right' → logprob: -17.45094108581543
    10. '_right' → logprob: -17.70094108581543

Token 336: '      ' (ID: 1699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02446083351969719
    2. '<|end|>' → logprob: -3.899460792541504
    3. ',' → logprob: -6.274460792541504
    4. '<|end|>' → logprob: -6.649460792541504
    5. '   ' → logprob: -7.774460792541504
    6. ')' → logprob: -9.524460792541504
    7. ' ' → logprob: -9.774460792541504
    8. '#' → logprob: -10.524460792541504
    9. '      ' → logprob: -10.649460792541504
    10. '     ' → logprob: -11.024460792541504

Token 337: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.935626745223999
    2. '=' → logprob: -0.935626745223999
    3. '=None' → logprob: -2.560626745223999
    4. '       ' → logprob: -2.810626745223999
    5. ' =' → logprob: -3.060626745223999
    6. ',' → logprob: -4.185626983642578
    7. '<|end|>' → logprob: -5.560626983642578
    8. '#' (adapté à ' #') → logprob: -5.685626983642578
    9. ' ' → logprob: -5.935626983642578
    10. '   ' → logprob: -6.185626983642578

Token 338: ' fils' (ID: 56114)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0059296246618032455
    2. ' right' → logprob: -5.130929470062256
    3. 'None' → logprob: -14.505929946899414
    4. '	right' → logprob: -15.505929946899414
    5. '[right' → logprob: -16.630929946899414
    6. '(right' → logprob: -16.755929946899414
    7. ' ' → logprob: -17.130929946899414
    8. 'Right' → logprob: -17.505929946899414
    9. 'rig' → logprob: -17.630929946899414
    10. 'left' → logprob: -17.880929946899414

Token 339: ' droit' (ID: 29964)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.22203269600868225
    2. ' droit' → logprob: -2.4720327854156494
    3. 'dro' → logprob: -2.5970327854156494
    4. ' right' → logprob: -3.3470327854156494
    5. 'd' → logprob: -5.72203254699707
    6. ' droite' → logprob: -6.84703254699707
    7. ' None' → logprob: -9.47203254699707
    8. '(right' → logprob: -9.47203254699707
    9. '   ' → logprob: -9.47203254699707
    10. ' derecho' → logprob: -9.84703254699707

Token 340: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02105106972157955
    2. '<|end|>' → logprob: -4.021050930023193
    3. '   ' → logprob: -6.521050930023193
    4. ')' → logprob: -7.396050930023193
    5. ',' → logprob: -8.021051406860352
    6. '<|end|>' → logprob: -8.771051406860352
    7. ' ' → logprob: -9.271051406860352
    8. '=' → logprob: -9.646051406860352
    9. '#' → logprob: -10.396051406860352
    10. ' =' → logprob: -10.521051406860352

Token 341: 'cluster' (ID: 39831)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.12723644077777863
    2. ' right' → logprob: -2.1272363662719727
    3. ')' → logprob: -9.127236366271973
    4. 'None' → logprob: -9.127236366271973
    5. ' None' → logprob: -9.502236366271973
    6. 'left' → logprob: -11.377236366271973
    7. ' )' → logprob: -13.877236366271973
    8. 'cluster' → logprob: -14.252236366271973
    9. '	right' → logprob: -14.377236366271973
    10. ' cluster' → logprob: -14.752236366271973

Token 342: ' fusion' (ID: 48115)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.5014188799541444e-05
    2. '=None' → logprob: -10.375044822692871
    3. ')
' → logprob: -12.250044822692871
    4. '=' → logprob: -12.625044822692871
    5. ' )' → logprob: -12.875044822692871
    6. '   ' → logprob: -14.000044822692871
    7. '       ' → logprob: -14.750044822692871
    8. '),' → logprob: -14.875044822692871
    9. ')

' → logprob: -15.125044822692871
    10. ' None' → logprob: -15.250044822692871

Token 343: 'né' (ID: 10149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15686887502670288
    2. '=None' → logprob: -2.6568689346313477
    3. 'né' → logprob: -2.7818689346313477
    4. '=' → logprob: -5.281868934631348
    5. 'naire' → logprob: -5.781868934631348
    6. 'née' → logprob: -6.781868934631348
    7. 'nées' → logprob: -7.156868934631348
    8. 'n' → logprob: -7.656868934631348
    9. 'nel' → logprob: -8.031868934631348
    10. 'merged' → logprob: -8.281868934631348

Token 344: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6457742175552994e-05
    2. '       ' → logprob: -10.250056266784668
    3. ' )' → logprob: -11.750056266784668
    4. '   ' → logprob: -12.000056266784668
    5. ')
' → logprob: -12.125056266784668
    6. '<|end|>' → logprob: -14.500056266784668
    7. ')#' → logprob: -15.000056266784668
    8. '),' → logprob: -15.625056266784668
    9. '#' → logprob: -15.875056266784668
    10. ',' → logprob: -16.250057220458984

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005875834613107145
    2. 'self' → logprob: -7.500587463378906
    3. ' self' → logprob: -10.625587463378906
    4. '   ' → logprob: -11.625587463378906
    5. '      ' → logprob: -15.000587463378906
    6. '	' → logprob: -15.125587463378906
    7. ',' → logprob: -15.375587463378906
    8. '	self' → logprob: -15.625587463378906
    9. '     ' → logprob: -16.250587463378906
    10. ' ' → logprob: -16.375587463378906

Token 346: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.23997731506824493
    2. '       ' → logprob: -1.6149773597717285
    3. ' self' → logprob: -4.2399773597717285
    4. '   ' → logprob: -10.61497688293457
    5. '	self' → logprob: -11.61497688293457
    6. 'def' → logprob: -11.98997688293457
    7. '
' → logprob: -12.73997688293457
    8. ' ' → logprob: -13.23997688293457
    9. '      ' → logprob: -13.86497688293457
    10. ' ' → logprob: -14.23997688293457

Token 347: '.size' (ID: 4463)
  Prédit: '.degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.degree' → logprob: -0.05980820208787918
    2. '.de' → logprob: -3.6848082542419434
    3. '.children' → logprob: -4.309808254241943
    4. '.connections' → logprob: -5.059808254241943
    5. '.parent' → logprob: -5.559808254241943
    6. '.connected' → logprob: -5.809808254241943
    7. '.' → logprob: -5.809808254241943
    8. '.dist' → logprob: -7.434808254241943
    9. '.distance' → logprob: -7.559808254241943
    10. 'degree' → logprob: -8.059807777404785

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889099419116974
    2. ' =' → logprob: -2.5788910388946533
    3. '   ' → logprob: -13.828890800476074
    4. ' ' → logprob: -15.453890800476074
    5. '1' → logprob: -17.57889175415039
    6. '  ' → logprob: -17.70389175415039
    7. '	' → logprob: -18.95389175415039
    8. '       ' → logprob: -19.20389175415039
    9. '    ' → logprob: -19.20389175415039
    10. '=None' → logprob: -19.20389175415039

Token 349: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005308231338858604
    2. ' ' → logprob: -5.255308151245117
    3. '(' → logprob: -10.130308151245117
    4. '2' → logprob: -10.630308151245117
    5. ' (' → logprob: -11.630308151245117
    6. '   ' → logprob: -13.755308151245117
    7. '0' → logprob: -14.880308151245117
    8. '  ' → logprob: -15.755308151245117
    9. '(None' → logprob: -17.880308151245117
    10. '     ' → logprob: -18.255308151245117

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013214473437983543
    2. ' ' → logprob: -9.37513256072998
    3. '(' → logprob: -10.12513256072998
    4. '2' → logprob: -12.12513256072998
    5. ' (' → logprob: -13.50013256072998
    6. '   ' → logprob: -15.62513256072998
    7. '0' → logprob: -16.250131607055664
    8. '(None' → logprob: -17.125131607055664
    9. '  ' → logprob: -17.625131607055664
    10. '(
' → logprob: -18.250131607055664

Token 351: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 353: ' nombre' (ID: 9733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08260432630777359
    2. ' ' → logprob: -2.58260440826416
    3. 'size' → logprob: -6.08260440826416
    4. ' size' → logprob: -6.70760440826416
    5. '   ' → logprob: -8.95760440826416
    6. 'self' → logprob: -11.08260440826416
    7. ' (' → logprob: -11.08260440826416
    8. ' self' → logprob: -11.33260440826416
    9. '(' → logprob: -11.70760440826416
    10. '  ' → logprob: -11.95760440826416

Token 354: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2696854770183563
    2. '<|end|>' → logprob: -1.8946855068206787
    3. 'des' → logprob: -3.5196855068206787
    4. ' de' → logprob: -4.0196852684021
    5. '_clusters' → logprob: -4.3946852684021
    6. '_nodes' → logprob: -5.3946852684021
    7. '   ' → logprob: -5.6446852684021
    8. ' of' → logprob: -5.7696852684021
    9. ' ' → logprob: -5.7696852684021
    10. 'de' → logprob: -5.8946852684021

Token 355: ' feuilles' (ID: 109727)
  Prédit: ' leaves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaves' → logprob: -0.7089636325836182
    2. 'fe' → logprob: -1.4589636325836182
    3. ' feuilles' → logprob: -2.333963632583618
    4. ' nodes' → logprob: -2.583963632583618
    5. 'nodes' → logprob: -2.958963632583618
    6. 'le' → logprob: -3.333963632583618
    7. 'leaf' → logprob: -5.708963394165039
    8. ' leaf' → logprob: -5.833963394165039
    9. '_nodes' → logprob: -6.458963394165039
    10. 'ordinate' → logprob: -6.708963394165039

Token 356: ' sous' (ID: 14487)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: ' ce' (ID: 2357)
  Prédit: ' ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.15853551030158997
    2. 'ce' → logprob: -3.0335354804992676
    3. 'cet' → logprob: -3.4085354804992676
    4. 'self' → logprob: -3.6585354804992676
    5. 'this' → logprob: -4.533535480499268
    6. 'le' → logprob: -4.658535480499268
    7. '   ' → logprob: -5.533535480499268
    8. ' cette' → logprob: -5.658535480499268
    9. 'j' → logprob: -6.033535480499268
    10. ' this' → logprob: -6.283535480499268

Token 358: ' noe' (ID: 49921)
  Prédit: ' noe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' noe' → logprob: -0.7188303470611572
    2. 'no' → logprob: -0.9688303470611572
    3. 'node' → logprob: -2.7188303470611572
    4. 'n' → logprob: -3.8438303470611572
    5. 'cluster' → logprob: -4.468830108642578
    6. ' node' → logprob: -4.843830108642578
    7. '   ' → logprob: -4.968830108642578
    8. '_no' → logprob: -5.218830108642578
    9. ' cluster' → logprob: -5.593830108642578
    10. ' no' → logprob: -5.843830108642578

Token 359: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.0003143704670947045
    2. 'd' → logprob: -8.125314712524414
    3. 'u' → logprob: -11.500314712524414
    4. 'e' → logprob: -12.000314712524414
    5. 'de' → logprob: -14.500314712524414
    6. '_ud' → logprob: -14.500314712524414
    7. ' ud' → logprob: -14.625314712524414
    8. 'ude' → logprob: -15.625314712524414
    9. 'uds' → logprob: -16.375314712524414
    10. 'уд' → logprob: -16.625314712524414

Token 360: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02868177369236946
    2. '<|end|>' → logprob: -3.653681755065918
    3. ',' → logprob: -6.653681755065918
    4. '
' → logprob: -8.153681755065918
    5. '        
' → logprob: -8.278681755065918
    6. '<|end|>' → logprob: -8.653681755065918
    7. '   ' → logprob: -9.028681755065918
    8. '	' → logprob: -9.778681755065918
    9. 'def' → logprob: -10.778681755065918
    10. ' ' → logprob: -10.778681755065918

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025950383860617876
    2. 'self' → logprob: -6.377594947814941
    3. '<|end|>' → logprob: -7.877594947814941
    4. '   ' → logprob: -8.377594947814941
    5. ' self' → logprob: -9.002594947814941
    6. '        
' → logprob: -10.502594947814941
    7. '
' → logprob: -10.752594947814941
    8. '           ' → logprob: -10.877594947814941
    9. ',' → logprob: -10.877594947814941
    10. '	' → logprob: -11.377594947814941

Token 362: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3615858554840088
    2. 'self' (adapté à ' self') → logprob: -1.8615858554840088
    3. ' self' → logprob: -2.111585855484009
    4. ' if' → logprob: -3.861585855484009
    5. 'if' → logprob: -5.23658561706543
    6. '   ' → logprob: -8.73658561706543
    7. ' ' → logprob: -8.98658561706543
    8. '<|end|>' → logprob: -9.11158561706543
    9. '	self' → logprob: -9.36158561706543
    10. '        
' → logprob: -10.98658561706543

Token 363: '.degree' (ID: 186756)
  Prédit: '.degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.degree' → logprob: -0.10719683766365051
    2. '.de' → logprob: -2.357196807861328
    3. '.' → logprob: -6.482196807861328
    4. 'degree' → logprob: -6.732196807861328
    5. '.connections' → logprob: -7.107196807861328
    6. '.children' → logprob: -7.357196807861328
    7. '_degree' → logprob: -7.482196807861328
    8. '.connected' → logprob: -7.482196807861328
    9. ' .' → logprob: -7.607196807861328
    10. '.parent' → logprob: -8.357196807861328

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868822157382965
    2. '=' → logprob: -1.1368821859359741
    3. ' ' → logprob: -11.511881828308105
    4. '=None' → logprob: -14.761881828308105
    5. '  ' → logprob: -15.136881828308105
    6. '   ' → logprob: -15.511881828308105
    7. '<|end|>' → logprob: -15.636881828308105
    8. ' +=' → logprob: -16.636882781982422
    9. ',' → logprob: -17.136882781982422
    10. '    ' → logprob: -17.636882781982422

Token 365: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029859595000743866
    2. ' ' → logprob: -3.5298595428466797
    3. '2' → logprob: -9.27985954284668
    4. '1' → logprob: -11.40485954284668
    5. '   ' → logprob: -13.15485954284668
    6. '  ' → logprob: -13.52985954284668
    7. '     ' → logprob: -15.27985954284668
    8. 'None' → logprob: -15.40485954284668
    9. ' ' → logprob: -15.46735954284668
    10. '	' → logprob: -15.77985954284668

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019591135787777603
    2. '2' → logprob: -8.750195503234863
    3. ' ' → logprob: -10.250195503234863
    4. '1' → logprob: -13.250195503234863
    5. '   ' → logprob: -16.00019645690918
    6. 'None' → logprob: -16.87519645690918
    7. '  ' → logprob: -17.68769645690918
    8. '۰' → logprob: -17.81269645690918
    9. '3' → logprob: -18.00019645690918
    10. '     ' → logprob: -18.43769645690918

Token 367: '         ' (ID: 983)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: ' degré' (ID: 169072)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2620449662208557
    2. ' ' → logprob: -1.512044906616211
    3. 'degree' → logprob: -5.262044906616211
    4. '1' → logprob: -6.637044906616211
    5. '<|end|>' → logprob: -6.637044906616211
    6. 'self' → logprob: -7.137044906616211
    7. ' self' → logprob: -7.137044906616211
    8. ' degree' → logprob: -7.512044906616211
    9. ' None' → logprob: -10.012044906616211
    10. 'None' → logprob: -10.637044906616211

Token 370: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: ' noe' (ID: 49921)
  Prédit: ' noe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' noe' → logprob: -0.11075006425380707
    2. ' node' → logprob: -3.1107499599456787
    3. 'node' → logprob: -3.1107499599456787
    4. 'no' → logprob: -4.735750198364258
    5. 'self' → logprob: -5.860750198364258
    6. 'n' → logprob: -6.360750198364258
    7. ' no' → logprob: -6.735750198364258
    8. ' self' → logprob: -6.985750198364258
    9. ' None' → logprob: -9.860750198364258
    10. ' ' → logprob: -9.985750198364258

Token 372: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.08510303497314453
    2. 'e' → logprob: -2.9601030349731445
    3. 'u' → logprob: -3.9601030349731445
    4. ' ' → logprob: -5.2101030349731445
    5. 'd' → logprob: -5.5851030349731445
    6. ' u' → logprob: -7.9601030349731445
    7. 'de' → logprob: -8.085103034973145
    8. ' e' → logprob: -8.210103034973145
    9. ' ud' → logprob: -9.460103034973145
    10. ' de' → logprob: -9.835103034973145

Token 373: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.456464022397995
    2. '0' → logprob: -1.3314640522003174
    3. ' ' → logprob: -2.5814640522003174
    4. ' )' → logprob: -3.9564640522003174
    5. '1' → logprob: -5.081463813781738
    6. '<|end|>' → logprob: -7.581463813781738
    7. ' =' → logprob: -8.331463813781738
    8. '=' → logprob: -9.081463813781738
    9. '  ' → logprob: -9.331463813781738
    10. ',' → logprob: -9.581463813781738

Token 375: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.014341667294502258
    2. ' d' → logprob: -5.139341831207275
    3. 'de' → logprob: -5.389341831207275
    4. ' des' → logprob: -6.264341831207275
    5. '_' → logprob: -7.639341831207275
    6. '=' → logprob: -8.389341354370117
    7. 'd' → logprob: -8.389341354370117
    8. ' ' → logprob: -8.389341354370117
    9. '_de' → logprob: -8.514341354370117
    10. ')' → logprob: -9.014341354370117

Token 376: ' connex' (ID: 154480)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.41818898916244507
    2. 'connections' → logprob: -1.7931890487670898
    3. ' connex' → logprob: -2.41818904876709
    4. ' connections' → logprob: -2.54318904876709
    5. ' conn' → logprob: -6.16818904876709
    6. ' self' → logprob: -7.04318904876709
    7. 'branches' → logprob: -7.04318904876709
    8. 'self' → logprob: -7.41818904876709
    9. 'con' → logprob: -7.54318904876709
    10. ' branches' → logprob: -7.79318904876709

Token 377: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.0017657396383583546
    2. 'ections' → logprob: -6.626765727996826
    3. 'ctions' → logprob: -8.251766204833984
    4. 'i' → logprob: -9.876766204833984
    5. 'ex' → logprob: -10.376766204833984
    6. ' ions' → logprob: -10.626766204833984
    7. 't' → logprob: -10.626766204833984
    8. 'ion' → logprob: -11.126766204833984
    9. 'es' → logprob: -11.876766204833984
    10. 's' → logprob: -12.126766204833984

Token 378: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0061034588143229485
    2. ' )' → logprob: -5.131103515625
    3. '   ' → logprob: -9.506103515625
    4. ',' → logprob: -9.756103515625
    5. '       ' → logprob: -10.881103515625
    6. ')
' → logprob: -12.131103515625
    7. '<|end|>' → logprob: -12.881103515625
    8. ' ' → logprob: -13.131103515625
    9. '),' → logprob: -13.381103515625
    10. ' ' → logprob: -13.381103515625

Token 379: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1326562464237213
    2. 'self' → logprob: -3.5076563358306885
    3. ' if' → logprob: -3.6326563358306885
    4. 'if' → logprob: -4.132656097412109
    5. '<|end|>' → logprob: -4.132656097412109
    6. 'def' → logprob: -4.507656097412109
    7. ' self' → logprob: -4.632656097412109
    8. '   ' → logprob: -4.632656097412109
    9. '
' → logprob: -5.757656097412109
    10. 'class' → logprob: -8.25765609741211

Token 381: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4416821300983429
    2. ' if' → logprob: -1.0666821002960205
    3. 'self' → logprob: -5.0666823387146
    4. 'def' → logprob: -5.8166823387146
    5. '       ' → logprob: -6.5666823387146
    6. ' self' → logprob: -7.3166823387146
    7. 'parent' → logprob: -8.191681861877441
    8. 'pass' → logprob: -8.941681861877441
    9. 'for' → logprob: -9.066681861877441
    10. 'import' → logprob: -9.066681861877441

Token 382: ' degré' (ID: 169072)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.5635997653007507
    2. ' degree' → logprob: -1.4385998249053955
    3. 'self' → logprob: -2.6885998249053955
    4. 'if' → logprob: -3.8135998249053955
    5. 'size' → logprob: -3.8135998249053955
    6. ' self' → logprob: -3.8135998249053955
    7. ' degré' → logprob: -4.313599586486816
    8. ' code' → logprob: -4.438599586486816
    9. ' size' → logprob: -4.438599586486816
    10. ' if' → logprob: -5.313599586486816

Token 383: ' sera' (ID: 15511)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7453137040138245
    2. ' =' → logprob: -0.8703137040138245
    3. '=' → logprob: -2.3703136444091797
    4. '+=' → logprob: -4.37031364440918
    5. ' ' → logprob: -9.12031364440918
    6. ' augmente' → logprob: -9.62031364440918
    7. ' est' → logprob: -9.87031364440918
    8. '   ' → logprob: -10.37031364440918
    9. ' du' → logprob: -10.87031364440918
    10. 'initial' → logprob: -11.12031364440918

Token 384: ' calcul' (ID: 7559)
  Prédit: ' mis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mis' → logprob: -1.7437604665756226
    2. ' incr' → logprob: -1.9937604665756226
    3. '2' → logprob: -2.243760585784912
    4. ' au' → logprob: -2.243760585784912
    5. ' ' → logprob: -2.493760585784912
    6. ' increment' → logprob: -2.618760585784912
    7. ' initial' → logprob: -2.618760585784912
    8. 'increment' → logprob: -2.868760585784912
    9. 'initial' → logprob: -2.993760585784912
    10. ' augmenté' → logprob: -3.493760585784912

Token 385: 'é' (ID: 377)
  Prédit: ' lors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lors' → logprob: -1.2573972940444946
    2. 'e' → logprob: -1.5073972940444946
    3. ' à' → logprob: -1.8823972940444946
    4. ' plus' → logprob: -2.257397174835205
    5. '_' → logprob: -2.882397174835205
    6. ' later' → logprob: -3.507397174835205
    7. ' ult' → logprob: -3.507397174835205
    8. ' =' → logprob: -4.007397174835205
    9. ' uniquement' → logprob: -4.007397174835205
    10. ' ' → logprob: -4.507397174835205

Token 386: ' ensuite' (ID: 39713)
  Prédit: ' lors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lors' → logprob: -0.6510940194129944
    2. ' plus' → logprob: -1.6510939598083496
    3. ' ult' → logprob: -1.9010939598083496
    4. 'plus' → logprob: -2.9010939598083496
    5. ' après' → logprob: -3.0260939598083496
    6. ' à' → logprob: -4.77609395980835
    7. ' dans' → logprob: -5.02609395980835
    8. ' par' → logprob: -5.27609395980835
    9. ' uniquement' → logprob: -6.15109395980835
    10. 'ap' → logprob: -6.40109395980835

Token 387: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.443437784910202
    2. '<|end|>' → logprob: -1.5684378147125244
    3. '       ' → logprob: -1.9434378147125244
    4. 'def' → logprob: -6.318437576293945
    5. ' if' → logprob: -6.443437576293945
    6. '<|end|>' → logprob: -6.568437576293945
    7. '   ' → logprob: -7.193437576293945
    8. 'if' → logprob: -8.568437576293945
    9. '        
' → logprob: -8.818437576293945
    10. '	' → logprob: -9.318437576293945

Token 388: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.507594645023346
    2. 'part' → logprob: -1.6325945854187012
    3. ' la' → logprob: -2.257594585418701
    4. 'l' → logprob: -3.382594585418701
    5. 'la' → logprob: -3.757594585418701
    6. 'post' → logprob: -4.132594585418701
    7. ' l' → logprob: -4.382594585418701
    8. ' post' → logprob: -5.632594585418701
    9. ' part' → logprob: -5.757594585418701
    10. 'aj' → logprob: -6.632594585418701

Token 389: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.06938627362251282
    2. ' de' → logprob: -3.0693862438201904
    3. 'des' → logprob: -4.3193864822387695
    4. '       ' → logprob: -5.6943864822387695
    5. 'de' → logprob: -6.3193864822387695
    6. ' du' → logprob: -6.4443864822387695
    7. '   ' → logprob: -8.31938648223877
    8. 'du' → logprob: -8.81938648223877
    9. 'self' → logprob: -10.06938648223877
    10. '#' → logprob: -10.31938648223877

Token 390: ' la' (ID: 557)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5317812561988831
    2. ' la' → logprob: -1.5317811965942383
    3. ' self' → logprob: -2.2817811965942383
    4. '1' → logprob: -3.7817811965942383
    5. 'la' → logprob: -4.156781196594238
    6. 'left' → logprob: -4.781781196594238
    7. ' ' → logprob: -5.156781196594238
    8. '   ' → logprob: -5.156781196594238
    9. ' (' → logprob: -5.156781196594238
    10. 'l' → logprob: -5.406781196594238

Token 391: ' structure' (ID: 8866)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.041388750076294
    2. ' left' → logprob: -1.416388750076294
    3. ' children' → logprob: -2.166388750076294
    4. 'children' → logprob: -2.416388750076294
    5. ' self' → logprob: -2.916388750076294
    6. 'self' → logprob: -3.166388750076294
    7. ' parent' → logprob: -3.791388750076294
    8. 'parent' → logprob: -4.291388511657715
    9. ' enfants' → logprob: -5.041388511657715
    10. '1' → logprob: -5.541388511657715

Token 392: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01463151816278696
    2. ' l' → logprob: -4.264631748199463
    3. 'ar' → logprob: -8.514631271362305
    4. 'd' → logprob: -10.014631271362305
    5. ' arbre' → logprob: -10.389631271362305
    6. '```' → logprob: -10.389631271362305
    7. 'la' → logprob: -10.889631271362305
    8. '#' → logprob: -11.014631271362305
    9. 'arb' → logprob: -11.139631271362305
    10. 'lia' → logprob: -11.264631271362305

Token 394: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.2461981475353241
    2. 'ar' → logprob: -1.7461981773376465
    3. ' arbre' → logprob: -3.8711981773376465
    4. 'a' → logprob: -3.9961981773376465
    5. '’ar' → logprob: -6.2461981773376465
    6. 'tree' → logprob: -6.8711981773376465
    7. ''' → logprob: -7.8711981773376465
    8. '_ar' → logprob: -8.371197700500488
    9. 'arb' → logprob: -8.621197700500488
    10. 'e' → logprob: -8.996197700500488

Token 395: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -5.943783253314905e-05
    2. 'b' → logprob: -10.375059127807617
    3. 'bo' → logprob: -11.000059127807617
    4. 'bres' → logprob: -13.125059127807617
    5. 'tree' → logprob: -13.375059127807617
    6. 'Bre' → logprob: -13.750059127807617
    7. 'bor' → logprob: -13.875059127807617
    8. 'br' → logprob: -14.000059127807617
    9. 'bro' → logprob: -14.375059127807617
    10. 'e' → logprob: -14.375059127807617

Token 396: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7569410800933838
    2. '<|end|>' → logprob: -1.0069410800933838
    3. '       ' → logprob: -2.006941080093384
    4. '   ' → logprob: -3.881941080093384
    5. 'def' → logprob: -5.381940841674805
    6. '        
' → logprob: -6.631940841674805
    7. '<|end|>' → logprob: -6.631940841674805
    8. ' ' → logprob: -7.381940841674805
    9. '    
' → logprob: -7.506940841674805
    10. '  
' → logprob: -7.756940841674805

Token 397: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12005343288183212
    2. 'def' → logprob: -3.12005352973938
    3. '<|end|>' → logprob: -3.37005352973938
    4. ' def' → logprob: -3.99505352973938
    5. '       ' → logprob: -4.745053291320801
    6. '
' → logprob: -5.745053291320801
    7. '	def' → logprob: -6.620053291320801
    8. ' ' → logprob: -6.870053291320801
    9. '<|end|>' → logprob: -6.995053291320801
    10. '    
' → logprob: -8.4950532913208

Token 398: ' parse' (ID: 8420)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.0023887332063168287
    2. 'up' → logprob: -6.752388954162598
    3. ' build' → logprob: -7.877388954162598
    4. ' find' → logprob: -8.127388954162598
    5. ' read' → logprob: -8.627388954162598
    6. ' main' → logprob: -8.752388954162598
    7. 'UP' → logprob: -9.627388954162598
    8. ' parse' → logprob: -9.752388954162598
    9. '	up' → logprob: -10.252388954162598
    10. ' compute' → logprob: -11.127388954162598

Token 399: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.475310355424881
    2. '_input' → logprob: -1.4753103256225586
    3. '_args' → logprob: -2.6003103256225586
    4. '_line' → logprob: -2.7253103256225586
    5. '_data' → logprob: -5.475310325622559
    6. '_file' → logprob: -7.350310325622559
    7. '(argv' → logprob: -8.100310325622559
    8. '():' → logprob: -8.100310325622559
    9. '(' → logprob: -8.225310325622559
    10. '_inputs' → logprob: -8.225310325622559

Token 400: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000850009499117732
    2. '():
' → logprob: -7.500850200653076
    3. '()' → logprob: -8.250849723815918
    4. ' ():' → logprob: -10.750849723815918
    5. '(' → logprob: -12.125849723815918
    6. '(argv' → logprob: -12.875849723815918
    7. '(input' → logprob: -14.125849723815918
    8. '(size' → logprob: -14.250849723815918
    9. '(line' → logprob: -14.375849723815918
    10. '(s' → logprob: -14.625849723815918

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011432451196014881
    2. 'n' → logprob: -5.011432647705078
    3. '
' → logprob: -6.886432647705078
    4. '```' → logprob: -6.886432647705078
    5. ' lines' → logprob: -7.261432647705078
    6. 'import' → logprob: -7.386432647705078
    7. ' n' → logprob: -7.761432647705078
    8. '	lines' → logprob: -9.011432647705078
    9. ':' → logprob: -9.261432647705078
    10. '(n' → logprob: -9.386432647705078

Token 402: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16337431967258453
    2. 'n' → logprob: -1.9133743047714233
    3. '   ' → logprob: -5.788374423980713
    4. '	n' → logprob: -9.788373947143555
    5. ' line' → logprob: -11.413373947143555
    6. ' lines' → logprob: -11.538373947143555
    7. ' import' → logprob: -13.663373947143555
    8. '```' → logprob: -14.288373947143555
    9. ' N' → logprob: -14.413373947143555
    10. 'import' → logprob: -14.538373947143555

Token 403: ' Lit' (ID: 45595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24442803859710693
    2. ' n' → logprob: -1.619428038597107
    3. '   ' → logprob: -3.9944281578063965
    4. ' input' → logprob: -9.119427680969238
    5. ' lines' → logprob: -9.369427680969238
    6. 'input' → logprob: -9.494427680969238
    7. 'import' → logprob: -9.619427680969238
    8. '	n' → logprob: -10.869427680969238
    9. 'def' → logprob: -10.994427680969238
    10. 'lines' → logprob: -10.994427680969238

Token 404: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0755646675825119
    2. '():' → logprob: -3.2005646228790283
    3. '   ' → logprob: -3.7005646228790283
    4. ' ()' → logprob: -5.950564861297607
    5. ' la' → logprob: -6.200564861297607
    6. ' sys' → logprob: -7.325564861297607
    7. 'n' → logprob: -8.20056438446045
    8. 'sys' → logprob: -8.57556438446045
    9. ' ' → logprob: -8.70056438446045
    10. '  ' → logprob: -8.82556438446045

Token 405: ' entr' (ID: 7072)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011074351146817207
    2. ' n' → logprob: -5.511074542999268
    3. 'lines' → logprob: -6.261074542999268
    4. ' lines' → logprob: -6.761074542999268
    5. ' lignes' → logprob: -7.261074542999268
    6. 'l' → logprob: -7.386074542999268
    7. 'input' → logprob: -7.386074542999268
    8. 'int' → logprob: -8.26107406616211
    9. '=sys' → logprob: -8.26107406616211
    10. ' =' → logprob: -8.38607406616211

Token 406: 'ées' (ID: 5161)
  Prédit: 'ees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ees' → logprob: -0.8866115212440491
    2. 'rees' → logprob: -1.6366114616394043
    3. 'ées' → logprob: -1.6366114616394043
    4. 'r' → logprob: -2.7616114616394043
    5. 'ies' → logprob: -2.8866114616394043
    6. 'ries' → logprob: -3.1366114616394043
    7. 'es' → logprob: -4.261611461639404
    8. 'ree' → logprob: -4.386611461639404
    9. 'ée' → logprob: -6.261611461639404
    10. 'ee' → logprob: -6.511611461639404

Token 407: ' jusqu' (ID: 21961)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.26125866174697876
    2. '   ' → logprob: -2.136258602142334
    3. '()' → logprob: -2.636258602142334
    4. '():
' → logprob: -3.261258602142334
    5. 'n' → logprob: -7.886258602142334
    6. ' =' → logprob: -7.886258602142334
    7. '(n' → logprob: -8.636259078979492
    8. 'import' → logprob: -8.761259078979492
    9. '()
' → logprob: -9.011259078979492
    10. ':' → logprob: -9.011259078979492

Token 408: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.38228362798690796
    2. 'à' → logprob: -2.5072836875915527
    3. ' à' → logprob: -2.8822836875915527
    4. ' =' → logprob: -3.1322836875915527
    5. '_a' → logprob: -3.1322836875915527
    6. '=' → logprob: -3.6322836875915527
    7. '_' → logprob: -4.132283687591553
    8. 'au' → logprob: -4.632283687591553
    9. '’à' → logprob: -4.632283687591553
    10. '   ' → logprob: -4.757283687591553

Token 409: ' '' (ID: 461)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.2924559712409973
    2. ' EOF' → logprob: -1.4174559116363525
    3. ' la' → logprob: -5.792456150054932
    4. '''' → logprob: -6.042456150054932
    5. 'la' → logprob: -6.417456150054932
    6. 'une' → logprob: -6.792456150054932
    7. ' une' → logprob: -6.792456150054932
    8. ' eof' → logprob: -8.042455673217773
    9. '""' → logprob: -8.542455673217773
    10. 'n' → logprob: -8.667455673217773

Token 410: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5557694435119629
    2. '\n' → logprob: -1.930769443511963
    3. ''''' → logprob: -2.805769443511963
    4. 'EOF' → logprob: -2.805769443511963
    5. '```' → logprob: -3.180769443511963
    6. '"""' → logprob: -3.555769443511963
    7. ''\' → logprob: -3.680769443511963
    8. '''' → logprob: -3.930769443511963
    9. '"\' → logprob: -4.930769443511963
    10. '')' → logprob: -4.930769443511963

Token 411: ''' (ID: 6)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8831596970558167
    2. ''' → logprob: -1.0081596374511719
    3. ' '' → logprob: -1.5081596374511719
    4. ' \' → logprob: -8.883159637451172
    5. '')' → logprob: -10.383159637451172
    6. 'n' → logprob: -10.383159637451172
    7. ' ')' → logprob: -10.758159637451172
    8. '
' → logprob: -11.383159637451172
    9. ''\' → logprob: -11.383159637451172
    10. ''
' → logprob: -11.883159637451172

Token 412: ' seul' (ID: 33041)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17304208874702454
    2. '():' → logprob: -2.173042058944702
    3. '()' → logprob: -3.798042058944702
    4. 'def' → logprob: -5.173042297363281
    5. ':' → logprob: -5.298042297363281
    6. '
' → logprob: -5.423042297363281
    7. '():
' → logprob: -5.423042297363281
    8. '()
' → logprob: -7.423042297363281
    9. '    
' → logprob: -7.923042297363281
    10. ':
' → logprob: -8.298042297363281

Token 413: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26093894243240356
    2. '
' → logprob: -1.8859388828277588
    3. '\n' → logprob: -3.635938882827759
    4. '():' → logprob: -3.885938882827759
    5. '    
' → logprob: -4.885939121246338
    6. '():
' → logprob: -5.510939121246338
    7. ':' → logprob: -6.010939121246338
    8. '  
' → logprob: -6.260939121246338
    9. '()' → logprob: -6.260939121246338
    10. 'def' → logprob: -6.510939121246338

Token 414: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.36318185925483704
    2. ' une' → logprob: -1.2381818294525146
    3. 'la' → logprob: -4.738182067871094
    4. 'ligne' → logprob: -6.113182067871094
    5. 'line' → logprob: -6.613182067871094
    6. ''une' → logprob: -6.738182067871094
    7. 'l' → logprob: -7.488182067871094
    8. ' la' → logprob: -8.738182067871094
    9. '   ' → logprob: -9.988182067871094
    10. 'import' → logprob: -10.113182067871094

Token 415: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.11106683313846588
    2. 'line' → logprob: -2.7360668182373047
    3. ' ligne' → logprob: -3.6110668182373047
    4. ' line' → logprob: -4.611066818237305
    5. 'l' → logprob: -6.236066818237305
    6. '\n' → logprob: -6.861066818237305
    7. 'li' → logprob: -9.861066818237305
    8. 'n' → logprob: -9.986066818237305
    9. '
' → logprob: -10.236066818237305
    10. '\' → logprob: -10.236066818237305

Token 416: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022301904391497374
    2. '
' → logprob: -7.877230167388916
    3. 'def' → logprob: -7.877230167388916
    4. '    
' → logprob: -8.002230644226074
    5. ':' → logprob: -8.252230644226074
    6. 'while' → logprob: -8.627230644226074
    7. '\n' → logprob: -8.877230644226074
    8. ' while' → logprob: -9.127230644226074
    9. 'n' → logprob: -9.127230644226074
    10. ',' → logprob: -9.752230644226074

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15240135788917542
    2. '():' → logprob: -2.0274014472961426
    3. '():
' → logprob: -5.527401447296143
    4. '()' → logprob: -5.777401447296143
    5. 'def' → logprob: -6.652401447296143
    6. ':' → logprob: -6.902401447296143
    7. '
' → logprob: -9.402400970458984
    8. '    
' → logprob: -10.652400970458984
    9. '```' → logprob: -10.902400970458984
    10. '(lines' → logprob: -10.902400970458984

Token 418: ' inputs' (ID: 21963)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5901708602905273
    2. ' lines' → logprob: -1.7151708602905273
    3. 'lines' → logprob: -2.0901708602905273
    4. 'n' → logprob: -2.5901708602905273
    5. 'while' → logprob: -3.3401708602905273
    6. ' while' → logprob: -4.465170860290527
    7. 'def' → logprob: -4.840170860290527
    8. 'data' → logprob: -6.090170860290527
    9. 'import' → logprob: -6.215170860290527
    10. ' n' → logprob: -6.590170860290527

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28666698932647705
    2. ' =' → logprob: -1.411666989326477
    3. '=[]' → logprob: -5.7866668701171875
    4. '_lines' → logprob: -6.6616668701171875
    5. '=[]
' → logprob: -7.6616668701171875
    6. '()' → logprob: -8.411666870117188
    7. '_line' → logprob: -8.786666870117188
    8. 'lines' → logprob: -9.411666870117188
    9. '   ' → logprob: -9.911666870117188
    10. '_' → logprob: -10.161666870117188

Token 420: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1710885912179947
    2. ' []' → logprob: -1.9210885763168335
    3. '[]
' → logprob: -4.671088695526123
    4. ' []
' → logprob: -6.671088695526123
    5. 'sys' → logprob: -9.421088218688965
    6. '[' → logprob: -9.796088218688965
    7. ' sys' → logprob: -10.421088218688965
    8. ' []
' → logprob: -12.296088218688965
    9. '[]

' → logprob: -12.671088218688965
    10. ' [' → logprob: -13.671088218688965

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07719466090202332
    2. ' while' → logprob: -2.8271946907043457
    3. 'while' → logprob: -4.327194690704346
    4. ' line' → logprob: -6.702194690704346
    5. '	while' → logprob: -7.827194690704346
    6. '	line' → logprob: -10.077194213867188
    7. '(line' → logprob: -10.077194213867188
    8. ' ' → logprob: -10.702194213867188
    9. '  ' → logprob: -10.702194213867188
    10. 'line' → logprob: -10.702194213867188

Token 422: ' lines' (ID: 8698)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.08798395842313766
    2. 'while' → logprob: -3.0879838466644287
    3. ' line' → logprob: -3.5879838466644287
    4. '   ' → logprob: -4.587984085083008
    5. 'line' → logprob: -7.212984085083008
    6. ' for' → logprob: -9.962984085083008
    7. ' ligne' → logprob: -11.962984085083008
    8. 'for' → logprob: -12.087984085083008
    9. '	while' → logprob: -12.587984085083008
    10. '	line' → logprob: -13.712984085083008

Token 423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31721773743629456
    2. ' =' → logprob: -1.3172177076339722
    3. '.append' → logprob: -6.442217826843262
    4. '=[]' → logprob: -7.317217826843262
    5. '()' → logprob: -7.567217826843262
    6. '=sys' → logprob: -8.067217826843262
    7. '   ' → logprob: -8.442217826843262
    8. 'import' → logprob: -8.692217826843262
    9. '.' → logprob: -8.817217826843262
    10. '=input' → logprob: -9.442217826843262

Token 424: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0005558936391025782
    2. ' sys' → logprob: -7.500555992126465
    3. '[]' → logprob: -13.375555992126465
    4. 'iter' → logprob: -14.875555992126465
    5. '	sys' → logprob: -15.125555992126465
    6. '[]
' → logprob: -15.500555992126465
    7. '(sys' → logprob: -15.500555992126465
    8. '[' → logprob: -15.625555992126465
    9. '=sys' → logprob: -16.25055503845215
    10. '   ' → logprob: -18.62555503845215

Token 425: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.849109119386412e-06
    2. 'stdin' → logprob: -11.875009536743164
    3. '.' → logprob: -13.250009536743164
    4. '.stdout' → logprob: -14.000009536743164
    5. '.std' → logprob: -16.250009536743164
    6. ' stdin' → logprob: -16.625009536743164
    7. '(stdin' → logprob: -17.000009536743164
    8. '.argv' → logprob: -18.375009536743164
    9. '.stderr' → logprob: -18.875009536743164
    10. '.readline' → logprob: -18.875009536743164

Token 426: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01954052783548832
    2. '.readlines' → logprob: -4.019540309906006
    3. '.' → logprob: -6.644540309906006
    4. '()' → logprob: -10.894540786743164
    5. 'for' → logprob: -11.019540786743164
    6. '().' → logprob: -11.144540786743164
    7. '=' → logprob: -11.769540786743164
    8. '_lines' → logprob: -11.769540786743164
    9. '.stdin' → logprob: -11.769540786743164
    10. 'lines' → logprob: -12.394540786743164

Token 427: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006719640456140041
    2. '()' → logprob: -5.006719589233398
    3. '(' → logprob: -13.131719589233398
    4. 'lines' → logprob: -13.756719589233398
    5. '()\' → logprob: -14.631719589233398
    6. '()
' → logprob: -15.381719589233398
    7. '()).' → logprob: -15.631719589233398
    8. ' ().' → logprob: -15.756719589233398
    9. '()

' → logprob: -15.881719589233398
    10. '_lines' → logprob: -16.6317195892334

Token 428: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10020904988050461
    2. 'split' → logprob: -2.3502089977264404
    3. 'rstrip' → logprob: -13.60020923614502
    4. 'lines' → logprob: -14.22520923614502
    5. 'decode' → logprob: -14.72520923614502
    6. '(split' → logprob: -17.725208282470703
    7. ' split' → logprob: -18.225208282470703
    8. ' strip' → logprob: -18.225208282470703
    9. '(strip' → logprob: -18.350208282470703
    10. 'read' → logprob: -18.350208282470703

Token 429: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005705483490601182
    2. '()' → logprob: -7.500570774078369
    3. '('\' → logprob: -11.000570297241211
    4. '()\' → logprob: -14.625570297241211
    5. 'split' → logprob: -16.00057029724121
    6. '.split' → logprob: -16.25057029724121
    7. '()
' → logprob: -16.62557029724121
    8. '(' → logprob: -17.00057029724121
    9. ' ().' → logprob: -18.50057029724121
    10. '()

' → logprob: -18.50057029724121

Token 430: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -19.0
    3. '(split' → logprob: -20.5
    4. 'spl' → logprob: -22.0
    5. '.split' → logprob: -24.125
    6. 'strip' → logprob: -25.25
    7. 'lines' → logprob: -26.625
    8. '```' → logprob: -26.625
    9. 'sp' → logprob: -26.75
    10. '_split' → logprob: -27.125

Token 431: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.0015089125372469425
    2. 'lines' → logprob: -6.751508712768555
    3. '("\' → logprob: -8.001508712768555
    4. '()' → logprob: -12.626508712768555
    5. ''\' → logprob: -16.126508712768555
    6. '(' → logprob: -16.251508712768555
    7. '()
' → logprob: -16.626508712768555
    8. '('' → logprob: -17.001508712768555
    9. '()\' → logprob: -17.751508712768555
    10. '='\' → logprob: -20.376508712768555

Token 432: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002478273818269372
    2. '\n' → logprob: -6.002478122711182
    3. '
' → logprob: -13.50247859954834
    4. ''\' → logprob: -14.25247859954834
    5. '\' → logprob: -15.75247859954834
    6. 'newline' → logprob: -16.002477645874023
    7. ' n' → logprob: -16.377477645874023
    8. ' \' → logprob: -17.127477645874023
    9. ''n' → logprob: -17.377477645874023
    10. 'lines' → logprob: -17.502477645874023

Token 433: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.20598840713500977
    2. '')' → logprob: -1.7059884071350098
    3. ')
' → logprob: -5.95598840713501
    4. ')' → logprob: -6.33098840713501
    5. '   ' → logprob: -9.330987930297852
    6. '')
' → logprob: -9.455987930297852
    7. ')')
' → logprob: -10.955987930297852
    8. ' ')
' → logprob: -12.830987930297852
    9. '")
' → logprob: -13.330987930297852
    10. ')
' → logprob: -14.080987930297852

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07622862607240677
    2. ' for' → logprob: -2.701228618621826
    3. 'for' → logprob: -5.076228618621826
    4. ' i' → logprob: -12.201229095458984
    5. '    ' → logprob: -12.451229095458984
    6. '	for' → logprob: -12.701229095458984
    7. 'i' → logprob: -12.951229095458984
    8. 'idx' → logprob: -13.076229095458984
    9. '    
' → logprob: -13.326229095458984
    10. ' idx' → logprob: -13.326229095458984

Token 435: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9040501117706299
    2. 'i' (adapté à ' i') → logprob: -1.4040501117706299
    3. '   ' → logprob: -1.4040501117706299
    4. 'idx' → logprob: -3.15405011177063
    5. ' for' → logprob: -3.27905011177063
    6. 'n' → logprob: -4.529049873352051
    7. ' i' → logprob: -4.654049873352051
    8. ' idx' → logprob: -6.279049873352051
    9. 'index' → logprob: -7.029049873352051
    10. ' n' → logprob: -8.52904987335205

Token 436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20312780141830444
    2. ' =' → logprob: -1.7031278610229492
    3. 'nd' → logprob: -7.078127861022949
    4. 'n' → logprob: -7.453127861022949
    5. 'x' → logprob: -8.20312786102295
    6. 'nt' → logprob: -12.20312786102295
    7. 'dx' → logprob: -12.20312786102295
    8. 'f' → logprob: -13.70312786102295
    9. 'ndice' → logprob: -14.45312786102295
    10. '  ' → logprob: -14.95312786102295

Token 437: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.37507438659668
    4. '1' → logprob: -17.75007438659668
    5. '۰' → logprob: -19.25007438659668
    6. '[' → logprob: -19.75007438659668
    7. '  ' → logprob: -20.00007438659668
    8. '=' → logprob: -20.25007438659668
    9. '```' → logprob: -20.43757438659668
    10. '2' → logprob: -20.81257438659668

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '1' → logprob: -15.875000953674316
    4. '   ' → logprob: -21.250001907348633
    5. '2' → logprob: -21.625001907348633
    6. '۰' → logprob: -22.250001907348633
    7. '```' → logprob: -23.187501907348633
    8. '-' → logprob: -23.250001907348633
    9. '  ' → logprob: -23.500001907348633
    10. '=' → logprob: -23.750001907348633

Token 439: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11212602257728577
    2. 'while' → logprob: -2.862126111984253
    3. '
' → logprob: -3.487126111984253
    4. ' while' → logprob: -4.612125873565674
    5. '    
' → logprob: -5.612125873565674
    6. '	while' → logprob: -6.112125873565674
    7. ')' → logprob: -7.862125873565674
    8. '<|end|>' → logprob: -7.987125873565674
    9. '    ' → logprob: -8.362126350402832
    10. ' ' → logprob: -8.487126350402832

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07970524579286575
    2. 'while' → logprob: -2.704705238342285
    3. ' while' → logprob: -4.829705238342285
    4. 'n' → logprob: -6.579705238342285
    5. '	while' → logprob: -8.829705238342285
    6. ' n' → logprob: -9.204705238342285
    7. '
' → logprob: -10.079705238342285
    8. '```' → logprob: -10.704705238342285
    9. ',' → logprob: -11.829705238342285
    10. '    
' → logprob: -11.954705238342285

Token 441: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6182436347007751
    2. ' while' → logprob: -0.9932436347007751
    3. '   ' → logprob: -2.74324369430542
    4. 'n' → logprob: -3.86824369430542
    5. ' n' → logprob: -5.24324369430542
    6. '	while' → logprob: -8.993243217468262
    7. 'tokens' → logprob: -10.868243217468262
    8. '```' → logprob: -11.368243217468262
    9. '
' → logprob: -11.743243217468262
    10. '	n' → logprob: -12.118243217468262

Token 442: ' True' (ID: 6432)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08915801346302032
    2. ' i' → logprob: -2.464158058166504
    3. 'inputs' → logprob: -9.089158058166504
    4. ' lines' → logprob: -10.589158058166504
    5. ' inputs' → logprob: -10.839158058166504
    6. ' ' → logprob: -10.964158058166504
    7. 'lines' → logprob: -11.089158058166504
    8. ' True' → logprob: -11.464158058166504
    9. '   ' → logprob: -11.589158058166504
    10. 'True' → logprob: -12.089158058166504

Token 443: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7113873362541199
    2. '       ' → logprob: -0.9613873362541199
    3. ':
' → logprob: -2.2113873958587646
    4. '   ' → logprob: -4.2113871574401855
    5. ',' → logprob: -7.5863871574401855
    6. '):
' → logprob: -8.336387634277344
    7. ' and' → logprob: -8.586387634277344
    8. '<|end|>' → logprob: -8.586387634277344
    9. '<|end|>' → logprob: -8.711387634277344
    10. '=' → logprob: -8.711387634277344

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017430558800697327
    2. '   ' → logprob: -4.642430782318115
    3. ' if' → logprob: -5.142430782318115
    4. 'if' → logprob: -7.392430782318115
    5. '    ' → logprob: -7.517430782318115
    6. 'n' → logprob: -9.017430305480957
    7. '	   ' → logprob: -9.517430305480957
    8. '     ' → logprob: -9.642430305480957
    9. '      ' → logprob: -9.767430305480957
    10. ' ' → logprob: -10.142430305480957

Token 445: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4266287684440613
    2. ' if' → logprob: -1.426628828048706
    3. 'line' → logprob: -3.051628828048706
    4. 'n' → logprob: -3.926628828048706
    5. ' line' → logprob: -4.051628589630127
    6. '       ' → logprob: -4.426628589630127
    7. ' n' → logprob: -5.051628589630127
    8. '   ' → logprob: -5.676628589630127
    9. 'lines' → logprob: -8.176629066467285
    10. 'num' → logprob: -8.801629066467285

Token 446: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24796248972415924
    2. 'lines' → logprob: -1.747962474822998
    3. ' i' → logprob: -3.747962474822998
    4. ' lines' → logprob: -3.997962474822998
    5. 'inputs' → logprob: -5.872962474822998
    6. ' ' → logprob: -8.622962951660156
    7. ' inputs' → logprob: -8.747962951660156
    8. '   ' → logprob: -8.747962951660156
    9. ' not' → logprob: -9.247962951660156
    10. 'not' → logprob: -9.497962951660156

Token 447: '>=' (ID: 20974)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1639336347579956
    2. '>=' → logprob: -1.9139336347579956
    3. ' ==' → logprob: -6.538933753967285
    4. ' <' → logprob: -6.788933753967285
    5. '==' → logprob: -7.663933753967285
    6. ']>=' → logprob: -8.538933753967285
    7. '[' → logprob: -9.038933753967285
    8. '<' → logprob: -9.038933753967285
    9. ')>=' → logprob: -9.413933753967285
    10. '<len' → logprob: -9.788933753967285

Token 448: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.676292231422849e-05
    2. ' len' → logprob: -11.000017166137695
    3. '(len' → logprob: -17.375017166137695
    4. '=len' → logprob: -19.625017166137695
    5. '	len' → logprob: -19.875017166137695
    6. '<len' → logprob: -20.000017166137695
    7. ',len' → logprob: -20.250017166137695
    8. '[len' → logprob: -20.500017166137695
    9. 'length' → logprob: -22.000017166137695
    10. '0' → logprob: -22.125017166137695

Token 449: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.023457316681742668
    2. ' lines' → logprob: -4.0234575271606445
    3. 'lines' → logprob: -5.2734575271606445
    4. '(inputs' → logprob: -9.148457527160645
    5. 'inputs' → logprob: -10.648457527160645
    6. '	lines' → logprob: -11.273457527160645
    7. ' inputs' → logprob: -11.773457527160645
    8. ' (' → logprob: -12.273457527160645
    9. '_lines' → logprob: -12.273457527160645
    10. '(' → logprob: -12.273457527160645

Token 450: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.053145572543144226
    2. ')' → logprob: -3.30314564704895
    3. ' and' → logprob: -4.803145408630371
    4. '):
' → logprob: -6.303145408630371
    5. '):' → logprob: -6.428145408630371
    6. 'or' → logprob: -6.678145408630371
    7. ':' → logprob: -7.053145408630371
    8. '       ' → logprob: -7.553145408630371
    9. 'and' → logprob: -8.428145408630371
    10. ':
' → logprob: -8.678145408630371

Token 451: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012735659256577492
    2. ' break' → logprob: -7.7512736320495605
    3. '       ' → logprob: -7.8762736320495605
    4. '   ' → logprob: -8.376273155212402
    5. 'break' → logprob: -9.251273155212402
    6. ' ' → logprob: -9.626273155212402
    7. '		' → logprob: -10.251273155212402
    8. '	break' → logprob: -11.376273155212402
    9. '	   ' → logprob: -12.626273155212402
    10. ' or' → logprob: -12.876273155212402

Token 452: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3118606507778168
    2. '           ' → logprob: -1.8118606805801392
    3. ' break' → logprob: -2.4368605613708496
    4. '       ' → logprob: -4.18686056137085
    5. '   ' → logprob: -6.68686056137085
    6. '	break' → logprob: -7.56186056137085
    7. ' ' → logprob: -9.686861038208008
    8. 'return' → logprob: -10.311861038208008
    9. '               ' → logprob: -10.936861038208008
    10. '_break' → logprob: -11.311861038208008

Token 453: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002470305422320962
    2. '   ' → logprob: -6.75247049331665
    3. ' if' → logprob: -8.252470016479492
    4. '           ' → logprob: -8.377470016479492
    5. ' and' → logprob: -8.502470016479492
    6. '<|end|>' → logprob: -8.877470016479492
    7. '
' → logprob: -9.252470016479492
    8. ',' → logprob: -9.627470016479492
    9. '        
' → logprob: -9.752470016479492
    10. ' ' → logprob: -10.127470016479492

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002632138319313526
    2. '   ' → logprob: -6.877632141113281
    3. ' if' → logprob: -7.877632141113281
    4. '        
' → logprob: -8.002632141113281
    5. ' ' → logprob: -8.127632141113281
    6. ' 
' → logprob: -9.127632141113281
    7. '
' → logprob: -9.627632141113281
    8. '           ' → logprob: -9.627632141113281
    9. '    
' → logprob: -10.127632141113281
    10. ' and' → logprob: -10.127632141113281

Token 455: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.265508234500885
    2. ' line' → logprob: -2.0155081748962402
    3. '       ' → logprob: -2.3905081748962402
    4. 'n' (adapté à ' n') → logprob: -5.39050817489624
    5. ' n' → logprob: -6.76550817489624
    6. '   ' → logprob: -6.76550817489624
    7. 'ligne' → logprob: -7.64050817489624
    8. 'if' → logprob: -8.140508651733398
    9. '	line' → logprob: -8.640508651733398
    10. ' if' → logprob: -8.640508651733398

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2304040789604187
    2. '=' → logprob: -1.6054041385650635
    3. '=int' → logprob: -6.105403900146484
    4. '_line' → logprob: -6.230403900146484
    5. '=line' → logprob: -7.980403900146484
    6. '   ' → logprob: -8.230403900146484
    7. ' ' → logprob: -9.980403900146484
    8. 'line' → logprob: -10.105403900146484
    9. '=
' → logprob: -10.980403900146484
    10. '_str' → logprob: -11.480403900146484

Token 457: ' lines' (ID: 8698)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.250335693359375
    4. '(int' → logprob: -19.750335693359375
    5. '	int' → logprob: -19.875335693359375
    6. '[int' → logprob: -20.125335693359375
    7. '=int' → logprob: -20.750335693359375
    8. ' ' → logprob: -21.375335693359375
    9. 'lines' → logprob: -22.500335693359375
    10. '<int' → logprob: -22.625335693359375

Token 458: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.0391463193809614e-05
    2. '[' → logprob: -10.000060081481934
    3. ' [' → logprob: -11.750060081481934
    4. '   ' → logprob: -12.875060081481934
    5. '[int' → logprob: -13.000060081481934
    6. '][' → logprob: -14.500060081481934
    7. '```' → logprob: -14.625060081481934
    8. ')[' → logprob: -14.750060081481934
    9. '       ' → logprob: -15.750060081481934
    10. '[n' → logprob: -16.37506103515625

Token 459: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0296952947974205
    2. ']
' → logprob: -4.154695510864258
    3. ']' → logprob: -4.654695510864258
    4. '])' → logprob: -6.279695510864258
    5. '])
' → logprob: -6.279695510864258
    6. '.strip' → logprob: -8.904695510864258
    7. ' ].' → logprob: -9.154695510864258
    8. '       ' → logprob: -11.529695510864258
    9. ']+' → logprob: -12.029695510864258
    10. ' ]
' → logprob: -12.279695510864258

Token 460: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. ' strip' → logprob: -19.0
    3. 'rstrip' → logprob: -20.0
    4. 'str' → logprob: -21.125
    5. '_strip' → logprob: -21.5
    6. 'split' → logprob: -21.75
    7. '.strip' → logprob: -23.0
    8. 'Strip' → logprob: -23.125
    9. 'isdigit' → logprob: -23.625
    10. '-strip' → logprob: -23.75

Token 461: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25196391344070435
    2. '()
' → logprob: -1.5019638538360596
    3. '()
' → logprob: -11.12696361541748
    4. '       ' → logprob: -12.37696361541748
    5. '()\' → logprob: -12.37696361541748
    6. '()==' → logprob: -12.75196361541748
    7. '()

' → logprob: -12.87696361541748
    8. '())' → logprob: -13.12696361541748
    9. '()`' → logprob: -13.87696361541748
    10. '();' → logprob: -14.37696361541748

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016808554530143738
    2. '        
' → logprob: -4.64180850982666
    3. ' if' → logprob: -6.64180850982666
    4. '
' → logprob: -6.64180850982666
    5. 'if' → logprob: -7.14180850982666
    6. '           ' → logprob: -7.51680850982666
    7. '\n' → logprob: -7.76680850982666
    8. '   ' → logprob: -7.76680850982666
    9. ' 
' → logprob: -7.76680850982666
    10. ' =' → logprob: -7.89180850982666

Token 463: ' i' (ID: 575)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8448666930198669
    2. '       ' → logprob: -1.3448667526245117
    3. 'if' → logprob: -1.3448667526245117
    4. 'i' (adapté à ' i') → logprob: -3.2198667526245117
    5. ' i' → logprob: -4.719866752624512
    6. 'n' → logprob: -9.094866752624512
    7. '   ' → logprob: -9.719866752624512
    8. '[i' → logprob: -10.219866752624512
    9. '        
' → logprob: -10.344866752624512
    10. ' =' → logprob: -10.344866752624512

Token 464: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011351012624800205
    2. ' +=' → logprob: -4.511351108551025
    3. '=' → logprob: -8.136350631713867
    4. '+' → logprob: -12.261350631713867
    5. ' =' → logprob: -12.886350631713867
    6. '==' → logprob: -13.261350631713867
    7. ']+=' → logprob: -14.386350631713867
    8. '+='' → logprob: -15.011350631713867
    9. '+="' → logprob: -15.761350631713867
    10. '=int' → logprob: -15.886350631713867

Token 465: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.875001907348633
    4. '   ' → logprob: -21.375001907348633
    5. '0' → logprob: -22.125001907348633
    6. '`' → logprob: -22.375001907348633
    7. '１' → logprob: -22.500001907348633
    8. '
' → logprob: -23.125001907348633
    9. '``' → logprob: -23.250001907348633
    10. '۱' → logprob: -23.375001907348633

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -22.375
    4. '   ' → logprob: -23.75
    5. '
' → logprob: -24.25
    6. '+' → logprob: -24.375
    7. '１' → logprob: -24.375
    8. '0' → logprob: -24.625
    9. '``' → logprob: -25.0
    10. '`' → logprob: -25.875

Token 467: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00979575328528881
    2. '        
' → logprob: -5.134795665740967
    3. ' if' → logprob: -6.634795665740967
    4. 'if' → logprob: -7.009795665740967
    5. '<|end|>' → logprob: -7.759795665740967
    6. '
' → logprob: -7.884795665740967
    7. ' 
' → logprob: -8.759796142578125
    8. '        ' → logprob: -9.009796142578125
    9. '           ' → logprob: -9.384796142578125
    10. '  
' → logprob: -9.509796142578125

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007570966263301671
    2. ' if' → logprob: -7.750757217407227
    3. 'if' → logprob: -8.625757217407227
    4. '        
' → logprob: -9.500757217407227
    5. '   ' → logprob: -10.125757217407227
    6. '           ' → logprob: -11.875757217407227
    7. '        ' → logprob: -11.875757217407227
    8. '      ' → logprob: -12.750757217407227
    9. ' ' → logprob: -13.000757217407227
    10. '	' → logprob: -13.125757217407227

Token 469: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007049248553812504
    2. ' if' → logprob: -5.007049083709717
    3. '       ' → logprob: -8.007049560546875
    4. 'n' → logprob: -14.882049560546875
    5. '   ' → logprob: -15.632049560546875
    6. 'try' → logprob: -15.757049560546875
    7. '	if' → logprob: -15.757049560546875
    8. ' ' → logprob: -19.007049560546875
    9. 'If' → logprob: -19.257049560546875
    10. '           ' → logprob: -19.507049560546875

Token 470: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020354038861114532
    2. ' n' → logprob: -8.500203132629395
    3. 'not' → logprob: -18.25020408630371
    4. '	n' → logprob: -18.37520408630371
    5. '   ' → logprob: -19.12520408630371
    6. 'n't' → logprob: -19.75020408630371
    7. ' not' → logprob: -20.00020408630371
    8. ' ' → logprob: -20.12520408630371
    9. '0' → logprob: -20.62520408630371
    10. '
' → logprob: -21.37520408630371

Token 471: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2015182077884674
    2. '==' → logprob: -1.701518177986145
    3. '()==' → logprob: -10.201518058776855
    4. '=' → logprob: -10.701518058776855
    5. ')==' → logprob: -11.326518058776855
    6. '=='' → logprob: -11.701518058776855
    7. '.strip' → logprob: -12.451518058776855
    8. ']==' → logprob: -12.576518058776855
    9. ' =' → logprob: -12.701518058776855
    10. '=="' → logprob: -12.826518058776855

Token 472: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000972325331531465
    2. '"' → logprob: -7.250972270965576
    3. '0' → logprob: -8.250972747802734
    4. ' '' → logprob: -13.625972747802734
    5. '`' → logprob: -16.625972747802734
    6. ' ' → logprob: -17.125972747802734
    7. '('' → logprob: -19.125972747802734
    8. '’' → logprob: -19.125972747802734
    9. ''''' → logprob: -19.125972747802734
    10. '
' → logprob: -19.250972747802734

Token 473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ''' → logprob: -14.250000953674316
    3. ' ' → logprob: -18.875
    4. '"' → logprob: -20.5
    5. '```' → logprob: -21.75
    6. '`' → logprob: -22.75
    7. '00' → logprob: -24.0
    8. '۰' → logprob: -24.25
    9. '``' → logprob: -24.375
    10. '[' → logprob: -24.5

Token 474: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.3183743357658386
    2. '':' → logprob: -1.3183743953704834
    3. ''' → logprob: -5.568374156951904
    4. '\n' → logprob: -6.818374156951904
    5. '':
' → logprob: -8.693374633789062
    6. ''):
' → logprob: -11.318374633789062
    7. '':

' → logprob: -13.443374633789062
    8. ':
' → logprob: -13.443374633789062
    9. ':' → logprob: -13.693374633789062
    10. ''
' → logprob: -13.943374633789062

Token 475: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001017551330733113
    2. ':' → logprob: -10.375102043151855
    3. '		' → logprob: -10.375102043151855
    4. '       ' → logprob: -10.750102043151855
    5. '          ' → logprob: -12.375102043151855
    6. ':
' → logprob: -12.500102043151855
    7. '               ' → logprob: -13.000102043151855
    8. ' break' → logprob: -13.125102043151855
    9. ',' → logprob: -13.625102043151855
    10. '	       ' → logprob: -13.750102043151855

Token 476: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11074472218751907
    2. 'break' (adapté à ' break') → logprob: -2.6107447147369385
    3. ' break' → logprob: -3.4857447147369385
    4. '	break' → logprob: -7.985744953155518
    5. '		' → logprob: -8.48574447631836
    6. '       ' → logprob: -8.98574447631836
    7. '               ' → logprob: -10.48574447631836
    8. '	       ' → logprob: -11.48574447631836
    9. '   ' → logprob: -12.48574447631836
    10. 'return' → logprob: -13.48574447631836

Token 477: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042102107545360923
    2. 'n' → logprob: -8.125420570373535
    3. '        
' → logprob: -9.750420570373535
    4. '<|end|>' → logprob: -10.500420570373535
    5. '
' → logprob: -11.125420570373535
    6. ' n' → logprob: -12.125420570373535
    7. '   ' → logprob: -12.625420570373535
    8. 'import' → logprob: -12.750420570373535
    9. '```' → logprob: -12.875420570373535
    10. '           ' → logprob: -13.875420570373535

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004208751488476992
    2. 'n' → logprob: -5.629208564758301
    3. ' n' → logprob: -7.754208564758301
    4. '   ' → logprob: -9.5042085647583
    5. '        
' → logprob: -9.6292085647583
    6. '```' → logprob: -11.5042085647583
    7. '        ' → logprob: -12.0042085647583
    8. '           ' → logprob: -12.1292085647583
    9. '      ' → logprob: -12.5042085647583
    10. '    ' → logprob: -13.2542085647583

Token 479: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.07472638785839081
    2. '       ' → logprob: -3.3247263431549072
    3. ' n' → logprob: -3.3247263431549072
    4. '   ' → logprob: -11.074726104736328
    5. '	n' → logprob: -11.824726104736328
    6. '        
' → logprob: -11.949726104736328
    7. 'num' → logprob: -12.949726104736328
    8. '```' → logprob: -14.074726104736328
    9. '      ' → logprob: -14.324726104736328
    10. ',n' → logprob: -14.449726104736328

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932028532028198
    2. ' =' → logprob: -0.6932028532028198
    3. '=int' → logprob: -9.81820297241211
    4. 'int' → logprob: -14.81820297241211
    5. 'n' → logprob: -15.06820297241211
    6. '=
' → logprob: -15.19320297241211
    7. ' ' → logprob: -15.81820297241211
    8. ' =
' → logprob: -16.69320297241211
    9. '＝' → logprob: -17.06820297241211
    10. ',' → logprob: -17.81820297241211

Token 481: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009114635176956654
    2. ' int' → logprob: -7.000911235809326
    3. '	int' → logprob: -24.625911712646484
    4. '[int' → logprob: -24.625911712646484
    5. '(int' → logprob: -24.750911712646484
    6. '   ' → logprob: -25.125911712646484
    7. ' ' → logprob: -25.250911712646484
    8. '=int' → logprob: -26.125911712646484
    9. '  ' → logprob: -26.750911712646484
    10. '<int' → logprob: -27.125911712646484

Token 482: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005386487580835819
    2. '(' → logprob: -5.2553863525390625
    3. 'n' → logprob: -9.130386352539062
    4. ' (' → logprob: -10.380386352539062
    5. ')' → logprob: -11.630386352539062
    6. ' n' → logprob: -13.005386352539062
    7. ')n' → logprob: -13.755386352539062
    8. '(
' → logprob: -14.880386352539062
    9. '('' → logprob: -15.505386352539062
    10. ' )' → logprob: -15.505386352539062

Token 483: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004694868810474873
    2. ')
' → logprob: -5.379694938659668
    3. '       ' → logprob: -9.629694938659668
    4. ')
' → logprob: -12.879694938659668
    5. ' )' → logprob: -13.129694938659668
    6. '')' → logprob: -14.379694938659668
    7. ')`' → logprob: -14.504694938659668
    8. '[' → logprob: -14.504694938659668
    9. '   ' → logprob: -15.004694938659668
    10. '<|end|>' → logprob: -15.004694938659668

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04470019415020943
    2. 'matrix' → logprob: -3.1697001457214355
    3. 'dist' → logprob: -7.1697001457214355
    4. 'distance' → logprob: -7.7947001457214355
    5. 'mat' → logprob: -8.669700622558594
    6. ' matrix' → logprob: -8.794700622558594
    7. '   ' → logprob: -10.294700622558594
    8. '        
' → logprob: -10.419700622558594
    9. ' distances' → logprob: -10.419700622558594
    10. '	matrix' → logprob: -10.794700622558594

Token 485: ' matrix' (ID: 12248)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.347732812166214
    2. 'matrix' (adapté à ' matrix') → logprob: -1.3477327823638916
    3. 'mat' → logprob: -4.097733020782471
    4. '       ' → logprob: -4.722733020782471
    5. 'distance' → logprob: -4.847733020782471
    6. 'd' → logprob: -8.222732543945312
    7. ' dist' → logprob: -9.347732543945312
    8. ' matrix' → logprob: -9.847732543945312
    9. ' distances' → logprob: -9.972732543945312
    10. '	dist' → logprob: -11.097732543945312

Token 486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022078317124396563
    2. '=' → logprob: -6.1272077560424805
    3. '=[]' → logprob: -10.75220775604248
    4. ' =
' → logprob: -14.87720775604248
    5. ' ' → logprob: -15.00220775604248
    6. '=[]
' → logprob: -15.12720775604248
    7. ',' → logprob: -15.75220775604248
    8. ' ' → logprob: -16.877208709716797
    9. 's' → logprob: -17.002208709716797
    10. ' =[' → logprob: -17.002208709716797

Token 487: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.14507432281970978
    2. '[' → logprob: -2.3950743675231934
    3. '[]
' → logprob: -3.1450743675231934
    4. ' []' → logprob: -7.645074367523193
    5. ' [' → logprob: -8.895073890686035
    6. '[n' → logprob: -9.270073890686035
    7. '[[' → logprob: -11.270073890686035
    8. '[str' → logprob: -11.520073890686035
    9. '[list' → logprob: -11.770073890686035
    10. '[new' → logprob: -11.770073890686035

Token 488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015062130114529282
    2. ' for' → logprob: -9.625150680541992
    3. '<|end|>' → logprob: -10.125150680541992
    4. 'for' → logprob: -10.500150680541992
    5. '	' → logprob: -12.125150680541992
    6. '	   ' → logprob: -12.625150680541992
    7. '   ' → logprob: -13.000150680541992
    8. '	for' → logprob: -13.250150680541992
    9. '<|end|>' → logprob: -13.500150680541992
    10. ',' → logprob: -13.750150680541992

Token 489: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03478134423494339
    2. 'for' → logprob: -3.4097814559936523
    3. ' for' → logprob: -6.909781455993652
    4. '	for' → logprob: -9.284781455993652
    5. 'while' → logprob: -10.909781455993652
    6. '   ' → logprob: -11.659781455993652
    7. '	' → logprob: -11.784781455993652
    8. '	   ' → logprob: -12.159781455993652
    9. '```' → logprob: -13.784781455993652
    10. '        
' → logprob: -14.409781455993652

Token 490: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025179030373692513
    2. ' for' → logprob: -3.775179147720337
    3. '       ' → logprob: -6.275178909301758
    4. 'while' → logprob: -10.025178909301758
    5. '	for' → logprob: -12.525178909301758
    6. '   ' → logprob: -13.775178909301758
    7. ' while' → logprob: -15.900178909301758
    8. ' ' → logprob: -17.025178909301758
    9. ' ' → logprob: -17.150178909301758
    10. '```' → logprob: -18.275178909301758

Token 491: ' distances' (ID: 48294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23423781991004944
    2. ' for' → logprob: -1.609237790107727
    3. ' lines' → logprob: -5.9842376708984375
    4. '   ' → logprob: -6.4842376708984375
    5. '       ' → logprob: -6.7342376708984375
    6. 'matrix' → logprob: -7.1092376708984375
    7. ' j' → logprob: -7.3592376708984375
    8. 'while' → logprob: -7.6092376708984375
    9. '    ' → logprob: -7.9842376708984375
    10. 'lines' → logprob: -8.109237670898438

Token 492: ' peuvent' (ID: 21321)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006366224493831396
    2. ' for' → logprob: -5.25636625289917
    3. '	' → logprob: -8.256365776062012
    4. '	for' → logprob: -8.631365776062012
    5. 'for' → logprob: -8.756365776062012
    6. '	       ' → logprob: -9.131365776062012
    7. '<|end|>' → logprob: -9.506365776062012
    8. '	   ' → logprob: -9.756365776062012
    9. ' ' → logprob: -9.881365776062012
    10. ' =' → logprob: -10.131365776062012

Token 493: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.526782751083374
    2. 'être' → logprob: -1.776782751083374
    3. ' be' → logprob: -2.026782751083374
    4. ' varier' → logprob: -3.651782751083374
    5. '   ' → logprob: -4.276782989501953
    6. ' avoir' → logprob: -4.651782989501953
    7. 'for' → logprob: -4.776782989501953
    8. ' ' → logprob: -5.151782989501953
    9. ' contain' → logprob: -6.026782989501953
    10. 'n' → logprob: -6.026782989501953

Token 494: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.0862242802977562
    2. 'part' → logprob: -2.961224317550659
    3. ' sur' → logprob: -4.21122407913208
    4. ' répart' → logprob: -5.71122407913208
    5. 'split' → logprob: -6.46122407913208
    6. 'plus' → logprob: -6.46122407913208
    7. 'in' → logprob: -7.21122407913208
    8. ' part' → logprob: -7.46122407913208
    9. 'dans' → logprob: -7.71122407913208
    10. 'mult' → logprob: -7.83622407913208

Token 495: ' plusieurs' (ID: 20875)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0513807013630867
    2. ' plusieurs' → logprob: -3.5513806343078613
    3. 'une' → logprob: -4.051380634307861
    4. ' plus' → logprob: -6.301380634307861
    5. ' une' → logprob: -6.926380634307861
    6. 'multip' → logprob: -7.926380634307861
    7. '   ' → logprob: -8.80138111114502
    8. ' ' → logprob: -9.05138111114502
    9. 'multiple' → logprob: -9.17638111114502
    10. 'pl' → logprob: -9.80138111114502

Token 496: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.16616198420524597
    2. 'l' → logprob: -2.0411620140075684
    3. ' lines' → logprob: -4.166162014007568
    4. 'lines' → logprob: -5.041162014007568
    5. 'ligne' → logprob: -7.041162014007568
    6. 'li' → logprob: -9.29116153717041
    7. ' ligne' → logprob: -9.41616153717041
    8. ' lign' → logprob: -9.66616153717041
    9. ' ' → logprob: -10.29116153717041
    10. ' linhas' → logprob: -11.04116153717041

Token 497: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008494134526699781
    2. ',' → logprob: -7.75084924697876
    3. ' for' → logprob: -8.250849723815918
    4. 'for' → logprob: -10.250849723815918
    5. '<|end|>' → logprob: -10.375849723815918
    6. 'while' → logprob: -11.250849723815918
    7. '   ' → logprob: -11.375849723815918
    8. '        
' → logprob: -11.375849723815918
    9. '	' → logprob: -11.375849723815918
    10. ' while' → logprob: -11.750849723815918

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.504040356958285e-05
    2. ' for' → logprob: -10.250064849853516
    3. ',' → logprob: -11.250064849853516
    4. '<|end|>' → logprob: -12.500064849853516
    5. 'for' → logprob: -13.000064849853516
    6. '   ' → logprob: -13.250064849853516
    7. '	' → logprob: -13.250064849853516
    8. ' ' → logprob: -13.625064849853516
    9. 'while' → logprob: -14.000064849853516
    10. '	   ' → logprob: -14.000064849853516

Token 499: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10644722729921341
    2. 'while' (adapté à ' while') → logprob: -3.231447219848633
    3. ' while' → logprob: -3.606447219848633
    4. ' for' → logprob: -3.606447219848633
    5. 'for' → logprob: -4.981447219848633
    6. '   ' → logprob: -9.231447219848633
    7. '	while' → logprob: -9.606447219848633
    8. 'count' → logprob: -10.481447219848633
    9. '	for' → logprob: -10.606447219848633
    10. ' ' → logprob: -10.856447219848633

Token 500: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.17983175814151764
    2. ' len' → logprob: -1.8048317432403564
    3. ' ' → logprob: -10.679831504821777
    4. '   ' → logprob: -10.804831504821777
    5. '(len' → logprob: -11.054831504821777
    6. '	len' → logprob: -11.679831504821777
    7. 'i' → logprob: -12.304831504821777
    8. 'matrix' → logprob: -12.304831504821777
    9. ' i' → logprob: -12.429831504821777
    10. 'n' → logprob: -13.179831504821777

Token 501: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.029175808653235435
    2. 'matrix' → logprob: -3.6541757583618164
    3. ' matrix' → logprob: -6.279175758361816
    4. '(' → logprob: -7.029175758361816
    5. ' (' → logprob: -9.529175758361816
    6. '	matrix' → logprob: -10.404175758361816
    7. ' ' → logprob: -13.154175758361816
    8. '(m' → logprob: -13.279175758361816
    9. '(
' → logprob: -13.904175758361816
    10. '  ' → logprob: -13.904175758361816

Token 502: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2670922577381134
    2. ')<' → logprob: -1.767092227935791
    3. '<' → logprob: -2.892092227935791
    4. '[' → logprob: -5.267092227935791
    5. ' <' → logprob: -6.392092227935791
    6. '<m' → logprob: -8.14209270477295
    7. '<n' → logprob: -8.26709270477295
    8. '<len' → logprob: -8.64209270477295
    9. ')==' → logprob: -8.89209270477295
    10. '[-' → logprob: -9.64209270477295

Token 503: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4323597848415375
    2. ' <' → logprob: -1.0573598146438599
    3. '<len' → logprob: -6.43235969543457
    4. '[' → logprob: -7.05735969543457
    5. '<n' → logprob: -7.68235969543457
    6. '<m' → logprob: -8.68235969543457
    7. '<size' → logprob: -8.80735969543457
    8. ')<' → logprob: -9.55735969543457
    9. '()<' → logprob: -9.55735969543457
    10. '<int' → logprob: -10.30735969543457

Token 504: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012515541166067123
    2. ' n' → logprob: -4.387515544891357
    3. '(n' → logprob: -12.3875150680542
    4. '[n' → logprob: -14.2625150680542
    5. '	n' → logprob: -14.6375150680542
    6. ' (' → logprob: -15.6375150680542
    7. '   ' → logprob: -15.7625150680542
    8. ')n' → logprob: -16.387516021728516
    9. 'matrix' → logprob: -16.637516021728516
    10. ' ' → logprob: -16.762516021728516

Token 505: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24302057921886444
    2. ':
' → logprob: -1.7430205345153809
    3. ' and' → logprob: -3.493020534515381
    4. 'and' → logprob: -5.368020534515381
    5. '*n' → logprob: -5.743020534515381
    6. '   ' → logprob: -7.493020534515381
    7. '*' → logprob: -7.743020534515381
    8. 'n' → logprob: -8.368021011352539
    9. ' or' → logprob: -8.618021011352539
    10. ' *' → logprob: -8.743021011352539

Token 506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003442832676228136
    2. '	       ' → logprob: -9.125344276428223
    3. ' lines' → logprob: -9.875344276428223
    4. ' line' → logprob: -10.375344276428223
    5. '       ' → logprob: -10.625344276428223
    6. '<|end|>' → logprob: -10.625344276428223
    7. '```' → logprob: -11.000344276428223
    8. 'tokens' → logprob: -11.000344276428223
    9. '   ' → logprob: -11.500344276428223
    10. '<|end|>' → logprob: -11.625344276428223

Token 507: ' row' (ID: 5225)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -1.1767683029174805
    2. ' row' → logprob: -1.4267683029174805
    3. 'matrix' → logprob: -1.6767683029174805
    4. 'row' (adapté à ' row') → logprob: -1.9267683029174805
    5. ' line' → logprob: -2.6767683029174805
    6. 'line' → logprob: -4.0517683029174805
    7. ' parts' → logprob: -4.4267683029174805
    8. '           ' → logprob: -4.5517683029174805
    9. '   ' → logprob: -5.6767683029174805
    10. 'rows' → logprob: -6.8017683029174805

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015230344608426094
    2. '=' → logprob: -4.265230178833008
    3. '_line' → logprob: -7.765230178833008
    4. ' +=' → logprob: -8.015230178833008
    5. '_tokens' → logprob: -9.765230178833008
    6. 's' → logprob: -9.890230178833008
    7. '.extend' → logprob: -10.265230178833008
    8. '.append' → logprob: -10.265230178833008
    9. '+=' → logprob: -10.640230178833008
    10. '=line' → logprob: -10.640230178833008

Token 509: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4266315698623657
    2. ' list' → logprob: -1.1766315698623657
    3. 'lines' → logprob: -3.676631450653076
    4. ' lines' → logprob: -4.301631450653076
    5. '[' → logprob: -9.551631927490234
    6. ' [' → logprob: -10.676631927490234
    7. '[list' → logprob: -10.926631927490234
    8. '[]
' → logprob: -12.426631927490234
    9. '[]' → logprob: -13.051631927490234
    10. '(lines' → logprob: -13.301631927490234

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004210532642900944
    2. '       ' → logprob: -6.879210472106934
    3. 'tokens' → logprob: -7.379210472106934
    4. ' while' → logprob: -7.754210472106934
    5. 'while' → logprob: -7.754210472106934
    6. 'for' → logprob: -8.004210472106934
    7. ' for' → logprob: -8.129210472106934
    8. ' =' → logprob: -8.879210472106934
    9. '<|end|>' → logprob: -8.879210472106934
    10. '	       ' → logprob: -9.254210472106934

Token 511: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.13881143927574158
    2. ' while' → logprob: -3.0138113498687744
    3. 'for' → logprob: -3.2638113498687744
    4. '           ' → logprob: -4.5138115882873535
    5. 'tokens' → logprob: -4.5138115882873535
    6. 'lines' → logprob: -4.8888115882873535
    7. 'parts' → logprob: -6.1388115882873535
    8. ' for' → logprob: -6.2638115882873535
    9. 'len' → logprob: -6.6388115882873535
    10. 'row' → logprob: -6.8888115882873535

Token 512: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011615946888923645
    2. ' len' → logprob: -4.511615753173828
    3. 'True' → logprob: -8.136615753173828
    4. 'row' → logprob: -8.886615753173828
    5. ' True' → logprob: -9.511615753173828
    6. 'not' → logprob: -10.511615753173828
    7. '(len' → logprob: -11.136615753173828
    8. ' ' → logprob: -11.386615753173828
    9. ' not' → logprob: -11.886615753173828
    10. '  ' → logprob: -14.011615753173828

Token 513: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.14232398569583893
    2. 'row' → logprob: -2.1423239707946777
    3. 'matrix' → logprob: -4.767323970794678
    4. '(matrix' → logprob: -5.267323970794678
    5. ' row' → logprob: -6.642323970794678
    6. '(' → logprob: -8.892324447631836
    7. ' matrix' → logprob: -9.017324447631836
    8. ' (' → logprob: -11.017324447631836
    9. '[row' → logprob: -11.017324447631836
    10. '	row' → logprob: -11.767324447631836

Token 514: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1480095535516739
    2. ' <' → logprob: -2.2730095386505127
    3. ')' → logprob: -4.023009777069092
    4. ')<' → logprob: -4.523009777069092
    5. '()<' → logprob: -5.398009777069092
    6. '<len' → logprob: -7.773009777069092
    7. '()' → logprob: -8.648009300231934
    8. '[' → logprob: -8.898009300231934
    9. '<|end|>' → logprob: -9.398009300231934
    10. '           ' → logprob: -10.148009300231934

Token 515: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16080071032047272
    2. ' <' → logprob: -1.9108006954193115
    3. '<len' → logprob: -8.16080093383789
    4. '()<' → logprob: -8.66080093383789
    5. '<n' → logprob: -10.78580093383789
    6. '<size' → logprob: -10.91080093383789
    7. ')<' → logprob: -11.03580093383789
    8. '<com' → logprob: -12.03580093383789
    9. ' ' → logprob: -12.16080093383789
    10. '<class' → logprob: -12.16080093383789

Token 516: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005234594456851482
    2. ' n' → logprob: -5.255234718322754
    3. 'len' → logprob: -14.880234718322754
    4. '	n' → logprob: -15.255234718322754
    5. '(n' → logprob: -16.130233764648438
    6. '           ' → logprob: -16.380233764648438
    7. ')n' → logprob: -17.255233764648438
    8. '               ' → logprob: -17.755233764648438
    9. 'matrix' → logprob: -18.505233764648438
    10. '[n' → logprob: -19.005233764648438

Token 517: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7418280839920044
    2. ':' → logprob: -1.2418280839920044
    3. ':
' → logprob: -2.241827964782715
    4. '               ' → logprob: -2.991827964782715
    5. '           ' → logprob: -3.366827964782715
    6. 'and' → logprob: -4.241827964782715
    7. '):' → logprob: -4.741827964782715
    8. '):
' → logprob: -4.991827964782715
    9. '+' → logprob: -6.241827964782715
    10. '():
' → logprob: -6.491827964782715

Token 518: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23289094865322113
    2. ' tokens' → logprob: -2.1078908443450928
    3. 'tokens' → logprob: -2.6078908443450928
    4. '           ' → logprob: -6.107891082763672
    5. '<|end|>' → logprob: -6.107891082763672
    6. '<|end|>' → logprob: -6.232891082763672
    7. ',' → logprob: -6.482891082763672
    8. 'token' → logprob: -7.482891082763672
    9. '	           ' → logprob: -7.482891082763672
    10. ' token' → logprob: -7.482891082763672

Token 519: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.4901816248893738
    2. 'tokens' → logprob: -1.4901816844940186
    3. ' tokens' → logprob: -2.2401816844940186
    4. 'parts' (adapté à ' parts') → logprob: -3.6151816844940186
    5. '               ' → logprob: -4.2401814460754395
    6. 'nums' → logprob: -6.1151814460754395
    7. ' line' → logprob: -6.1151814460754395
    8. ' numbers' → logprob: -6.2401814460754395
    9. 'values' → logprob: -6.7401814460754395
    10. 'numbers' → logprob: -6.8651814460754395

Token 520: ' =' (ID: 314)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.7281444668769836
    2. '=' → logprob: -1.4781444072723389
    3. '+=' → logprob: -1.8531444072723389
    4. ' =' → logprob: -2.728144407272339
    5. ' +=' → logprob: -2.728144407272339
    6. '.append' → logprob: -6.478144645690918
    7. '.' → logprob: -9.603144645690918
    8. '.=' → logprob: -10.853144645690918
    9. '   ' → logprob: -11.228144645690918
    10. '               ' → logprob: -11.228144645690918

Token 521: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.07890532165765762
    2. ' lines' → logprob: -2.5789053440093994
    3. '(lines' → logprob: -12.20390510559082
    4. 'line' → logprob: -12.45390510559082
    5. 'parts' → logprob: -12.70390510559082
    6. 'list' → logprob: -13.20390510559082
    7. '   ' → logprob: -14.45390510559082
    8. ' parts' → logprob: -14.57890510559082
    9. '	lines' → logprob: -14.95390510559082
    10. '           ' → logprob: -16.32890510559082

Token 522: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7146746763028204e-05
    2. '[j' → logprob: -10.62503719329834
    3. '[' → logprob: -11.62503719329834
    4. '               ' → logprob: -14.25003719329834
    5. '   ' → logprob: -14.37503719329834
    6. '           ' → logprob: -14.50003719329834
    7. '                   ' → logprob: -15.00003719329834
    8. ' [' → logprob: -15.25003719329834
    9. '[u' → logprob: -15.50003719329834
    10. 'i' → logprob: -15.87503719329834

Token 523: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4614192843437195
    2. '].' → logprob: -1.0864193439483643
    3. '][' → logprob: -3.4614193439483643
    4. ']' → logprob: -8.086419105529785
    5. '               ' → logprob: -9.211419105529785
    6. '           ' → logprob: -9.586419105529785
    7. '[' → logprob: -9.586419105529785
    8. '.split' → logprob: -10.086419105529785
    9. ''].' → logprob: -10.211419105529785
    10. '.strip' → logprob: -10.586419105529785

Token 524: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.011048642918467522
    2. 'split' → logprob: -4.511048793792725
    3. ' strip' → logprob: -14.261048316955566
    4. 'rstrip' → logprob: -16.511049270629883
    5. '.strip' → logprob: -17.886049270629883
    6. ' split' → logprob: -18.386049270629883
    7. '_strip' → logprob: -20.511049270629883
    8. '(strip' → logprob: -21.886049270629883
    9. '-strip' → logprob: -23.011049270629883
    10. '_split' → logprob: -23.261049270629883

Token 525: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.13388703338569e-06
    2. '.split' → logprob: -11.875009536743164
    3. '()' → logprob: -13.125009536743164
    4. ' .' → logprob: -16.875009536743164
    5. '.' → logprob: -17.000009536743164
    6. 'split' → logprob: -17.875009536743164
    7. '()[' → logprob: -18.000009536743164
    8. '().'' → logprob: -18.250009536743164
    9. '.Split' → logprob: -18.500009536743164
    10. '               ' → logprob: -18.750009536743164

Token 526: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.25
    3. '.split' → logprob: -18.875
    4. 'spl' → logprob: -19.875
    5. '(split' → logprob: -20.375
    6. '_split' → logprob: -20.625
    7. 'replace' → logprob: -22.75
    8. 'rstrip' → logprob: -23.125
    9. 'strip' → logprob: -23.875
    10. 'Split' → logprob: -25.625

Token 527: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006409500492736697
    2. '()
' → logprob: -7.500640869140625
    3. '('' → logprob: -9.625640869140625
    4. '(' → logprob: -11.250640869140625
    5. '())' → logprob: -12.125640869140625
    6. '()]' → logprob: -14.250640869140625
    7. '()>' → logprob: -14.250640869140625
    8. '()

' → logprob: -14.750640869140625
    9. '()
' → logprob: -15.250640869140625
    10. '()?>' → logprob: -15.250640869140625

Token 528: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011170666664838791
    2. 'tokens' → logprob: -6.011170864105225
    3. '                   ' → logprob: -6.761170864105225
    4. '                ' → logprob: -7.136170864105225
    5. 'for' → logprob: -7.261170864105225
    6. '	               ' → logprob: -7.511170864105225
    7. ' for' → logprob: -7.636170864105225
    8. '	           ' → logprob: -7.636170864105225
    9. '<|end|>' → logprob: -7.636170864105225
    10. 'i' → logprob: -7.886170864105225

Token 529: ' i' (ID: 575)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.27362263202667236
    2. ' row' → logprob: -1.7736226320266724
    3. '               ' → logprob: -3.023622512817383
    4. 'for' → logprob: -4.898622512817383
    5. '           ' → logprob: -5.023622512817383
    6. ' for' → logprob: -5.898622512817383
    7. '	row' → logprob: -7.023622512817383
    8. '       ' → logprob: -7.148622512817383
    9. 'tokens' → logprob: -7.648622512817383
    10. '                   ' → logprob: -8.148622512817383

Token 530: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4748590886592865
    2. ' +=' → logprob: -0.9748591184616089
    3. '           ' → logprob: -8.349859237670898
    4. '       ' → logprob: -8.349859237670898
    5. '   ' → logprob: -9.349859237670898
    6. ' ' → logprob: -10.474859237670898
    7. '        ' → logprob: -10.974859237670898
    8. '    ' → logprob: -11.099859237670898
    9. 'tokens' → logprob: -11.099859237670898
    10. ',' → logprob: -11.099859237670898

Token 531: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01819208264350891
    2. ' ' → logprob: -4.018192291259766
    3. 'len' → logprob: -10.393192291259766
    4. ' len' → logprob: -11.393192291259766
    5. '   ' → logprob: -15.768192291259766
    6. '0' → logprob: -16.143192291259766
    7. '+' → logprob: -18.768192291259766
    8. '```' → logprob: -19.018192291259766
    9. '(len' → logprob: -19.268192291259766
    10. '           ' → logprob: -19.268192291259766

Token 532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'len' → logprob: -15.750015258789062
    4. '0' → logprob: -18.750015258789062
    5. '   ' → logprob: -18.875015258789062
    6. '+' → logprob: -20.375015258789062
    7. ' len' → logprob: -20.500015258789062
    8. '```' → logprob: -20.500015258789062
    9. '           ' → logprob: -21.000015258789062
    10. '１' → logprob: -21.812515258789062

Token 533: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1028159111738205
    2. 'row' → logprob: -2.477815866470337
    3. ' row' → logprob: -4.727816104888916
    4. ',row' → logprob: -6.477816104888916
    5. '[row' → logprob: -7.102816104888916
    6. '           ' → logprob: -7.727816104888916
    7. ' for' → logprob: -7.727816104888916
    8. 'for' → logprob: -7.977816104888916
    9. '		       ' → logprob: -8.602815628051758
    10. '(row' → logprob: -8.727815628051758

Token 534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005825109779834747
    2. 'row' → logprob: -6.380825042724609
    3. ' row' → logprob: -6.380825042724609
    4. ' for' → logprob: -7.255825042724609
    5. '       ' → logprob: -7.755825042724609
    6. '           ' → logprob: -7.880825042724609
    7. 'for' → logprob: -8.50582504272461
    8. ',row' → logprob: -8.50582504272461
    9. '[row' → logprob: -9.38082504272461
    10. '		       ' → logprob: -10.13082504272461

Token 535: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.03941468521952629
    2. ' row' → logprob: -3.289414644241333
    3. 'for' → logprob: -6.789414882659912
    4. ' for' → logprob: -9.164414405822754
    5. '               ' → logprob: -9.914414405822754
    6. 'rows' → logprob: -10.539414405822754
    7. '           ' → logprob: -10.539414405822754
    8. '       ' → logprob: -10.664414405822754
    9. '	row' → logprob: -11.664414405822754
    10. ' ' → logprob: -12.414414405822754

Token 536: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0003143704670947045
    2. '+=' → logprob: -8.500314712524414
    3. '.' → logprob: -9.500314712524414
    4. ' +=' → logprob: -10.250314712524414
    5. 'extend' → logprob: -14.250314712524414
    6. '.ext' → logprob: -17.750314712524414
    7. '   ' → logprob: -18.750314712524414
    8. 'extends' → logprob: -18.875314712524414
    9. ' .' → logprob: -19.000314712524414
    10. ' extends' → logprob: -19.125314712524414

Token 537: '(map' (ID: 16946)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.10879968106746674
    2. '(map' → logprob: -2.608799695968628
    3. '(list' → logprob: -4.108799457550049
    4. '([' → logprob: -4.358799457550049
    5. '(' → logprob: -9.483799934387207
    6. '(int' → logprob: -9.608799934387207
    7. '(part' → logprob: -9.608799934387207
    8. 'parts' → logprob: -11.233799934387207
    9. 'map' → logprob: -12.233799934387207
    10. 'list' → logprob: -12.358799934387207

Token 538: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2521435618400574
    2. '(float' → logprob: -1.5021436214447021
    3. '(' → logprob: -8.752143859863281
    4. 'float' → logprob: -10.502143859863281
    5. 'int' → logprob: -10.627143859863281
    6. ' (' → logprob: -13.627143859863281
    7. '(lambda' → logprob: -13.752143859863281
    8. '   ' → logprob: -14.252143859863281
    9. '(
' → logprob: -14.377143859863281
    10. '(str' → logprob: -14.502143859863281

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038118377327919006
    2. '(parts' → logprob: -3.288118362426758
    3. ' ,' → logprob: -9.663118362426758
    4. ',p' → logprob: -12.413118362426758
    5. '(' → logprob: -13.038118362426758
    6. 'parts' → logprob: -13.163118362426758
    7. ',(' → logprob: -13.413118362426758
    8. '(part' → logprob: -13.663118362426758
    9. ',
' → logprob: -13.663118362426758
    10. ' parts' → logprob: -14.538118362426758

Token 540: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.062016863375902176
    2. ' parts' → logprob: -2.8120169639587402
    3. '(parts' → logprob: -9.937016487121582
    4. ' ' → logprob: -14.812016487121582
    5. '_parts' → logprob: -16.1870174407959
    6. '   ' → logprob: -16.1870174407959
    7. ' partes' → logprob: -16.6870174407959
    8. '.parts' → logprob: -16.6870174407959
    9. 'part' → logprob: -16.8120174407959
    10. 'Parts' → logprob: -17.8120174407959

Token 541: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.055033374577760696
    2. '))
' → logprob: -2.9300334453582764
    3. '           ' → logprob: -9.555033683776855
    4. '               ' → logprob: -10.430033683776855
    5. '       ' → logprob: -11.430033683776855
    6. ' ))' → logprob: -11.555033683776855
    7. '))
' → logprob: -11.805033683776855
    8. '()))' → logprob: -12.055033683776855
    9. '))

' → logprob: -12.430033683776855
    10. ')))' → logprob: -12.930033683776855

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006873791106045246
    2. '       ' → logprob: -5.006873607635498
    3. 'matrix' → logprob: -9.631874084472656
    4. '#' → logprob: -10.756874084472656
    5. '	       ' → logprob: -11.131874084472656
    6. '<|end|>' → logprob: -11.256874084472656
    7. '
' → logprob: -11.881874084472656
    8. '		' → logprob: -12.131874084472656
    9. ' matrix' → logprob: -12.256874084472656
    10. '               ' → logprob: -12.256874084472656

Token 543: ' matrix' (ID: 12248)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1106831505894661
    2. ' matrix' → logprob: -2.7356832027435303
    3. 'matrix' (adapté à ' matrix') → logprob: -3.3606832027435303
    4. '<|end|>' → logprob: -6.235682964324951
    5. '	matrix' → logprob: -7.235682964324951
    6. '<|end|>' → logprob: -7.235682964324951
    7. '#' → logprob: -7.860682964324951
    8. '           ' → logprob: -8.23568344116211
    9. ' ' → logprob: -9.11068344116211
    10. ' #' → logprob: -9.36068344116211

Token 544: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.000001907348633
    3. 'append' → logprob: -17.375001907348633
    4. '.app' → logprob: -17.375001907348633
    5. ' .' → logprob: -19.000001907348633
    6. '.extend' → logprob: -19.375001907348633
    7. '.ap' → logprob: -20.375001907348633
    8. '=' → logprob: -20.625001907348633
    9. ' =' → logprob: -21.375001907348633
    10. '.Append' → logprob: -21.750001907348633

Token 545: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -9.968312951968983e-06
    2. 'row' → logprob: -12.000009536743164
    3. '(' → logprob: -12.750009536743164
    4. ' (' → logprob: -14.250009536743164
    5. ' row' → logprob: -15.750009536743164
    6. '(list' → logprob: -17.875009536743164
    7. '(line' → logprob: -18.125009536743164
    8. '(tuple' → logprob: -18.750009536743164
    9. '=row' → logprob: -18.875009536743164
    10. '(
' → logprob: -19.125009536743164

Token 546: '[:' (ID: 7808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09515278786420822
    2. '<|end|>' → logprob: -2.4701528549194336
    3. '<|end|>' → logprob: -5.220152854919434
    4. '       ' → logprob: -7.595152854919434
    5. '
' → logprob: -9.345152854919434
    6. ')
' → logprob: -9.845152854919434
    7. ')return' → logprob: -10.220152854919434
    8. ' )' → logprob: -11.095152854919434
    9. ']' → logprob: -11.095152854919434
    10. '#' → logprob: -11.720152854919434

Token 547: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.088346359931165e-07
    2. '])' → logprob: -14.375000953674316
    3. ' n' → logprob: -15.375000953674316
    4. '	n' → logprob: -19.0
    5. '(n' → logprob: -19.125
    6. ')' → logprob: -19.875
    7. ']' → logprob: -20.125
    8. '_n' → logprob: -20.125
    9. ')n' → logprob: -20.125
    10. '])
' → logprob: -21.0

Token 548: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003709100652486086
    2. ')' → logprob: -5.628709316253662
    3. '])
' → logprob: -10.003708839416504
    4. ' ])' → logprob: -11.128708839416504
    5. ')])' → logprob: -11.378708839416504
    6. '       ' → logprob: -11.628708839416504
    7. ')]' → logprob: -11.878708839416504
    8. '))' → logprob: -12.378708839416504
    9. ' )' → logprob: -12.503708839416504
    10. '   ' → logprob: -13.003708839416504

Token 549: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ' inputs' (ID: 21963)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10152921080589294
    2. '   ' → logprob: -2.851529121398926
    3. '<|end|>' → logprob: -3.726529121398926
    4. 'return' → logprob: -5.101529121398926
    5. 'def' → logprob: -5.726529121398926
    6. '#' → logprob: -5.976529121398926
    7. ' return' → logprob: -7.351529121398926
    8. 'Next' → logprob: -7.601529121398926
    9. '        
' → logprob: -8.101529121398926
    10. '<|end|>' → logprob: -8.351529121398926

Token 551: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7372048862162046e-05
    2. '.' → logprob: -10.875027656555176
    3. 'append' → logprob: -12.125027656555176
    4. '.extend' → logprob: -13.125027656555176
    5. '.app' → logprob: -14.250027656555176
    6. ' .' → logprob: -16.50002670288086
    7. '.Append' → logprob: -16.75002670288086
    8. '<|end|>' → logprob: -16.75002670288086
    9. '_append' → logprob: -17.75002670288086
    10. '.ap' → logprob: -17.75002670288086

Token 552: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3875446021556854
    2. '((' → logprob: -1.3875446319580078
    3. '(n' → logprob: -2.637544631958008
    4. ' (' → logprob: -10.262544631958008
    5. '(
' → logprob: -11.637544631958008
    6. '([' → logprob: -11.637544631958008
    7. '[(' → logprob: -14.887544631958008
    8. '   ' → logprob: -15.387544631958008
    9. '(N' → logprob: -15.637544631958008
    10. '({'' → logprob: -15.762544631958008

Token 553: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.547789674485102e-05
    2. ' n' → logprob: -10.250035285949707
    3. '	n' → logprob: -17.500036239624023
    4. '   ' → logprob: -18.250036239624023
    5. ')n' → logprob: -19.750036239624023
    6. '(n' → logprob: -19.875036239624023
    7. '
' → logprob: -20.625036239624023
    8. ',n' → logprob: -21.625036239624023
    9. '_n' → logprob: -22.250036239624023
    10. '$n' → logprob: -22.375036239624023

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015149809187278152
    2. ',m' → logprob: -6.501514911651611
    3. ' ,' → logprob: -11.50151538848877
    4. ',
' → logprob: -13.25151538848877
    5. ',n' → logprob: -14.87651538848877
    6. ',module' → logprob: -15.37651538848877
    7. ',

' → logprob: -16.751514434814453
    8. ',input' → logprob: -17.501514434814453
    9. '<|end|>' → logprob: -17.751514434814453
    10. '   ' → logprob: -17.751514434814453

Token 555: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.06196869537234306
    2. ' matrix' → logprob: -2.8119688034057617
    3. '	matrix' → logprob: -13.936968803405762
    4. ' ' → logprob: -17.311967849731445
    5. '(matrix' → logprob: -17.311967849731445
    6. '_matrix' → logprob: -17.436967849731445
    7. '.matrix' → logprob: -17.936967849731445
    8. 'Matrix' → logprob: -17.936967849731445
    9. 'mat' → logprob: -18.561967849731445
    10. 'm' → logprob: -19.061967849731445

Token 556: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16027967631816864
    2. ')' → logprob: -1.910279631614685
    3. '))
' → logprob: -10.910279273986816
    4. ',' → logprob: -11.785279273986816
    5. '   ' → logprob: -11.785279273986816
    6. ' ))' → logprob: -11.785279273986816
    7. ')
' → logprob: -12.785279273986816
    8. ')}' → logprob: -12.785279273986816
    9. ')))' → logprob: -12.785279273986816
    10. '       ' → logprob: -13.160279273986816

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9938852190971375
    2. '<|end|>' → logprob: -1.2438852787017822
    3. 'def' → logprob: -1.4938852787017822
    4. '```' → logprob: -2.6188852787017822
    5. 'return' → logprob: -3.7438852787017822
    6. '       ' → logprob: -5.618885040283203
    7. ' return' → logprob: -5.743885040283203
    8. ' ' → logprob: -6.118885040283203
    9. '<|end|>' → logprob: -6.118885040283203
    10. '	return' → logprob: -6.618885040283203

Token 558: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045382317155599594
    2. 'return' (adapté à ' return') → logprob: -3.670382261276245
    3. ' return' → logprob: -4.545382499694824
    4. '	return' → logprob: -5.795382499694824
    5. '<|end|>' → logprob: -5.795382499694824
    6. '    
' → logprob: -7.545382499694824
    7. 'def' → logprob: -7.670382499694824
    8. '       ' → logprob: -8.045382499694824
    9. 'continue' → logprob: -8.795382499694824
    10. '<|end|>' → logprob: -9.170382499694824

Token 559: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.0004306692280806601
    2. ' inputs' → logprob: -7.750430583953857
    3. '(inputs' → logprob: -17.750431060791016
    4. 'outputs' → logprob: -19.375431060791016
    5. 'input' → logprob: -19.625431060791016
    6. '[' → logprob: -21.250431060791016
    7. '   ' → logprob: -21.875431060791016
    8. '.inputs' → logprob: -22.250431060791016
    9. ' ' → logprob: -24.000431060791016
    10. '[]' → logprob: -24.375431060791016

Token 560: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03257744014263153
    2. '<|end|>' → logprob: -3.7825775146484375
    3. 'class' → logprob: -5.2825775146484375
    4. '```' → logprob: -5.7825775146484375
    5. '
' → logprob: -7.7825775146484375
    6. '<|end|>' → logprob: -7.9075775146484375
    7. '#' → logprob: -8.407577514648438
    8. 'import' → logprob: -10.657577514648438
    9. ' def' → logprob: -10.907577514648438
    10. '  
' → logprob: -11.532577514648438

Token 561: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.620622712536715e-05
    2. 'import' → logprob: -10.375045776367188
    3. '```' → logprob: -11.375045776367188
    4. 'class' → logprob: -13.000045776367188
    5. '#' → logprob: -14.375045776367188
    6. ' def' → logprob: -14.875045776367188
    7. '<|end|>' → logprob: -16.375045776367188
    8. 'from' → logprob: -16.625045776367188
    9. '``' → logprob: -17.125045776367188
    10. '  
' → logprob: -17.375045776367188

Token 562: ' up' (ID: 869)
  Prédit: ' up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.1432735174894333
    2. 'up' → logprob: -2.0182735919952393
    3. ' build' → logprob: -8.26827335357666
    4. 'build' → logprob: -8.76827335357666
    5. 'UP' → logprob: -9.64327335357666
    6. ' find' → logprob: -10.26827335357666
    7. ' main' → logprob: -10.64327335357666
    8. '	up' → logprob: -11.39327335357666
    9. 'main' → logprob: -11.51827335357666
    10. ' compute' → logprob: -11.51827335357666

Token 563: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.023948144167661667
    2. 'p' → logprob: -3.7739481925964355
    3. 'pg' → logprob: -7.2739481925964355
    4. 'gm' → logprob: -13.398947715759277
    5. 'grade' → logprob: -13.773947715759277
    6. 'def' → logprob: -13.898947715759277
    7. 'G' → logprob: -13.898947715759277
    8. 'gra' → logprob: -14.023947715759277
    9. 'merge' → logprob: -14.023947715759277
    10. 'm' → logprob: -14.648947715759277

Token 564: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -9.088346359931165e-07
    2. '_ma' → logprob: -15.375000953674316
    3. ' ma' → logprob: -15.500000953674316
    4. '(ma' → logprob: -15.875000953674316
    5. 'mass' → logprob: -16.25
    6. 'm' → logprob: -16.5
    7. 'ма' → logprob: -16.75
    8. 'map' → logprob: -17.25
    9. 'maq' → logprob: -17.875
    10. 'mas' → logprob: -17.875

Token 565: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6956659555435181
    2. '(n' → logprob: -0.6956659555435181
    3. '(nodes' → logprob: -6.3206658363342285
    4. '(node' → logprob: -8.945666313171387
    5. '(cluster' → logprob: -9.320666313171387
    6. '():' → logprob: -9.945666313171387
    7. ':' → logprob: -10.070666313171387
    8. '(N' → logprob: -10.070666313171387
    9. '(_' → logprob: -10.195666313171387
    10. ' (' → logprob: -10.445666313171387

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005382588133215904
    2. ' ,' → logprob: -7.625538349151611
    3. ',n' → logprob: -10.000537872314453
    4. ',
' → logprob: -13.500537872314453
    5. '):' → logprob: -13.500537872314453
    6. '‌,' → logprob: -14.375537872314453
    7. ',node' → logprob: -14.500537872314453
    8. '   ' → logprob: -16.000537872314453
    9. '_,' → logprob: -16.125537872314453
    10. '(n' → logprob: -16.125537872314453

Token 567: ' dist' (ID: 3601)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.03628295287489891
    2. 'dist' → logprob: -3.661283016204834
    3. 'distance' → logprob: -5.161283016204834
    4. ' matrix' → logprob: -5.536283016204834
    5. ' dist' → logprob: -8.786282539367676
    6. ' distances' → logprob: -10.036282539367676
    7. 'd' → logprob: -10.536282539367676
    8. ' distance' → logprob: -10.661282539367676
    9. 'mat' → logprob: -12.036282539367676
    10. '   ' → logprob: -13.036282539367676

Token 568: '_matrix' (ID: 23431)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6137250065803528
    2. '):' → logprob: -0.9887250065803528
    3. '_matrix' → logprob: -3.363724946975708
    4. 'ance' → logprob: -3.613724946975708
    5. 'ances' → logprob: -3.988724946975708
    6. ')' → logprob: -6.113725185394287
    7. '):
' → logprob: -6.363725185394287
    8. ' ,' → logprob: -7.113725185394287
    9. 's' → logprob: -7.613725185394287
    10. 'matrix' → logprob: -7.863725185394287

Token 569: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11880703270435333
    2. ',' → logprob: -2.618807077407837
    3. '):
' → logprob: -3.243807077407837
    4. '):
' → logprob: -9.868806838989258
    5. '   ' → logprob: -10.743806838989258
    6. ',n' → logprob: -11.243806838989258
    7. ')' → logprob: -11.243806838989258
    8. ' ):' → logprob: -12.118806838989258
    9. ':' → logprob: -12.618806838989258
    10. '):

' → logprob: -12.993806838989258

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24998529255390167
    2. ' clusters' → logprob: -1.6249853372573853
    3. 'clusters' → logprob: -4.874985218048096
    4. ' cluster' → logprob: -5.249985218048096
    5. '    
' → logprob: -5.874985218048096
    6. '	cluster' → logprob: -5.999985218048096
    7. ' 
' → logprob: -6.749985218048096
    8. ':' → logprob: -6.874985218048096
    9. ':
' → logprob: -7.374985218048096
    10. '_clusters' → logprob: -7.374985218048096

Token 571: ' #' (ID: 1069)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.02035372518002987
    2. 'nodes' → logprob: -5.1453537940979
    3. '#' (adapté à ' #') → logprob: -5.2703537940979
    4. 'import' → logprob: -5.3953537940979
    5. '   ' → logprob: -5.7703537940979
    6. ' clusters' → logprob: -6.5203537940979
    7. ' import' → logprob: -11.395353317260742
    8. 'cluster' → logprob: -11.395353317260742
    9. ' #' → logprob: -11.395353317260742
    10. 'from' → logprob: -12.270353317260742

Token 572: ' Initial' (ID: 9209)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.1085963025689125
    2. '#' → logprob: -3.1085963249206543
    3. ' clusters' → logprob: -3.2335963249206543
    4. 'nodes' → logprob: -4.608596324920654
    5. '   ' → logprob: -5.483596324920654
    6. 'import' → logprob: -5.608596324920654
    7. ' #' → logprob: -7.483596324920654
    8. ' import' → logprob: -8.358595848083496
    9. ' nodes' → logprob: -9.233595848083496
    10. 'cluster' → logprob: -9.733595848083496

Token 573: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.4589100480079651
    2. 'clusters' → logprob: -1.3339099884033203
    3. '#' → logprob: -3.4589099884033203
    4. 'ise' → logprob: -3.8339099884033203
    5. 'izes' → logprob: -4.08390998840332
    6. 'nodes' → logprob: -4.70890998840332
    7. 'iser' → logprob: -4.95890998840332
    8. ' clusters' → logprob: -5.83390998840332
    9. '   ' → logprob: -5.95890998840332
    10. 'ises' → logprob: -6.08390998840332

Token 574: ' :' (ID: 712)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.4960899353027344
    2. ' clusters' → logprob: -0.9960899353027344
    3. '   ' → logprob: -3.8710899353027344
    4. 'nodes' → logprob: -7.496089935302734
    5. ' nodes' → logprob: -8.496089935302734
    6. 'cluster' → logprob: -9.996089935302734
    7. '_clusters' → logprob: -9.996089935302734
    8. 'cl' → logprob: -10.371089935302734
    9. '	cl' → logprob: -11.121089935302734
    10. '	nodes' → logprob: -11.371089935302734

Token 575: ' chaque' (ID: 21194)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.25838860869407654
    2. ' clusters' → logprob: -1.508388638496399
    3. '   ' → logprob: -5.633388519287109
    4. 'nodes' → logprob: -6.008388519287109
    5. ' nodes' → logprob: -7.883388519287109
    6. 'cl' → logprob: -11.38338851928711
    7. 'cluster' → logprob: -12.13338851928711
    8. '	nodes' → logprob: -12.38338851928711
    9. '```' → logprob: -13.50838851928711
    10. '#' → logprob: -13.88338851928711

Token 576: ' feuille' (ID: 129760)
  Prédit: ' cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -0.8446966409683228
    2. 'cluster' → logprob: -0.9696966409683228
    3. ' node' → logprob: -2.219696521759033
    4. 'node' → logprob: -2.594696521759033
    5. ' leaf' → logprob: -5.344696521759033
    6. 'leaf' → logprob: -6.844696521759033
    7. 'clusters' → logprob: -7.219696521759033
    8. ' i' → logprob: -8.469696998596191
    9. ' clusters' → logprob: -8.469696998596191
    10. 'Node' → logprob: -9.094696998596191

Token 577: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3987773060798645
    2. '=' → logprob: -1.2737772464752197
    3. ' est' → logprob: -4.023777484893799
    4. 'est' → logprob: -4.273777484893799
    5. '   ' → logprob: -5.148777484893799
    6. 'cluster' → logprob: -5.523777484893799
    7. ':' → logprob: -6.398777484893799
    8. ' cluster' → logprob: -7.023777484893799
    9. 's' → logprob: -7.148777484893799
    10. 'clusters' → logprob: -7.398777484893799

Token 578: ' un' (ID: 537)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.061259761452674866
    2. 'un' → logprob: -2.9362597465515137
    3. ' Node' → logprob: -5.811259746551514
    4. ' un' → logprob: -5.811259746551514
    5. 'une' → logprob: -8.561260223388672
    6. '   ' → logprob: -9.311260223388672
    7. '[' → logprob: -10.561260223388672
    8. ' ' → logprob: -10.811260223388672
    9. ' une' → logprob: -11.436260223388672
    10. 'a' → logprob: -11.936260223388672

Token 579: ' cluster' (ID: 19723)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.024378577247262
    2. 'cluster' → logprob: -4.274378776550293
    3. ' Node' → logprob: -4.649378776550293
    4. 'node' → logprob: -7.774378776550293
    5. ' cluster' → logprob: -8.899378776550293
    6. ' node' → logprob: -11.399378776550293
    7. '_node' → logprob: -11.899378776550293
    8. 'Cluster' → logprob: -11.899378776550293
    9. '[' → logprob: -12.149378776550293
    10. '<Node' → logprob: -13.024378776550293

Token 580: ' initial' (ID: 4871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3077852427959442
    2. '   ' → logprob: -2.4327852725982666
    3. 'clusters' → logprob: -3.1827852725982666
    4. 'nodes' → logprob: -3.5577852725982666
    5. '_nodes' → logprob: -3.5577852725982666
    6. '=' → logprob: -3.6827852725982666
    7. 's' → logprob: -3.9327852725982666
    8. ',' → logprob: -5.0577850341796875
    9. ':' → logprob: -5.1827850341796875
    10. '[' → logprob: -5.1827850341796875

Token 581: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17283201217651367
    2. 'clusters' → logprob: -2.0478320121765137
    3. ' clusters' → logprob: -4.547832012176514
    4. 'nodes' → logprob: -4.797832012176514
    5. ',' → logprob: -5.172832012176514
    6. ':' → logprob: -6.297832012176514
    7. '	nodes' → logprob: -7.547832012176514
    8. ' nodes' → logprob: -7.797832012176514
    9. '_clusters' → logprob: -7.922832012176514
    10. '       ' → logprob: -8.047832489013672

Token 582: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026586024090647697
    2. ' clusters' → logprob: -4.151586055755615
    3. 'clusters' → logprob: -4.776586055755615
    4. ',' → logprob: -7.401586055755615
    5. ' nodes' → logprob: -7.901586055755615
    6. '	nodes' → logprob: -8.026585578918457
    7. '_clusters' → logprob: -8.651585578918457
    8. 'nodes' → logprob: -8.901585578918457
    9. '
' → logprob: -9.151585578918457
    10. ':' → logprob: -9.276585578918457

Token 583: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' (adapté à ' clusters') → logprob: -0.0010702044237405062
    2. 'nodes' → logprob: -7.001070022583008
    3. ' clusters' → logprob: -9.001070022583008
    4. '   ' → logprob: -10.251070022583008
    5. ' nodes' → logprob: -17.001070022583008
    6. 'cluster' → logprob: -17.001070022583008
    7. 'trees' → logprob: -17.001070022583008
    8. '       ' → logprob: -17.751070022583008
    9. '	nodes' → logprob: -18.001070022583008
    10. ' ' → logprob: -18.126070022583008

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141646265983582
    2. '=' → logprob: -1.7014164924621582
    3. '=[' → logprob: -13.826416015625
    4. '={}' → logprob: -14.451416015625
    5. ' =[' → logprob: -14.701416015625
    6. '=[]' → logprob: -14.951416015625
    7. ' ={' → logprob: -15.201416015625
    8. ' ' → logprob: -15.701416015625
    9. '={' → logprob: -15.826416015625
    10. '   ' → logprob: -15.951416015625

Token 585: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7110861539840698
    2. '{' → logprob: -0.7110861539840698
    3. '[{' → logprob: -4.211086273193359
    4. '[n' → logprob: -6.711086273193359
    5. '[node' → logprob: -6.961086273193359
    6. '[N' → logprob: -8.58608627319336
    7. ' [' → logprob: -9.08608627319336
    8. '[class' → logprob: -9.08608627319336
    9. '{id' → logprob: -9.46108627319336
    10. '[list' → logprob: -10.08608627319336

Token 586: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -6.110668618930504e-05
    2. ' Node' → logprob: -9.75006103515625
    3. '(Node' → logprob: -13.25006103515625
    4. '[' → logprob: -14.37506103515625
    5. '   ' → logprob: -15.25006103515625
    6. '	Node' → logprob: -16.12506103515625
    7. '<Node' → logprob: -17.50006103515625
    8. ' ' → logprob: -19.00006103515625
    9. '_Node' → logprob: -19.00006103515625
    10. 'None' → logprob: -19.12506103515625

Token 587: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.9424725148128346e-05
    2. '(idx' → logprob: -10.250049591064453
    3. '(k' → logprob: -12.125049591064453
    4. '(' → logprob: -12.250049591064453
    5. '(j' → logprob: -13.000049591064453
    6. '(x' → logprob: -14.500049591064453
    7. ' (' → logprob: -14.875049591064453
    8. 'i' → logprob: -14.875049591064453
    9. '(n' → logprob: -16.250049591064453
    10. '(u' → logprob: -16.375049591064453

Token 588: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.145118848304264e-05
    2. ' )' → logprob: -10.000051498413086
    3. ',' → logprob: -13.000051498413086
    4. ')]' → logprob: -13.375051498413086
    5. ')
' → logprob: -14.500051498413086
    6. '   ' → logprob: -14.500051498413086
    7. '(i' → logprob: -15.250051498413086
    8. 'i' → logprob: -16.000051498413086
    9. ',)' → logprob: -16.375051498413086
    10. '),' → logprob: -16.375051498413086

Token 589: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11891298741102219
    2. ')' → logprob: -2.243912935256958
    3. 'for' → logprob: -5.243913173675537
    4. ']' → logprob: -8.243912696838379
    5. ' )' → logprob: -8.493912696838379
    6. '   ' → logprob: -8.743912696838379
    7. ')]' → logprob: -9.368912696838379
    8. ' ]' → logprob: -10.493912696838379
    9. ' ' → logprob: -11.243912696838379
    10. '       ' → logprob: -11.368912696838379

Token 590: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07806948572397232
    2. ' i' → logprob: -3.0780694484710693
    3. ' range' → logprob: -4.078069686889648
    4. 'range' → logprob: -4.453069686889648
    5. '_' → logprob: -7.703069686889648
    6. ' _' → logprob: -11.953069686889648
    7. '_i' → logprob: -12.453069686889648
    8. '_range' → logprob: -12.578069686889648
    9. ' ' → logprob: -13.703069686889648
    10. '	i' → logprob: -13.828069686889648

Token 591: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06265416741371155
    2. 'in' → logprob: -2.8126542568206787
    3. 'range' → logprob: -7.6876540184021
    4. ' range' → logprob: -8.437654495239258
    5. ' i' → logprob: -12.437654495239258
    6. ' ' → logprob: -12.812654495239258
    7. 'i' → logprob: -12.937654495239258
    8. ')' → logprob: -14.687654495239258
    9. '_' → logprob: -14.812654495239258
    10. '  ' → logprob: -15.437654495239258

Token 592: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -19.25009536743164
    4. '	range' → logprob: -20.12509536743164
    5. '   ' → logprob: -20.62509536743164
    6. ' ' → logprob: -21.50009536743164
    7. 'rang' → logprob: -22.00009536743164
    8. '
' → logprob: -22.37509536743164
    9. '  ' → logprob: -22.62509536743164
    10. 'r' → logprob: -23.87509536743164

Token 593: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006734199821949005
    2. 'n' → logprob: -5.006734371185303
    3. ' n' → logprob: -11.881733894348145
    4. '(' → logprob: -12.506733894348145
    5. ' (' → logprob: -12.506733894348145
    6. '   ' → logprob: -12.506733894348145
    7. '	n' → logprob: -14.381733894348145
    8. ')n' → logprob: -16.38173484802246
    9. '_n' → logprob: -17.13173484802246
    10. '(
' → logprob: -17.88173484802246

Token 594: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.780830830801278e-05
    2. ' )' → logprob: -9.50008773803711
    3. ')' → logprob: -11.87508773803711
    4. '   ' → logprob: -12.75008773803711
    5. ')]
' → logprob: -13.25008773803711
    6. ' ]' → logprob: -14.37508773803711
    7. ']' → logprob: -15.37508773803711
    8. ')]

' → logprob: -16.37508773803711
    9. ' ' → logprob: -16.50008773803711
    10. '       ' → logprob: -17.00008773803711

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03277553990483284
    2. 'dist' → logprob: -4.282775402069092
    3. '    
' → logprob: -4.657775402069092
    4. ',' → logprob: -6.157775402069092
    5. ' distances' → logprob: -6.282775402069092
    6. '	dist' → logprob: -6.282775402069092
    7. 'distance' → logprob: -6.907775402069092
    8. ' dist' → logprob: -8.03277587890625
    9. '
' → logprob: -8.03277587890625
    10. '  ' → logprob: -8.78277587890625

Token 596: ' active' (ID: 6725)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04183262959122658
    2. 'import' → logprob: -3.791832685470581
    3. 'current' → logprob: -5.041832447052002
    4. 'next' → logprob: -6.041832447052002
    5. 'sizes' → logprob: -6.166832447052002
    6. 'd' → logprob: -6.291832447052002
    7. 'cluster' → logprob: -6.916832447052002
    8. '   ' → logprob: -6.916832447052002
    9. '#' → logprob: -7.041832447052002
    10. 'clusters' → logprob: -7.041832447052002

Token 597: ' =' (ID: 314)
  Prédit: '_clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clusters' → logprob: -0.3146241307258606
    2. ' =' → logprob: -1.3146240711212158
    3. '=' → logprob: -7.814624309539795
    4. '_indices' → logprob: -8.189623832702637
    5. '_' → logprob: -8.564623832702637
    6. '_pairs' → logprob: -9.439623832702637
    7. 'clusters' → logprob: -9.814623832702637
    8. '_ids' → logprob: -9.939623832702637
    9. '_indexes' → logprob: -9.939623832702637
    10. '_sets' → logprob: -10.064623832702637

Token 598: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16801612079143524
    2. 'set' → logprob: -2.418016195297241
    3. '{' → logprob: -3.668016195297241
    4. ' [' → logprob: -4.168015956878662
    5. ' set' → logprob: -4.793015956878662
    6. '[list' → logprob: -4.918015956878662
    7. 'list' → logprob: -5.043015956878662
    8. '[n' → logprob: -6.543015956878662
    9. ' list' → logprob: -7.668015956878662
    10. ' {' → logprob: -7.793015956878662

Token 599: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.438573680294212e-06
    2. '1' → logprob: -13.250005722045898
    3. ' True' → logprob: -13.250005722045898
    4. '(True' → logprob: -13.875005722045898
    5. 'i' → logprob: -14.000005722045898
    6. '0' → logprob: -18.1250057220459
    7. 'true' → logprob: -18.6250057220459
    8. 'cluster' → logprob: -18.8750057220459
    9. '[' → logprob: -19.3750057220459
    10. '[i' → logprob: -19.7500057220459

Token 600: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32282429933547974
    2. ' for' → logprob: -1.322824239730835
    3. 'for' → logprob: -4.947824478149414
    4. ']*' → logprob: -6.197824478149414
    5. ' ]' → logprob: -7.947824478149414
    6. ')' → logprob: -11.197824478149414
    7. '   ' → logprob: -12.197824478149414
    8. ' ' → logprob: -12.447824478149414
    9. ']+' → logprob: -12.947824478149414
    10. ',' → logprob: -13.822824478149414

Token 601: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012368128227535635
    2. 'len' → logprob: -9.125123977661133
    3. ' n' → logprob: -11.750123977661133
    4. '(n' → logprob: -12.125123977661133
    5. '(len' → logprob: -14.500123977661133
    6. '   ' → logprob: -14.625123977661133
    7. '(' → logprob: -15.375123977661133
    8. '	n' → logprob: -16.250123977661133
    9. ' len' → logprob: -17.750123977661133
    10. '
' → logprob: -18.125123977661133

Token 602: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5787380337715149
    2. '   ' → logprob: -0.9537380337715149
    3. '    
' → logprob: -3.45373797416687
    4. '   
' → logprob: -5.328738212585449
    5. 'dist' → logprob: -5.578738212585449
    6. '  
' → logprob: -5.578738212585449
    7. ' 
' → logprob: -5.828738212585449
    8. ',' → logprob: -5.828738212585449
    9. 'distance' → logprob: -6.328738212585449
    10. ',
' → logprob: -7.328738212585449

Token 603: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2761077880859375
    2. ' 
' → logprob: -1.7761077880859375
    3. '    
' → logprob: -3.9011077880859375
    4. ',' → logprob: -4.2761077880859375
    5. '   
' → logprob: -4.4011077880859375
    6. '  
' → logprob: -4.7761077880859375
    7. '   ' → logprob: -5.0261077880859375
    8. ',
' → logprob: -5.4011077880859375
    9. ' ' → logprob: -6.6511077880859375
    10. '     
' → logprob: -6.9011077880859375

Token 604: ' indique' (ID: 97324)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.9515571594238281
    2. 'cluster' → logprob: -1.3265571594238281
    3. '#' → logprob: -1.5765571594238281
    4. 'dist' → logprob: -3.576557159423828
    5. 'indices' → logprob: -4.076557159423828
    6. '   ' → logprob: -4.201557159423828
    7. ' cluster' → logprob: -4.326557159423828
    8. ' clusters' → logprob: -4.826557159423828
    9. 'sizes' → logprob: -4.951557159423828
    10. ' distances' → logprob: -4.951557159423828

Token 605: ' quels' (ID: 109092)
  Prédit: ' quels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quels' → logprob: -0.29220056533813477
    2. ' quelles' → logprob: -1.7922005653381348
    3. 'qu' → logprob: -3.4172005653381348
    4. 'les' → logprob: -4.042200565338135
    5. ' lesquels' → logprob: -4.667200565338135
    6. ' les' → logprob: -4.667200565338135
    7. ' lesquelles' → logprob: -5.667200565338135
    8. 'quelle' → logprob: -6.042200565338135
    9. 'quel' → logprob: -6.042200565338135
    10. ' si' → logprob: -6.667200565338135

Token 606: ' clusters' (ID: 51310)
  Prédit: ' clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.22597290575504303
    2. 'clusters' → logprob: -1.6009728908538818
    3. 'cluster' → logprob: -8.475973129272461
    4. ' cluster' → logprob: -8.600973129272461
    5. ' tokens' → logprob: -9.475973129272461
    6. '_clusters' → logprob: -10.225973129272461
    7. 'tokens' → logprob: -10.600973129272461
    8. ' espaces' → logprob: -12.100973129272461
    9. 'indices' → logprob: -12.100973129272461
    10. 'cl' → logprob: -12.350973129272461

Token 607: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07725348323583603
    2. ' sont' → logprob: -2.952253580093384
    3. ' are' → logprob: -3.952253580093384
    4. 'are' → logprob: -6.077253341674805
    5. 'rest' → logprob: -8.827253341674805
    6. ' restent' → logprob: -9.077253341674805
    7. '#' → logprob: -9.452253341674805
    8. 'act' → logprob: -9.452253341674805
    9. ' rest' → logprob: -10.077253341674805
    10. 'ont' → logprob: -10.702253341674805

Token 608: ' encore' (ID: 14043)
  Prédit: 'enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enc' → logprob: -0.24176421761512756
    2. 'act' → logprob: -2.1167643070220947
    3. ' encore' → logprob: -2.8667643070220947
    4. 'tou' → logprob: -3.4917643070220947
    5. ' toujours' → logprob: -5.866764068603516
    6. 'activ' → logprob: -6.491764068603516
    7. 'still' → logprob: -6.616764068603516
    8. 'active' → logprob: -6.866764068603516
    9. ' still' → logprob: -9.491764068603516
    10. 'Tou' → logprob: -10.366764068603516

Token 609: ' actifs' (ID: 137817)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.0056615290232002735
    2. ' actifs' → logprob: -6.130661487579346
    3. 'activ' → logprob: -7.005661487579346
    4. 'val' → logprob: -7.130661487579346
    5. 'dis' → logprob: -7.630661487579346
    6. '   ' → logprob: -7.630661487579346
    7. 'prés' → logprob: -8.380661964416504
    8. 'valid' → logprob: -8.505661964416504
    9. 'active' → logprob: -8.880661964416504
    10. '
' → logprob: -9.380661964416504

Token 610: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04507150873541832
    2. 'dist' → logprob: -3.170071601867676
    3. ',' → logprob: -6.795071601867676
    4. ' distances' → logprob: -8.420071601867676
    5. 'next' → logprob: -8.795071601867676
    6. 'distance' → logprob: -9.045071601867676
    7. '	dist' → logprob: -9.420071601867676
    8. '
' → logprob: -9.795071601867676
    9. 'clusters' → logprob: -9.795071601867676
    10. ' dist' → logprob: -9.920071601867676

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006333059631288052
    2. 'dist' → logprob: -5.881332874298096
    3. ' distances' → logprob: -7.131332874298096
    4. '    
' → logprob: -7.381332874298096
    5. ',' → logprob: -7.881332874298096
    6. 'distance' → logprob: -8.006333351135254
    7. '	dist' → logprob: -8.131333351135254
    8. ' ' → logprob: -9.381333351135254
    9. 'indices' → logprob: -9.381333351135254
    10. '    ' → logprob: -9.381333351135254

Token 612: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03898552432656288
    2. 'next' → logprob: -4.538985729217529
    3. 'current' → logprob: -4.788985729217529
    4. 'distance' → logprob: -5.663985729217529
    5. '   ' → logprob: -5.788985729217529
    6. 'cluster' → logprob: -5.913985729217529
    7. 'size' → logprob: -6.038985729217529
    8. 'sizes' → logprob: -6.163985729217529
    9. 'import' → logprob: -6.288985729217529
    10. 'clusters' → logprob: -6.663985729217529

Token 613: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759451985359192
    2. '=' → logprob: -0.8259451985359192
    3. '   ' → logprob: -12.575944900512695
    4. '=[' → logprob: -13.700944900512695
    5. ' ' → logprob: -14.825944900512695
    6. '=[[' → logprob: -15.075944900512695
    7. 'dist' → logprob: -15.575944900512695
    8. ' =[' → logprob: -16.450944900512695
    9. '=[]' → logprob: -16.575944900512695
    10. '[' → logprob: -16.950944900512695

Token 614: ' {}
' (ID: 11421)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00476700346916914
    2. '[n' → logprob: -5.754766941070557
    3. ' [' → logprob: -6.504766941070557
    4. '[list' → logprob: -10.379767417907715
    5. '[[' → logprob: -10.754767417907715
    6. '[int' → logprob: -12.129767417907715
    7. '{' → logprob: -12.879767417907715
    8. 'dist' → logprob: -12.879767417907715
    9. '[row' → logprob: -12.879767417907715
    10. '[i' → logprob: -12.879767417907715

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3629845976829529
    2. ' for' → logprob: -1.7379846572875977
    3. 'for' → logprob: -2.4879846572875977
    4. ' ' → logprob: -4.112984657287598
    5. '[' → logprob: -4.862984657287598
    6. '    ' → logprob: -5.487984657287598
    7. '    
' → logprob: -5.612984657287598
    8. ' 
' → logprob: -5.737984657287598
    9. '<|end|>' → logprob: -5.987984657287598
    10. '  
' → logprob: -6.237984657287598

Token 616: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5770565271377563
    2. ' for' → logprob: -0.8270565271377563
    3. '   ' → logprob: -7.077056407928467
    4. '	for' → logprob: -8.327056884765625
    5. ' ' → logprob: -11.202056884765625
    6. ' ' → logprob: -11.202056884765625
    7. '    ' → logprob: -14.327056884765625
    8. '  ' → logprob: -14.327056884765625
    9. ' 
' → logprob: -14.952056884765625
    10. '    
' → logprob: -15.327056884765625

Token 617: ' Stock' (ID: 16382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001261845463886857
    2. ' for' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.000125885009766
    4. '#' → logprob: -15.000125885009766
    5. '	for' → logprob: -16.500125885009766
    6. '       ' → logprob: -19.500125885009766
    7. 'import' → logprob: -19.625125885009766
    8. 'from' → logprob: -20.000125885009766
    9. ' ' → logprob: -20.250125885009766
    10. ' ' → logprob: -20.500125885009766

Token 618: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.45893678069114685
    2. 'age' → logprob: -1.3339368104934692
    3. 'e' → logprob: -2.3339366912841797
    4. '   ' → logprob: -5.45893669128418
    5. 'ez' → logprob: -6.45893669128418
    6. 'ages' → logprob: -7.08393669128418
    7. ' for' → logprob: -8.08393669128418
    8. 'for' → logprob: -8.20893669128418
    9. 'ed' → logprob: -8.83393669128418
    10. 'ons' → logprob: -9.08393669128418

Token 619: ' distances' (ID: 48294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07090537250041962
    2. ' for' → logprob: -2.8209054470062256
    3. ' (' → logprob: -6.1959052085876465
    4. '(n' → logprob: -6.1959052085876465
    5. '((' → logprob: -6.8209052085876465
    6. '   ' → logprob: -6.9459052085876465
    7. ' distances' → logprob: -7.3209052085876465
    8. '(' → logprob: -7.4459052085876465
    9. '[(' → logprob: -7.8209052085876465
    10. 'import' → logprob: -8.320905685424805

Token 620: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9242649078369141
    2. '[(' → logprob: -1.174264907836914
    3. ' between' → logprob: -1.799264907836914
    4. 'between' → logprob: -2.424264907836914
    5. 'for' → logprob: -4.424264907836914
    6. '   ' → logprob: -4.424264907836914
    7. '=' → logprob: -5.174264907836914
    8. 'from' → logprob: -5.924264907836914
    9. '_between' → logprob: -6.049264907836914
    10. ' for' → logprob: -6.049264907836914

Token 621: ' clusters' (ID: 51310)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.785800039768219
    2. 'clusters' → logprob: -0.785800039768219
    3. 'i' → logprob: -2.785799980163574
    4. ' clusters' → logprob: -4.535799980163574
    5. 'pairs' → logprob: -4.910799980163574
    6. ' (' → logprob: -6.035799980163574
    7. '(cl' → logprob: -6.910799980163574
    8. ' pairs' → logprob: -6.910799980163574
    9. '(cluster' → logprob: -7.160799980163574
    10. '(u' → logprob: -7.160799980163574

Token 622: ' dans' (ID: 2671)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0574744939804077
    2. 'for' → logprob: -1.0574744939804077
    3. '   ' → logprob: -1.6824744939804077
    4. ' =' → logprob: -2.3074746131896973
    5. '	for' → logprob: -5.682474613189697
    6. '    
' → logprob: -5.932474613189697
    7. '
' → logprob: -6.307474613189697
    8. '=' → logprob: -6.432474613189697
    9. '  
' → logprob: -6.557474613189697
    10. ',' → logprob: -6.807474613189697

Token 623: ' un' (ID: 537)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4063336253166199
    2. 'clusters' → logprob: -1.6563336849212646
    3. '{}' → logprob: -3.0313336849212646
    4. 'active' → logprob: -3.4063336849212646
    5. ' distances' → logprob: -3.6563336849212646
    6. ' clusters' → logprob: -4.1563334465026855
    7. ' active' → logprob: -5.1563334465026855
    8. '   ' → logprob: -5.6563334465026855
    9. ')' → logprob: -6.5313334465026855
    10. '[(' → logprob: -6.5313334465026855

Token 624: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.00906547624617815
    2. 'dictionary' → logprob: -5.384065628051758
    3. 'for' → logprob: -6.384065628051758
    4. '{}' → logprob: -7.134065628051758
    5. '{
' → logprob: -7.634065628051758
    6. 'dist' → logprob: -7.759065628051758
    7. ' dict' → logprob: -8.134065628051758
    8. '{' → logprob: -8.384065628051758
    9. 'd' → logprob: -8.384065628051758
    10. 'distance' → logprob: -9.634065628051758

Token 625: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16030272841453552
    2. 'for' → logprob: -2.5353026390075684
    3. ' for' → logprob: -2.7853026390075684
    4. ',' → logprob: -5.660302639007568
    5. ':' → logprob: -7.035302639007568
    6. '<|end|>' → logprob: -7.160302639007568
    7. '
' → logprob: -7.535302639007568
    8. '<|end|>' → logprob: -8.410303115844727
    9. ' with' → logprob: -8.660303115844727
    10. 'with' → logprob: -8.785303115844727

Token 626: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.8725966215133667
    2. 'clé' → logprob: -1.8725966215133667
    3. ' tuples' → logprob: -2.2475967407226562
    4. ' clés' → logprob: -2.2475967407226562
    5. '(' → logprob: -2.3725967407226562
    6. '(i' → logprob: -2.6225967407226562
    7. 'tu' → logprob: -3.1225967407226562
    8. 'keys' → logprob: -3.2475967407226562
    9. '(cl' → logprob: -3.2475967407226562
    10. ' tuple' → logprob: -3.4975967407226562

Token 627: ' (' (ID: 350)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.3453241288661957
    2. '(cl' → logprob: -2.7203240394592285
    3. ' clés' → logprob: -3.3453240394592285
    4. ' (' → logprob: -3.5953240394592285
    5. '(indices' → logprob: -3.5953240394592285
    6. '(' → logprob: -3.7203240394592285
    7. '(cluster' → logprob: -3.9703240394592285
    8. ' key' → logprob: -4.0953240394592285
    9. '(i' → logprob: -4.0953240394592285
    10. '   ' → logprob: -4.3453240394592285

Token 628: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.017872467637062073
    2. 'i' → logprob: -5.642872333526611
    3. '(min' → logprob: -5.642872333526611
    4. '(cluster' → logprob: -5.767872333526611
    5. '(active' → logprob: -6.142872333526611
    6. '(u' → logprob: -6.642872333526611
    7. ')' → logprob: -7.017872333526611
    8. 'min' → logprob: -7.017872333526611
    9. '(' → logprob: -7.017872333526611
    10. '(cl' → logprob: -7.767872333526611

Token 629: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05407930165529251
    2. ',i' → logprob: -3.054079294204712
    3. ',j' → logprob: -5.429079532623291
    4. ' ,' → logprob: -7.054079532623291
    5. '   ' → logprob: -9.304079055786133
    6. ',n' → logprob: -10.304079055786133
    7. ',int' → logprob: -10.804079055786133
    8. '(i' → logprob: -11.554079055786133
    9. 'i' → logprob: -11.679079055786133
    10. ',k' → logprob: -12.054079055786133

Token 630: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007516715209931135
    2. ',' → logprob: -5.382516860961914
    3. '),' → logprob: -6.507516860961914
    4. ')
' → logprob: -7.507516860961914
    5. ' )' → logprob: -8.632516860961914
    6. ' ,' → logprob: -8.757516860961914
    7. '   ' → logprob: -9.132516860961914
    8. ',i' → logprob: -9.257516860961914
    9. '):
' → logprob: -9.507516860961914
    10. '):' → logprob: -10.007516860961914

Token 631: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6483941674232483
    2. ' =' → logprob: -1.1483941078186035
    3. ' for' → logprob: -2.2733941078186035
    4. '=' → logprob: -3.3983941078186035
    5. ')' → logprob: -5.0233941078186035
    6. 'for' → logprob: -5.1483941078186035
    7. '(i' → logprob: -5.8983941078186035
    8. ' (' → logprob: -6.0233941078186035
    9. ',' → logprob: -6.3983941078186035
    10. '  ' → logprob: -7.5233941078186035

Token 632: '<' (ID: 27)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.1087404415011406
    2. ',' → logprob: -2.9837403297424316
    3. ',i' → logprob: -3.9837403297424316
    4. ' <' → logprob: -4.108740329742432
    5. '<' → logprob: -4.483740329742432
    6. ',<' → logprob: -6.358740329742432
    7. ' ,' → logprob: -6.483740329742432
    8. '<i' → logprob: -6.483740329742432
    9. ' j' → logprob: -8.10874080657959
    10. ',n' → logprob: -9.10874080657959

Token 633: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0028111785650253296
    2. ' j' → logprob: -5.877810955047607
    3. '   ' → logprob: -13.127811431884766
    4. '_j' → logprob: -13.627811431884766
    5. '	j' → logprob: -13.877811431884766
    6. ' ' → logprob: -14.252811431884766
    7. '```' → logprob: -14.627811431884766
    8. '  ' → logprob: -15.252811431884766
    9. '<|end|>' → logprob: -15.502811431884766
    10. '=j' → logprob: -15.752811431884766

Token 634: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49602678418159485
    2. ' for' → logprob: -1.1210267543792725
    3. 'for' → logprob: -2.8710267543792725
    4. ' =' → logprob: -5.496026992797852
    5. ',' → logprob: -6.871026992797852
    6. ')' → logprob: -7.121026992797852
    7. '=' → logprob: -7.371026992797852
    8. '	for' → logprob: -8.121026992797852
    9. '<|end|>' → logprob: -8.121026992797852
    10. ':' → logprob: -8.246026992797852

Token 635: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09581169486045837
    2. ' for' → logprob: -2.470811605453491
    3. 'for' → logprob: -5.09581184387207
    4. ':' → logprob: -8.72081184387207
    5. ' =' → logprob: -8.97081184387207
    6. '	for' → logprob: -9.47081184387207
    7. '
' → logprob: -9.59581184387207
    8. ',' → logprob: -9.72081184387207
    9. ')' → logprob: -9.72081184387207
    10. '  ' → logprob: -9.97081184387207

Token 636: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16191092133522034
    2. ' for' → logprob: -1.911910891532898
    3. '   ' → logprob: -6.4119110107421875
    4. '	for' → logprob: -10.161911010742188
    5. ' ' → logprob: -12.411911010742188
    6. ' ' → logprob: -14.786911010742188
    7. '
' → logprob: -15.786911010742188
    8. '  ' → logprob: -15.911911010742188
    9. '    ' → logprob: -17.536911010742188
    10. '       ' → logprob: -18.036911010742188

Token 637: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005550591740757227
    2. ' i' → logprob: -7.500555038452148
    3. '(i' → logprob: -14.000555038452148
    4. '	i' → logprob: -14.750555038452148
    5. 'j' → logprob: -15.000555038452148
    6. '   ' → logprob: -15.750555038452148
    7. '0' → logprob: -16.25055503845215
    8. ' ' → logprob: -16.37555503845215
    9. '_i' → logprob: -16.75055503845215
    10. ' (' → logprob: -16.87555503845215

Token 638: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10028786957263947
    2. 'in' → logprob: -2.350287914276123
    3. ',' → logprob: -10.600287437438965
    4. ' ' → logprob: -10.725287437438965
    5. '   ' → logprob: -11.850287437438965
    6. '+' → logprob: -11.975287437438965
    7. '	in' → logprob: -12.600287437438965
    8. '  ' → logprob: -12.725287437438965
    9. 'range' → logprob: -12.725287437438965
    10. '<|end|>' → logprob: -12.850287437438965

Token 639: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024758970830589533
    2. ' range' → logprob: -6.002475738525391
    3. '0' → logprob: -16.75247573852539
    4. '   ' → logprob: -16.75247573852539
    5. '(range' → logprob: -17.25247573852539
    6. ' ' → logprob: -17.50247573852539
    7. '	range' → logprob: -18.25247573852539
    8. '  ' → logprob: -18.87747573852539
    9. 'rang' → logprob: -20.62747573852539
    10. 'i' → logprob: -20.75247573852539

Token 640: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001491292379796505
    2. ' n' → logprob: -6.751491069793701
    3. '(n' → logprob: -8.25149154663086
    4. '   ' → logprob: -10.25149154663086
    5. 'i' → logprob: -10.75149154663086
    6. ' ' → logprob: -13.75149154663086
    7. '0' → logprob: -14.12649154663086
    8. '	n' → logprob: -14.25149154663086
    9. ')n' → logprob: -14.75149154663086
    10. '(i' → logprob: -15.37649154663086

Token 641: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033510949462652206
    2. ' +' → logprob: -3.53351092338562
    3. '):
' → logprob: -6.033511161804199
    4. '   ' → logprob: -6.908511161804199
    5. '):' → logprob: -8.0335111618042
    6. ',' → logprob: -11.6585111618042
    7. '       ' → logprob: -12.0335111618042
    8. '+i' → logprob: -13.0335111618042
    9. '  ' → logprob: -13.1585111618042
    10. ')' → logprob: -13.1585111618042

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7358978986740112
    2. ' for' → logprob: -0.7358978986740112
    3. '   ' → logprob: -3.235898017883301
    4. '	for' → logprob: -6.860898017883301
    5. 'for' → logprob: -6.860898017883301
    6. '    ' → logprob: -8.7358980178833
    7. ' ' → logprob: -8.8608980178833
    8. '	   ' → logprob: -9.2358980178833
    9. '	' → logprob: -11.3608980178833
    10. '     ' → logprob: -11.8608980178833

Token 643: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2816283702850342
    2. ' for' → logprob: -1.5316283702850342
    3. '   ' → logprob: -3.531628370285034
    4. '	for' → logprob: -12.531628608703613
    5. ' ' → logprob: -13.531628608703613
    6. '       ' → logprob: -15.406628608703613
    7. ' ' → logprob: -17.156627655029297
    8. ' j' → logprob: -17.531627655029297
    9. '   ' → logprob: -17.531627655029297
    10. '  ' → logprob: -17.656627655029297

Token 644: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16034039855003357
    2. ' j' → logprob: -1.910340428352356
    3. 'i' → logprob: -9.660340309143066
    4. '   ' → logprob: -10.285340309143066
    5. ' i' → logprob: -11.160340309143066
    6. '    ' → logprob: -13.535340309143066
    7. '	j' → logprob: -13.535340309143066
    8. '       ' → logprob: -14.410340309143066
    9. ' range' → logprob: -14.660340309143066
    10. '(j' → logprob: -15.535340309143066

Token 645: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04414613917469978
    2. '(i' → logprob: -3.6691460609436035
    3. 'in' → logprob: -4.5441460609436035
    4. '=i' → logprob: -5.9191460609436035
    5. ' i' → logprob: -6.0441460609436035
    6. ' (' → logprob: -6.6691460609436035
    7. 'i' → logprob: -7.9191460609436035
    8. '=' → logprob: -9.419146537780762
    9. '   ' → logprob: -9.544146537780762
    10. ' ' → logprob: -9.919146537780762

Token 646: ' range' (ID: 3352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9572263956069946
    2. 'range' → logprob: -1.2072263956069946
    3. ' range' → logprob: -1.2072263956069946
    4. ' i' → logprob: -4.332226276397705
    5. '(i' → logprob: -5.332226276397705
    6. '(range' → logprob: -11.832226753234863
    7. '[i' → logprob: -12.332226753234863
    8. '   ' → logprob: -12.582226753234863
    9. ' ' → logprob: -13.582226753234863
    10. '{i' → logprob: -13.707226753234863

Token 647: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.040949415415525436
    2. 'i' → logprob: -3.2909493446350098
    3. ' i' → logprob: -6.29094934463501
    4. ' (' → logprob: -7.16594934463501
    5. ' range' → logprob: -8.790949821472168
    6. 'range' → logprob: -9.415949821472168
    7. '   ' → logprob: -10.665949821472168
    8. '[i' → logprob: -12.790949821472168
    9. ' ' → logprob: -12.915949821472168
    10. '(' → logprob: -12.915949821472168

Token 648: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004099654499441385
    2. ' +' → logprob: -5.5040998458862305
    3. '1' → logprob: -11.62909984588623
    4. '+i' → logprob: -11.75409984588623
    5. '+j' → logprob: -13.00409984588623
    6. '   ' → logprob: -14.87909984588623
    7. '()+' → logprob: -15.25409984588623
    8. 'i' → logprob: -15.37909984588623
    9. '0' → logprob: -15.50409984588623
    10. ')' → logprob: -15.50409984588623

Token 649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015014449309092015
    2. 'i' → logprob: -8.875149726867676
    3. ' ' → logprob: -11.625149726867676
    4. 'n' → logprob: -15.250149726867676
    5. ' i' → logprob: -15.250149726867676
    6. '   ' → logprob: -15.375149726867676
    7. '(i' → logprob: -15.625149726867676
    8. '0' → logprob: -16.250150680541992
    9. '```' → logprob: -16.375150680541992
    10. '+' → logprob: -16.875150680541992

Token 650: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03538043424487114
    2. ',n' → logprob: -3.7853803634643555
    3. '+' → logprob: -5.1603803634643555
    4. '1' → logprob: -5.5353803634643555
    5. ' ,' → logprob: -6.5353803634643555
    6. 'n' → logprob: -7.6603803634643555
    7. ',j' → logprob: -8.535380363464355
    8. ',i' → logprob: -8.910380363464355
    9. '+,' → logprob: -10.285380363464355
    10. ' +' → logprob: -11.035380363464355

Token 651: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47490015625953674
    2. '):' → logprob: -0.9749001264572144
    3. '):
' → logprob: -7.724900245666504
    4. '   ' → logprob: -8.599900245666504
    5. '       ' → logprob: -9.724900245666504
    6. ',' → logprob: -10.224900245666504
    7. ' ):' → logprob: -10.599900245666504
    8. ')' → logprob: -10.724900245666504
    9. ' ):
' → logprob: -10.724900245666504
    10. '):

' → logprob: -11.349900245666504

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.644463479053229e-05
    2. '               ' → logprob: -10.500046730041504
    3. ' distances' → logprob: -11.875046730041504
    4. 'dist' → logprob: -12.000046730041504
    5. '	       ' → logprob: -13.250046730041504
    6. '          ' → logprob: -13.875046730041504
    7. '       ' → logprob: -14.250046730041504
    8. '                   ' → logprob: -14.750046730041504
    9. '   ' → logprob: -15.000046730041504
    10. '            ' → logprob: -15.125046730041504

Token 653: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22642023861408234
    2. ' distances' → logprob: -1.976420283317566
    3. '   ' → logprob: -2.8514201641082764
    4. '               ' → logprob: -5.6014204025268555
    5. ' dist' → logprob: -6.2264204025268555
    6. '	dist' → logprob: -8.226420402526855
    7. '           ' → logprob: -8.476420402526855
    8. '       ' → logprob: -9.351420402526855
    9. ' ' → logprob: -10.851420402526855
    10. '  ' → logprob: -11.851420402526855

Token 654: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -7.703443770878948e-06
    2. '[i' → logprob: -12.375007629394531
    3. '=' → logprob: -13.625007629394531
    4. ' [(' → logprob: -14.125007629394531
    5. '[' → logprob: -14.500007629394531
    6. '=(' → logprob: -15.500007629394531
    7. '(i' → logprob: -15.625007629394531
    8. '((' → logprob: -16.00000762939453
    9. ' (' → logprob: -16.50000762939453
    10. ' =' → logprob: -16.50000762939453

Token 655: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.908022285439074e-05
    2. ' i' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.125059127807617
    4. '(i' → logprob: -16.125059127807617
    5. ' ' → logprob: -16.500059127807617
    6. ',' → logprob: -16.625059127807617
    7. ',i' → logprob: -16.875059127807617
    8. ')i' → logprob: -17.000059127807617
    9. '{i' → logprob: -17.000059127807617
    10. ')' → logprob: -17.375059127807617

Token 656: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6931907534599304
    2. ',j' → logprob: -0.6931907534599304
    3. ' ,' → logprob: -10.193190574645996
    4. ',
' → logprob: -12.568190574645996
    5. 'j' → logprob: -13.818190574645996
    6. '   ' → logprob: -14.318190574645996
    7. ';j' → logprob: -16.068191528320312
    8. ',i' → logprob: -16.193191528320312
    9. ' j' → logprob: -16.318191528320312
    10. '
' → logprob: -16.568191528320312

Token 657: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010115911572938785
    2. ' )' → logprob: -10.125101089477539
    3. ']' → logprob: -10.250101089477539
    4. ')' → logprob: -10.750101089477539
    5. '])' → logprob: -12.750101089477539
    6. ']]' → logprob: -14.875101089477539
    7. '')]' → logprob: -15.000101089477539
    8. ' ]' → logprob: -15.500101089477539
    9. '")]' → logprob: -16.12510108947754
    10. '   ' → logprob: -16.12510108947754

Token 658: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889056205749512
    2. ' =' → logprob: -2.578890562057495
    3. ']' → logprob: -14.453890800476074
    4. ']=' → logprob: -15.703890800476074
    5. '   ' → logprob: -17.078889846801758
    6. ')' → logprob: -17.578889846801758
    7. '=

' → logprob: -17.828889846801758
    8. ' ' → logprob: -17.953889846801758
    9. '    ' → logprob: -18.078889846801758
    10. ',' → logprob: -18.453889846801758

Token 659: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0008051026379689574
    2. ' dist' → logprob: -7.125804901123047
    3. '   ' → logprob: -15.000804901123047
    4. '	dist' → logprob: -16.375804901123047
    5. 'float' → logprob: -16.500804901123047
    6. '       ' → logprob: -17.500804901123047
    7. '           ' → logprob: -18.250804901123047
    8. '(dist' → logprob: -18.375804901123047
    9. ' ' → logprob: -18.625804901123047
    10. '  ' → logprob: -19.000804901123047

Token 660: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.00020854694594163448
    2. 'ances' → logprob: -8.625208854675293
    3. 'ance' → logprob: -10.500208854675293
    4. 'matrix' → logprob: -14.250208854675293
    5. 's' → logprob: -15.500208854675293
    6. '_' → logprob: -15.875208854675293
    7. 'anc' → logprob: -16.250207901000977
    8. '_array' → logprob: -16.500207901000977
    9. '_MATRIX' → logprob: -16.750207901000977
    10. '_m' → logprob: -16.750207901000977

Token 661: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.75
    3. '(i' → logprob: -16.75
    4. '[j' → logprob: -17.25
    5. 'i' → logprob: -17.375
    6. '   ' → logprob: -17.875
    7. ' ' → logprob: -18.375
    8. '[(' → logprob: -18.5
    9. '[I' → logprob: -19.25
    10. '{i' → logprob: -19.375

Token 662: '][' (ID: 2696)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.3232291340827942
    2. '][' → logprob: -1.5732290744781494
    3. ',' → logprob: -2.9482290744781494
    4. '[j' → logprob: -4.1982293128967285
    5. '[' → logprob: -7.4482293128967285
    6. '],[' → logprob: -8.32322883605957
    7. ']' → logprob: -9.19822883605957
    8. ',[' → logprob: -9.44822883605957
    9. '   ' → logprob: -9.69822883605957
    10. ' ' → logprob: -9.82322883605957

Token 663: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.688212614681106e-05
    2. ' j' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.500017166137695
    4. ' ' → logprob: -17.250017166137695
    5. '	j' → logprob: -18.250017166137695
    6. '           ' → logprob: -18.500017166137695
    7. '[j' → logprob: -19.125017166137695
    8. '       ' → logprob: -19.250017166137695
    9. '  ' → logprob: -19.875017166137695
    10. ',j' → logprob: -20.125017166137695

Token 664: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005648136138916016
    2. ' ]' → logprob: -5.505648136138916
    3. ')' → logprob: -7.380648136138916
    4. '<|end|>' → logprob: -7.630648136138916
    5. ')]' → logprob: -7.880648136138916
    6. '<|end|>' → logprob: -10.505647659301758
    7. '   ' → logprob: -11.505647659301758
    8. ']
' → logprob: -11.755647659301758
    9. '       ' → logprob: -11.755647659301758
    10. '           ' → logprob: -11.880647659301758

Token 665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037223368883132935
    2. '
' → logprob: -4.0372233390808105
    3. '    
' → logprob: -4.5372233390808105
    4. ' for' → logprob: -6.5372233390808105
    5. '```' → logprob: -6.7872233390808105
    6. ' next' → logprob: -6.9122233390808105
    7. ' while' → logprob: -7.1622233390808105
    8. '  
' → logprob: -7.2872233390808105
    9. 'while' → logprob: -7.2872233390808105
    10. 'for' → logprob: -7.5372233390808105

Token 666: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.2644006311893463
    2. 'cluster' → logprob: -2.1394007205963135
    3. 'while' → logprob: -2.3894007205963135
    4. 'current' → logprob: -4.264400482177734
    5. 'num' → logprob: -5.639400482177734
    6. 'clusters' → logprob: -6.639400482177734
    7. 'size' → logprob: -6.764400482177734
    8. 'count' → logprob: -6.764400482177734
    9. ' next' → logprob: -7.889400482177734
    10. '   ' → logprob: -8.389400482177734

Token 667: '_node' (ID: 11390)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.7001233696937561
    2. '_idx' → logprob: -0.7001233696937561
    3. '_node' → logprob: -5.450123310089111
    4. '_cluster' → logprob: -5.950123310089111
    5. '_index' → logprob: -9.95012378692627
    6. '_label' → logprob: -13.20012378692627
    7. 'idx' → logprob: -14.70012378692627
    8. '_internal' → logprob: -15.95012378692627
    9. 'cluster' → logprob: -16.200122833251953
    10. '_cl' → logprob: -16.700122833251953

Token 668: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.20865905284881592
    2. '_idx' → logprob: -1.708659052848816
    3. ' =' → logprob: -5.2086591720581055
    4. '=' → logprob: -6.5836591720581055
    5. 'idx' → logprob: -8.458659172058105
    6. '_index' → logprob: -9.458659172058105
    7. 'id' → logprob: -10.083659172058105
    8. '   ' → logprob: -11.583659172058105
    9. '=_' → logprob: -11.708659172058105
    10. 'Idx' → logprob: -11.833659172058105

Token 669: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002078503370285
    2. '=' → logprob: -2.350207805633545
    3. '   ' → logprob: -14.225208282470703
    4. '=n' → logprob: -15.725208282470703
    5. '=len' → logprob: -15.725208282470703
    6. '=int' → logprob: -15.725208282470703
    7. ' ' → logprob: -16.350208282470703
    8. '    ' → logprob: -16.975208282470703
    9. ' +=' → logprob: -17.975208282470703
    10. ':' → logprob: -18.100208282470703

Token 670: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.896309739408025e-07
    2. ' n' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.875
    4. '	n' → logprob: -19.375
    5. '
' → logprob: -21.625
    6. '(n' → logprob: -22.875
    7. '_n' → logprob: -23.375
    8. '
' → logprob: -23.875
    9. '[n' → logprob: -24.125
    10. '  ' → logprob: -24.5

Token 671: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1900123506784439
    2. '   ' → logprob: -1.8150123357772827
    3. '    
' → logprob: -5.815012454986572
    4. ' while' → logprob: -5.940012454986572
    5. 'while' → logprob: -6.440012454986572
    6. '  
' → logprob: -7.065012454986572
    7. '<|end|>' → logprob: -7.440012454986572
    8. 'def' → logprob: -7.690012454986572
    9. ' 
' → logprob: -7.940012454986572
    10. '	while' → logprob: -8.690011978149414

Token 672: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002090423135086894
    2. '   ' → logprob: -7.5020904541015625
    3. '    
' → logprob: -7.8770904541015625
    4. 'while' → logprob: -8.002090454101562
    5. '#' (adapté à ' #') → logprob: -8.502090454101562
    6. '  
' → logprob: -8.502090454101562
    7. 'for' → logprob: -9.002090454101562
    8. '+' → logprob: -9.252090454101562
    9. '
' → logprob: -9.752090454101562
    10. ' 
' → logprob: -10.377090454101562

Token 673: ' ident' (ID: 3951)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.24090179800987244
    2. 'while' → logprob: -2.1159017086029053
    3. ' next' → logprob: -3.1159017086029053
    4. 'for' → logprob: -4.115901947021484
    5. ' while' → logprob: -4.365901947021484
    6. '#' → logprob: -4.615901947021484
    7. ' for' → logprob: -6.490901947021484
    8. '   ' → logprob: -6.490901947021484
    9. 'current' → logprob: -6.490901947021484
    10. 'node' → logprob: -7.240901947021484

Token 674: 'ifi' (ID: 6897)
  Prédit: 'ifiant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ifiant' → logprob: -0.4103963375091553
    2. 'unique' → logprob: -2.1603963375091553
    3. '_unique' → logprob: -2.5353963375091553
    4. 'ique' → logprob: -3.2853963375091553
    5. 'ifier' → logprob: -3.7853963375091553
    6. '_token' → logprob: -4.410396575927734
    7. 'f' → logprob: -4.535396575927734
    8. '=' → logprob: -4.660396575927734
    9. 'next' → logprob: -4.785396575927734
    10. '<|end|>' → logprob: -5.160396575927734

Token 675: 'ants' (ID: 2027)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08082585781812668
    2. 'f' → logprob: -2.7058258056640625
    3. 'fi' → logprob: -5.4558258056640625
    4. '#' → logprob: -6.2058258056640625
    5. 'eur' → logprob: -6.2058258056640625
    6. 'que' → logprob: -7.0808258056640625
    7. 'ant' → logprob: -8.455825805664062
    8. '```' → logprob: -8.580825805664062
    9. 'uer' → logprob: -8.955825805664062
    10. 'e' → logprob: -8.955825805664062

Token 676: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 677: ' noe' (ID: 49921)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5680601596832275
    2. ' les' → logprob: -1.9430601596832275
    3. 'new' → logprob: -2.0680601596832275
    4. 'nodes' → logprob: -3.3180601596832275
    5. 'next' → logprob: -3.6930601596832275
    6. 'internal' → logprob: -3.6930601596832275
    7. ' new' → logprob: -3.8180601596832275
    8. 'l' → logprob: -4.443059921264648
    9. ' nouveaux' → logprob: -4.693059921264648
    10. 'la' → logprob: -5.318059921264648

Token 678: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.14306855201721191
    2. 'ud' → logprob: -2.018068552017212
    3. ' ' → logprob: -9.018068313598633
    4. 'x' → logprob: -9.768068313598633
    5. 'u' → logprob: -9.768068313598633
    6. 'ux' → logprob: -10.393068313598633
    7. 'aux' → logprob: -10.643068313598633
    8. '   ' → logprob: -11.018068313598633
    9. '```' → logprob: -11.268068313598633
    10. ' uds' → logprob: -11.518068313598633

Token 679: ' internes' (ID: 183434)
  Prédit: 'intern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intern' → logprob: -0.1057293564081192
    2. ' internes' → logprob: -2.730729341506958
    3. 'inter' → logprob: -3.355729341506958
    4. '   ' → logprob: -9.105729103088379
    5. ' intern' → logprob: -9.605729103088379
    6. 'internal' → logprob: -10.105729103088379
    7. ' interne' → logprob: -10.855729103088379
    8. 'extern' → logprob: -11.105729103088379
    9. '_inter' → logprob: -11.605729103088379
    10. ' internos' → logprob: -12.355729103088379

Token 680: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04972613602876663
    2. '
' → logprob: -3.9247262477874756
    3. 'def' → logprob: -4.6747260093688965
    4. '    
' → logprob: -4.7997260093688965
    5. '<|end|>' → logprob: -5.2997260093688965
    6. '<|end|>' → logprob: -6.4247260093688965
    7. 'tokens' → logprob: -7.0497260093688965
    8. ' ' → logprob: -7.5497260093688965
    9. ',' → logprob: -7.6747260093688965
    10. 'while' → logprob: -8.049726486206055

Token 681: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.35034406185150146
    2. '   ' → logprob: -1.4753440618515015
    3. ' while' → logprob: -2.725344181060791
    4. 'def' → logprob: -7.600344181060791
    5. '	while' → logprob: -8.100343704223633
    6. '    
' → logprob: -8.975343704223633
    7. '```' → logprob: -9.100343704223633
    8. 'clusters' → logprob: -9.225343704223633
    9. 'cluster' → logprob: -9.350343704223633
    10. '
' → logprob: -10.350343704223633

Token 682: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -2.7491250875755213e-05
    2. ' while' → logprob: -11.125027656555176
    3. 'for' → logprob: -11.625027656555176
    4. 'import' → logprob: -13.250027656555176
    5. 'def' → logprob: -14.250027656555176
    6. 'cluster' → logprob: -14.625027656555176
    7. '   ' → logprob: -14.875027656555176
    8. 'clusters' → logprob: -15.125027656555176
    9. '	while' → logprob: -15.625027656555176
    10. 'active' → logprob: -16.62502670288086

Token 683: ' Fonction' (ID: 189149)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.906711546937004e-05
    2. ' while' → logprob: -10.250048637390137
    3. 'for' → logprob: -11.250048637390137
    4. 'import' → logprob: -14.500048637390137
    5. '   ' → logprob: -16.250049591064453
    6. 'def' → logprob: -17.125049591064453
    7. 'from' → logprob: -18.375049591064453
    8. '	while' → logprob: -18.500049591064453
    9. 'While' → logprob: -20.375049591064453
    10. 'cluster' → logprob: -20.875049591064453

Token 684: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03848034888505936
    2. ' def' → logprob: -3.663480281829834
    3. ' compute' → logprob: -6.163480281829834
    4. ' =' → logprob: -6.413480281829834
    5. 'calculate' → logprob: -6.413480281829834
    6. 'compute' → logprob: -6.788480281829834
    7. ' get' → logprob: -6.788480281829834
    8. ' calculate' → logprob: -7.163480281829834
    9. '   ' → logprob: -7.288480281829834
    10. 'get' → logprob: -7.413480281829834

Token 685: ' trouver' (ID: 23195)
  Prédit: ' trouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.3947685658931732
    2. ' find' → logprob: -1.5197685956954956
    3. 'find' → logprob: -2.644768476486206
    4. 'min' → logprob: -4.019768714904785
    5. ' min' → logprob: -5.019768714904785
    6. 'tr' → logprob: -5.394768714904785
    7. ' get' → logprob: -6.394768714904785
    8. '   ' → logprob: -6.769768714904785
    9. ' ' → logprob: -7.144768714904785
    10. 'calcul' → logprob: -7.144768714904785

Token 686: ' la' (ID: 557)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6038620471954346
    2. 'min' → logprob: -2.1038620471954346
    3. 'next' → logprob: -2.3538620471954346
    4. ' la' → logprob: -2.6038620471954346
    5. ' the' → logprob: -3.3538620471954346
    6. '(' → logprob: -3.6038620471954346
    7. ' next' → logprob: -3.8538620471954346
    8. '   ' → logprob: -4.4788618087768555
    9. 'closest' → logprob: -4.4788618087768555
    10. ' min' → logprob: -4.6038618087768555

Token 687: ' paire' (ID: 148856)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.37207847833633423
    2. 'closest' → logprob: -2.3720784187316895
    3. ' min' → logprob: -2.6220784187316895
    4. ' closest' → logprob: -2.7470784187316895
    5. ' next' → logprob: -3.8720784187316895
    6. 'next' → logprob: -4.4970784187316895
    7. ' pair' → logprob: -4.7470784187316895
    8. 'pair' → logprob: -4.7470784187316895
    9. ' ' → logprob: -5.2470784187316895
    10. ' paire' → logprob: -5.2470784187316895

Token 688: ' minimale' (ID: 143217)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -1.277288794517517
    2. '_' → logprob: -1.402288794517517
    3. '_active' → logprob: -1.777288794517517
    4. '_tokens' → logprob: -2.5272889137268066
    5. '<|end|>' → logprob: -3.0272889137268066
    6. ' _' → logprob: -3.7772889137268066
    7. ',' → logprob: -4.027288913726807
    8. ' (' → logprob: -4.152288913726807
    9. '(' → logprob: -4.402288913726807
    10. '(
' → logprob: -4.527288913726807

Token 689: '
' (ID: 198)
  Prédit: ' cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -2.342790365219116
    2. '_token' → logprob: -2.592790365219116
    3. '   ' → logprob: -2.717790365219116
    4. ',' → logprob: -2.842790365219116
    5. ' =' → logprob: -2.842790365219116
    6. 'cluster' → logprob: -2.842790365219116
    7. ' (' → logprob: -2.967790365219116
    8. ':' → logprob: -2.967790365219116
    9. '_cluster' → logprob: -2.967790365219116
    10. '_min' → logprob: -2.967790365219116

Token 690: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6836220622062683
    2. '(' → logprob: -2.183622121810913
    3. 'def' → logprob: -2.183622121810913
    4. ' (' → logprob: -3.183622121810913
    5. '(
' → logprob: -3.183622121810913
    6. ':' → logprob: -3.558622121810913
    7. ' =' → logprob: -3.933622121810913
    8. '_dist' → logprob: -4.183621883392334
    9. '_to' → logprob: -4.433621883392334
    10. '_' → logprob: -4.558621883392334

Token 691: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011834376491606236
    2. '   ' → logprob: -5.136834144592285
    3. ' def' → logprob: -5.136834144592285
    4. '
' → logprob: -11.761834144592285
    5. 'while' → logprob: -13.761834144592285
    6. '    
' → logprob: -13.761834144592285
    7. '    ' → logprob: -14.761834144592285
    8. 'min' → logprob: -15.261834144592285
    9. ' while' → logprob: -15.386834144592285
    10. '	def' → logprob: -15.636834144592285

Token 692: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.024184968322515488
    2. 'min' → logprob: -4.0241851806640625
    3. ' find' → logprob: -5.2741851806640625
    4. 'get' → logprob: -8.149185180664062
    5. '_find' → logprob: -9.149185180664062
    6. 'minimum' → logprob: -9.149185180664062
    7. 'best' → logprob: -9.524185180664062
    8. ' min' → logprob: -9.774185180664062
    9. 'minimal' → logprob: -9.774185180664062
    10. 'closest' → logprob: -9.899185180664062

Token 693: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.4186190366744995
    2. '_pair' → logprob: -2.043619155883789
    3. '_' → logprob: -2.543619155883789
    4. '_cl' → logprob: -3.043619155883789
    5. '_cluster' → logprob: -3.293619155883789
    6. ' _' → logprob: -3.793619155883789
    7. '(' → logprob: -4.418619155883789
    8. '_distance' → logprob: -5.293619155883789
    9. ' (' → logprob: -6.043619155883789
    10. '_next' → logprob: -6.543619155883789

Token 694: '_pair' (ID: 34819)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.4349757730960846
    2. '():' → logprob: -2.6849758625030518
    3. '_cluster' → logprob: -2.8099758625030518
    4. '_' → logprob: -2.9349758625030518
    5. '_dist' → logprob: -3.0599758625030518
    6. '_pair' → logprob: -3.0599758625030518
    7. '_token' → logprob: -3.5599758625030518
    8. '():
' → logprob: -3.5599758625030518
    9. '(' → logprob: -4.809975624084473
    10. '()' → logprob: -5.434975624084473

Token 695: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4747450351715088
    2. '():
' → logprob: -0.9747450351715088
    3. '()' → logprob: -7.47474479675293
    4. '():
' → logprob: -10.09974479675293
    5. '(' → logprob: -10.59974479675293
    6. ' ():' → logprob: -11.09974479675293
    7. '   ' → logprob: -11.84974479675293
    8. '(
' → logprob: -12.34974479675293
    9. '():

' → logprob: -12.34974479675293
    10. ':' → logprob: -12.97474479675293

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10207519680261612
    2. '   ' → logprob: -2.3520750999450684
    3. 'tokens' → logprob: -7.727075099945068
    4. '    ' → logprob: -8.102075576782227
    5. '    
' → logprob: -8.352075576782227
    6. ' for' → logprob: -8.727075576782227
    7. ' min' → logprob: -8.852075576782227
    8. 'min' → logprob: -9.227075576782227
    9. 'for' → logprob: -9.352075576782227
    10. ' tokens' → logprob: -9.477075576782227

Token 697: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6142102479934692
    2. 'min' (adapté à ' min') → logprob: -0.8642102479934692
    3. '   ' → logprob: -3.8642101287841797
    4. ' min' → logprob: -4.36421012878418
    5. 'best' → logprob: -6.36421012878418
    6. ' best' → logprob: -8.36421012878418
    7. '    ' → logprob: -8.48921012878418
    8. 'm' → logprob: -8.73921012878418
    9. '    
' → logprob: -8.73921012878418
    10. 'return' → logprob: -8.86421012878418

Token 698: '_dist' (ID: 37968)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.577244758605957
    2. '_key' → logprob: -1.577244758605957
    3. '_pair' → logprob: -2.077244758605957
    4. '_distance' → logprob: -2.827244758605957
    5. '_dist' → logprob: -3.452244758605957
    6. '_token' → logprob: -5.077244758605957
    7. '(' → logprob: -5.202244758605957
    8. ' _' → logprob: -7.202244758605957
    9. '_x' → logprob: -7.577244758605957
    10. '((' → logprob: -7.827244758605957

Token 699: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3873673975467682
    2. '=' → logprob: -1.1373673677444458
    3. '   ' → logprob: -8.262367248535156
    4. ',' → logprob: -8.887367248535156
    5. ' ' → logprob: -9.512367248535156
    6. '=None' → logprob: -11.887367248535156
    7. '  ' → logprob: -12.012367248535156
    8. '    ' → logprob: -12.262367248535156
    9. '_' → logprob: -13.012367248535156
    10. ')' → logprob: -13.887367248535156

Token 700: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.07918498665094376
    2. ' float' → logprob: -2.5791850090026855
    3. 'None' → logprob: -8.829184532165527
    4. ' None' → logprob: -8.829184532165527
    5. 'sys' → logprob: -14.204184532165527
    6. ' sys' → logprob: -14.704184532165527
    7. '   ' → logprob: -14.829184532165527
    8. ' ' → logprob: -15.079184532165527
    9. '10' → logprob: -15.329184532165527
    10. '	float' → logprob: -15.454184532165527

Token 701: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.128163257315464e-07
    2. '("' → logprob: -15.25
    3. ''in' → logprob: -17.0
    4. ''' → logprob: -19.0
    5. '(' → logprob: -19.5
    6. '('-' → logprob: -19.75
    7. ' ('' → logprob: -19.75
    8. '('+' → logprob: -19.75
    9. '(in' → logprob: -20.5
    10. ''s' → logprob: -21.875

Token 702: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0017582408618181944
    2. ''in' → logprob: -6.376758098602295
    3. ''' → logprob: -10.001758575439453
    4. 'in' → logprob: -12.501758575439453
    5. 'info' → logprob: -12.501758575439453
    6. '-inf' → logprob: -13.876758575439453
    7. '_inf' → logprob: -14.751758575439453
    8. ''+' → logprob: -15.001758575439453
    9. ' inf' → logprob: -15.126758575439453
    10. ''s' → logprob: -15.626758575439453

Token 703: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.4672541916370392
    2. '')' → logprob: -1.4672541618347168
    3. ')' → logprob: -2.592254161834717
    4. ')
' → logprob: -2.842254161834717
    5. '       ' → logprob: -4.842254161834717
    6. ' ')
' → logprob: -6.717254161834717
    7. ')')
' → logprob: -8.342254638671875
    8. ',' → logprob: -9.717254638671875
    9. '')
' → logprob: -9.967254638671875
    10. ' ')' → logprob: -10.467254638671875

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05724433809518814
    2. '        
' → logprob: -3.682244300842285
    3. ',' → logprob: -4.807244300842285
    4. '<|end|>' → logprob: -4.932244300842285
    5. ' 
' → logprob: -5.807244300842285
    6. '  
' → logprob: -5.807244300842285
    7. ' for' → logprob: -6.432244300842285
    8. 'for' → logprob: -6.432244300842285
    9. '
' → logprob: -7.057244300842285
    10. '	' → logprob: -7.557244300842285

Token 705: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.2333368957042694
    2. ' min' → logprob: -1.9833369255065918
    3. '       ' → logprob: -2.733336925506592
    4. ' res' → logprob: -6.858336925506592
    5. '   ' → logprob: -6.858336925506592
    6. 'for' → logprob: -7.358336925506592
    7. 'pair' → logprob: -7.358336925506592
    8. ' for' → logprob: -7.858336925506592
    9. ' pair' → logprob: -7.858336925506592
    10. 'result' → logprob: -8.233336448669434

Token 706: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.01885337568819523
    2. '_key' → logprob: -4.768853187561035
    3. '_i' → logprob: -5.768853187561035
    4. '_token' → logprob: -6.018853187561035
    5. '_pairs' → logprob: -6.768853187561035
    6. 'pair' → logprob: -6.893853187561035
    7. '_' → logprob: -7.518853187561035
    8. 'i' → logprob: -7.518853187561035
    9. '_p' → logprob: -8.518853187561035
    10. '_cluster' → logprob: -8.643853187561035

Token 707: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1604955494403839
    2. '=' → logprob: -1.9104955196380615
    3. '=None' → logprob: -8.53549575805664
    4. ' ' → logprob: -10.16049575805664
    5. '   ' → logprob: -11.16049575805664
    6. ' None' → logprob: -11.91049575805664
    7. '    ' → logprob: -12.28549575805664
    8. 'None' → logprob: -13.03549575805664
    9. '(None' → logprob: -13.03549575805664
    10. '  ' → logprob: -13.41049575805664

Token 708: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0025795823894441128
    2. '(None' → logprob: -6.252579689025879
    3. ' None' → logprob: -7.502579689025879
    4. '(-' → logprob: -9.502579689025879
    5. '(' → logprob: -10.627579689025879
    6. '   ' → logprob: -16.752578735351562
    7. '_None' → logprob: -17.502578735351562
    8. ',None' → logprob: -17.627578735351562
    9. '=None' → logprob: -17.877578735351562
    10. 'none' → logprob: -18.627578735351562

Token 709: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037459288723766804
    2. ' for' → logprob: -6.628746032714844
    3. '        
' → logprob: -7.378746032714844
    4. '	' → logprob: -7.503746032714844
    5. 'for' → logprob: -7.753746032714844
    6. '<|end|>' → logprob: -8.503746032714844
    7. '   ' → logprob: -8.753746032714844
    8. '		
' → logprob: -9.128746032714844
    9. '	for' → logprob: -9.503746032714844
    10. '  
' → logprob: -9.753746032714844

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002680112374946475
    2. 'for' → logprob: -9.00026798248291
    3. ' for' → logprob: -9.25026798248291
    4. '   ' → logprob: -10.75026798248291
    5. '	' → logprob: -11.25026798248291
    6. '        
' → logprob: -12.12526798248291
    7. '           ' → logprob: -13.00026798248291
    8. '	   ' → logprob: -13.37526798248291
    9. ' ' → logprob: -13.50026798248291
    10. '	for' → logprob: -14.75026798248291

Token 711: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6136482954025269
    2. ' for' → logprob: -1.3636482954025269
    3. 'for' (adapté à ' for') → logprob: -1.6136482954025269
    4. '	for' → logprob: -5.738648414611816
    5. '   ' → logprob: -8.738648414611816
    6. '	   ' → logprob: -8.863648414611816
    7. ' ' → logprob: -9.613648414611816
    8. '	       ' → logprob: -10.113648414611816
    9. '	' → logprob: -10.238648414611816
    10. '           ' → logprob: -10.738648414611816

Token 712: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.6465151906013489
    2. 'key' → logprob: -1.896515130996704
    3. '(i' → logprob: -1.896515130996704
    4. '(key' → logprob: -2.396515130996704
    5. ' (' → logprob: -3.271515130996704
    6. '(u' → logprob: -4.396515369415283
    7. 'k' → logprob: -4.521515369415283
    8. ' key' → logprob: -4.521515369415283
    9. '(pair' → logprob: -4.771515369415283
    10. '(p' → logprob: -6.646515369415283

Token 713: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009084968827664852
    2. 'a' → logprob: -6.259085178375244
    3. 'key' → logprob: -6.259085178375244
    4. '(i' → logprob: -6.384085178375244
    5. 'ci' → logprob: -6.509085178375244
    6. 'pair' → logprob: -7.259085178375244
    7. 'u' → logprob: -7.509085178375244
    8. 'k' → logprob: -8.509084701538086
    9. 'cluster' → logprob: -8.509084701538086
    10. '(ci' → logprob: -9.134084701538086

Token 714: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.06202784180641174
    2. ',' → logprob: -2.812027931213379
    3. ' ,' → logprob: -9.937027931213379
    4. ',x' → logprob: -11.812027931213379
    5. ',j' → logprob: -12.812027931213379
    6. 'y' → logprob: -13.687027931213379
    7. ',Y' → logprob: -16.062026977539062
    8. '       ' → logprob: -16.687026977539062
    9. ',i' → logprob: -16.812026977539062
    10. '   ' → logprob: -16.812026977539062

Token 715: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07026351243257523
    2. '),' → logprob: -2.695263624191284
    3. ' )' → logprob: -8.570263862609863
    4. ' ),' → logprob: -9.945263862609863
    5. '),(' → logprob: -10.445263862609863
    6. ',)' → logprob: -11.070263862609863
    7. 'in' → logprob: -11.195263862609863
    8. ' in' → logprob: -11.570263862609863
    9. '   ' → logprob: -11.695263862609863
    10. ',' → logprob: -12.445263862609863

Token 716: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013517236337065697
    2. 'd' → logprob: -4.513517379760742
    3. ' dist' → logprob: -6.013517379760742
    4. ' d' → logprob: -10.888517379760742
    5. 'distance' → logprob: -13.138517379760742
    6. 'val' → logprob: -16.263517379760742
    7. 'value' → logprob: -16.388517379760742
    8. '	dist' → logprob: -17.763517379760742
    9. '_dist' → logprob: -19.013517379760742
    10. '   ' → logprob: -19.013517379760742

Token 717: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029778027907013893
    2. 'in' → logprob: -3.529778003692627
    3. ' ' → logprob: -11.154778480529785
    4. '   ' → logprob: -13.154778480529785
    5. ')' → logprob: -13.279778480529785
    6. '  ' → logprob: -13.779778480529785
    7. '	in' → logprob: -13.779778480529785
    8. 's' → logprob: -14.404778480529785
    9. 'd' → logprob: -14.779778480529785
    10. 'i' → logprob: -14.967278480529785

Token 718: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.676292231422849e-05
    2. ' distances' → logprob: -11.000017166137695
    3. '_dist' → logprob: -17.500017166137695
    4. '.dist' → logprob: -18.375017166137695
    5. 'distance' → logprob: -18.500017166137695
    6. '(dist' → logprob: -18.875017166137695
    7. ' dist' → logprob: -19.375017166137695
    8. '	dist' → logprob: -19.750017166137695
    9. '-dist' → logprob: -20.625017166137695
    10. '   ' → logprob: -21.500017166137695

Token 719: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.005546193104237318
    2. 'items' → logprob: -6.0055460929870605
    3. '.iteritems' → logprob: -6.2555460929870605
    4. ' in' → logprob: -7.1305460929870605
    5. '       ' → logprob: -9.630546569824219
    6. 'in' → logprob: -9.630546569824219
    7. '   ' → logprob: -9.755546569824219
    8. ' items' → logprob: -9.755546569824219
    9. '.' → logprob: -9.755546569824219
    10. ' .' → logprob: -11.130546569824219

Token 720: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.015516313724219799
    2. '():' → logprob: -4.26551628112793
    3. '()' → logprob: -7.14051628112793
    4. '       ' → logprob: -8.01551628112793
    5. ':' → logprob: -9.39051628112793
    6. ':
' → logprob: -10.01551628112793
    7. '():
' → logprob: -10.01551628112793
    8. '           ' → logprob: -10.89051628112793
    9. '()):
' → logprob: -11.26551628112793
    10. '():

' → logprob: -11.76551628112793

Token 721: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000145137935760431
    2. '<|end|>' → logprob: -9.875144958496094
    3. '<|end|>' → logprob: -10.875144958496094
    4. '            
' → logprob: -11.250144958496094
    5. '       ' → logprob: -11.375144958496094
    6. '               ' → logprob: -11.750144958496094
    7. '          ' → logprob: -11.875144958496094
    8. ' if' → logprob: -12.000144958496094
    9. '	       ' → logprob: -12.250144958496094
    10. '            ' → logprob: -12.375144958496094

Token 722: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04416130855679512
    2. ' if' → logprob: -3.544161319732666
    3. '               ' → logprob: -4.544161319732666
    4. '            ' → logprob: -6.294161319732666
    5. 'if' (adapté à ' if') → logprob: -7.919161319732666
    6. '	       ' → logprob: -8.294160842895508
    7. '   ' → logprob: -8.294160842895508
    8. ' ' → logprob: -8.669160842895508
    9. '<|end|>' → logprob: -9.044160842895508
    10. ' ' → logprob: -9.169160842895508

Token 723: ' active' (ID: 6725)
  Prédit: ' active'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' active' → logprob: -0.47859394550323486
    2. ' d' → logprob: -1.4785939455032349
    3. 'd' → logprob: -2.2285938262939453
    4. 'active' → logprob: -3.3535938262939453
    5. ' x' → logprob: -5.603593826293945
    6. ' distances' → logprob: -6.103593826293945
    7. 'x' → logprob: -6.728593826293945
    8. '	active' → logprob: -7.603593826293945
    9. '(active' → logprob: -7.728593826293945
    10. 'dist' → logprob: -7.978593826293945

Token 724: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00021784115233458579
    2. 'and' → logprob: -9.12521743774414
    3. '[(' → logprob: -9.87521743774414
    4. ' and' → logprob: -10.50021743774414
    5. '[' → logprob: -11.12521743774414
    6. 'x' → logprob: -11.87521743774414
    7. ' [' → logprob: -12.62521743774414
    8. '(x' → logprob: -12.75021743774414
    9. '.get' → logprob: -14.37521743774414
    10. '       ' → logprob: -15.37521743774414

Token 725: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11335993558168411
    2. 'and' → logprob: -2.2383599281311035
    3. ']' → logprob: -7.6133599281311035
    4. '           ' → logprob: -11.988360404968262
    5. '==' → logprob: -12.238360404968262
    6. ' ' → logprob: -12.238360404968262
    7. ' ]' → logprob: -12.238360404968262
    8. '        ' → logprob: -12.363360404968262
    9. '>' → logprob: -12.738360404968262
    10. '       ' → logprob: -12.863360404968262

Token 726: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5231472849845886
    2. 'and' → logprob: -0.8981472849845886
    3. '           ' → logprob: -11.523147583007812
    4. ' ' → logprob: -12.773147583007812
    5. '            ' → logprob: -12.898147583007812
    6. '        ' → logprob: -13.273147583007812
    7. '    ' → logprob: -13.898147583007812
    8. '       ' → logprob: -14.148147583007812
    9. '          ' → logprob: -14.148147583007812
    10. '   ' → logprob: -14.398147583007812

Token 727: ' active' (ID: 6725)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'active' → logprob: -0.5759425759315491
    2. ' active' → logprob: -0.8259425759315491
    3. '           ' → logprob: -13.700942993164062
    4. '	active' → logprob: -13.950942993164062
    5. '   ' → logprob: -14.575942993164062
    6. '(active' → logprob: -15.575942993164062
    7. ' ' → logprob: -15.700942993164062
    8. 'y' → logprob: -15.950942993164062
    9. '.active' → logprob: -16.825942993164062
    10. ' ' → logprob: -17.075942993164062

Token 728: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0003598952607717365
    2. 'and' → logprob: -9.125359535217285
    3. ' and' → logprob: -9.250359535217285
    4. 'y' → logprob: -9.500359535217285
    5. '[x' → logprob: -10.125359535217285
    6. '[' → logprob: -11.125359535217285
    7. '(y' → logprob: -11.625359535217285
    8. '   ' → logprob: -12.875359535217285
    9. '```' → logprob: -13.500359535217285
    10. ' [' → logprob: -13.750359535217285

Token 729: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003644495503976941
    2. 'and' → logprob: -5.7536444664001465
    3. '               ' → logprob: -7.8786444664001465
    4. ']' → logprob: -10.253644943237305
    5. '           ' → logprob: -10.503644943237305
    6. ')' → logprob: -11.253644943237305
    7. '            ' → logprob: -13.128644943237305
    8. '              ' → logprob: -13.128644943237305
    9. ' ' → logprob: -13.253644943237305
    10. '                ' → logprob: -13.628644943237305

Token 730: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006188179831951857
    2. ' and' → logprob: -5.13118839263916
    3. 'and' → logprob: -8.63118839263916
    4. '           ' → logprob: -11.00618839263916
    5. ',' → logprob: -11.25618839263916
    6. '<|end|>' → logprob: -11.50618839263916
    7. ' token' → logprob: -12.38118839263916
    8. ' if' → logprob: -12.38118839263916
    9. '              ' → logprob: -12.50618839263916
    10. 'token' → logprob: -12.50618839263916

Token 731: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5408456921577454
    2. '               ' → logprob: -1.5408456325531006
    3. '                   ' → logprob: -1.6658456325531006
    4. 'if' (adapté à ' if') → logprob: -4.29084587097168
    5. ' ' → logprob: -8.54084587097168
    6. '                ' → logprob: -8.91584587097168
    7. '   ' → logprob: -8.91584587097168
    8. '                       ' → logprob: -9.41584587097168
    9. '           ' → logprob: -9.79084587097168
    10. '```' → logprob: -10.16584587097168

Token 732: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3869209289550781
    2. ' d' → logprob: -1.1369209289550781
    3. '                   ' → logprob: -10.386920928955078
    4. '               ' → logprob: -11.261920928955078
    5. '	d' → logprob: -13.261920928955078
    6. '                ' → logprob: -14.136920928955078
    7. '(d' → logprob: -14.761920928955078
    8. ' ' → logprob: -14.761920928955078
    9. '                       ' → logprob: -14.886920928955078
    10. '   ' → logprob: -14.886920928955078

Token 733: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2519526183605194
    2. '<' → logprob: -1.5019526481628418
    3. ' ' → logprob: -12.376952171325684
    4. '<int' → logprob: -13.001952171325684
    5. '[' → logprob: -13.251952171325684
    6. '<class' → logprob: -13.376952171325684
    7. '<|end|>' → logprob: -13.376952171325684
    8. ' <",' → logprob: -13.626952171325684
    9. '<size' → logprob: -13.751952171325684
    10. '<len' → logprob: -14.376952171325684

Token 734: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12692862749099731
    2. ' min' → logprob: -2.1269285678863525
    3. '           ' → logprob: -15.501928329467773
    4. '               ' → logprob: -15.876928329467773
    5. '	min' → logprob: -16.251928329467773
    6. '_min' → logprob: -17.001928329467773
    7. '                   ' → logprob: -17.626928329467773
    8. '(min' → logprob: -17.751928329467773
    9. '   ' → logprob: -18.001928329467773
    10. '=min' → logprob: -18.251928329467773

Token 735: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00014299227041192353
    2. 'dist' → logprob: -9.125143051147461
    3. 'min' → logprob: -10.875143051147461
    4. '_min' → logprob: -11.625143051147461
    5. 'd' → logprob: -13.250143051147461
    6. 'Dist' → logprob: -14.250143051147461
    7. '	dist' → logprob: -14.500143051147461
    8. '(min' → logprob: -14.750143051147461
    9. '   ' → logprob: -15.125143051147461
    10. '_DIST' → logprob: -15.625143051147461

Token 736: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2821652889251709
    2. ':
' → logprob: -1.907165288925171
    3. ':' → logprob: -2.907165288925171
    4. '               ' → logprob: -3.532165288925171
    5. '                       ' → logprob: -6.03216552734375
    6. ' :
' → logprob: -6.03216552734375
    7. '                ' → logprob: -6.40716552734375
    8. '                    ' → logprob: -6.53216552734375
    9. ' and' → logprob: -6.53216552734375
    10. ' :' → logprob: -7.15716552734375

Token 737: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015041301026940346
    2. ' min' → logprob: -5.140041351318359
    3. '                       ' → logprob: -5.765041351318359
    4. '                           ' → logprob: -6.265041351318359
    5. '               ' → logprob: -6.515041351318359
    6. '                               ' → logprob: -6.765041351318359
    7. 'min' → logprob: -7.265041351318359
    8. '                  ' → logprob: -8.76504135131836
    9. '                                   ' → logprob: -9.01504135131836
    10. '                    ' → logprob: -9.26504135131836

Token 738: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.016235534101724625
    2. ' min' → logprob: -4.1412353515625
    3. '                   ' → logprob: -9.0162353515625
    4. '                       ' → logprob: -9.5162353515625
    5. '               ' → logprob: -13.3912353515625
    6. '                    ' → logprob: -14.0162353515625
    7. '(min' → logprob: -14.0162353515625
    8. '	min' → logprob: -14.5162353515625
    9. '           ' → logprob: -14.6412353515625
    10. '                     ' → logprob: -14.7662353515625

Token 739: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00017302791820839047
    2. '_pair' → logprob: -9.00017261505127
    3. 'dist' → logprob: -10.12517261505127
    4. 'Dist' → logprob: -12.87517261505127
    5. '_distance' → logprob: -13.62517261505127
    6. '_' → logprob: -13.62517261505127
    7. '	dist' → logprob: -13.62517261505127
    8. '_pairs' → logprob: -13.87517261505127
    9. ' dist' → logprob: -14.62517261505127
    10. '_d' → logprob: -15.00017261505127

Token 740: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34940043091773987
    2. '=' → logprob: -1.2244004011154175
    3. '                       ' → logprob: -8.349400520324707
    4. '                   ' → logprob: -8.599400520324707
    5. '=min' → logprob: -8.724400520324707
    6. ',' → logprob: -9.224400520324707
    7. '=d' → logprob: -9.349400520324707
    8. '=x' → logprob: -10.724400520324707
    9. '               ' → logprob: -10.974400520324707
    10. '=
' → logprob: -10.974400520324707

Token 741: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02324547804892063
    2. ' d' → logprob: -3.7732455730438232
    3. '	d' → logprob: -18.523244857788086
    4. '_d' → logprob: -19.023244857788086
    5. '   ' → logprob: -19.273244857788086
    6. ' ' → logprob: -20.023244857788086
    7. '                   ' → logprob: -20.273244857788086
    8. 'dist' → logprob: -20.398244857788086
    9. '    ' → logprob: -21.523244857788086
    10. '(d' → logprob: -21.773244857788086

Token 742: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.657694418914616e-05
    2. ',' → logprob: -10.375056266784668
    3. '                  ' → logprob: -12.125056266784668
    4. '               ' → logprob: -12.125056266784668
    5. '				' → logprob: -12.625056266784668
    6. '           ' → logprob: -12.875056266784668
    7. '                    ' → logprob: -13.125056266784668
    8. '                    
' → logprob: -13.250056266784668
    9. '		           ' → logprob: -13.750056266784668
    10. '                       ' → logprob: -14.250056266784668

Token 743: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00011105302110081539
    2. '```' → logprob: -10.375110626220703
    3. '               ' → logprob: -10.500110626220703
    4. '                    ' → logprob: -11.250110626220703
    5. '           ' → logprob: -11.375110626220703
    6. '                  ' → logprob: -11.500110626220703
    7. '                       ' → logprob: -12.000110626220703
    8. '                    
' → logprob: -12.625110626220703
    9. '[' → logprob: -13.250110626220703
    10. '				' → logprob: -13.875110626220703

Token 744: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0025716139934957027
    2. ' min' → logprob: -6.0025715827941895
    3. '                   ' → logprob: -9.502572059631348
    4. '(min' → logprob: -11.002572059631348
    5. '[min' → logprob: -13.002572059631348
    6. '           ' → logprob: -14.252572059631348
    7. '   ' → logprob: -14.502572059631348
    8. '	min' → logprob: -14.752572059631348
    9. '               ' → logprob: -15.127572059631348
    10. '                  ' → logprob: -16.37757110595703

Token 745: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -5.407366916188039e-05
    2. 'pair' → logprob: -9.875054359436035
    3. ' pair' → logprob: -14.625054359436035
    4. 'Pair' → logprob: -14.750054359436035
    5. '   ' → logprob: -15.125054359436035
    6. '_pred' → logprob: -15.125054359436035
    7. '_pairs' → logprob: -15.125054359436035
    8. '_PAIR' → logprob: -15.875054359436035
    9. '(pair' → logprob: -16.62505340576172
    10. '
' → logprob: -16.62505340576172

Token 746: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012534727342426777
    2. ' =' → logprob: -4.3875346183776855
    3. '=(' → logprob: -11.012535095214844
    4. '=x' → logprob: -12.012535095214844
    5. '=
' → logprob: -13.387535095214844
    6. ' =(' → logprob: -14.887535095214844
    7. '(x' → logprob: -15.262535095214844
    8. '=

' → logprob: -16.137535095214844
    9. '=y' → logprob: -16.387535095214844
    10. '＝' → logprob: -16.512535095214844

Token 747: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001929228543303907
    2. ' (' → logprob: -6.25192928314209
    3. '(' → logprob: -15.37692928314209
    4. 'x' → logprob: -15.50192928314209
    5. '   ' → logprob: -16.376928329467773
    6. ' ' → logprob: -17.501928329467773
    7. '(y' → logprob: -18.751928329467773
    8. '  ' → logprob: -19.501928329467773
    9. '((' → logprob: -19.751928329467773
    10. '[x' → logprob: -19.751928329467773

Token 748: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.895480277715251e-06
    2. ' x' → logprob: -11.750008583068848
    3. '(x' → logprob: -13.875008583068848
    4. ')x' → logprob: -19.000009536743164
    5. '   ' → logprob: -20.625009536743164
    6. '	x' → logprob: -21.000009536743164
    7. ' (' → logprob: -21.375009536743164
    8. ',x' → logprob: -21.625009536743164
    9. '{x' → logprob: -21.750009536743164
    10. '_x' → logprob: -22.500009536743164

Token 749: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.3133442997932434
    2. ',' → logprob: -1.3133442401885986
    3. ' ,' → logprob: -9.68834400177002
    4. ',
' → logprob: -11.18834400177002
    5. 'y' → logprob: -12.81334400177002
    6. ',j' → logprob: -12.93834400177002
    7. ',x' → logprob: -14.43834400177002
    8. ' y' → logprob: -16.438344955444336
    9. '[' → logprob: -16.563344955444336
    10. '   ' → logprob: -16.688344955444336

Token 750: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25296589732170105
    2. ')
' → logprob: -1.5029659271240234
    3. '               ' → logprob: -7.127965927124023
    4. '       ' → logprob: -8.752965927124023
    5. '                   ' → logprob: -10.877965927124023
    6. ')
' → logprob: -11.002965927124023
    7. '           ' → logprob: -11.627965927124023
    8. ' )' → logprob: -11.627965927124023
    9. ' )
' → logprob: -12.127965927124023
    10. '   ' → logprob: -12.252965927124023

Token 751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014948610914871097
    2. 'return' → logprob: -7.376494884490967
    3. '               ' → logprob: -7.751494884490967
    4. ' return' → logprob: -8.251494407653809
    5. '   ' → logprob: -9.626494407653809
    6. '
' → logprob: -10.251494407653809
    7. '           ' → logprob: -11.251494407653809
    8. '                   ' → logprob: -11.376494407653809
    9. '        
' → logprob: -11.501494407653809
    10. '                    
' → logprob: -11.876494407653809

Token 752: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3226727247238159
    2. 'return' (adapté à ' return') → logprob: -1.322672724723816
    3. '   ' → logprob: -5.1976728439331055
    4. ' return' → logprob: -5.5726728439331055
    5. '	return' → logprob: -11.322672843933105
    6. 'if' → logprob: -11.447672843933105
    7. '           ' → logprob: -12.322672843933105
    8. '
' → logprob: -12.572672843933105
    9. ' ' → logprob: -13.322672843933105
    10. '               ' → logprob: -13.572672843933105

Token 753: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.005233763717114925
    2. ' min' → logprob: -5.2552337646484375
    3. '(min' → logprob: -17.255233764648438
    4. '   ' → logprob: -17.880233764648438
    5. '	min' → logprob: -18.880233764648438
    6. '[min' → logprob: -20.630233764648438
    7. '_min' → logprob: -20.755233764648438
    8. ' ' → logprob: -21.755233764648438
    9. 'm' → logprob: -21.755233764648438
    10. 'None' → logprob: -21.880233764648438

Token 754: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -6.706686690449715e-05
    2. 'pair' → logprob: -9.875066757202148
    3. 'Pair' → logprob: -11.500066757202148
    4. '_dist' → logprob: -12.625066757202148
    5. 'min' → logprob: -14.125066757202148
    6. '_pairs' → logprob: -15.250066757202148
    7. 'dist' → logprob: -15.500066757202148
    8. '_PAIR' → logprob: -16.00006675720215
    9. '(min' → logprob: -16.12506675720215
    10. '   ' → logprob: -16.37506675720215

Token 755: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 756: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0022224606946110725
    2. ' min' → logprob: -6.127222537994385
    3. 'dist' → logprob: -10.252222061157227
    4. 'max' → logprob: -13.877222061157227
    5. ' distances' → logprob: -14.502222061157227
    6. 'float' → logprob: -15.002222061157227
    7. '_min' → logprob: -16.877222061157227
    8. '(min' → logprob: -17.002222061157227
    9. 'distance' → logprob: -17.127222061157227
    10. '
' → logprob: -17.252222061157227

Token 757: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -3.392824874026701e-05
    2. '_pair' → logprob: -11.25003433227539
    3. 'Dist' → logprob: -11.50003433227539
    4. 'ist' → logprob: -12.62503433227539
    5. 'dist' → logprob: -12.62503433227539
    6. '_val' → logprob: -14.00003433227539
    7. '	dist' → logprob: -14.50003433227539
    8. '_diff' → logprob: -14.50003433227539
    9. '_' → logprob: -14.62503433227539
    10. '_distance' → logprob: -15.00003433227539

Token 758: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1705998331308365
    2. '<|end|>' → logprob: -2.545599937438965
    3. ')' → logprob: -3.545599937438965
    4. 'def' → logprob: -4.420599937438965
    5. '    
' → logprob: -4.920599937438965
    6. '<|end|>' → logprob: -5.170599937438965
    7. '       ' → logprob: -5.420599937438965
    8. 'tokens' → logprob: -6.045599937438965
    9. ' tokens' → logprob: -6.045599937438965
    10. 'Token' → logprob: -6.295599937438965

Token 759: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09589216858148575
    2. ' (' → logprob: -3.7208921909332275
    3. ' while' → logprob: -4.470891952514648
    4. '       ' → logprob: -4.845891952514648
    5. ',' → logprob: -4.970891952514648
    6. 'min' → logprob: -5.470891952514648
    7. '(p' → logprob: -5.595891952514648
    8. '(min' → logprob: -5.595891952514648
    9. 'pair' → logprob: -5.720891952514648
    10. 'while' → logprob: -5.720891952514648

Token 760: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19717669486999512
    2. 'while' → logprob: -2.322176694869995
    3. 'pair' → logprob: -2.822176694869995
    4. 'min' → logprob: -4.197176933288574
    5. ' while' → logprob: -5.322176933288574
    6. '(pair' → logprob: -7.322176933288574
    7. ' pair' → logprob: -8.322176933288574
    8. '(min' → logprob: -8.572176933288574
    9. 'merge' → logprob: -9.697176933288574
    10. 'next' → logprob: -9.697176933288574

Token 761: ' Stock' (ID: 16382)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0017240844899788499
    2. ' while' → logprob: -6.7517242431640625
    3. '   ' → logprob: -7.5017242431640625
    4. '#' → logprob: -13.626724243164062
    5. 'def' → logprob: -15.501724243164062
    6. 'for' → logprob: -15.876724243164062
    7. '	while' → logprob: -16.126724243164062
    8. 'cluster' → logprob: -17.751724243164062
    9. 'While' → logprob: -17.876724243164062
    10. '
' → logprob: -18.501724243164062

Token 762: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0018144060159102082
    2. 'age' → logprob: -6.751814365386963
    3. '   ' → logprob: -8.001814842224121
    4. 'e' → logprob: -9.376814842224121
    5. 'eur' → logprob: -9.626814842224121
    6. 'ed' → logprob: -9.751814842224121
    7. 'ages' → logprob: -10.251814842224121
    8. '#' → logprob: -11.126814842224121
    9. 'é' → logprob: -11.251814842224121
    10. '[' → logprob: -12.376814842224121

Token 763: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8527583479881287
    2. '   ' → logprob: -1.3527584075927734
    3. 'cluster' → logprob: -1.8527584075927734
    4. 'clusters' → logprob: -2.8527584075927734
    5. 'sizes' → logprob: -3.1027584075927734
    6. 'for' → logprob: -4.727758407592773
    7. 'merge' → logprob: -5.227758407592773
    8. 'connections' → logprob: -5.352758407592773
    9. 'active' → logprob: -5.352758407592773
    10. 'while' → logprob: -5.352758407592773

Token 764: ' noe' (ID: 49921)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5140100121498108
    2. 'degrees' → logprob: -1.764009952545166
    3. 'degree' → logprob: -2.889009952545166
    4. 'cluster' → logprob: -3.389009952545166
    5. 'clusters' → logprob: -3.514009952545166
    6. 'for' → logprob: -3.514009952545166
    7. 'connections' → logprob: -3.764009952545166
    8. 'sizes' → logprob: -4.514009952545166
    9. 'while' → logprob: -4.889009952545166
    10. 'nodes' → logprob: -5.139009952545166

Token 765: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.0008681101026013494
    2. 'ud' → logprob: -8.25086784362793
    3. '   ' → logprob: -8.75086784362793
    4. 'des' → logprob: -9.00086784362793
    5. 'ds' → logprob: -9.12586784362793
    6. 'e' → logprob: -9.87586784362793
    7. 'udes' → logprob: -10.12586784362793
    8. 'd' → logprob: -10.62586784362793
    9. 'n' → logprob: -11.00086784362793
    10. '```' → logprob: -11.12586784362793

Token 766: ' internes' (ID: 183434)
  Prédit: 'intern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intern' → logprob: -0.9397305250167847
    2. ' =' → logprob: -1.0647305250167847
    3. '   ' → logprob: -2.564730644226074
    4. 'clusters' → logprob: -3.189730644226074
    5. 'inter' → logprob: -3.439730644226074
    6. '=' → logprob: -3.564730644226074
    7. 'internal' → logprob: -4.064730644226074
    8. '=[]' → logprob: -4.439730644226074
    9. 'for' → logprob: -5.064730644226074
    10. 'fusion' → logprob: -5.189730644226074

Token 767: ' pour' (ID: 1930)
  Prédit: 'internal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'internal' → logprob: -0.6910498142242432
    2. '   ' → logprob: -1.0660498142242432
    3. 'intern' → logprob: -2.316049814224243
    4. ',' → logprob: -3.566049814224243
    5. 'inter' → logprob: -4.691049575805664
    6. ' =' → logprob: -4.691049575805664
    7. 'nodes' → logprob: -5.816049575805664
    8. ':' → logprob: -6.691049575805664
    9. '=' → logprob: -6.941049575805664
    10. ' internal' → logprob: -7.191049575805664

Token 768: ' calcul' (ID: 7559)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -1.7832691669464111
    2. ' deg' → logprob: -2.158269166946411
    3. 'degree' → logprob: -2.158269166946411
    4. 'i' → logprob: -2.408269166946411
    5. 'result' → logprob: -2.783269166946411
    6. ' i' → logprob: -3.158269166946411
    7. 'calcul' → logprob: -3.158269166946411
    8. ' node' → logprob: -3.158269166946411
    9. ' idx' → logprob: -3.283269166946411
    10. 'node' → logprob: -3.283269166946411

Token 769: ' des' (ID: 731)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.003143731504678726
    2. '#' → logprob: -6.378143787384033
    3. 'ation' → logprob: -7.628143787384033
    4. 'de' → logprob: -8.628143310546875
    5. 'ating' → logprob: -8.753143310546875
    6. 'ateur' → logprob: -9.378143310546875
    7. 'degree' → logprob: -9.753143310546875
    8. '_degree' → logprob: -9.753143310546875
    9. 'deg' → logprob: -9.878143310546875
    10. 'ate' → logprob: -10.003143310546875

Token 770: ' degrés' (ID: 195297)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1841244101524353
    2. 'degrees' → logprob: -1.80912446975708
    3. 'degree' → logprob: -6.43412446975708
    4. ' degrés' → logprob: -6.43412446975708
    5. ' degrees' → logprob: -7.55912446975708
    6. 'connections' → logprob: -8.434123992919922
    7. 'grades' → logprob: -9.434123992919922
    8. 'next' → logprob: -9.934123992919922
    9. 'conn' → logprob: -10.309123992919922
    10. 'deg' → logprob: -10.434123992919922

Token 771: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06913077086210251
    2. 'internal' → logprob: -2.8191306591033936
    3. 'intern' → logprob: -5.819130897521973
    4. 'inter' → logprob: -6.569130897521973
    5. ' internal' → logprob: -7.319130897521973
    6. ',' → logprob: -7.444130897521973
    7. '	internal' → logprob: -8.319130897521973
    8. '
' → logprob: -8.444130897521973
    9. ' internes' → logprob: -8.694130897521973
    10. '    
' → logprob: -8.694130897521973

Token 772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00312316813506186
    2. '
' → logprob: -6.1281232833862305
    3. 'internal' → logprob: -7.5031232833862305
    4. '    
' → logprob: -8.25312328338623
    5. 'nodes' → logprob: -10.25312328338623
    6. 'while' → logprob: -11.12812328338623
    7. '#' → logprob: -11.12812328338623
    8. 'inter' → logprob: -11.87812328338623
    9. 'switch' → logprob: -11.87812328338623
    10. '```' → logprob: -12.25312328338623

Token 773: ' internal' (ID: 8812)
  Prédit: 'internal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'internal' (adapté à ' internal') → logprob: -0.04848380759358406
    2. '   ' → logprob: -3.1734838485717773
    3. ' internal' → logprob: -5.923483848571777
    4. 'intern' → logprob: -6.048483848571777
    5. 'nodes' → logprob: -8.923483848571777
    6. 'inner' → logprob: -9.173483848571777
    7. 'switch' → logprob: -9.548483848571777
    8. 'inter' → logprob: -9.548483848571777
    9. ' internes' → logprob: -11.173483848571777
    10. '	internal' → logprob: -11.298483848571777

Token 774: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.00045247984235174954
    2. '=[]' → logprob: -8.500452041625977
    3. ' =' → logprob: -8.750452041625977
    4. '=' → logprob: -10.125452041625977
    5. 'Nodes' → logprob: -10.500452041625977
    6. 's' → logprob: -11.500452041625977
    7. 'nodes' → logprob: -12.500452041625977
    8. '[]' → logprob: -12.750452041625977
    9. '=[]
' → logprob: -12.875452041625977
    10. '_switch' → logprob: -13.875452041625977

Token 775: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048611659556627274
    2. ' =' → logprob: -3.048611640930176
    3. '=[]' → logprob: -10.673611640930176
    4. '[]' → logprob: -14.423611640930176
    5. '   ' → logprob: -15.548611640930176
    6. ',' → logprob: -15.923611640930176
    7. '=[]
' → logprob: -16.298612594604492
    8. ' ' → logprob: -16.548612594604492
    9. '=[]
' → logprob: -18.048612594604492
    10. '＝' → logprob: -18.173612594604492

Token 776: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.3451433409936726e-05
    2. ' []' → logprob: -10.875033378601074
    3. '[]
' → logprob: -11.875033378601074
    4. '{}' → logprob: -12.500033378601074
    5. '[]}' → logprob: -13.500033378601074
    6. '[]

' → logprob: -13.750033378601074
    7. '[],' → logprob: -14.375033378601074
    8. '[' → logprob: -14.625033378601074
    9. '[])' → logprob: -15.375033378601074
    10. '[]>' → logprob: -16.87503433227539

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004126011393964291
    2. 'while' → logprob: -6.004126071929932
    3. '
' → logprob: -6.629126071929932
    4. '    
' → logprob: -8.754125595092773
    5. ' while' → logprob: -8.754125595092773
    6. '```' → logprob: -12.004125595092773
    7. '	while' → logprob: -12.629125595092773
    8. 'While' → logprob: -14.504125595092773
    9. '        
' → logprob: -14.629125595092773
    10. 'def' → logprob: -14.629125595092773

Token 778: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.003301881952211261
    2. '   ' → logprob: -5.753302097320557
    3. ' while' → logprob: -9.003301620483398
    4. 'for' → logprob: -14.378301620483398
    5. '
' → logprob: -14.753301620483398
    6. '    
' → logprob: -16.2533016204834
    7. '	while' → logprob: -16.6283016204834
    8. '```' → logprob: -17.6283016204834
    9. 'While' → logprob: -18.8783016204834
    10. '  ' → logprob: -20.5033016204834

Token 779: ' Fusion' (ID: 70618)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02474719099700451
    2. '   ' → logprob: -4.024747371673584
    3. ' while' → logprob: -5.024747371673584
    4. '	while' → logprob: -13.899746894836426
    5. '
' → logprob: -14.024746894836426
    6. 'for' → logprob: -14.899746894836426
    7. 'While' → logprob: -16.399747848510742
    8. '```' → logprob: -17.649747848510742
    9. '  ' → logprob: -17.774747848510742
    10. '#' → logprob: -17.774747848510742

Token 780: 'ner' (ID: 1247)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019248701632022858
    2. ' while' → logprob: -4.3942484855651855
    3. 'while' → logprob: -5.3942484855651855
    4. ' =' → logprob: -7.2692484855651855
    5. ':' → logprob: -8.019248962402344
    6. '    
' → logprob: -8.144248962402344
    7. ',' → logprob: -8.894248962402344
    8. 'def' → logprob: -8.894248962402344
    9. ' (' → logprob: -8.894248962402344
    10. '	while' → logprob: -9.519248962402344

Token 781: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4146873354911804
    2. '()' → logprob: -1.5396873950958252
    3. 'while' → logprob: -3.914687395095825
    4. '():' → logprob: -3.914687395095825
    5. ' (' → logprob: -4.039687156677246
    6. 'def' → logprob: -4.414687156677246
    7. ':' → logprob: -4.789687156677246
    8. 'pair' → logprob: -5.414687156677246
    9. ' while' → logprob: -5.664687156677246
    10. ' pair' → logprob: -5.664687156677246

Token 782: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.07516379654407501
    2. ' à' → logprob: -3.3251638412475586
    3. 'à' → logprob: -3.7001638412475586
    4. '’à' → logprob: -4.700163841247559
    5. '=' → logprob: -7.075163841247559
    6. ''au' → logprob: -7.200163841247559
    7. '   ' → logprob: -7.575163841247559
    8. ' =' → logprob: -8.575163841247559
    9. 'au' → logprob: -8.825163841247559
    10. 'a' → logprob: -10.075163841247559

Token 783: ' ce' (ID: 2357)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16751183569431305
    2. ' len' → logprob: -2.0425119400024414
    3. 'sum' → logprob: -4.042511940002441
    4. ' sum' → logprob: -5.542511940002441
    5. '   ' → logprob: -6.667511940002441
    6. 'next' → logprob: -7.667511940002441
    7. ' next' → logprob: -8.292511940002441
    8. 'n' → logprob: -8.417511940002441
    9. '(len' → logprob: -8.792511940002441
    10. ' True' → logprob: -8.792511940002441

Token 784: ' qu' (ID: 474)
  Prédit: ' qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qu' → logprob: -0.14240266382694244
    2. 'qu' → logprob: -2.5174026489257812
    3. 'que' → logprob: -3.3924026489257812
    4. ' que' → logprob: -4.517402648925781
    5. 'n' → logprob: -6.767402648925781
    6. ' reste' → logprob: -6.892402648925781
    7. '   ' → logprob: -7.017402648925781
    8. ' n' → logprob: -7.142402648925781
    9. 'len' → logprob: -7.267402648925781
    10. ''il' → logprob: -7.892402648925781

Token 785: ''il' (ID: 14683)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.46544116735458374
    2. 'sum' → logprob: -1.0904412269592285
    3. ' len' → logprob: -4.0904412269592285
    4. 'len' → logprob: -4.7154412269592285
    5. ' active' → logprob: -4.9654412269592285
    6. '   ' → logprob: -6.8404412269592285
    7. ' ' → logprob: -7.0904412269592285
    8. ' la' → logprob: -8.46544075012207
    9. 'active' → logprob: -8.59044075012207
    10. '  ' → logprob: -8.59044075012207

Token 786: ' reste' (ID: 26769)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.18628180027008057
    2. ' sum' → logprob: -2.686281681060791
    3. ' be' → logprob: -3.436281681060791
    4. '   ' → logprob: -4.436281681060791
    5. ' reste' → logprob: -4.436281681060791
    6. 'len' → logprob: -4.561281681060791
    7. 'reste' → logprob: -4.561281681060791
    8. 'be' → logprob: -5.686281681060791
    9. ' n' → logprob: -6.061281681060791
    10. '.sum' → logprob: -6.186281681060791

Token 787: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7234072089195251
    2. '   ' → logprob: -1.97340726852417
    3. 'sum' → logprob: -2.09840726852417
    4. 'un' → logprob: -2.59840726852417
    5. 'exact' → logprob: -3.34840726852417
    6. ' un' → logprob: -3.34840726852417
    7. ' ' → logprob: -3.72340726852417
    8. ' True' → logprob: -4.34840726852417
    9. 'len' → logprob: -4.59840726852417
    10. 'active' → logprob: -4.72340726852417

Token 788: ' cluster' (ID: 19723)
  Prédit: ' seul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seul' → logprob: -0.4882848560810089
    2. ' cluster' → logprob: -0.9882848262786865
    3. ' espace' → logprob: -5.363285064697266
    4. 'se' → logprob: -5.863285064697266
    5. ' ' → logprob: -6.113285064697266
    6. 'cluster' → logprob: -6.863285064697266
    7. '   ' → logprob: -6.988285064697266
    8. ' seule' → logprob: -7.613285064697266
    9. ' unique' → logprob: -7.738285064697266
    10. 'e' → logprob: -8.238285064697266

Token 789: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004147491883486509
    2. 'while' → logprob: -5.629147529602051
    3. ' while' → logprob: -7.754147529602051
    4. ':' → logprob: -10.00414752960205
    5. '
' → logprob: -10.50414752960205
    6. '    
' → logprob: -11.12914752960205
    7. '	while' → logprob: -11.12914752960205
    8. '```' → logprob: -12.37914752960205
    9. ':
' → logprob: -13.12914752960205
    10. ' =' → logprob: -13.50414752960205

Token 790: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002236970467492938
    2. 'while' → logprob: -6.502236843109131
    3. ' while' → logprob: -7.252236843109131
    4. '
' → logprob: -11.252237319946289
    5. '    
' → logprob: -11.502237319946289
    6. '	while' → logprob: -13.377237319946289
    7. '<|end|>' → logprob: -15.252237319946289
    8. '```' → logprob: -15.627237319946289
    9. 'While' → logprob: -15.752237319946289
    10. '    ' → logprob: -16.12723731994629

Token 791: ' remaining' (ID: 15448)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11021058261394501
    2. 'while' → logprob: -2.360210657119751
    3. ' while' → logprob: -4.610210418701172
    4. '	while' → logprob: -12.610210418701172
    5. '    
' → logprob: -15.360210418701172
    6. 'for' → logprob: -15.360210418701172
    7. '
' → logprob: -15.860210418701172
    8. '  ' → logprob: -16.485210418701172
    9. '    ' → logprob: -16.485210418701172
    10. 'While' → logprob: -16.735210418701172

Token 792: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08870092779397964
    2. '_count' → logprob: -2.588701009750366
    3. '=' → logprob: -5.088700771331787
    4. '_clusters' → logprob: -6.213700771331787
    5. 'count' → logprob: -6.963700771331787
    6. '_cnt' → logprob: -8.213701248168945
    7. '   ' → logprob: -8.338701248168945
    8. '_counts' → logprob: -9.963701248168945
    9. 'clusters' → logprob: -10.963701248168945
    10. '_nb' → logprob: -11.088701248168945

Token 793: ' sum' (ID: 4215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.607399046421051
    2. 'sum' → logprob: -1.1073989868164062
    3. 'active' → logprob: -2.8573989868164062
    4. ' sum' → logprob: -3.4823989868164062
    5. ' n' → logprob: -3.7323989868164062
    6. ' active' → logprob: -4.607398986816406
    7. 'len' → logprob: -6.857398986816406
    8. '[' → logprob: -7.357398986816406
    9. '[n' → logprob: -7.732398986816406
    10. '   ' → logprob: -7.982398986816406

Token 794: '(active' (ID: 81123)
  Prédit: '(active'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(active' → logprob: -0.0044120787642896175
    2. 'active' → logprob: -5.6294121742248535
    3. '(' → logprob: -7.2544121742248535
    4. '([' → logprob: -9.504411697387695
    5. '1' → logprob: -11.879411697387695
    6. '(a' → logprob: -12.129411697387695
    7. '   ' → logprob: -12.504411697387695
    8. '(i' → logprob: -12.754411697387695
    9. '	active' → logprob: -12.754411697387695
    10. '(x' → logprob: -13.004411697387695

Token 795: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8736086487770081
    2. ')
' → logprob: -1.2486085891723633
    3. '())
' → logprob: -1.8736085891723633
    4. '())' → logprob: -1.9986085891723633
    5. '()' → logprob: -5.498608589172363
    6. '()
' → logprob: -6.748608589172363
    7. '   ' → logprob: -7.373608589172363
    8. '()>' → logprob: -9.123608589172363
    9. ')>' → logprob: -9.248608589172363
    10. ' )' → logprob: -9.248608589172363

Token 796: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001382497837767005
    2. '
' → logprob: -7.376382350921631
    3. 'while' → logprob: -7.501382350921631
    4. '    
' → logprob: -9.251382827758789
    5. ' while' → logprob: -9.251382827758789
    6. '```' → logprob: -12.876382827758789
    7. '	while' → logprob: -13.376382827758789
    8. ',' → logprob: -13.626382827758789
    9. ')' → logprob: -14.001382827758789
    10. '
' → logprob: -14.251382827758789

Token 797: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5785576701164246
    2. 'while' (adapté à ' while') → logprob: -0.8285576701164246
    3. ' while' → logprob: -5.95355749130249
    4. '	while' → logprob: -11.078557968139648
    5. '
' → logprob: -13.078557968139648
    6. '    
' → logprob: -15.453557968139648
    7. '```' → logprob: -15.703557968139648
    8. 'While' → logprob: -15.953557968139648
    9. '  ' → logprob: -16.82855796813965
    10. '       ' → logprob: -17.07855796813965

Token 798: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.1824386566877365
    2. ' remaining' → logprob: -1.807438611984253
    3. '   ' → logprob: -5.932438850402832
    4. ' ' → logprob: -10.932438850402832
    5. '  ' → logprob: -11.682438850402832
    6. '    ' → logprob: -12.182438850402832
    7. '.remaining' → logprob: -12.682438850402832
    8. '       ' → logprob: -14.057438850402832
    9. '_remaining' → logprob: -14.182438850402832
    10. '     ' → logprob: -14.557438850402832

Token 799: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20141790807247162
    2. ' >' → logprob: -1.7014179229736328
    3. '   ' → logprob: -12.826417922973633
    4. ' ' → logprob: -13.451417922973633
    5. '&gt' → logprob: -15.826417922973633
    6. '  ' → logprob: -16.076417922973633
    7. ' ' → logprob: -16.701417922973633
    8. '()>' → logprob: -16.951417922973633
    9. '    ' → logprob: -17.701417922973633
    10. ')>' → logprob: -17.951417922973633

Token 800: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '
' → logprob: -18.0
    5. '2' → logprob: -19.25
    6. '    ' → logprob: -19.75
    7. '１' → logprob: -19.75
    8. '  ' → logprob: -19.875
    9. '>' → logprob: -20.75
    10. '=' → logprob: -20.75

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -17.0
    4. '2' → logprob: -19.25
    5. '    ' → logprob: -20.25
    6. '
' → logprob: -20.375
    7. '１' → logprob: -20.375
    8. '  ' → logprob: -20.75
    9. '۱' → logprob: -21.375
    10. '     ' → logprob: -21.75

Token 802: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0772351622581482
    2. ':' → logprob: -2.952235221862793
    3. '       ' → logprob: -3.952235221862793
    4. '   ' → logprob: -6.202235221862793
    5. '):
' → logprob: -8.077235221862793
    6. ' :
' → logprob: -8.327235221862793
    7. ',' → logprob: -8.452235221862793
    8. ':

' → logprob: -10.452235221862793
    9. ' :' → logprob: -10.952235221862793
    10. ':
' → logprob: -11.202235221862793

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002570481738075614
    2. ' pair' → logprob: -9.00025749206543
    3. '   ' → logprob: -10.00025749206543
    4. 'pair' → logprob: -10.25025749206543
    5. '        
' → logprob: -11.62525749206543
    6. '```' → logprob: -11.62525749206543
    7. '(pair' → logprob: -12.00025749206543
    8. ' (' → logprob: -12.25025749206543
    9. '
' → logprob: -12.62525749206543
    10. 'pairs' → logprob: -13.25025749206543

Token 804: ' (' (ID: 350)
  Prédit: '(pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.5344409942626953
    2. '       ' → logprob: -1.4094409942626953
    3. '(min' → logprob: -2.5344409942626953
    4. '(x' → logprob: -3.1594409942626953
    5. '(p' → logprob: -3.5344409942626953
    6. ' (' → logprob: -4.784440994262695
    7. '(u' → logprob: -5.034440994262695
    8. '(cluster' → logprob: -6.409440994262695
    9. 'pair' → logprob: -7.659440994262695
    10. '(cl' → logprob: -7.784440994262695

Token 805: 'i' (ID: 72)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3086869716644287
    2. 'min' → logprob: -1.4336869716644287
    3. 'pair' → logprob: -4.683687210083008
    4. 'i' → logprob: -4.933687210083008
    5. '(x' → logprob: -5.058687210083008
    6. 'p' → logprob: -6.683687210083008
    7. '(min' → logprob: -6.933687210083008
    8. 'cluster' → logprob: -7.308687210083008
    9. '(i' → logprob: -8.308687210083008
    10. 'merge' → logprob: -8.808687210083008

Token 806: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.3887772262096405
    2. ',' → logprob: -1.138777256011963
    3. ' ,' → logprob: -6.388777256011963
    4. ',y' → logprob: -9.013776779174805
    5. ',n' → logprob: -9.888776779174805
    6. ',x' → logprob: -11.263776779174805
    7. ',i' → logprob: -11.388776779174805
    8. ',
' → logprob: -11.888776779174805
    9. '   ' → logprob: -12.888776779174805
    10. 'j' → logprob: -13.138776779174805

Token 807: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0019764534663408995
    2. ',' → logprob: -6.876976490020752
    3. ',),' → logprob: -8.126976013183594
    4. '),(' → logprob: -8.251976013183594
    5. '       ' → logprob: -8.626976013183594
    6. ' ),' → logprob: -9.126976013183594
    7. ')' → logprob: -9.751976013183594
    8. ',j' → logprob: -11.126976013183594
    9. '   ' → logprob: -11.751976013183594
    10. '),'' → logprob: -12.626976013183594

Token 808: ' md' (ID: 17280)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6452939510345459
    2. 'dist' → logprob: -1.020293951034546
    3. ' min' → logprob: -3.270293951034546
    4. 'min' → logprob: -3.270293951034546
    5. 'd' → logprob: -4.395294189453125
    6. ' d' → logprob: -4.770294189453125
    7. ' _' → logprob: -4.895294189453125
    8. '_' → logprob: -5.270294189453125
    9. '_dist' → logprob: -5.645294189453125
    10. 'distance' → logprob: -7.645294189453125

Token 809: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014182209968567
    2. ' =' → logprob: -1.701418161392212
    3. '   ' → logprob: -12.826417922973633
    4. '    ' → logprob: -14.076417922973633
    5. ' ' → logprob: -14.201417922973633
    6. '       ' → logprob: -15.826417922973633
    7. ',' → logprob: -16.326417922973633
    8. '  ' → logprob: -16.326417922973633
    9. '=in' → logprob: -16.576417922973633
    10. '        ' → logprob: -16.701417922973633

Token 810: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.02975442260503769
    2. ' find' → logprob: -3.529754400253296
    3. '(find' → logprob: -13.029754638671875
    4. '   ' → logprob: -13.654754638671875
    5. '	find' → logprob: -15.279754638671875
    6. '    ' → logprob: -16.279754638671875
    7. '       ' → logprob: -16.654754638671875
    8. ' ' → logprob: -16.904754638671875
    9. '=find' → logprob: -17.029754638671875
    10. ' (' → logprob: -17.529754638671875

Token 811: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.00015431294741574675
    2. 'min' → logprob: -8.875154495239258
    3. '((' → logprob: -11.875154495239258
    4. '(min' → logprob: -12.500154495239258
    5. '(i' → logprob: -12.750154495239258
    6. '_max' → logprob: -15.375154495239258
    7. ' min' → logprob: -15.750154495239258
    8. '(' → logprob: -16.000154495239258
    9. '_' → logprob: -16.625154495239258
    10. '
' → logprob: -16.875154495239258

Token 812: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -5.2762428822461516e-05
    2. 'pair' → logprob: -10.125052452087402
    3. '(i' → logprob: -12.625052452087402
    4. 'Pair' → logprob: -12.875052452087402
    5. '(' → logprob: -13.500052452087402
    6. '(pair' → logprob: -13.750052452087402
    7. '_pairs' → logprob: -14.125052452087402
    8. '_PAIR' → logprob: -14.250052452087402
    9. '_' → logprob: -14.875052452087402
    10. '_p' → logprob: -15.125052452087402

Token 813: '()
' (ID: 1234)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5546697378158569
    2. '
' → logprob: -1.554669737815857
    3. '       ' → logprob: -1.929669737815857
    4. '        
' → logprob: -2.9296698570251465
    5. '=' → logprob: -4.6796698570251465
    6. '<|end|>' → logprob: -6.8046698570251465
    7. ')' → logprob: -7.4296698570251465
    8. '  
' → logprob: -7.5546698570251465
    9. '
' → logprob: -7.5546698570251465
    10. '#' → logprob: -7.8046698570251465

Token 814: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024007966741919518
    2. '
' → logprob: -4.024007797241211
    3. '        
' → logprob: -5.399007797241211
    4. '    
' → logprob: -8.274007797241211
    5. '
' → logprob: -8.649007797241211
    6. '  
' → logprob: -8.649007797241211
    7. ' =' → logprob: -9.024007797241211
    8. ' new' → logprob: -9.149007797241211
    9. ' 
' → logprob: -9.274007797241211
    10. '#' → logprob: -9.649007797241211

Token 815: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9821472764015198
    2. ' new' → logprob: -1.232147216796875
    3. 'clusters' → logprob: -2.357147216796875
    4. 'new' → logprob: -2.607147216796875
    5. ' clusters' → logprob: -2.857147216796875
    6. '#' (adapté à ' #') → logprob: -3.107147216796875
    7. ' #' → logprob: -3.607147216796875
    8. '   ' → logprob: -5.107147216796875
    9. ' node' → logprob: -5.107147216796875
    10. ' active' → logprob: -5.232147216796875

Token 816: ' Cr' (ID: 5790)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9274685382843018
    2. ' new' → logprob: -1.5524685382843018
    3. 'clusters' → logprob: -2.1774685382843018
    4. 'node' → logprob: -2.4274685382843018
    5. ' node' → logprob: -2.8024685382843018
    6. '#' → logprob: -3.3024685382843018
    7. ' clusters' → logprob: -4.052468299865723
    8. 'left' → logprob: -4.302468299865723
    9. 'cluster' → logprob: -4.302468299865723
    10. '       ' → logprob: -4.677468299865723

Token 817: 'éer' (ID: 83012)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11643952131271362
    2. 'éer' → logprob: -2.3664395809173584
    3. 'ée' → logprob: -4.866439342498779
    4. 'eer' → logprob: -5.491439342498779
    5. 'é' → logprob: -5.616439342498779
    6. '#' → logprob: -8.741439819335938
    7. 'ee' → logprob: -9.491439819335938
    8. '   ' → logprob: -9.616439819335938
    9. 'eat' → logprob: -10.241439819335938
    10. 'uster' → logprob: -10.241439819335938

Token 818: ' noe' (ID: 49921)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7844621539115906
    2. ' un' → logprob: -1.0344622135162354
    3. '   ' → logprob: -2.7844622135162354
    4. ' Node' → logprob: -3.4094622135162354
    5. ' =' → logprob: -3.6594622135162354
    6. 'new' → logprob: -3.7844622135162354
    7. 'Node' → logprob: -3.7844622135162354
    8. '       ' → logprob: -4.909461975097656
    9. 'un' → logprob: -5.034461975097656
    10. '_node' → logprob: -6.659461975097656

Token 819: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.1928340047597885
    2. '       ' → logprob: -2.31783390045166
    3. 'e' → logprob: -4.31783390045166
    4. 'd' → logprob: -4.44283390045166
    5. '   ' → logprob: -4.44283390045166
    6. 'u' → logprob: -5.06783390045166
    7. 'w' → logprob: -5.44283390045166
    8. '         ' → logprob: -5.44283390045166
    9. '     ' → logprob: -5.56783390045166
    10. '        ' → logprob: -5.69283390045166

Token 820: ' interne' (ID: 59673)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02357422560453415
    2. '=' → logprob: -3.898574113845825
    3. 'inter' → logprob: -6.648574352264404
    4. ' interne' → logprob: -7.023574352264404
    5. '_inter' → logprob: -8.023573875427246
    6. '   ' → logprob: -8.773573875427246
    7. 'internal' → logprob: -9.273573875427246
    8. 'intern' → logprob: -9.898573875427246
    9. '_node' → logprob: -10.273573875427246
    10. '_internal' → logprob: -10.273573875427246

Token 821: ' représentant' (ID: 136122)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00724548427388072
    2. '=' → logprob: -5.0072455406188965
    3. '       ' → logprob: -7.6322455406188965
    4. ' new' → logprob: -10.507245063781738
    5. 'new' → logprob: -12.507245063781738
    6. ' node' → logprob: -13.257245063781738
    7. 'Node' → logprob: -13.632245063781738
    8. ' next' → logprob: -13.632245063781738
    9. '=node' → logprob: -13.632245063781738
    10. '           ' → logprob: -13.757245063781738

Token 822: ' la' (ID: 557)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3049260377883911
    2. ' un' → logprob: -1.8049260377883911
    3. 'le' → logprob: -2.6799259185791016
    4. ' une' → logprob: -4.804925918579102
    5. 'une' → logprob: -5.179925918579102
    6. '   ' → logprob: -5.304925918579102
    7. 'new' → logprob: -5.554925918579102
    8. 'l' → logprob: -6.554925918579102
    9. 'la' → logprob: -7.054925918579102
    10. ' la' → logprob: -7.304925918579102

Token 823: ' fusion' (ID: 48115)
  Prédit: 'fusion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fusion' → logprob: -1.1641643047332764
    2. 'new' → logprob: -1.2891643047332764
    3. 'cluster' → logprob: -1.9141643047332764
    4. 'merge' → logprob: -2.7891643047332764
    5. 'switch' → logprob: -2.9141643047332764
    6. ' new' → logprob: -3.5391643047332764
    7. ' fusion' → logprob: -3.7891643047332764
    8. 'Node' → logprob: -3.9141643047332764
    9. ' cluster' → logprob: -4.0391645431518555
    10. 'merged' → logprob: -4.2891645431518555

Token 824: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5599707365036011
    2. ' =' → logprob: -1.184970736503601
    3. '=' → logprob: -2.9349708557128906
    4. 'next' → logprob: -3.5599708557128906
    5. '(next' → logprob: -3.8099708557128906
    6. ' next' → logprob: -5.434970855712891
    7. 'new' → logprob: -5.684970855712891
    8. 'Node' → logprob: -6.184970855712891
    9. '(i' → logprob: -6.559970855712891
    10. ' new' → logprob: -6.934970855712891

Token 825: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21978053450584412
    2. ' new' → logprob: -2.094780445098877
    3. ' =' → logprob: -3.344780445098877
    4. 'new' → logprob: -3.844780445098877
    5. '        
' → logprob: -5.719780445098877
    6. ' node' → logprob: -5.844780445098877
    7. '=' → logprob: -6.094780445098877
    8. '
' → logprob: -6.844780445098877
    9. 'internal' → logprob: -6.969780445098877
    10. ' next' → logprob: -7.094780445098877

Token 826: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.5779155492782593
    2. ' new' → logprob: -0.8279155492782593
    3. 'node' → logprob: -6.952915668487549
    4. ' node' → logprob: -7.577915668487549
    5. ' merged' → logprob: -8.45291519165039
    6. 'merged' → logprob: -8.45291519165039
    7. 'parent' → logprob: -10.95291519165039
    8. 'u' → logprob: -11.32791519165039
    9. 'internal' → logprob: -11.45291519165039
    10. '   ' → logprob: -11.95291519165039

Token 827: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.014444372616708279
    2. 'Node' → logprob: -4.264444351196289
    3. '_Node' → logprob: -8.889444351196289
    4. 'node' → logprob: -9.264444351196289
    5. ' =' → logprob: -11.014444351196289
    6. '_cluster' → logprob: -11.264444351196289
    7. ' Node' → logprob: -11.514444351196289
    8. '_' → logprob: -12.139444351196289
    9. '=' → logprob: -13.264444351196289
    10. 'Cluster' → logprob: -14.889444351196289

Token 828: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868727385997772
    2. ' =' → logprob: -1.1368727684020996
    3. '   ' → logprob: -14.136872291564941
    4. ' ' → logprob: -14.386872291564941
    5. '=
' → logprob: -16.511873245239258
    6. 'Node' → logprob: -16.511873245239258
    7. '    ' → logprob: -16.636873245239258
    8. '  ' → logprob: -17.011873245239258
    9. '=node' → logprob: -17.261873245239258
    10. '=

' → logprob: -18.074373245239258

Token 829: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.001170225441455841
    2. ' Node' → logprob: -6.7511701583862305
    3. '	Node' → logprob: -19.626171112060547
    4. '   ' → logprob: -19.751171112060547
    5. ' ' → logprob: -21.501171112060547
    6. '(Node' → logprob: -23.126171112060547
    7. '_Node' → logprob: -23.126171112060547
    8. '_node' → logprob: -23.501171112060547
    9. '.Node' → logprob: -24.251171112060547
    10. '  ' → logprob: -24.251171112060547

Token 830: '(next' (ID: 28757)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.25284454226493835
    2. '(next' → logprob: -1.5028445720672607
    3. ' next' → logprob: -7.002844333648682
    4. '[next' → logprob: -12.50284481048584
    5. ',next' → logprob: -14.50284481048584
    6. '   ' → logprob: -14.75284481048584
    7. '	next' → logprob: -14.87784481048584
    8. '       ' → logprob: -15.12784481048584
    9. '(
' → logprob: -15.50284481048584
    10. '.next' → logprob: -15.75284481048584

Token 831: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0006795499939471483
    2. '_' → logprob: -8.125679969787598
    3. '_token' → logprob: -8.625679969787598
    4. ' _' → logprob: -9.500679969787598
    5. '_NODE' → logprob: -10.250679969787598
    6. '_Node' → logprob: -10.250679969787598
    7. '   ' → logprob: -10.875679969787598
    8. '_id' → logprob: -12.125679969787598
    9. ''_' → logprob: -12.375679969787598
    10. '('_' → logprob: -12.625679969787598

Token 832: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00040540905320085585
    2. 'id' → logprob: -7.875405311584473
    3. '   ' → logprob: -11.500405311584473
    4. '_idx' → logprob: -12.250405311584473
    5. ')' → logprob: -13.625405311584473
    6. 's' → logprob: -13.750405311584473
    7. '```' → logprob: -14.000405311584473
    8. ' _' → logprob: -14.125405311584473
    9. '_' → logprob: -14.375405311584473
    10. 'Id' → logprob: -14.500405311584473

Token 833: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016398312291130424
    2. ' ,' → logprob: -6.7516398429870605
    3. ',i' → logprob: -7.8766398429870605
    4. ',j' → logprob: -9.876639366149902
    5. '   ' → logprob: -11.251639366149902
    6. ')' → logprob: -11.876639366149902
    7. '       ' → logprob: -12.251639366149902
    8. '           ' → logprob: -12.751639366149902
    9. ',None' → logprob: -13.126639366149902
    10. ',new' → logprob: -13.626639366149902

Token 834: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.03397127240896225
    2. ' clusters' → logprob: -3.5339713096618652
    3. 'left' → logprob: -5.783971309661865
    4. ' left' → logprob: -7.783971309661865
    5. '   ' → logprob: -8.158970832824707
    6. '           ' → logprob: -8.283970832824707
    7. '       ' → logprob: -9.783970832824707
    8. 'cl' → logprob: -10.033970832824707
    9. '               ' → logprob: -10.658970832824707
    10. ' ' → logprob: -11.658970832824707

Token 835: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.824579784530215e-05
    2. 'i' → logprob: -10.1250581741333
    3. '[j' → logprob: -11.7500581741333
    4. '[' → logprob: -12.5000581741333
    5. ' [' → logprob: -13.2500581741333
    6. ')[' → logprob: -13.6250581741333
    7. ',i' → logprob: -14.1250581741333
    8. '[
' → logprob: -14.8750581741333
    9. '(i' → logprob: -15.0000581741333
    10. ')' → logprob: -15.1250581741333

Token 836: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018528107553720474
    2. ' ,' → logprob: -4.143527984619141
    3. ',j' → logprob: -6.518527984619141
    4. '   ' → logprob: -8.01852798461914
    5. '],' → logprob: -8.26852798461914
    6. '),' → logprob: -8.76852798461914
    7. ',i' → logprob: -9.01852798461914
    8. ',new' → logprob: -10.51852798461914
    9. ' ' → logprob: -10.64352798461914
    10. '  ' → logprob: -11.14352798461914

Token 837: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.02325887233018875
    2. ' clusters' → logprob: -3.773258924484253
    3. 'cluster' → logprob: -12.023259162902832
    4. '           ' → logprob: -13.023259162902832
    5. '               ' → logprob: -13.773259162902832
    6. '   ' → logprob: -14.023259162902832
    7. '_clusters' → logprob: -14.148259162902832
    8. '                   ' → logprob: -14.773259162902832
    9. '       ' → logprob: -14.898259162902832
    10. 'cl' → logprob: -15.148259162902832

Token 838: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0003087678924202919
    2. 'j' → logprob: -8.125308990478516
    3. ',j' → logprob: -12.250308990478516
    4. ',' → logprob: -12.875308990478516
    5. '   ' → logprob: -13.375308990478516
    6. ' j' → logprob: -13.750308990478516
    7. '[i' → logprob: -14.375308990478516
    8. ' [' → logprob: -14.375308990478516
    9. '	j' → logprob: -15.000308990478516
    10. '[
' → logprob: -15.250308990478516

Token 839: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018278473988175392
    2. ')
' → logprob: -4.0182785987854
    3. '       ' → logprob: -9.393278121948242
    4. ' )' → logprob: -10.893278121948242
    5. ',' → logprob: -11.643278121948242
    6. '),' → logprob: -12.268278121948242
    7. ')
' → logprob: -12.643278121948242
    8. '   ' → logprob: -12.893278121948242
    9. '))' → logprob: -13.643278121948242
    10. ')

' → logprob: -13.643278121948242

Token 840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01347830519080162
    2. ' next' → logprob: -5.2634782791137695
    3. 'next' → logprob: -5.6384782791137695
    4. '        
' → logprob: -6.5134782791137695
    5. '[next' → logprob: -6.8884782791137695
    6. '   ' → logprob: -7.3884782791137695
    7. 'new' → logprob: -8.26347827911377
    8. '	next' → logprob: -8.38847827911377
    9. ' new' → logprob: -9.01347827911377
    10. '           ' → logprob: -9.13847827911377

Token 841: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7113282680511475
    2. ' next' → logprob: -0.9613282680511475
    3. 'new' (adapté à ' new') → logprob: -2.8363282680511475
    4. 'next' → logprob: -3.0863282680511475
    5. '       ' → logprob: -3.8363282680511475
    6. ' clusters' → logprob: -8.211328506469727
    7. '	next' → logprob: -8.336328506469727
    8. 'clusters' → logprob: -9.711328506469727
    9. '	new' → logprob: -10.086328506469727
    10. '   ' → logprob: -10.336328506469727

Token 842: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -4.394135612528771e-05
    2. 'node' → logprob: -10.375043869018555
    3. '_nodes' → logprob: -12.000043869018555
    4. '_token' → logprob: -13.625043869018555
    5. 'Node' → logprob: -13.750043869018555
    6. '_NODE' → logprob: -13.875043869018555
    7. '_clusters' → logprob: -14.625043869018555
    8. '_code' → logprob: -14.875043869018555
    9. '_user' → logprob: -15.250043869018555
    10. '_' → logprob: -15.500043869018555

Token 843: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.008384434506297112
    2. '.degree' → logprob: -4.8833842277526855
    3. '.' → logprob: -7.3833842277526855
    4. ' .' → logprob: -9.008384704589844
    5. '.left' → logprob: -11.258384704589844
    6. 'size' → logprob: -12.258384704589844
    7. '.depth' → logprob: -12.633384704589844
    8. '   ' → logprob: -13.008384704589844
    9. '.s' → logprob: -13.383384704589844
    10. 'degree' → logprob: -13.633384704589844

Token 844: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931567788124084
    2. ' =' → logprob: -0.6931567788124084
    3. ' +=' → logprob: -11.943157196044922
    4. '+=' → logprob: -13.443157196044922
    5. ' ' → logprob: -14.693157196044922
    6. '    ' → logprob: -14.943157196044922
    7. '=i' → logprob: -15.693157196044922
    8. '   ' → logprob: -15.818157196044922
    9. '=new' → logprob: -16.068157196044922
    10. '=len' → logprob: -16.318157196044922

Token 845: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.00015872348740231246
    2. ' clusters' → logprob: -8.750158309936523
    3. 'cl' → logprob: -15.375158309936523
    4. 'cluster' → logprob: -19.250158309936523
    5. 'nodes' → logprob: -19.750158309936523
    6. '   ' → logprob: -19.875158309936523
    7. ' ' → logprob: -20.500158309936523
    8. 'c' → logprob: -20.750158309936523
    9. '_clusters' → logprob: -21.000158309936523
    10. 'clubs' → logprob: -22.750158309936523

Token 846: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009903880767524242
    2. 'i' → logprob: -4.634903907775879
    3. '[' → logprob: -9.759903907775879
    4. '[new' → logprob: -10.384903907775879
    5. '[j' → logprob: -11.009903907775879
    6. '[next' → logprob: -11.009903907775879
    7. ' i' → logprob: -11.134903907775879
    8. 'new' → logprob: -12.134903907775879
    9. ' [' → logprob: -13.509903907775879
    10. '```' → logprob: -13.884903907775879

Token 847: '].' (ID: 1651)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.2553154230117798
    2. '].' → logprob: -1.5053154230117798
    3. ').' → logprob: -6.50531530380249
    4. '.' → logprob: -8.130315780639648
    5. '   ' → logprob: -8.255315780639648
    6. ' .' → logprob: -8.505315780639648
    7. '.idx' → logprob: -8.505315780639648
    8. '.next' → logprob: -8.755315780639648
    9. ']' → logprob: -9.130315780639648
    10. '[i' → logprob: -9.505315780639648

Token 848: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -1.3663626305060461e-05
    2. ' size' → logprob: -11.25001335144043
    3. ' ' → logprob: -15.00001335144043
    4. '   ' → logprob: -16.00001335144043
    5. '.size' → logprob: -16.25001335144043
    6. '	size' → logprob: -17.25001335144043
    7. '  ' → logprob: -17.37501335144043
    8. '```' → logprob: -18.00001335144043
    9. '(size' → logprob: -18.37501335144043
    10. '
' → logprob: -18.62501335144043

Token 849: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25194162130355835
    2. '+' → logprob: -1.5019416809082031
    3. '+j' → logprob: -11.501941680908203
    4. '+i' → logprob: -14.876941680908203
    5. '+self' → logprob: -15.001941680908203
    6. ' ' → logprob: -15.126941680908203
    7. ' plus' → logprob: -15.251941680908203
    8. ' ' → logprob: -15.501941680908203
    9. '＋' → logprob: -15.876941680908203
    10. '+
' → logprob: -15.876941680908203

Token 850: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.0297548845410347
    2. ' clusters' → logprob: -3.529754877090454
    3. 'cl' → logprob: -13.279754638671875
    4. '   ' → logprob: -13.779754638671875
    5. 'cluster' → logprob: -13.904754638671875
    6. '       ' → logprob: -15.404754638671875
    7. '           ' → logprob: -15.404754638671875
    8. '_clusters' → logprob: -16.904754638671875
    9. ' ' → logprob: -17.154754638671875
    10. 'Clusters' → logprob: -17.279754638671875

Token 851: '[j' (ID: 7895)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03826272487640381
    2. '[j' → logprob: -3.2882628440856934
    3. 'clusters' → logprob: -8.538262367248535
    4. ' j' → logprob: -10.788262367248535
    5. ' clusters' → logprob: -12.913262367248535
    6. '   ' → logprob: -13.913262367248535
    7. '	j' → logprob: -14.538262367248535
    8. 'Clusters' → logprob: -15.538262367248535
    9. '```' → logprob: -15.663262367248535
    10. '_clusters' → logprob: -16.28826332092285

Token 852: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0001830410328693688
    2. '.size' → logprob: -9.25018310546875
    3. '.' → logprob: -10.50018310546875
    4. ' ].' → logprob: -10.75018310546875
    5. ']' → logprob: -11.75018310546875
    6. ').' → logprob: -12.00018310546875
    7. ' .' → logprob: -12.00018310546875
    8. '[' → logprob: -12.12518310546875
    9. '}.' → logprob: -12.62518310546875
    10. '   ' → logprob: -13.25018310546875

Token 853: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -1.2664456789934775e-06
    2. ' size' → logprob: -13.625000953674316
    3. '	size' → logprob: -19.375001907348633
    4. '.size' → logprob: -19.750001907348633
    5. ' ' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.500001907348633
    7. '(size' → logprob: -21.125001907348633
    8. '_size' → logprob: -21.750001907348633
    9. 'Size' → logprob: -22.000001907348633
    10. '  ' → logprob: -22.625001907348633

Token 854: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014327805489301682
    2. '        
' → logprob: -4.8893280029296875
    3. '
' → logprob: -5.5143280029296875
    4. ' new' → logprob: -7.1393280029296875
    5. '<|end|>' → logprob: -7.7643280029296875
    6. 'new' → logprob: -8.139328002929688
    7. '    
' → logprob: -8.264328002929688
    8. '  
' → logprob: -8.639328002929688
    9. ' 
' → logprob: -8.639328002929688
    10. '   ' → logprob: -8.889328002929688

Token 855: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030500371009111404
    2. ' new' → logprob: -4.405500411987305
    3. 'new' → logprob: -5.030500411987305
    4. '
' → logprob: -5.530500411987305
    5. '   ' → logprob: -6.405500411987305
    6. ' next' → logprob: -6.530500411987305
    7. '<|end|>' → logprob: -6.530500411987305
    8. '        
' → logprob: -6.780500411987305
    9. 'next' → logprob: -7.780500411987305
    10. ' 
' → logprob: -7.905500411987305

Token 856: ' internal' (ID: 8812)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.0340656042099
    2. '       ' → logprob: -1.1590656042099
    3. 'clusters' → logprob: -1.7840656042099
    4. ' new' → logprob: -2.5340657234191895
    5. 'next' → logprob: -2.7840657234191895
    6. ' clusters' → logprob: -4.7840657234191895
    7. ' next' → logprob: -4.7840657234191895
    8. '#' → logprob: -5.7840657234191895
    9. '   ' → logprob: -6.7840657234191895
    10. 'degrees' → logprob: -8.409065246582031

Token 857: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -2.7252845029579476e-05
    2. 'nodes' → logprob: -11.000027656555176
    3. '_node' → logprob: -12.250027656555176
    4. 'Nodes' → logprob: -12.625027656555176
    5. '_tokens' → logprob: -13.750027656555176
    6. '_' → logprob: -15.875027656555176
    7. '   ' → logprob: -16.00002670288086
    8. '```' → logprob: -16.12502670288086
    9. '[' → logprob: -16.25002670288086
    10. '_clusters' → logprob: -16.37502670288086

Token 858: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.2961512513575144e-05
    2. '.' → logprob: -10.750022888183594
    3. 'append' → logprob: -14.000022888183594
    4. '.app' → logprob: -14.625022888183594
    5. ' .' → logprob: -16.000022888183594
    6. '.ap' → logprob: -16.875022888183594
    7. '.extend' → logprob: -17.375022888183594
    8. '_append' → logprob: -17.750022888183594
    9. '.insert' → logprob: -18.875022888183594
    10. '.Append' → logprob: -19.250022888183594

Token 859: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -2.0219828002154827e-05
    2. '(' → logprob: -11.250020027160645
    3. 'new' → logprob: -11.875020027160645
    4. '(next' → logprob: -16.62502098083496
    5. '((' → logprob: -17.75002098083496
    6. ' (' → logprob: -18.37502098083496
    7. ' new' → logprob: -18.87502098083496
    8. ')new' → logprob: -19.50002098083496
    9. '(ne' → logprob: -20.25002098083496
    10. '(
' → logprob: -20.25002098083496

Token 860: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.5941604690160602e-05
    2. 'node' → logprob: -11.375025749206543
    3. '_' → logprob: -12.250025749206543
    4. '_token' → logprob: -12.375025749206543
    5. '_nodes' → logprob: -13.250025749206543
    6. 'Node' → logprob: -13.500025749206543
    7. ')' → logprob: -14.125025749206543
    8. 'new' → logprob: -15.000025749206543
    9. '_NODE' → logprob: -15.125025749206543
    10. '_code' → logprob: -15.625025749206543

Token 861: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4401598870754242
    2. '       ' → logprob: -1.0651599168777466
    3. '
' → logprob: -5.315159797668457
    4. '<|end|>' → logprob: -5.440159797668457
    5. '        
' → logprob: -6.815159797668457
    6. ')
' → logprob: -7.440159797668457
    7. '  
' → logprob: -10.065159797668457
    8. '        ' → logprob: -10.190159797668457
    9. ',' → logprob: -10.315159797668457
    10. '#' → logprob: -10.440159797668457

Token 862: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4789780378341675
    2. '<|end|>' → logprob: -1.1039780378341675
    3. '        
' → logprob: -3.728978157043457
    4. '
' → logprob: -4.978978157043457
    5. ' 
' → logprob: -5.478978157043457
    6. ' next' → logprob: -5.853978157043457
    7. 'next' → logprob: -6.478978157043457
    8. '[next' → logprob: -6.478978157043457
    9. '<|end|>' → logprob: -6.853978157043457
    10. '        ' → logprob: -6.978978157043457

Token 863: ' clusters' (ID: 51310)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.535711407661438
    2. 'clusters' (adapté à ' clusters') → logprob: -1.160711407661438
    3. '#' → logprob: -2.9107112884521484
    4. ' clusters' → logprob: -4.160711288452148
    5. 'next' → logprob: -4.785711288452148
    6. 'active' → logprob: -4.910711288452148
    7. '        
' → logprob: -5.035711288452148
    8. ' active' → logprob: -6.160711288452148
    9. ' next' → logprob: -6.410711288452148
    10. '   ' → logprob: -7.285711288452148

Token 864: '.append' (ID: 3709)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.16506889462471008
    2. '.append' → logprob: -1.9150688648223877
    3. '[new' → logprob: -5.540069103240967
    4. '[i' → logprob: -7.165069103240967
    5. '.insert' → logprob: -10.165068626403809
    6. '[' → logprob: -10.290068626403809
    7. '.extend' → logprob: -10.540068626403809
    8. '[j' → logprob: -10.540068626403809
    9. '.__' → logprob: -12.165068626403809
    10. '[in' → logprob: -14.790068626403809

Token 865: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -3.7697225252486533e-06
    2. 'new' → logprob: -12.500003814697266
    3. ' new' → logprob: -19.875003814697266
    4. '(' → logprob: -19.875003814697266
    5. '(next' → logprob: -20.750003814697266
    6. ')new' → logprob: -21.125003814697266
    7. ',new' → logprob: -22.000003814697266
    8. '(
' → logprob: -22.250003814697266
    9. '[new' → logprob: -22.625003814697266
    10. '=new' → logprob: -22.750003814697266

Token 866: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.703443770878948e-06
    2. 'node' → logprob: -12.000007629394531
    3. 'new' → logprob: -14.000007629394531
    4. 'Node' → logprob: -14.750007629394531
    5. '_token' → logprob: -16.62500762939453
    6. ' node' → logprob: -17.00000762939453
    7. '_NODE' → logprob: -17.87500762939453
    8. ' new' → logprob: -18.25000762939453
    9. '_' → logprob: -18.25000762939453
    10. ')' → logprob: -18.37500762939453

Token 867: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20343880355358124
    2. ')' → logprob: -2.9534387588500977
    3. '
' → logprob: -2.9534387588500977
    4. '        
' → logprob: -2.9534387588500977
    5. '<|end|>' → logprob: -4.328438758850098
    6. ')
' → logprob: -6.078438758850098
    7. ' 
' → logprob: -6.078438758850098
    8. '		
' → logprob: -6.328438758850098
    9. ',' → logprob: -6.453438758850098
    10. '       
' → logprob: -7.578438758850098

Token 868: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04442964121699333
    2. 'active' → logprob: -3.9194295406341553
    3. '        
' → logprob: -5.044429779052734
    4. 'next' → logprob: -5.419429779052734
    5. '	active' → logprob: -5.794429779052734
    6. ' active' → logprob: -6.044429779052734
    7. 'new' → logprob: -6.669429779052734
    8. ' distances' → logprob: -6.794429779052734
    9. 'clusters' → logprob: -6.794429779052734
    10. '#' → logprob: -7.419429779052734

Token 869: ' active' (ID: 6725)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'active' (adapté à ' active') → logprob: -0.04002304747700691
    2. 'next' → logprob: -3.4150230884552
    3. '#' → logprob: -6.040022850036621
    4. ' active' → logprob: -6.290022850036621
    5. 'new' → logprob: -7.165022850036621
    6. 'clusters' → logprob: -8.165022850036621
    7. ' next' → logprob: -8.290022850036621
    8. '   ' → logprob: -8.415022850036621
    9. 'dist' → logprob: -8.415022850036621
    10. '       ' → logprob: -9.040022850036621

Token 870: '.append' (ID: 3709)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.460291767027229e-05
    2. '[' → logprob: -9.500094413757324
    3. '[j' → logprob: -11.250094413757324
    4. '[min' → logprob: -12.625094413757324
    5. ' =' → logprob: -13.500094413757324
    6. '[next' → logprob: -14.375094413757324
    7. '=' → logprob: -15.125094413757324
    8. 'clusters' → logprob: -15.875094413757324
    9. '[:]' → logprob: -15.875094413757324
    10. '[new' → logprob: -16.00009536743164

Token 871: '(True' (ID: 55978)
  Prédit: '(True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.3133174777030945
    2. '(False' → logprob: -1.3133175373077393
    3. 'True' → logprob: -10.43831729888916
    4. 'False' → logprob: -10.56331729888916
    5. '(' → logprob: -14.43831729888916
    6. '(len' → logprob: -17.313318252563477
    7. '(F' → logprob: -17.313318252563477
    8. ' True' → logprob: -18.063318252563477
    9. ' False' → logprob: -18.188318252563477
    10. '(
' → logprob: -18.438318252563477

Token 872: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20267878472805023
    2. ')' → logprob: -1.8276787996292114
    3. '       ' → logprob: -3.827678680419922
    4. ')

' → logprob: -7.202678680419922
    5. ')
' → logprob: -9.952678680419922
    6. '   ' → logprob: -10.202678680419922
    7. '
' → logprob: -10.827678680419922
    8. '        
' → logprob: -10.952678680419922
    9. '	' → logprob: -11.202678680419922
    10. ' ' → logprob: -12.327678680419922

Token 873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005964580457657576
    2. '#' → logprob: -5.880964756011963
    3. '        
' → logprob: -7.005964756011963
    4. 'active' → logprob: -7.005964756011963
    5. 'next' → logprob: -7.505964756011963
    6. ' next' → logprob: -8.880964279174805
    7. ' active' → logprob: -9.130964279174805
    8. '	active' → logprob: -9.380964279174805
    9. ' distances' → logprob: -9.755964279174805
    10. 'for' → logprob: -10.005964279174805

Token 874: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.08086280524730682
    2. 'active' → logprob: -2.8308627605438232
    3. 'dist' → logprob: -5.205862998962402
    4. '       ' → logprob: -5.330862998962402
    5. 'for' → logprob: -5.705862998962402
    6. 'next' → logprob: -6.080862998962402
    7. ' #' → logprob: -7.205862998962402
    8. 'clusters' → logprob: -7.205862998962402
    9. '   ' → logprob: -7.330862998962402
    10. ' active' → logprob: -8.705862998962402

Token 875: ' Dés' (ID: 151664)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'active' → logprob: -0.024861276149749756
    2. '#' → logprob: -3.7748613357543945
    3. '       ' → logprob: -6.7748613357543945
    4. ' active' → logprob: -8.524861335754395
    5. '   ' → logprob: -9.024861335754395
    6. 'for' → logprob: -9.524861335754395
    7. 'dist' → logprob: -10.899861335754395
    8. '	active' → logprob: -10.899861335754395
    9. 'new' → logprob: -11.274861335754395
    10. 'distance' → logprob: -11.899861335754395

Token 876: 'act' (ID: 588)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'active' → logprob: -0.01383389625698328
    2. 'act' → logprob: -4.388833999633789
    3. 'activ' → logprob: -7.263833999633789
    4. 'activation' → logprob: -8.138833999633789
    5. 'activate' → logprob: -8.263833999633789
    6. 'activated' → logprob: -10.263833999633789
    7. 'acti' → logprob: -11.638833999633789
    8. '_active' → logprob: -11.763833999633789
    9. '	active' → logprob: -12.013833999633789
    10. 'ormais' → logprob: -12.513833999633789

Token 877: 'iver' (ID: 1788)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.6890112161636353
    2. 'ver' → logprob: -1.4390112161636353
    3. 'iver' → logprob: -1.4390112161636353
    4. 'ive' → logprob: -4.689011096954346
    5. 'vé' → logprob: -4.814011096954346
    6. 'v' → logprob: -5.689011096954346
    7. 'ivée' → logprob: -7.939011096954346
    8. 'vier' → logprob: -8.064011573791504
    9. 'vate' → logprob: -8.064011573791504
    10. 'ivé' → logprob: -8.064011573791504

Token 878: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2994846999645233
    2. 'active' → logprob: -1.4244847297668457
    3. ' i' → logprob: -5.299484729766846
    4. 'False' → logprob: -5.299484729766846
    5. ' active' → logprob: -5.674484729766846
    6. '   ' → logprob: -5.924484729766846
    7. '[i' → logprob: -7.174484729766846
    8. '       ' → logprob: -8.299484252929688
    9. 'inactive' → logprob: -8.299484252929688
    10. '
' → logprob: -8.674484252929688

Token 879: ' et' (ID: 859)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003628581063821912
    2. 'and' → logprob: -6.503628730773926
    3. ' and' → logprob: -6.878628730773926
    4. '[' → logprob: -7.878628730773926
    5. ',' → logprob: -9.003628730773926
    6. '=' → logprob: -9.128628730773926
    7. '[idx' → logprob: -9.128628730773926
    8. '
' → logprob: -9.628628730773926
    9. '[index' → logprob: -9.753628730773926
    10. ' =' → logprob: -9.878628730773926

Token 880: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.049406226724386215
    2. 'active' → logprob: -3.0494062900543213
    3. ' j' → logprob: -7.799406051635742
    4. ' active' → logprob: -8.299406051635742
    5. 'True' → logprob: -9.299406051635742
    6. 'False' → logprob: -10.799406051635742
    7. '   ' → logprob: -11.174406051635742
    8. '           ' → logprob: -12.049406051635742
    9. 'y' → logprob: -12.424406051635742
    10. '       ' → logprob: -12.549406051635742

Token 881: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05204610154032707
    2. 'active' → logprob: -3.177046060562134
    3. ' active' → logprob: -4.802046298980713
    4. '	active' → logprob: -8.052045822143555
    5. '        
' → logprob: -8.302045822143555
    6. '   ' → logprob: -8.927045822143555
    7. '(active' → logprob: -10.677045822143555
    8. ' ' → logprob: -10.802045822143555
    9. '       
' → logprob: -11.677045822143555
    10. '           ' → logprob: -12.052045822143555

Token 882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012551683001220226
    2. 'active' → logprob: -4.887551784515381
    3. ' active' → logprob: -5.887551784515381
    4. '   ' → logprob: -6.512551784515381
    5. '        
' → logprob: -8.387551307678223
    6. '	active' → logprob: -8.637551307678223
    7. '```' → logprob: -9.637551307678223
    8. '[' → logprob: -10.262551307678223
    9. ' ' → logprob: -10.262551307678223
    10. '           ' → logprob: -10.387551307678223

Token 883: ' active' (ID: 6725)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'active' (adapté à ' active') → logprob: -0.0015093892579898238
    2. ' active' → logprob: -6.501509189605713
    3. '   ' → logprob: -11.876509666442871
    4. '	active' → logprob: -16.501508712768555
    5. '       ' → logprob: -16.626508712768555
    6. ' ' → logprob: -18.376508712768555
    7. '  ' → logprob: -19.501508712768555
    8. '.active' → logprob: -20.001508712768555
    9. '```' → logprob: -20.501508712768555
    10. 'inactive' → logprob: -21.126508712768555

Token 884: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.375001907348633
    3. '[j' → logprob: -17.000001907348633
    4. 'i' → logprob: -17.000001907348633
    5. '[x' → logprob: -18.000001907348633
    6. ' [' → logprob: -18.750001907348633
    7. '[I' → logprob: -18.750001907348633
    8. '[in' → logprob: -18.875001907348633
    9. '[min' → logprob: -18.875001907348633
    10. '[
' → logprob: -19.875001907348633

Token 885: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011857230216264725
    2. ' =' → logprob: -4.511857032775879
    3. '=False' → logprob: -7.386857032775879
    4. ',' → logprob: -9.261857032775879
    5. ']' → logprob: -9.636857032775879
    6. ']=' → logprob: -10.886857032775879
    7. '[i' → logprob: -11.886857032775879
    8. '=
' → logprob: -13.636857032775879
    9. '=i' → logprob: -14.261857032775879
    10. 'False' → logprob: -14.511857032775879

Token 886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015439033741131425
    2. ' =' → logprob: -6.501543998718262
    3. '=False' → logprob: -10.126543998718262
    4. ',' → logprob: -13.501543998718262
    5. '=
' → logprob: -16.501543045043945
    6. '=True' → logprob: -18.376543045043945
    7. '=false' → logprob: -18.626543045043945
    8. 'False' → logprob: -19.126543045043945
    9. '＝' → logprob: -19.626543045043945
    10. ']=' → logprob: -19.751543045043945

Token 887: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.339278580620885e-06
    2. ' False' → logprob: -13.000001907348633
    3. 'false' → logprob: -19.875001907348633
    4. '(False' → logprob: -21.625001907348633
    5. '=False' → logprob: -22.875001907348633
    6. '.False' → logprob: -24.500001907348633
    7. '_false' → logprob: -24.625001907348633
    8. 'Fa' → logprob: -26.000001907348633
    9. '0' → logprob: -26.250001907348633
    10. '   ' → logprob: -26.375001907348633

Token 888: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025198092684149742
    2. '<|end|>' → logprob: -3.900197982788086
    3. 'active' → logprob: -7.275197982788086
    4. ' active' → logprob: -7.400197982788086
    5. '   ' → logprob: -7.400197982788086
    6. '
' → logprob: -7.775197982788086
    7. '	active' → logprob: -7.775197982788086
    8. '        
' → logprob: -7.900197982788086
    9. '           ' → logprob: -8.150197982788086
    10. '<|end|>' → logprob: -8.275197982788086

Token 889: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004966424312442541
    2. 'active' → logprob: -6.6299662590026855
    3. '<|end|>' → logprob: -6.6299662590026855
    4. '   ' → logprob: -7.7549662590026855
    5. '        
' → logprob: -7.8799662590026855
    6. ' active' → logprob: -8.004966735839844
    7. '	active' → logprob: -8.379966735839844
    8. '```' → logprob: -8.504966735839844
    9. '           ' → logprob: -8.754966735839844
    10. '<|end|>' → logprob: -9.379966735839844

Token 890: ' active' (ID: 6725)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'active' (adapté à ' active') → logprob: -0.02170744724571705
    2. '       ' → logprob: -4.271707534790039
    3. ' active' → logprob: -4.896707534790039
    4. '	active' → logprob: -10.896707534790039
    5. '           ' → logprob: -11.271707534790039
    6. '   ' → logprob: -12.271707534790039
    7. '               ' → logprob: -13.271707534790039
    8. '
' → logprob: -13.271707534790039
    9. '.active' → logprob: -13.646707534790039
    10. '(active' → logprob: -14.021707534790039

Token 891: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.375000953674316
    3. '[i' → logprob: -16.375001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '[js' → logprob: -16.375001907348633
    6. '```' → logprob: -17.375001907348633
    7. ' [' → logprob: -17.875001907348633
    8. 'j' → logprob: -18.250001907348633
    9. '       ' → logprob: -18.875001907348633
    10. '[
' → logprob: -19.750001907348633

Token 892: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4146549701690674
    2. '=' → logprob: -1.1646549701690674
    3. ']' → logprob: -3.6646549701690674
    4. '=False' → logprob: -6.664654731750488
    5. 'False' → logprob: -8.539654731750488
    6. ']=' → logprob: -8.914654731750488
    7. '[' → logprob: -9.039654731750488
    8. ')' → logprob: -10.789654731750488
    9. '=True' → logprob: -11.289654731750488
    10. ' False' → logprob: -11.664654731750488

Token 893: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869113624095917
    2. '=' → logprob: -1.136911392211914
    3. '=False' → logprob: -10.136911392211914
    4. '[' → logprob: -14.386911392211914
    5. '=True' → logprob: -16.386911392211914
    6. 'False' → logprob: -16.511911392211914
    7. '=
' → logprob: -18.136911392211914
    8. ')' → logprob: -18.261911392211914
    9. ' =
' → logprob: -18.261911392211914
    10. ']' → logprob: -18.386911392211914

Token 894: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.15310683415737e-05
    2. ' False' → logprob: -10.750021934509277
    3. '(False' → logprob: -20.00002098083496
    4. '=False' → logprob: -23.62502098083496
    5. '.False' → logprob: -23.75002098083496
    6. '_false' → logprob: -25.00002098083496
    7. 'false' → logprob: -25.87502098083496
    8. 'True' → logprob: -26.37502098083496
    9. 'F' → logprob: -26.62502098083496
    10. 'Fa' → logprob: -27.62502098083496

Token 895: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016460003331303596
    2. '        
' → logprob: -5.641459941864014
    3. 'next' → logprob: -5.766459941864014
    4. '#' → logprob: -6.016459941864014
    5. 'new' → logprob: -6.516459941864014
    6. '   ' → logprob: -6.641459941864014
    7. ' next' → logprob: -7.141459941864014
    8. ' new' → logprob: -7.266459941864014
    9. '<|end|>' → logprob: -7.641459941864014
    10. 'for' → logprob: -7.641459941864014

Token 896: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01870245672762394
    2. 'new' → logprob: -5.143702507019043
    3. '#' → logprob: -5.268702507019043
    4. ' new' → logprob: -5.768702507019043
    5. 'k' → logprob: -6.643702507019043
    6. 'next' → logprob: -6.893702507019043
    7. '        
' → logprob: -7.893702507019043
    8. ' #' → logprob: -7.893702507019043
    9. ' next' → logprob: -8.018702507019043
    10. ' k' → logprob: -8.393702507019043

Token 897: ' active' (ID: 6725)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1665452718734741
    2. 'for' → logprob: -1.2915452718734741
    3. '#' → logprob: -1.6665452718734741
    4. 'k' → logprob: -1.6665452718734741
    5. 'next' → logprob: -3.7915453910827637
    6. 'n' → logprob: -5.791545391082764
    7. 'idx' → logprob: -5.916545391082764
    8. '       ' → logprob: -6.166545391082764
    9. 'curr' → logprob: -7.291545391082764
    10. 'm' → logprob: -7.416545391082764

Token 898: '_count' (ID: 7536)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0037219305522739887
    2. '[next' → logprob: -5.753721714019775
    3. '.append' → logprob: -7.753721714019775
    4. '[' → logprob: -9.128722190856934
    5. '[len' → logprob: -12.128722190856934
    6. '[new' → logprob: -14.253722190856934
    7. '[:-' → logprob: -16.253721237182617
    8. '   ' → logprob: -16.878721237182617
    9. ' [-' → logprob: -16.878721237182617
    10. '.pop' → logprob: -17.003721237182617

Token 899: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06473955512046814
    2. '-=' → logprob: -3.439739465713501
    3. ' =' → logprob: -3.564739465713501
    4. ' -=' → logprob: -6.31473970413208
    5. '-' → logprob: -7.81473970413208
    6. '   ' → logprob: -9.939739227294922
    7. '[' → logprob: -10.564739227294922
    8. '+=' → logprob: -12.439739227294922
    9. ' ' → logprob: -12.564739227294922
    10. ')' → logprob: -12.689739227294922

Token 900: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.27955305576324463
    2. 'active' → logprob: -1.9045530557632446
    3. 'remaining' → logprob: -2.529552936553955
    4. ' sum' → logprob: -4.529552936553955
    5. ' active' → logprob: -6.029552936553955
    6. 'len' → logprob: -6.529552936553955
    7. ' remaining' → logprob: -8.154553413391113
    8. '0' → logprob: -9.029553413391113
    9. '[' → logprob: -9.154553413391113
    10. 'next' → logprob: -10.529553413391113

Token 901: '(active' (ID: 81123)
  Prédit: '(active'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(active' → logprob: -0.00020103710994590074
    2. '([' → logprob: -9.250201225280762
    3. '(' → logprob: -9.875201225280762
    4. 'active' → logprob: -10.125201225280762
    5. '(x' → logprob: -12.625201225280762
    6. '(True' → logprob: -12.750201225280762
    7. '	active' → logprob: -13.375201225280762
    8. '(a' → logprob: -13.375201225280762
    9. '(act' → logprob: -14.250201225280762
    10. ' active' → logprob: -14.625201225280762

Token 902: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0272472333163023
    2. '<|end|>' → logprob: -3.902247190475464
    3. '()' → logprob: -6.277247428894043
    4. ')
' → logprob: -6.402247428894043
    5. '       ' → logprob: -6.527247428894043
    6. '<|end|>' → logprob: -7.027247428894043
    7. '())' → logprob: -8.027247428894043
    8. ' )' → logprob: -8.777247428894043
    9. '
' → logprob: -9.277247428894043
    10. '()
' → logprob: -9.902247428894043

Token 903: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23575149476528168
    2. 'next' → logprob: -2.1107513904571533
    3. 'for' → logprob: -2.9857513904571533
    4. 'new' → logprob: -4.360751628875732
    5. ' for' → logprob: -5.110751628875732
    6. '#' → logprob: -5.235751628875732
    7. '<|end|>' → logprob: -5.360751628875732
    8. ' next' → logprob: -5.610751628875732
    9. '[next' → logprob: -6.985751628875732
    10. 'indices' → logprob: -7.110751628875732

Token 904: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9962984323501587
    2. '#' (adapté à ' #') → logprob: -1.3712984323501587
    3. 'new' → logprob: -2.121298313140869
    4. 'k' → logprob: -2.121298313140869
    5. '       ' → logprob: -2.371298313140869
    6. 'next' → logprob: -3.496298313140869
    7. 'idx' → logprob: -5.371298313140869
    8. 'dist' → logprob: -6.371298313140869
    9. 'n' → logprob: -6.496298313140869
    10. 'indices' → logprob: -6.621298313140869

Token 905: ' Mise' (ID: 157932)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43635866045951843
    2. 'new' → logprob: -1.9363586902618408
    3. 'for' → logprob: -2.061358690261841
    4. 'k' → logprob: -2.811358690261841
    5. 'next' → logprob: -4.811358451843262
    6. 'idx' → logprob: -4.936358451843262
    7. 'curr' → logprob: -6.936358451843262
    8. 'current' → logprob: -7.061358451843262
    9. 'old' → logprob: -7.311358451843262
    10. 'dist' → logprob: -7.436358451843262

Token 906: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.07182043790817261
    2. '       ' → logprob: -3.3218204975128174
    3. ' à' → logprob: -3.4468204975128174
    4. '-à' → logprob: -7.321820259094238
    5. '   ' → logprob: -8.571820259094238
    6. 'À' → logprob: -9.071820259094238
    7. ''à' → logprob: -9.446820259094238
    8. '```' → logprob: -9.821820259094238
    9. '        ' → logprob: -9.946820259094238
    10. '      ' → logprob: -9.946820259094238

Token 907: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0006833644583821297
    2. 'jou' → logprob: -7.500683307647705
    3. 'jours' → logprob: -9.750683784484863
    4. 'date' → logprob: -10.500683784484863
    5. 'day' → logprob: -11.000683784484863
    6. ' jour' → logprob: -11.250683784484863
    7. '```' → logprob: -12.250683784484863
    8. 'j' → logprob: -12.375683784484863
    9. 'journal' → logprob: -13.750683784484863
    10. '   ' → logprob: -14.125683784484863

Token 908: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07929116487503052
    2. '#' → logprob: -2.9542911052703857
    3. '       ' → logprob: -4.329291343688965
    4. 'new' → logprob: -4.704291343688965
    5. ' for' → logprob: -6.704291343688965
    6. 'dist' → logprob: -8.079291343688965
    7. 'indices' → logprob: -9.329291343688965
    8. ' #' → logprob: -9.954291343688965
    9. 'keys' → logprob: -10.079291343688965
    10. 'active' → logprob: -11.079291343688965

Token 909: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.33501026034355164
    2. '#' → logprob: -1.585010290145874
    3. 'for' → logprob: -2.585010290145874
    4. 'new' → logprob: -6.085010051727295
    5. ' distances' → logprob: -7.460010051727295
    6. 'd' → logprob: -7.960010051727295
    7. 'distance' → logprob: -8.460010528564453
    8. 'indices' → logprob: -8.710010528564453
    9. ' #' → logprob: -8.710010528564453
    10. 'n' → logprob: -9.460010528564453

Token 910: ' entre' (ID: 3853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012434649281203747
    2. 'for' → logprob: -4.762434482574463
    3. ' for' → logprob: -5.887434482574463
    4. '   ' → logprob: -7.512434482574463
    5. '	for' → logprob: -8.637434959411621
    6. 'new' → logprob: -9.637434959411621
    7. '           ' → logprob: -9.887434959411621
    8. '	' → logprob: -10.262434959411621
    9. '<|end|>' → logprob: -10.512434959411621
    10. '        
' → logprob: -10.637434959411621

Token 911: ' nouveau' (ID: 23184)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.38473957777023315
    2. 'next' → logprob: -1.634739637374878
    3. 'clusters' → logprob: -2.509739637374878
    4. 'len' → logprob: -4.259739398956299
    5. '[next' → logprob: -4.384739398956299
    6. ' new' → logprob: -5.509739398956299
    7. ' next' → logprob: -5.759739398956299
    8. '[new' → logprob: -5.759739398956299
    9. '[' → logprob: -6.384739398956299
    10. 'active' → logprob: -7.009739398956299

Token 912: ' cluster' (ID: 19723)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.07836184650659561
    2. 'cluster' → logprob: -3.578361749649048
    3. '_cluster' → logprob: -3.578361749649048
    4. 'node' → logprob: -5.203361988067627
    5. ' cluster' → logprob: -5.828361988067627
    6. '_n' → logprob: -5.828361988067627
    7. 'n' → logprob: -6.203361988067627
    8. '_no' → logprob: -6.328361988067627
    9. '   ' → logprob: -7.703361988067627
    10. ' _' → logprob: -8.078361511230469

Token 913: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1871424913406372
    2. '       ' → logprob: -1.5621424913406372
    3. ' for' → logprob: -2.0621423721313477
    4. ' and' → logprob: -2.3121423721313477
    5. 'new' → logprob: -2.9371423721313477
    6. ' =' → logprob: -3.1871423721313477
    7. 'and' → logprob: -3.5621423721313477
    8. 'k' → logprob: -3.6871423721313477
    9. '   ' → logprob: -3.8121423721313477
    10. ',' → logprob: -4.187142372131348

Token 914: ' autres' (ID: 18701)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -1.3564079999923706
    2. 'active' → logprob: -1.4814079999923706
    3. 'clusters' → logprob: -2.10640811920166
    4. 'range' → logprob: -2.35640811920166
    5. 'existing' → logprob: -3.10640811920166
    6. 'all' → logprob: -3.10640811920166
    7. 'len' → logprob: -3.48140811920166
    8. 'k' → logprob: -3.48140811920166
    9. 'other' → logprob: -3.73140811920166
    10. '
' → logprob: -4.10640811920166

Token 915: ' clusters' (ID: 51310)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01562780886888504
    2. 'for' → logprob: -4.890627861022949
    3. 'new' → logprob: -5.015627861022949
    4. ' for' → logprob: -7.515627861022949
    5. ' new' → logprob: -8.51562786102295
    6. 'next' → logprob: -9.01562786102295
    7. '        
' → logprob: -9.14062786102295
    8. ',' → logprob: -9.51562786102295
    9. 'n' → logprob: -9.76562786102295
    10. '<|end|>' → logprob: -10.01562786102295

Token 916: ' actifs' (ID: 137817)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015301358886063099
    2. 'new' → logprob: -4.39030122756958
    3. 'for' → logprob: -6.26530122756958
    4. ' new' → logprob: -7.76530122756958
    5. 'next' → logprob: -8.390301704406738
    6. ' for' → logprob: -8.890301704406738
    7. '        
' → logprob: -9.890301704406738
    8. ',' → logprob: -11.890301704406738
    9. '#' → logprob: -12.265301704406738
    10. ' next' → logprob: -12.265301704406738

Token 917: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014620233559980989
    2. 'for' → logprob: -7.126461982727051
    3. 'new' → logprob: -7.501461982727051
    4. '        
' → logprob: -10.37646198272705
    5. ' for' → logprob: -10.50146198272705
    6. 'next' → logprob: -10.87646198272705
    7. ' new' → logprob: -11.75146198272705
    8. ',' → logprob: -12.37646198272705
    9. '<|end|>' → logprob: -12.75146198272705
    10. '```' → logprob: -13.25146198272705

Token 918: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030214844271540642
    2. 'for' → logprob: -3.780214786529541
    3. ' for' → logprob: -5.405214786529541
    4. 'new' → logprob: -6.655214786529541
    5. 'next' → logprob: -7.405214786529541
    6. '        
' → logprob: -8.7802152633667
    7. '```' → logprob: -9.0302152633667
    8. ' new' → logprob: -9.6552152633667
    9. ' next' → logprob: -10.1552152633667
    10. '	for' → logprob: -10.2802152633667

Token 919: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3787118196487427
    2. 'new' → logprob: -1.7537118196487427
    3. 'k' → logprob: -2.628711700439453
    4. ' for' → logprob: -3.003711700439453
    5. ' new' → logprob: -4.503711700439453
    6. '       ' → logprob: -5.128711700439453
    7. ' k' → logprob: -6.628711700439453
    8. 'n' → logprob: -6.753711700439453
    9. 'next' → logprob: -8.378711700439453
    10. 'u' → logprob: -9.128711700439453

Token 920: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.9424725148128346e-05
    2. 'x' → logprob: -10.000049591064453
    3. 'idx' → logprob: -12.500049591064453
    4. 'm' → logprob: -16.625049591064453
    5. ' k' → logprob: -17.125049591064453
    6. 'index' → logprob: -17.250049591064453
    7. '_k' → logprob: -17.500049591064453
    8. 'c' → logprob: -17.750049591064453
    9. '(k' → logprob: -18.000049591064453
    10. '.k' → logprob: -18.250049591064453

Token 921: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16023002564907074
    2. ' in' → logprob: -1.910230040550232
    3. 'range' → logprob: -12.535229682922363
    4. 'idx' → logprob: -14.160229682922363
    5. ' ' → logprob: -14.410229682922363
    6. ',' → logprob: -14.535229682922363
    7. 'index' → logprob: -15.535229682922363
    8. 'i' → logprob: -16.16023063659668
    9. ' range' → logprob: -16.41023063659668
    10. '```' → logprob: -16.53523063659668

Token 922: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.318681188422488e-05
    2. ' range' → logprob: -11.25001335144043
    3. '[' → logprob: -16.75001335144043
    4. '(range' → logprob: -17.12501335144043
    5. '	range' → logprob: -19.87501335144043
    6. 'filter' → logprob: -20.12501335144043
    7. 'r' → logprob: -20.50001335144043
    8. '   ' → logprob: -21.50001335144043
    9. 'index' → logprob: -21.62501335144043
    10. ' ' → logprob: -21.75001335144043

Token 923: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0017362285871058702
    2. '(next' → logprob: -6.376736164093018
    3. 'len' → logprob: -10.376736640930176
    4. '(' → logprob: -13.126736640930176
    5. '(new' → logprob: -15.001736640930176
    6. 'next' → logprob: -15.751736640930176
    7. ' len' → logprob: -15.751736640930176
    8. '(n' → logprob: -16.00173568725586
    9. '(active' → logprob: -16.37673568725586
    10. '=len' → logprob: -17.25173568725586

Token 924: '(cl' (ID: 16811)
  Prédit: '(active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(active' → logprob: -0.12695908546447754
    2. '(cl' → logprob: -2.1269590854644775
    3. '(dist' → logprob: -10.626958847045898
    4. 'active' → logprob: -12.876958847045898
    5. '(cluster' → logprob: -13.251958847045898
    6. '(' → logprob: -14.251958847045898
    7. '(distance' → logprob: -14.751958847045898
    8. 'clusters' → logprob: -14.876958847045898
    9. ' active' → logprob: -15.001958847045898
    10. '	active' → logprob: -15.251958847045898

Token 925: 'usters' (ID: 26011)
  Prédit: 'usters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usters' → logprob: -4.513339445111342e-05
    2. 'sters' → logprob: -10.875044822692871
    3. 'clusters' → logprob: -11.250044822692871
    4. 'ust' → logprob: -12.750044822692871
    5. 'asters' → logprob: -13.125044822692871
    6. '#' → logprob: -13.125044822692871
    7. 'uster' → logprob: -13.625044822692871
    8. ' clusters' → logprob: -14.000044822692871
    9. 'uters' → logprob: -14.250044822692871
    10. '[' → logprob: -14.375044822692871

Token 926: ')-' (ID: 14080)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0006850333884358406
    2. '):' → logprob: -7.375685214996338
    3. '):
' → logprob: -10.37568473815918
    4. ')' → logprob: -11.37568473815918
    5. '       ' → logprob: -12.12568473815918
    6. '           ' → logprob: -12.12568473815918
    7. '):

' → logprob: -13.87568473815918
    8. ')):
' → logprob: -14.25068473815918
    9. ' ):
' → logprob: -14.25068473815918
    10. ''):
' → logprob: -14.62568473815918

Token 927: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.625000953674316
    3. '2' → logprob: -15.000000953674316
    4. ' ' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.125001907348633
    6. '(' → logprob: -17.625001907348633
    7. '	' → logprob: -18.125001907348633
    8. '           ' → logprob: -18.500001907348633
    9. '       ' → logprob: -19.250001907348633
    10. 'new' → logprob: -19.250001907348633

Token 928: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0031974392477422953
    2. '):' → logprob: -6.00319766998291
    3. '           ' → logprob: -7.75319766998291
    4. '       ' → logprob: -8.37819766998291
    5. '):
' → logprob: -10.12819766998291
    6. '   ' → logprob: -11.50319766998291
    7. ')' → logprob: -12.75319766998291
    8. ':
' → logprob: -13.12819766998291
    9. ' ):
' → logprob: -13.25319766998291
    10. '          ' → logprob: -13.87819766998291

Token 929: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12911923229694366
    2. '       ' → logprob: -2.3791191577911377
    3. '	       ' → logprob: -4.004119396209717
    4. ' if' → logprob: -5.129119396209717
    5. ' ' → logprob: -6.754119396209717
    6. 'if' → logprob: -7.004119396209717
    7. '   ' → logprob: -7.004119396209717
    8. '	   ' → logprob: -8.129118919372559
    9. '        ' → logprob: -8.879118919372559
    10. '               ' → logprob: -8.879118919372559

Token 930: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6011072993278503
    2. 'if' (adapté à ' if') → logprob: -0.8511072993278503
    3. '           ' → logprob: -3.851107358932495
    4. ' ' → logprob: -6.226107120513916
    5. '   ' → logprob: -7.226107120513916
    6. '               ' → logprob: -7.726107120513916
    7. '       ' → logprob: -8.101107597351074
    8. '	if' → logprob: -9.851107597351074
    9. '         ' → logprob: -10.851107597351074
    10. '        ' → logprob: -10.976107597351074

Token 931: ' active' (ID: 6725)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'active' → logprob: -0.47428905963897705
    2. ' active' → logprob: -0.974289059638977
    3. ' not' → logprob: -9.224288940429688
    4. 'not' → logprob: -9.849288940429688
    5. '   ' → logprob: -10.974288940429688
    6. '           ' → logprob: -11.224288940429688
    7. 'k' → logprob: -11.724288940429688
    8. '	active' → logprob: -11.974288940429688
    9. ' k' → logprob: -12.099288940429688
    10. '       ' → logprob: -13.349288940429688

Token 932: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00018149138486478478
    2. 'k' → logprob: -8.625181198120117
    3. ' [' → logprob: -14.625181198120117
    4. '[' → logprob: -14.875181198120117
    5. '           ' → logprob: -15.125181198120117
    6. '(k' → logprob: -15.875181198120117
    7. '
' → logprob: -16.125181198120117
    8. '[
' → logprob: -16.250181198120117
    9. '   ' → logprob: -16.375181198120117
    10. '[i' → logprob: -16.875181198120117

Token 933: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5779159069061279
    2. 'and' → logprob: -0.8279159069061279
    3. ':
' → logprob: -6.827916145324707
    4. ':' → logprob: -8.202916145324707
    5. '           ' → logprob: -8.202916145324707
    6. ']' → logprob: -8.952916145324707
    7. '               ' → logprob: -10.077916145324707
    8. '):
' → logprob: -10.202916145324707
    9. '       ' → logprob: -10.327916145324707
    10. '==' → logprob: -11.077916145324707

Token 934: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018653334118425846
    2. '                ' → logprob: -8.00186538696289
    3. '              ' → logprob: -8.37686538696289
    4. '           ' → logprob: -8.37686538696289
    5. '                
' → logprob: -8.37686538696289
    6. ':' → logprob: -9.25186538696289
    7. ' distances' → logprob: -9.25186538696289
    8. '            ' → logprob: -9.37686538696289
    9. '                   ' → logprob: -9.75186538696289
    10. ',' → logprob: -9.87686538696289

Token 935: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.32022061944007874
    2. ' dist' → logprob: -1.6952205896377563
    3. 'd' → logprob: -3.195220708847046
    4. ' distances' → logprob: -4.195220470428467
    5. ' key' → logprob: -4.570220470428467
    6. ' d' → logprob: -5.195220470428467
    7. '               ' → logprob: -5.195220470428467
    8. ' new' → logprob: -5.695220470428467
    9. 'new' → logprob: -5.945220470428467
    10. 'key' → logprob: -5.945220470428467

Token 936: ' calcul' (ID: 7559)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05213922634720802
    2. 'd' → logprob: -3.1771392822265625
    3. 'new' → logprob: -6.0521392822265625
    4. 'key' → logprob: -6.4271392822265625
    5. 'idx' → logprob: -6.8021392822265625
    6. '#' → logprob: -6.8021392822265625
    7. 'di' → logprob: -6.9271392822265625
    8. 'if' → logprob: -7.4271392822265625
    9. '           ' → logprob: -7.8021392822265625
    10. '               ' → logprob: -8.427139282226562

Token 937: ' distance' (ID: 9324)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7403872013092041
    2. '               ' → logprob: -1.115387201309204
    3. '                   ' → logprob: -3.115387201309204
    4. ' dist' → logprob: -3.490387201309204
    5. ' distances' → logprob: -3.490387201309204
    6. ' new' → logprob: -3.615387201309204
    7. 'dist' → logprob: -3.740387201309204
    8. '_dist' → logprob: -4.490386962890625
    9. '=' → logprob: -5.240386962890625
    10. ' d' → logprob: -5.740386962890625

Token 938: ' moyenne' (ID: 57480)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9036531448364258
    2. ' =' → logprob: -1.6536531448364258
    3. 'dist' → logprob: -1.6536531448364258
    4. '                   ' → logprob: -2.528653144836426
    5. 'new' → logprob: -2.528653144836426
    6. '               ' → logprob: -3.528653144836426
    7. '=(' → logprob: -5.403653144836426
    8. 'd' → logprob: -5.653653144836426
    9. ' new' → logprob: -5.903653144836426
    10. 'val' → logprob: -6.153653144836426

Token 939: ' pond' (ID: 42367)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5794736742973328
    2. '               ' → logprob: -1.3294737339019775
    3. '                   ' → logprob: -2.9544737339019775
    4. 'dist' → logprob: -3.2044737339019775
    5. ' distances' → logprob: -3.4544737339019775
    6. '=' → logprob: -3.5794737339019775
    7. 'new' → logprob: -5.204473495483398
    8. ' new' → logprob: -5.454473495483398
    9. ' dist' → logprob: -5.704473495483398
    10. 'd' → logprob: -6.579473495483398

Token 940: 'érée' (ID: 113219)
  Prédit: 'érée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érée' → logprob: -0.0002007987059187144
    2. 'éré' → logprob: -9.000201225280762
    3. 'érées' → logprob: -9.875201225280762
    4. 'er' → logprob: -11.375201225280762
    5. 'rée' → logprob: -13.000201225280762
    6. '=' → logprob: -13.250201225280762
    7. 'érés' → logprob: -13.500201225280762
    8. 'é' → logprob: -13.625201225280762
    9. 'ére' → logprob: -13.750201225280762
    10. '(' → logprob: -13.875201225280762

Token 941: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8790696859359741
    2. ' =' → logprob: -1.2540696859359741
    3. 'dist' → logprob: -2.0040698051452637
    4. '                   ' → logprob: -2.8790698051452637
    5. '=' → logprob: -3.5040698051452637
    6. ' distances' → logprob: -3.5040698051452637
    7. 'new' → logprob: -4.754069805145264
    8. ' dist' → logprob: -4.879069805145264
    9. ' new' → logprob: -5.004069805145264
    10. 'd' → logprob: -5.004069805145264

Token 942: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3298858106136322
    2. '                   ' → logprob: -2.204885721206665
    3. ' =' → logprob: -2.329885721206665
    4. ' new' → logprob: -3.329885721206665
    5. 'new' → logprob: -4.454885959625244
    6. ' distances' → logprob: -4.704885959625244
    7. '                       ' → logprob: -5.704885959625244
    8. '=' → logprob: -5.829885959625244
    9. '                ' → logprob: -6.454885959625244
    10. '           ' → logprob: -6.579885959625244

Token 943: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07897219061851501
    2. 'd' → logprob: -3.203972101211548
    3. ' dist' → logprob: -3.828972101211548
    4. 'new' → logprob: -5.328972339630127
    5. ' distances' → logprob: -5.328972339630127
    6. ' d' → logprob: -6.953972339630127
    7. '               ' → logprob: -7.328972339630127
    8. 'di' → logprob: -7.453972339630127
    9. ' new' → logprob: -7.703972339630127
    10. '           ' → logprob: -8.453971862792969

Token 944: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02979712188243866
    2. 'd' → logprob: -3.779797077178955
    3. 'new' → logprob: -6.029797077178955
    4. '               ' → logprob: -6.654797077178955
    5. ' dist' → logprob: -6.654797077178955
    6. 'di' → logprob: -7.154797077178955
    7. '           ' → logprob: -8.904797554016113
    8. '   ' → logprob: -8.904797554016113
    9. 'old' → logprob: -9.404797554016113
    10. 'dj' → logprob: -9.654797554016113

Token 945: '(new' (ID: 2648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2113061547279358
    2. '=' → logprob: -1.961306095123291
    3. '_k' → logprob: -4.461306095123291
    4. '_i' → logprob: -4.836306095123291
    5. '_key' → logprob: -4.836306095123291
    6. '_new' → logprob: -4.961306095123291
    7. '_' → logprob: -5.336306095123291
    8. '_val' → logprob: -5.961306095123291
    9. '=(' → logprob: -6.461306095123291
    10. 'new' → logprob: -6.586306095123291

Token 946: ',k' (ID: 35155)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.003555646864697337
    2. '_' → logprob: -7.503555774688721
    3. '_cluster' → logprob: -7.503555774688721
    4. '_token' → logprob: -7.878555774688721
    5. ' _' → logprob: -8.128555297851562
    6. '_k' → logprob: -8.128555297851562
    7. ')' → logprob: -8.128555297851562
    8. ',' → logprob: -8.628555297851562
    9. ')_' → logprob: -8.628555297851562
    10. ',_' → logprob: -8.753555297851562

Token 947: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00714417127892375
    2. ')=' → logprob: -5.007143974304199
    3. '=' → logprob: -8.2571439743042
    4. ' )' → logprob: -9.7571439743042
    5. ' =' → logprob: -10.8821439743042
    6. '   ' → logprob: -11.5071439743042
    7. ']' → logprob: -11.5071439743042
    8. '）' → logprob: -11.6321439743042
    9. ')
' → logprob: -11.6321439743042
    10. '')' → logprob: -11.8821439743042

Token 948: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12755736708641052
    2. '=' → logprob: -2.1275572776794434
    3. '               ' → logprob: -9.002557754516602
    4. '=(' → logprob: -9.127557754516602
    5. 'dist' → logprob: -9.252557754516602
    6. 'new' → logprob: -10.127557754516602
    7. ' distances' → logprob: -10.502557754516602
    8. '=((' → logprob: -10.502557754516602
    9. '           ' → logprob: -10.627557754516602
    10. '                   ' → logprob: -11.002557754516602

Token 949: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7802388668060303
    2. '(dist' → logprob: -0.9052388668060303
    3. '(cl' → logprob: -2.1552388668060303
    4. '(' → logprob: -4.030239105224609
    5. ' (' → logprob: -6.405239105224609
    6. '(
' → logprob: -7.405239105224609
    7. '(((' → logprob: -8.53023910522461
    8. '   ' → logprob: -8.65523910522461
    9. '(distance' → logprob: -8.65523910522461
    10. '(k' → logprob: -9.03023910522461

Token 950: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.40672340989112854
    2. 'clusters' → logprob: -1.7817233800888062
    3. '(dist' → logprob: -2.6567234992980957
    4. ' clusters' → logprob: -3.5317234992980957
    5. '(cl' → logprob: -3.7817234992980957
    6. ' dist' → logprob: -3.7817234992980957
    7. ' (' → logprob: -4.656723499298096
    8. ' distances' → logprob: -5.031723499298096
    9. 'cl' → logprob: -5.656723499298096
    10. '(cluster' → logprob: -8.406723022460938

Token 951: '(i' (ID: 3649)
  Prédit: 'ances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0011553396470844746
    2. '[(' → logprob: -7.001155376434326
    3. 'ance' → logprob: -10.001154899597168
    4. '((' → logprob: -10.126154899597168
    5. '(k' → logprob: -10.251154899597168
    6. '(' → logprob: -10.376154899597168
    7. '[' → logprob: -10.751154899597168
    8. '[k' → logprob: -10.876154899597168
    9. 's' → logprob: -11.126154899597168
    10. 'anc' → logprob: -11.501154899597168

Token 952: ',k' (ID: 35155)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0629994198679924
    2. ',k' → logprob: -2.9379994869232178
    3. '][' → logprob: -6.312999248504639
    4. ')' → logprob: -6.437999248504639
    5. ')[' → logprob: -6.437999248504639
    6. 'k' → logprob: -7.312999248504639
    7. ',' → logprob: -7.687999248504639
    8. '*k' → logprob: -7.812999248504639
    9. ')*' → logprob: -7.937999248504639
    10. '(k' → logprob: -8.687999725341797

Token 953: ')*' (ID: 11043)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05296899378299713
    2. ')*' → logprob: -3.302968978881836
    3. ' *' → logprob: -4.677968978881836
    4. ')' → logprob: -5.552968978881836
    5. ']*' → logprob: -6.927968978881836
    6. '*k' → logprob: -7.552968978881836
    7. ')*(' → logprob: -10.677968978881836
    8. 'clusters' → logprob: -11.302968978881836
    9. '*(' → logprob: -11.427968978881836
    10. ']' → logprob: -11.677968978881836

Token 954: 'size' (ID: 4461)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.008790061809122562
    2. ' clusters' → logprob: -4.758790016174316
    3. 'cl' → logprob: -9.258790016174316
    4. '(cl' → logprob: -9.508790016174316
    5. 'cluster' → logprob: -13.133790016174316
    6. ')' → logprob: -14.383790016174316
    7. '_clusters' → logprob: -14.758790016174316
    8. ' (' → logprob: -14.758790016174316
    9. '```' → logprob: -14.883790016174316
    10. '(' → logprob: -15.008790016174316

Token 955: '(i' (ID: 3649)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0422292947769165
    2. '[k' → logprob: -1.2922292947769165
    3. 'clusters' → logprob: -1.9172292947769165
    4. '(cl' → logprob: -2.917229175567627
    5. ' clusters' → logprob: -3.167229175567627
    6. ')' → logprob: -3.542229175567627
    7. '[' → logprob: -3.792229175567627
    8. '_clusters' → logprob: -4.417229175567627
    9. '*' → logprob: -4.542229175567627
    10. 's' → logprob: -4.542229175567627

Token 956: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5599625706672668
    2. ')' → logprob: -1.684962511062622
    3. '*' → logprob: -2.059962511062622
    4. ' *' → logprob: -2.809962511062622
    5. '+' → logprob: -3.684962511062622
    6. ')+' → logprob: -4.184962749481201
    7. ')*' → logprob: -4.684962749481201
    8. '[k' → logprob: -6.309962749481201
    9. '*k' → logprob: -6.809962749481201
    10. '[' → logprob: -7.434962749481201

Token 957: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5778154730796814
    2. ' +' → logprob: -1.2028155326843262
    3. '+' → logprob: -2.452815532684326
    4. ' *' → logprob: -2.952815532684326
    5. ' ' → logprob: -9.702815055847168
    6. ')' → logprob: -9.702815055847168
    7. ' ' → logprob: -10.577815055847168
    8. '```' → logprob: -10.827815055847168
    9. '               ' → logprob: -10.952815055847168
    10. '*k' → logprob: -11.077815055847168

Token 958: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.0739595964550972
    2. 'dist' → logprob: -2.8239595890045166
    3. ' distances' → logprob: -4.448959827423096
    4. '(dist' → logprob: -9.948959350585938
    5. '	dist' → logprob: -10.448959350585938
    6. '               ' → logprob: -10.448959350585938
    7. '                ' → logprob: -11.073959350585938
    8. '            ' → logprob: -11.323959350585938
    9. '           ' → logprob: -11.573959350585938
    10. '                   ' → logprob: -11.698959350585938

Token 959: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.6593524217605591
    2. '(k' → logprob: -1.159352421760559
    3. '(cl' → logprob: -2.9093523025512695
    4. '(i' → logprob: -3.1593523025512695
    5. '[j' → logprob: -3.9093523025512695
    6. 'clusters' → logprob: -4.4093523025512695
    7. '(' → logprob: -4.5343523025512695
    8. '[k' → logprob: -5.0343523025512695
    9. '[(' → logprob: -5.5343523025512695
    10. 's' → logprob: -5.9093523025512695

Token 960: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.0037035199347883463
    2. '[k' → logprob: -6.253703594207764
    3. ',' → logprob: -6.503703594207764
    4. ' ,' → logprob: -8.503703117370605
    5. '*' → logprob: -11.378703117370605
    6. '*k' → logprob: -11.628703117370605
    7. '```' → logprob: -12.128703117370605
    8. '                           ' → logprob: -12.253703117370605
    9. '   ' → logprob: -12.378703117370605
    10. '(k' → logprob: -12.503703117370605

Token 961: ')*' (ID: 11043)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.36454132199287415
    2. ' *' → logprob: -1.4895412921905518
    3. ')*' → logprob: -2.6145412921905518
    4. ')' → logprob: -5.239541530609131
    5. '*k' → logprob: -6.739541530609131
    6. ' )' → logprob: -9.364541053771973
    7. '[k' → logprob: -9.989541053771973
    8. '*)' → logprob: -9.989541053771973
    9. ')*(' → logprob: -9.989541053771973
    10. ' ' → logprob: -10.864541053771973

Token 962: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.5548166632652283
    2. ' size' → logprob: -1.804816722869873
    3. 'clusters' → logprob: -1.929816722869873
    4. ' clusters' → logprob: -2.304816722869873
    5. 'dist' → logprob: -4.679816722869873
    6. 'sizes' → logprob: -6.179816722869873
    7. ' dist' → logprob: -6.179816722869873
    8. ' sizes' → logprob: -7.179816722869873
    9. 'cl' → logprob: -7.304816722869873
    10. ' distances' → logprob: -8.054816246032715

Token 963: '(j' (ID: 4997)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.25909605622291565
    2. '[k' → logprob: -1.6340960264205933
    3. '(cl' → logprob: -4.009096145629883
    4. ')' → logprob: -5.009096145629883
    5. 'clusters' → logprob: -6.009096145629883
    6. '(i' → logprob: -6.634096145629883
    7. '*' → logprob: -6.884096145629883
    8. ' clusters' → logprob: -7.384096145629883
    9. ')*' → logprob: -7.634096145629883
    10. 'k' → logprob: -8.134096145629883

Token 964: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12732166051864624
    2. ')*' → logprob: -3.002321720123291
    3. ' )' → logprob: -3.252321720123291
    4. '))' → logprob: -4.627321720123291
    5. ')/(' → logprob: -4.877321720123291
    6. ')/' → logprob: -5.002321720123291
    7. '))/(' → logprob: -6.252321720123291
    8. ')*(' → logprob: -6.502321720123291
    9. '*' → logprob: -6.627321720123291
    10. ' *' → logprob: -7.252321720123291

Token 965: ' /' (ID: 820)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.439657598733902
    2. '*' → logprob: -1.5646575689315796
    3. ')' → logprob: -2.314657688140869
    4. '               ' → logprob: -3.314657688140869
    5. ')*' → logprob: -5.814657688140869
    6. ' )' → logprob: -5.939657688140869
    7. '                   ' → logprob: -6.689657688140869
    8. ' /' → logprob: -6.939657688140869
    9. '           ' → logprob: -7.189657688140869
    10. '                ' → logprob: -8.189657211303711

Token 966: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.9963662624359131
    2. '(cl' → logprob: -0.9963662624359131
    3. ' (' → logprob: -1.496366262435913
    4. 'new' → logprob: -3.496366262435913
    5. ' new' → logprob: -5.121366500854492
    6. '(' → logprob: -7.371366500854492
    7. 'clusters' → logprob: -8.246366500854492
    8. ' clusters' → logprob: -9.121366500854492
    9. '   ' → logprob: -9.871366500854492
    10. '(c' → logprob: -9.871366500854492

Token 967: 'size' (ID: 4461)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.010936162434518337
    2. 'clusters' → logprob: -5.135936260223389
    3. ' new' → logprob: -5.510936260223389
    4. '(new' → logprob: -7.135936260223389
    5. ' clusters' → logprob: -9.51093578338623
    6. '(cl' → logprob: -10.13593578338623
    7. 'cl' → logprob: -10.76093578338623
    8. '   ' → logprob: -11.51093578338623
    9. ' (' → logprob: -12.76093578338623
    10. 'next' → logprob: -13.51093578338623

Token 968: '(i' (ID: 3649)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.19296346604824066
    2. '(i' → logprob: -2.4429633617401123
    3. '(cl' → logprob: -2.9429633617401123
    4. '[i' → logprob: -4.192963600158691
    5. '[new' → logprob: -4.442963600158691
    6. 'new' → logprob: -5.692963600158691
    7. '(k' → logprob: -6.067963600158691
    8. ' (' → logprob: -6.317963600158691
    9. '[k' → logprob: -7.942963600158691
    10. 'clusters' → logprob: -8.192963600158691

Token 969: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3890395760536194
    2. ' +' → logprob: -1.1390395164489746
    3. ')' → logprob: -7.264039516448975
    4. ')+' → logprob: -7.889039516448975
    5. 'new' → logprob: -7.889039516448975
    6. '()+' → logprob: -9.139039993286133
    7. '[' → logprob: -9.139039993286133
    8. '+k' → logprob: -9.389039993286133
    9. '[new' → logprob: -9.389039993286133
    10. ']+' → logprob: -10.264039993286133

Token 970: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2523382008075714
    2. ' +' → logprob: -1.502338171005249
    3. 'new' → logprob: -8.627338409423828
    4. '+k' → logprob: -9.752338409423828
    5. '*' → logprob: -10.252338409423828
    6. '[' → logprob: -10.752338409423828
    7. '[new' → logprob: -11.002338409423828
    8. '[next' → logprob: -11.627338409423828
    9. ')' → logprob: -11.752338409423828
    10. '```' → logprob: -11.877338409423828

Token 971: ' size' (ID: 2349)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.24939483404159546
    2. '(new' → logprob: -2.4993948936462402
    3. ' new' → logprob: -2.4993948936462402
    4. ' (' → logprob: -3.7493948936462402
    5. '(cl' → logprob: -3.8743948936462402
    6. 'clusters' → logprob: -4.74939489364624
    7. ' clusters' → logprob: -6.12439489364624
    8. 'cl' → logprob: -6.99939489364624
    9. '   ' → logprob: -9.249394416809082
    10. '
' → logprob: -10.249394416809082

Token 972: '(j' (ID: 4997)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.5990403294563293
    2. '(i' → logprob: -1.5990402698516846
    3. '(new' → logprob: -2.3490402698516846
    4. '[k' → logprob: -2.7240402698516846
    5. 'new' → logprob: -3.5990402698516846
    6. '(cl' → logprob: -4.099040508270264
    7. '[i' → logprob: -4.349040508270264
    8. 'k' → logprob: -4.849040508270264
    9. '(j' → logprob: -5.099040508270264
    10. '[new' → logprob: -5.474040508270264

Token 973: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005824871826916933
    2. ' )' → logprob: -5.255825042724609
    3. '))' → logprob: -7.630825042724609
    4. ')
' → logprob: -9.50582504272461
    5. '               ' → logprob: -12.13082504272461
    6. ')))' → logprob: -12.13082504272461
    7. '       ' → logprob: -13.00582504272461
    8. ')
' → logprob: -13.00582504272461
    9. ' ))' → logprob: -13.00582504272461
    10. ' )
' → logprob: -13.13082504272461

Token 974: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03326525539159775
    2. '                               ' → logprob: -4.783265113830566
    3. '<|end|>' → logprob: -5.408265113830566
    4. '                   ' → logprob: -5.533265113830566
    5. '                ' → logprob: -6.408265113830566
    6. ')' → logprob: -6.533265113830566
    7. '                
' → logprob: -6.783265113830566
    8. 'token' → logprob: -6.908265113830566
    9. '           ' → logprob: -7.033265113830566
    10. ' if' → logprob: -7.033265113830566

Token 975: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6719716787338257
    2. ' if' → logprob: -1.9219716787338257
    3. 'dist' → logprob: -2.2969717979431152
    4. 'if' → logprob: -2.5469717979431152
    5. ' d' → logprob: -2.9219717979431152
    6. 'd' → logprob: -3.5469717979431152
    7. ' dist' → logprob: -3.9219717979431152
    8. '                   ' → logprob: -4.171971797943115
    9. ' new' → logprob: -4.546971797943115
    10. 'old' → logprob: -4.796971797943115

Token 976: ' récup' (ID: 62856)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7101579904556274
    2. 'dist' → logprob: -1.7101579904556274
    3. ' if' → logprob: -1.9601579904556274
    4. 'd' → logprob: -2.960157871246338
    5. ' dist' → logprob: -2.960157871246338
    6. 'old' → logprob: -3.835157871246338
    7. 'di' → logprob: -4.710157871246338
    8. 'key' → logprob: -4.710157871246338
    9. '               ' → logprob: -4.710157871246338
    10. ' d' → logprob: -5.085157871246338

Token 977: 'ère' (ID: 4346)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.24182046949863434
    2. 'er' → logprob: -1.7418204545974731
    3. '               ' → logprob: -4.241820335388184
    4. 'ér' → logprob: -4.741820335388184
    5. '                   ' → logprob: -5.116820335388184
    6. 'erer' → logprob: -5.616820335388184
    7. 'rer' → logprob: -5.991820335388184
    8. 'èr' → logprob: -7.491820335388184
    9. 'r' → logprob: -7.616820335388184
    10. 'ère' → logprob: -7.616820335388184

Token 978: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04001685976982117
    2. 'd' → logprob: -4.0400166511535645
    3. ' distances' → logprob: -4.7900166511535645
    4. '(dist' → logprob: -5.7900166511535645
    5. 'if' → logprob: -5.9150166511535645
    6. ' dist' → logprob: -6.0400166511535645
    7. '               ' → logprob: -6.5400166511535645
    8. 'old' → logprob: -6.7900166511535645
    9. ' d' → logprob: -7.2900166511535645
    10. '((' → logprob: -7.7900166511535645

Token 979: ' dans' (ID: 2671)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.882709801197052
    2. '(i' → logprob: -0.882709801197052
    3. '_i' → logprob: -2.8827097415924072
    4. 'ij' → logprob: -3.5077097415924072
    5. 'if' → logprob: -4.132709980010986
    6. '               ' → logprob: -4.507709980010986
    7. 'def' → logprob: -4.632709980010986
    8. 'ijk' → logprob: -4.757709980010986
    9. 'ik' → logprob: -4.882709980010986
    10. '                   ' → logprob: -5.132709980010986

Token 980: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007236736360937357
    2. ' distances' → logprob: -5.507236957550049
    3. '(dist' → logprob: -6.257236957550049
    4. '               ' → logprob: -8.25723648071289
    5. 'def' → logprob: -8.38223648071289
    6. '((' → logprob: -9.25723648071289
    7. '           ' → logprob: -9.25723648071289
    8. 'if' → logprob: -9.25723648071289
    9. 'distance' → logprob: -9.63223648071289
    10. '(
' → logprob: -9.88223648071289

Token 981: ' dict' (ID: 11878)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1985960304737091
    2. 'token' → logprob: -2.8235960006713867
    3. '                   ' → logprob: -4.073596000671387
    4. '[token' → logprob: -4.073596000671387
    5. '(token' → logprob: -4.448596000671387
    6. ')' → logprob: -4.448596000671387
    7. ' (' → logprob: -4.948596000671387
    8. '           ' → logprob: -4.948596000671387
    9. ' =' → logprob: -5.073596000671387
    10. ',' → logprob: -5.323596000671387

Token 982: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03061632812023163
    2. 'token' → logprob: -4.030616283416748
    3. '                ' → logprob: -5.905616283416748
    4. ' if' → logprob: -6.030616283416748
    5. '<|end|>' → logprob: -6.405616283416748
    6. '                
' → logprob: -6.780616283416748
    7. 'if' → logprob: -7.405616283416748
    8. ',' → logprob: -7.655616283416748
    9. 'tokens' → logprob: -7.905616283416748
    10. '<|end|>' → logprob: -8.030616760253906

Token 983: 'attention' (ID: 126213)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5178824663162231
    2. 'if' → logprob: -2.0178823471069336
    3. 'dist' → logprob: -2.0178823471069336
    4. 'key' → logprob: -3.0178823471069336
    5. ')' → logprob: -3.3928823471069336
    6. 'di' → logprob: -3.8928823471069336
    7. '               ' → logprob: -4.642882347106934
    8. 'd' → logprob: -5.517882347106934
    9. 'xi' → logprob: -6.017882347106934
    10. '#' → logprob: -6.142882347106934

Token 984: ' aux' (ID: 5850)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6510483026504517
    2. ')' → logprob: -1.4010483026504517
    3. '               ' → logprob: -2.276048183441162
    4. 'if' → logprob: -3.026048183441162
    5. '                   ' → logprob: -3.526048183441162
    6. ',' → logprob: -4.526048183441162
    7. ' (' → logprob: -4.901048183441162
    8. ' )' → logprob: -5.651048183441162
    9. ' k' → logprob: -5.901048183441162
    10. ' =' → logprob: -6.151048183441162

Token 985: ' indices' (ID: 30378)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.1746941804885864
    2. '(i' → logprob: -1.2996941804885864
    3. 'min' → logprob: -1.4246941804885864
    4. '(x' → logprob: -2.924694061279297
    5. 'sorted' → logprob: -3.424694061279297
    6. 'i' → logprob: -3.674694061279297
    7. 'k' → logprob: -3.924694061279297
    8. 'tuple' → logprob: -4.049694061279297
    9. '(min' → logprob: -4.174694061279297
    10. 'x' → logprob: -4.799694061279297

Token 986: ' ordre' (ID: 103061)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32288506627082825
    2. '               ' → logprob: -2.072885036468506
    3. 'if' → logprob: -2.947885036468506
    4. ')
' → logprob: -3.197885036468506
    5. ' if' → logprob: -3.572885036468506
    6. '):
' → logprob: -4.322885036468506
    7. '):' → logprob: -5.572885036468506
    8. '                   ' → logprob: -5.572885036468506
    9. ',' → logprob: -5.697885036468506
    10. ' (' → logprob: -7.322885036468506

Token 987: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47910627722740173
    2. ')' → logprob: -1.3541063070297241
    3. ',' → logprob: -3.7291061878204346
    4. '):' → logprob: -4.104106426239014
    5. '               ' → logprob: -4.229106426239014
    6. '=' → logprob: -4.354106426239014
    7. ')
' → logprob: -4.479106426239014
    8. '                   ' → logprob: -4.979106426239014
    9. '):

' → logprob: -5.354106426239014
    10. '),' → logprob: -5.854106426239014

Token 988: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031470584217458963
    2. 'token' → logprob: -6.503147125244141
    3. '<|end|>' → logprob: -7.878147125244141
    4. '                ' → logprob: -8.37814712524414
    5. ' if' → logprob: -8.50314712524414
    6. 'tokens' → logprob: -8.75314712524414
    7. '                   ' → logprob: -9.00314712524414
    8. ' token' → logprob: -9.62814712524414
    9. '                
' → logprob: -9.75314712524414
    10. ' tokens' → logprob: -9.75314712524414

Token 989: ' def' (ID: 1056)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9765951633453369
    2. 'dist' → logprob: -1.226595163345337
    3. 'di' → logprob: -1.976595163345337
    4. 'if' → logprob: -2.351595163345337
    5. 'def' (adapté à ' def') → logprob: -2.976595163345337
    6. 'd' → logprob: -3.851595163345337
    7. 'key' → logprob: -5.101594924926758
    8. 'i' → logprob: -5.476594924926758
    9. 'idx' → logprob: -6.101594924926758
    10. 'xi' → logprob: -6.601594924926758

Token 990: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.017662493512034416
    2. 'dist' → logprob: -4.392662525177002
    3. 'key' → logprob: -5.517662525177002
    4. 'def' → logprob: -8.142662048339844
    5. 'distance' → logprob: -8.517662048339844
    6. ' get' → logprob: -8.642662048339844
    7. 'fetch' → logprob: -8.642662048339844
    8. 'd' → logprob: -8.642662048339844
    9. '_get' → logprob: -10.517662048339844
    10. 'lookup' → logprob: -10.892662048339844

Token 991: '_dist' (ID: 37968)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.018552683293819427
    2. 'd' → logprob: -4.268552780151367
    3. 'key' → logprob: -6.268552780151367
    4. '_dist' → logprob: -6.768552780151367
    5. 'distance' → logprob: -7.393552780151367
    6. 'def' → logprob: -7.393552780151367
    7. '_distance' → logprob: -9.768552780151367
    8. '_key' → logprob: -11.018552780151367
    9. '(key' → logprob: -11.768552780151367
    10. 'D' → logprob: -12.393552780151367

Token 992: '(x' (ID: 4061)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.6401962637901306
    2. '(a' → logprob: -1.5151963233947754
    3. '(x' → logprob: -1.6401963233947754
    4. '(i' → logprob: -2.8901963233947754
    5. '(key' → logprob: -7.015196323394775
    6. '(idx' → logprob: -7.515196323394775
    7. '(u' → logprob: -7.640196323394775
    8. '(c' → logprob: -7.890196323394775
    9. '(cluster' → logprob: -8.265195846557617
    10. '(' → logprob: -9.015195846557617

Token 993: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30709952116012573
    2. ',x' → logprob: -1.8070995807647705
    3. ',k' → logprob: -2.4320995807647705
    4. ',y' → logprob: -5.682099342346191
    5. ' ,' → logprob: -6.057099342346191
    6. '                   ' → logprob: -6.557099342346191
    7. '(x' → logprob: -6.557099342346191
    8. '               ' → logprob: -6.807099342346191
    9. '):
' → logprob: -7.307099342346191
    10. '(k' → logprob: -7.557099342346191

Token 994: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1693403124809265
    2. '):' → logprob: -2.0443403720855713
    3. '(x' → logprob: -3.6693403720855713
    4. '                   ' → logprob: -8.169340133666992
    5. '):
' → logprob: -9.044340133666992
    6. '               ' → logprob: -9.794340133666992
    7. '           ' → logprob: -9.919340133666992
    8. '(k' → logprob: -10.044340133666992
    9. '(i' → logprob: -10.169340133666992
    10. '):

' → logprob: -10.419340133666992

Token 995: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05670372024178505
    2. '                       ' → logprob: -3.056703805923462
    3. '               ' → logprob: -6.306703567504883
    4. '                                           ' → logprob: -6.431703567504883
    5. ' if' → logprob: -6.806703567504883
    6. 'if' → logprob: -7.431703567504883
    7. '                    ' → logprob: -7.931703567504883
    8. '   ' → logprob: -7.931703567504883
    9. '           ' → logprob: -8.056703567504883
    10. '                           ' → logprob: -8.056703567504883

Token 996: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02384292334318161
    2. '                       ' → logprob: -4.023842811584473
    3. ' if' → logprob: -5.898842811584473
    4. 'return' → logprob: -6.148842811584473
    5. '                   ' → logprob: -7.273842811584473
    6. '   ' → logprob: -9.898842811584473
    7. '       ' → logprob: -10.898842811584473
    8. '	if' → logprob: -11.273842811584473
    9. 'x' → logprob: -12.023842811584473
    10. '           ' → logprob: -12.773842811584473

Token 997: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7051753997802734
    2. ',b' → logprob: -0.7051753997802734
    3. '=' → logprob: -4.705175399780273
    4. 'b' → logprob: -6.330175399780273
    5. ',y' → logprob: -8.205175399780273
    6. ' =' → logprob: -8.330175399780273
    7. ',a' → logprob: -8.580175399780273
    8. ',max' → logprob: -9.330175399780273
    9. 'a' → logprob: -9.830175399780273
    10. ',x' → logprob: -9.955175399780273

Token 998: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00027456742827780545
    2. ' =' → logprob: -8.375274658203125
    3. '=min' → logprob: -10.875274658203125
    4. '=max' → logprob: -11.375274658203125
    5. '=x' → logprob: -11.750274658203125
    6. '=a' → logprob: -12.500274658203125
    7. '=(' → logprob: -13.500274658203125
    8. '   ' → logprob: -15.375274658203125
    9. '=int' → logprob: -16.875274658203125
    10. '=k' → logprob: -16.875274658203125

Token 999: ' min' (ID: 1349)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.43317145109176636
    2. 'min' → logprob: -1.4331715106964111
    3. '(x' → logprob: -2.183171510696411
    4. ' min' → logprob: -8.683171272277832
    5. 'sorted' → logprob: -9.558171272277832
    6. 'x' → logprob: -10.183171272277832
    7. ' (' → logprob: -11.058171272277832
    8. '(sorted' → logprob: -11.683171272277832
    9. '   ' → logprob: -12.308171272277832
    10. '(max' → logprob: -13.058171272277832

Token 1000: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.003184959525242448
    2. 'x' → logprob: -5.753184795379639
    3. '(' → logprob: -12.128185272216797
    4. ' (' → logprob: -14.503185272216797
    5. '(
' → logprob: -14.503185272216797
    6. ' x' → logprob: -15.503185272216797
    7. ',x' → logprob: -15.753185272216797
    8. '((' → logprob: -15.878185272216797
    9. '(i' → logprob: -16.378185272216797
    10. '(a' → logprob: -16.628185272216797

Token 1001: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0059424289502203465
    2. ',x' → logprob: -5.380942344665527
    3. ',' → logprob: -7.255942344665527
    4. ',b' → logprob: -8.505942344665527
    5. ',k' → logprob: -8.505942344665527
    6. ',a' → logprob: -9.130942344665527
    7. '(x' → logprob: -10.130942344665527
    8. '(y' → logprob: -11.005942344665527
    9. 'y' → logprob: -11.005942344665527
    10. 'a' → logprob: -11.380942344665527

Token 1002: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0017979926196858287
    2. ',' → logprob: -6.626798152923584
    3. '                   ' → logprob: -8.126797676086426
    4. '),(' → logprob: -9.501797676086426
    5. ',y' → logprob: -10.126797676086426
    6. ',b' → logprob: -10.626797676086426
    7. ',x' → logprob: -11.751797676086426
    8. '               ' → logprob: -12.001797676086426
    9. ',a' → logprob: -12.626797676086426
    10. ',j' → logprob: -12.751797676086426

Token 1003: ' max' (ID: 2999)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1004: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0004909569397568703
    2. 'x' → logprob: -7.625491142272949
    3. '(' → logprob: -13.12549114227295
    4. ' (' → logprob: -14.25049114227295
    5. 'a' → logprob: -16.375490188598633
    6. ' x' → logprob: -17.250490188598633
    7. '```' → logprob: -17.500490188598633
    8. '(a' → logprob: -17.625490188598633
    9. '(
' → logprob: -18.000490188598633
    10. '   ' → logprob: -18.375490188598633

Token 1005: ',y' (ID: 16103)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014552337117493153
    2. '(x' → logprob: -4.264552116394043
    3. 'y' → logprob: -8.514552116394043
    4. '(y' → logprob: -9.514552116394043
    5. ',x' → logprob: -9.764552116394043
    6. ',y' → logprob: -11.014552116394043
    7. ')' → logprob: -11.389552116394043
    8. '{x' → logprob: -11.764552116394043
    9. ')x' → logprob: -12.014552116394043
    10. ' x' → logprob: -12.139552116394043

Token 1006: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14457781612873077
    2. ')' → logprob: -2.019577741622925
    3. '                   ' → logprob: -6.894577980041504
    4. ')
' → logprob: -7.769577980041504
    5. '):
' → logprob: -8.394577980041504
    6. '),' → logprob: -10.269577980041504
    7. '               ' → logprob: -10.394577980041504
    8. ');' → logprob: -10.519577980041504
    9. ')return' → logprob: -11.269577980041504
    10. '<|end|>' → logprob: -11.394577980041504

Token 1007: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1737680435180664
    2. '                       ' → logprob: -2.0487680435180664
    3. ':' → logprob: -4.048768043518066
    4. ':
' → logprob: -5.548768043518066
    5. '               ' → logprob: -6.173768043518066
    6. ' :' → logprob: -6.298768043518066
    7. '   ' → logprob: -6.923768043518066
    8. '       ' → logprob: -7.298768043518066
    9. '           ' → logprob: -7.673768043518066
    10. ' if' → logprob: -7.923768043518066

Token 1008: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3781106173992157
    2. 'return' (adapté à ' return') → logprob: -1.628110647201538
    3. ' if' → logprob: -3.003110647201538
    4. 'if' → logprob: -3.128110647201538
    5. ' return' → logprob: -3.753110647201538
    6. '                       ' → logprob: -7.378110408782959
    7. '               ' → logprob: -8.003110885620117
    8. '   ' → logprob: -8.253110885620117
    9. '           ' → logprob: -9.253110885620117
    10. 'token' → logprob: -9.253110885620117

Token 1009: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0019311357755213976
    2. ' distances' → logprob: -6.251931190490723
    3. '(dist' → logprob: -13.501931190490723
    4. ' dist' → logprob: -14.001931190490723
    5. 'distance' → logprob: -16.626930236816406
    6. '   ' → logprob: -16.751930236816406
    7. '	dist' → logprob: -16.751930236816406
    8. '0' → logprob: -17.126930236816406
    9. '                   ' → logprob: -18.001930236816406
    10. '.dist' → logprob: -18.501930236816406

Token 1010: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.08012465387582779
    2. '.get' → logprob: -2.580124616622925
    3. '(a' → logprob: -7.080124855041504
    4. '((' → logprob: -8.205124855041504
    5. 'get' → logprob: -10.080124855041504
    6. '(get' → logprob: -10.205124855041504
    7. '(' → logprob: -11.330124855041504
    8. '[a' → logprob: -11.455124855041504
    9. '[' → logprob: -11.955124855041504
    10. '   ' → logprob: -12.955124855041504

Token 1011: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2664456789934775e-06
    2. ' a' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.125000953674316
    4. '                   ' → logprob: -16.625001907348633
    5. '(a' → logprob: -17.250001907348633
    6. ')a' → logprob: -18.125001907348633
    7. ')' → logprob: -18.250001907348633
    8. '           ' → logprob: -18.375001907348633
    9. '	a' → logprob: -18.625001907348633
    10. '               ' → logprob: -18.625001907348633

Token 1012: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -1.1284551620483398
    2. ',' → logprob: -1.2534551620483398
    3. ',x' → logprob: -1.2534551620483398
    4. 'a' → logprob: -3.00345516204834
    5. ',a' → logprob: -4.00345516204834
    6. 'x' → logprob: -4.25345516204834
    7. ',y' → logprob: -4.37845516204834
    8. ',k' → logprob: -5.12845516204834
    9. 'b' → logprob: -5.50345516204834
    10. '),' → logprob: -8.50345516204834

Token 1013: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.23917081207037e-05
    2. ')]
' → logprob: -10.500041961669922
    3. ')])' → logprob: -12.000041961669922
    4. '                   ' → logprob: -12.750041961669922
    5. ')],' → logprob: -13.500041961669922
    6. ')' → logprob: -13.875041961669922
    7. ')][' → logprob: -14.375041961669922
    8. '')]' → logprob: -14.625041961669922
    9. '               ' → logprob: -14.750041961669922
    10. ' )' → logprob: -14.750041961669922

Token 1014: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3361778259277344
    2. ')' → logprob: -1.4611778259277344
    3. '                   ' → logprob: -4.461177825927734
    4. '<|end|>' → logprob: -4.586177825927734
    5. '                ' → logprob: -4.961177825927734
    6. '                
' → logprob: -5.461177825927734
    7. ':' → logprob: -6.211177825927734
    8. '                               ' → logprob: -6.336177825927734
    9. '                       ' → logprob: -6.461177825927734
    10. '           ' → logprob: -6.461177825927734

Token 1015: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07278364151716232
    2. 'a' → logprob: -2.6977837085723877
    3. '(x' → logprob: -6.197783470153809
    4. ' (' → logprob: -7.447783470153809
    5. '   ' → logprob: -9.572783470153809
    6. 'x' → logprob: -9.822783470153809
    7. '(' → logprob: -10.572783470153809
    8. 'get' → logprob: -11.072783470153809
    9. ' a' → logprob: -11.697783470153809
    10. '(b' → logprob: -11.822783470153809

Token 1016: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.214019307051785e-05
    2. 'x' → logprob: -10.625032424926758
    3. '   ' → logprob: -13.000032424926758
    4. ' a' → logprob: -13.250032424926758
    5. '(a' → logprob: -13.750032424926758
    6. '                   ' → logprob: -14.000032424926758
    7. '                           ' → logprob: -15.250032424926758
    8. 'def' → logprob: -15.500032424926758
    9. '           ' → logprob: -15.500032424926758
    10. ')' → logprob: -15.625032424926758

Token 1017: ',b' (ID: 17568)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04757655784487724
    2. ',a' → logprob: -3.922576665878296
    3. ',b' → logprob: -5.047576427459717
    4. ',' → logprob: -5.172576427459717
    5. '!=' → logprob: -5.547576427459717
    6. '==' → logprob: -5.797576427459717
    7. 'x' → logprob: -6.047576427459717
    8. ',x' → logprob: -6.422576427459717
    9. ',k' → logprob: -7.047576427459717
    10. ' !=' → logprob: -7.297576427459717

Token 1018: ')' (ID: 8)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5663625597953796
    2. ')' → logprob: -1.3163626194000244
    3. ' in' → logprob: -1.8163626194000244
    4. ')]' → logprob: -7.066362380981445
    5. ']' → logprob: -8.441362380981445
    6. '])' → logprob: -8.816362380981445
    7. '<|end|>' → logprob: -9.191362380981445
    8. '[' → logprob: -9.691362380981445
    9. '   ' → logprob: -10.066362380981445
    10. '<|end|>' → logprob: -10.441362380981445

Token 1019: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02630726806819439
    2. ' in' → logprob: -3.6513073444366455
    3. '
' → logprob: -13.401307106018066
    4. '```' → logprob: -14.276307106018066
    5. '[' → logprob: -14.401307106018066
    6. ')' → logprob: -14.401307106018066
    7. 'else' → logprob: -14.776307106018066
    8. ' ' → logprob: -14.776307106018066
    9. '<|end|>' → logprob: -15.026307106018066
    10. 'a' → logprob: -15.401307106018066

Token 1020: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00015872348740231246
    2. ' distances' → logprob: -8.750158309936523
    3. 'distance' → logprob: -16.125158309936523
    4. '   ' → logprob: -17.500158309936523
    5. '.dist' → logprob: -17.750158309936523
    6. ' dist' → logprob: -17.875158309936523
    7. '_dist' → logprob: -18.000158309936523
    8. '	dist' → logprob: -18.250158309936523
    9. '(dist' → logprob: -18.375158309936523
    10. 'dict' → logprob: -18.875158309936523

Token 1021: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6951132416725159
    2. 'else' → logprob: -0.6951132416725159
    3. '                   ' → logprob: -6.445113182067871
    4. '               ' → logprob: -9.445113182067871
    5. '                    ' → logprob: -9.945113182067871
    6. '                       ' → logprob: -10.070113182067871
    7. '<|end|>' → logprob: -10.195113182067871
    8. '           ' → logprob: -10.445113182067871
    9. '	else' → logprob: -10.820113182067871
    10. '        ' → logprob: -11.445113182067871

Token 1022: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011517672101035714
    2. 'dist' → logprob: -8.001152038574219
    3. 'None' → logprob: -8.126152038574219
    4. ' ' → logprob: -9.126152038574219
    5. 'float' → logprob: -9.251152038574219
    6. '(' → logprob: -9.251152038574219
    7. 'clusters' → logprob: -9.251152038574219
    8. 'new' → logprob: -10.501152038574219
    9. '   ' → logprob: -11.563652038574219
    10. 'abs' → logprob: -11.876152038574219

Token 1023: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8233259320259094
    2. ')' → logprob: -1.8233258724212646
    3. '<|end|>' → logprob: -1.9483258724212646
    4. ':' → logprob: -2.1983258724212646
    5. '):' → logprob: -4.198326110839844
    6. '                   ' → logprob: -4.323326110839844
    7. '
' → logprob: -4.323326110839844
    8. '):
' → logprob: -4.448326110839844
    9. '                
' → logprob: -4.573326110839844
    10. '                               ' → logprob: -4.698326110839844

Token 1024: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07908343523740768
    2. ' 
' → logprob: -4.079083442687988
    3. '                
' → logprob: -4.454083442687988
    4. '                ' → logprob: -5.204083442687988
    5. '                               ' → logprob: -5.329083442687988
    6. ')' → logprob: -5.454083442687988
    7. '<|end|>' → logprob: -5.454083442687988
    8. '                   ' → logprob: -5.954083442687988
    9. '       ' → logprob: -6.204083442687988
    10. '  
' → logprob: -6.329083442687988

Token 1025: ' di' (ID: 1320)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001709209755063057
    2. ' new' → logprob: -7.376708984375
    3. ' if' → logprob: -8.376708984375
    4. '                   ' → logprob: -9.001708984375
    5. '                
' → logprob: -9.001708984375
    6. 'new' → logprob: -9.251708984375
    7. 'token' → logprob: -9.376708984375
    8. '                ' → logprob: -9.501708984375
    9. '			' → logprob: -9.501708984375
    10. '       ' → logprob: -10.251708984375

Token 1026: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.039966460317373276
    2. ' =' → logprob: -4.164966583251953
    3. 's' → logprob: -4.414966583251953
    4. ',' → logprob: -5.414966583251953
    5. 'k' → logprob: -5.914966583251953
    6. '=' → logprob: -6.664966583251953
    7. 'sti' → logprob: -7.414966583251953
    8. 'stk' → logprob: -7.664966583251953
    9. '_st' → logprob: -7.914966583251953
    10. ',k' → logprob: -8.289966583251953

Token 1027: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.008663851767778397
    2. ' get' → logprob: -4.758663654327393
    3. '               ' → logprob: -11.50866413116455
    4. '(get' → logprob: -12.00866413116455
    5. '   ' → logprob: -12.13366413116455
    6. ' ' → logprob: -12.13366413116455
    7. '                   ' → logprob: -12.25866413116455
    8. '  ' → logprob: -12.75866413116455
    9. 'k' → logprob: -12.88366413116455
    10. '           ' → logprob: -13.13366413116455

Token 1028: '_dist' (ID: 37968)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47284093499183655
    2. 'ist' → logprob: -1.3478409051895142
    3. 'dist' → logprob: -2.8478410243988037
    4. 'st' → logprob: -3.2228410243988037
    5. 'istance' → logprob: -5.097840785980225
    6. '_dist' → logprob: -5.347840785980225
    7. '(i' → logprob: -5.472840785980225
    8. ' i' → logprob: -6.972840785980225
    9. 'inst' → logprob: -7.597840785980225
    10. 'ists' → logprob: -7.847840785980225

Token 1029: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31843310594558716
    2. '(i' → logprob: -1.3184330463409424
    3. '               ' → logprob: -5.9434332847595215
    4. '                   ' → logprob: -6.6934332847595215
    5. ' i' → logprob: -7.6934332847595215
    6. 'clusters' → logprob: -8.068432807922363
    7. '           ' → logprob: -8.818432807922363
    8. '   ' → logprob: -9.693432807922363
    9. ' (' → logprob: -10.193432807922363
    10. 'k' → logprob: -10.193432807922363

Token 1030: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.026456471532583237
    2. ',' → logprob: -3.651456356048584
    3. ' ,' → logprob: -9.651456832885742
    4. ',i' → logprob: -10.401456832885742
    5. ',j' → logprob: -10.651456832885742
    6. 'k' → logprob: -11.276456832885742
    7. '   ' → logprob: -12.651456832885742
    8. ',n' → logprob: -12.776456832885742
    9. ',
' → logprob: -13.276456832885742
    10. ',x' → logprob: -13.401456832885742

Token 1031: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.34943509101867676
    2. ')' → logprob: -1.2244350910186768
    3. ')
' → logprob: -8.224434852600098
    4. ')*' → logprob: -8.349434852600098
    5. ' )
' → logprob: -8.599434852600098
    6. '               ' → logprob: -8.974434852600098
    7. '                   ' → logprob: -9.849434852600098
    8. ' )' → logprob: -9.849434852600098
    9. '           ' → logprob: -10.849434852600098
    10. ')+' → logprob: -11.599434852600098

Token 1032: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004546658135950565
    2. ' dj' → logprob: -6.629546642303467
    3. '                ' → logprob: -7.129546642303467
    4. 'dj' → logprob: -7.129546642303467
    5. ' d' → logprob: -7.379546642303467
    6. '                
' → logprob: -7.504546642303467
    7. 'd' → logprob: -9.004547119140625
    8. ' if' → logprob: -9.879547119140625
    9. '              ' → logprob: -10.004547119140625
    10. '                   ' → logprob: -10.129547119140625

Token 1033: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' (adapté à ' dj') → logprob: -0.0355306975543499
    2. '               ' → logprob: -3.5355308055877686
    3. ' dj' → logprob: -5.2855305671691895
    4. '                   ' → logprob: -7.2855305671691895
    5. '.dj' → logprob: -12.535531044006348
    6. '                       ' → logprob: -12.660531044006348
    7. '   ' → logprob: -13.660531044006348
    8. '                ' → logprob: -14.035531044006348
    9. '       ' → logprob: -14.035531044006348
    10. '           ' → logprob: -14.160531044006348

Token 1034: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16042639315128326
    2. '=' → logprob: -1.910426378250122
    3. '=get' → logprob: -8.535426139831543
    4. '               ' → logprob: -13.535426139831543
    5. '                   ' → logprob: -14.035426139831543
    6. '                ' → logprob: -14.160426139831543
    7. '=None' → logprob: -14.160426139831543
    8. ' ' → logprob: -14.285426139831543
    9. '            ' → logprob: -14.660426139831543
    10. '           ' → logprob: -15.160426139831543

Token 1035: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0009151478880085051
    2. ' get' → logprob: -7.000915050506592
    3. '(get' → logprob: -12.75091552734375
    4. '.get' → logprob: -15.37591552734375
    5. 'j' → logprob: -15.75091552734375
    6. '               ' → logprob: -16.25091552734375
    7. '=get' → logprob: -16.37591552734375
    8. '   ' → logprob: -16.75091552734375
    9. '	get' → logprob: -16.75091552734375
    10. '[get' → logprob: -16.75091552734375

Token 1036: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.20231574773788452
    2. 'dist' → logprob: -1.7023158073425293
    3. 'Dist' → logprob: -7.077315807342529
    4. 'j' → logprob: -10.952315330505371
    5. '(dist' → logprob: -11.702315330505371
    6. '(j' → logprob: -11.827315330505371
    7. '(k' → logprob: -11.827315330505371
    8. '-dist' → logprob: -12.702315330505371
    9. '(' → logprob: -13.077315330505371
    10. 'get' → logprob: -13.077315330505371

Token 1037: '(j' (ID: 4997)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2521371841430664
    2. '(j' → logprob: -1.5021371841430664
    3. '                   ' → logprob: -9.377137184143066
    4. ' j' → logprob: -10.377137184143066
    5. '               ' → logprob: -11.127137184143066
    6. '	j' → logprob: -11.252137184143066
    7. '[j' → logprob: -11.502137184143066
    8. ',j' → logprob: -11.502137184143066
    9. ' (' → logprob: -11.752137184143066
    10. '   ' → logprob: -12.127137184143066

Token 1038: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.0018877071561291814
    2. 'k' → logprob: -6.876887798309326
    3. ',' → logprob: -7.251887798309326
    4. ',j' → logprob: -9.251887321472168
    5. ',d' → logprob: -10.876887321472168
    6. ' ,' → logprob: -11.751887321472168
    7. '(k' → logprob: -12.251887321472168
    8. '               ' → logprob: -12.751887321472168
    9. ',
' → logprob: -13.001887321472168
    10. '                   ' → logprob: -13.001887321472168

Token 1039: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45182475447654724
    2. ')
' → logprob: -1.3268247842788696
    3. '               ' → logprob: -2.32682466506958
    4. ' )
' → logprob: -9.201825141906738
    5. ' )' → logprob: -9.201825141906738
    6. ')
' → logprob: -9.451825141906738
    7. '):
' → logprob: -10.201825141906738
    8. ' if' → logprob: -10.201825141906738
    9. ')*' → logprob: -10.326825141906738
    10. '                   ' → logprob: -10.701825141906738

Token 1040: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018222624203190207
    2. '                ' → logprob: -7.251822471618652
    3. '                
' → logprob: -7.876822471618652
    4. ' if' → logprob: -8.251822471618652
    5. ' ' → logprob: -8.876822471618652
    6. '                   ' → logprob: -9.251822471618652
    7. '              ' → logprob: -10.626822471618652
    8. ' new' → logprob: -10.626822471618652
    9. '			' → logprob: -10.751822471618652
    10. '                               ' → logprob: -10.876822471618652

Token 1041: ' size' (ID: 2349)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3561835289001465
    2. '               ' → logprob: -1.3561835289001465
    3. ' new' → logprob: -3.9811835289001465
    4. 'if' → logprob: -4.2311835289001465
    5. ' distances' → logprob: -5.6061835289001465
    6. 'new' → logprob: -6.2311835289001465
    7. 'dist' → logprob: -6.4811835289001465
    8. ' dist' → logprob: -6.9811835289001465
    9. ' distance' → logprob: -8.606184005737305
    10. 'distance' → logprob: -8.731184005737305

Token 1042: '_i' (ID: 10853)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6918879151344299
    2. '_i' → logprob: -0.8168879151344299
    3. '=' → logprob: -3.691887855529785
    4. ' =' → logprob: -4.066887855529785
    5. 'k' → logprob: -5.191887855529785
    6. '_k' → logprob: -5.816887855529785
    7. '               ' → logprob: -6.191887855529785
    8. 's' → logprob: -6.441887855529785
    9. '                   ' → logprob: -7.441887855529785
    10. 'x' → logprob: -7.566887855529785

Token 1043: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5934662222862244
    2. ' =' → logprob: -0.8434662222862244
    3. '=size' → logprob: -4.593466281890869
    4. '               ' → logprob: -6.093466281890869
    5. '                   ' → logprob: -6.343466281890869
    6. '+' → logprob: -6.843466281890869
    7. ' +' → logprob: -8.218465805053711
    8. '=k' → logprob: -8.343465805053711
    9. ',' → logprob: -8.468465805053711
    10. '           ' → logprob: -8.718465805053711

Token 1044: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.0015616427408531308
    2. ' clusters' → logprob: -6.501561641693115
    3. 'cl' → logprob: -10.626562118530273
    4. '   ' → logprob: -10.751562118530273
    5. '           ' → logprob: -12.126562118530273
    6. '       ' → logprob: -12.376562118530273
    7. 'cluster' → logprob: -13.501562118530273
    8. '               ' → logprob: -13.751562118530273
    9. '                   ' → logprob: -15.626562118530273
    10. ' ' → logprob: -16.126562118530273

Token 1045: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.18007254600524902
    2. 'i' → logprob: -1.805072546005249
    3. ' i' → logprob: -8.680072784423828
    4. '                   ' → logprob: -10.305072784423828
    5. '               ' → logprob: -10.430072784423828
    6. '   ' → logprob: -10.430072784423828
    7. 'k' → logprob: -11.680072784423828
    8. '[' → logprob: -11.680072784423828
    9. ' [' → logprob: -11.680072784423828
    10. '[k' → logprob: -11.680072784423828

Token 1046: '].' (ID: 1651)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.003644138341769576
    2. '].' → logprob: -5.628643989562988
    3. ').' → logprob: -10.378643989562988
    4. '               ' → logprob: -13.128643989562988
    5. 'size' → logprob: -13.378643989562988
    6. ' .' → logprob: -13.378643989562988
    7. '                   ' → logprob: -13.628643989562988
    8. '}.' → logprob: -13.628643989562988
    9. '   ' → logprob: -14.003643989562988
    10. '.length' → logprob: -14.503643989562988

Token 1047: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -3.857719275401905e-05
    2. ' size' → logprob: -10.250038146972656
    3. '.size' → logprob: -14.125038146972656
    4. ' ' → logprob: -14.250038146972656
    5. '```' → logprob: -14.250038146972656
    6. '   ' → logprob: -14.875038146972656
    7. '  ' → logprob: -15.375038146972656
    8. '	size' → logprob: -16.250038146972656
    9. '(size' → logprob: -16.625038146972656
    10. '[size' → logprob: -17.375038146972656

Token 1048: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04054758697748184
    2. '<|end|>' → logprob: -3.7905476093292236
    3. '                
' → logprob: -5.0405473709106445
    4. '                ' → logprob: -6.2905473709106445
    5. ',' → logprob: -6.7905473709106445
    6. '
' → logprob: -6.9155473709106445
    7. '<|end|>' → logprob: -6.9155473709106445
    8. '=' → logprob: -7.4155473709106445
    9. '                   ' → logprob: -7.6655473709106445
    10. '```' → logprob: -7.6655473709106445

Token 1049: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07672909647226334
    2. '```' → logprob: -3.2017290592193604
    3. '                ' → logprob: -3.9517290592193604
    4. ' size' → logprob: -5.3267292976379395
    5. '(size' → logprob: -6.0767292976379395
    6. 'size' → logprob: -6.4517292976379395
    7. '                               ' → logprob: -7.4517292976379395
    8. ' ' → logprob: -7.5767292976379395
    9. ',' → logprob: -7.5767292976379395
    10. '                
' → logprob: -7.7017292976379395

Token 1050: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' (adapté à ' size') → logprob: -0.06635630130767822
    2. ' size' → logprob: -2.8163561820983887
    3. '               ' → logprob: -5.441356182098389
    4. '                   ' → logprob: -10.566356658935547
    5. '                ' → logprob: -11.816356658935547
    6. '   ' → logprob: -13.316356658935547
    7. '```' → logprob: -13.316356658935547
    8. '           ' → logprob: -13.566356658935547
    9. '(size' → logprob: -13.941356658935547
    10. '	size' → logprob: -13.941356658935547

Token 1051: '_j' (ID: 12021)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.8747888803482056
    2. 'k' → logprob: -1.1247888803482056
    3. '=k' → logprob: -2.624788761138916
    4. '[i' → logprob: -2.999788761138916
    5. 'i' → logprob: -2.999788761138916
    6. '=' → logprob: -3.374788761138916
    7. ' =' → logprob: -4.249788761138916
    8. '(k' → logprob: -4.374788761138916
    9. '_i' → logprob: -4.374788761138916
    10. '=i' → logprob: -5.874788761138916

Token 1052: ' =' (ID: 314)
  Prédit: '=k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=k' → logprob: -1.258396029472351
    2. ' =' → logprob: -1.383396029472351
    3. '[k' → logprob: -1.508396029472351
    4. ',k' → logprob: -2.3833961486816406
    5. '=' → logprob: -2.5083961486816406
    6. ' k' → logprob: -4.008396148681641
    7. '<|end|>' → logprob: -4.383396148681641
    8. '               ' → logprob: -4.758396148681641
    9. '[' → logprob: -5.008396148681641
    10. '```' → logprob: -5.133396148681641

Token 1053: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.038046542555093765
    2. ' clusters' → logprob: -3.2880465984344482
    3. 'cl' → logprob: -12.413046836853027
    4. 'cluster' → logprob: -15.038046836853027
    5. '           ' → logprob: -15.538046836853027
    6. '               ' → logprob: -15.538046836853027
    7. '   ' → logprob: -16.28804588317871
    8. '(cl' → logprob: -16.53804588317871
    9. '_clusters' → logprob: -16.91304588317871
    10. '                   ' → logprob: -16.91304588317871

Token 1054: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5234155058860779
    2. 'j' → logprob: -0.8984155058860779
    3. ' j' → logprob: -8.773415565490723
    4. '                   ' → logprob: -10.148415565490723
    5. '   ' → logprob: -10.523415565490723
    6. '               ' → logprob: -11.523415565490723
    7. ',j' → logprob: -11.648415565490723
    8. '           ' → logprob: -11.898415565490723
    9. '[k' → logprob: -11.898415565490723
    10. '	j' → logprob: -11.898415565490723

Token 1055: '].' (ID: 1651)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.25854355096817017
    2. '].' → logprob: -1.5085434913635254
    3. ').' → logprob: -5.133543491363525
    4. ']' → logprob: -8.133543968200684
    5. 'size' → logprob: -8.508543968200684
    6. '                   ' → logprob: -10.258543968200684
    7. '               ' → logprob: -10.258543968200684
    8. ')' → logprob: -10.633543968200684
    9. '<|end|>' → logprob: -11.008543968200684
    10. ' size' → logprob: -11.258543968200684

Token 1056: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -4.723352049040841e-06
    2. ' size' → logprob: -12.500004768371582
    3. '   ' → logprob: -15.000004768371582
    4. 'j' → logprob: -15.125004768371582
    5. ' ' → logprob: -16.125003814697266
    6. '	size' → logprob: -16.750003814697266
    7. '```' → logprob: -17.000003814697266
    8. '  ' → logprob: -17.000003814697266
    9. '.size' → logprob: -17.500003814697266
    10. '       ' → logprob: -17.875003814697266

Token 1057: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00190293591003865
    2. ' =' → logprob: -6.876903057098389
    3. ' new' → logprob: -8.75190258026123
    4. '                
' → logprob: -8.75190258026123
    5. '<|end|>' → logprob: -9.00190258026123
    6. '                   ' → logprob: -9.75190258026123
    7. '=' → logprob: -10.00190258026123
    8. '                ' → logprob: -10.12690258026123
    9. '```' → logprob: -10.37690258026123
    10. ',' → logprob: -10.37690258026123

Token 1058: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019745498429983854
    2. ' new' → logprob: -7.126974582672119
    3. '                ' → logprob: -7.626974582672119
    4. '                   ' → logprob: -9.001974105834961
    5. '                
' → logprob: -9.001974105834961
    6. '                               ' → logprob: -9.126974105834961
    7. 'new' → logprob: -9.501974105834961
    8. '              ' → logprob: -10.376974105834961
    9. ' =' → logprob: -10.626974105834961
    10. ' ' → logprob: -10.876974105834961

Token 1059: ' if' (ID: 538)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6158583760261536
    2. '               ' → logprob: -1.3658583164215088
    3. ' dist' → logprob: -2.865858316421509
    4. ' distances' → logprob: -2.865858316421509
    5. 'new' → logprob: -3.615858316421509
    6. 'dist' → logprob: -3.740858316421509
    7. ' d' → logprob: -4.365858554840088
    8. ' distance' → logprob: -4.365858554840088
    9. 'distance' → logprob: -5.365858554840088
    10. ' if' → logprob: -5.865858554840088

Token 1060: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.04341418668627739
    2. ' di' → logprob: -3.1684141159057617
    3. '   ' → logprob: -8.293414115905762
    4. 'None' → logprob: -9.793414115905762
    5. ' None' → logprob: -10.043414115905762
    6. ' ' → logprob: -10.543414115905762
    7. '(di' → logprob: -11.293414115905762
    8. '  ' → logprob: -11.418414115905762
    9. '           ' → logprob: -12.918414115905762
    10. 'd' → logprob: -13.043414115905762

Token 1061: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11291377991437912
    2. 'is' → logprob: -2.2379138469696045
    3. '=' → logprob: -11.237914085388184
    4. 's' → logprob: -11.362914085388184
    5. '!=' → logprob: -11.612914085388184
    6. 'if' → logprob: -11.987914085388184
    7. ' ' → logprob: -12.112914085388184
    8. ')' → logprob: -12.237914085388184
    9. ' !=' → logprob: -12.362914085388184
    10. ' if' → logprob: -12.612914085388184

Token 1062: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16034039855003357
    2. ' not' → logprob: -1.910340428352356
    3. 'None' → logprob: -9.410340309143066
    4. 'Not' → logprob: -11.035340309143066
    5. '0' → logprob: -12.285340309143066
    6. '	not' → logprob: -12.410340309143066
    7. ' None' → logprob: -12.660340309143066
    8. 'n' → logprob: -13.535340309143066
    9. 'none' → logprob: -14.160340309143066
    10. '_not' → logprob: -14.535340309143066

Token 1063: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8902198672294617
    2. ' or' → logprob: -0.8902198672294617
    3. '                   ' → logprob: -2.2652199268341064
    4. ':
' → logprob: -3.0152199268341064
    5. '               ' → logprob: -4.765219688415527
    6. '=' → logprob: -5.015219688415527
    7. ' =' → logprob: -5.765219688415527
    8. ' and' → logprob: -6.140219688415527
    9. '                           ' → logprob: -6.640219688415527
    10. '                       ' → logprob: -6.765219688415527

Token 1064: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.003181159496307373
    2. ' dj' → logprob: -5.753180980682373
    3. '   ' → logprob: -13.128181457519531
    4. '.dj' → logprob: -14.003181457519531
    5. '  ' → logprob: -16.12818145751953
    6. ' ' → logprob: -16.12818145751953
    7. '    ' → logprob: -16.12818145751953
    8. '       ' → logprob: -16.87818145751953
    9. '                   ' → logprob: -17.12818145751953
    10. '
' → logprob: -17.25318145751953

Token 1065: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.020789211615920067
    2. 'is' → logprob: -3.89578914642334
    3. '==' → logprob: -9.02078914642334
    4. ')' → logprob: -10.27078914642334
    5. ' ==' → logprob: -11.02078914642334
    6. ' =' → logprob: -11.27078914642334
    7. '=None' → logprob: -11.52078914642334
    8. '=' → logprob: -11.52078914642334
    9. ' None' → logprob: -11.64578914642334
    10. '<|end|>' → logprob: -11.89578914642334

Token 1066: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.505351095460355e-05
    2. ' None' → logprob: -9.500075340270996
    3. '0' → logprob: -17.00007438659668
    4. '=None' → logprob: -17.37507438659668
    5. '_None' → logprob: -17.50007438659668
    6. 'none' → logprob: -17.87507438659668
    7. '(None' → logprob: -18.00007438659668
    8. '   ' → logprob: -18.87507438659668
    9. '.None' → logprob: -20.75007438659668
    10. 'not' → logprob: -20.75007438659668

Token 1067: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4406823515892029
    2. ':
' → logprob: -1.5656824111938477
    3. ':' → logprob: -2.0656824111938477
    4. '               ' → logprob: -4.940682411193848
    5. '=' → logprob: -5.440682411193848
    6. ' =' → logprob: -6.190682411193848
    7. '                       ' → logprob: -6.315682411193848
    8. '                           ' → logprob: -6.690682411193848
    9. '):
' → logprob: -6.815682411193848
    10. ' or' → logprob: -6.940682411193848

Token 1068: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02971172332763672
    2. ' =' → logprob: -4.779711723327637
    3. '                       ' → logprob: -5.279711723327637
    4. '               ' → logprob: -5.404711723327637
    5. '                           ' → logprob: -5.904711723327637
    6. '                               ' → logprob: -6.029711723327637
    7. '=' → logprob: -6.779711723327637
    8. '                    ' → logprob: -7.279711723327637
    9. ',' → logprob: -7.529711723327637
    10. ':' → logprob: -8.029711723327637

Token 1069: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5741704106330872
    2. '                   ' → logprob: -1.1991703510284424
    3. ' continue' → logprob: -2.5741703510284424
    4. ' distances' → logprob: -3.9491703510284424
    5. 'dist' → logprob: -4.0741705894470215
    6. '                               ' → logprob: -4.9491705894470215
    7. '                       ' → logprob: -5.1991705894470215
    8. '               ' → logprob: -5.5741705894470215
    9. 'di' → logprob: -6.5741705894470215
    10. '0' → logprob: -6.9491705894470215

Token 1070: ' Peut' (ID: 116891)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3783090114593506
    2. '                   ' → logprob: -2.2533090114593506
    3. 'dist' → logprob: -2.5033090114593506
    4. '#' → logprob: -2.7533090114593506
    5. 'di' → logprob: -2.8783090114593506
    6. '               ' → logprob: -5.37830924987793
    7. '                       ' → logprob: -6.62830924987793
    8. ' continue' → logprob: -7.75330924987793
    9. 'dj' → logprob: -7.87830924987793
    10. ' distances' → logprob: -8.00330924987793

Token 1071: ' arriver' (ID: 78302)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.2706601917743683
    2. '                   ' → logprob: -2.270660161972046
    3. '                       ' → logprob: -2.770660161972046
    4. '               ' → logprob: -4.020660400390625
    5. '                           ' → logprob: -4.770660400390625
    6. '   ' → logprob: -4.770660400390625
    7. 'continue' → logprob: -5.145660400390625
    8. ' être' → logprob: -5.395660400390625
    9. '```' → logprob: -6.020660400390625
    10. '-être' → logprob: -6.145660400390625

Token 1072: ' quand' (ID: 18026)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2901155948638916
    2. '                       ' → logprob: -2.5401155948638916
    3. ' if' → logprob: -2.7901155948638916
    4. '               ' → logprob: -3.1651155948638916
    5. '                    ' → logprob: -3.9151155948638916
    6. '                           ' → logprob: -4.9151153564453125
    7. '                ' → logprob: -5.2901153564453125
    8. '                               ' → logprob: -5.2901153564453125
    9. '                        ' → logprob: -5.4151153564453125
    10. '                    
' → logprob: -5.6651153564453125

Token 1073: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10437808930873871
    2. 'i' → logprob: -3.2293779850006104
    3. 'clusters' → logprob: -3.4793779850006104
    4. 'new' → logprob: -5.1043782234191895
    5. ' k' → logprob: -5.2293782234191895
    6. ' clusters' → logprob: -5.6043782234191895
    7. ' i' → logprob: -6.1043782234191895
    8. 'x' → logprob: -6.4793782234191895
    9. 'active' → logprob: -6.7293782234191895
    10. 'len' → logprob: -6.8543782234191895

Token 1074: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1855354756116867
    2. ' ==' → logprob: -1.8105354309082031
    3. '>' → logprob: -6.435535430908203
    4. '>=' → logprob: -7.060535430908203
    5. ' not' → logprob: -7.185535430908203
    6. ',' → logprob: -7.810535430908203
    7. ' >' → logprob: -8.185535430908203
    8. 'not' → logprob: -8.310535430908203
    9. '!=' → logprob: -8.685535430908203
    10. ')' → logprob: -8.685535430908203

Token 1075: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0122278928756714
    2. 'next' → logprob: -1.1372278928756714
    3. 'new' → logprob: -1.8872278928756714
    4. 'k' → logprob: -2.137228012084961
    5. ' next' → logprob: -3.387228012084961
    6. ' new' → logprob: -4.887228012084961
    7. ' i' → logprob: -6.137228012084961
    8. 'j' → logprob: -6.137228012084961
    9. ' k' → logprob: -8.012228012084961
    10. 'len' → logprob: -9.012228012084961

Token 1076: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0897020474076271
    2. '                   ' → logprob: -3.4647021293640137
    3. 'or' → logprob: -3.7147021293640137
    4. ' ou' → logprob: -3.7147021293640137
    5. '               ' → logprob: -5.964702129364014
    6. ',' → logprob: -6.339702129364014
    7. '                       ' → logprob: -7.964702129364014
    8. 'ou' → logprob: -8.214701652526855
    9. '
' → logprob: -8.464701652526855
    10. '           ' → logprob: -9.214701652526855

Token 1077: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012405688874423504
    2. 'k' → logprob: -4.512405872344971
    3. ' j' → logprob: -6.637405872344971
    4. '                   ' → logprob: -11.012405395507812
    5. ' k' → logprob: -11.387405395507812
    6. '               ' → logprob: -12.637405395507812
    7. '
' → logprob: -12.762405395507812
    8. '           ' → logprob: -13.137405395507812
    9. 'new' → logprob: -13.637405395507812
    10. '   ' → logprob: -13.637405395507812

Token 1078: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07580404728651047
    2. '               ' → logprob: -3.3258039951324463
    3. ' or' → logprob: -4.325804233551025
    4. ',' → logprob: -4.700804233551025
    5. '                       ' → logprob: -5.075804233551025
    6. ':' → logprob: -5.950804233551025
    7. ':
' → logprob: -6.200804233551025
    8. ' continue' → logprob: -7.200804233551025
    9. '           ' → logprob: -8.325803756713867
    10. '                    
' → logprob: -8.325803756713867

Token 1079: ' mais' (ID: 2899)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10302960127592087
    2. ' continue' → logprob: -2.978029489517212
    3. '                       ' → logprob: -4.228029727935791
    4. 'continue' → logprob: -4.353029727935791
    5. '               ' → logprob: -4.603029727935791
    6. '                               ' → logprob: -6.103029727935791
    7. '                           ' → logprob: -6.728029727935791
    8. ' ' → logprob: -6.978029727935791
    9. '```' → logprob: -7.228029727935791
    10. ' or' → logprob: -7.353029727935791

Token 1080: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6026245951652527
    2. ' continue' → logprob: -0.9776245951652527
    3. '                   ' → logprob: -2.9776246547698975
    4. '                       ' → logprob: -4.602624416351318
    5. '               ' → logprob: -5.977624416351318
    6. ' continues' → logprob: -6.352624416351318
    7. '                           ' → logprob: -6.352624416351318
    8. '```' → logprob: -6.602624416351318
    9. '                               ' → logprob: -6.727624416351318
    10. '#' → logprob: -6.727624416351318

Token 1081: ' év' (ID: 23692)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.12060503661632538
    2. 'continue' → logprob: -2.245604991912842
    3. ' n' → logprob: -6.745604991912842
    4. 'n' → logprob: -6.870604991912842
    5. '                   ' → logprob: -7.120604991912842
    6. '                               ' → logprob: -7.495604991912842
    7. ' continues' → logprob: -7.620604991912842
    8. 'k' → logprob: -7.745604991912842
    9. 'contin' → logprob: -7.745604991912842
    10. ' ne' → logprob: -7.745604991912842

Token 1082: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.00021402664424385875
    2. 'it' → logprob: -9.875213623046875
    3. 'ité' → logprob: -10.250213623046875
    4. 'vite' → logprob: -10.250213623046875
    5. '   ' → logprob: -10.375213623046875
    6. 'itera' → logprob: -11.000213623046875
    7. '       ' → logprob: -12.500213623046875
    8. 'iter' → logprob: -12.500213623046875
    9. '```' → logprob: -12.875213623046875
    10. 'itable' → logprob: -13.000213623046875

Token 1083: ' ces' (ID: 10532)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10341545939445496
    2. '                   ' → logprob: -2.9784154891967773
    3. 'contin' → logprob: -3.8534154891967773
    4. '               ' → logprob: -4.478415489196777
    5. ' continue' → logprob: -4.603415489196777
    6. '```' → logprob: -6.478415489196777
    7. '                       ' → logprob: -7.103415489196777
    8. 'pass' → logprob: -8.353415489196777
    9. '           ' → logprob: -8.353415489196777
    10. ' continues' → logprob: -8.603415489196777

Token 1084: ' cas' (ID: 2108)
  Prédit: ' cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.6628958582878113
    2. 'cases' → logprob: -1.287895917892456
    3. ' cas' → logprob: -1.662895917892456
    4. 'cas' → logprob: -4.537895679473877
    5. ' situations' → logprob: -6.287895679473877
    6. 'continue' → logprob: -6.412895679473877
    7. 'indices' → logprob: -6.662895679473877
    8. ' distances' → logprob: -7.412895679473877
    9. 'contin' → logprob: -7.912895679473877
    10. '=' → logprob: -8.162896156311035

Token 1085: ' en' (ID: 469)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42145586013793945
    2. '                   ' → logprob: -1.1714558601379395
    3. ' or' → logprob: -4.2964558601379395
    4. ',' → logprob: -4.7964558601379395
    5. '                       ' → logprob: -6.1714558601379395
    6. '```' → logprob: -6.6714558601379395
    7. '<|end|>' → logprob: -6.9214558601379395
    8. '           ' → logprob: -6.9214558601379395
    9. '                               ' → logprob: -7.1714558601379395
    10. ')' → logprob: -7.2964558601379395

Token 1086: ' test' (ID: 1746)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.13442182540893555
    2. 'contin' → logprob: -2.5094218254089355
    3. 'if' → logprob: -3.3844218254089355
    4. ' continue' → logprob: -5.1344218254089355
    5. ' continuer' → logprob: -7.0094218254089355
    6. '           ' → logprob: -7.3844218254089355
    7. '   ' → logprob: -7.3844218254089355
    8. 'not' → logprob: -7.7594218254089355
    9. '               ' → logprob: -8.009422302246094
    10. '       ' → logprob: -8.384422302246094

Token 1087: 'ant' (ID: 493)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030905835330486298
    2. '                   ' → logprob: -4.030905723571777
    3. '```' → logprob: -6.405905723571777
    4. ' or' → logprob: -6.530905723571777
    5. ' if' → logprob: -6.530905723571777
    6. '=True' → logprob: -7.280905723571777
    7. '                               ' → logprob: -7.405905723571777
    8. 'else' → logprob: -7.530905723571777
    9. ' else' → logprob: -7.780905723571777
    10. ' continue' → logprob: -7.780905723571777

Token 1088: ' active' (ID: 6725)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5234267115592957
    2. ' k' → logprob: -1.3984267711639404
    3. ' if' → logprob: -2.6484267711639404
    4. '               ' → logprob: -3.1484267711639404
    5. 'if' → logprob: -3.6484267711639404
    6. '                   ' → logprob: -4.648426532745361
    7. 'not' → logprob: -5.898426532745361
    8. '                ' → logprob: -5.898426532745361
    9. '```' → logprob: -6.523426532745361
    10. ' not' → logprob: -7.773426532745361

Token 1089: '[k' (ID: 14298)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2880483567714691
    2. ' or' → logprob: -2.163048267364502
    3. ' and' → logprob: -2.538048267364502
    4. 'and' → logprob: -4.288048267364502
    5. '                   ' → logprob: -4.913048267364502
    6. '           ' → logprob: -5.038048267364502
    7. '=True' → logprob: -5.663048267364502
    8. 'or' → logprob: -5.788048267364502
    9. '==' → logprob: -5.788048267364502
    10. '       ' → logprob: -6.288048267364502

Token 1090: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05241822823882103
    2. 'and' → logprob: -4.177418231964111
    3. ']==' → logprob: -4.177418231964111
    4. ' and' → logprob: -4.552418231964111
    5. ']
' → logprob: -6.177418231964111
    6. ']:
' → logprob: -6.302418231964111
    7. '               ' → logprob: -6.677418231964111
    8. '==' → logprob: -6.802418231964111
    9. '
' → logprob: -6.802418231964111
    10. '           ' → logprob: -8.052417755126953

Token 1091: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12464290112257004
    2. '               ' → logprob: -2.249642848968506
    3. '                       ' → logprob: -5.249642848968506
    4. ':' → logprob: -6.374642848968506
    5. '                               ' → logprob: -6.749642848968506
    6. ':
' → logprob: -7.249642848968506
    7. '                           ' → logprob: -7.499642848968506
    8. '```' → logprob: -7.499642848968506
    9. '           ' → logprob: -8.499643325805664
    10. '                    
' → logprob: -8.749643325805664

Token 1092: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7259783744812012
    2. 'continue' (adapté à ' continue') → logprob: -0.7259783744812012
    3. ' continue' → logprob: -3.850978374481201
    4. '               ' → logprob: -5.350978374481201
    5. '   ' → logprob: -5.975978374481201
    6. '                       ' → logprob: -6.350978374481201
    7. 'dist' → logprob: -7.350978374481201
    8. '           ' → logprob: -8.10097885131836
    9. ' distances' → logprob: -8.35097885131836
    10. '       ' → logprob: -8.72597885131836

Token 1093: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00486607663333416
    2. ' new' → logprob: -6.129866123199463
    3. 'new' → logprob: -6.879866123199463
    4. '                
' → logprob: -7.254866123199463
    5. '                   ' → logprob: -7.879866123199463
    6. 'token' → logprob: -8.879865646362305
    7. '           ' → logprob: -9.629865646362305
    8. ' distances' → logprob: -9.879865646362305
    9. 'distance' → logprob: -10.504865646362305
    10. ' token' → logprob: -10.504865646362305

Token 1094: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0069354744628071785
    2. ' new' → logprob: -5.8819355964660645
    3. '                
' → logprob: -6.3819355964660645
    4. 'new' → logprob: -6.7569355964660645
    5. '                   ' → logprob: -7.8819355964660645
    6. ' distances' → logprob: -8.881935119628906
    7. 'token' → logprob: -9.381935119628906
    8. '           ' → logprob: -9.506935119628906
    9. 'dist' → logprob: -9.631935119628906
    10. '                ' → logprob: -9.881935119628906

Token 1095: ' new' (ID: 620)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.06575907766819
    2. ' new' → logprob: -3.3157591819763184
    3. '               ' → logprob: -4.440759181976318
    4. 'dist' → logprob: -4.940759181976318
    5. ' dist' → logprob: -5.815759181976318
    6. ' token' → logprob: -6.315759181976318
    7. '                   ' → logprob: -7.190759181976318
    8. ' distance' → logprob: -7.440759181976318
    9. ' d' → logprob: -7.940759181976318
    10. 'new' (adapté à ' new') → logprob: -8.19075870513916

Token 1096: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.023182576522231102
    2. 'dist' → logprob: -4.023182392120361
    3. '_distance' → logprob: -5.523182392120361
    4. '_d' → logprob: -7.398182392120361
    5. 'd' → logprob: -8.77318286895752
    6. '_val' → logprob: -9.64818286895752
    7. 'Dist' → logprob: -9.89818286895752
    8. '_key' → logprob: -10.14818286895752
    9. 'distance' → logprob: -10.39818286895752
    10. '_value' → logprob: -10.77318286895752

Token 1097: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868776857852936
    2. '=' → logprob: -1.1368776559829712
    3. '                   ' → logprob: -14.01187801361084
    4. '=int' → logprob: -14.01187801361084
    5. ' =(' → logprob: -14.26187801361084
    6. 'new' → logprob: -14.38687801361084
    7. '               ' → logprob: -14.51187801361084
    8. '=new' → logprob: -14.63687801361084
    9. '                ' → logprob: -14.88687801361084
    10. ' ' → logprob: -14.88687801361084

Token 1098: ' (' (ID: 350)
  Prédit: '(di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.005775562021881342
    2. '(int' → logprob: -5.380775451660156
    3. ' (' → logprob: -7.755775451660156
    4. '(round' → logprob: -8.255775451660156
    5. '((' → logprob: -8.630775451660156
    6. 'int' → logprob: -9.005775451660156
    7. '(' → logprob: -9.755775451660156
    8. '   ' → logprob: -10.880775451660156
    9. '(dx' → logprob: -11.005775451660156
    10. '(d' → logprob: -11.130775451660156

Token 1099: 'di' (ID: 4091)
  Prédit: 'di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.00021188464597798884
    2. '(di' → logprob: -8.625211715698242
    3. ' di' → logprob: -10.375211715698242
    4. '   ' → logprob: -14.500211715698242
    5. '               ' → logprob: -15.875211715698242
    6. '                   ' → logprob: -16.000211715698242
    7. '           ' → logprob: -16.125211715698242
    8. '_di' → logprob: -16.375211715698242
    9. 'd' → logprob: -16.875211715698242
    10. '       ' → logprob: -17.250211715698242

Token 1100: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16023418307304382
    2. ' *' → logprob: -1.9102342128753662
    3. '*object' → logprob: -12.910234451293945
    4. '*k' → logprob: -13.285234451293945
    5. '*s' → logprob: -13.535234451293945
    6. '*x' → logprob: -14.035234451293945
    7. '*num' → logprob: -14.160234451293945
    8. '*(' → logprob: -14.285234451293945
    9. 'size' → logprob: -15.035234451293945
    10. '```' → logprob: -15.285234451293945

Token 1101: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.00012654215970542282
    2. ' size' → logprob: -9.000126838684082
    3. '(size' → logprob: -12.875126838684082
    4. '[size' → logprob: -16.250125885009766
    5. '   ' → logprob: -16.375125885009766
    6. 'sizes' → logprob: -16.750125885009766
    7. 'clusters' → logprob: -17.000125885009766
    8. '	size' → logprob: -17.500125885009766
    9. ',size' → logprob: -17.625125885009766
    10. ' ' → logprob: -17.750125885009766

Token 1102: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.07303166389465332
    2. '[i' → logprob: -2.6980316638946533
    3. 'i' → logprob: -6.073031425476074
    4. '(i' → logprob: -7.323031425476074
    5. '               ' → logprob: -10.573031425476074
    6. '[' → logprob: -10.698031425476074
    7. '[k' → logprob: -10.698031425476074
    8. '                   ' → logprob: -11.323031425476074
    9. '```' → logprob: -12.073031425476074
    10. '{i' → logprob: -12.073031425476074

Token 1103: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06196824833750725
    2. '+' → logprob: -2.8119683265686035
    3. ' ' → logprob: -15.561967849731445
    4. ' +
' → logprob: -16.061967849731445
    5. ' ' → logprob: -16.561967849731445
    6. '*' → logprob: -16.936967849731445
    7. '```' → logprob: -17.061967849731445
    8. '+k' → logprob: -17.311967849731445
    9. '+j' → logprob: -17.686967849731445
    10. '＋' → logprob: -17.811967849731445

Token 1104: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.008616345934569836
    2. ' dj' → logprob: -4.7586164474487305
    3. '   ' → logprob: -14.00861644744873
    4. ' ' → logprob: -15.13361644744873
    5. '.dj' → logprob: -15.50861644744873
    6. 'd' → logprob: -15.63361644744873
    7. '  ' → logprob: -16.258615493774414
    8. 'Dj' → logprob: -16.883615493774414
    9. '                   ' → logprob: -17.133615493774414
    10. '    ' → logprob: -17.508615493774414

Token 1105: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09417398273944855
    2. '*k' → logprob: -2.5941739082336426
    3. ' *' → logprob: -4.219173908233643
    4. '*j' → logprob: -7.844173908233643
    5. '[k' → logprob: -10.3441743850708
    6. '*(' → logprob: -11.4691743850708
    7. 'size' → logprob: -11.7191743850708
    8. '*s' → logprob: -12.9691743850708
    9. '```' → logprob: -12.9691743850708
    10. '(k' → logprob: -13.8441743850708

Token 1106: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.00029959288076497614
    2. ' size' → logprob: -8.125299453735352
    3. '(size' → logprob: -13.125299453735352
    4. '[size' → logprob: -14.000299453735352
    5. '.size' → logprob: -16.00029945373535
    6. '=size' → logprob: -16.12529945373535
    7. ',size' → logprob: -16.25029945373535
    8. '```' → logprob: -16.50029945373535
    9. '   ' → logprob: -17.00029945373535
    10. ' ' → logprob: -17.25029945373535

Token 1107: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.019949134439229965
    2. '_k' → logprob: -4.269948959350586
    3. 'j' → logprob: -5.269948959350586
    4. 'k' → logprob: -7.644948959350586
    5. '```' → logprob: -9.019948959350586
    6. '[k' → logprob: -11.269948959350586
    7. '[j' → logprob: -12.894948959350586
    8. '(k' → logprob: -13.144948959350586
    9. '``' → logprob: -13.269948959350586
    10. '   ' → logprob: -13.644948959350586

Token 1108: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010422873310744762
    2. ')/(' → logprob: -4.760422706604004
    3. ')/' → logprob: -6.760422706604004
    4. ' )' → logprob: -7.510422706604004
    5. ')//' → logprob: -9.510422706604004
    6. '           ' → logprob: -12.010422706604004
    7. ')
' → logprob: -12.135422706604004
    8. '                   ' → logprob: -12.760422706604004
    9. '               ' → logprob: -12.885422706604004
    10. '   ' → logprob: -13.760422706604004

Token 1109: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8158280849456787
    2. '/' → logprob: -0.9408280849456787
    3. ' /' → logprob: -1.9408280849456787
    4. ')/(' → logprob: -4.440828323364258
    5. '/(' → logprob: -5.065828323364258
    6. ' )' → logprob: -5.565828323364258
    7. ')/' → logprob: -6.940828323364258
    8. '```' → logprob: -8.815828323364258
    9. '           ' → logprob: -8.940828323364258
    10. '                   ' → logprob: -9.565828323364258

Token 1110: ' (' (ID: 350)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.017916254699230194
    2. ' (' → logprob: -4.142916202545166
    3. '(cl' → logprob: -6.767916202545166
    4. '(new' → logprob: -7.392916202545166
    5. 'size' → logprob: -10.517916679382324
    6. 'new' → logprob: -11.267916679382324
    7. '(float' → logprob: -11.517916679382324
    8. ' ' → logprob: -11.767916679382324
    9. 'cl' → logprob: -11.767916679382324
    10. '[size' → logprob: -11.767916679382324

Token 1111: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.007666490040719509
    2. '(size' → logprob: -5.00766658782959
    3. ' size' → logprob: -7.13266658782959
    4. 'new' → logprob: -9.00766658782959
    5. '   ' → logprob: -11.63266658782959
    6. ' (' → logprob: -12.25766658782959
    7. ' ' → logprob: -13.25766658782959
    8. '               ' → logprob: -13.38266658782959
    9. '[size' → logprob: -13.63266658782959
    10. 'float' → logprob: -13.63266658782959

Token 1112: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.12115086615085602
    2. '(new' → logprob: -2.8711509704589844
    3. '(k' → logprob: -3.8711509704589844
    4. '(i' → logprob: -4.246150970458984
    5. 'new' → logprob: -4.496150970458984
    6. '(next' → logprob: -5.496150970458984
    7. '_k' → logprob: -5.871150970458984
    8. '(' → logprob: -6.496150970458984
    9. ' (' → logprob: -7.121150970458984
    10. '_j' → logprob: -8.121150970458984

Token 1113: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132800757884979
    2. ' +' → logprob: -1.3132801055908203
    3. '+j' → logprob: -11.31328010559082
    4. '+
' → logprob: -13.43828010559082
    5. ' +
' → logprob: -14.06328010559082
    6. ' ' → logprob: -14.56328010559082
    7. '```' → logprob: -14.93828010559082
    8. '_plus' → logprob: -15.31328010559082
    9. '+self' → logprob: -15.43828010559082
    10. '+s' → logprob: -15.56328010559082

Token 1114: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.00238242675550282
    2. ' size' → logprob: -6.627382278442383
    3. 'j' → logprob: -7.127382278442383
    4. '_j' → logprob: -8.502382278442383
    5. '(size' → logprob: -10.502382278442383
    6. '[size' → logprob: -11.752382278442383
    7. ' ' → logprob: -12.377382278442383
    8. ' j' → logprob: -13.252382278442383
    9. '```' → logprob: -13.252382278442383
    10. '
' → logprob: -13.252382278442383

Token 1115: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.010150671005249023
    2. 'j' → logprob: -4.635150909423828
    3. '```' → logprob: -7.885150909423828
    4. '   ' → logprob: -12.010150909423828
    5. '[j' → logprob: -12.885150909423828
    6. '	j' → logprob: -13.260150909423828
    7. ')' → logprob: -13.385150909423828
    8. '_i' → logprob: -13.760150909423828
    9. '+' → logprob: -14.010150909423828
    10. '``' → logprob: -14.135150909423828

Token 1116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02144354209303856
    2. ' )' → logprob: -3.8964436054229736
    3. '<|end|>' → logprob: -7.3964433670043945
    4. ')
' → logprob: -9.271443367004395
    5. '               ' → logprob: -9.771443367004395
    6. '<|end|>' → logprob: -10.396443367004395
    7. ' )
' → logprob: -10.771443367004395
    8. '[' → logprob: -11.521443367004395
    9. '       ' → logprob: -11.521443367004395
    10. ')return' → logprob: -12.396443367004395

Token 1117: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003163969377055764
    2. '                   ' → logprob: -9.375316619873047
    3. '                
' → logprob: -9.750316619873047
    4. ' distances' → logprob: -10.000316619873047
    5. '           ' → logprob: -10.625316619873047
    6. '                               ' → logprob: -10.875316619873047
    7. '                       ' → logprob: -11.000316619873047
    8. '			' → logprob: -11.250316619873047
    9. '       ' → logprob: -11.500316619873047
    10. ')' → logprob: -11.750316619873047

Token 1118: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1584533154964447
    2. ' distances' → logprob: -2.4084532260894775
    3. '               ' → logprob: -2.9084532260894775
    4. '                   ' → logprob: -7.408453464508057
    5. ' dist' → logprob: -7.533453464508057
    6. ' key' → logprob: -8.033452987670898
    7. ' if' → logprob: -8.408452987670898
    8. 'key' → logprob: -9.283452987670898
    9. 'if' → logprob: -9.533452987670898
    10. '           ' → logprob: -10.033452987670898

Token 1119: ' stock' (ID: 6546)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0003933768020942807
    2. ' distances' → logprob: -8.12539291381836
    3. '               ' → logprob: -10.00039291381836
    4. 'key' → logprob: -11.00039291381836
    5. ' dist' → logprob: -11.62539291381836
    6. 'if' → logprob: -11.62539291381836
    7. '                   ' → logprob: -12.00039291381836
    8. '           ' → logprob: -12.75039291381836
    9. '   ' → logprob: -13.00039291381836
    10. 'a' → logprob: -13.25039291381836

Token 1120: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0024346397258341312
    2. '               ' → logprob: -6.252434730529785
    3. ' distances' → logprob: -8.377434730529785
    4. '                   ' → logprob: -8.752434730529785
    5. '(' → logprob: -9.752434730529785
    6. '           ' → logprob: -11.502434730529785
    7. '   ' → logprob: -12.002434730529785
    8. '=' → logprob: -12.127434730529785
    9. 'erer' → logprob: -12.252434730529785
    10. 'Distances' → logprob: -12.377434730529785

Token 1121: ' nouvelle' (ID: 24562)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5534448027610779
    2. 'dist' → logprob: -1.0534448623657227
    3. ' distances' → logprob: -3.3034448623657227
    4. '(dist' → logprob: -3.3034448623657227
    5. '               ' → logprob: -6.678444862365723
    6. ' (' → logprob: -7.178444862365723
    7. '                   ' → logprob: -8.053444862365723
    8. '((' → logprob: -8.678444862365723
    9. '[' → logprob: -9.053444862365723
    10. '(' → logprob: -9.678444862365723

Token 1122: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.27322766184806824
    2. '_dist' → logprob: -1.5232276916503906
    3. '[(' → logprob: -4.773227691650391
    4. ' distances' → logprob: -4.898227691650391
    5. 'distance' → logprob: -5.898227691650391
    6. '((' → logprob: -6.398227691650391
    7. '_distance' → logprob: -8.39822769165039
    8. '   ' → logprob: -8.89822769165039
    9. 'token' → logprob: -9.77322769165039
    10. ' dist' → logprob: -9.89822769165039

Token 1123: ' sous' (ID: 14487)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0026131169870495796
    2. '               ' → logprob: -7.002613067626953
    3. ' distances' → logprob: -7.002613067626953
    4. ' [(' → logprob: -7.377613067626953
    5. '[' → logprob: -10.002613067626953
    6. '   ' → logprob: -10.252613067626953
    7. '           ' → logprob: -10.752613067626953
    8. '                   ' → logprob: -10.877613067626953
    9. ' (' → logprob: -11.127613067626953
    10. 'dist' → logprob: -11.127613067626953

Token 1124: ' nouvel' (ID: 76298)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.681151807308197
    2. ' (' → logprob: -1.6811518669128418
    3. '(next' → logprob: -1.6811518669128418
    4. '(i' → logprob: -3.056151866912842
    5. '(min' → logprob: -3.056151866912842
    6. '(len' → logprob: -4.056151866912842
    7. '(key' → logprob: -5.306151866912842
    8. '(new' → logprob: -5.806151866912842
    9. '(' → logprob: -7.056151866912842
    10. '   ' → logprob: -7.681151866912842

Token 1125: ' index' (ID: 3472)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.33655425906181335
    2. '_clusters' → logprob: -1.9615542888641357
    3. '_cluster' → logprob: -2.8365542888641357
    4. '   ' → logprob: -4.336554050445557
    5. 'clusters' → logprob: -4.461554050445557
    6. '_dist' → logprob: -4.586554050445557
    7. 'node' → logprob: -4.711554050445557
    8. 'cluster' → logprob: -4.711554050445557
    9. 'dist' → logprob: -5.586554050445557
    10. '_active' → logprob: -5.711554050445557

Token 1126: ' next' (ID: 2613)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.028957534581422806
    2. '[next' → logprob: -4.903957366943359
    3. '               ' → logprob: -5.153957366943359
    4. '(next' → logprob: -5.403957366943359
    5. '       ' → logprob: -5.653957366943359
    6. '((' → logprob: -5.903957366943359
    7. ' (' → logprob: -6.153957366943359
    8. '(dist' → logprob: -7.028957366943359
    9. '(new' → logprob: -7.653957366943359
    10. '[new' → logprob: -8.40395736694336

Token 1127: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -8.876193169271573e-05
    2. 'node' → logprob: -10.125088691711426
    3. '   ' → logprob: -11.000088691711426
    4. '_token' → logprob: -11.125088691711426
    5. '               ' → logprob: -12.000088691711426
    6. '           ' → logprob: -12.625088691711426
    7. '_NODE' → logprob: -13.875088691711426
    8. 'Node' → logprob: -14.000088691711426
    9. '       ' → logprob: -14.250088691711426
    10. '_id' → logprob: -14.375088691711426

Token 1128: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0016362625174224377
    2. '   ' → logprob: -6.626636028289795
    3. ',' → logprob: -9.501636505126953
    4. '           ' → logprob: -9.626636505126953
    5. 'next' → logprob: -10.251636505126953
    6. 'id' → logprob: -10.876636505126953
    7. ',next' → logprob: -10.876636505126953
    8. '               ' → logprob: -11.001636505126953
    9. '                   ' → logprob: -11.251636505126953
    10. '       ' → logprob: -11.251636505126953

Token 1129: '
' (ID: 198)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.2563183605670929
    2. '               ' → logprob: -1.5063183307647705
    3. '[next' → logprob: -6.00631856918335
    4. '       ' → logprob: -7.00631856918335
    5. '           ' → logprob: -8.006318092346191
    6. '[' → logprob: -8.756318092346191
    7. ' distances' → logprob: -8.881318092346191
    8. '[new' → logprob: -9.131318092346191
    9. '                   ' → logprob: -9.381318092346191
    10. '   ' → logprob: -9.631318092346191

Token 1130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34918212890625
    2. '[(' → logprob: -1.22418212890625
    3. '[' → logprob: -8.22418212890625
    4. '[next' → logprob: -9.22418212890625
    5. '((' → logprob: -9.72418212890625
    6. '                   ' → logprob: -9.84918212890625
    7. '[new' → logprob: -9.97418212890625
    8. '(' → logprob: -10.59918212890625
    9. '       ' → logprob: -10.59918212890625
    10. '=(' → logprob: -10.84918212890625

Token 1131: ' a' (ID: 261)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07946116477251053
    2. ' distances' → logprob: -2.579461097717285
    3. '               ' → logprob: -7.579461097717285
    4. ' dist' → logprob: -10.204461097717285
    5. '                   ' → logprob: -11.579461097717285
    6. '   ' → logprob: -11.954461097717285
    7. '           ' → logprob: -12.579461097717285
    8. '	dist' → logprob: -13.204461097717285
    9. '_dist' → logprob: -13.704461097717285
    10. '       ' → logprob: -14.829461097717285

Token 1132: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7360339760780334
    2. '=' → logprob: -0.7360339760780334
    3. ' =' → logprob: -3.7360339164733887
    4. ',b' → logprob: -4.361033916473389
    5. ',a' → logprob: -6.236033916473389
    6. ',k' → logprob: -7.111033916473389
    7. '=min' → logprob: -7.361033916473389
    8. ',next' → logprob: -7.611033916473389
    9. 'a' → logprob: -7.861033916473389
    10. ',n' → logprob: -7.861033916473389

Token 1133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017367053078487515
    2. ' =' → logprob: -6.376736640930176
    3. '=min' → logprob: -10.376736640930176
    4. 'a' → logprob: -13.251736640930176
    5. '=a' → logprob: -13.876736640930176
    6. '=(' → logprob: -15.001736640930176
    7. ',' → logprob: -15.751736640930176
    8. '(min' → logprob: -16.501737594604492
    9. '=max' → logprob: -16.751737594604492
    10. '=
' → logprob: -17.626737594604492

Token 1134: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2103523164987564
    2. 'k' → logprob: -1.8353523015975952
    3. '(min' → logprob: -4.335352420806885
    4. 'sorted' → logprob: -4.710352420806885
    5. '(k' → logprob: -5.085352420806885
    6. ' min' → logprob: -6.585352420806885
    7. '(sorted' → logprob: -8.710351943969727
    8. '   ' → logprob: -8.960351943969727
    9. '               ' → logprob: -9.960351943969727
    10. '                   ' → logprob: -10.835351943969727

Token 1135: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.21291391551494598
    2. '(next' → logprob: -1.7129138708114624
    3. '(new' → logprob: -4.587913990020752
    4. 'k' → logprob: -6.962913990020752
    5. 'next' → logprob: -8.587913513183594
    6. 'new' → logprob: -9.087913513183594
    7. '((' → logprob: -11.462913513183594
    8. '(' → logprob: -14.087913513183594
    9. '(len' → logprob: -14.212913513183594
    10. ' next' → logprob: -14.587913513183594

Token 1136: ',next' (ID: 129376)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.25487980246543884
    2. 'a' → logprob: -2.1298797130584717
    3. '(k' → logprob: -3.3798797130584717
    4. 'next' → logprob: -3.5048797130584717
    5. 'k' → logprob: -4.379879951477051
    6. '(a' → logprob: -4.879879951477051
    7. '(len' → logprob: -5.254879951477051
    8. ',' → logprob: -5.379879951477051
    9. 'new' → logprob: -5.504879951477051
    10. ',next' → logprob: -5.754879951477051

Token 1137: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00027480217977426946
    2. 'node' → logprob: -8.375274658203125
    3. 'Node' → logprob: -11.125274658203125
    4. '   ' → logprob: -11.750274658203125
    5. '           ' → logprob: -12.625274658203125
    6. '(next' → logprob: -13.125274658203125
    7. '_NODE' → logprob: -13.625274658203125
    8. 'next' → logprob: -13.625274658203125
    9. '       ' → logprob: -13.750274658203125
    10. '```' → logprob: -14.000274658203125

Token 1138: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0012409444898366928
    2. 'id' → logprob: -6.7512407302856445
    3. 'Id' → logprob: -9.626240730285645
    4. 'node' → logprob: -14.126240730285645
    5. '_idx' → logprob: -14.376240730285645
    6. 'd' → logprob: -14.501240730285645
    7. '_node' → logprob: -14.501240730285645
    8. 'k' → logprob: -14.876240730285645
    9. 'i' → logprob: -15.251240730285645
    10. '1' → logprob: -15.251240730285645

Token 1139: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0007780580781400204
    2. ',' → logprob: -7.2507781982421875
    3. '),(' → logprob: -10.500778198242188
    4. ',k' → logprob: -11.000778198242188
    5. ',b' → logprob: -11.250778198242188
    6. ',a' → logprob: -12.875778198242188
    7. '   ' → logprob: -13.125778198242188
    8. ',next' → logprob: -13.375778198242188
    9. ' ),' → logprob: -13.750778198242188
    10. 'a' → logprob: -14.125778198242188

Token 1140: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011047814972698689
    2. ' max' → logprob: -4.511047840118408
    3. '(max' → logprob: -18.38604736328125
    4. '   ' → logprob: -19.38604736328125
    5. '	max' → logprob: -20.51104736328125
    6. '  ' → logprob: -21.38604736328125
    7. ' ' → logprob: -21.51104736328125
    8. '           ' → logprob: -21.76104736328125
    9. 'k' → logprob: -21.88604736328125
    10. '       ' → logprob: -22.26104736328125

Token 1141: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.4378848391061183e-05
    2. 'k' → logprob: -11.250014305114746
    3. ' (' → logprob: -13.750014305114746
    4. '(' → logprob: -15.500014305114746
    5. '   ' → logprob: -17.000015258789062
    6. '(
' → logprob: -18.125015258789062
    7. '(next' → logprob: -18.375015258789062
    8. '((' → logprob: -19.625015258789062
    9. '```' → logprob: -20.375015258789062
    10. ' k' → logprob: -20.375015258789062

Token 1142: ',next' (ID: 129376)
  Prédit: ',next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',next' → logprob: -0.25729450583457947
    2. '(next' → logprob: -1.7572945356369019
    3. ',k' → logprob: -3.5072944164276123
    4. 'next' → logprob: -4.132294654846191
    5. ',' → logprob: -5.882294654846191
    6. 'k' → logprob: -6.007294654846191
    7. '),' → logprob: -6.632294654846191
    8. ',new' → logprob: -7.257294654846191
    9. '[next' → logprob: -7.632294654846191
    10. '(k' → logprob: -7.757294654846191

Token 1143: '_node' (ID: 11390)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.057072874158620834
    2. '_node' → logprob: -2.932072877883911
    3. 'node' → logprob: -6.182072639465332
    4. 'next' → logprob: -9.932072639465332
    5. 'id' → logprob: -10.932072639465332
    6. '(k' → logprob: -11.057072639465332
    7. '(next' → logprob: -11.307072639465332
    8. '(node' → logprob: -11.432072639465332
    9. 'Node' → logprob: -12.057072639465332
    10. 'k' → logprob: -12.932072639465332

Token 1144: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00012606535165105015
    2. 'id' → logprob: -9.000125885009766
    3. 'Id' → logprob: -12.875125885009766
    4. 'd' → logprob: -17.500125885009766
    5. 'i' → logprob: -19.250125885009766
    6. '   ' → logprob: -19.875125885009766
    7. '-id' → logprob: -20.000125885009766
    8. '```' → logprob: -20.000125885009766
    9. '_ids' → logprob: -20.250125885009766
    10. ' id' → logprob: -21.000125885009766

Token 1145: ')
' (ID: 446)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2466053068637848
    2. ')
' → logprob: -1.6216052770614624
    3. ')' → logprob: -3.871605396270752
    4. '),(' → logprob: -9.996604919433594
    5. ')
' → logprob: -9.996604919433594
    6. '),
' → logprob: -10.871604919433594
    7. ')=' → logprob: -11.996604919433594
    8. ')

' → logprob: -12.246604919433594
    9. '):
' → logprob: -12.746604919433594
    10. ' ),' → logprob: -12.871604919433594

Token 1146: '               ' (ID: 506)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.8466622233390808
    2. ')' → logprob: -1.5966622829437256
    3. '               ' → logprob: -1.8466622829437256
    4. 'dist' → logprob: -2.5966622829437256
    5. '                   ' → logprob: -3.2216622829437256
    6. '[' → logprob: -3.2216622829437256
    7. '```' → logprob: -3.5966622829437256
    8. '           ' → logprob: -4.7216620445251465
    9. ' =' → logprob: -5.2216620445251465
    10. ')
' → logprob: -5.8466620445251465

Token 1147: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16040010750293732
    2. ' distances' → logprob: -1.910400152206421
    3. '               ' → logprob: -8.785400390625
    4. '                   ' → logprob: -11.910400390625
    5. '           ' → logprob: -12.035400390625
    6. '	dist' → logprob: -12.410400390625
    7. ' dist' → logprob: -13.285400390625
    8. '```' → logprob: -13.660400390625
    9. '   ' → logprob: -13.910400390625
    10. '_dist' → logprob: -14.410400390625

Token 1148: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.002818431705236435
    2. '[a' → logprob: -5.877818584442139
    3. '[' → logprob: -11.50281810760498
    4. '[
' → logprob: -13.37781810760498
    5. '(a' → logprob: -13.87781810760498
    6. 'a' → logprob: -14.75281810760498
    7. '   ' → logprob: -15.62781810760498
    8. '```' → logprob: -15.87781810760498
    9. ' [(' → logprob: -16.252819061279297
    10. '[((' → logprob: -16.377819061279297

Token 1149: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9361264946837764e-07
    2. ' a' → logprob: -16.25
    3. '   ' → logprob: -19.75
    4. '(a' → logprob: -19.75
    5. '	a' → logprob: -19.75
    6. ')a' → logprob: -20.0
    7. '#a' → logprob: -20.375
    8. '_a' → logprob: -21.25
    9. ''a' → logprob: -21.25
    10. 'а' → logprob: -21.75

Token 1150: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.030065754428505898
    2. ',next' → logprob: -3.5300657749176025
    3. 'b' → logprob: -8.655065536499023
    4. ',' → logprob: -8.905065536499023
    5. ',k' → logprob: -12.780065536499023
    6. 'next' → logprob: -14.155065536499023
    7. ',new' → logprob: -14.655065536499023
    8. '[next' → logprob: -15.155065536499023
    9. ',n' → logprob: -15.280065536499023
    10. ',last' → logprob: -15.405065536499023

Token 1151: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0032286944333463907
    2. ']' → logprob: -5.753228664398193
    3. ')' → logprob: -10.253229141235352
    4. '])' → logprob: -11.878229141235352
    5. ']=' → logprob: -12.003229141235352
    6. '')]' → logprob: -14.378229141235352
    7. '=' → logprob: -15.003229141235352
    8. ' ]' → logprob: -15.378229141235352
    9. ' )' → logprob: -15.628229141235352
    10. '           ' → logprob: -15.753229141235352

Token 1152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. ']=' → logprob: -17.26104736328125
    4. '＝' → logprob: -18.26104736328125
    5. ')=' → logprob: -18.26104736328125
    6. '=new' → logprob: -18.26104736328125
    7. ']' → logprob: -19.51104736328125
    8. '.=' → logprob: -19.76104736328125
    9. ')' → logprob: -19.88604736328125
    10. '[' → logprob: -20.01104736328125

Token 1153: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0004905993700958788
    2. ' new' → logprob: -7.625490665435791
    3. 'float' → logprob: -13.250490188598633
    4. '               ' → logprob: -16.000490188598633
    5. 'round' → logprob: -16.375490188598633
    6. '           ' → logprob: -16.500490188598633
    7. '                   ' → logprob: -16.500490188598633
    8. '   ' → logprob: -16.625490188598633
    9. '	new' → logprob: -16.625490188598633
    10. 'New' → logprob: -17.000490188598633

Token 1154: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00011367550177965313
    2. 'Dist' → logprob: -9.750113487243652
    3. '_node' → logprob: -10.875113487243652
    4. 'dist' → logprob: -11.000113487243652
    5. '_distance' → logprob: -11.750113487243652
    6. '_token' → logprob: -12.125113487243652
    7. '_DIST' → logprob: -13.625113487243652
    8. ' Dist' → logprob: -13.625113487243652
    9. 'token' → logprob: -14.125113487243652
    10. '_' → logprob: -14.250113487243652

Token 1155: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1156: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1157: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01855337992310524
    2. 'next' → logprob: -4.643553256988525
    3. ' next' → logprob: -4.768553256988525
    4. '   ' → logprob: -9.143553733825684
    5. '[next' → logprob: -9.643553733825684
    6. '	next' → logprob: -10.643553733825684
    7. '<|end|>' → logprob: -10.768553733825684
    8. 'Next' → logprob: -11.393553733825684
    9. '(next' → logprob: -11.643553733825684
    10. '
' → logprob: -11.643553733825684

Token 1158: ' enlever' (ID: 196982)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.005797009449452162
    2. ' next' → logprob: -5.880796909332275
    3. '   ' → logprob: -6.505796909332275
    4. '       ' → logprob: -7.130796909332275
    5. 'active' → logprob: -7.630796909332275
    6. 'remaining' → logprob: -9.380797386169434
    7. 'dist' → logprob: -9.880797386169434
    8. 'clusters' → logprob: -10.380797386169434
    9. 'distance' → logprob: -11.630797386169434
    10. '
' → logprob: -11.755797386169434

Token 1159: ' distances' (ID: 48294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.303352028131485
    2. '(i' → logprob: -2.178352117538452
    3. '[(' → logprob: -2.178352117538452
    4. '((' → logprob: -4.428351879119873
    5. '       ' → logprob: -4.678351879119873
    6. ' for' → logprob: -5.303351879119873
    7. '#' → logprob: -5.928351879119873
    8. '   ' → logprob: -6.428351879119873
    9. 'i' → logprob: -6.428351879119873
    10. ' (' → logprob: -6.803351879119873

Token 1160: ' liées' (ID: 122433)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.015672756358981133
    2. 'for' → logprob: -4.39067268371582
    3. '       ' → logprob: -7.14067268371582
    4. 'from' → logprob: -7.39067268371582
    5. ' =' → logprob: -8.01567268371582
    6. '=' → logprob: -8.51567268371582
    7. '_to' → logprob: -9.14067268371582
    8. 'with' → logprob: -9.14067268371582
    9. '[i' → logprob: -9.26567268371582
    10. 'between' → logprob: -9.26567268371582

Token 1161: ' à' (ID: 1221)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.18390613794326782
    2. 'à' → logprob: -2.683906078338623
    3. 'to' → logprob: -2.683906078338623
    4. '       ' → logprob: -4.183906078338623
    5. ' à' → logprob: -5.558906078338623
    6. 'aux' → logprob: -5.683906078338623
    7. '[(' → logprob: -5.933906078338623
    8. '(' → logprob: -6.308906078338623
    9. 'i' → logprob: -6.933906078338623
    10. '[i' → logprob: -7.433906078338623

Token 1162: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2995469868183136
    2. '(i' → logprob: -1.6745469570159912
    3. ' i' → logprob: -3.174546957015991
    4. ' (' → logprob: -3.549546957015991
    5. '   ' → logprob: -7.92454719543457
    6. '(' → logprob: -7.92454719543457
    7. ' ' → logprob: -10.04954719543457
    8. '       ' → logprob: -10.67454719543457
    9. '  ' → logprob: -10.79954719543457
    10. '    ' → logprob: -10.79954719543457

Token 1163: ',j' (ID: 22712)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5942833423614502
    2. '       ' → logprob: -1.0942833423614502
    3. 'for' → logprob: -2.46928334236145
    4. ' for' → logprob: -4.844283103942871
    5. 'et' → logprob: -5.594283103942871
    6. ',' → logprob: -5.844283103942871
    7. ' and' → logprob: -5.844283103942871
    8. '.pop' → logprob: -6.094283103942871
    9. ' et' → logprob: -6.219283103942871
    10. ' (' → logprob: -6.594283103942871

Token 1164: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012046386254951358
    2. ' for' → logprob: -7.001204490661621
    3. '<|end|>' → logprob: -9.126204490661621
    4. 'for' → logprob: -9.376204490661621
    5. '```' → logprob: -10.626204490661621
    6. '[' → logprob: -11.376204490661621
    7. '.keys' → logprob: -11.626204490661621
    8. '<|end|>' → logprob: -12.001204490661621
    9. ')' → logprob: -12.126204490661621
    10. '           ' → logprob: -12.376204490661621

Token 1165: ' optimisation' (ID: 139802)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -1.5054528713226318
    2. ' k' → logprob: -1.8804528713226318
    3. ' del' → logprob: -2.005452871322632
    4. ' key' → logprob: -2.505452871322632
    5. 'k' → logprob: -2.755452871322632
    6. 'for' → logprob: -2.755452871322632
    7. '[(' → logprob: -3.130452871322632
    8. ' for' → logprob: -3.130452871322632
    9. 'key' → logprob: -3.130452871322632
    10. ' (' → logprob: -3.630452871322632

Token 1166: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021990251261740923
    2. '<|end|>' → logprob: -6.377199172973633
    3. '<|end|>' → logprob: -8.752199172973633
    4. '```' → logprob: -9.127199172973633
    5. ',' → logprob: -9.752199172973633
    6. ' for' → logprob: -10.002199172973633
    7. '        
' → logprob: -10.877199172973633
    8. ' and' → logprob: -11.502199172973633
    9. ' (' → logprob: -11.502199172973633
    10. '[' → logprob: -11.627199172973633

Token 1167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010462861508131027
    2. '```' → logprob: -5.260462760925293
    3. '[' → logprob: -6.135462760925293
    4. '<|end|>' → logprob: -7.135462760925293
    5. ' for' → logprob: -7.760462760925293
    6. '``' → logprob: -7.885462760925293
    7. '   ' → logprob: -8.135462760925293
    8. '        
' → logprob: -8.260462760925293
    9. '           ' → logprob: -8.635462760925293
    10. ' (' → logprob: -9.010462760925293

Token 1168: ' keys' (ID: 12994)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17564962804317474
    2. 'for' → logprob: -2.300649642944336
    3. ' for' → logprob: -2.800649642944336
    4. '   ' → logprob: -10.050649642944336
    5. '```' → logprob: -10.175649642944336
    6. '	for' → logprob: -11.300649642944336
    7. 'tokens' → logprob: -12.050649642944336
    8. '           ' → logprob: -12.175649642944336
    9. '
' → logprob: -12.675649642944336
    10. 'keys' (adapté à ' keys') → logprob: -12.800649642944336

Token 1169: '_to' (ID: 5089)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023634077981114388
    2. ' =' → logprob: -3.773634195327759
    3. '_to' → logprob: -8.27363395690918
    4. '=list' → logprob: -9.14863395690918
    5. '=[' → logprob: -11.77363395690918
    6. '=[]' → logprob: -12.52363395690918
    7. '[:]' → logprob: -12.64863395690918
    8. '   ' → logprob: -13.27363395690918
    9. 'to' → logprob: -13.27363395690918
    10. ' =[' → logprob: -13.39863395690918

Token 1170: '_remove' (ID: 41629)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.0006384541047737002
    2. 'delete' → logprob: -8.000638008117676
    3. '_remove' → logprob: -8.250638008117676
    4. 'discard' → logprob: -10.250638008117676
    5. ' remove' → logprob: -12.750638008117676
    6. 'del' → logprob: -13.500638008117676
    7. 'erase' → logprob: -14.250638008117676
    8. 'Remove' → logprob: -14.500638008117676
    9. '.remove' → logprob: -15.125638008117676
    10. '=' → logprob: -15.125638008117676

Token 1171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132641315460205
    2. ' =' → logprob: -1.3132641315460205
    3. '=[' → logprob: -13.688263893127441
    4. '=[]' → logprob: -13.938263893127441
    5. ' =[' → logprob: -15.938263893127441
    6. '=[]
' → logprob: -16.563264846801758
    7. '   ' → logprob: -16.563264846801758
    8. ' ' → logprob: -16.688264846801758
    9. '[]' → logprob: -17.313264846801758
    10. '＝' → logprob: -18.313264846801758

Token 1172: ' []
' (ID: 8911)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.14906001091003418
    2. '[(' → logprob: -2.649060010910034
    3. '[key' → logprob: -3.149060010910034
    4. '[]
' → logprob: -4.149060249328613
    5. '[x' → logprob: -5.899060249328613
    6. '[' → logprob: -6.149060249328613
    7. '[i' → logprob: -6.649060249328613
    8. '[]' → logprob: -6.649060249328613
    9. '[token' → logprob: -7.774060249328613
    10. '[t' → logprob: -8.149060249328613

Token 1173: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.009933590888977
    2. '=' → logprob: -1.259933590888977
    3. '       ' → logprob: -2.0099334716796875
    4. ' =' → logprob: -2.2599334716796875
    5. ' for' → logprob: -2.2599334716796875
    6. '```' → logprob: -5.3849334716796875
    7. '[' → logprob: -7.2599334716796875
    8. '	for' → logprob: -7.3849334716796875
    9. '=[]' → logprob: -8.009933471679688
    10. '=[]
' → logprob: -8.134933471679688

Token 1174: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09387622028589249
    2. ' for' → logprob: -2.8438761234283447
    3. '       ' → logprob: -3.4688761234283447
    4. '   ' → logprob: -8.593875885009766
    5. '	for' → logprob: -10.093875885009766
    6. '```' → logprob: -11.718875885009766
    7. ' ' → logprob: -12.093875885009766
    8. '[' → logprob: -12.093875885009766
    9. ' ' → logprob: -12.718875885009766
    10. '           ' → logprob: -13.468875885009766

Token 1175: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.006455535534769297
    2. '(key' → logprob: -5.756455421447754
    3. 'k' → logprob: -6.006455421447754
    4. '(k' → logprob: -8.006455421447754
    5. ' key' → logprob: -8.256455421447754
    6. '(x' → logprob: -8.881455421447754
    7. 'x' → logprob: -9.631455421447754
    8. ' (' → logprob: -11.881455421447754
    9. '(i' → logprob: -13.006455421447754
    10. 'pair' → logprob: -13.631455421447754

Token 1176: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22544829547405243
    2. ' in' → logprob: -1.6004482507705688
    3. '   ' → logprob: -11.600448608398438
    4. ' ' → logprob: -11.975448608398438
    5. '_in' → logprob: -12.225448608398438
    6. '```' → logprob: -12.225448608398438
    7. '
' → logprob: -13.225448608398438
    8. 'key' → logprob: -13.600448608398438
    9. '       ' → logprob: -13.975448608398438
    10. ',' → logprob: -14.100448608398438

Token 1177: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0008831187733449042
    2. ' distances' → logprob: -7.250883102416992
    3. 'keys' → logprob: -9.000883102416992
    4. '(dist' → logprob: -10.250883102416992
    5. 'list' → logprob: -11.625883102416992
    6. ' dist' → logprob: -13.250883102416992
    7. ' keys' → logprob: -13.375883102416992
    8. 'distance' → logprob: -13.625883102416992
    9. '_dist' → logprob: -15.250883102416992
    10. ' list' → logprob: -15.500883102416992

Token 1178: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15694642066955566
    2. 'in' → logprob: -3.1569464206695557
    3. ' in' → logprob: -3.5319464206695557
    4. '       ' → logprob: -3.9069464206695557
    5. ':' → logprob: -4.031946182250977
    6. '           ' → logprob: -4.156946182250977
    7. '   ' → logprob: -4.781946182250977
    8. '():
' → logprob: -4.781946182250977
    9. '):
' → logprob: -7.156946182250977
    10. '          ' → logprob: -8.031946182250977

Token 1179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1286831945180893
    2. '```' → logprob: -3.128683090209961
    3. ' if' → logprob: -3.378683090209961
    4. '       ' → logprob: -3.503683090209961
    5. 'if' → logprob: -5.253683090209961
    6. '<|end|>' → logprob: -6.253683090209961
    7. '<|end|>' → logprob: -6.878683090209961
    8. '[' → logprob: -7.253683090209961
    9. '``' → logprob: -7.253683090209961
    10. '(keys' → logprob: -7.378683090209961

Token 1180: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6888339519500732
    2. '           ' → logprob: -1.3138339519500732
    3. 'key' → logprob: -1.6888339519500732
    4. ' key' → logprob: -4.063834190368652
    5. ' if' → logprob: -4.313834190368652
    6. '       ' → logprob: -4.438834190368652
    7. '   ' → logprob: -7.438834190368652
    8. '            
' → logprob: -8.313834190368652
    9. '(key' → logprob: -8.313834190368652
    10. 'x' → logprob: -8.438834190368652

Token 1181: ' i' (ID: 575)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.42024415731430054
    2. 'i' → logprob: -1.2952442169189453
    3. ' key' → logprob: -2.7952442169189453
    4. ' i' → logprob: -5.045244216918945
    5. '(i' → logprob: -7.420244216918945
    6. '(key' → logprob: -8.170244216918945
    7. 'clusters' → logprob: -8.420244216918945
    8. 'active' → logprob: -9.170244216918945
    9. '   ' → logprob: -9.170244216918945
    10. 'next' → logprob: -9.295244216918945

Token 1182: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.29519781470298767
    2. '==' → logprob: -2.0451977252960205
    3. ' in' → logprob: -2.1701977252960205
    4. ' ==' → logprob: -4.4201979637146
    5. 'key' → logprob: -10.795197486877441
    6. '[' → logprob: -11.420197486877441
    7. '
' → logprob: -12.295197486877441
    8. '===' → logprob: -12.295197486877441
    9. ']==' → logprob: -12.295197486877441
    10. ')==' → logprob: -12.795197486877441

Token 1183: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.00033546582562848926
    2. ' key' → logprob: -8.000335693359375
    3. '(key' → logprob: -18.375335693359375
    4. ' ' → logprob: -19.875335693359375
    5. '   ' → logprob: -20.125335693359375
    6. '[' → logprob: -20.750335693359375
    7. 'keys' → logprob: -21.625335693359375
    8. '
' → logprob: -21.750335693359375
    9. '	key' → logprob: -21.875335693359375
    10. 'list' → logprob: -21.875335693359375

Token 1184: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0017570488853380084
    2. 'or' → logprob: -6.6267571449279785
    3. '           ' → logprob: -7.8767571449279785
    4. '               ' → logprob: -10.75175666809082
    5. '          ' → logprob: -11.87675666809082
    6. '       ' → logprob: -12.00175666809082
    7. ' and' → logprob: -12.50175666809082
    8. '            ' → logprob: -12.62675666809082
    9. '        ' → logprob: -13.00175666809082
    10. '              ' → logprob: -13.62675666809082

Token 1185: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0788949653506279
    2. ' j' → logprob: -2.578894853591919
    3. '   ' → logprob: -12.82889461517334
    4. '           ' → logprob: -13.45389461517334
    5. '	j' → logprob: -14.82889461517334
    6. '                   ' → logprob: -14.95389461517334
    7. '               ' → logprob: -16.078895568847656
    8. '    ' → logprob: -16.578895568847656
    9. '_j' → logprob: -17.203895568847656
    10. '       ' → logprob: -17.578895568847656

Token 1186: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806697204709053
    2. 'in' → logprob: -3.288066864013672
    3. '==' → logprob: -11.288066864013672
    4. ' ==' → logprob: -11.788066864013672
    5. '           ' → logprob: -13.038066864013672
    6. ' ' → logprob: -14.038066864013672
    7. '[' → logprob: -14.288066864013672
    8. ')' → logprob: -15.163066864013672
    9. '   ' → logprob: -15.288066864013672
    10. '[key' → logprob: -15.663066864013672

Token 1187: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0013272607466205955
    2. ' key' → logprob: -6.626327037811279
    3. '   ' → logprob: -13.876327514648438
    4. ' ' → logprob: -15.001327514648438
    5. '(key' → logprob: -16.376327514648438
    6. '	key' → logprob: -17.626327514648438
    7. '           ' → logprob: -17.751327514648438
    8. '  ' → logprob: -18.251327514648438
    9. '       ' → logprob: -18.501327514648438
    10. '```' → logprob: -18.626327514648438

Token 1188: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.638931393623352
    2. ' or' → logprob: -1.638931393623352
    3. ':
' → logprob: -1.763931393623352
    4. '           ' → logprob: -2.8889312744140625
    5. '.keys' → logprob: -3.6389312744140625
    6. '(keys' → logprob: -5.1389312744140625
    7. '):
' → logprob: -5.2639312744140625
    8. ':' → logprob: -6.2639312744140625
    9. ' keys' → logprob: -6.2639312744140625
    10. 'or' → logprob: -6.2639312744140625

Token 1189: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7220765352249146
    2. '               ' → logprob: -1.3470765352249146
    3. '(keys' → logprob: -1.7220765352249146
    4. '.keys' → logprob: -3.097076416015625
    5. ' keys' → logprob: -4.722076416015625
    6. 'keys' → logprob: -4.972076416015625
    7. ':
' → logprob: -5.097076416015625
    8. ' and' → logprob: -5.472076416015625
    9. '.append' → logprob: -7.222076416015625
    10. ' or' → logprob: -7.347076416015625

Token 1190: ' keys' (ID: 12994)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6739915609359741
    2. '               ' → logprob: -1.4239915609359741
    3. ' keys' → logprob: -1.4239915609359741
    4. 'keys' (adapté à ' keys') → logprob: -4.798991680145264
    5. '   ' → logprob: -8.673991203308105
    6. '	keys' → logprob: -9.173991203308105
    7. '       ' → logprob: -9.298991203308105
    8. '.keys' → logprob: -9.423991203308105
    9. '(keys' → logprob: -9.798991203308105
    10. '                   ' → logprob: -10.673991203308105

Token 1191: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.6286106983898208e-05
    2. 'to' → logprob: -11.625016212463379
    3. '.append' → logprob: -12.250016212463379
    4. '=' → logprob: -13.625016212463379
    5. 'To' → logprob: -14.250016212463379
    6. 'append' → logprob: -16.000017166137695
    7. '   ' → logprob: -16.500017166137695
    8. 's' → logprob: -17.000017166137695
    9. '
' → logprob: -17.125017166137695
    10. '+=' → logprob: -17.125017166137695

Token 1192: '_remove' (ID: 41629)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.28218579292297363
    2. '_remove' → logprob: -1.4071857929229736
    3. 'append' → logprob: -7.2821855545043945
    4. '_append' → logprob: -9.407185554504395
    5. '[]' → logprob: -9.532185554504395
    6. '_REMOVE' → logprob: -9.657185554504395
    7. '-remove' → logprob: -10.032185554504395
    8. '	remove' → logprob: -10.532185554504395
    9. ' remove' → logprob: -10.782185554504395
    10. '.remove' → logprob: -11.157185554504395

Token 1193: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00027921271976083517
    2. '().' → logprob: -8.250279426574707
    3. ' .' → logprob: -11.750279426574707
    4. '.' → logprob: -11.875279426574707
    5. 'append' → logprob: -13.250279426574707
    6. '           ' → logprob: -14.500279426574707
    7. '=' → logprob: -15.750279426574707
    8. '.add' → logprob: -16.25027847290039
    9. '       ' → logprob: -16.50027847290039
    10. '               ' → logprob: -16.62527847290039

Token 1194: '(key' (ID: 8932)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.07900391519069672
    2. '(key' → logprob: -2.5790038108825684
    3. ' key' → logprob: -9.079004287719727
    4. '[key' → logprob: -16.829004287719727
    5. ',key' → logprob: -17.579004287719727
    6. '	key' → logprob: -18.329004287719727
    7. 'keys' → logprob: -18.454004287719727
    8. '(' → logprob: -18.704004287719727
    9. '$key' → logprob: -19.079004287719727
    10. '   ' → logprob: -19.204004287719727

Token 1195: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42934492230415344
    2. ')
' → logprob: -1.804344892501831
    3. '
' → logprob: -2.804344892501831
    4. '           ' → logprob: -2.929344892501831
    5. '               ' → logprob: -3.304344892501831
    6. '):
' → logprob: -4.55434513092041
    7. ')' → logprob: -5.17934513092041
    8. '   ' → logprob: -5.30434513092041
    9. ':
' → logprob: -5.67934513092041
    10. '                   ' → logprob: -6.05434513092041

Token 1196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011381425894796848
    2. '
' → logprob: -4.51138162612915
    3. ' for' → logprob: -9.511381149291992
    4. '        
' → logprob: -9.511381149291992
    5. 'for' → logprob: -9.511381149291992
    6. '    
' → logprob: -9.886381149291992
    7. '   ' → logprob: -10.636381149291992
    8. '```' → logprob: -11.636381149291992
    9. '  
' → logprob: -11.886381149291992
    10. '[]
' → logprob: -12.511381149291992

Token 1197: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17009875178337097
    2. 'for' (adapté à ' for') → logprob: -2.1700987815856934
    3. ' for' → logprob: -3.1700987815856934
    4. '   ' → logprob: -8.795098304748535
    5. '
' → logprob: -9.295098304748535
    6. '	for' → logprob: -12.295098304748535
    7. '```' → logprob: -13.420098304748535
    8. '           ' → logprob: -13.545098304748535
    9. ',' → logprob: -15.295098304748535
    10. '        
' → logprob: -15.420098304748535

Token 1198: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -4.723352049040841e-06
    2. ' key' → logprob: -12.750004768371582
    3. 'k' → logprob: -13.250004768371582
    4. '	key' → logprob: -21.625003814697266
    5. '_key' → logprob: -23.500003814697266
    6. '(key' → logprob: -24.000003814697266
    7. '$key' → logprob: -24.250003814697266
    8. 'keys' → logprob: -25.250003814697266
    9. ' ключ' → logprob: -25.250003814697266
    10. '   ' → logprob: -25.375003814697266

Token 1199: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47421717643737793
    2. ' in' → logprob: -0.9742171764373779
    3. '   ' → logprob: -9.474217414855957
    4. 'import' → logprob: -10.599217414855957
    5. '
' → logprob: -12.099217414855957
    6. 'keys' → logprob: -12.099217414855957
    7. '    ' → logprob: -12.599217414855957
    8. ' ' → logprob: -12.724217414855957
    9. '  ' → logprob: -12.974217414855957
    10. 'n' → logprob: -13.349217414855957

Token 1200: ' keys' (ID: 12994)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0017407472478225827
    2. 'keys' → logprob: -6.7517409324646
    3. ' key' → logprob: -7.5017409324646
    4. 'k' → logprob: -11.126740455627441
    5. ' ' → logprob: -13.751740455627441
    6. ' keys' → logprob: -13.876740455627441
    7. '   ' → logprob: -14.876740455627441
    8. '	key' → logprob: -15.376740455627441
    9. '
' → logprob: -15.501740455627441
    10. '  ' → logprob: -15.751740455627441

Token 1201: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.093505099765025e-05
    2. 'to' → logprob: -11.625020980834961
    3. '
' → logprob: -13.125020980834961
    4. 'remove' → logprob: -13.125020980834961
    5. '=' → logprob: -13.375020980834961
    6. 'keys' → logprob: -14.000020980834961
    7. 'To' → logprob: -14.000020980834961
    8. '{
' → logprob: -14.000020980834961
    9. '   ' → logprob: -14.125020980834961
    10. 's' → logprob: -14.500020980834961

Token 1202: '_remove' (ID: 41629)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.0011986821191385388
    2. '_remove' → logprob: -6.751198768615723
    3. 'del' → logprob: -11.376198768615723
    4. '.remove' → logprob: -11.876198768615723
    5. ' remove' → logprob: -12.501198768615723
    6. 'pop' → logprob: -13.001198768615723
    7. 'Remove' → logprob: -13.501198768615723
    8. '	remove' → logprob: -13.751198768615723
    9. '_REMOVE' → logprob: -14.876198768615723
    10. '
' → logprob: -15.001198768615723

Token 1203: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24986867606639862
    2. ' in' → logprob: -2.249868631362915
    3. ':
' → logprob: -2.624868631362915
    4. ':' → logprob: -3.874868631362915
    5. ' del' → logprob: -5.374868869781494
    6. 'in' → logprob: -5.749868869781494
    7. '   ' → logprob: -6.249868869781494
    8. '):
' → logprob: -6.249868869781494
    9. '():
' → logprob: -6.499868869781494
    10. ',' → logprob: -6.624868869781494

Token 1204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001359401736408472
    2. ' del' → logprob: -6.751359462738037
    3. 'del' → logprob: -9.126358985900879
    4. '               ' → logprob: -9.876358985900879
    5. '   ' → logprob: -11.251358985900879
    6. '	del' → logprob: -11.626358985900879
    7. '       ' → logprob: -13.001358985900879
    8. '                   ' → logprob: -13.626358985900879
    9. '	       ' → logprob: -14.126358985900879
    10. '          ' → logprob: -14.126358985900879

Token 1205: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.05248972401022911
    2. '           ' → logprob: -3.052489757537842
    3. ' del' → logprob: -5.677489757537842
    4. '	del' → logprob: -8.552489280700684
    5. 'dist' → logprob: -8.677489280700684
    6. '   ' → logprob: -9.552489280700684
    7. '               ' → logprob: -10.302489280700684
    8. '       ' → logprob: -13.302489280700684
    9. '```' → logprob: -14.052489280700684
    10. '                   ' → logprob: -14.427489280700684

Token 1206: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.003179259831085801
    2. ' distances' → logprob: -5.75317907333374
    3. 'key' → logprob: -14.503179550170898
    4. 'distance' → logprob: -14.878179550170898
    5. ' dist' → logprob: -15.503179550170898
    6. '_dist' → logprob: -15.878179550170898
    7. '(dist' → logprob: -16.0031795501709
    8. '	dist' → logprob: -16.5031795501709
    9. ' key' → logprob: -16.6281795501709
    10. 'Distances' → logprob: -17.6281795501709

Token 1207: '[key' (ID: 16401)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3710590600967407
    2. '       ' → logprob: -1.6210590600967407
    3. '<|end|>' → logprob: -3.496058940887451
    4. '[next' → logprob: -3.996058940887451
    5. '[' → logprob: -4.121058940887451
    6. '        
' → logprob: -4.121058940887451
    7. '[key' → logprob: -4.746058940887451
    8. '[]
' → logprob: -5.746058940887451
    9. '[
' → logprob: -5.746058940887451
    10. '<|end|>' → logprob: -5.871058940887451

Token 1208: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007520380895584822
    2. '       ' → logprob: -5.8825201988220215
    3. '<|end|>' → logprob: -5.8825201988220215
    4. ']' → logprob: -6.7575201988220215
    5. ')
' → logprob: -7.7575201988220215
    6. '<|end|>' → logprob: -8.63252067565918
    7. '   ' → logprob: -10.63252067565918
    8. '')' → logprob: -10.63252067565918
    9. '```' → logprob: -10.88252067565918
    10. '
' → logprob: -11.00752067565918

Token 1209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02251947857439518
    2. '   ' → logprob: -4.272519588470459
    3. 'next' → logprob: -4.897519588470459
    4. '
' → logprob: -7.772519588470459
    5. ' next' → logprob: -8.6475191116333
    6. '	next' → logprob: -9.3975191116333
    7. '[next' → logprob: -9.5225191116333
    8. '           ' → logprob: -10.3975191116333
    9. '```' → logprob: -11.0225191116333
    10. '<|end|>' → logprob: -11.1475191116333

Token 1210: ' next' (ID: 2613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16517561674118042
    2. 'next' (adapté à ' next') → logprob: -1.9151756763458252
    3. ' next' → logprob: -5.915175437927246
    4. '   ' → logprob: -6.290175437927246
    5. '
' → logprob: -8.040175437927246
    6. '	next' → logprob: -10.165175437927246
    7. '[next' → logprob: -11.540175437927246
    8. ',next' → logprob: -12.290175437927246
    9. '(next' → logprob: -12.415175437927246
    10. '        
' → logprob: -12.915175437927246

Token 1211: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.048631198704242706
    2. '_token' → logprob: -3.048631191253662
    3. '_code' → logprob: -11.04863166809082
    4. '_tokens' → logprob: -12.29863166809082
    5. '_' → logprob: -12.54863166809082
    6. '_line' → logprob: -12.67363166809082
    7. ' _' → logprob: -13.42363166809082
    8. '('_' → logprob: -13.54863166809082
    9. '_Node' → logprob: -13.54863166809082
    10. '_pair' → logprob: -13.79863166809082

Token 1212: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -4.008129963040119e-06
    2. 'id' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.500003814697266
    4. '_idx' → logprob: -16.625003814697266
    5. '_token' → logprob: -16.625003814697266
    6. '_node' → logprob: -16.625003814697266
    7. '```' → logprob: -16.625003814697266
    8. '_ids' → logprob: -17.000003814697266
    9. '_' → logprob: -17.250003814697266
    10. '=' → logprob: -17.375003814697266

Token 1213: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002481842413544655
    2. ' +=' → logprob: -6.002481937408447
    3. '=' → logprob: -12.502481460571289
    4. ']+=' → logprob: -13.127481460571289
    5. '   ' → logprob: -15.627481460571289
    6. '+' → logprob: -15.877481460571289
    7. '+='' → logprob: -16.25248146057129
    8. '+="' → logprob: -17.12748146057129
    9. '*=' → logprob: -18.12748146057129
    10. '+=(' → logprob: -18.62748146057129

Token 1214: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.25001335144043
    4. '	' → logprob: -19.87501335144043
    5. '```' → logprob: -20.62501335144043
    6. '       ' → logprob: -21.12501335144043
    7. '  ' → logprob: -21.25001335144043
    8. '１' → logprob: -21.62501335144043
    9. '۱' → logprob: -21.62501335144043
    10. '0' → logprob: -22.12501335144043

Token 1215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '2' → logprob: -17.0
    4. '   ' → logprob: -18.375
    5. '       ' → logprob: -20.5
    6. '```' → logprob: -20.875
    7. '           ' → logprob: -21.0
    8. '0' → logprob: -21.75
    9. '１' → logprob: -21.75
    10. '  ' → logprob: -22.1875

Token 1216: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24891343712806702
    2. '       ' → logprob: -1.8739134073257446
    3. '<|end|>' → logprob: -2.748913526535034
    4. '	' → logprob: -6.873913288116455
    5. '<|end|>' → logprob: -6.873913288116455
    6. '   ' → logprob: -7.623913288116455
    7. '
' → logprob: -9.998913764953613
    8. '        
' → logprob: -10.373913764953613
    9. '           ' → logprob: -11.123913764953613
    10. '```' → logprob: -11.123913764953613

Token 1217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013285996101330966
    2. '   ' → logprob: -9.00013256072998
    3. '<|end|>' → logprob: -11.87513256072998
    4. 'remaining' → logprob: -14.12513256072998
    5. '<|end|>' → logprob: -14.25013256072998
    6. '           ' → logprob: -14.87513256072998
    7. '
' → logprob: -15.75013256072998
    8. 'def' → logprob: -16.375133514404297
    9. '```' → logprob: -16.500133514404297
    10. '        
' → logprob: -16.875133514404297

Token 1218: ' remaining' (ID: 15448)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.019237768370658e-05
    2. 'remaining' (adapté à ' remaining') → logprob: -9.750090599060059
    3. '   ' → logprob: -10.375090599060059
    4. '           ' → logprob: -15.375090599060059
    5. ' remaining' → logprob: -16.125089645385742
    6. '      ' → logprob: -17.125089645385742
    7. 'rest' → logprob: -17.250089645385742
    8. '
' → logprob: -17.625089645385742
    9. '```' → logprob: -17.625089645385742
    10. '	' → logprob: -17.875089645385742

Token 1219: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5793336629867554
    2. ' -=' → logprob: -0.8293336629867554
    3. '=' → logprob: -6.079333782196045
    4. '-' → logprob: -6.954333782196045
    5. '   ' → logprob: -9.704333305358887
    6. '       ' → logprob: -10.454333305358887
    7. ' =' → logprob: -10.954333305358887
    8. '+=' → logprob: -11.204333305358887
    9. '    ' → logprob: -11.704333305358887
    10. '           ' → logprob: -12.329333305358887

Token 1220: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '2' → logprob: -13.125001907348633
    3. ' ' → logprob: -15.375001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '       ' → logprob: -18.875001907348633
    6. '۱' → logprob: -19.375001907348633
    7. '１' → logprob: -20.125001907348633
    8. '```' → logprob: -20.375001907348633
    9. '  ' → logprob: -20.437501907348633
    10. '१' → logprob: -20.437501907348633

Token 1221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '   ' → logprob: -18.75
    5. '۱' → logprob: -19.75
    6. '       ' → logprob: -20.375
    7. '１' → logprob: -20.75
    8. '১' → logprob: -21.375
    9. '१' → logprob: -21.5
    10. '  ' → logprob: -21.625

Token 1222: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3710101842880249
    2. '   ' → logprob: -1.371010184288025
    3. '    
' → logprob: -3.7460103034973145
    4. '	
' → logprob: -4.2460103034973145
    5. '	return' → logprob: -4.4960103034973145
    6. 'return' → logprob: -6.3710103034973145
    7. '<|end|>' → logprob: -6.3710103034973145
    8. '
' → logprob: -7.4960103034973145
    9. '  
' → logprob: -7.6210103034973145
    10. '

' → logprob: -7.7460103034973145

Token 1223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10416361689567566
    2. 'return' → logprob: -2.354163646697998
    3. '#' → logprob: -5.604163646697998
    4. 'def' → logprob: -8.85416316986084
    5. '    
' → logprob: -9.72916316986084
    6. '
' → logprob: -10.22916316986084
    7. ' return' → logprob: -10.60416316986084
    8. 'for' → logprob: -13.60416316986084
    9. 'if' → logprob: -14.72916316986084
    10. '       ' → logprob: -14.97916316986084

Token 1224: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006367882248014212
    2. '#' (adapté à ' #') → logprob: -5.5063676834106445
    3. 'return' → logprob: -6.5063676834106445
    4. 'def' → logprob: -7.6313676834106445
    5. '
' → logprob: -8.506367683410645
    6. '    
' → logprob: -9.256367683410645
    7. 'for' → logprob: -12.381367683410645
    8. ' return' → logprob: -13.256367683410645
    9. '#
' → logprob: -13.881367683410645
    10. '       ' → logprob: -14.006367683410645

Token 1225: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7097771167755127
    2. 'def' → logprob: -0.9597771167755127
    3. '   ' → logprob: -2.0847771167755127
    4. 'for' → logprob: -7.459776878356934
    5. '
' → logprob: -8.459776878356934
    6. 'root' → logprob: -9.209776878356934
    7. '```' → logprob: -11.334776878356934
    8. 'return' → logprob: -11.584776878356934
    9. '    
' → logprob: -11.834776878356934
    10. ' def' → logprob: -12.084776878356934

Token 1226: ' dernier' (ID: 27982)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.6520605087280273
    2. ' root' → logprob: -0.9020605087280273
    3. 'def' → logprob: -3.2770605087280273
    4. '#' → logprob: -4.027060508728027
    5. ' def' → logprob: -4.652060508728027
    6. ' #' → logprob: -5.277060508728027
    7. ' last' → logprob: -7.027060508728027
    8. 'rac' → logprob: -7.277060508728027
    9. 'last' → logprob: -8.277060508728027
    10. '   ' → logprob: -8.402060508728027

Token 1227: ' noe' (ID: 49921)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'active' → logprob: -0.6936960220336914
    2. 'cluster' → logprob: -0.9436960220336914
    3. 'root' → logprob: -2.6936960220336914
    4. 'node' → logprob: -3.8186960220336914
    5. '#' → logprob: -4.943696022033691
    6. 'return' → logprob: -5.818696022033691
    7. ' active' → logprob: -5.943696022033691
    8. 'for' → logprob: -6.568696022033691
    9. '_active' → logprob: -6.693696022033691
    10. '   ' → logprob: -6.943696022033691

Token 1228: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -4.739826181321405e-05
    2. 'd' → logprob: -10.12504768371582
    3. 'u' → logprob: -13.12504768371582
    4. 'def' → logprob: -13.75004768371582
    5. '   ' → logprob: -14.00004768371582
    6. '#' → logprob: -14.12504768371582
    7. 'e' → logprob: -14.50004768371582
    8. '       ' → logprob: -14.75004768371582
    9. 'уд' → logprob: -15.00004768371582
    10. 'internal' → logprob: -15.12504768371582

Token 1229: ' actif' (ID: 128435)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47458401322364807
    2. ' =' → logprob: -0.9745839834213257
    3. '   ' → logprob: -8.349583625793457
    4. 'idx' → logprob: -9.349583625793457
    5. '_id' → logprob: -9.724583625793457
    6. '_idx' → logprob: -9.974583625793457
    7. '=root' → logprob: -11.224583625793457
    8. '=index' → logprob: -11.724583625793457
    9. '=node' → logprob: -11.724583625793457
    10. 'id' → logprob: -12.099583625793457

Token 1230: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9924834370613098
    2. '=' → logprob: -1.242483377456665
    3. 'idx' → logprob: -1.492483377456665
    4. '_idx' → logprob: -2.492483377456665
    5. '   ' → logprob: -3.742483377456665
    6. '_index' → logprob: -5.242483615875244
    7. 'index' → logprob: -5.867483615875244
    8. '_id' → logprob: -7.492483615875244
    9. 'for' → logprob: -8.117483139038086
    10. 'id' → logprob: -8.492483139038086

Token 1231: ' la' (ID: 557)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'active' → logprob: -0.9180430173873901
    2. 'clusters' → logprob: -1.5430430173873901
    3. 'None' → logprob: -1.9180430173873901
    4. ' active' → logprob: -2.4180431365966797
    5. '[' → logprob: -2.9180431365966797
    6. ' clusters' → logprob: -3.4180431365966797
    7. ' None' → logprob: -3.4180431365966797
    8. 'next' → logprob: -4.41804313659668
    9. ' next' → logprob: -4.91804313659668
    10. ' [' → logprob: -5.04304313659668

Token 1232: ' rac' (ID: 12334)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.6828097701072693
    2. 'len' → logprob: -1.182809829711914
    3. 'active' → logprob: -2.307809829711914
    4. 'None' → logprob: -3.182809829711914
    5. '[' → logprob: -4.057809829711914
    6. 'internal' → logprob: -4.682809829711914
    7. '[len' → logprob: -5.432809829711914
    8. 'next' → logprob: -5.432809829711914
    9. ' clusters' → logprob: -5.682809829711914
    10. ' len' → logprob: -5.807809829711914

Token 1233: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.001340123824775219
    2. 'e' → logprob: -6.876339912414551
    3. '   ' → logprob: -8.87633991241455
    4. '#' → logprob: -10.12633991241455
    5. '```' → logprob: -10.12633991241455
    6. ' ' → logprob: -11.37633991241455
    7. '       ' → logprob: -11.50133991241455
    8. '  ' → logprob: -11.62633991241455
    9. '``' → logprob: -11.75133991241455
    10. '	' → logprob: -12.12633991241455

Token 1234: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06797746568918228
    2. 'root' → logprob: -2.8179774284362793
    3. 'for' → logprob: -6.192977428436279
    4. ' =' → logprob: -6.442977428436279
    5. ' root' → logprob: -7.192977428436279
    6. ' for' → logprob: -7.567977428436279
    7. '=' → logprob: -8.067977905273438
    8. 'roots' → logprob: -8.567977905273438
    9. '=root' → logprob: -8.942977905273438
    10. '
' → logprob: -9.192977905273438

Token 1235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01571054756641388
    2. 'root' → logprob: -4.390710353851318
    3. ' root' → logprob: -6.015710353851318
    4. '
' → logprob: -7.640710353851318
    5. '```' → logprob: -9.390710830688477
    6. '(root' → logprob: -10.390710830688477
    7. 'return' → logprob: -10.640710830688477
    8. '	root' → logprob: -11.015710830688477
    9. ' for' → logprob: -11.015710830688477
    10. 'def' → logprob: -11.265710830688477

Token 1236: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.0071538761258125305
    2. 'for' → logprob: -5.3821539878845215
    3. '   ' → logprob: -6.1321539878845215
    4. ' root' → logprob: -8.132153511047363
    5. 'last' → logprob: -10.132153511047363
    6. ' for' → logprob: -11.632153511047363
    7. 'r' → logprob: -12.132153511047363
    8. 'roots' → logprob: -12.382153511047363
    9. 'idx' → logprob: -12.507153511047363
    10. '	root' → logprob: -14.382153511047363

Token 1237: '_idx' (ID: 15257)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16039614379405975
    2. '=' → logprob: -1.9103960990905762
    3. '_idx' → logprob: -9.160396575927734
    4. '=None' → logprob: -10.410396575927734
    5. '_index' → logprob: -11.535396575927734
    6. ',' → logprob: -11.660396575927734
    7. 'idx' → logprob: -11.785396575927734
    8. ' ' → logprob: -13.660396575927734
    9. ' =
' → logprob: -13.785396575927734
    10. '=

' → logprob: -13.785396575927734

Token 1238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687366247177124
    2. '=' → logprob: -1.136873722076416
    3. '=None' → logprob: -13.761873245239258
    4. '   ' → logprob: -15.261873245239258
    5. '=[' → logprob: -15.261873245239258
    6. ',' → logprob: -15.261873245239258
    7. 's' → logprob: -15.386873245239258
    8. '=
' → logprob: -15.511873245239258
    9. ' ' → logprob: -16.261873245239258
    10. ' =[' → logprob: -16.261873245239258

Token 1239: ' None' (ID: 4662)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'active' → logprob: -0.1444416344165802
    2. '[' → logprob: -2.394441604614258
    3. 'None' → logprob: -3.769441604614258
    4. 'len' → logprob: -4.644441604614258
    5. 'next' → logprob: -4.894441604614258
    6. ' active' → logprob: -7.269441604614258
    7. 'max' → logprob: -7.269441604614258
    8. '[len' → logprob: -7.894441604614258
    9. '0' → logprob: -8.019441604614258
    10. '-' → logprob: -8.144441604614258

Token 1240: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06914012134075165
    2. '   ' → logprob: -2.8191401958465576
    3. ' for' → logprob: -4.9441399574279785
    4. '	for' → logprob: -11.444140434265137
    5. 'last' → logprob: -12.944140434265137
    6. ' =' → logprob: -13.069140434265137
    7. 'root' → logprob: -13.319140434265137
    8. '=' → logprob: -13.694140434265137
    9. '```' → logprob: -13.694140434265137
    10. '[root' → logprob: -14.319140434265137

Token 1241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0070860497653484344
    2. 'for' → logprob: -5.382086277008057
    3. ' for' → logprob: -6.007086277008057
    4. '```' → logprob: -14.007085800170898
    5. '	for' → logprob: -14.257085800170898
    6. '[root' → logprob: -16.0070858001709
    7. '       ' → logprob: -17.2570858001709
    8. 'root' → logprob: -17.7570858001709
    9. ' =' → logprob: -17.8820858001709
    10. '``' → logprob: -18.1320858001709

Token 1242: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1294168382883072
    2. '   ' → logprob: -2.1294169425964355
    3. ' for' → logprob: -6.0044169425964355
    4. '	for' → logprob: -11.379416465759277
    5. 'active' → logprob: -12.754416465759277
    6. '```' → logprob: -13.504416465759277
    7. 'root' → logprob: -13.629416465759277
    8. 'idx' → logprob: -15.504416465759277
    9. '       ' → logprob: -15.879416465759277
    10. 'i' → logprob: -16.129417419433594

Token 1243: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.05151861160993576
    2. 'i' → logprob: -3.051518678665161
    3. 'k' → logprob: -6.301518440246582
    4. ' idx' → logprob: -7.551518440246582
    5. 'x' → logprob: -7.801518440246582
    6. 'index' → logprob: -8.926518440246582
    7. 'ix' → logprob: -10.676518440246582
    8. ' i' → logprob: -13.676518440246582
    9. 'ind' → logprob: -14.426518440246582
    10. 'id' → logprob: -14.551518440246582

Token 1244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4997274875640869
    2. 'in' → logprob: -1.249727487564087
    3. ' in' → logprob: -2.249727487564087
    4. ',in' → logprob: -7.874727249145508
    5. ',v' → logprob: -8.249727249145508
    6. ',d' → logprob: -9.124727249145508
    7. ',value' → logprob: -9.374727249145508
    8. ',val' → logprob: -9.499727249145508
    9. ',pos' → logprob: -10.124727249145508
    10. ',item' → logprob: -10.374727249145508

Token 1245: ' act' (ID: 1330)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.3835274279117584
    2. 'active' → logprob: -1.633527398109436
    3. 'val' → logprob: -2.3835275173187256
    4. 'is' → logprob: -4.6335272789001465
    5. 'status' → logprob: -5.0085272789001465
    6. 'a' → logprob: -5.1335272789001465
    7. 'alive' → logprob: -5.5085272789001465
    8. 'flag' → logprob: -6.2585272789001465
    9. 'ac' → logprob: -6.6335272789001465
    10. 'state' → logprob: -6.8835272789001465

Token 1246: ' in' (ID: 306)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.1321892887353897
    2. 'if' → logprob: -2.1321892738342285
    3. ',' → logprob: -6.0071892738342285
    4. 've' → logprob: -6.1321892738342285
    5. 'e' → logprob: -7.8821892738342285
    6. ' in' → logprob: -8.882189750671387
    7. '   ' → logprob: -10.257189750671387
    8. 'in' → logprob: -11.382189750671387
    9. 'iv' → logprob: -11.382189750671387
    10. 'ived' → logprob: -12.007189750671387

Token 1247: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.014163863845169544
    2. ' enumerate' → logprob: -4.264163970947266
    3. 'active' → logprob: -15.514163970947266
    4. 'in' → logprob: -16.139163970947266
    5. 'en' → logprob: -17.639163970947266
    6. '```' → logprob: -18.139163970947266
    7. 'Enumer' → logprob: -18.264163970947266
    8. 'activate' → logprob: -18.389163970947266
    9. '   ' → logprob: -18.764163970947266
    10. ',' → logprob: -19.139163970947266

Token 1248: '(active' (ID: 81123)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'active' → logprob: -0.0004611743788700551
    2. ' active' → logprob: -7.875461101531982
    3. '(active' → logprob: -9.50046157836914
    4. '   ' → logprob: -12.87546157836914
    5. '	active' → logprob: -13.25046157836914
    6. 'enumer' → logprob: -13.50046157836914
    7. 'act' → logprob: -15.00046157836914
    8. ' ' → logprob: -16.75046157836914
    9. 'zip' → logprob: -17.00046157836914
    10. '  ' → logprob: -18.12546157836914

Token 1249: '):
' (ID: 1883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7629243731498718
    2. ':' → logprob: -1.5129244327545166
    3. ':
' → logprob: -2.2629244327545166
    4. '<|end|>' → logprob: -2.7629244327545166
    5. '):
' → logprob: -3.1379244327545166
    6. '=True' → logprob: -3.7629244327545166
    7. '<|end|>' → logprob: -3.8879244327545166
    8. '   ' → logprob: -4.1379241943359375
    9. ',' → logprob: -4.3879241943359375
    10. '():
' → logprob: -4.5129241943359375

Token 1250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00665284926071763
    2. ' if' → logprob: -5.38165283203125
    3. 'if' → logprob: -6.50665283203125
    4. '<|end|>' → logprob: -8.75665283203125
    5. '   ' → logprob: -9.00665283203125
    6. ':' → logprob: -9.00665283203125
    7. '```' → logprob: -10.25665283203125
    8. '<|end|>' → logprob: -10.50665283203125
    9. '	if' → logprob: -12.13165283203125
    10. '[' → logprob: -12.25665283203125

Token 1251: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07134190946817398
    2. 'if' (adapté à ' if') → logprob: -2.6963419914245605
    3. ' if' → logprob: -6.6963419914245605
    4. '   ' → logprob: -9.321341514587402
    5. '	if' → logprob: -10.196341514587402
    6. '	   ' → logprob: -10.696341514587402
    7. '	' → logprob: -11.571341514587402
    8. 'If' → logprob: -12.196341514587402
    9. '    ' → logprob: -13.946341514587402
    10. '           ' → logprob: -14.196341514587402

Token 1252: ' act' (ID: 1330)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.010090832598507404
    2. ' act' → logprob: -4.6350908279418945
    3. '   ' → logprob: -8.135090827941895
    4. '       ' → logprob: -10.635090827941895
    5. '	act' → logprob: -11.135090827941895
    6. '    ' → logprob: -13.760090827941895
    7. '(act' → logprob: -14.510090827941895
    8. ' ' → logprob: -14.885090827941895
    9. 'active' → logprob: -15.260090827941895
    10. '  ' → logprob: -15.260090827941895

Token 1253: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8896456360816956
    2. '==' → logprob: -1.1396455764770508
    3. 'and' → logprob: -2.264645576477051
    4. ':' → logprob: -2.889645576477051
    5. '           ' → logprob: -3.014645576477051
    6. ' and' → logprob: -3.139645576477051
    7. ' ==' → logprob: -4.764645576477051
    8. '       ' → logprob: -5.889645576477051
    9. '=True' → logprob: -6.014645576477051
    10. '=' → logprob: -7.014645576477051

Token 1254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010272121289744973
    2. ' root' → logprob: -7.8760271072387695
    3. '       ' → logprob: -8.50102710723877
    4. '=root' → logprob: -8.87602710723877
    5. '	       ' → logprob: -9.25102710723877
    6. 'root' → logprob: -10.25102710723877
    7. ' =' → logprob: -10.37602710723877
    8. '		' → logprob: -10.75102710723877
    9. '	root' → logprob: -10.75102710723877
    10. ':' → logprob: -10.75102710723877

Token 1255: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.018674371764063835
    2. ' root' → logprob: -4.018674373626709
    3. '       ' → logprob: -7.643674373626709
    4. '           ' → logprob: -10.76867389678955
    5. '	root' → logprob: -11.01867389678955
    6. '   ' → logprob: -12.01867389678955
    7. '[root' → logprob: -14.51867389678955
    8. '=root' → logprob: -14.64367389678955
    9. '(root' → logprob: -15.39367389678955
    10. '```' → logprob: -15.51867389678955

Token 1256: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00010771531378850341
    2. '=' → logprob: -9.375107765197754
    3. 'idx' → logprob: -11.000107765197754
    4. '=_' → logprob: -12.875107765197754
    5. ' =' → logprob: -13.500107765197754
    6. '=root' → logprob: -14.000107765197754
    7. '_idxs' → logprob: -14.875107765197754
    8. 'root' → logprob: -15.375107765197754
    9. 'Idx' → logprob: -15.875107765197754
    10. '_=' → logprob: -15.875107765197754

Token 1257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804412856698036
    2. ' =' → logprob: -3.2880442142486572
    3. '=root' → logprob: -13.038043975830078
    4. '=
' → logprob: -15.038043975830078
    5. '＝' → logprob: -16.413043975830078
    6. '=None' → logprob: -17.413043975830078
    7. '=end' → logprob: -17.413043975830078
    8. '=

' → logprob: -17.663043975830078
    9. '   ' → logprob: -18.538043975830078
    10. '=}' → logprob: -18.538043975830078

Token 1258: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -6.2729995988775045e-06
    2. ' idx' → logprob: -12.000006675720215
    3. '	idx' → logprob: -18.1250057220459
    4. '           ' → logprob: -18.8750057220459
    5. '   ' → logprob: -19.2500057220459
    6. 'index' → logprob: -20.8750057220459
    7. '(idx' → logprob: -21.1250057220459
    8. '       ' → logprob: -21.1250057220459
    9. '_idx' → logprob: -21.2500057220459
    10. 'indices' → logprob: -21.6250057220459

Token 1259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0242629274725914
    2. '
' → logprob: -3.7742629051208496
    3. '           ' → logprob: -7.14926290512085
    4. '<|end|>' → logprob: -9.024263381958008
    5. '    
' → logprob: -9.774263381958008
    6. '       ' → logprob: -10.774263381958008
    7. '<|end|>' → logprob: -11.399263381958008
    8. '#' → logprob: -12.649263381958008
    9. ',' → logprob: -13.149263381958008
    10. '
' → logprob: -13.274263381958008

Token 1260: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022764618042856455
    2. '
' → logprob: -6.127276420593262
    3. '           ' → logprob: -9.752276420593262
    4. '    
' → logprob: -11.002276420593262
    5. '       ' → logprob: -12.877276420593262
    6. 'root' → logprob: -13.002276420593262
    7. '```' → logprob: -13.252276420593262
    8. 'return' → logprob: -13.502276420593262
    9. ' return' → logprob: -13.877276420593262
    10. '
' → logprob: -13.877276420593262

Token 1261: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0073680877685546875
    2. 'break' (adapté à ' break') → logprob: -5.507368087768555
    3. ' break' → logprob: -6.257368087768555
    4. '   ' → logprob: -6.632368087768555
    5. '       ' → logprob: -10.632368087768555
    6. '	break' → logprob: -11.507368087768555
    7. '               ' → logprob: -12.007368087768555
    8. '
' → logprob: -12.382368087768555
    9. 'root' → logprob: -12.757368087768555
    10. '                   ' → logprob: -14.132368087768555

Token 1262: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20343638956546783
    2. '
' → logprob: -1.7034363746643066
    3. '    
' → logprob: -6.328436374664307
    4. 'return' → logprob: -9.203436851501465
    5. '

' → logprob: -10.578436851501465
    6. ' return' → logprob: -10.703436851501465
    7. 'def' → logprob: -10.828436851501465
    8. '  
' → logprob: -11.453436851501465
    9. '
' → logprob: -11.703436851501465
    10. '	return' → logprob: -11.953436851501465

Token 1263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014029678422957659
    2. 'return' → logprob: -7.001402854919434
    3. '
' → logprob: -8.251402854919434
    4. 'root' → logprob: -8.751402854919434
    5. 'def' → logprob: -10.126402854919434
    6. '    
' → logprob: -10.626402854919434
    7. ' return' → logprob: -12.626402854919434
    8. '```' → logprob: -13.751402854919434
    9. '[root' → logprob: -14.126402854919434
    10. '	return' → logprob: -14.251402854919434

Token 1264: ' root' (ID: 6577)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11622516810894012
    2. '
' → logprob: -2.616225242614746
    3. 'def' → logprob: -3.366225242614746
    4. '    
' → logprob: -6.741225242614746
    5. 'root' (adapté à ' root') → logprob: -7.491225242614746
    6. 'return' → logprob: -7.991225242614746
    7. '```' → logprob: -10.491225242614746
    8. '#' → logprob: -11.991225242614746
    9. ' root' → logprob: -12.866225242614746
    10. ' return' → logprob: -12.991225242614746

Token 1265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142970979213715
    2. '=' → logprob: -1.7014297246932983
    3. '=root' → logprob: -11.82642936706543
    4. '.' → logprob: -12.45142936706543
    5. ',' → logprob: -13.20142936706543
    6. '.=' → logprob: -13.95142936706543
    7. ' ' → logprob: -14.20142936706543
    8. '   ' → logprob: -14.57642936706543
    9. '    ' → logprob: -15.32642936706543
    10. '  ' → logprob: -15.45142936706543

Token 1266: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.00861456897109747
    2. ' clusters' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.008615493774414
    4. 'nodes' → logprob: -18.258615493774414
    5. 'cl' → logprob: -18.883615493774414
    6. 'cluster' → logprob: -19.008615493774414
    7. '_clusters' → logprob: -20.633615493774414
    8. ' ' → logprob: -21.383615493774414
    9. ' ' → logprob: -22.133615493774414
    10. 'clubs' → logprob: -22.258615493774414

Token 1267: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. 'root' → logprob: -17.75
    4. '(root' → logprob: -18.375
    5. '```' → logprob: -18.5
    6. '=root' → logprob: -19.25
    7. '   ' → logprob: -19.375
    8. ' [' → logprob: -19.875
    9. '\[' → logprob: -19.875
    10. '[
' → logprob: -20.375

Token 1268: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.03230232000350952
    2. 'root' → logprob: -4.282302379608154
    3. '[root' → logprob: -4.282302379608154
    4. 'idx' → logprob: -6.032302379608154
    5. '_root' → logprob: -7.407302379608154
    6. 'index' → logprob: -8.282301902770996
    7. '   ' → logprob: -8.407301902770996
    8. '(root' → logprob: -9.407301902770996
    9. ')' → logprob: -9.407301902770996
    10. '=root' → logprob: -9.407301902770996

Token 1269: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005519599071703851
    2. ']' → logprob: -8.0005521774292
    3. ')
' → logprob: -9.3755521774292
    4. ' )' → logprob: -9.6255521774292
    5. ')]' → logprob: -10.3755521774292
    6. '   ' → logprob: -10.7505521774292
    7. '])' → logprob: -12.1255521774292
    8. ')

' → logprob: -13.1255521774292
    9. '<|end|>' → logprob: -13.2505521774292
    10. '）' → logprob: -14.3755521774292

Token 1270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6037668585777283
    2. 'def' → logprob: -0.8537668585777283
    3. '
' → logprob: -3.603766918182373
    4. '    
' → logprob: -8.728766441345215
    5. '#' → logprob: -9.853766441345215
    6. '```' → logprob: -12.728766441345215
    7. ' def' → logprob: -13.103766441345215
    8. '

' → logprob: -14.103766441345215
    9. 'import' → logprob: -14.353766441345215
    10. '  
' → logprob: -14.478766441345215

Token 1271: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31569012999534607
    2. '   ' → logprob: -1.3156901597976685
    3. '
' → logprob: -6.190690040588379
    4. '#' (adapté à ' #') → logprob: -7.940690040588379
    5. '    
' → logprob: -10.940690040588379
    6. '```' → logprob: -13.315690040588379
    7. ' def' → logprob: -13.690690040588379
    8. 'import' → logprob: -15.690690040588379
    9. 'from' → logprob: -15.815690040588379
    10. 'return' → logprob: -16.440690994262695

Token 1272: ' Calcul' (ID: 57243)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003187810070812702
    2. '#' → logprob: -8.75031852722168
    3. '   ' → logprob: -8.87531852722168
    4. 'return' → logprob: -11.12531852722168
    5. 'from' → logprob: -12.50031852722168
    6. '
' → logprob: -13.50031852722168
    7. ' def' → logprob: -14.62531852722168
    8. '    
' → logprob: -16.12531852722168
    9. 'import' → logprob: -17.00031852722168
    10. '```' → logprob: -17.25031852722168

Token 1273: 'er' (ID: 259)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008500520139932632
    2. '   ' → logprob: -4.883500576019287
    3. ' def' → logprob: -7.758500576019287
    4. 'des' → logprob: -8.883500099182129
    5. 'de' → logprob: -9.133500099182129
    6. '_de' → logprob: -10.508500099182129
    7. '#' → logprob: -10.508500099182129
    8. ' =' → logprob: -10.633500099182129
    9. '(root' → logprob: -10.633500099182129
    10. '=' → logprob: -11.008500099182129

Token 1274: ' degrés' (ID: 195297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014695111894980073
    2. '   ' → logprob: -6.876469612121582
    3. ' def' → logprob: -7.876469612121582
    4. '#' → logprob: -11.126469612121582
    5. 'degree' → logprob: -11.501469612121582
    6. 'le' → logprob: -11.751469612121582
    7. 'degrees' → logprob: -11.876469612121582
    8. 'root' → logprob: -12.251469612121582
    9. 'stack' → logprob: -13.001469612121582
    10. 'queue' → logprob: -13.251469612121582

Token 1275: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003548400942236185
    2. '   ' → logprob: -5.753548622131348
    3. '
' → logprob: -8.003548622131348
    4. ' def' → logprob: -10.253548622131348
    5. '    
' → logprob: -14.753548622131348
    6. '```' → logprob: -15.503548622131348
    7. '	def' → logprob: -15.753548622131348
    8. 'import' → logprob: -16.00354766845703
    9. '#' → logprob: -16.75354766845703
    10. 'de' → logprob: -18.00354766845703

Token 1276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31343451142311096
    2. 'def' → logprob: -1.3134344816207886
    3. '
' → logprob: -8.813434600830078
    4. ' def' → logprob: -10.688434600830078
    5. '    
' → logprob: -14.813434600830078
    6. '```' → logprob: -15.063434600830078
    7. 'from' → logprob: -15.313434600830078
    8. '#' → logprob: -15.438434600830078
    9. 'import' → logprob: -17.313434600830078
    10. '	def' → logprob: -17.438434600830078

Token 1277: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2352385965641588e-05
    2. '   ' → logprob: -11.500012397766113
    3. 'from' → logprob: -13.250012397766113
    4. ' def' → logprob: -15.250012397766113
    5. '
' → logprob: -16.125011444091797
    6. '#' (adapté à ' #') → logprob: -16.500011444091797
    7. 'stack' → logprob: -18.750011444091797
    8. '```' → logprob: -19.375011444091797
    9. '    
' → logprob: -19.625011444091797
    10. '	def' → logprob: -20.875011444091797

Token 1278: ' Fe' (ID: 5854)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031886440701782703
    2. '   ' → logprob: -6.003188610076904
    3. ' def' → logprob: -7.253188610076904
    4. '
' → logprob: -12.503189086914062
    5. 'from' → logprob: -14.628189086914062
    6. '#' → logprob: -14.878189086914062
    7. '	def' → logprob: -16.378189086914062
    8. '    
' → logprob: -16.628189086914062
    9. '```' → logprob: -16.628189086914062
    10. 'stack' → logprob: -16.753189086914062

Token 1279: 'u' (ID: 84)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006115250871516764
    2. '   ' → logprob: -8.125611305236816
    3. '#' → logprob: -8.250611305236816
    4. 'root' → logprob: -11.000611305236816
    5. 'f' → logprob: -11.125611305236816
    6. 'x' → logprob: -12.000611305236816
    7. ' def' → logprob: -12.125611305236816
    8. 'ef' → logprob: -13.500611305236816
    9. 'st' → logprob: -13.625611305236816
    10. 'r' → logprob: -14.000611305236816

Token 1280: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -0.20981617271900177
    2. 't' → logprob: -1.8348162174224854
    3. '#' → logprob: -5.084815979003906
    4. 'def' → logprob: -5.334815979003906
    5. 'd' → logprob: -5.709815979003906
    6. 'uille' → logprob: -5.834815979003906
    7. '   ' → logprob: -6.209815979003906
    8. 'u' → logprob: -6.334815979003906
    9. 'lles' → logprob: -6.459815979003906
    10. 'r' → logprob: -6.709815979003906

Token 1281: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05707647651433945
    2. ' =' → logprob: -3.9320764541625977
    3. ' def' → logprob: -3.9320764541625977
    4. '   ' → logprob: -4.307076454162598
    5. '
' → logprob: -6.557076454162598
    6. '=' → logprob: -7.057076454162598
    7. ':' → logprob: -8.057076454162598
    8. '#' → logprob: -10.682076454162598
    9. ' stack' → logprob: -10.932076454162598
    10. '```' → logprob: -11.182076454162598

Token 1282: 'ordinate' (ID: 14586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4949207901954651
    2. 'root' → logprob: -1.3699207305908203
    3. '#' → logprob: -2.1199207305908203
    4. '   ' → logprob: -4.99492073059082
    5. 'node' → logprob: -5.74492073059082
    6. ')' → logprob: -6.24492073059082
    7. ' #' → logprob: -6.36992073059082
    8. 'nodes' → logprob: -6.99492073059082
    9. ' root' → logprob: -7.49492073059082
    10. ' def' → logprob: -7.61992073059082

Token 1283: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.10959881544113159
    2. '#' → logprob: -3.1095988750457764
    3. '   ' → logprob: -3.8595988750457764
    4. 'illes' → logprob: -4.484598636627197
    5. 'aux' → logprob: -5.109598636627197
    6. 'ur' → logprob: -5.859598636627197
    7. 'ils' → logprob: -5.859598636627197
    8. 's' → logprob: -6.109598636627197
    9. 'ls' → logprob: -6.234598636627197
    10. 'x' → logprob: -6.484598636627197

Token 1284: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34597229957580566
    2. '#' → logprob: -2.3459722995758057
    3. '   ' → logprob: -2.7209722995758057
    4. ' ont' → logprob: -2.8459722995758057
    5. ' n' → logprob: -3.8459722995758057
    6. ' ne' → logprob: -4.470972061157227
    7. 'n' → logprob: -4.720972061157227
    8. 'ont' → logprob: -5.220972061157227
    9. ' sont' → logprob: -5.595972061157227
    10. 's' → logprob: -5.720972061157227

Token 1285: ' ont' (ID: 4930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009942247532308102
    2. '   ' → logprob: -4.884942054748535
    3. ' def' → logprob: -6.509942054748535
    4. ' =' → logprob: -8.509942054748535
    5. ':' → logprob: -8.759942054748535
    6. '
' → logprob: -8.759942054748535
    7. '#' → logprob: -9.509942054748535
    8. '=' → logprob: -9.634942054748535
    9. ' déf' → logprob: -10.134942054748535
    10. ' are' → logprob: -10.884942054748535

Token 1286: ' degré' (ID: 169072)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.04426748678088188
    2. 'de' → logprob: -3.169267416000366
    3. 'leur' → logprob: -7.794267654418945
    4. 'self' → logprob: -8.169267654418945
    5. ' degree' → logprob: -8.294267654418945
    6. ' degré' → logprob: -9.544267654418945
    7. 'le' → logprob: -10.044267654418945
    8. '   ' → logprob: -10.294267654418945
    9. 'un' → logprob: -10.294267654418945
    10. 'deg' → logprob: -10.419267654418945

Token 1287: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.058512937277555466
    2. '0' → logprob: -3.5585129261016846
    3. ' =' → logprob: -3.9335129261016846
    4. '2' → logprob: -5.058513164520264
    5. '1' → logprob: -6.183513164520264
    6. '   ' → logprob: -8.933512687683105
    7. '==' → logprob: -9.558512687683105
    8. ' ' → logprob: -10.058512687683105
    9. '#' → logprob: -10.808512687683105
    10. 'def' → logprob: -10.808512687683105

Token 1288: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5161066651344299
    2. '1' → logprob: -1.1411066055297852
    3. '=' → logprob: -2.641106605529785
    4. 'leaf' → logprob: -5.766106605529785
    5. ' =' → logprob: -6.016106605529785
    6. 'len' → logprob: -6.016106605529785
    7. 'le' → logprob: -6.266106605529785
    8. '2' → logprob: -6.891106605529785
    9. ' ' → logprob: -7.016106605529785
    10. '=len' → logprob: -9.016106605529785

Token 1289: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30463239550590515
    2. 'def' → logprob: -1.9296324253082275
    3. '
' → logprob: -2.1796324253082275
    4. ' def' → logprob: -5.554632186889648
    5. '    
' → logprob: -8.429632186889648
    6. '#' → logprob: -9.429632186889648
    7. '```' → logprob: -10.179632186889648
    8. ',' → logprob: -10.679632186889648
    9. ' for' → logprob: -11.179632186889648
    10. ' (' → logprob: -11.429632186889648

Token 1290: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1606883406639099
    2. '   ' → logprob: -1.9106884002685547
    3. '
' → logprob: -8.410688400268555
    4. ' def' → logprob: -8.660688400268555
    5. '#' → logprob: -10.410688400268555
    6. '```' → logprob: -10.410688400268555
    7. 'for' → logprob: -12.410688400268555
    8. 'from' → logprob: -13.660688400268555
    9. '    
' → logprob: -13.785688400268555
    10. 'import' → logprob: -14.410688400268555

Token 1291: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032089652959257364
    2. '   ' → logprob: -5.753209114074707
    3. 'from' → logprob: -11.253209114074707
    4. ' def' → logprob: -12.003209114074707
    5. '#' (adapté à ' #') → logprob: -12.378209114074707
    6. '```' → logprob: -12.628209114074707
    7. '
' → logprob: -13.003209114074707
    8. 'for' → logprob: -13.628209114074707
    9. 'stack' → logprob: -13.753209114074707
    10. '``' → logprob: -16.87820816040039

Token 1292: ' No' (ID: 3004)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004822697374038398
    2. '   ' → logprob: -8.250482559204102
    3. '#' → logprob: -8.500482559204102
    4. 'from' → logprob: -11.500482559204102
    5. 'stack' → logprob: -12.625482559204102
    6. 'for' → logprob: -13.500482559204102
    7. 'root' → logprob: -13.625482559204102
    8. ' def' → logprob: -14.125482559204102
    9. '
' → logprob: -14.500482559204102
    10. '```' → logprob: -15.500482559204102

Token 1293: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7003428936004639
    2. 'de' → logprob: -0.7003428936004639
    3. 'def' → logprob: -5.575343132019043
    4. 'des' → logprob: -6.325343132019043
    5. '#' → logprob: -7.325343132019043
    6. 'd' → logprob: -7.825343132019043
    7. '   ' → logprob: -8.700343132019043
    8. '```' → logprob: -9.075343132019043
    9. '
' → logprob: -9.950343132019043
    10. 'n' → logprob: -10.325343132019043

Token 1294: 'uds' (ID: 44387)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.018920281901955605
    2. 'des' → logprob: -4.268920421600342
    3. 'e' → logprob: -5.518920421600342
    4. 'd' → logprob: -8.268919944763184
    5. '```' → logprob: -8.768919944763184
    6. 'def' → logprob: -8.893919944763184
    7. '   ' → logprob: -9.143919944763184
    8. '#' → logprob: -10.768919944763184
    9. ' de' → logprob: -11.393919944763184
    10. '     ' → logprob: -11.893919944763184

Token 1295: ' internes' (ID: 183434)
  Prédit: 'intern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intern' → logprob: -0.2760555148124695
    2. ' internes' → logprob: -1.7760555744171143
    3. 'inter' → logprob: -2.9010555744171143
    4. 'internal' → logprob: -4.651055335998535
    5. '   ' → logprob: -5.151055335998535
    6. ' interne' → logprob: -8.401055335998535
    7. '
' → logprob: -8.526055335998535
    8. ' =' → logprob: -8.651055335998535
    9. 'extern' → logprob: -8.651055335998535
    10. ' intern' → logprob: -8.901055335998535

Token 1296: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7579711079597473
    2. ' =' → logprob: -1.8829710483551025
    3. ' ont' → logprob: -2.1329710483551025
    4. '#' → logprob: -2.7579710483551025
    5. '=' → logprob: -3.1329710483551025
    6. 'have' → logprob: -3.2579710483551025
    7. ' have' → logprob: -3.6329710483551025
    8. 'ont' → logprob: -3.8829710483551025
    9. ':' → logprob: -4.257971286773682
    10. 'def' → logprob: -4.507971286773682

Token 1297: 'switch' (ID: 41694)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.2837412357330322
    2. '   ' → logprob: -2.1587412357330322
    3. 'def' → logprob: -2.5337412357330322
    4. ' root' → logprob: -3.6587412357330322
    5. 'if' → logprob: -5.033740997314453
    6. '):
' → logprob: -5.408740997314453
    7. '
' → logprob: -5.908740997314453
    8. '#' → logprob: -5.908740997314453
    9. ')' → logprob: -5.908740997314453
    10. 'node' → logprob: -5.908740997314453

Token 1298: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3625337779521942
    2. ')' → logprob: -1.7375338077545166
    3. ' =' → logprob: -2.8625338077545166
    4. '):
' → logprob: -3.1125338077545166
    5. '   ' → logprob: -4.2375335693359375
    6. '=' → logprob: -5.1125335693359375
    7. '):' → logprob: -6.3625335693359375
    8. '=None' → logprob: -7.2375335693359375
    9. '_nodes' → logprob: -7.2375335693359375
    10. '):

' → logprob: -7.8625335693359375

Token 1299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4745517671108246
    2. ' ont' → logprob: -1.224551796913147
    3. '   ' → logprob: -2.8495516777038574
    4. ' have' → logprob: -4.349551677703857
    5. '):
' → logprob: -5.724551677703857
    6. 'have' → logprob: -5.849551677703857
    7. 'ont' → logprob: -6.099551677703857
    8. '#' → logprob: -6.474551677703857
    9. ''ont' → logprob: -6.724551677703857
    10. '):' → logprob: -7.724551677703857

Token 1300: ' ont' (ID: 4930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5137384533882141
    2. 'def' → logprob: -1.5137383937835693
    3. ' =' → logprob: -2.5137383937835693
    4. ' if' → logprob: -3.6387383937835693
    5. ' have' → logprob: -3.8887383937835693
    6. '=' → logprob: -4.013738632202148
    7. ' def' → logprob: -4.388738632202148
    8. 'if' → logprob: -4.763738632202148
    9. ':
' → logprob: -5.763738632202148
    10. 'have' → logprob: -5.763738632202148

Token 1301: ' degré' (ID: 169072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29653874039649963
    2. '   ' → logprob: -2.296538829803467
    3. 'root' → logprob: -2.296538829803467
    4. '0' → logprob: -3.671538829803467
    5. 'new' → logprob: -4.546538829803467
    6. '2' → logprob: -5.171538829803467
    7. 'max' → logprob: -5.296538829803467
    8. 'lambda' → logprob: -5.921538829803467
    9. '1' → logprob: -6.546538829803467
    10. 'None' → logprob: -6.796538829803467

Token 1302: ' =' (ID: 314)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.042469322681427
    2. '=' → logprob: -3.7924692630767822
    3. '   ' → logprob: -5.417469501495361
    4. ' =' → logprob: -5.417469501495361
    5. '0' → logprob: -6.167469501495361
    6. '3' → logprob: -6.417469501495361
    7. 'new' → logprob: -6.542469501495361
    8. 'lambda' → logprob: -6.667469501495361
    9. 'root' → logprob: -6.792469501495361
    10. '(lambda' → logprob: -6.917469501495361

Token 1303: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5787354111671448
    2. '(' → logprob: -1.4537353515625
    3. '(root' → logprob: -2.0787353515625
    4. '2' → logprob: -3.3287353515625
    5. '((' → logprob: -4.3287353515625
    6. ' (' → logprob: -4.5787353515625
    7. '(
' → logprob: -4.9537353515625
    8. '(cl' → logprob: -5.4537353515625
    9. '   ' → logprob: -5.8287353515625
    10. '3' → logprob: -6.5787353515625

Token 1304: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07837717235088348
    2. '+' → logprob: -3.2033772468566895
    3. 'def' → logprob: -4.8283772468566895
    4. ' =' → logprob: -4.9533772468566895
    5. 'de' → logprob: -5.0783772468566895
    6. '+=' → logprob: -5.2033772468566895
    7. 'if' → logprob: -5.5783772468566895
    8. '   ' → logprob: -6.5783772468566895
    9. 'of' → logprob: -7.4533772468566895
    10. ' +' → logprob: -7.8283772468566895

Token 1305: ' voisins' (ID: 166720)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7835146188735962
    2. 'connections' → logprob: -1.4085146188735962
    3. 'children' → logprob: -2.0335144996643066
    4. '(' → logprob: -3.5335144996643066
    5. '0' → logprob: -3.6585144996643066
    6. '(children' → logprob: -4.408514499664307
    7. 'if' → logprob: -4.408514499664307
    8. 'connected' → logprob: -4.533514499664307
    9. 'left' → logprob: -4.908514499664307
    10. '(left' → logprob: -4.908514499664307

Token 1306: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017171869054436684
    2. 'def' → logprob: -4.142171859741211
    3. '
' → logprob: -7.017171859741211
    4. ' def' → logprob: -8.517171859741211
    5. '#' → logprob: -10.892171859741211
    6. 'import' → logprob: -11.892171859741211
    7. '    
' → logprob: -12.392171859741211
    8. ' =' → logprob: -13.017171859741211
    9. 'from' → logprob: -13.267171859741211
    10. '```' → logprob: -13.517171859741211

Token 1307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5805225372314453
    2. 'def' → logprob: -0.8305225372314453
    3. '
' → logprob: -5.580522537231445
    4. '#' → logprob: -8.080522537231445
    5. ' def' → logprob: -8.455522537231445
    6. '```' → logprob: -8.455522537231445
    7. '    
' → logprob: -10.455522537231445
    8. 'from' → logprob: -11.330522537231445
    9. 'import' → logprob: -11.830522537231445
    10. 'if' → logprob: -12.455522537231445

Token 1308: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029782656580209732
    2. '   ' → logprob: -3.529782772064209
    3. ' def' → logprob: -11.15478229522705
    4. '
' → logprob: -11.15478229522705
    5. 'from' → logprob: -13.40478229522705
    6. '#' (adapté à ' #') → logprob: -13.90478229522705
    7. '    
' → logprob: -14.27978229522705
    8. '```' → logprob: -14.90478229522705
    9. '	def' → logprob: -16.404783248901367
    10. 'import' → logprob: -17.529783248901367

Token 1309: ' Dans' (ID: 22082)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011116082780063152
    2. '   ' → logprob: -4.511116027832031
    3. '
' → logprob: -9.886116027832031
    4. 'from' → logprob: -11.761116027832031
    5. ' def' → logprob: -12.261116027832031
    6. '#' → logprob: -12.511116027832031
    7. '    
' → logprob: -14.136116027832031
    8. '```' → logprob: -15.511116027832031
    9. 'import' → logprob: -16.01111602783203
    10. '	def' → logprob: -17.76111602783203

Token 1310: ' notre' (ID: 12092)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006876756902784109
    2. 'root' → logprob: -5.7568769454956055
    3. '#' → logprob: -6.0068769454956055
    4. 'le' → logprob: -8.006876945495605
    5. ' la' → logprob: -8.256876945495605
    6. 'la' → logprob: -8.756876945495605
    7. ' def' → logprob: -8.881876945495605
    8. '   ' → logprob: -9.256876945495605
    9. 'the' → logprob: -9.256876945495605
    10. '
' → logprob: -10.131876945495605

Token 1311: ' arbre' (ID: 164180)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9058780074119568
    2. 'def' → logprob: -0.9058780074119568
    3. 'code' → logprob: -1.7808780670166016
    4. 'ar' → logprob: -4.530878067016602
    5. 'cas' → logprob: -5.405878067016602
    6. ' code' → logprob: -6.030878067016602
    7. 'tree' → logprob: -7.155878067016602
    8. 'fonction' → logprob: -7.530878067016602
    9. '```' → logprob: -7.655878067016602
    10. '
' → logprob: -7.780878067016602

Token 1312: ' b' (ID: 287)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0975608080625534
    2. ',' → logprob: -2.9725608825683594
    3. '   ' → logprob: -3.9725608825683594
    4. '#' → logprob: -4.722560882568359
    5. '
' → logprob: -4.972560882568359
    6. ',
' → logprob: -5.472560882568359
    7. ':
' → logprob: -6.972560882568359
    8. ':' → logprob: -7.597560882568359
    9. ' def' → logprob: -7.597560882568359
    10. 'class' → logprob: -7.972560882568359

Token 1313: 'inaire' (ID: 41465)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03834153711795807
    2. 'inary' → logprob: -4.538341522216797
    3. 'inaire' → logprob: -4.913341522216797
    4. 'uilder' → logprob: -5.038341522216797
    5. 'uild' → logprob: -5.413341522216797
    6. '   ' → logprob: -6.163341522216797
    7. 'in' → logprob: -6.288341522216797
    8. '
' → logprob: -6.288341522216797
    9. 'uilt' → logprob: -7.538341522216797
    10. '_' → logprob: -7.788341522216797

Token 1314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1308952569961548
    2. ' tree' → logprob: -1.8808952569961548
    3. 'def' → logprob: -1.8808952569961548
    4. ':' → logprob: -2.1308951377868652
    5. 'tree' → logprob: -2.1308951377868652
    6. '
' → logprob: -3.7558951377868652
    7. ':
' → logprob: -3.8808951377868652
    8. ',
' → logprob: -4.130895137786865
    9. '_tree' → logprob: -4.130895137786865
    10. '   ' → logprob: -4.255895137786865

Token 1315: ' chaque' (ID: 21194)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1931215077638626
    2. '   ' → logprob: -1.8181215524673462
    3. 'if' → logprob: -4.943121433258057
    4. ' if' → logprob: -6.193121433258057
    5. ' def' → logprob: -6.193121433258057
    6. '#' → logprob: -6.318121433258057
    7. '
' → logprob: -9.318121910095215
    8. 'root' → logprob: -9.568121910095215
    9. 'for' → logprob: -10.068121910095215
    10. 'le' → logprob: -11.193121910095215

Token 1316: ' noe' (ID: 49921)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.19678933918476105
    2. 'def' → logprob: -2.946789264678955
    3. ' node' → logprob: -2.946789264678955
    4. 'internal' → logprob: -3.321789264678955
    5. 'Node' → logprob: -4.821789264678955
    6. '#' → logprob: -5.321789264678955
    7. 'n' → logprob: -5.446789264678955
    8. '
' → logprob: -5.446789264678955
    9. 'if' → logprob: -6.071789264678955
    10. ' internal' → logprob: -6.321789264678955

Token 1317: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.1338806003332138
    2. '   ' → logprob: -2.508880615234375
    3. '       ' → logprob: -3.758880615234375
    4. 'u' → logprob: -4.633880615234375
    5. '           ' → logprob: -6.133880615234375
    6. '               ' → logprob: -6.508880615234375
    7. 'd' → logprob: -6.883880615234375
    8. 'def' → logprob: -6.883880615234375
    9. ' ' → logprob: -7.133880615234375
    10. '#' → logprob: -7.508880615234375

Token 1318: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.649543046951294
    2. '   ' → logprob: -1.524543046951294
    3. ' a' → logprob: -1.524543046951294
    4. ' peut' → logprob: -4.899542808532715
    5. 'def' → logprob: -5.399542808532715
    6. '#' → logprob: -5.774542808532715
    7. ' has' → logprob: -5.899542808532715
    8. '       ' → logprob: -6.024542808532715
    9. ' possède' → logprob: -6.024542808532715
    10. 'à' → logprob: -6.274542808532715

Token 1319: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9312083125114441
    2. ' (' → logprob: -1.9312083721160889
    3. '(left' → logprob: -2.056208372116089
    4. '(de' → logprob: -2.431208372116089
    5. '   ' → logprob: -2.556208372116089
    6. 'degree' → logprob: -2.931208372116089
    7. 'left' → logprob: -3.056208372116089
    8. 'self' → logprob: -4.05620813369751
    9. '(self' → logprob: -4.55620813369751
    10. '(
' → logprob: -5.05620813369751

Token 1320: ' liens' (ID: 78582)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7897866368293762
    2. ' enfants' → logprob: -2.5397865772247314
    3. 'at' → logprob: -2.6647865772247314
    4. 'children' → logprob: -2.7897865772247314
    5. ' liens' → logprob: -2.9147865772247314
    6. 'g' → logprob: -3.0397865772247314
    7. ' left' → logprob: -3.2897865772247314
    8. 'neighbors' → logprob: -3.7897865772247314
    9. 'li' → logprob: -4.1647868156433105
    10. ' links' → logprob: -4.2897868156433105

Token 1321: ' vers' (ID: 3640)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9427339434623718
    2. ' =' → logprob: -1.0677340030670166
    3. ' to' → logprob: -2.3177340030670166
    4. ' with' → logprob: -3.4427340030670166
    5. ' vers' → logprob: -3.5677340030670166
    6. ' avec' → logprob: -3.6927340030670166
    7. 'with' → logprob: -4.3177337646484375
    8. ' bid' → logprob: -4.6927337646484375
    9. ' à' → logprob: -4.6927337646484375
    10. 'to' → logprob: -4.8177337646484375

Token 1322: ' fils' (ID: 56114)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3106491267681122
    2. 'left' → logprob: -1.4356491565704346
    3. ' left' → logprob: -4.1856489181518555
    4. ' self' → logprob: -4.9356489181518555
    5. 'son' → logprob: -6.5606489181518555
    6. ' son' → logprob: -6.5606489181518555
    7. ' ses' → logprob: -6.6856489181518555
    8. '   ' → logprob: -7.1856489181518555
    9. 'parent' → logprob: -7.6856489181518555
    10. 'ses' → logprob: -8.185648918151855

Token 1323: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49734941124916077
    2. 'et' → logprob: -1.8723493814468384
    3. 's' → logprob: -2.122349500656128
    4. ' and' → logprob: -3.372349500656128
    5. ',' → logprob: -3.497349500656128
    6. ' et' → logprob: -3.747349500656128
    7. 'and' → logprob: -4.497349262237549
    8. '```' → logprob: -5.122349262237549
    9. '#' → logprob: -5.247349262237549
    10. 'left' → logprob: -6.122349262237549

Token 1324: ' vers' (ID: 3640)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.11700817942619324
    2. 'le' → logprob: -2.3670082092285156
    3. ' parent' → logprob: -5.492008209228516
    4. 'vers' → logprob: -5.617008209228516
    5. 'leur' → logprob: -5.742008209228516
    6. 'un' → logprob: -6.242008209228516
    7. '   ' → logprob: -6.492008209228516
    8. 'son' → logprob: -6.992008209228516
    9. ' son' → logprob: -8.117008209228516
    10. 'p' → logprob: -8.367008209228516

Token 1325: ' son' (ID: 2391)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.27225634455680847
    2. 'le' → logprob: -1.5222563743591309
    3. 'son' → logprob: -4.522256374359131
    4. ' parent' → logprob: -5.397256374359131
    5. ' son' → logprob: -6.022256374359131
    6. 'leur' → logprob: -7.022256374359131
    7. ' le' → logprob: -7.647256374359131
    8. 'p' → logprob: -7.772256374359131
    9. 'father' → logprob: -8.647255897521973
    10. 'parents' → logprob: -9.272255897521973

Token 1326: ' père' (ID: 57070)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0069395024329423904
    2. ' parent' → logprob: -5.00693941116333
    3. '.parent' → logprob: -8.756939888000488
    4. 'parents' → logprob: -10.381939888000488
    5. '   ' → logprob: -11.381939888000488
    6. '_parent' → logprob: -11.881939888000488
    7. '#' → logprob: -13.006939888000488
    8. 'def' → logprob: -13.256939888000488
    9. ',parent' → logprob: -13.256939888000488
    10. 'father' → logprob: -13.381939888000488

Token 1327: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0218721441924572
    2. '
' → logprob: -3.896872043609619
    3. 'def' → logprob: -7.646872043609619
    4. '#' → logprob: -8.021872520446777
    5. ',' → logprob: -8.146872520446777
    6. 'import' → logprob: -9.271872520446777
    7. '    
' → logprob: -9.771872520446777
    8. '.' → logprob: -11.021872520446777
    9. '.
' → logprob: -11.146872520446777
    10. ',
' → logprob: -11.396872520446777

Token 1328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021574806421995163
    2. 'def' → logprob: -3.8965747356414795
    3. '
' → logprob: -7.146574974060059
    4. '    
' → logprob: -9.146574974060059
    5. '#' → logprob: -9.521574974060059
    6. 'from' → logprob: -9.896574974060059
    7. 'import' → logprob: -12.146574974060059
    8. '```' → logprob: -12.896574974060059
    9. 'parent' → logprob: -13.271574974060059
    10. ' def' → logprob: -14.021574974060059

Token 1329: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05362406373023987
    2. 'def' → logprob: -3.053624153137207
    3. '
' → logprob: -6.053624153137207
    4. '#' (adapté à ' #') → logprob: -6.178624153137207
    5. '    
' → logprob: -7.553624153137207
    6. 'parent' → logprob: -10.178624153137207
    7. 'from' → logprob: -10.428624153137207
    8. 'parents' → logprob: -12.678624153137207
    9. '```' → logprob: -13.303624153137207
    10. '        
' → logprob: -13.553624153137207

Token 1330: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1384483128786087
    2. 'def' → logprob: -2.1384482383728027
    3. '#' → logprob: -4.763448238372803
    4. 'parent' → logprob: -6.263448238372803
    5. 'parents' → logprob: -7.763448238372803
    6. '    
' → logprob: -7.888448238372803
    7. '
' → logprob: -8.763448715209961
    8. 'from' → logprob: -10.013448715209961
    9. '  
' → logprob: -13.138448715209961
    10. ' def' → logprob: -13.138448715209961

Token 1331: ' construit' (ID: 119882)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011125163175165653
    2. '#' → logprob: -4.636125087738037
    3. 'pe' → logprob: -7.761125087738037
    4. 'continue' → logprob: -8.261125564575195
    5. 'aj' → logprob: -8.386125564575195
    6. 'do' → logprob: -8.886125564575195
    7. 'can' → logprob: -9.761125564575195
    8. 'dé' → logprob: -9.886125564575195
    9. 'va' → logprob: -10.136125564575195
    10. '   ' → logprob: -11.011125564575195

Token 1332: ' une' (ID: 2463)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.782187819480896
    2. 'def' → logprob: -1.407187819480896
    3. ' un' → logprob: -1.907187819480896
    4. 'adj' → logprob: -3.0321879386901855
    5. '   ' → logprob: -3.2821879386901855
    6. '#' → logprob: -3.5321879386901855
    7. 'une' → logprob: -4.4071879386901855
    8. 'le' → logprob: -4.9071879386901855
    9. ' une' → logprob: -5.4071879386901855
    10. 'l' → logprob: -5.9071879386901855

Token 1333: ' adjacency' (ID: 177015)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5295367240905762
    2. 'from' → logprob: -1.7795367240905762
    3. 'adj' → logprob: -1.9045367240905762
    4. 'graph' → logprob: -2.404536724090576
    5. '#' → logprob: -6.654536724090576
    6. 'stack' → logprob: -7.154536724090576
    7. 'neighbors' → logprob: -7.904536724090576
    8. ' adjacency' → logprob: -8.654537200927734
    9. 'parent' → logprob: -9.154537200927734
    10. 'import' → logprob: -9.654537200927734

Token 1334: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.35840103030204773
    2. '_list' → logprob: -1.8584010601043701
    3. ' =' → logprob: -2.48340106010437
    4. '
' → logprob: -3.73340106010437
    5. ' list' → logprob: -4.733400821685791
    6. 'liste' → logprob: -4.858400821685791
    7. '=' → logprob: -5.483400821685791
    8. '{
' → logprob: -5.608400821685791
    9. '   ' → logprob: -5.733400821685791
    10. 'adj' → logprob: -5.983400821685791

Token 1335: ' pour' (ID: 1930)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.47865864634513855
    2. '
' → logprob: -1.728658676147461
    3. '   ' → logprob: -1.978658676147461
    4. ' =' → logprob: -3.728658676147461
    5. 'def' → logprob: -4.478658676147461
    6. 'graph' → logprob: -4.728658676147461
    7. ' adj' → logprob: -5.228658676147461
    8. '=' → logprob: -5.728658676147461
    9. ' adjacency' → logprob: -5.728658676147461
    10. '```' → logprob: -5.978658676147461

Token 1336: ' tous' (ID: 10688)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.3389298915863037
    2. 'def' → logprob: -2.5889298915863037
    3. '#' → logprob: -2.7139298915863037
    4. 'adj' → logprob: -3.2139298915863037
    5. 'default' → logprob: -3.4639298915863037
    6. 'la' → logprob: -4.838930130004883
    7. 'le' → logprob: -5.088930130004883
    8. 'the' → logprob: -5.213930130004883
    9. 'graph' → logprob: -5.213930130004883
    10. '   ' → logprob: -5.588930130004883

Token 1337: ' noe' (ID: 49921)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.028386346995830536
    2. '#' → logprob: -4.778386116027832
    3. ' nodes' → logprob: -4.903386116027832
    4. 'n' → logprob: -5.153386116027832
    5. '   ' → logprob: -5.778386116027832
    6. 'node' → logprob: -7.153386116027832
    7. '```' → logprob: -7.153386116027832
    8. 'def' → logprob: -7.528386116027832
    9. '
' → logprob: -8.153386116027832
    10. '_nodes' → logprob: -8.778386116027832

Token 1338: 'uds' (ID: 44387)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.2115396410226822
    2. 'de' → logprob: -2.5865397453308105
    3. 'ds' → logprob: -2.7115397453308105
    4. 'd' → logprob: -3.3365397453308105
    5. 'odes' → logprob: -4.7115397453308105
    6. '```' → logprob: -6.5865397453308105
    7. 's' → logprob: -7.0865397453308105
    8. 'nodes' → logprob: -7.4615397453308105
    9. '   ' → logprob: -7.8365397453308105
    10. 'uds' → logprob: -7.9615397453308105

Token 1339: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6997733116149902
    2. ' =' → logprob: -1.1997733116149902
    3. '
' → logprob: -2.4497733116149902
    4. ':
' → logprob: -3.5747733116149902
    5. 'adj' → logprob: -4.19977331161499
    6. '=' → logprob: -4.32477331161499
    7. '#' → logprob: -4.94977331161499
    8. ',' → logprob: -4.94977331161499
    9. '```' → logprob: -5.19977331161499
    10. '.
' → logprob: -5.19977331161499

Token 1340: 'fe' (ID: 2302)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3208138048648834
    2. ')' → logprob: -2.4458138942718506
    3. 'n' → logprob: -2.6958138942718506
    4. '):
' → logprob: -2.8208138942718506
    5. 'nodes' → logprob: -4.1958136558532715
    6. '   ' → logprob: -4.4458136558532715
    7. '),' → logprob: -5.1958136558532715
    8. 'total' → logprob: -5.8208136558532715
    9. 'max' → logprob: -5.9458136558532715
    10. 'size' → logprob: -6.0708136558532715

Token 1341: 'u' (ID: 84)
  Prédit: 'ighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -0.9275423288345337
    2. 'ighbor' → logprob: -1.8025423288345337
    3. 'de' → logprob: -1.8025423288345337
    4. 'ighbours' → logprob: -2.427542209625244
    5. 'ur' → logprob: -2.927542209625244
    6. 'des' → logprob: -3.802542209625244
    7. '```' → logprob: -4.052542209625244
    8. 'igh' → logprob: -4.052542209625244
    9. '   ' → logprob: -4.552542209625244
    10. 'ighbour' → logprob: -4.677542209625244

Token 1342: 'illes' (ID: 16849)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14785738289356232
    2. 'ds' → logprob: -2.022857427597046
    3. 'uds' → logprob: -6.272857189178467
    4. 'ud' → logprob: -6.647857189178467
    5. 'r' → logprob: -7.897857189178467
    6. 'des' → logprob: -8.147857666015625
    7. 'ed' → logprob: -8.522857666015625
    8. 'eds' → logprob: -8.772857666015625
    9. 'nds' → logprob: -8.897857666015625
    10. '   ' → logprob: -9.147857666015625

Token 1343: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8489022254943848
    2. ')' → logprob: -1.0989022254943848
    3. ')
' → logprob: -2.5989022254943848
    4. '):
' → logprob: -2.5989022254943848
    5. '   ' → logprob: -3.4739022254943848
    6. ' et' → logprob: -3.5989022254943848
    7. 'et' → logprob: -5.098902225494385
    8. '```' → logprob: -5.473902225494385
    9. ' and' → logprob: -5.598902225494385
    10. ',
' → logprob: -5.848902225494385

Token 1344: ' internes' (ID: 183434)
  Prédit: 'intern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intern' → logprob: -0.2865382134914398
    2. 'internal' → logprob: -2.0365381240844727
    3. ' internes' → logprob: -2.4115381240844727
    4. 'inter' → logprob: -3.6615381240844727
    5. ' internal' → logprob: -6.661538124084473
    6. ' intern' → logprob: -6.661538124084473
    7. ' interne' → logprob: -8.661538124084473
    8. '
' → logprob: -9.536538124084473
    9. '   ' → logprob: -9.536538124084473
    10. 'in' → logprob: -10.036538124084473

Token 1345: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.152701735496521
    2. ')' → logprob: -1.277701735496521
    3. ')
' → logprob: -1.652701735496521
    4. ' =' → logprob: -2.0277018547058105
    5. ',' → logprob: -3.9027018547058105
    6. '
' → logprob: -4.4027018547058105
    7. '   ' → logprob: -4.7777018547058105
    8. ':
' → logprob: -4.7777018547058105
    9. '```' → logprob: -5.2777018547058105
    10. '_nodes' → logprob: -5.5277018547058105

Token 1346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0539214052259922
    2. 'adj' → logprob: -3.1789214611053467
    3. '
' → logprob: -5.428921222686768
    4. '```' → logprob: -5.428921222686768
    5. 'graph' → logprob: -7.428921222686768
    6. ' adjacency' → logprob: -7.803921222686768
    7. 'def' → logprob: -8.303921699523926
    8. 'edges' → logprob: -8.803921699523926
    9. 'nodes' → logprob: -9.053921699523926
    10. ' =' → logprob: -9.303921699523926

Token 1347: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25382092595100403
    2. 'adj' → logprob: -1.5038208961486816
    3. 'graph' → logprob: -7.253820896148682
    4. 'def' → logprob: -8.00382137298584
    5. '
' → logprob: -8.00382137298584
    6. '```' → logprob: -8.75382137298584
    7. '    
' → logprob: -9.25382137298584
    8. 'nodes' → logprob: -9.62882137298584
    9. '#' (adapté à ' #') → logprob: -9.87882137298584
    10. 'n' → logprob: -10.00382137298584

Token 1348: ' puis' (ID: 18766)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.130581334233284
    2. '   ' → logprob: -2.1305813789367676
    3. 'def' → logprob: -6.255581378936768
    4. 'graph' → logprob: -6.630581378936768
    5. 'from' → logprob: -9.25558090209961
    6. '#' → logprob: -9.75558090209961
    7. '    
' → logprob: -9.88058090209961
    8. 'edges' → logprob: -10.00558090209961
    9. 'n' → logprob: -10.25558090209961
    10. '
' → logprob: -10.38058090209961

Token 1349: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013410773826763034
    2. '#' → logprob: -6.751340866088867
    3. 'from' → logprob: -9.876340866088867
    4. '   ' → logprob: -10.126340866088867
    5. '
' → logprob: -10.376340866088867
    6. 'stack' → logprob: -10.501340866088867
    7. ' def' → logprob: -11.626340866088867
    8. 'dé' → logprob: -12.501340866088867
    9. 'dfs' → logprob: -13.501340866088867
    10. 'queue' → logprob: -13.501340866088867

Token 1350: ' calc' (ID: 25691)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025318166241049767
    2. 'from' → logprob: -3.775318145751953
    3. 'build' → logprob: -7.150318145751953
    4. '#' → logprob: -7.400318145751953
    5. 'stack' → logprob: -7.775318145751953
    6. 'dfs' → logprob: -9.525318145751953
    7. 'queue' → logprob: -10.025318145751953
    8. '
' → logprob: -10.275318145751953
    9. ' def' → logprob: -10.400318145751953
    10. 'import' → logprob: -10.650318145751953

Token 1351: 'ule' (ID: 1601)
  Prédit: 'uler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.1325949728488922
    2. 'ule' → logprob: -2.5075950622558594
    3. 'ul' → logprob: -3.7575950622558594
    4. 'ulate' → logprob: -4.382595062255859
    5. 'érer' → logprob: -6.882595062255859
    6. 'cule' → logprob: -6.882595062255859
    7. 'l' → logprob: -7.257595062255859
    8. 'cul' → logprob: -7.382595062255859
    9. 'def' → logprob: -7.882595062255859
    10. '       ' → logprob: -7.882595062255859

Token 1352: ' le' (ID: 505)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49395808577537537
    2. '   ' → logprob: -1.6189581155776978
    3. 'degrees' → logprob: -2.118957996368408
    4. 'degree' → logprob: -3.243957996368408
    5. ' degrees' → logprob: -4.493957996368408
    6. 'adj' → logprob: -4.868957996368408
    7. '#' → logprob: -5.618957996368408
    8. ' def' → logprob: -5.868957996368408
    9. '       ' → logprob: -6.618957996368408
    10. '
' → logprob: -6.868957996368408

Token 1353: ' degré' (ID: 169072)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.699061393737793
    2. 'def' → logprob: -1.074061393737793
    3. 'from' → logprob: -2.574061393737793
    4. 'degree' → logprob: -2.699061393737793
    5. '#' → logprob: -4.824061393737793
    6. 'adj' → logprob: -5.574061393737793
    7. 'queue' → logprob: -6.324061393737793
    8. ' degrees' → logprob: -6.324061393737793
    9. 'stack' → logprob: -6.699061393737793
    10. 'neighbors' → logprob: -8.449061393737793

Token 1354: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03896694630384445
    2. 'adj' → logprob: -3.2889668941497803
    3. '
' → logprob: -8.41396713256836
    4. 'graph' → logprob: -8.53896713256836
    5. ' adjacency' → logprob: -8.53896713256836
    6. 'def' → logprob: -9.16396713256836
    7. '```' → logprob: -10.03896713256836
    8. ' adj' → logprob: -10.16396713256836
    9. '    
' → logprob: -10.16396713256836
    10. ' =' → logprob: -11.41396713256836

Token 1355: ' noe' (ID: 49921)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5081621408462524
    2. 'root' → logprob: -1.5081621408462524
    3. 'nodes' → logprob: -3.008162021636963
    4. 'clusters' → logprob: -3.008162021636963
    5. ' root' → logprob: -3.758162021636963
    6. ' nodes' → logprob: -4.258162021636963
    7. ' clusters' → logprob: -4.758162021636963
    8. 'neighbors' → logprob: -5.008162021636963
    9. ' def' → logprob: -5.258162021636963
    10. 'cluster' → logprob: -5.383162021636963

Token 1356: 'uds' (ID: 44387)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.2333676815032959
    2. 'uds' → logprob: -2.108367681503296
    3. 's' → logprob: -3.108367681503296
    4. 'udes' → logprob: -4.733367919921875
    5. 'de' → logprob: -4.983367919921875
    6. 'def' → logprob: -5.108367919921875
    7. 'ds' → logprob: -5.108367919921875
    8. 'ud' → logprob: -5.358367919921875
    9. 'odes' → logprob: -5.608367919921875
    10. 'd' → logprob: -6.858367919921875

Token 1357: ' internes' (ID: 183434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0643574446439743
    2. 's' → logprob: -3.8143575191497803
    3. '
' → logprob: -3.9393575191497803
    4. '#' → logprob: -5.314357280731201
    5. 'adj' → logprob: -5.439357280731201
    6. ' =' → logprob: -6.064357280731201
    7. 'def' → logprob: -6.064357280731201
    8. ':
' → logprob: -6.689357280731201
    9. '```' → logprob: -7.064357280731201
    10. '.
' → logprob: -7.064357280731201

Token 1358: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01771507039666176
    2. '
' → logprob: -4.517714977264404
    3. 'adj' → logprob: -5.267714977264404
    4. '    
' → logprob: -7.517714977264404
    5. 'def' → logprob: -8.142715454101562
    6. 'graph' → logprob: -8.392715454101562
    7. '```' → logprob: -8.392715454101562
    8. ' adjacency' → logprob: -10.017715454101562
    9. '#' → logprob: -10.517715454101562
    10. ',' → logprob: -10.892715454101562

Token 1359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02414586953818798
    2. 'adj' → logprob: -4.02414608001709
    3. '
' → logprob: -5.64914608001709
    4. '```' → logprob: -6.89914608001709
    5. '    
' → logprob: -7.14914608001709
    6. 'def' → logprob: -7.77414608001709
    7. 'graph' → logprob: -8.52414608001709
    8. ' adjacency' → logprob: -10.89914608001709
    9. '``' → logprob: -11.89914608001709
    10. '  
' → logprob: -12.52414608001709

Token 1360: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3896094858646393
    2. '   ' → logprob: -1.139609456062317
    3. 'graph' → logprob: -7.014609336853027
    4. 'def' → logprob: -7.014609336853027
    5. 'from' → logprob: -7.514609336853027
    6. '#' (adapté à ' #') → logprob: -8.139609336853027
    7. '    
' → logprob: -10.014609336853027
    8. '```' → logprob: -10.764609336853027
    9. '
' → logprob: -11.389609336853027
    10. ' adjacency' → logprob: -12.139609336853027

Token 1361: ' Constru' (ID: 98396)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5815675854682922
    2. '   ' → logprob: -0.8315675854682922
    3. '#' → logprob: -6.331567764282227
    4. 'def' → logprob: -6.456567764282227
    5. 'from' → logprob: -6.456567764282227
    6. 'graph' → logprob: -7.831567764282227
    7. ' adjacency' → logprob: -8.956567764282227
    8. ' adj' → logprob: -9.581567764282227
    9. 'nodes' → logprob: -10.331567764282227
    10. 'edges' → logprob: -11.206567764282227

Token 1362: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.08168423175811768
    2. 'ire' → logprob: -2.956684112548828
    3. 'it' → logprob: -4.456684112548828
    4. '   ' → logprob: -5.706684112548828
    5. 'ir' → logprob: -5.956684112548828
    6. 'ction' → logprob: -5.956684112548828
    7. '#' → logprob: -6.206684112548828
    8. 'ict' → logprob: -7.456684112548828
    9. 'irt' → logprob: -7.706684112548828
    10. '
' → logprob: -7.706684112548828

Token 1363: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0053652566857635975
    2. 'from' → logprob: -6.005365371704102
    3. 'graph' → logprob: -6.755365371704102
    4. '   ' → logprob: -7.255365371704102
    5. 'def' → logprob: -7.380365371704102
    6. ' adjacency' → logprob: -8.505365371704102
    7. ' adj' → logprob: -8.755365371704102
    8. '#' → logprob: -11.505365371704102
    9. ' from' → logprob: -12.255365371704102
    10. '```' → logprob: -12.630365371704102

Token 1364: ' list' (ID: 1562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20965071022510529
    2. '_list' → logprob: -2.334650754928589
    3. 'list' → logprob: -2.959650754928589
    4. '=' → logprob: -3.834650754928589
    5. 'adj' → logprob: -4.70965051651001
    6. '   ' → logprob: -4.70965051651001
    7. '_adj' → logprob: -8.584650993347168
    8. 'List' → logprob: -8.834650993347168
    9. ' ' → logprob: -9.209650993347168
    10. 'def' → logprob: -9.834650993347168

Token 1365: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6985071897506714
    2. 'adj' → logprob: -0.6985071897506714
    3. 'graph' → logprob: -6.073507308959961
    4. ' =' → logprob: -6.823507308959961
    5. '
' → logprob: -7.198507308959961
    6. '=' → logprob: -7.573507308959961
    7. ' adj' → logprob: -9.073507308959961
    8. ' adjacency' → logprob: -9.073507308959961
    9. '```' → logprob: -9.448507308959961
    10. '    
' → logprob: -9.698507308959961

Token 1366: 'd' (ID: 67)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0031741487327963114
    2. 'from' → logprob: -6.253174304962158
    3. ' adj' → logprob: -7.378174304962158
    4. 'graph' → logprob: -8.128173828125
    5. 'n' → logprob: -9.503173828125
    6. ' adjacency' → logprob: -9.503173828125
    7. '```' → logprob: -9.753173828125
    8. 'neighbors' → logprob: -10.878173828125
    9. '{' → logprob: -11.003173828125
    10. ')' → logprob: -11.128173828125

Token 1367: 'iction' (ID: 4090)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.06171330809593201
    2. 'efs' → logprob: -4.186713218688965
    3. ' =' → logprob: -4.311713218688965
    4. 'adj' → logprob: -4.561713218688965
    5. '=' → logprob: -4.936713218688965
    6. 'e' → logprob: -5.811713218688965
    7. '{' → logprob: -6.311713218688965
    8. 'eg' → logprob: -6.311713218688965
    9. 'egree' → logprob: -6.311713218688965
    10. 'ict' → logprob: -6.436713218688965

Token 1368: 'naire' (ID: 30464)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2516081631183624
    2. '   ' → logprob: -1.75160813331604
    3. 'ict' → logprob: -3.87660813331604
    4. '=' → logprob: -4.626608371734619
    5. 'ef' → logprob: -5.626608371734619
    6. '={' → logprob: -5.876608371734619
    7. 'adj' → logprob: -5.876608371734619
    8. '={}
' → logprob: -6.001608371734619
    9. 'iction' → logprob: -6.501608371734619
    10. '{
' → logprob: -7.126608371734619

Token 1369: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7674553990364075
    2. ' =' → logprob: -1.1424553394317627
    3. '=' → logprob: -2.0174553394317627
    4. 'adj' → logprob: -2.7674553394317627
    5. ')' → logprob: -5.517455577850342
    6. '):
' → logprob: -5.642455577850342
    7. '```' → logprob: -6.017455577850342
    8. ')
' → logprob: -6.017455577850342
    9. ' adj' → logprob: -6.392455577850342
    10. '{
' → logprob: -6.892455577850342

Token 1370: ' sets' (ID: 11982)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.31732743978500366
    2. 'adj' → logprob: -2.1923274993896484
    3. '{' → logprob: -2.6923274993896484
    4. 'default' → logprob: -3.1923274993896484
    5. 'int' → logprob: -3.8173274993896484
    6. 'lists' → logprob: -4.567327499389648
    7. 'node' → logprob: -5.567327499389648
    8. 'collections' → logprob: -5.817327499389648
    9. 'idx' → logprob: -5.942327499389648
    10. 'dict' → logprob: -5.942327499389648

Token 1371: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2766472399234772
    2. '):
' → logprob: -1.9016472101211548
    3. ')' → logprob: -3.1516473293304443
    4. ' =' → logprob: -3.9016473293304443
    5. ')
' → logprob: -4.651647090911865
    6. '):' → logprob: -5.026647090911865
    7. 'adj' → logprob: -5.276647090911865
    8. '```' → logprob: -5.776647090911865
    9. '=' → logprob: -6.651647090911865
    10. ' adjacency' → logprob: -7.026647090911865

Token 1372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2523062229156494
    2. 'adj' → logprob: -1.5023062229156494
    3. 'graph' → logprob: -8.37730598449707
    4. '```' → logprob: -9.37730598449707
    5. '    
' → logprob: -10.87730598449707
    6. ' adj' → logprob: -11.25230598449707
    7. 'neighbors' → logprob: -11.37730598449707
    8. ' adjacency' → logprob: -11.87730598449707
    9. '
' → logprob: -12.00230598449707
    10. 'edges' → logprob: -12.87730598449707

Token 1373: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.5773010849952698
    2. '   ' → logprob: -0.8273010849952698
    3. 'graph' → logprob: -6.952301025390625
    4. ' adj' → logprob: -8.577301025390625
    5. ' adjacency' → logprob: -8.827301025390625
    6. '```' → logprob: -10.577301025390625
    7. '    
' → logprob: -10.952301025390625
    8. 'neighbors' → logprob: -11.702301025390625
    9. 'edges' → logprob: -12.327301025390625
    10. '
' → logprob: -12.452301025390625

Token 1374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741172194480896
    2. '=' → logprob: -0.9741172194480896
    3. '   ' → logprob: -10.724117279052734
    4. '={}' → logprob: -11.849117279052734
    5. 'acency' → logprob: -12.599117279052734
    6. '={}
' → logprob: -13.099117279052734
    7. ':' → logprob: -13.724117279052734
    8. 'ection' → logprob: -14.349117279052734
    9. 'ect' → logprob: -14.599117279052734
    10. ' ' → logprob: -14.599117279052734

Token 1375: ' {}
' (ID: 11421)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.16359065473079681
    2. '{}' → logprob: -1.913590669631958
    3. '{}
' → logprob: -5.913590431213379
    4. ' {' → logprob: -8.413590431213379
    5. 'default' → logprob: -8.413590431213379
    6. '{}

' → logprob: -8.663590431213379
    7. 'dict' → logprob: -10.663590431213379
    8. ' {}' → logprob: -11.413590431213379
    9. 'collections' → logprob: -13.413590431213379
    10. ' {}
' → logprob: -13.538590431213379

Token 1376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.386924147605896
    2. 'for' → logprob: -1.136924147605896
    3. ' for' → logprob: -9.886923789978027
    4. '```' → logprob: -13.886923789978027
    5. 'def' → logprob: -14.386923789978027
    6. '	for' → logprob: -14.386923789978027
    7. '       ' → logprob: -16.886924743652344
    8. 'n' → logprob: -16.886924743652344
    9. '
' → logprob: -17.636924743652344
    10. 'all' → logprob: -18.386924743652344

Token 1377: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018444780260324478
    2. '   ' → logprob: -4.018445014953613
    3. 'def' (adapté à ' def') → logprob: -8.518445014953613
    4. ' for' → logprob: -9.268445014953613
    5. '	for' → logprob: -14.893445014953613
    6. '```' → logprob: -15.518445014953613
    7. '
' → logprob: -16.643444061279297
    8. 'all' → logprob: -17.268444061279297
    9. '       ' → logprob: -17.268444061279297
    10. ' ' → logprob: -17.893444061279297

Token 1378: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0020384411327540874
    2. ' add' → logprob: -6.752038478851318
    3. 'connect' → logprob: -7.752038478851318
    4. 'build' → logprob: -8.37703800201416
    5. 'dfs' → logprob: -8.62703800201416
    6. 'aj' → logprob: -12.00203800201416
    7. 'def' → logprob: -12.62703800201416
    8. '   ' → logprob: -13.00203800201416
    9. 'update' → logprob: -13.12703800201416
    10. 'visit' → logprob: -13.12703800201416

Token 1379: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.32465124130249023
    2. '(adj' → logprob: -1.9496512413024902
    3. '_node' → logprob: -2.4496512413024902
    4. '(node' → logprob: -3.5746512413024902
    5. '_adj' → logprob: -4.19965124130249
    6. 'node' → logprob: -6.57465124130249
    7. '(u' → logprob: -6.57465124130249
    8. '(edge' → logprob: -6.94965124130249
    9. 'edge' → logprob: -7.44965124130249
    10. 'adj' → logprob: -7.69965124130249

Token 1380: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.008685840293765068
    2. '(a' → logprob: -4.758686065673828
    3. '(' → logprob: -10.508686065673828
    4. '(node' → logprob: -10.633686065673828
    5. '(x' → logprob: -11.633686065673828
    6. ' (' → logprob: -12.008686065673828
    7. '(n' → logprob: -12.508686065673828
    8. '(i' → logprob: -14.133686065673828
    9. '(f' → logprob: -15.633686065673828
    10. '(adj' → logprob: -16.133686065673828

Token 1381: ',v' (ID: 30680)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.16110759973526
    2. ',' → logprob: -1.9111075401306152
    3. ',u' → logprob: -7.161107540130615
    4. ' ,' → logprob: -9.661108016967773
    5. '(' → logprob: -11.036108016967773
    6. ' (' → logprob: -11.411108016967773
    7. '   ' → logprob: -11.786108016967773
    8. '(a' → logprob: -12.786108016967773
    9. ',(' → logprob: -13.536108016967773
    10. '[u' → logprob: -14.036108016967773

Token 1382: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.30748867988586426
    2. '(u' → logprob: -2.1824886798858643
    3. '):' → logprob: -2.3074886798858643
    4. ',' → logprob: -3.4324886798858643
    5. '   ' → logprob: -4.057488441467285
    6. ',u' → logprob: -6.057488441467285
    7. '):
' → logprob: -9.057488441467285
    8. ' ):
' → logprob: -9.307488441467285
    9. '    ' → logprob: -9.932488441467285
    10. ' ):' → logprob: -10.307488441467285

Token 1383: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49256792664527893
    2. '       ' → logprob: -1.2425678968429565
    3. '(u' → logprob: -2.367568016052246
    4. '(' → logprob: -6.492568016052246
    5. '(
' → logprob: -6.742568016052246
    6. 'u' → logprob: -6.992568016052246
    7. '
' → logprob: -6.992568016052246
    8. 'adj' → logprob: -7.242568016052246
    9. '(adj' → logprob: -7.992568016052246
    10. ' adj' → logprob: -8.117568016052246

Token 1384: ' adj' (ID: 20251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4328748285770416
    2. ' if' → logprob: -1.6828747987747192
    3. 'if' → logprob: -1.9328747987747192
    4. ' adj' → logprob: -4.30787467956543
    5. 'adj' (adapté à ' adj') → logprob: -5.05787467956543
    6. 'for' → logprob: -7.55787467956543
    7. ' for' → logprob: -8.05787467956543
    8. '       ' → logprob: -9.43287467956543
    9. '
' → logprob: -10.18287467956543
    10. '  ' → logprob: -13.18287467956543

Token 1385: '.setdefault' (ID: 113053)
  Prédit: '.setdefault'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.0005544631858356297
    2. '.' → logprob: -7.62555456161499
    3. '[u' → logprob: -10.375554084777832
    4. '=' → logprob: -10.625554084777832
    5. 'set' → logprob: -12.750554084777832
    6. 'u' → logprob: -12.875554084777832
    7. '   ' → logprob: -13.500554084777832
    8. ' =' → logprob: -13.500554084777832
    9. 'def' → logprob: -14.375554084777832
    10. '[' → logprob: -14.750554084777832

Token 1386: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -3.4121114822482923e-06
    2. 'u' → logprob: -12.625003814697266
    3. '(v' → logprob: -17.500003814697266
    4. '[u' → logprob: -17.625003814697266
    5. '(' → logprob: -19.125003814697266
    6. '   ' → logprob: -20.125003814697266
    7. '	u' → logprob: -20.750003814697266
    8. '```' → logprob: -20.750003814697266
    9. ',u' → logprob: -20.875003814697266
    10. ' u' → logprob: -21.125003814697266

Token 1387: ',set' (ID: 95771)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011470874771475792
    2. ',u' → logprob: -4.886470794677734
    3. '[u' → logprob: -5.761470794677734
    4. ' ,' → logprob: -7.636470794677734
    5. ',set' → logprob: -9.511470794677734
    6. ',v' → logprob: -9.761470794677734
    7. '   ' → logprob: -10.261470794677734
    8. ',[' → logprob: -10.511470794677734
    9. '.setdefault' → logprob: -11.386470794677734
    10. ').' → logprob: -12.136470794677734

Token 1388: '()).' (ID: 9503)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.10774178802967072
    2. ',' → logprob: -2.6077418327331543
    3. ').' → logprob: -3.7327418327331543
    4. ',u' → logprob: -5.982741832733154
    5. '   ' → logprob: -6.482741832733154
    6. ')' → logprob: -8.357741355895996
    7. ' ,' → logprob: -10.232741355895996
    8. ')(' → logprob: -10.232741355895996
    9. '       ' → logprob: -10.357741355895996
    10. '(v' → logprob: -10.482741355895996

Token 1389: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.8624639324116288e-06
    2. '.add' → logprob: -13.875001907348633
    3. ' add' → logprob: -14.000001907348633
    4. '(add' → logprob: -18.125001907348633
    5. 'append' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.250001907348633
    7. ')add' → logprob: -19.625001907348633
    8. '	add' → logprob: -20.125001907348633
    9. '_add' → logprob: -20.125001907348633
    10. '.' → logprob: -20.500001907348633

Token 1390: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.10312992334365845
    2. 'v' → logprob: -2.3531298637390137
    3. ' v' → logprob: -5.853129863739014
    4. '(' → logprob: -10.603130340576172
    5. ' (' → logprob: -11.603130340576172
    6. '   ' → logprob: -11.728130340576172
    7. '	v' → logprob: -12.103130340576172
    8. ' ' → logprob: -14.978130340576172
    9. ')v' → logprob: -16.228130340576172
    10. '    ' → logprob: -16.603130340576172

Token 1391: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02981865406036377
    2. ')
' → logprob: -3.529818534851074
    3. ' )' → logprob: -10.029818534851074
    4. ' )
' → logprob: -11.404818534851074
    5. '   ' → logprob: -11.779818534851074
    6. '       ' → logprob: -12.904818534851074
    7. ')
' → logprob: -13.279818534851074
    8. '<|end|>' → logprob: -15.779818534851074
    9. ')return' → logprob: -16.02981948852539
    10. '),' → logprob: -16.15481948852539

Token 1392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012682457454502583
    2. '   ' → logprob: -4.5126824378967285
    3. 'adj' → logprob: -7.1376824378967285
    4. '
' → logprob: -7.6376824378967285
    5. ' adj' → logprob: -9.137682914733887
    6. '<|end|>' → logprob: -9.137682914733887
    7. 'def' → logprob: -10.637682914733887
    8. '           ' → logprob: -10.762682914733887
    9. ')
' → logprob: -10.762682914733887
    10. ')' → logprob: -11.387682914733887

Token 1393: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.008624386973679066
    2. ' adj' → logprob: -4.75862455368042
    3. '       ' → logprob: -12.258624076843262
    4. 'v' → logprob: -12.383624076843262
    5. '   ' → logprob: -14.883624076843262
    6. 'add' → logprob: -15.133624076843262
    7. 'ad' → logprob: -15.633624076843262
    8. '           ' → logprob: -16.758625030517578
    9. '(adj' → logprob: -17.008625030517578
    10. 'u' → logprob: -17.633625030517578

Token 1394: '.setdefault' (ID: 113053)
  Prédit: '.setdefault'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -8.180258191714529e-06
    2. '.' → logprob: -12.125008583068848
    3. '[u' → logprob: -13.750008583068848
    4. '.set' → logprob: -13.750008583068848
    5. '   ' → logprob: -15.000008583068848
    6. ' .' → logprob: -16.25000762939453
    7. '
' → logprob: -17.37500762939453
    8. 'set' → logprob: -18.00000762939453
    9. '(u' → logprob: -18.12500762939453
    10. '[' → logprob: -18.12500762939453

Token 1395: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.006723183207213879
    2. 'v' → logprob: -5.006723403930664
    3. '(' → logprob: -12.381723403930664
    4. '(u' → logprob: -13.006723403930664
    5. '   ' → logprob: -14.756723403930664
    6. '	v' → logprob: -14.881723403930664
    7. ' v' → logprob: -15.006723403930664
    8. ')v' → logprob: -16.006723403930664
    9. ' (' → logprob: -16.131723403930664
    10. 'u' → logprob: -16.131723403930664

Token 1396: ',set' (ID: 95771)
  Prédit: ',u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.0727580264210701
    2. ',' → logprob: -2.9477579593658447
    3. '(u' → logprob: -4.197758197784424
    4. 'u' → logprob: -6.322758197784424
    5. ' ,' → logprob: -7.822758197784424
    6. '   ' → logprob: -8.572757720947266
    7. ',v' → logprob: -9.072757720947266
    8. ')' → logprob: -9.322757720947266
    9. ')(' → logprob: -9.947757720947266
    10. ',n' → logprob: -11.447757720947266

Token 1397: '()).' (ID: 9503)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.15557275712490082
    2. ').' → logprob: -2.0305726528167725
    3. '   ' → logprob: -4.780572891235352
    4. ')(' → logprob: -6.405572891235352
    5. '()).' → logprob: -7.280572891235352
    6. ')' → logprob: -7.405572891235352
    7. 'u' → logprob: -7.530572891235352
    8. '       ' → logprob: -8.655572891235352
    9. '[u' → logprob: -9.030572891235352
    10. ',u' → logprob: -9.155572891235352

Token 1398: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.00866125151515007
    2. 'u' → logprob: -4.758661270141602
    3. '(u' → logprob: -10.008661270141602
    4. ' u' → logprob: -14.133661270141602
    5. ' add' → logprob: -14.258661270141602
    6. '[u' → logprob: -15.633661270141602
    7. 'append' → logprob: -16.2586612701416
    8. '(add' → logprob: -17.3836612701416
    9. '.add' → logprob: -17.8836612701416
    10. '<u' → logprob: -18.2586612701416

Token 1399: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.011051355861127377
    2. 'u' → logprob: -4.511051177978516
    3. ' u' → logprob: -12.886051177978516
    4. ' (' → logprob: -15.011051177978516
    5. '	u' → logprob: -15.136051177978516
    6. '(' → logprob: -15.761051177978516
    7. ',u' → logprob: -15.886051177978516
    8. '[u' → logprob: -16.261051177978516
    9. '   ' → logprob: -16.511051177978516
    10. '(v' → logprob: -18.761051177978516

Token 1400: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001757696009008214
    2. ')
' → logprob: -9.500175476074219
    3. '   ' → logprob: -10.125175476074219
    4. '       ' → logprob: -10.375175476074219
    5. '<|end|>' → logprob: -11.125175476074219
    6. '())' → logprob: -12.375175476074219
    7. ')return' → logprob: -12.875175476074219
    8. ')

' → logprob: -13.875175476074219
    9. '(u' → logprob: -13.875175476074219
    10. ')#' → logprob: -14.000175476074219

Token 1401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01943858154118061
    2. 'def' → logprob: -4.269438743591309
    3. 'for' → logprob: -6.019438743591309
    4. '
' → logprob: -6.394438743591309
    5. ' for' → logprob: -7.144438743591309
    6. '<|end|>' → logprob: -9.019438743591309
    7. 'if' → logprob: -9.519438743591309
    8. ' if' → logprob: -9.894438743591309
    9. ' def' → logprob: -10.019438743591309
    10. '       ' → logprob: -10.394438743591309

Token 1402: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7721544504165649
    2. 'def' (adapté à ' def') → logprob: -0.8971544504165649
    3. 'for' → logprob: -2.2721543312072754
    4. ' for' → logprob: -4.522154331207275
    5. 'if' → logprob: -4.522154331207275
    6. 'add' → logprob: -6.272154331207275
    7. ' def' → logprob: -6.522154331207275
    8. '
' → logprob: -7.397154331207275
    9. 'stack' → logprob: -7.522154331207275
    10. ' if' → logprob: -7.647154331207275

Token 1403: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.383118599653244
    2. 'compute' → logprob: -2.3831186294555664
    3. 'dfs' → logprob: -2.8831186294555664
    4. ' build' → logprob: -3.0081186294555664
    5. 'add' → logprob: -3.1331186294555664
    6. 'tr' → logprob: -3.7581186294555664
    7. 'connect' → logprob: -3.7581186294555664
    8. 'set' → logprob: -4.883118629455566
    9. ' add' → logprob: -5.508118629455566
    10. ' dfs' → logprob: -5.758118629455566

Token 1404: '_adj' (ID: 117293)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.022017695009708405
    2. 'tree' → logprob: -4.022017478942871
    3. '(node' → logprob: -5.897017478942871
    4. '_edge' → logprob: -7.897017478942871
    5. '_edges' → logprob: -8.147017478942871
    6. '   ' → logprob: -9.397017478942871
    7. '(root' → logprob: -9.647017478942871
    8. '(tree' → logprob: -9.647017478942871
    9. 'Tree' → logprob: -10.147017478942871
    10. '(u' → logprob: -10.272017478942871

Token 1405: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.016091616824269295
    2. '(root' → logprob: -4.266091823577881
    3. '(u' → logprob: -6.766091823577881
    4. '(n' → logprob: -8.266091346740723
    5. 'node' → logprob: -8.516091346740723
    6. '   ' → logprob: -9.266091346740723
    7. 'root' → logprob: -9.766091346740723
    8. '(user' → logprob: -10.516091346740723
    9. ' (' → logprob: -10.641091346740723
    10. 'tree' → logprob: -11.141091346740723

Token 1406: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5247803330421448
    2. ',' → logprob: -1.5247802734375
    3. '):' → logprob: -2.1497802734375
    4. '(node' → logprob: -3.0247802734375
    5. '   ' → logprob: -4.3997802734375
    6. ',node' → logprob: -4.3997802734375
    7. '       ' → logprob: -7.5247802734375
    8. '):
' → logprob: -9.3997802734375
    9. ',n' → logprob: -9.3997802734375
    10. ':' → logprob: -9.6497802734375

Token 1407: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004086355213075876
    2. '       ' → logprob: -5.504086494445801
    3. ' if' → logprob: -11.8790864944458
    4. '```' → logprob: -14.7540864944458
    5. 'if' → logprob: -15.3790864944458
    6. '    
' → logprob: -16.379085540771484
    7. '    ' → logprob: -17.004085540771484
    8. '
' → logprob: -17.254085540771484
    9. '   ' → logprob: -17.254085540771484
    10. '	if' → logprob: -17.629085540771484

Token 1408: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.40906670689582825
    2. '   ' → logprob: -1.4090666770935059
    3. ' if' → logprob: -2.409066677093506
    4. '       ' → logprob: -6.534066677093506
    5. '	if' → logprob: -12.409067153930664
    6. '```' → logprob: -13.159067153930664
    7. '    ' → logprob: -15.034067153930664
    8. '           ' → logprob: -15.909067153930664
    9. ' ' → logprob: -16.034067153930664
    10. '  ' → logprob: -16.284067153930664

Token 1409: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0381135493516922
    2. ' node' → logprob: -3.288113594055176
    3. 'not' → logprob: -9.663113594055176
    4. ' not' → logprob: -11.913113594055176
    5. '   ' → logprob: -13.538113594055176
    6. '(node' → logprob: -14.663113594055176
    7. '	node' → logprob: -16.16311264038086
    8. '       ' → logprob: -19.28811264038086
    9. 'Node' → logprob: -19.53811264038086
    10. ' ' → logprob: -19.66311264038086

Token 1410: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.06245776638388634
    2. ' is' → logprob: -2.812457799911499
    3. '   ' → logprob: -8.687458038330078
    4. '.right' → logprob: -9.312458038330078
    5. 'is' → logprob: -9.437458038330078
    6. ':' → logprob: -9.937458038330078
    7. 'left' → logprob: -10.187458038330078
    8. '.is' → logprob: -10.437458038330078
    9. '==' → logprob: -11.062458038330078
    10. ':
' → logprob: -12.062458038330078

Token 1411: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2938608229160309
    2. 'is' → logprob: -1.9188607931137085
    3. ':
' → logprob: -2.543860912322998
    4. ':' → logprob: -3.543860912322998
    5. '   ' → logprob: -8.54386043548584
    6. 'and' → logprob: -9.91886043548584
    7. '==' → logprob: -10.29386043548584
    8. '):
' → logprob: -11.04386043548584
    9. '!=' → logprob: -11.04386043548584
    10. ' and' → logprob: -11.16886043548584

Token 1412: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10067383944988251
    2. 'not' → logprob: -2.3506739139556885
    3. ' None' → logprob: -8.35067367553711
    4. ' not' → logprob: -8.97567367553711
    5. '   ' → logprob: -9.22567367553711
    6. 'none' → logprob: -12.35067367553711
    7. 'Not' → logprob: -14.10067367553711
    8. '(None' → logprob: -15.10067367553711
    9. 'node' → logprob: -15.72567367553711
    10. '       ' → logprob: -15.97567367553711

Token 1413: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.054500666621607e-06
    2. ' None' → logprob: -12.75000286102295
    3. '(None' → logprob: -17.500003814697266
    4. 'none' → logprob: -18.500003814697266
    5. '_None' → logprob: -19.500003814697266
    6. '   ' → logprob: -20.000003814697266
    7. 'Node' → logprob: -21.000003814697266
    8. 'not' → logprob: -21.625003814697266
    9. '=None' → logprob: -21.750003814697266
    10. 'Nothing' → logprob: -22.000003814697266

Token 1414: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34660181403160095
    2. '           ' → logprob: -1.9716018438339233
    3. '       ' → logprob: -2.221601724624634
    4. ' and' → logprob: -3.346601724624634
    5. ':' → logprob: -4.846601963043213
    6. '):
' → logprob: -7.221601963043213
    7. '   ' → logprob: -7.721601963043213
    8. 'and' → logprob: -7.846601963043213
    9. '():
' → logprob: -8.346601486206055
    10. ',' → logprob: -9.471601486206055

Token 1415: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.05489650368690491
    2. ' node' → logprob: -2.929896593093872
    3. '       ' → logprob: -12.179896354675293
    4. '   ' → logprob: -12.304896354675293
    5. '(node' → logprob: -13.429896354675293
    6. '           ' → logprob: -13.554896354675293
    7. '	node' → logprob: -14.429896354675293
    8. 'not' → logprob: -14.804896354675293
    9. ' ' → logprob: -15.429896354675293
    10. '[node' → logprob: -16.17989730834961

Token 1416: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.3140997290611267
    2. 'right' → logprob: -1.3140997886657715
    3. '   ' → logprob: -7.9390997886657715
    4. ' right' → logprob: -8.314099311828613
    5. ' is' → logprob: -9.814099311828613
    6. '.' → logprob: -9.814099311828613
    7. '       ' → logprob: -10.689099311828613
    8. '	right' → logprob: -10.814099311828613
    9. '.left' → logprob: -10.939099311828613
    10. ',right' → logprob: -11.564099311828613

Token 1417: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.032077573239803314
    2. 'is' → logprob: -3.6570775508880615
    3. ':
' → logprob: -5.282077789306641
    4. ':' → logprob: -7.657077789306641
    5. '):
' → logprob: -8.78207778930664
    6. ')' → logprob: -11.15707778930664
    7. '!=' → logprob: -11.65707778930664
    8. '   ' → logprob: -11.90707778930664
    9. '	is' → logprob: -12.40707778930664
    10. '       ' → logprob: -12.53207778930664

Token 1418: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1616261750459671
    2. ' not' → logprob: -1.9116262197494507
    3. 'None' → logprob: -6.78662633895874
    4. '   ' → logprob: -8.536625862121582
    5. '       ' → logprob: -10.536625862121582
    6. 'node' → logprob: -10.911625862121582
    7. ' None' → logprob: -10.911625862121582
    8. 'Not' → logprob: -12.161625862121582
    9. '           ' → logprob: -12.786625862121582
    10. '	not' → logprob: -13.661625862121582

Token 1419: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00033951509976759553
    2. ' None' → logprob: -8.00033950805664
    3. '   ' → logprob: -12.62533950805664
    4. 'none' → logprob: -15.12533950805664
    5. '(None' → logprob: -15.62533950805664
    6. 'not' → logprob: -16.25033950805664
    7. ' ' → logprob: -16.62533950805664
    8. '  ' → logprob: -17.00033950805664
    9. '_None' → logprob: -17.00033950805664
    10. '```' → logprob: -17.00033950805664

Token 1420: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22575557231903076
    2. '       ' → logprob: -1.9757555723190308
    3. ':' → logprob: -2.8507556915283203
    4. '           ' → logprob: -5.97575569152832
    5. '():
' → logprob: -6.72575569152832
    6. '   ' → logprob: -7.22575569152832
    7. '):
' → logprob: -7.47575569152832
    8. ' and' → logprob: -8.60075569152832
    9. '```' → logprob: -9.22575569152832
    10. ',' → logprob: -9.35075569152832

Token 1421: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009697027853690088
    2. '   ' → logprob: -7.375969886779785
    3. '```' → logprob: -9.000969886779785
    4. 'add' → logprob: -9.125969886779785
    5. '
' → logprob: -10.125969886779785
    6. ' add' → logprob: -10.625969886779785
    7. '           ' → logprob: -10.875969886779785
    8. ':
' → logprob: -12.250969886779785
    9. '(add' → logprob: -12.250969886779785
    10. '``' → logprob: -12.625969886779785

Token 1422: ' add' (ID: 1147)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5686336755752563
    2. '       ' → logprob: -1.3186336755752563
    3. 'add' (adapté à ' add') → logprob: -2.318633556365967
    4. ' add' → logprob: -2.693633556365967
    5. '           ' → logprob: -9.568634033203125
    6. '	add' → logprob: -9.943634033203125
    7. '   ' → logprob: -11.068634033203125
    8. 'build' → logprob: -12.318634033203125
    9. '```' → logprob: -12.318634033203125
    10. '
' → logprob: -12.568634033203125

Token 1423: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.700132997939363e-05
    2. 'edge' → logprob: -11.875017166137695
    3. '_' → logprob: -12.875017166137695
    4. '_node' → logprob: -13.375017166137695
    5. '_ed' → logprob: -13.500017166137695
    6. '_e' → logprob: -14.000017166137695
    7. '_edges' → logprob: -14.250017166137695
    8. 'e' → logprob: -14.250017166137695
    9. ' _' → logprob: -14.500017166137695
    10. 'd' → logprob: -14.500017166137695

Token 1424: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -9.674858301877975e-05
    2. 'node' → logprob: -9.250096321105957
    3. ' (' → logprob: -15.500096321105957
    4. '(' → logprob: -15.875096321105957
    5. '   ' → logprob: -15.875096321105957
    6. ' node' → logprob: -16.125097274780273
    7. ',node' → logprob: -17.500097274780273
    8. '[node' → logprob: -18.750097274780273
    9. '=node' → logprob: -18.750097274780273
    10. '	node' → logprob: -18.875097274780273

Token 1425: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -0.3105178773403168
    2. '.node' → logprob: -2.0605177879333496
    3. 'idx' → logprob: -2.9355177879333496
    4. 'node' → logprob: -3.1855177879333496
    5. '.left' → logprob: -3.9355177879333496
    6. '(node' → logprob: -4.06051778793335
    7. ',node' → logprob: -6.06051778793335
    8. ' node' → logprob: -6.81051778793335
    9. 'left' → logprob: -6.93551778793335
    10. '(idx' → logprob: -7.18551778793335

Token 1426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1013169214129448
    2. ',node' → logprob: -2.3513169288635254
    3. ' ,' → logprob: -6.851316928863525
    4. '(node' → logprob: -10.601316452026367
    5. '           ' → logprob: -11.351316452026367
    6. '   ' → logprob: -11.601316452026367
    7. '       ' → logprob: -13.726316452026367
    8. ',n' → logprob: -13.851316452026367
    9. 'node' → logprob: -14.101316452026367
    10. ',
' → logprob: -14.351316452026367

Token 1427: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0009115827269852161
    2. ' node' → logprob: -7.000911712646484
    3. '           ' → logprob: -18.000911712646484
    4. '(node' → logprob: -18.625911712646484
    5. '   ' → logprob: -20.125911712646484
    6. '	node' → logprob: -20.375911712646484
    7. ' ' → logprob: -20.500911712646484
    8. '[node' → logprob: -21.000911712646484
    9. ')' → logprob: -21.500911712646484
    10. ',node' → logprob: -21.875911712646484

Token 1428: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0003700165543705225
    2. '.' → logprob: -8.000370025634766
    3. '.right' → logprob: -10.375370025634766
    4. 'left' → logprob: -13.625370025634766
    5. ' .' → logprob: -14.250370025634766
    6. '   ' → logprob: -14.250370025634766
    7. ').' → logprob: -15.000370025634766
    8. '.le' → logprob: -16.250370025634766
    9. '	' → logprob: -16.500370025634766
    10. '.l' → logprob: -16.875370025634766

Token 1429: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -8.180258191714529e-06
    2. ')' → logprob: -12.000008583068848
    3. 'idx' → logprob: -14.875008583068848
    4. '.id' → logprob: -14.875008583068848
    5. '	idx' → logprob: -14.875008583068848
    6. '.index' → logprob: -15.125008583068848
    7. ').' → logprob: -15.125008583068848
    8. '.' → logprob: -15.875008583068848
    9. '   ' → logprob: -16.50000762939453
    10. '.indices' → logprob: -17.12500762939453

Token 1430: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10135559737682343
    2. ')' → logprob: -2.35135555267334
    3. '           ' → logprob: -6.85135555267334
    4. ')
' → logprob: -9.72635555267334
    5. '       ' → logprob: -11.22635555267334
    6. '   ' → logprob: -12.47635555267334
    7. ')add' → logprob: -12.60135555267334
    8. ')`
' → logprob: -13.10135555267334
    9. '               ' → logprob: -13.10135555267334
    10. '),' → logprob: -13.35135555267334

Token 1431: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13523560762405396
    2. '       ' → logprob: -2.135235548019409
    3. '   ' → logprob: -5.010235786437988
    4. '```' → logprob: -7.010235786437988
    5. '
' → logprob: -8.385235786437988
    6. ' add' → logprob: -8.760235786437988
    7. 'add' → logprob: -9.010235786437988
    8. '               ' → logprob: -9.510235786437988
    9. '(add' → logprob: -10.010235786437988
    10. '``' → logprob: -10.135235786437988

Token 1432: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.4101753532886505
    2. ' add' → logprob: -1.1601753234863281
    3. '           ' → logprob: -3.785175323486328
    4. 'build' → logprob: -8.410175323486328
    5. '   ' → logprob: -9.910175323486328
    6. ' build' → logprob: -10.285175323486328
    7. '       ' → logprob: -11.160175323486328
    8. '	add' → logprob: -12.660175323486328
    9. '.add' → logprob: -13.660175323486328
    10. ')add' → logprob: -13.785175323486328

Token 1433: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0002700377081055194
    2. 'edge' → logprob: -8.250269889831543
    3. 'Edge' → logprob: -12.250269889831543
    4. '(edge' → logprob: -13.250269889831543
    5. '_node' → logprob: -13.625269889831543
    6. '_EDGE' → logprob: -15.875269889831543
    7. 'EDGE' → logprob: -16.00027084350586
    8. '-edge' → logprob: -16.37527084350586
    9. 'egde' → logprob: -16.50027084350586
    10. 'dge' → logprob: -16.50027084350586

Token 1434: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0004341261519584805
    2. '(' → logprob: -7.750433921813965
    3. ' (' → logprob: -13.125433921813965
    4. 'node' → logprob: -14.250433921813965
    5. '(
' → logprob: -14.875433921813965
    6. ' node' → logprob: -16.00043487548828
    7. ',node' → logprob: -16.75043487548828
    8. '[node' → logprob: -17.12543487548828
    9. '=node' → logprob: -17.12543487548828
    10. '(nodes' → logprob: -17.87543487548828

Token 1435: '.idx' (ID: 119077)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.11317355930805206
    2. '.idx' → logprob: -2.238173484802246
    3. 'idx' → logprob: -8.863173484802246
    4. 'left' → logprob: -9.363173484802246
    5. '.right' → logprob: -9.363173484802246
    6. ',' → logprob: -11.238173484802246
    7. '.' → logprob: -12.113173484802246
    8. '.node' → logprob: -12.113173484802246
    9. ' .' → logprob: -13.238173484802246
    10. '   ' → logprob: -13.238173484802246

Token 1436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007758006104268134
    2. ',node' → logprob: -7.2507758140563965
    3. ' ,' → logprob: -10.125775337219238
    4. '           ' → logprob: -11.375775337219238
    5. '.node' → logprob: -12.250775337219238
    6. 'node' → logprob: -12.500775337219238
    7. '(node' → logprob: -12.875775337219238
    8. '   ' → logprob: -13.750775337219238
    9. '               ' → logprob: -14.125775337219238
    10. '.' → logprob: -15.125775337219238

Token 1437: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3868715465068817
    2. ' node' → logprob: -1.136871576309204
    3. '(node' → logprob: -15.136871337890625
    4. '           ' → logprob: -16.011871337890625
    5. '	node' → logprob: -17.386871337890625
    6. '   ' → logprob: -17.511871337890625
    7. '            ' → logprob: -18.011871337890625
    8. '    ' → logprob: -18.636871337890625
    9. '[node' → logprob: -18.886871337890625
    10. ' ' → logprob: -18.886871337890625

Token 1438: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0012664210516959429
    2. '.right' → logprob: -6.7512664794921875
    3. 'left' → logprob: -9.251266479492188
    4. 'right' → logprob: -15.751266479492188
    5. '.' → logprob: -16.876266479492188
    6. '	left' → logprob: -17.001266479492188
    7. '[left' → logprob: -17.251266479492188
    8. ' left' → logprob: -17.876266479492188
    9. '_left' → logprob: -18.376266479492188
    10. 'Left' → logprob: -18.876266479492188

Token 1439: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -1.4021237802808173e-05
    2. ')' → logprob: -12.750014305114746
    3. ',' → logprob: -13.000014305114746
    4. '.' → logprob: -13.125014305114746
    5. '	idx' → logprob: -13.125014305114746
    6. ' .' → logprob: -13.375014305114746
    7. '   ' → logprob: -13.500014305114746
    8. ').' → logprob: -13.875014305114746
    9. 'idx' → logprob: -15.500014305114746
    10. '.index' → logprob: -15.875014305114746

Token 1440: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5778290033340454
    2. ')' → logprob: -0.8278290033340454
    3. '           ' → logprob: -6.827828884124756
    4. '       ' → logprob: -7.327828884124756
    5. '   ' → logprob: -9.327829360961914
    6. ')
' → logprob: -10.452829360961914
    7. ')

' → logprob: -10.827829360961914
    8. '               ' → logprob: -13.077829360961914
    9. ' )
' → logprob: -13.202829360961914
    10. ' )' → logprob: -14.077829360961914

Token 1441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08100342005491257
    2. '       ' → logprob: -2.581003427505493
    3. '   ' → logprob: -6.206003189086914
    4. '```' → logprob: -9.581003189086914
    5. '
' → logprob: -11.206003189086914
    6. '	       ' → logprob: -12.581003189086914
    7. '               ' → logprob: -13.206003189086914
    8. '	   ' → logprob: -13.331003189086914
    9. '``' → logprob: -13.706003189086914
    10. '		' → logprob: -14.206003189086914

Token 1442: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' (adapté à ' build') → logprob: -0.055156342685222626
    2. '           ' → logprob: -3.0551562309265137
    3. ' build' → logprob: -5.055156230926514
    4. '   ' → logprob: -8.805156707763672
    5. '       ' → logprob: -10.930156707763672
    6. '	build' → logprob: -12.805156707763672
    7. '(build' → logprob: -16.305156707763672
    8. ' ' → logprob: -16.305156707763672
    9. '.build' → logprob: -16.930156707763672
    10. '```' → logprob: -17.430156707763672

Token 1443: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.010984865017235279
    2. '(node' → logprob: -4.635984897613525
    3. 'adj' → logprob: -6.885984897613525
    4. 'node' → logprob: -9.385984420776367
    5. 'Adj' → logprob: -9.885984420776367
    6. '[node' → logprob: -10.760984420776367
    7. '_ad' → logprob: -10.885984420776367
    8. '_edge' → logprob: -11.635984420776367
    9. '(adj' → logprob: -12.260984420776367
    10. '_edges' → logprob: -12.260984420776367

Token 1444: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -8.2994620242971e-06
    2. 'node' → logprob: -12.000008583068848
    3. ' (' → logprob: -13.375008583068848
    4. '(' → logprob: -15.125008583068848
    5. ')' → logprob: -17.25000762939453
    6. ' node' → logprob: -17.25000762939453
    7. '   ' → logprob: -17.37500762939453
    8. ' ' → logprob: -17.50000762939453
    9. ',node' → logprob: -17.75000762939453
    10. '[node' → logprob: -17.87500762939453

Token 1445: '.left' (ID: 15388)
  Prédit: '.node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.4815201759338379
    2. '.left' → logprob: -0.9815201759338379
    3. '(node' → logprob: -4.981520175933838
    4. '.right' → logprob: -8.35651969909668
    5. 'node' → logprob: -8.35651969909668
    6. ',node' → logprob: -10.23151969909668
    7. ')' → logprob: -10.73151969909668
    8. '=node' → logprob: -12.23151969909668
    9. 'left' → logprob: -12.35651969909668
    10. '[node' → logprob: -12.60651969909668

Token 1446: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.021414492279291153
    2. ')' → logprob: -3.8964145183563232
    3. '           ' → logprob: -7.146414279937744
    4. '       ' → logprob: -9.896414756774902
    5. ')
' → logprob: -11.021414756774902
    6. '   ' → logprob: -11.146414756774902
    7. ',' → logprob: -13.521414756774902
    8. '),' → logprob: -14.896414756774902
    9. ')

' → logprob: -14.896414756774902
    10. ' )
' → logprob: -15.146414756774902

Token 1447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000561969296541065
    2. '   ' → logprob: -7.8755621910095215
    3. '       ' → logprob: -8.875561714172363
    4. '```' → logprob: -10.250561714172363
    5. 'build' → logprob: -12.375561714172363
    6. '
' → logprob: -13.500561714172363
    7. ' build' → logprob: -14.625561714172363
    8. '               ' → logprob: -16.12556266784668
    9. '``' → logprob: -16.12556266784668
    10. '	       ' → logprob: -16.12556266784668

Token 1448: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' (adapté à ' build') → logprob: -0.005663428921252489
    2. '           ' → logprob: -5.7556633949279785
    3. ' build' → logprob: -6.0056633949279785
    4. '   ' → logprob: -11.380663871765137
    5. '	build' → logprob: -12.505663871765137
    6. '       ' → logprob: -13.130663871765137
    7. ' ' → logprob: -14.880663871765137
    8. '```' → logprob: -16.00566291809082
    9. ' ' → logprob: -16.25566291809082
    10. '               ' → logprob: -17.63066291809082

Token 1449: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.07892691344022751
    2. 'adj' → logprob: -2.5789268016815186
    3. 'node' → logprob: -11.328927040100098
    4. '_ad' → logprob: -11.953927040100098
    5. ' adj' → logprob: -11.953927040100098
    6. '_right' → logprob: -12.453927040100098
    7. 'build' → logprob: -12.828927040100098
    8. 'Adj' → logprob: -13.328927040100098
    9. '(node' → logprob: -13.328927040100098
    10. 'right' → logprob: -14.578927040100098

Token 1450: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.038062721490859985
    2. 'node' → logprob: -3.288062810897827
    3. '           ' → logprob: -11.788063049316406
    4. '[node' → logprob: -12.163063049316406
    5. ' node' → logprob: -12.788063049316406
    6. '=node' → logprob: -13.288063049316406
    7. ')' → logprob: -13.538063049316406
    8. ',node' → logprob: -13.913063049316406
    9. '(
' → logprob: -14.663063049316406
    10. '   ' → logprob: -14.913063049316406

Token 1451: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00034058792516589165
    2. '.left' → logprob: -8.000340461730957
    3. 'right' → logprob: -12.375340461730957
    4. ')' → logprob: -14.500340461730957
    5. '.' → logprob: -15.375340461730957
    6. ').' → logprob: -16.000341415405273
    7. '	right' → logprob: -17.125341415405273
    8. '.Right' → logprob: -17.250341415405273
    9. '   ' → logprob: -17.750341415405273
    10. ',right' → logprob: -17.750341415405273

Token 1452: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011345010716468096
    2. '       ' → logprob: -7.501134395599365
    3. ')
' → logprob: -7.626134395599365
    4. '           ' → logprob: -9.751134872436523
    5. '   ' → logprob: -10.501134872436523
    6. '<|end|>' → logprob: -12.501134872436523
    7. ' )' → logprob: -14.501134872436523
    8. '               ' → logprob: -14.626134872436523
    9. '<|end|>' → logprob: -14.751134872436523
    10. '```' → logprob: -14.876134872436523

Token 1453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009082449832931161
    2. 'build' → logprob: -7.250908374786377
    3. '
' → logprob: -9.000907897949219
    4. '       ' → logprob: -9.625907897949219
    5. '```' → logprob: -12.750907897949219
    6. 'return' → logprob: -12.875907897949219
    7. 'def' → logprob: -13.500907897949219
    8. '           ' → logprob: -13.875907897949219
    9. '	build' → logprob: -14.750907897949219
    10. '    
' → logprob: -14.750907897949219

Token 1454: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' (adapté à ' build') → logprob: -0.47475364804267883
    2. '   ' → logprob: -0.9747536182403564
    3. ' build' → logprob: -7.4747538566589355
    4. '
' → logprob: -9.474753379821777
    5. '```' → logprob: -10.599753379821777
    6. 'root' → logprob: -12.724753379821777
    7. '	build' → logprob: -13.224753379821777
    8. 'def' → logprob: -13.349753379821777
    9. '(build' → logprob: -14.724753379821777
    10. '``' → logprob: -16.099754333496094

Token 1455: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.0008145124302245677
    2. 'adj' → logprob: -7.125814437866211
    3. '_ad' → logprob: -12.000814437866211
    4. 'Adj' → logprob: -13.375814437866211
    5. '(adj' → logprob: -14.125814437866211
    6. 'node' → logprob: -14.375814437866211
    7. '(node' → logprob: -15.125814437866211
    8. '_adv' → logprob: -15.375814437866211
    9. 'tree' → logprob: -15.875814437866211
    10. '__' → logprob: -16.37581443786621

Token 1456: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -4.5491004129871726e-05
    2. 'root' → logprob: -10.000045776367188
    3. ' root' → logprob: -17.625045776367188
    4. '(' → logprob: -18.125045776367188
    5. '(node' → logprob: -18.500045776367188
    6. '[root' → logprob: -18.500045776367188
    7. ' (' → logprob: -19.500045776367188
    8. '(ROOT' → logprob: -20.625045776367188
    9. '=root' → logprob: -21.000045776367188
    10. '	root' → logprob: -21.375045776367188

Token 1457: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015994871500879526
    2. ')
' → logprob: -6.501599311828613
    3. '   ' → logprob: -9.376599311828613
    4. ')

' → logprob: -11.501599311828613
    5. ')
' → logprob: -13.501599311828613
    6. ' )' → logprob: -14.626599311828613
    7. ')return' → logprob: -16.37660026550293
    8. ')`' → logprob: -16.37660026550293
    9. '(root' → logprob: -16.50160026550293
    10. '))' → logprob: -16.62660026550293

Token 1458: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6832005977630615
    2. '   ' → logprob: -1.0582005977630615
    3. 'for' → logprob: -2.3082005977630615
    4. ' for' → logprob: -4.058200836181641
    5. '#' → logprob: -5.183200836181641
    6. '```' → logprob: -5.183200836181641
    7. 'return' → logprob: -5.308200836181641
    8. 'root' → logprob: -5.433200836181641
    9. 'degree' → logprob: -5.558200836181641
    10. '<|end|>' → logprob: -5.683200836181641

Token 1459: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08192996680736542
    2. 'from' → logprob: -2.581929922103882
    3. '   ' → logprob: -6.331930160522461
    4. 'for' → logprob: -7.331930160522461
    5. 'stack' → logprob: -8.081930160522461
    6. 'degree' → logprob: -9.081930160522461
    7. '#' (adapté à ' #') → logprob: -9.206930160522461
    8. 'degrees' → logprob: -10.206930160522461
    9. 'visited' → logprob: -11.206930160522461
    10. '```' → logprob: -11.331930160522461

Token 1460: ' Les' (ID: 7029)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5897351503372192
    2. 'from' → logprob: -0.8397351503372192
    3. 'for' → logprob: -4.71473503112793
    4. '#' → logprob: -6.21473503112793
    5. '   ' → logprob: -6.71473503112793
    6. 'visited' → logprob: -7.08973503112793
    7. 'stack' → logprob: -7.71473503112793
    8. 'queue' → logprob: -8.83973503112793
    9. 'import' → logprob: -9.71473503112793
    10. 'nodes' → logprob: -10.96473503112793

Token 1461: ' feuilles' (ID: 109727)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19665342569351196
    2. 'def' → logprob: -2.196653366088867
    3. ' for' → logprob: -3.071653366088867
    4. '#' → logprob: -4.696653366088867
    5. 'internal' → logprob: -5.196653366088867
    6. '   ' → logprob: -6.821653366088867
    7. 'nodes' → logprob: -6.946653366088867
    8. 'fe' → logprob: -7.071653366088867
    9. 'queue' → logprob: -7.196653366088867
    10. ' internal' → logprob: -7.321653366088867

Token 1462: ' sont' (ID: 5242)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1902420073747635
    2. 'indices' → logprob: -2.190242052078247
    3. 'have' → logprob: -4.315241813659668
    4. 'idx' → logprob: -4.815241813659668
    5. '_indices' → logprob: -5.190241813659668
    6. 'n' → logprob: -5.315241813659668
    7. 'ids' → logprob: -5.565241813659668
    8. 's' → logprob: -5.565241813659668
    9. '#' → logprob: -5.690241813659668
    10. '=' → logprob: -5.940241813659668

Token 1463: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1059999018907547
    2. 'for' → logprob: -3.4809999465942383
    3. 'range' → logprob: -4.230999946594238
    4. 'nodes' → logprob: -4.855999946594238
    5. 'dans' → logprob: -4.980999946594238
    6. '[class' → logprob: -4.980999946594238
    7. 'cl' → logprob: -5.355999946594238
    8. 'le' → logprob: -5.480999946594238
    9. 'les' → logprob: -5.480999946594238
    10. 'des' → logprob: -6.355999946594238

Token 1464: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11128582060337067
    2. '[' → logprob: -3.236285924911499
    3. 'range' → logprob: -3.361285924911499
    4. '[n' → logprob: -4.61128568649292
    5. 'list' → logprob: -4.98628568649292
    6. '   ' → logprob: -5.86128568649292
    7. '[i' → logprob: -6.23628568649292
    8. '[list' → logprob: -6.61128568649292
    9. '[node' → logprob: -6.73628568649292
    10. ' for' → logprob: -6.98628568649292

Token 1465: '..' (ID: 485)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.3757368326187134
    2. 'for' → logprob: -1.3757368326187134
    3. '   ' → logprob: -1.5007368326187134
    4. 'à' → logprob: -2.000736713409424
    5. ' to' → logprob: -3.625736713409424
    6. '#' → logprob: -3.750736713409424
    7. ',' → logprob: -3.750736713409424
    8. '<|end|>' → logprob: -4.125736713409424
    9. ' for' → logprob: -4.500736713409424
    10. ' à' → logprob: -4.625736713409424

Token 1466: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001652796781854704
    2. ' n' → logprob: -9.375164985656738
    3. '(n' → logprob: -10.625164985656738
    4. '   ' → logprob: -11.000164985656738
    5. '...' → logprob: -11.250164985656738
    6. '
' → logprob: -11.375164985656738
    7. '```' → logprob: -12.500164985656738
    8. 'root' → logprob: -13.000164985656738
    9. '`' → logprob: -13.250164985656738
    10. '{' → logprob: -13.625164985656738

Token 1467: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.027222296223044395
    2. '   ' → logprob: -3.7772223949432373
    3. '
' → logprob: -6.152222156524658
    4. 'for' → logprob: -7.402222156524658
    5. ' -' → logprob: -8.402222633361816
    6. 'root' → logprob: -8.527222633361816
    7. '#' → logprob: -8.652222633361816
    8. 'to' → logprob: -8.777222633361816
    9. ',' → logprob: -9.527222633361816
    10. 'roots' → logprob: -9.902222633361816

Token 1468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '-' → logprob: -12.500005722045898
    3. '```' → logprob: -13.250005722045898
    4. '
' → logprob: -15.000005722045898
    5. 'n' → logprob: -16.1250057220459
    6. '``' → logprob: -17.0000057220459
    7. ' ' → logprob: -18.0000057220459
    8. '`' → logprob: -18.3750057220459
    9. '   ' → logprob: -18.7500057220459
    10. '(' → logprob: -19.6250057220459

Token 1469: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26260876655578613
    2. '   ' → logprob: -1.5126087665557861
    3. ' for' → logprob: -4.762608528137207
    4. '
' → logprob: -6.762608528137207
    5. 'def' → logprob: -7.637608528137207
    6. '#' → logprob: -8.137608528137207
    7. 'internal' → logprob: -10.262608528137207
    8. '    
' → logprob: -10.387608528137207
    9. 'nodes' → logprob: -10.512608528137207
    10. '	for' → logprob: -11.762608528137207

Token 1470: ' internes' (ID: 183434)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026956256479024887
    2. '#' → logprob: -3.65195631980896
    3. '   ' → logprob: -8.151956558227539
    4. ' for' → logprob: -8.526956558227539
    5. 'internal' → logprob: -9.151956558227539
    6. '
' → logprob: -10.276956558227539
    7. 'pour' → logprob: -11.276956558227539
    8. ' #' → logprob: -12.651956558227539
    9. 'intern' → logprob: -12.776956558227539
    10. 'def' → logprob: -13.401956558227539

Token 1471: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.124083511531353
    2. '=' → logprob: -3.3740835189819336
    3. '   ' → logprob: -3.9990835189819336
    4. '#' → logprob: -3.9990835189819336
    5. 'range' → logprob: -4.499083518981934
    6. 'have' → logprob: -4.999083518981934
    7. ' =' → logprob: -5.124083518981934
    8. 'pour' → logprob: -5.499083518981934
    9. 'are' → logprob: -5.749083518981934
    10. 's' → logprob: -5.999083518981934

Token 1472: '..' (ID: 485)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2209229469299316
    2. 'odes' → logprob: -1.8459229469299316
    3. '...' → logprob: -1.8459229469299316
    4. '```' → logprob: -2.0959229469299316
    5. '..' → logprob: -2.5959229469299316
    6. '#' → logprob: -3.5959229469299316
    7. ',' → logprob: -3.9709229469299316
    8. ',...' → logprob: -4.220922946929932
    9. '
' → logprob: -4.220922946929932
    10. '=' → logprob: -4.345922946929932

Token 1473: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2266421616077423
    2. 'len' → logprob: -1.60164213180542
    3. '(next' → logprob: -7.60164213180542
    4. ' next' → logprob: -7.85164213180542
    5. '(len' → logprob: -8.601642608642578
    6. '
' → logprob: -10.101642608642578
    7. '(' → logprob: -10.601642608642578
    8. '[next' → logprob: -10.601642608642578
    9. 'root' → logprob: -10.851642608642578
    10. '   ' → logprob: -11.226642608642578

Token 1474: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.704273118884885e-07
    2. 'node' → logprob: -15.625000953674316
    3. '_token' → logprob: -15.625000953674316
    4. '_NODE' → logprob: -17.25
    5. 'Node' → logprob: -17.5
    6. '
' → logprob: -17.5
    7. '   ' → logprob: -17.75
    8. ')' → logprob: -18.125
    9. '```' → logprob: -18.125
    10. '-node' → logprob: -18.25

Token 1475: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.1339472234249115
    2. 'for' → logprob: -3.1339471340179443
    3. '   ' → logprob: -3.3839471340179443
    4. 'id' → logprob: -3.5089471340179443
    5. 'idx' → logprob: -4.633947372436523
    6. '_idx' → logprob: -5.258947372436523
    7. 'def' → logprob: -6.758947372436523
    8. '```' → logprob: -7.758947372436523
    9. '
' → logprob: -8.008947372436523
    10. 'd' → logprob: -8.633947372436523

Token 1476: '-' (ID: 12)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021485088393092155
    2. 'for' → logprob: -4.271484851837158
    3. '
' → logprob: -5.521484851837158
    4. ' for' → logprob: -6.521484851837158
    5. 'def' → logprob: -7.896484851837158
    6. '    
' → logprob: -8.146485328674316
    7. 'internal' → logprob: -8.396485328674316
    8. 'nodes' → logprob: -8.896485328674316
    9. 'adj' → logprob: -8.896485328674316
    10. '#' → logprob: -9.146485328674316

Token 1477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '
' → logprob: -13.875001907348633
    3. '-' → logprob: -14.875001907348633
    4. '```' → logprob: -15.125001907348633
    5. ' ' → logprob: -15.250001907348633
    6. '   ' → logprob: -16.000001907348633
    7. 'n' → logprob: -16.625001907348633
    8. '``' → logprob: -18.500001907348633
    9. '2' → logprob: -18.625001907348633
    10. ')' → logprob: -18.750001907348633

Token 1478: '
' (ID: 198)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.7501987814903259
    2. 'for' → logprob: -0.8751987814903259
    3. '   ' → logprob: -2.6251988410949707
    4. ' for' → logprob: -3.6251988410949707
    5. 'degree' → logprob: -4.875198841094971
    6. ' degrees' → logprob: -6.500198841094971
    7. 'results' → logprob: -6.750198841094971
    8. 'result' → logprob: -7.125198841094971
    9. 'deg' → logprob: -8.000198364257812
    10. 'def' → logprob: -9.125198364257812

Token 1479: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2667797803878784
    2. '   ' → logprob: -1.8917797803878784
    3. ' for' → logprob: -2.516779899597168
    4. 'degrees' → logprob: -6.391779899597168
    5. 'degree' → logprob: -8.141779899597168
    6. 'result' → logprob: -8.141779899597168
    7. '```' → logprob: -8.766779899597168
    8. 'results' → logprob: -9.016779899597168
    9. 'def' → logprob: -10.391779899597168
    10. ' degrees' → logprob: -10.516779899597168

Token 1480: ' degrees' (ID: 18210)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004749983490910381
    2. 'degrees' (adapté à ' degrees') → logprob: -8.25047492980957
    3. ' for' → logprob: -8.50047492980957
    4. 'degree' → logprob: -12.75047492980957
    5. '```' → logprob: -12.75047492980957
    6. 'result' → logprob: -13.00047492980957
    7. '   ' → logprob: -13.50047492980957
    8. 'results' → logprob: -14.87547492980957
    9. 'deg' → logprob: -15.50047492980957
    10. 'def' → logprob: -15.50047492980957

Token 1481: '_internal' (ID: 56366)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018164105713367462
    2. ' =' → logprob: -4.018164157867432
    3. '={}' → logprob: -11.393163681030273
    4. '   ' → logprob: -13.393163681030273
    5. '={' → logprob: -14.393163681030273
    6. '=[]' → logprob: -14.643163681030273
    7. '[' → logprob: -15.768163681030273
    8. '=[' → logprob: -15.768163681030273
    9. 'for' → logprob: -16.768163681030273
    10. '{' → logprob: -17.018163681030273

Token 1482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04866912588477135
    2. ' =' → logprob: -3.0486690998077393
    3. 's' → logprob: -10.17366886138916
    4. '=[]' → logprob: -10.79866886138916
    5. '=[' → logprob: -12.04866886138916
    6. '={}' → logprob: -12.04866886138916
    7. '_=' → logprob: -12.92366886138916
    8. '_' → logprob: -13.17366886138916
    9. '   ' → logprob: -13.42366886138916
    10. '=[]
' → logprob: -13.92366886138916

Token 1483: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.22145883738994598
    2. '[' → logprob: -2.221458911895752
    3. '[]
' → logprob: -2.471458911895752
    4. 'sorted' → logprob: -5.346458911895752
    5. '[
' → logprob: -7.721458911895752
    6. '[]

' → logprob: -8.221458435058594
    7. '[s' → logprob: -9.471458435058594
    8. '[int' → logprob: -10.346458435058594
    9. ' []' → logprob: -10.596458435058594
    10. '[k' → logprob: -10.971458435058594

Token 1484: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3992830812931061
    2. '   ' → logprob: -1.1492830514907837
    3. ' for' → logprob: -4.399282932281494
    4. '```' → logprob: -10.524283409118652
    5. '
' → logprob: -10.899283409118652
    6. '	for' → logprob: -13.024283409118652
    7. 'def' → logprob: -14.399283409118652
    8. '    
' → logprob: -14.649283409118652
    9. '``' → logprob: -16.024282455444336
    10. ')' → logprob: -16.024282455444336

Token 1485: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009284949628636241
    2. '   ' → logprob: -7.0009284019470215
    3. ' for' → logprob: -11.00092887878418
    4. '
' → logprob: -15.37592887878418
    5. '```' → logprob: -18.12592887878418
    6. '	for' → logprob: -19.37592887878418
    7. ' ' → logprob: -21.25092887878418
    8. '    
' → logprob: -21.25092887878418
    9. '  ' → logprob: -21.37592887878418
    10. '#' → logprob: -21.50092887878418

Token 1486: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07208122313022614
    2. 'idx' → logprob: -3.0720813274383545
    3. ' node' → logprob: -3.9470813274383545
    4. ' idx' → logprob: -6.322081089019775
    5. 'i' → logprob: -6.822081089019775
    6. 'nid' → logprob: -7.072081089019775
    7. 'id' → logprob: -9.572081565856934
    8. 'x' → logprob: -10.947081565856934
    9. 'internal' → logprob: -10.947081565856934
    10. '   ' → logprob: -10.947081565856934

Token 1487: 'id' (ID: 315)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47538232803344727
    2. ' in' → logprob: -0.9753823280334473
    3. 'idx' → logprob: -7.350382328033447
    4. '_idx' → logprob: -7.850382328033447
    5. '   ' → logprob: -9.100381851196289
    6. '_id' → logprob: -9.600381851196289
    7. 'id' → logprob: -10.475381851196289
    8. ' ' → logprob: -10.850381851196289
    9. '	in' → logprob: -11.975381851196289
    10. 'n' → logprob: -12.225381851196289

Token 1488: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011117382906377316
    2. 'in' → logprob: -4.511117458343506
    3. '   ' → logprob: -10.261116981506348
    4. 'n' → logprob: -11.386116981506348
    5. 'range' → logprob: -12.386116981506348
    6. ' ' → logprob: -12.636116981506348
    7. 'd' → logprob: -12.761116981506348
    8. 's' → logprob: -12.761116981506348
    9. ' ' → logprob: -13.636116981506348
    10. '	in' → logprob: -13.636116981506348

Token 1489: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.165027217415627e-05
    2. ' range' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.25002098083496
    4. '(range' → logprob: -18.87502098083496
    5. ' ' → logprob: -19.50002098083496
    6. 'internal' → logprob: -19.75002098083496
    7. '  ' → logprob: -20.50002098083496
    8. '	range' → logprob: -21.25002098083496
    9. 'filter' → logprob: -21.75002098083496
    10. 'sorted' → logprob: -22.50002098083496

Token 1490: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07894840091466904
    2. '(n' → logprob: -2.578948497772217
    3. '	n' → logprob: -10.703948020935059
    4. ' n' → logprob: -10.828948020935059
    5. '   ' → logprob: -11.203948020935059
    6. '(' → logprob: -13.828948020935059
    7. '_n' → logprob: -13.953948020935059
    8. ' (' → logprob: -14.953948020935059
    9. ',n' → logprob: -14.953948020935059
    10. '[n' → logprob: -16.953948974609375

Token 1491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037129041738808155
    2. ',n' → logprob: -5.628713130950928
    3. ',
' → logprob: -9.87871265411377
    4. ' ,' → logprob: -10.62871265411377
    5. ',next' → logprob: -11.00371265411377
    6. '   ' → logprob: -11.50371265411377
    7. 'n' → logprob: -13.37871265411377
    8. ',num' → logprob: -13.50371265411377
    9. '<|end|>' → logprob: -13.62871265411377
    10. ',len' → logprob: -13.75371265411377

Token 1492: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0024888573680073023
    2. ' next' → logprob: -6.00248908996582
    3. '   ' → logprob: -11.37748908996582
    4. '       ' → logprob: -14.37748908996582
    5. '(next' → logprob: -15.00248908996582
    6. '           ' → logprob: -15.37748908996582
    7. '	next' → logprob: -15.50248908996582
    8. '
' → logprob: -16.00248908996582
    9. '               ' → logprob: -16.12748908996582
    10. '[next' → logprob: -16.87748908996582

Token 1493: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.468279752880335e-05
    2. '_' → logprob: -10.250064849853516
    3. '_token' → logprob: -10.750064849853516
    4. ')_' → logprob: -13.000064849853516
    5. '_NODE' → logprob: -13.500064849853516
    6. '_id' → logprob: -13.500064849853516
    7. '_Node' → logprob: -13.625064849853516
    8. ' _' → logprob: -14.750064849853516
    9. '   ' → logprob: -15.250064849853516
    10. ')' → logprob: -15.750064849853516

Token 1494: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0059304554015398026
    2. 'id' → logprob: -5.130930423736572
    3. 'idé' → logprob: -14.50593090057373
    4. '	id' → logprob: -15.38093090057373
    5. '   ' → logprob: -15.75593090057373
    6. 'idx' → logprob: -15.88093090057373
    7. '_idx' → logprob: -15.88093090057373
    8. 'idth' → logprob: -16.005929946899414
    9. ' id' → logprob: -16.255929946899414
    10. 'Id' → logprob: -16.380929946899414

Token 1495: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.043940480798482895
    2. '):' → logprob: -3.168940544128418
    3. '   ' → logprob: -8.168940544128418
    4. ':' → logprob: -8.418940544128418
    5. ',' → logprob: -9.168940544128418
    6. '<|end|>' → logprob: -9.543940544128418
    7. ':
' → logprob: -10.043940544128418
    8. '):
' → logprob: -10.043940544128418
    9. ')' → logprob: -10.293940544128418
    10. '):

' → logprob: -10.418940544128418

Token 1496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007055217283777893
    2. '   ' → logprob: -7.875705718994141
    3. '```' → logprob: -8.75070571899414
    4. '<|end|>' → logprob: -10.50070571899414
    5. '[' → logprob: -10.62570571899414
    6. '           ' → logprob: -11.25070571899414
    7. ' degrees' → logprob: -11.25070571899414
    8. '        
' → logprob: -11.37570571899414
    9. 'degrees' → logprob: -11.37570571899414
    10. ' if' → logprob: -11.87570571899414

Token 1497: ' deg' (ID: 5597)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11428527534008026
    2. 'degrees' → logprob: -2.6142852306365967
    3. ' degrees' → logprob: -4.239285469055176
    4. ' if' → logprob: -4.864285469055176
    5. '   ' → logprob: -5.239285469055176
    6. 'if' → logprob: -5.239285469055176
    7. 'de' → logprob: -7.364285469055176
    8. 'degree' → logprob: -7.864285469055176
    9. 'deg' (adapté à ' deg') → logprob: -8.239285469055176
    10. '           ' → logprob: -8.364285469055176

Token 1498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4996962547302246
    2. ' =' → logprob: -1.1246962547302246
    3. 'rees' → logprob: -3.6246962547302246
    4. 'ree' → logprob: -4.124696254730225
    5. '=node' → logprob: -4.499696254730225
    6. 'e' → logprob: -5.249696254730225
    7. 's' → logprob: -5.874696254730225
    8. 'ee' → logprob: -6.749696254730225
    9. '   ' → logprob: -6.999696254730225
    10. 're' → logprob: -7.249696254730225

Token 1499: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.015305552864447e-05
    2. ' len' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.500060081481934
    4. '       ' → logprob: -16.00006103515625
    5. '	len' → logprob: -16.00006103515625
    6. '           ' → logprob: -16.37506103515625
    7. 'adj' → logprob: -16.37506103515625
    8. '(len' → logprob: -16.75006103515625
    9. '    ' → logprob: -19.12506103515625
    10. ' ' → logprob: -19.12506103515625

Token 1500: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.0001584850688232109
    2. 'adj' → logprob: -8.750158309936523
    3. '(' → logprob: -17.625158309936523
    4. ' adj' → logprob: -18.000158309936523
    5. '(ad' → logprob: -18.125158309936523
    6. ' (' → logprob: -19.750158309936523
    7. '(
' → logprob: -20.375158309936523
    8. 'Adj' → logprob: -20.375158309936523
    9. '_adj' → logprob: -20.375158309936523
    10. '((' → logprob: -22.000158309936523

Token 1501: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.0033484632149338722
    2. '.get' → logprob: -5.753348350524902
    3. '(node' → logprob: -8.753348350524902
    4. '.setdefault' → logprob: -11.378348350524902
    5. ')' → logprob: -14.628348350524902
    6. '[(' → logprob: -15.128348350524902
    7. 'get' → logprob: -16.00334930419922
    8. 'node' → logprob: -16.25334930419922
    9. ',node' → logprob: -16.37834930419922
    10. '[get' → logprob: -16.75334930419922

Token 1502: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -2.2842308680992573e-05
    2. '[node' → logprob: -11.000022888183594
    3. 'node' → logprob: -12.500022888183594
    4. '(node' → logprob: -14.000022888183594
    5. ')' → logprob: -14.750022888183594
    6. '[' → logprob: -15.375022888183594
    7. '   ' → logprob: -15.750022888183594
    8. '[id' → logprob: -15.750022888183594
    9. 'idx' → logprob: -16.500022888183594
    10. ']' → logprob: -16.500022888183594

Token 1503: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005953329615294933
    2. '])
' → logprob: -5.130953311920166
    3. '   ' → logprob: -12.255953788757324
    4. ' ])' → logprob: -12.255953788757324
    5. ')' → logprob: -12.505953788757324
    6. '[node' → logprob: -13.005953788757324
    7. '])-' → logprob: -13.255953788757324
    8. ']' → logprob: -13.880953788757324
    9. '])

' → logprob: -13.880953788757324
    10. ')])' → logprob: -14.005953788757324

Token 1504: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049277544021606445
    2. '<|end|>' → logprob: -6.129927635192871
    3. ')' → logprob: -7.004927635192871
    4. '        
' → logprob: -7.379927635192871
    5. '           ' → logprob: -7.879927635192871
    6. '
' → logprob: -8.129927635192871
    7. '   ' → logprob: -8.379927635192871
    8. '    
' → logprob: -10.129927635192871
    9. ')
' → logprob: -10.379927635192871
    10. '        ' → logprob: -10.504927635192871

Token 1505: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00761869503185153
    2. ' node' → logprob: -4.8826189041137695
    3. 'adj' → logprob: -11.75761890411377
    4. '(node' → logprob: -12.75761890411377
    5. '	node' → logprob: -14.00761890411377
    6. ' ' → logprob: -14.88261890411377
    7. '   ' → logprob: -15.13261890411377
    8. ' adj' → logprob: -16.507617950439453
    9. '[node' → logprob: -16.757617950439453
    10. '=node' → logprob: -17.007617950439453

Token 1506: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.1318962723016739
    2. '[node' → logprob: -2.1318962574005127
    3. 'node' → logprob: -5.756896495819092
    4. 'd' → logprob: -7.256896495819092
    5. ' in' → logprob: -7.381896495819092
    6. 'in' → logprob: -8.381896018981934
    7. '[id' → logprob: -9.256896018981934
    8. '.get' → logprob: -10.131896018981934
    9. '(node' → logprob: -10.506896018981934
    10. '[
' → logprob: -10.881896018981934

Token 1507: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3338448107242584
    2. 'in' → logprob: -1.458844780921936
    3. '>' → logprob: -3.2088449001312256
    4. '>=' → logprob: -4.8338446617126465
    5. ' >' → logprob: -6.5838446617126465
    6. ' >=' → logprob: -6.7088446617126465
    7. '[' → logprob: -9.208845138549805
    8. ' ' → logprob: -9.333845138549805
    9. ' <' → logprob: -9.833845138549805
    10. '   ' → logprob: -10.333845138549805

Token 1508: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -2.15310683415737e-05
    2. ' adj' → logprob: -10.750021934509277
    3. '(adj' → logprob: -18.12502098083496
    4. '   ' → logprob: -18.25002098083496
    5. '```' → logprob: -20.25002098083496
    6. ' ' → logprob: -21.50002098083496
    7. '_adj' → logprob: -21.75002098083496
    8. '           ' → logprob: -22.00002098083496
    9. '  ' → logprob: -22.12502098083496
    10. '    ' → logprob: -22.25002098083496

Token 1509: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03368869423866272
    2. 'else' → logprob: -3.40868878364563
    3. '	else' → logprob: -11.03368854522705
    4. '       ' → logprob: -11.53368854522705
    5. '           ' → logprob: -12.53368854522705
    6. ')' → logprob: -12.65868854522705
    7. ' ' → logprob: -12.65868854522705
    8. '<|end|>' → logprob: -13.03368854522705
    9. '   ' → logprob: -13.15868854522705
    10. '        ' → logprob: -14.28368854522705

Token 1510: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00032509511220268905
    2. ' ' → logprob: -8.500325202941895
    3. '2' → logprob: -9.375325202941895
    4. '1' → logprob: -10.375325202941895
    5. 'node' → logprob: -12.875325202941895
    6. '   ' → logprob: -13.375325202941895
    7. '       ' → logprob: -14.625325202941895
    8. '           ' → logprob: -15.375325202941895
    9. '(' → logprob: -16.125324249267578
    10. '	' → logprob: -16.687824249267578

Token 1511: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012035090912831947
    2. ' ' → logprob: -9.125120162963867
    3. '2' → logprob: -12.250120162963867
    4. 'node' → logprob: -12.750120162963867
    5. '1' → logprob: -13.000120162963867
    6. '   ' → logprob: -14.625120162963867
    7. '       ' → logprob: -15.375120162963867
    8. '           ' → logprob: -16.000120162963867
    9. 'set' → logprob: -16.250120162963867
    10. '	' → logprob: -16.687620162963867

Token 1512: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.976922744186595e-05
    2. '   ' → logprob: -11.875040054321289
    3. ' degrees' → logprob: -12.125040054321289
    4. 'degrees' → logprob: -12.125040054321289
    5. ')' → logprob: -12.250040054321289
    6. '        
' → logprob: -12.625040054321289
    7. ',' → logprob: -12.750040054321289
    8. '           ' → logprob: -13.000040054321289
    9. '
' → logprob: -13.000040054321289
    10. '<|end|>' → logprob: -13.375040054321289

Token 1513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008343761786818504
    2. ')' → logprob: -5.758343696594238
    3. '   ' → logprob: -6.258343696594238
    4. '           ' → logprob: -7.008343696594238
    5. ' degrees' → logprob: -7.133343696594238
    6. 'degrees' → logprob: -7.133343696594238
    7. '<|end|>' → logprob: -8.633343696594238
    8. ')
' → logprob: -9.383343696594238
    9. '+' → logprob: -10.008343696594238
    10. '        
' → logprob: -10.008343696594238

Token 1514: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' (adapté à ' degrees') → logprob: -0.15028908848762512
    2. ' degrees' → logprob: -2.4002890586853027
    3. '       ' → logprob: -3.0252890586853027
    4. '   ' → logprob: -8.650289535522461
    5. '           ' → logprob: -9.025289535522461
    6. 'degree' → logprob: -12.400289535522461
    7. '```' → logprob: -13.400289535522461
    8. '     ' → logprob: -14.025289535522461
    9. '               ' → logprob: -14.025289535522461
    10. ' ' → logprob: -14.400289535522461

Token 1515: '_internal' (ID: 56366)
  Prédit: '_internal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_internal' → logprob: -0.026459485292434692
    2. '.append' → logprob: -3.6514594554901123
    3. 'internal' → logprob: -9.026459693908691
    4. '.internal' → logprob: -10.651459693908691
    5. '_INTERNAL' → logprob: -12.651459693908691
    6. '   ' → logprob: -12.901459693908691
    7. 'append' → logprob: -13.276459693908691
    8. '.Internal' → logprob: -13.276459693908691
    9. '_Internal' → logprob: -13.526459693908691
    10. '.' → logprob: -13.776459693908691

Token 1516: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001972053898498416
    2. '.' → logprob: -6.251972198486328
    3. 'append' → logprob: -10.876972198486328
    4. ' .' → logprob: -10.876972198486328
    5. '.app' → logprob: -12.626972198486328
    6. '_append' → logprob: -14.251972198486328
    7. '.sort' → logprob: -15.126972198486328
    8. 'Append' → logprob: -15.501972198486328
    9. ' append' → logprob: -15.501972198486328
    10. 'app' → logprob: -15.501972198486328

Token 1517: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.001948271761648357
    2. 'deg' → logprob: -6.251948356628418
    3. '(' → logprob: -11.501948356628418
    4. ' deg' → logprob: -12.251948356628418
    5. '(len' → logprob: -12.751948356628418
    6. ' (' → logprob: -13.376948356628418
    7. '(dep' → logprob: -15.501948356628418
    8. '(d' → logprob: -17.2519474029541
    9. '(
' → logprob: -17.3769474029541
    10. '((' → logprob: -18.0019474029541

Token 1518: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -5.512236498361744e-07
    2. 'G' → logprob: -16.5
    3. 'г' → logprob: -16.5
    4. 'q' → logprob: -16.875
    5. 'f' → logprob: -17.0
    6. 'gree' → logprob: -17.0
    7. 'd' → logprob: -17.125
    8. 'p' → logprob: -17.375
    9. 'grees' → logprob: -18.0
    10. ' g' → logprob: -18.0

Token 1519: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013954727910459042
    2. ')
' → logprob: -7.5013957023620605
    3. '       ' → logprob: -7.7513957023620605
    4. '   ' → logprob: -8.126395225524902
    5. '<|end|>' → logprob: -9.376395225524902
    6. '<|end|>' → logprob: -11.501395225524902
    7. ' )' → logprob: -12.376395225524902
    8. ')**' → logprob: -13.126395225524902
    9. ')return' → logprob: -13.626395225524902
    10. ').' → logprob: -13.751395225524902

Token 1520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01441875658929348
    2. '```' → logprob: -4.639418601989746
    3. '
' → logprob: -5.764418601989746
    4. '    
' → logprob: -7.514418601989746
    5. '<|end|>' → logprob: -7.889418601989746
    6. 'return' → logprob: -7.889418601989746
    7. '``' → logprob: -9.639418601989746
    8. ' return' → logprob: -10.264418601989746
    9. '[' → logprob: -10.764418601989746
    10. '  
' → logprob: -10.889418601989746

Token 1521: ' degrees' (ID: 18210)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020644953474402428
    2. 'return' → logprob: -6.2520647048950195
    3. 'degrees' (adapté à ' degrees') → logprob: -9.12706470489502
    4. '
' → logprob: -11.25206470489502
    5. ' return' → logprob: -12.00206470489502
    6. 'def' → logprob: -12.75206470489502
    7. '    
' → logprob: -12.75206470489502
    8. ' degrees' → logprob: -14.25206470489502
    9. '  ' → logprob: -14.62706470489502
    10. '       ' → logprob: -15.00206470489502

Token 1522: '_internal' (ID: 56366)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.06124754250049591
    2. '_internal' → logprob: -3.6862475872039795
    3. '<|end|>' → logprob: -3.6862475872039795
    4. '_sorted' → logprob: -5.5612473487854
    5. '   ' → logprob: -6.3112473487854
    6. '[:]' → logprob: -6.8112473487854
    7. 'internal' → logprob: -7.0612473487854
    8. '.append' → logprob: -7.8112473487854
    9. '.internal' → logprob: -8.686247825622559
    10. ' =' → logprob: -8.686247825622559

Token 1523: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1524: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46414685249328613
    2. '
' → logprob: -1.3391468524932861
    3. 'return' → logprob: -2.339146852493286
    4. ' return' → logprob: -5.089146614074707
    5. '<|end|>' → logprob: -5.964146614074707
    6. '    
' → logprob: -6.339146614074707
    7. '	return' → logprob: -7.214146614074707
    8. '  
' → logprob: -8.339146614074707
    9. '```' → logprob: -8.589146614074707
    10. ':return' → logprob: -8.839146614074707

Token 1525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018169142305850983
    2. 'return' → logprob: -4.018168926239014
    3. '```' → logprob: -11.643169403076172
    4. ' return' → logprob: -12.268169403076172
    5. '	return' → logprob: -13.018169403076172
    6. '
' → logprob: -13.268169403076172
    7. '    
' → logprob: -13.518169403076172
    8. '{return' → logprob: -15.518169403076172
    9. ':return' → logprob: -16.393169403076172
    10. '@return' → logprob: -16.518169403076172

Token 1526: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20163953304290771
    2. '   ' → logprob: -1.7016395330429077
    3. ' return' → logprob: -8.701639175415039
    4. '	return' → logprob: -9.951639175415039
    5. '```' → logprob: -11.951639175415039
    6. '
' → logprob: -12.326639175415039
    7. '{return' → logprob: -14.951639175415039
    8. ':return' → logprob: -14.951639175415039
    9. '    
' → logprob: -15.326639175415039
    10. 'def' → logprob: -16.07663917541504

Token 1527: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.048588622361421585
    2. ' degrees' → logprob: -3.048588514328003
    3. 'degree' → logprob: -14.173588752746582
    4. '[' → logprob: -14.673588752746582
    5. '   ' → logprob: -17.298587799072266
    6. 'deg' → logprob: -17.423587799072266
    7. 'de' → logprob: -17.923587799072266
    8. ' [' → logprob: -18.673587799072266
    9. ' ' → logprob: -20.673587799072266
    10. ' degree' → logprob: -20.798587799072266

Token 1528: '_internal' (ID: 56366)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.8230578899383545
    2. '_internal' → logprob: -0.9480578899383545
    3. '[' → logprob: -2.3230578899383545
    4. '<|end|>' → logprob: -4.073058128356934
    5. '[:' → logprob: -4.323058128356934
    6. '_' → logprob: -4.573058128356934
    7. '[
' → logprob: -5.198058128356934
    8. 'degrees' → logprob: -5.323058128356934
    9. '[:-' → logprob: -5.823058128356934
    10. '
' → logprob: -6.073058128356934

Token 1529: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1530: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8745683431625366
    2. '#' → logprob: -1.4995683431625366
    3. '<|end|>' → logprob: -1.7495683431625366
    4. 'if' → logprob: -1.9995683431625366
    5. 'for' → logprob: -3.124568462371826
    6. '```' → logprob: -5.249568462371826
    7. '<|end|>' → logprob: -7.874568462371826
    8. 'print' → logprob: -7.874568462371826
    9. ' if' → logprob: -8.999567985534668
    10. 'import' → logprob: -9.124567985534668

Token 1531: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.2603901015827432e-05
    2. ' main' → logprob: -10.750022888183594
    3. 'solve' → logprob: -13.875022888183594
    4. 'run' → logprob: -16.625022888183594
    5. 'process' → logprob: -17.000022888183594
    6. 'solution' → logprob: -18.250022888183594
    7. 'read' → logprob: -19.125022888183594
    8. 'print' → logprob: -19.125022888183594
    9. '_main' → logprob: -19.750022888183594
    10. '__' → logprob: -20.125022888183594

Token 1532: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2014697641134262
    2. '():
' → logprob: -1.7014697790145874
    3. '():
' → logprob: -9.951469421386719
    4. '()' → logprob: -11.951469421386719
    5. '():

' → logprob: -13.326469421386719
    6. ' ():' → logprob: -15.576469421386719
    7. '()>' → logprob: -15.701469421386719
    8. '(argv' → logprob: -16.45146942138672
    9. '()):
' → logprob: -16.45146942138672
    10. '();' → logprob: -16.95146942138672

Token 1533: '   ' (ID: 271)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.4921416640281677
    2. '   ' → logprob: -0.9921416640281677
    3. ' inputs' → logprob: -4.7421417236328125
    4. '```' → logprob: -5.7421417236328125
    5. 'import' → logprob: -6.2421417236328125
    6. 'input' → logprob: -6.6171417236328125
    7. 'for' → logprob: -7.1171417236328125
    8. '_inputs' → logprob: -7.1171417236328125
    9. 'def' → logprob: -8.367141723632812
    10. ' for' → logprob: -8.617141723632812

Token 1534: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' (adapté à ' inputs') → logprob: -0.005746998358517885
    2. '   ' → logprob: -5.255746841430664
    3. ' inputs' → logprob: -8.505746841430664
    4. 'for' → logprob: -9.005746841430664
    5. 'tests' → logprob: -9.130746841430664
    6. 'input' → logprob: -10.005746841430664
    7. 'data' → logprob: -11.630746841430664
    8. 'entries' → logprob: -12.130746841430664
    9. 'import' → logprob: -12.255746841430664
    10. 'cases' → logprob: -12.255746841430664

Token 1535: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3855970501899719
    2. '   ' → logprob: -1.8855969905853271
    3. '.append' → logprob: -2.635596990585327
    4. '=' → logprob: -3.260596990585327
    5. '()' → logprob: -3.635596990585327
    6. '[]' → logprob: -5.135597229003906
    7. '[:]' → logprob: -5.260597229003906
    8. '=[]' → logprob: -5.760597229003906
    9. '.' → logprob: -6.010597229003906
    10. ':' → logprob: -6.135597229003906

Token 1536: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0005530327325686812
    2. ' parse' → logprob: -7.500553131103516
    3. '(parse' → logprob: -18.000553131103516
    4. '   ' → logprob: -18.625553131103516
    5. '	parse' → logprob: -19.375553131103516
    6. '=parse' → logprob: -21.000553131103516
    7. '.parse' → logprob: -21.875553131103516
    8. 'parser' → logprob: -22.250553131103516
    9. 'par' → logprob: -22.875553131103516
    10. ' ' → logprob: -23.375553131103516

Token 1537: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0002715873415581882
    2. '_inputs' → logprob: -8.500271797180176
    3. '_' → logprob: -9.750271797180176
    4. 'input' → logprob: -12.125271797180176
    5. '_output' → logprob: -14.125271797180176
    6. '_
' → logprob: -14.750271797180176
    7. '_in' → logprob: -14.750271797180176
    8. '(input' → logprob: -14.750271797180176
    9. '```' → logprob: -14.875271797180176
    10. '_INPUT' → logprob: -15.000271797180176

Token 1538: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6404390335083008
    2. 'for' → logprob: -1.3904390335083008
    3. '()
' → logprob: -2.390439033508301
    4. '
' → logprob: -2.890439033508301
    5. '()' → logprob: -3.515439033508301
    6. ' for' → logprob: -3.640439033508301
    7. '<|end|>' → logprob: -5.015439033508301
    8. 'def' → logprob: -5.640439033508301
    9. '    
' → logprob: -5.640439033508301
    10. '```' → logprob: -5.765439033508301

Token 1539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7013300061225891
    2. 'for' → logprob: -0.7013300061225891
    3. '```' → logprob: -5.451330184936523
    4. ' for' → logprob: -5.576330184936523
    5. '	for' → logprob: -9.951330184936523
    6. '``' → logprob: -11.451330184936523
    7. '    
' → logprob: -12.451330184936523
    8. '
' → logprob: -12.701330184936523
    9. 'def' → logprob: -12.826330184936523
    10. '<|end|>' → logprob: -13.326330184936523

Token 1540: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0071787298657000065
    2. '   ' → logprob: -5.007178783416748
    3. ' for' → logprob: -7.757178783416748
    4. '	for' → logprob: -10.88217830657959
    5. '```' → logprob: -11.13217830657959
    6. '
' → logprob: -13.88217830657959
    7. '    
' → logprob: -14.00717830657959
    8. '``' → logprob: -15.00717830657959
    9. '<|end|>' → logprob: -17.757179260253906
    10. '       ' → logprob: -18.382179260253906

Token 1541: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06585294753313065
    2. ' n' → logprob: -2.9408528804779053
    3. '(n' → logprob: -4.565853118896484
    4. ' (' → logprob: -8.190853118896484
    5. '   ' → logprob: -8.440853118896484
    6. '_,' → logprob: -12.565853118896484
    7. '	n' → logprob: -12.940853118896484
    8. '(' → logprob: -13.190853118896484
    9. '_n' → logprob: -13.190853118896484
    10. '(_,' → logprob: -13.190853118896484

Token 1542: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08875753730535507
    2. ',' → logprob: -2.5887575149536133
    3. 'in' → logprob: -5.338757514953613
    4. ' ,' → logprob: -5.463757514953613
    5. '   ' → logprob: -7.338757514953613
    6. '_,' → logprob: -10.338757514953613
    7. ',in' → logprob: -10.838757514953613
    8. ',n' → logprob: -11.088757514953613
    9. ' ' → logprob: -11.213757514953613
    10. '    ' → logprob: -11.213757514953613

Token 1543: ' dist' (ID: 3601)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.021019315347075462
    2. ' matrix' → logprob: -4.271019458770752
    3. 'dist' → logprob: -5.021019458770752
    4. ' dist' → logprob: -8.396018981933594
    5. '   ' → logprob: -12.396018981933594
    6. 'mat' → logprob: -12.521018981933594
    7. 'm' → logprob: -15.021018981933594
    8. '    ' → logprob: -15.396018981933594
    9. 'distance' → logprob: -15.396018981933594
    10. '	matrix' → logprob: -15.771018981933594

Token 1544: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -9.126521035796031e-05
    2. '   ' → logprob: -9.750091552734375
    3. 'ance' → logprob: -11.250091552734375
    4. '_MATRIX' → logprob: -12.375091552734375
    5. 's' → logprob: -12.500091552734375
    6. '_' → logprob: -12.875091552734375
    7. ' _' → logprob: -13.000091552734375
    8. 'ances' → logprob: -13.625091552734375
    9. '_m' → logprob: -13.625091552734375
    10. ',' → logprob: -13.750091552734375

Token 1545: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7803475260734558
    2. ':
' → logprob: -1.4053475856781006
    3. ':' → logprob: -1.9053475856781006
    4. '   ' → logprob: -2.5303475856781006
    5. ',' → logprob: -3.2803475856781006
    6. 'in' → logprob: -4.1553473472595215
    7. '       ' → logprob: -5.1553473472595215
    8. '):
' → logprob: -5.6553473472595215
    9. ' =' → logprob: -6.5303473472595215
    10. '=' → logprob: -7.0303473472595215

Token 1546: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.038124918937683105
    2. ' inputs' → logprob: -3.2881250381469727
    3. 'up' → logprob: -9.538125038146973
    4. '(inputs' → logprob: -11.663125038146973
    5. ' up' → logprob: -13.413125038146973
    6. '   ' → logprob: -14.413125038146973
    7. 'input' → logprob: -15.163125038146973
    8. ' ' → logprob: -15.413125038146973
    9. '.inputs' → logprob: -16.788124084472656
    10. '_inputs' → logprob: -16.913124084472656

Token 1547: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4293519854545593
    2. ':' → logprob: -1.179352045059204
    3. '       ' → logprob: -3.304352045059204
    4. '   ' → logprob: -6.179351806640625
    5. '():
' → logprob: -6.554351806640625
    6. '):
' → logprob: -7.429351806640625
    7. ',' → logprob: -7.679351806640625
    8. '<|end|>' → logprob: -9.554351806640625
    9. '<|end|>' → logprob: -9.804351806640625
    10. ' :
' → logprob: -9.804351806640625

Token 1548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002221272327005863
    2. '```' → logprob: -6.75222110748291
    3. '   ' → logprob: -7.37722110748291
    4. '        
' → logprob: -8.87722110748291
    5. '<|end|>' → logprob: -9.25222110748291
    6. '    
' → logprob: -10.37722110748291
    7. ',' → logprob: -10.75222110748291
    8. '``' → logprob: -11.00222110748291
    9. '<|end|>' → logprob: -11.25222110748291
    10. ' code' → logprob: -11.37722110748291

Token 1549: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' (adapté à ' degrees') → logprob: -0.22412383556365967
    2. 'result' → logprob: -2.224123954772949
    3. ' degrees' → logprob: -3.599123954772949
    4. 'res' → logprob: -3.724123954772949
    5. '       ' → logprob: -4.099123954772949
    6. 'de' → logprob: -4.849123954772949
    7. 'results' → logprob: -5.224123954772949
    8. 'deg' → logprob: -5.724123954772949
    9. '   ' → logprob: -5.724123954772949
    10. ' result' → logprob: -6.099123954772949

Token 1550: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09736074507236481
    2. '=' → logprob: -2.472360849380493
    3. '.append' → logprob: -5.222360610961914
    4. '   ' → logprob: -6.597360610961914
    5. '.extend' → logprob: -7.847360610961914
    6. ')' → logprob: -8.347360610961914
    7. '=[]' → logprob: -8.472360610961914
    8. '.' → logprob: -9.097360610961914
    9. '[]' → logprob: -9.347360610961914
    10. '<|end|>' → logprob: -9.472360610961914

Token 1551: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.00033558503491804004
    2. ' up' → logprob: -8.000335693359375
    3. '	up' → logprob: -16.625335693359375
    4. '   ' → logprob: -16.750335693359375
    5. '(up' → logprob: -20.375335693359375
    6. '  ' → logprob: -20.375335693359375
    7. 'UP' → logprob: -20.500335693359375
    8. ' ' → logprob: -20.750335693359375
    9. ' ' → logprob: -20.875335693359375
    10. '
' → logprob: -21.875335693359375

Token 1552: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.7954958821064793e-05
    2. '   ' → logprob: -11.375018119812012
    3. 'gema' → logprob: -12.875018119812012
    4. 'p' → logprob: -13.375018119812012
    5. '       ' → logprob: -14.750018119812012
    6. '  ' → logprob: -14.750018119812012
    7. '     ' → logprob: -15.625018119812012
    8. ' ' → logprob: -15.875018119812012
    9. '    ' → logprob: -16.000017166137695
    10. '(' → logprob: -16.000017166137695

Token 1553: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.04859304800629616
    2. 'g' → logprob: -3.048593044281006
    3. 'ма' → logprob: -13.173593521118164
    4. 'ga' → logprob: -13.923593521118164
    5. '   ' → logprob: -14.173593521118164
    6. '_ma' → logprob: -14.298593521118164
    7. ' ma' → logprob: -14.548593521118164
    8. '(ma' → logprob: -15.048593521118164
    9. 'p' → logprob: -15.423593521118164
    10. 'm' → logprob: -16.173593521118164

Token 1554: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005339774303138256
    2. '(' → logprob: -5.255339622497559
    3. ' (' → logprob: -9.505339622497559
    4. '(
' → logprob: -10.880339622497559
    5. '   ' → logprob: -12.755339622497559
    6. '((' → logprob: -12.880339622497559
    7. '```' → logprob: -13.130339622497559
    8. '(de' → logprob: -13.505339622497559
    9. '(len' → logprob: -13.505339622497559
    10. ' ' → logprob: -15.130339622497559

Token 1555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ' ,' → logprob: -12.250005722045898
    3. '       ' → logprob: -15.000005722045898
    4. ',
' → logprob: -15.250005722045898
    5. '   ' → logprob: -15.625005722045898
    6. ',d' → logprob: -15.625005722045898
    7. ')' → logprob: -16.3750057220459
    8. '(' → logprob: -16.5000057220459
    9. '(dist' → logprob: -16.7500057220459
    10. '```' → logprob: -17.8750057220459

Token 1556: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0788901224732399
    2. ' dist' → logprob: -2.578890085220337
    3. '	dist' → logprob: -16.578889846801758
    4. '(dist' → logprob: -16.703889846801758
    5. '       ' → logprob: -16.953889846801758
    6. '    ' → logprob: -17.078889846801758
    7. '   ' → logprob: -17.078889846801758
    8. '        ' → logprob: -17.953889846801758
    9. '_dist' → logprob: -18.203889846801758
    10. 'distance' → logprob: -19.078889846801758

Token 1557: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -7.226628895296017e-06
    2. '   ' → logprob: -12.500007629394531
    3. 'matrix' → logprob: -12.750007629394531
    4. '       ' → logprob: -15.625007629394531
    5. '_MATRIX' → logprob: -15.750007629394531
    6. 'dist' → logprob: -17.25000762939453
    7. '           ' → logprob: -17.62500762939453
    8. 'Matrix' → logprob: -17.75000762939453
    9. 'atrix' → logprob: -17.75000762939453
    10. ')' → logprob: -18.25000762939453

Token 1558: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003484843298792839
    2. ')' → logprob: -5.878484725952148
    3. ')
' → logprob: -8.128484725952148
    4. 'print' → logprob: -9.253484725952148
    5. ',' → logprob: -9.628484725952148
    6. '<|end|>' → logprob: -9.628484725952148
    7. '):
' → logprob: -10.128484725952148
    8. '[' → logprob: -10.878484725952148
    9. ' print' → logprob: -11.003484725952148
    10. '        
' → logprob: -11.253484725952148

Token 1559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017753805732354522
    2. 'print' → logprob: -6.87677526473999
    3. '```' → logprob: -7.87677526473999
    4. '   ' → logprob: -8.751775741577148
    5. '<|end|>' → logprob: -9.126775741577148
    6. 'for' → logprob: -10.376775741577148
    7. ' for' → logprob: -10.501775741577148
    8. ' print' → logprob: -11.126775741577148
    9. '        
' → logprob: -11.626775741577148
    10. '	print' → logprob: -13.251775741577148

Token 1560: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.313314952421933e-05
    2. ' print' → logprob: -9.750062942504883
    3. '       ' → logprob: -13.000062942504883
    4. 'for' → logprob: -13.000062942504883
    5. '
' → logprob: -15.750062942504883
    6. '```' → logprob: -16.750062942504883
    7. '   ' → logprob: -17.750062942504883
    8. '        
' → logprob: -19.000062942504883
    9. '#print' → logprob: -19.250062942504883
    10. ' for' → logprob: -19.375062942504883

Token 1561: '('' (ID: 706)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.08190843462944031
    2. '('' → logprob: -2.5819084644317627
    3. '("' → logprob: -5.831908226013184
    4. '(' → logprob: -9.706908226013184
    5. '(len' → logprob: -10.956908226013184
    6. '(*(' → logprob: -13.456908226013184
    7. '(sorted' → logprob: -13.956908226013184
    8. '()' → logprob: -14.581908226013184
    9. '(*)' → logprob: -16.0819091796875
    10. ' (*' → logprob: -16.2069091796875

Token 1562: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38748854398727417
    2. ' '.' → logprob: -1.137488603591919
    3. ''.' → logprob: -7.76248836517334
    4. '',' → logprob: -10.13748836517334
    5. '{}'.' → logprob: -10.26248836517334
    6. ''*' → logprob: -10.38748836517334
    7. '('' → logprob: -10.51248836517334
    8. ''+' → logprob: -10.63748836517334
    9. '"' → logprob: -11.38748836517334
    10. '{}' → logprob: -11.76248836517334

Token 1563: 'join' (ID: 10891)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3053196668624878
    2. 'join' → logprob: -1.9303196668624878
    3. ''.' → logprob: -2.4303197860717773
    4. '.join' → logprob: -3.8053197860717773
    5. 'print' → logprob: -5.680319786071777
    6. ''s' → logprob: -5.805319786071777
    7. ' '.' → logprob: -8.680319786071777
    8. 'sep' → logprob: -8.930319786071777
    9. ''en' → logprob: -9.055319786071777
    10. ''ex' → logprob: -9.055319786071777

Token 1564: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01267516240477562
    2. 'map' → logprob: -4.7626752853393555
    3. '(str' → logprob: -5.5126752853393555
    4. 'str' → logprob: -11.012675285339355
    5. ' map' → logprob: -14.637675285339355
    6. '	map' → logprob: -16.76267433166504
    7. '.map' → logprob: -16.76267433166504
    8. '[str' → logprob: -17.26267433166504
    9. 'Map' → logprob: -18.38767433166504
    10. '_map' → logprob: -18.88767433166504

Token 1565: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0024774393532425165
    2. 'str' → logprob: -6.002477645874023
    3. '=str' → logprob: -13.627477645874023
    4. '[str' → logprob: -15.627477645874023
    5. ' str' → logprob: -16.002477645874023
    6. '	str' → logprob: -16.627477645874023
    7. '   ' → logprob: -17.377477645874023
    8. '```' → logprob: -17.502477645874023
    9. '
' → logprob: -18.127477645874023
    10. ',str' → logprob: -19.627477645874023

Token 1566: ',' (ID: 11)
  Prédit: '(de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.008875728584825993
    2. ',' → logprob: -4.758875846862793
    3. ',de' → logprob: -8.508875846862793
    4. 'degrees' → logprob: -10.508875846862793
    5. ' ,' → logprob: -10.883875846862793
    6. ' (' → logprob: -11.383875846862793
    7. ' degrees' → logprob: -14.008875846862793
    8. '(' → logprob: -14.258875846862793
    9. '   ' → logprob: -14.633875846862793
    10. 'de' → logprob: -16.758874893188477

Token 1567: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.00043162284418940544
    2. ' degrees' → logprob: -7.750431537628174
    3. 'degree' → logprob: -14.750432014465332
    4. 'de' → logprob: -14.750432014465332
    5. '   ' → logprob: -15.750432014465332
    6. 'deg' → logprob: -18.750431060791016
    7. '       ' → logprob: -19.250431060791016
    8. '(de' → logprob: -19.750431060791016
    9. 'Degrees' → logprob: -19.875431060791016
    10. '           ' → logprob: -20.375431060791016

Token 1568: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023261435329914093
    2. ')))' → logprob: -3.773261547088623
    3. '))
' → logprob: -11.273261070251465
    4. '   ' → logprob: -14.023261070251465
    5. ' ))' → logprob: -14.398261070251465
    6. '()))' → logprob: -14.523261070251465
    7. '       ' → logprob: -14.773261070251465
    8. ')' → logprob: -15.273261070251465
    9. ')))
' → logprob: -15.398261070251465
    10. '}))' → logprob: -15.773261070251465

Token 1569: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01563684642314911
    2. '```' → logprob: -5.265636920928955
    3. '<|end|>' → logprob: -5.390636920928955
    4. '#' → logprob: -5.765636920928955
    5. ' if' → logprob: -6.015636920928955
    6. '<|end|>' → logprob: -9.765636444091797
    7. ')' → logprob: -10.140636444091797
    8. '[' → logprob: -10.515636444091797
    9. 'main' → logprob: -11.265636444091797
    10. 'If' → logprob: -11.640636444091797

Token 1570: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02324792370200157
    2. ' __' → logprob: -3.7732479572296143
    3. 'name' → logprob: -13.523247718811035
    4. '(__' → logprob: -14.648247718811035
    5. '/__' → logprob: -15.273247718811035
    6. '___' → logprob: -15.648247718811035
    7. '____' → logprob: -16.14824867248535
    8. '```' → logprob: -16.89824867248535
    9. '.__' → logprob: -17.14824867248535
    10. '_name' → logprob: -17.27324867248535

Token 1571: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05927863344550133
    2. ' ==' → logprob: -3.684278726577759
    3. '==' → logprob: -4.05927848815918
    4. '.__' → logprob: -4.68427848815918
    5. 'name' → logprob: -6.18427848815918
    6. ' __' → logprob: -6.80927848815918
    7. '.' → logprob: -7.18427848815918
    8. '=="' → logprob: -7.80927848815918
    9. '__.__' → logprob: -7.93427848815918
    10. '=='' → logprob: -8.43427848815918

Token 1572: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002702760975807905
    2. '__.__' → logprob: -8.750269889831543
    3. '==' → logprob: -9.250269889831543
    4. '__.' → logprob: -11.875269889831543
    5. '=="' → logprob: -12.625269889831543
    6. '__('' → logprob: -13.375269889831543
    7. '=='' → logprob: -13.500269889831543
    8. '__["' → logprob: -14.500269889831543
    9. ' ==' → logprob: -14.625269889831543
    10. '___' → logprob: -14.625269889831543

Token 1573: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.021834706887602806
    2. '==' → logprob: -3.8968346118927
    3. ' ==' → logprob: -7.521834850311279
    4. '=='' → logprob: -7.646834850311279
    5. '=="' → logprob: -8.271834373474121
    6. '__.__' → logprob: -11.271834373474121
    7. '=' → logprob: -13.771834373474121
    8. '==
' → logprob: -14.146834373474121
    9. '__('' → logprob: -14.271834373474121
    10. '_' → logprob: -14.271834373474121

Token 1574: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47528040409088135
    2. ''' → logprob: -0.9752804040908813
    3. '__' → logprob: -6.725280284881592
    4. ' "__' → logprob: -13.60028076171875
    5. ' '__' → logprob: -14.72528076171875
    6. '('__' → logprob: -15.35028076171875
    7. '   ' → logprob: -15.85028076171875
    8. ''name' → logprob: -16.35028076171875
    9. '("__' → logprob: -16.85028076171875
    10. '`' → logprob: -16.85028076171875

Token 1575: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0056575024500489235
    2. '__' → logprob: -5.25565767288208
    3. 'name' → logprob: -8.005657196044922
    4. '"' → logprob: -9.505657196044922
    5. ''' → logprob: -11.505657196044922
    6. '_main' → logprob: -12.630657196044922
    7. ' main' → logprob: -14.130657196044922
    8. 'built' → logprob: -14.380657196044922
    9. '"name' → logprob: -15.380657196044922
    10. ''name' → logprob: -15.880657196044922

Token 1576: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.14939670264720917
    2. '__' → logprob: -2.0243966579437256
    3. '__':
' → logprob: -5.024396896362305
    4. '__
' → logprob: -10.274396896362305
    5. '__["' → logprob: -10.274396896362305
    6. '__.' → logprob: -11.274396896362305
    7. '__.__' → logprob: -11.524396896362305
    8. '__()
' → logprob: -11.774396896362305
    9. '__
' → logprob: -12.149396896362305
    10. '__("' → logprob: -12.649396896362305

Token 1577: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01058200653642416
    2. '   ' → logprob: -4.635581970214844
    3. '	main' → logprob: -8.010581970214844
    4. ' main' → logprob: -8.135581970214844
    5. '__' → logprob: -8.635581970214844
    6. '_main' → logprob: -11.760581970214844
    7. '    
' → logprob: -12.510581970214844
    8. '```' → logprob: -12.760581970214844
    9. '(main' → logprob: -12.885581970214844
    10. 'import' → logprob: -13.760581970214844

Token 1578: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.8624639324116288e-06
    2. ' main' → logprob: -13.250001907348633
    3. '	main' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '_main' → logprob: -22.625001907348633
    6. '(main' → logprob: -23.500001907348633
    7. '.main' → logprob: -24.500001907348633
    8. 'sys' → logprob: -24.875001907348633
    9. 'Main' → logprob: -25.500001907348633
    10. 'import' → logprob: -25.875001907348633

Token 1579: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1577
Tokens correctement prédits (1ère position, stricte): 550
Tokens correctement prédits (1ère position, avec adaptation): 597
Tokens correctement prédits (top 10): 1170
Précision stricte (1ère position): 34.88%
Précision adaptée (1ère position): 37.86%
Précision (top 10): 74.19%
================================================================================
