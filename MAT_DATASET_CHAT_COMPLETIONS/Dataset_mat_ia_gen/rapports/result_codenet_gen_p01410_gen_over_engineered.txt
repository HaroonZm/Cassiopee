================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Block:
    def __init__(self, length: int, width: int, height: int):
        self.length = length  # Always 1
        self.width = width
        self.height = height

    def base_area(self):
        # Base area for sorting/stability check (length * width)
        return self.length * self.width

    def __repr__(self):
        return f"Block(l={self.length}, w={self.width}, h={self.height})"


class TowerBuilder:
    def __init__(self, blocks):
        self.blocks = blocks
        self.memo = {}

    def max_height(self) -> int:
        # Preprocessing blocks: as length is always 1, order by width descending
        # to try put bigger width blocks at bottom
        sorted_blocks = sorted(self.blocks, key=lambda b: b.width, reverse=True)
        return self._compute_max_height(sorted_blocks)

    def _compute_max_height(self, blocks):
        n = len(blocks)
        dp = [0] * n

        # Compute max height tower with block i at the bottom
        for i in range(n):
            dp[i] = blocks[i].height

        for i in range(n):
            for j in range(i):
                # Strictly decreasing width for upper block
                if blocks[i].width < blocks[j].width:
                    dp[i] = max(dp[i], dp[j] + blocks[i].height)
        return max(dp) if dp else 0


class InputParser:
    def __init__(self, raw_input):
        self.raw_input = raw_input.strip().split('\n')
        self.index = 0

    def read_int(self):
        val = int(self.raw_input[self.index])
        self.index += 1
        return val

    def read_ints(self):
        vals = list(map(int, self.raw_input[self.index].split()))
        self.index += 1
        return vals


class DangerousTowerSolver:
    def __init__(self, input_lines):
        self.parser = InputParser(input_lines)
        self.blocks = []

    def parse_input(self):
        n = self.parser.read_int()
        for _ in range(n):
            a, b = self.parser.read_ints()
            # length is fixed to 1, A_i is width, B_i is height (or vice versa)
            block = Block(length=1, width=a, height=b)
            self.blocks.append(block)

    def solve(self):
        self.parse_input()
        builder = TowerBuilder(self.blocks)
        ans = builder.max_height()
        print(ans)


def main():
    import sys
    solver = DangerousTowerSolver(sys.stdin.read())
    solver.solve()


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Block' (ID: 13063)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019527314230799675
    2. '(' → logprob: -4.144527435302734
    3. '   ' → logprob: -6.394527435302734
    4. '```' → logprob: -7.269527435302734
    5. ':
' → logprob: -7.894527435302734
    6. '\' → logprob: -8.644527435302734
    7. ''' → logprob: -8.644527435302734
    8. '.' → logprob: -8.769527435302734
    9. '():' → logprob: -9.894527435302734
    10. '(
' → logprob: -10.019527435302734

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18086814880371094
    2. '```' → logprob: -3.055868148803711
    3. '(' → logprob: -3.305868148803711
    4. '    ' → logprob: -3.930868148803711
    5. 'def' (adapté à ' def') → logprob: -4.305868148803711
    6. '_' → logprob: -4.680868148803711
    7. ' ' → logprob: -4.930868148803711
    8. '       ' → logprob: -5.055868148803711
    9. '\' → logprob: -5.180868148803711
    10. ' def' → logprob: -5.555868148803711

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13749884068965912
    2. ' __' → logprob: -2.3874988555908203
    3. ' init' → logprob: -4.76249885559082
    4. '    ' → logprob: -5.38749885559082
    5. '__' → logprob: -5.38749885559082
    6. ' ' → logprob: -5.88749885559082
    7. ' constructor' → logprob: -6.01249885559082
    8. '_' → logprob: -6.51249885559082
    9. ' def' → logprob: -6.51249885559082
    10. ' process' → logprob: -6.88749885559082

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. ' init' → logprob: -14.875000953674316
    3. 'ini' → logprob: -16.125
    4. '_init' → logprob: -16.75
    5. '	init' → logprob: -18.5
    6. 'in' → logprob: -18.625
    7. 'i' → logprob: -19.0
    8. 'inite' → logprob: -19.625
    9. 'innit' → logprob: -20.125
    10. 'int' → logprob: -20.25

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.2178458571434021
    2. '__' → logprob: -1.7178459167480469
    3. '(' → logprob: -4.467845916748047
    4. '_' → logprob: -5.592845916748047
    5. '__(
' → logprob: -7.342845916748047
    6. '__((' → logprob: -8.842845916748047
    7. '_(' → logprob: -9.342845916748047
    8. '(self' → logprob: -9.342845916748047
    9. '__('' → logprob: -9.592845916748047
    10. '___' → logprob: -11.467845916748047

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013743992894887924
    2. ' self' → logprob: -6.751374244689941
    3. ')' → logprob: -8.876374244689941
    4. ' ' → logprob: -11.126374244689941
    5. 's' → logprob: -11.251374244689941
    6. '(self' → logprob: -11.251374244689941
    7. ' )' → logprob: -11.376374244689941
    8. 'space' → logprob: -12.376374244689941
    9. 'sel' → logprob: -13.501374244689941
    10. '   ' → logprob: -14.001374244689941

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14319945871829987
    2. '(' → logprob: -3.3931994438171387
    3. ' ' → logprob: -3.6431994438171387
    4. ' )' → logprob: -3.7681994438171387
    5. ',' → logprob: -3.8931994438171387
    6. '_' → logprob: -4.268199443817139
    7. '<|end|>' → logprob: -4.893199443817139
    8. 'self' → logprob: -6.143199443817139
    9. '.' → logprob: -7.018199443817139
    10. 's' → logprob: -7.143199443817139

Token 10: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3658776879310608
    2. ')' → logprob: -1.865877628326416
    3. ' )' → logprob: -2.240877628326416
    4. ' self' → logprob: -3.490877628326416
    5. 's' → logprob: -4.365877628326416
    6. ' ' → logprob: -6.990877628326416
    7. ''s' → logprob: -8.365878105163574
    8. ' block' → logprob: -8.615878105163574
    9. 'space' → logprob: -8.615878105163574
    10. 'block' → logprob: -9.990878105163574

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5310028195381165
    2. ')' → logprob: -1.5310027599334717
    3. ',' → logprob: -1.6560027599334717
    4. '=' → logprob: -5.781002998352051
    5. ':' → logprob: -6.781002998352051
    6. '_' → logprob: -9.03100299835205
    7. '(' → logprob: -9.90600299835205
    8. '):
' → logprob: -10.15600299835205
    9. ' ,' → logprob: -10.15600299835205
    10. ')>' → logprob: -10.15600299835205

Token 12: ' int' (ID: 677)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6296970248222351
    2. 'int' → logprob: -1.7546970844268799
    3. ')' → logprob: -1.8796970844268799
    4. ' ' → logprob: -2.37969708442688
    5. ' int' → logprob: -3.12969708442688
    6. '<|end|>' → logprob: -6.129696846008301
    7. 'n' → logprob: -7.379696846008301
    8. '(int' → logprob: -7.629696846008301
    9. ' ):' → logprob: -7.754696846008301
    10. '<int' → logprob: -8.2546968460083

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3715701997280121
    2. ')' → logprob: -1.7465702295303345
    3. ',' → logprob: -1.9965702295303345
    4. '):
' → logprob: -10.121570587158203
    5. '   ' → logprob: -10.246570587158203
    6. ':' → logprob: -10.746570587158203
    7. '),' → logprob: -11.746570587158203
    8. ',
' → logprob: -11.746570587158203
    9. ' ,' → logprob: -11.871570587158203
    10. ' ' → logprob: -11.996570587158203

Token 14: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.26821833848953247
    2. ' )' → logprob: -2.3932182788848877
    3. ' weight' → logprob: -3.1432182788848877
    4. ')' → logprob: -3.5182182788848877
    5. ' ' → logprob: -4.393218517303467
    6. 'width' → logprob: -4.393218517303467
    7. ' block' → logprob: -4.643218517303467
    8. ' space' → logprob: -5.018218517303467
    9. ' color' → logprob: -5.268218517303467
    10. ' depth' → logprob: -5.893218517303467

Token 15: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38653764128685
    2. ')' → logprob: -1.7615376710891724
    3. ',' → logprob: -2.261537551879883
    4. ':' → logprob: -3.136537551879883
    5. '=' → logprob: -7.261537551879883
    6. '):
' → logprob: -9.386537551879883
    7. '   ' → logprob: -9.386537551879883
    8. ')>' → logprob: -9.761537551879883
    9. ' ,' → logprob: -9.886537551879883
    10. ' ):' → logprob: -10.261537551879883

Token 16: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12723413109779358
    2. 'int' → logprob: -2.1272342205047607
    3. ')' → logprob: -8.37723445892334
    4. ' )' → logprob: -10.25223445892334
    5. ':int' → logprob: -11.25223445892334
    6. '=int' → logprob: -11.25223445892334
    7. ' ' → logprob: -12.37723445892334
    8. '(int' → logprob: -13.25223445892334
    9. ' ' → logprob: -13.37723445892334
    10. '[int' → logprob: -13.75223445892334

Token 17: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16234275698661804
    2. ')' → logprob: -2.2873427867889404
    3. ',' → logprob: -3.0373427867889404
    4. ':' → logprob: -8.66234302520752
    5. '   ' → logprob: -9.28734302520752
    6. '):
' → logprob: -10.66234302520752
    7. '),' → logprob: -11.66234302520752
    8. ' ,' → logprob: -11.66234302520752
    9. ' ' → logprob: -11.91234302520752
    10. ')->' → logprob: -11.91234302520752

Token 18: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.00257328269071877
    2. ' depth' → logprob: -6.502573490142822
    3. 'height' → logprob: -6.877573490142822
    4. '   ' → logprob: -11.877573013305664
    5. ' weight' → logprob: -12.002573013305664
    6. ' color' → logprob: -12.002573013305664
    7. 'depth' → logprob: -12.127573013305664
    8. '_height' → logprob: -13.252573013305664
    9. '	height' → logprob: -13.377573013305664
    10. ' length' → logprob: -13.377573013305664

Token 19: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14073289930820465
    2. ':' → logprob: -2.265733003616333
    3. ')' → logprob: -3.640733003616333
    4. ',' → logprob: -6.765732765197754
    5. '   ' → logprob: -10.265732765197754
    6. ' ):' → logprob: -10.515732765197754
    7. '):
' → logprob: -11.265732765197754
    8. '=' → logprob: -11.515732765197754
    9. ' :' → logprob: -12.140732765197754
    10. '>:' → logprob: -12.140732765197754

Token 20: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07006391882896423
    2. 'int' → logprob: -2.695063829421997
    3. '=int' → logprob: -10.070063591003418
    4. ' ' → logprob: -10.320063591003418
    5. ':int' → logprob: -10.445063591003418
    6. ')' → logprob: -11.695063591003418
    7. ' )' → logprob: -12.695063591003418
    8. '	int' → logprob: -12.695063591003418
    9. '[int' → logprob: -13.195063591003418
    10. ' ' → logprob: -13.445063591003418

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016496693715453148
    2. ')' → logprob: -4.141496658325195
    3. ':' → logprob: -8.016496658325195
    4. ',' → logprob: -9.141496658325195
    5. '   ' → logprob: -11.516496658325195
    6. ' ):' → logprob: -12.516496658325195
    7. '):
' → logprob: -12.766496658325195
    8. '),' → logprob: -13.266496658325195
    9. '```' → logprob: -13.766496658325195
    10. ')->' → logprob: -13.891496658325195

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02865929715335369
    2. '   ' → logprob: -4.528659343719482
    3. '    ' → logprob: -4.653659343719482
    4. '        
' → logprob: -6.278659343719482
    5. '        ' → logprob: -6.403659343719482
    6. '\' → logprob: -6.778659343719482
    7. ' 
' → logprob: -7.528659343719482
    8. ' ' → logprob: -7.778659343719482
    9. '\n' → logprob: -7.778659343719482
    10. 'self' → logprob: -8.028658866882324

Token 23: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2337547391653061
    2. '       ' → logprob: -1.8587547540664673
    3. '        ' → logprob: -3.7337546348571777
    4. ' self' → logprob: -4.483754634857178
    5. ' ' → logprob: -5.483754634857178
    6. '   ' → logprob: -5.608754634857178
    7. 's' → logprob: -5.858754634857178
    8. '    ' → logprob: -6.858754634857178
    9. '           ' → logprob: -6.858754634857178
    10. '         ' → logprob: -7.108754634857178

Token 24: '.length' (ID: 3116)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.619311974034645e-05
    2. ' .' → logprob: -11.000036239624023
    3. '.length' → logprob: -12.125036239624023
    4. '<|end|>' → logprob: -12.625036239624023
    5. '.)' → logprob: -13.375036239624023
    6. '<|end|>' → logprob: -13.500036239624023
    7. '.width' → logprob: -13.875036239624023
    8. '.height' → logprob: -13.875036239624023
    9. '.space' → logprob: -14.250036239624023
    10. '."""' → logprob: -14.375036239624023

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24432562291622162
    2. ' =' → logprob: -2.744325637817383
    3. '_' → logprob: -2.869325637817383
    4. ' ' → logprob: -3.119325637817383
    5. '.' → logprob: -3.494325637817383
    6. '<|end|>' → logprob: -4.619325637817383
    7. ')' → logprob: -4.994325637817383
    8. ',' → logprob: -6.119325637817383
    9. ' )' → logprob: -7.619325637817383
    10. ' space' → logprob: -8.119325637817383

Token 26: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.12694038450717926
    2. 'length' → logprob: -2.1269404888153076
    3. '(length' → logprob: -11.626940727233887
    4. '[length' → logprob: -13.626940727233887
    5. 'ength' → logprob: -14.251940727233887
    6. '	length' → logprob: -14.501940727233887
    7. 'leng' → logprob: -15.501940727233887
    8. ' lenght' → logprob: -15.501940727233887
    9. ',length' → logprob: -15.626940727233887
    10. ' ' → logprob: -15.751940727233887

Token 27: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' Always' (ID: 30141)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0033314721658825874
    2. ''' → logprob: -7.878331661224365
    3. ')' → logprob: -7.878331661224365
    4. ' space' → logprob: -7.878331661224365
    5. ' length' → logprob: -8.003331184387207
    6. '  ' → logprob: -8.003331184387207
    7. ' """' → logprob: -8.128331184387207
    8. '    ' → logprob: -8.378331184387207
    9. '<|end|>' → logprob: -8.628331184387207
    10. '"' → logprob: -8.878331184387207

Token 30: ' ' (ID: 220)
  Prédit: ' positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.06276758760213852
    2. ' an' → logprob: -3.687767505645752
    3. ' stored' → logprob: -4.562767505645752
    4. ' a' → logprob: -4.937767505645752
    5. 'positive' → logprob: -4.937767505645752
    6. ' ' → logprob: -6.062767505645752
    7. ' non' → logprob: -6.312767505645752
    8. ' >' → logprob: -6.937767505645752
    9. ' greater' → logprob: -6.937767505645752
    10. '_positive' → logprob: -7.437767505645752

Token 31: '1' (ID: 16)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.15829427540302277
    2. 'an' → logprob: -2.783294200897217
    3. 'a' → logprob: -2.908294200897217
    4. '>' → logprob: -4.533294200897217
    5. 'greater' → logprob: -5.033294200897217
    6. ' positive' → logprob: -5.658294200897217
    7. 'stored' → logprob: -6.658294200897217
    8. 'pos' → logprob: -6.783294200897217
    9. ' an' → logprob: -7.158294200897217
    10. 'in' → logprob: -7.283294200897217

Token 32: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1054450273513794
    2. '
' → logprob: -2.10544490814209
    3. '<|end|>' → logprob: -2.10544490814209
    4. '.' → logprob: -2.23044490814209
    5. '0' → logprob: -2.48044490814209
    6. '*' → logprob: -2.73044490814209
    7. ')' → logprob: -2.98044490814209
    8. '+' → logprob: -3.85544490814209
    9. ' ' → logprob: -4.10544490814209
    10. '\n' → logprob: -4.35544490814209

Token 33: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6060546636581421
    2. '<|end|>' → logprob: -1.731054663658142
    3. ' ' → logprob: -2.3560547828674316
    4. '        ' → logprob: -2.8560547828674316
    5. '_' → logprob: -3.7310547828674316
    6. '\' → logprob: -3.8560547828674316
    7. ')' → logprob: -3.9810547828674316
    8. ' 
' → logprob: -4.106054782867432
    9. ',' → logprob: -4.481054782867432
    10. '        
' → logprob: -4.731054782867432

Token 35: '.width' (ID: 11038)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.023587729781866074
    2. '.width' → logprob: -3.773587703704834
    3. ' .' → logprob: -8.648588180541992
    4. '.height' → logprob: -9.273588180541992
    5. '.length' → logprob: -10.273588180541992
    6. '.w' → logprob: -11.023588180541992
    7. 'width' → logprob: -12.148588180541992
    8. '.space' → logprob: -12.898588180541992
    9. ' width' → logprob: -13.023588180541992
    10. '_width' → logprob: -13.023588180541992

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00670826667919755
    2. '=' → logprob: -5.131708145141602
    3. '<|end|>' → logprob: -7.881708145141602
    4. ' ' → logprob: -8.006708145141602
    5. ')' → logprob: -10.631708145141602
    6. '_' → logprob: -11.256708145141602
    7. '<|end|>' → logprob: -11.881708145141602
    8. ' ,' → logprob: -12.256708145141602
    9. ',' → logprob: -12.756708145141602
    10. ' )' → logprob: -12.881708145141602

Token 37: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.055406421422958374
    2. 'width' → logprob: -2.930406332015991
    3. '1' → logprob: -8.05540657043457
    4. ' ' → logprob: -8.68040657043457
    5. '(width' → logprob: -11.43040657043457
    6. '0' → logprob: -12.30540657043457
    7. '	width' → logprob: -12.30540657043457
    8. ' w' → logprob: -13.18040657043457
    9. 'w' → logprob: -13.24290657043457
    10. '2' → logprob: -13.43040657043457

Token 38: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29760053753852844
    2. ' ' → logprob: -1.922600507736206
    3. ' =' → logprob: -3.672600507736206
    4. '<|end|>' → logprob: -3.672600507736206
    5. ' #' → logprob: -4.047600746154785
    6. '        ' → logprob: -4.047600746154785
    7. ')' → logprob: -5.172600746154785
    8. '=' → logprob: -5.297600746154785
    9. '#' → logprob: -5.797600746154785
    10. '   ' → logprob: -6.172600746154785

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15375129878520966
    2. '<|end|>' → logprob: -2.4037513732910156
    3. ' ' → logprob: -4.528751373291016
    4. '=' → logprob: -4.778751373291016
    5. ' =' → logprob: -4.903751373291016
    6. '        ' → logprob: -5.028751373291016
    7. ')' → logprob: -5.153751373291016
    8. ' #' → logprob: -5.778751373291016
    9. '#' → logprob: -5.903751373291016
    10. '   ' → logprob: -6.028751373291016

Token 40: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3038293421268463
    2. '<|end|>' → logprob: -1.928829312324524
    3. ' ' → logprob: -2.5538294315338135
    4. '#' → logprob: -4.178829193115234
    5. ' #' → logprob: -4.553829193115234
    6. '        ' → logprob: -5.678829193115234
    7. ')' → logprob: -5.678829193115234
    8. '   ' → logprob: -6.678829193115234
    9. '<|end|>' → logprob: -6.928829193115234
    10. '=' → logprob: -7.053829193115234

Token 41: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.578094482421875
    2. '.' → logprob: -0.828094482421875
    3. ' .' → logprob: -6.703094482421875
    4. 'height' → logprob: -7.203094482421875
    5. ' height' → logprob: -9.328094482421875
    6. '_height' → logprob: -9.828094482421875
    7. '.length' → logprob: -11.078094482421875
    8. '.width' → logprob: -11.828094482421875
    9. ' ' → logprob: -12.453094482421875
    10. '.Height' → logprob: -13.203094482421875

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1605047881603241
    2. '=' → logprob: -1.9105048179626465
    3. '<|end|>' → logprob: -8.910504341125488
    4. ' ' → logprob: -9.285504341125488
    5. ')' → logprob: -10.910504341125488
    6. ' =
' → logprob: -11.160504341125488
    7. '   ' → logprob: -12.285504341125488
    8. '<|end|>' → logprob: -12.660504341125488
    9. '.' → logprob: -12.910504341125488
    10. '  ' → logprob: -13.160504341125488

Token 43: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.03381743282079697
    2. 'height' → logprob: -3.4088175296783447
    3. '1' → logprob: -9.158817291259766
    4. ' ' → logprob: -9.783817291259766
    5. '(height' → logprob: -12.783817291259766
    6. '0' → logprob: -12.908817291259766
    7. '	height' → logprob: -13.783817291259766
    8. ' length' → logprob: -14.533817291259766
    9. ' heights' → logprob: -14.658817291259766
    10. '.height' → logprob: -15.033817291259766

Token 44: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26706477999687195
    2. '
' → logprob: -2.1420648097991943
    3. '\n' → logprob: -3.6420648097991943
    4. '    
' → logprob: -4.142064571380615
    5. ' ' → logprob: -4.267064571380615
    6. '\' → logprob: -4.267064571380615
    7. '<|end|>' → logprob: -4.517064571380615
    8. ' 
' → logprob: -5.017064571380615
    9. ')' → logprob: -5.267064571380615
    10. '```' → logprob: -5.642064571380615

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1234322339296341
    2. '    
' → logprob: -2.998432159423828
    3. '
' → logprob: -3.373432159423828
    4. ' 
' → logprob: -3.873432159423828
    5. ' ' → logprob: -5.748432159423828
    6. '  
' → logprob: -6.623432159423828
    7. '\n' → logprob: -6.748432159423828
    8. '```' → logprob: -6.998432159423828
    9. '   
' → logprob: -7.373432159423828
    10. '     
' → logprob: -7.748432159423828

Token 46: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5207225680351257
    2. 'def' (adapté à ' def') → logprob: -1.7707226276397705
    3. 'd' → logprob: -2.2707226276397705
    4. ' 
' → logprob: -2.8957226276397705
    5. '    
' → logprob: -3.3957226276397705
    6. ' def' → logprob: -4.145722389221191
    7. '
' → logprob: -4.520722389221191
    8. ' ' → logprob: -4.770722389221191
    9. '   
' → logprob: -6.520722389221191
    10. '    ' → logprob: -6.645722389221191

Token 47: ' base' (ID: 3611)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.42035549879074097
    2. ' ' → logprob: -1.1703555583953857
    3. ' area' → logprob: -4.670355319976807
    4. ' calculate' → logprob: -5.045355319976807
    5. ' get' → logprob: -5.295355319976807
    6. '_' → logprob: -5.420355319976807
    7. '_space' → logprob: -6.295355319976807
    8. 'space' → logprob: -7.045355319976807
    9. ' def' → logprob: -7.170355319976807
    10. ' _' → logprob: -7.670355319976807

Token 48: '_area' (ID: 34097)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025799013674259186
    2. '_area' → logprob: -3.775799036026001
    3. ' _' → logprob: -7.025798797607422
    4. '_size' → logprob: -7.150798797607422
    5. '()' → logprob: -8.025798797607422
    6. '(' → logprob: -8.025798797607422
    7. '_space' → logprob: -9.650798797607422
    8. '_surface' → logprob: -10.650798797607422
    9. '_length' → logprob: -11.150798797607422
    10. ' ()' → logprob: -11.400798797607422

Token 49: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008085522567853332
    2. '(self' → logprob: -7.3758087158203125
    3. '(
' → logprob: -10.000808715820312
    4. 's' → logprob: -10.125808715820312
    5. ')' → logprob: -10.750808715820312
    6. '<|end|>' → logprob: -11.000808715820312
    7. '   ' → logprob: -11.375808715820312
    8. '()' → logprob: -11.375808715820312
    9. ' (' → logprob: -11.625808715820312
    10. '(s' → logprob: -11.750808715820312

Token 50: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06304777413606644
    2. '):' → logprob: -2.8130478858947754
    3. '():' → logprob: -7.938047885894775
    4. '()' → logprob: -8.063047409057617
    5. ' )' → logprob: -8.688047409057617
    6. '())' → logprob: -9.563047409057617
    7. ' ):' → logprob: -10.313047409057617
    8. '(' → logprob: -10.438047409057617
    9. 'self' → logprob: -10.813047409057617
    10. ' ' → logprob: -11.563047409057617

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2686142027378082
    2. '(' → logprob: -2.1436142921447754
    3. '()' → logprob: -2.6436142921447754
    4. '<|end|>' → logprob: -3.8936142921447754
    5. ':' → logprob: -4.643614292144775
    6. 'return' → logprob: -5.518614292144775
    7. '   ' → logprob: -6.143614292144775
    8. '(self' → logprob: -6.268614292144775
    9. ' return' → logprob: -6.268614292144775
    10. ')' → logprob: -6.268614292144775

Token 52: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5658348202705383
    2. 'return' → logprob: -0.9408348202705383
    3. ' return' → logprob: -3.1908347606658936
    4. '```' → logprob: -8.815834999084473
    5. '        ' → logprob: -9.440834999084473
    6. '        
' → logprob: -9.565834999084473
    7. '   ' → logprob: -9.565834999084473
    8. ' ' → logprob: -9.565834999084473
    9. '    ' → logprob: -10.315834999084473
    10. ' ' → logprob: -10.315834999084473

Token 53: ' Base' (ID: 8729)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7738083600997925
    2. '       ' → logprob: -1.0238083600997925
    3. ' return' → logprob: -1.7738083600997925
    4. '   ' → logprob: -5.273808479309082
    5. ' ' → logprob: -6.273808479309082
    6. '    ' → logprob: -6.523808479309082
    7. '        ' → logprob: -7.273808479309082
    8. 'r' → logprob: -8.523808479309082
    9. '  ' → logprob: -9.023808479309082
    10. ' ' → logprob: -9.023808479309082

Token 54: ' area' (ID: 3624)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1621258407831192
    2. '       ' → logprob: -2.412125825881958
    3. ')' → logprob: -3.662125825881958
    4. '(' → logprob: -4.537126064300537
    5. ' ' → logprob: -5.287126064300537
    6. ' ()' → logprob: -5.287126064300537
    7. '   ' → logprob: -5.912126064300537
    8. '<|end|>' → logprob: -5.912126064300537
    9. 'return' → logprob: -6.287126064300537
    10. '_' → logprob: -6.912126064300537

Token 55: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8056421279907227
    2. '=' → logprob: -1.5556421279907227
    3. '(' → logprob: -1.9306421279907227
    4. ' =' → logprob: -2.0556421279907227
    5. '*' → logprob: -3.9306421279907227
    6. '       ' → logprob: -4.180642127990723
    7. ')' → logprob: -4.305642127990723
    8. '   ' → logprob: -4.805642127990723
    9. 'return' → logprob: -5.930642127990723
    10. ' *' → logprob: -6.305642127990723

Token 56: ' sorting' (ID: 51375)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1489485651254654
    2. 'self' → logprob: -2.0239486694335938
    3. ' return' → logprob: -5.648948669433594
    4. ' the' → logprob: -6.398948669433594
    5. ' ' → logprob: -7.398948669433594
    6. 'return' → logprob: -8.648948669433594
    7. ' a' → logprob: -9.773948669433594
    8. '<|end|>' → logprob: -9.773948669433594
    9. ' block' → logprob: -10.648948669433594
    10. ')' → logprob: -10.773948669433594

Token 57: '/st' (ID: 27309)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3554038405418396
    2. 'return' → logprob: -2.4804039001464844
    3. '()' → logprob: -3.1054039001464844
    4. '<|end|>' → logprob: -3.1054039001464844
    5. ')' → logprob: -3.2304039001464844
    6. '   ' → logprob: -3.7304039001464844
    7. '(' → logprob: -3.7304039001464844
    8. ' return' → logprob: -4.105403900146484
    9. '	return' → logprob: -5.855403900146484
    10. ':return' → logprob: -5.980403900146484

Token 58: 'ability' (ID: 3563)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.7198582887649536
    2. 'acking' → logprob: -0.8448582887649536
    3. 'r' → logprob: -2.844858169555664
    4. 'ability' → logprob: -4.469858169555664
    5. 'acks' → logprob: -5.469858169555664
    6. 'atic' → logprob: -6.219858169555664
    7. 'd' → logprob: -6.969858169555664
    8. 'acked' → logprob: -6.969858169555664
    9. 'art' → logprob: -7.219858169555664
    10. 'able' → logprob: -7.344858169555664

Token 59: ' check' (ID: 2371)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7221940755844116
    2. '       ' → logprob: -1.7221940755844116
    3. ':' → logprob: -1.9721940755844116
    4. '   ' → logprob: -2.097194194793701
    5. ')' → logprob: -2.222194194793701
    6. '(' → logprob: -2.472194194793701
    7. '()' → logprob: -2.722194194793701
    8. '<|end|>' → logprob: -3.222194194793701
    9. ' =' → logprob: -3.472194194793701
    10. 'return' → logprob: -4.222194194793701

Token 60: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5179423689842224
    2. ')' → logprob: -2.267942428588867
    3. '<|end|>' → logprob: -2.517942428588867
    4. '   ' → logprob: -2.892942428588867
    5. ':' → logprob: -2.892942428588867
    6. 'return' → logprob: -3.142942428588867
    7. ' return' → logprob: -3.767942428588867
    8. ':return' → logprob: -4.642942428588867
    9. '(' → logprob: -5.017942428588867
    10. '=' → logprob: -5.392942428588867

Token 61: 'length' (ID: 7914)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3968660533428192
    2. ' self' → logprob: -1.7718660831451416
    3. ')' → logprob: -2.5218660831451416
    4. ' return' → logprob: -3.1468660831451416
    5. 'return' → logprob: -3.5218660831451416
    6. '       ' → logprob: -5.7718658447265625
    7. ' )' → logprob: -7.2718658447265625
    8. ')return' → logprob: -7.8968658447265625
    9. '   ' → logprob: -8.896865844726562
    10. '```' → logprob: -9.521865844726562

Token 62: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00561885442584753
    2. '*' → logprob: -5.255619049072266
    3. ')' → logprob: -8.505619049072266
    4. ' ' → logprob: -9.005619049072266
    5. '<|end|>' → logprob: -11.005619049072266
    6. '*self' → logprob: -11.505619049072266
    7. ' ' → logprob: -11.755619049072266
    8. ' )' → logprob: -12.255619049072266
    9. ' *
' → logprob: -12.255619049072266
    10. '   ' → logprob: -12.880619049072266

Token 63: ' width' (ID: 4345)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0845743417739868
    2. ' self' → logprob: -1.2095743417739868
    3. ' width' → logprob: -1.3345743417739868
    4. 'width' → logprob: -2.3345742225646973
    5. ')' → logprob: -6.209574222564697
    6. '<|end|>' → logprob: -7.209574222564697
    7. ' ' → logprob: -7.834574222564697
    8. ' ' → logprob: -8.834574699401855
    9. ' )' → logprob: -9.959574699401855
    10. 'space' → logprob: -10.334574699401855

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003112711710855365
    2. '       ' → logprob: -9.125310897827148
    3. '   ' → logprob: -9.500310897827148
    4. '}' → logprob: -9.625310897827148
    5. ' )' → logprob: -10.250310897827148
    6. '*' → logprob: -11.375310897827148
    7. ')*' → logprob: -12.875310897827148
    8. ')}' → logprob: -13.125310897827148
    9. '<|end|>' → logprob: -13.500310897827148
    10. ' ' → logprob: -13.625310897827148

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014323819195851684
    2. 'return' → logprob: -7.751432418823242
    3. '<|end|>' → logprob: -7.876432418823242
    4. '   ' → logprob: -8.626432418823242
    5. ' return' → logprob: -8.751432418823242
    6. '        
' → logprob: -9.376432418823242
    7. ')' → logprob: -10.751432418823242
    8. ':return' → logprob: -10.876432418823242
    9. ',' → logprob: -11.001432418823242
    10. '```' → logprob: -11.126432418823242

Token 66: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39876875281333923
    2. 'return' (adapté à ' return') → logprob: -1.1487687826156616
    3. ' return' → logprob: -4.523768901824951
    4. '   ' → logprob: -8.648768424987793
    5. '        
' → logprob: -8.648768424987793
    6. ' ' → logprob: -8.898768424987793
    7. 'r' → logprob: -9.273768424987793
    8. '```' → logprob: -9.273768424987793
    9. '        ' → logprob: -9.773768424987793
    10. '    ' → logprob: -9.898768424987793

Token 67: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2014257162809372
    2. 'self' → logprob: -1.7014256715774536
    3. '1' → logprob: -11.951425552368164
    4. ' ' → logprob: -12.951425552368164
    5. ' ' → logprob: -13.201425552368164
    6. '	self' → logprob: -14.576425552368164
    7. '(self' → logprob: -14.576425552368164
    8. '*self' → logprob: -15.951425552368164
    9. '0' → logprob: -16.076425552368164
    10. '   ' → logprob: -16.201425552368164

Token 68: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.01514264103025198
    2. '.' → logprob: -4.515142440795898
    3. '.width' → logprob: -5.515142440795898
    4. ' .' → logprob: -10.390142440795898
    5. '.height' → logprob: -10.515142440795898
    6. '.l' → logprob: -13.890142440795898
    7. '.base' → logprob: -14.140142440795898
    8. 'length' → logprob: -14.265142440795898
    9. '.
' → logprob: -15.140142440795898
    10. '.area' → logprob: -15.265142440795898

Token 69: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00977108534425497
    2. '*' → logprob: -4.63477087020874
    3. '<|end|>' → logprob: -12.009771347045898
    4. ' *
' → logprob: -13.134771347045898
    5. ' ' → logprob: -13.134771347045898
    6. '*object' → logprob: -13.384771347045898
    7. ' ' → logprob: -13.509771347045898
    8. ' **' → logprob: -14.134771347045898
    9. '*self' → logprob: -14.759771347045898
    10. '**' → logprob: -15.634771347045898

Token 70: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47408872842788696
    2. ' self' → logprob: -0.974088728427887
    3. ' ' → logprob: -12.724088668823242
    4. ' ' → logprob: -12.849088668823242
    5. '<|end|>' → logprob: -12.849088668823242
    6. '	self' → logprob: -13.349088668823242
    7. 'width' → logprob: -14.224088668823242
    8. '_self' → logprob: -14.599088668823242
    9. ' width' → logprob: -15.099088668823242
    10. '(self' → logprob: -15.724088668823242

Token 71: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.0009136092266999185
    2. '.' → logprob: -7.000913619995117
    3. ' .' → logprob: -14.375913619995117
    4. '.w' → logprob: -14.500913619995117
    5. 'width' → logprob: -14.500913619995117
    6. '.height' → logprob: -15.625913619995117
    7. '	width' → logprob: -17.125913619995117
    8. ';width' → logprob: -17.375913619995117
    9. '.user' → logprob: -17.500913619995117

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4727480411529541
    2. '<|end|>' → logprob: -1.472748041152954
    3. '   ' → logprob: -2.847748041152954
    4. '*' → logprob: -3.347748041152954
    5. '\n' → logprob: -4.347747802734375
    6. '+' → logprob: -4.722747802734375
    7. '+
' → logprob: -4.972747802734375
    8. '    
' → logprob: -5.722747802734375
    9. '.' → logprob: -5.722747802734375
    10. '\' → logprob: -5.847747802734375

Token 73: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6108328104019165
    2. '   ' → logprob: -0.9858328104019165
    3. '<|end|>' → logprob: -3.360832691192627
    4. '    
' → logprob: -4.235832691192627
    5. 'def' → logprob: -4.360832691192627
    6. '\n' → logprob: -5.610832691192627
    7. ' ' → logprob: -5.610832691192627
    8. ' 
' → logprob: -6.110832691192627
    9. ' def' → logprob: -6.235832691192627
    10. '```' → logprob: -6.360832691192627

Token 74: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10495108366012573
    2. '
' → logprob: -2.8549511432647705
    3. '   ' → logprob: -3.3549511432647705
    4. ' def' → logprob: -5.979950904846191
    5. '<|end|>' → logprob: -5.979950904846191
    6. '    
' → logprob: -6.854950904846191
    7. ' ' → logprob: -8.354950904846191
    8. '```' → logprob: -9.104950904846191
    9. '\n' → logprob: -9.479950904846191
    10. '

' → logprob: -9.479950904846191

Token 75: ' __' (ID: 2516)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.9168546199798584
    2. ' ' → logprob: -2.0418546199798584
    3. ' def' → logprob: -2.1668546199798584
    4. ' __' → logprob: -3.0418546199798584
    5. ' get' → logprob: -3.1668546199798584
    6. ' height' → logprob: -3.4168546199798584
    7. ' volume' → logprob: -3.4168546199798584
    8. ' calculate' → logprob: -3.4168546199798584
    9. ' ' → logprob: -3.6668546199798584
    10. ' stack' → logprob: -3.7918546199798584

Token 76: 'repr' (ID: 67002)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.10571733862161636
    2. 'eq' → logprob: -2.480717420578003
    3. 'str' → logprob: -4.980717182159424
    4. 'l' → logprob: -5.355717182159424
    5. 'repr' → logprob: -5.480717182159424
    6. 'le' → logprob: -7.355717182159424
    7. 's' → logprob: -9.605717658996582
    8. 'gt' → logprob: -9.730717658996582
    9. 'hash' → logprob: -10.980717658996582
    10. 'init' → logprob: -10.980717658996582

Token 77: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4878259003162384
    2. '__(' → logprob: -0.987825870513916
    3. '__(
' → logprob: -4.862825870513916
    4. '(' → logprob: -5.612825870513916
    5. '__('' → logprob: -6.862825870513916
    6. '(self' → logprob: -7.737825870513916
    7. '_' → logprob: -7.737825870513916
    8. '__((' → logprob: -8.862826347351074
    9. '___' → logprob: -9.487826347351074
    10. '__("' → logprob: -9.737826347351074

Token 78: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.464347173576243e-05
    2. ')' → logprob: -10.37503433227539
    3. ' self' → logprob: -12.87503433227539
    4. 'sel' → logprob: -14.87503433227539
    5. 'se' → logprob: -15.62503433227539
    6. 's' → logprob: -16.50003433227539
    7. '(self' → logprob: -16.87503433227539
    8. '
' → logprob: -17.00003433227539
    9. ' ' → logprob: -17.25003433227539
    10. 'sef' → logprob: -17.25003433227539

Token 79: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07518314570188522
    2. '_' → logprob: -3.450183153152466
    3. '__' → logprob: -3.575183153152466
    4. '):' → logprob: -5.075182914733887
    5. '__)' → logprob: -6.950182914733887
    6. '(' → logprob: -7.075182914733887
    7. ' )' → logprob: -7.325182914733887
    8. ',' → logprob: -7.325182914733887
    9. ')__' → logprob: -7.575182914733887
    10. 'self' → logprob: -7.700182914733887

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026669714599847794
    2. ''' → logprob: -4.026669502258301
    3. '    ' → logprob: -5.901669502258301
    4. '   ' → logprob: -6.026669502258301
    5. '"' → logprob: -6.901669502258301
    6. '        ' → logprob: -7.651669502258301
    7. ' ' → logprob: -7.651669502258301
    8. '(' → logprob: -7.651669502258301
    9. '      ' → logprob: -8.2766695022583
    10. '     ' → logprob: -8.7766695022583

Token 81: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24033772945404053
    2. 'r' → logprob: -2.11533784866333
    3. ' return' → logprob: -3.11533784866333
    4. 'return' (adapté à ' return') → logprob: -3.49033784866333
    5. 'f' → logprob: -5.49033784866333
    6. '   ' → logprob: -5.61533784866333
    7. '    ' → logprob: -5.74033784866333
    8. ' r' → logprob: -5.74033784866333
    9. ' f' → logprob: -6.36533784866333
    10. ''' → logprob: -7.36533784866333

Token 82: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.061972957104444504
    2. 'f' → logprob: -2.8119728565216064
    3. ''f' → logprob: -12.811972618103027
    4. ''' → logprob: -13.811972618103027
    5. '"' → logprob: -14.186972618103027
    6. ' ' → logprob: -14.686972618103027
    7. ' F' → logprob: -15.936972618103027
    8. '(f' → logprob: -16.061973571777344
    9. 'F' → logprob: -16.436973571777344
    10. '	f' → logprob: -16.811973571777344

Token 83: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09981545060873032
    2. ''' → logprob: -3.0998153686523438
    3. '(Block' → logprob: -3.5998153686523438
    4. '(' → logprob: -3.9748153686523438
    5. '<Block' → logprob: -6.849815368652344
    6. '"class' → logprob: -6.974815368652344
    7. 'Block' → logprob: -7.474815368652344
    8. '(f' → logprob: -8.474815368652344
    9. '("' → logprob: -8.474815368652344
    10. '"B' → logprob: -9.099815368652344

Token 84: 'Block' (ID: 5464)
  Prédit: 'Block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Block' → logprob: -0.00027599421446211636
    2. 'Bloc' → logprob: -8.625275611877441
    3. 'Bl' → logprob: -10.375275611877441
    4. 'Blo' → logprob: -10.500275611877441
    5. 'B' → logprob: -10.750275611877441
    6. '<Block' → logprob: -11.125275611877441
    7. '	Block' → logprob: -14.750275611877441
    8. ' Block' → logprob: -15.000275611877441
    9. 'Blk' → logprob: -15.250275611877441
    10. '(Block' → logprob: -16.000276565551758

Token 85: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.57728111743927
    2. '(length' → logprob: -0.82728111743927
    3. '(Block' → logprob: -7.4522809982299805
    4. '(`' → logprob: -8.57728099822998
    5. '({' → logprob: -8.70228099822998
    6. '(len' → logprob: -9.20228099822998
    7. '(height' → logprob: -9.82728099822998
    8. '(f' → logprob: -9.95228099822998
    9. '('' → logprob: -10.32728099822998
    10. '(
' → logprob: -10.57728099822998

Token 86: '={' (ID: 1693)
  Prédit: 'ength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ength' → logprob: -0.16373296082019806
    2. 'e' → logprob: -2.4137330055236816
    3. 'eng' → logprob: -3.1637330055236816
    4. 'en' → logprob: -4.288733005523682
    5. 'engt' → logprob: -5.288733005523682
    6. '=' → logprob: -8.413732528686523
    7. '```' → logprob: -9.288732528686523
    8. 'enth' → logprob: -10.538732528686523
    9. ',' → logprob: -10.538732528686523
    10. '{' → logprob: -10.663732528686523

Token 87: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008282098569907248
    2. 'elf' → logprob: -7.125828266143799
    3. 'f' → logprob: -11.12582778930664
    4. ' self' → logprob: -12.00082778930664
    5. 'ength' → logprob: -13.87582778930664
    6. '{' → logprob: -14.25082778930664
    7. 'sel' → logprob: -15.62582778930664
    8. 'sef' → logprob: -15.75082778930664
    9. '```' → logprob: -15.87582778930664
    10. ' ' → logprob: -16.25082778930664

Token 88: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.13685676455497742
    2. 'ength' → logprob: -2.1368567943573
    3. '.' → logprob: -4.636856555938721
    4. '.width' → logprob: -10.011857032775879
    5. '.l' → logprob: -10.386857032775879
    6. 'length' → logprob: -10.636857032775879
    7. '.block' → logprob: -11.011857032775879
    8. ',' → logprob: -11.386857032775879
    9. '.
' → logprob: -11.886857032775879
    10. ',length' → logprob: -11.886857032775879

Token 89: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000104616025055293
    2. ' ,' → logprob: -9.500104904174805
    3. ',
' → logprob: -10.875104904174805
    4. ',width' → logprob: -12.625104904174805
    5. ',

' → logprob: -13.000104904174805
    6. '<|end|>' → logprob: -13.500104904174805
    7. '‌,' → logprob: -14.125104904174805
    8. ',length' → logprob: -14.500104904174805
    9. ')' → logprob: -14.750104904174805
    10. '',' → logprob: -15.375104904174805

Token 90: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.07195843756198883
    2. 'w' → logprob: -2.696958541870117
    3. ' ' → logprob: -7.446958541870117
    4. '<|end|>' → logprob: -7.696958541870117
    5. 'width' → logprob: -8.071958541870117
    6. ' width' → logprob: -8.196958541870117
    7. ' {' → logprob: -8.821958541870117
    8. ' ' → logprob: -8.821958541870117
    9. '{' → logprob: -10.196958541870117
    10. ' ,' → logprob: -11.071958541870117

Token 91: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03969806805253029
    2. '={' → logprob: -3.2896981239318848
    3. '={}' → logprob: -6.789698123931885
    4. '=}' → logprob: -8.164697647094727
    5. '{' → logprob: -9.664697647094727
    6. '=

' → logprob: -10.289697647094727
    7. '={},' → logprob: -10.539697647094727
    8. '=self' → logprob: -10.664697647094727
    9. '=
' → logprob: -11.164697647094727
    10. ')' → logprob: -11.414697647094727

Token 92: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010735770774772391
    2. '{' → logprob: -9.500107765197754
    3. ' self' → logprob: -10.500107765197754
    4. 's' → logprob: -13.375107765197754
    5. 'elf' → logprob: -14.500107765197754
    6. ' ' → logprob: -14.750107765197754
    7. 'sel' → logprob: -14.875107765197754
    8. 'f' → logprob: -15.250107765197754
    9. '{}' → logprob: -15.250107765197754
    10. 'se' → logprob: -15.625107765197754

Token 93: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.00015395533409900963
    2. '.' → logprob: -9.125153541564941
    3. 'width' → logprob: -10.750153541564941
    4. 'idth' → logprob: -11.250153541564941
    5. '.height' → logprob: -12.125153541564941
    6. '.w' → logprob: -12.375153541564941
    7. '.block' → logprob: -16.250154495239258
    8. '.length' → logprob: -16.375154495239258
    9. '	width' → logprob: -16.375154495239258
    10. ' .' → logprob: -16.500154495239258

Token 94: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028040475444868207
    2. ' ,' → logprob: -8.375280380249023
    3. ')' → logprob: -10.500280380249023
    4. '",' → logprob: -11.625280380249023
    5. ',
' → logprob: -12.000280380249023
    6. '),' → logprob: -13.500280380249023
    7. '<|end|>' → logprob: -13.750280380249023
    8. '}' → logprob: -13.875280380249023
    9. '")' → logprob: -14.125280380249023
    10. '},' → logprob: -14.500280380249023

Token 95: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.25346073508262634
    2. 'h' → logprob: -1.5034607648849487
    3. ' f' → logprob: -6.628460884094238
    4. 'f' → logprob: -8.503460884094238
    5. ' 
' → logprob: -13.503460884094238
    6. ' ' → logprob: -13.878460884094238
    7. ' ' → logprob: -14.128460884094238
    8. ',' → logprob: -14.253460884094238
    9. '     ' → logprob: -15.003460884094238
    10. ' ,' → logprob: -15.378460884094238

Token 96: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.3148649334907532
    2. '{' → logprob: -1.3148648738861084
    3. '=' → logprob: -7.1898651123046875
    4. '=self' → logprob: -7.4398651123046875
    5. 'self' → logprob: -8.314865112304688
    6. '{i' → logprob: -12.689865112304688
    7. ')' → logprob: -12.814865112304688
    8. ']={' → logprob: -13.064865112304688
    9. 'f' → logprob: -13.689865112304688
    10. '){' → logprob: -14.314865112304688

Token 97: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3544423381972592e-05
    2. ' self' → logprob: -11.50001335144043
    3. '{' → logprob: -12.75001335144043
    4. '   ' → logprob: -15.50001335144043
    5. '       ' → logprob: -16.00001335144043
    6. ' ' → logprob: -17.00001335144043
    7. 's' → logprob: -17.62501335144043
    8. 'elf' → logprob: -17.62501335144043
    9. 'f' → logprob: -17.87501335144043
    10. 'se' → logprob: -18.12501335144043

Token 98: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.00038920470979064703
    2. 'height' → logprob: -7.875389099121094
    3. '.' → logprob: -11.875389099121094
    4. '.he' → logprob: -13.875389099121094
    5. '	height' → logprob: -15.000389099121094
    6. '.width' → logprob: -15.625389099121094
    7. ')' → logprob: -16.000389099121094
    8. ' height' → logprob: -16.125389099121094
    9. ').' → logprob: -16.250389099121094
    10. '}.' → logprob: -16.375389099121094

Token 99: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.0536883615423e-05
    2. ')"' → logprob: -10.125080108642578
    3. '}' → logprob: -10.625080108642578
    4. ')">' → logprob: -12.250080108642578
    5. ')}' → logprob: -12.500080108642578
    6. '")' → logprob: -12.875080108642578
    7. '})' → logprob: -13.125080108642578
    8. ' )' → logprob: -13.500080108642578
    9. ')")' → logprob: -14.250080108642578
    10. ')`' → logprob: -14.375080108642578

Token 100: '"


' (ID: 36470)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0015580703038722277
    2. ')' → logprob: -7.501558303833008
    3. '")' → logprob: -8.501558303833008
    4. '<|end|>' → logprob: -8.626558303833008
    5. '```' → logprob: -8.751558303833008
    6. '"
' → logprob: -8.751558303833008
    7. '"""' → logprob: -8.876558303833008
    8. '`' → logprob: -10.001558303833008
    9. ''' → logprob: -10.501558303833008
    10. '"}' → logprob: -10.626558303833008

Token 101: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18955770134925842
    2. '   ' → logprob: -1.939557671546936
    3. 'def' → logprob: -4.8145575523376465
    4. ' 
' → logprob: -5.1895575523376465
    5. '    
' → logprob: -5.3145575523376465
    6. 'd' → logprob: -5.6895575523376465
    7. 'class' → logprob: -6.8145575523376465
    8. '

' → logprob: -6.9395575523376465
    9. '```' → logprob: -7.0645575523376465
    10. ' ' → logprob: -7.1895575523376465

Token 102: ' Tower' (ID: 37994)
  Prédit: ' Stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stack' → logprob: -0.9203842282295227
    2. ' Block' → logprob: -1.045384168624878
    3. ' Tower' → logprob: -1.420384168624878
    4. ' Box' → logprob: -5.170384407043457
    5. ' Solution' → logprob: -7.295384407043457
    6. 'Stack' → logprob: -7.670384407043457
    7. ' St' → logprob: -7.795384407043457
    8. ' Pyramid' → logprob: -8.170384407043457
    9. ' Wall' → logprob: -8.545384407043457
    10. 'Tower' → logprob: -8.670384407043457

Token 103: 'Builder' (ID: 4542)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011903452686965466
    2. ':
' → logprob: -6.876190185546875
    3. 'Builder' → logprob: -9.001190185546875
    4. '<|end|>' → logprob: -11.126190185546875
    5. '):' → logprob: -12.376190185546875
    6. '():' → logprob: -12.626190185546875
    7. 'Stack' → logprob: -13.001190185546875
    8. '.Builder' → logprob: -13.126190185546875
    9. '(Stack' → logprob: -13.501190185546875
    10. '(' → logprob: -13.751190185546875

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001652796781854704
    2. ':
' → logprob: -9.250164985656738
    3. ' :' → logprob: -10.750164985656738
    4. '<|end|>' → logprob: -10.750164985656738
    5. '):' → logprob: -11.125164985656738
    6. ':**' → logprob: -12.875164985656738
    7. '(' → logprob: -12.875164985656738
    8. '():' → logprob: -13.000164985656738
    9. '>:' → logprob: -13.625164985656738
    10. '   ' → logprob: -14.625164985656738

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13450518250465393
    2. ' def' → logprob: -2.134505271911621
    3. 'def' → logprob: -6.009505271911621
    4. '    
' → logprob: -6.634505271911621
    5. ' 
' → logprob: -6.759505271911621
    6. '(' → logprob: -7.134505271911621
    7. ' ' → logprob: -7.634505271911621
    8. '    ' → logprob: -7.884505271911621
    9. ':' → logprob: -8.259505271911621
    10. '	def' → logprob: -9.384505271911621

Token 106: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.011431281454861164
    2. 'def' (adapté à ' def') → logprob: -4.5114312171936035
    3. '   ' → logprob: -7.8864312171936035
    4. ' ' → logprob: -12.636431694030762
    5. '    ' → logprob: -13.136431694030762
    6. '  ' → logprob: -14.511431694030762
    7. '	def' → logprob: -14.886431694030762
    8. ' de' → logprob: -15.136431694030762
    9. '```' → logprob: -15.636431694030762
    10. 'de' → logprob: -15.636431694030762

Token 107: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.09404714405536652
    2. ' ' → logprob: -2.5940470695495605
    3. ' init' → logprob: -5.0940470695495605
    4. ' _' → logprob: -5.4690470695495605
    5. '_init' → logprob: -6.3440470695495605
    6. 'init' → logprob: -6.3440470695495605
    7. ' ' → logprob: -7.9690470695495605
    8. '__' → logprob: -7.9690470695495605
    9. '_' → logprob: -8.469047546386719
    10. ' ```' → logprob: -9.094047546386719

Token 108: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.771655115589965e-05
    2. 'i' → logprob: -12.125018119812012
    3. 'in' → logprob: -12.250018119812012
    4. 'ini' → logprob: -12.625018119812012
    5. ' init' → logprob: -13.750018119812012
    6. '```' → logprob: -13.875018119812012
    7. 'int' → logprob: -14.875018119812012
    8. 'innit' → logprob: -15.000018119812012
    9. '   ' → logprob: -15.625018119812012
    10. '_init' → logprob: -15.750018119812012

Token 109: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00245246896520257
    2. '__' → logprob: -6.127452373504639
    3. '__(
' → logprob: -9.002452850341797
    4. '(self' → logprob: -9.252452850341797
    5. '(' → logprob: -10.377452850341797
    6. '_(' → logprob: -12.002452850341797
    7. '__((' → logprob: -12.252452850341797
    8. '_' → logprob: -12.752452850341797
    9. ' (' → logprob: -14.002452850341797
    10. '__('' → logprob: -14.877452850341797

Token 110: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008329743286594748
    2. ' self' → logprob: -7.125833034515381
    3. ')' → logprob: -10.875832557678223
    4. '
' → logprob: -12.250832557678223
    5. '   ' → logprob: -13.125832557678223
    6. '):
' → logprob: -13.875832557678223
    7. ' ' → logprob: -14.375832557678223
    8. '0' → logprob: -15.500832557678223
    9. '       ' → logprob: -15.500832557678223
    10. '  ' → logprob: -16.12583351135254

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11326435953378677
    2. ' ,' → logprob: -2.238264322280884
    3. 'self' → logprob: -7.988264560699463
    4. ')' → logprob: -9.613264083862305
    5. ',self' → logprob: -11.863264083862305
    6. ' ' → logprob: -11.988264083862305
    7. ' )' → logprob: -12.113264083862305
    8. '<|end|>' → logprob: -12.863264083862305
    9. ' self' → logprob: -13.238264083862305
    10. '(self' → logprob: -13.363264083862305

Token 112: ' blocks' (ID: 18125)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3177168071269989
    2. ' self' → logprob: -1.9427168369293213
    3. ' blocks' → logprob: -2.4427168369293213
    4. 'blocks' → logprob: -3.1927168369293213
    5. '):
' → logprob: -8.192716598510742
    6. '       ' → logprob: -8.692716598510742
    7. '   ' → logprob: -8.942716598510742
    8. ')' → logprob: -9.192716598510742
    9. '_blocks' → logprob: -9.442716598510742
    10. '	self' → logprob: -10.692716598510742

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11524809896945953
    2. ':' → logprob: -2.240248203277588
    3. ')' → logprob: -6.865248203277588
    4. ',' → logprob: -7.365248203277588
    5. ' ):' → logprob: -8.24024772644043
    6. '):
' → logprob: -8.24024772644043
    7. ':list' → logprob: -9.11524772644043
    8. '_list' → logprob: -10.49024772644043
    9. ' :' → logprob: -11.49024772644043
    10. '[]):' → logprob: -11.61524772644043

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01009201817214489
    2. ':' → logprob: -4.760091781616211
    3. '   ' → logprob: -7.385091781616211
    4. ',' → logprob: -7.885091781616211
    5. '<|end|>' → logprob: -8.635091781616211
    6. 'self' → logprob: -9.635091781616211
    7. ')' → logprob: -9.635091781616211
    8. ' self' → logprob: -10.385091781616211
    9. '):' → logprob: -10.510091781616211
    10. '      ' → logprob: -10.635091781616211

Token 115: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.48692548274993896
    2. ' self' → logprob: -0.986925482749939
    3. '       ' → logprob: -4.3619256019592285
    4. ' ' → logprob: -12.36192512512207
    5. '   ' → logprob: -12.36192512512207
    6. '	self' → logprob: -12.61192512512207
    7. ' ' → logprob: -16.11192512512207
    8. '(self' → logprob: -16.23692512512207
    9. '      ' → logprob: -16.73692512512207
    10. '     ' → logprob: -17.11192512512207

Token 116: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -0.015036135911941528
    2. '.' → logprob: -4.390036106109619
    3. ' .' → logprob: -6.015036106109619
    4. ' =' → logprob: -10.390036582946777
    5. '   ' → logprob: -10.640036582946777
    6. ' ' → logprob: -11.390036582946777
    7. '_blocks' → logprob: -12.890036582946777
    8. '=' → logprob: -13.265036582946777
    9. '.block' → logprob: -13.265036582946777
    10. '.b' → logprob: -13.890036582946777

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269376575946808
    2. '=' → logprob: -2.1269376277923584
    3. ' ' → logprob: -12.751937866210938
    4. '   ' → logprob: -13.126937866210938
    5. ')' → logprob: -13.501937866210938
    6. '.' → logprob: -13.626937866210938
    7. '_' → logprob: -14.126937866210938
    8. '    ' → logprob: -14.751937866210938
    9. '=[]' → logprob: -16.001937866210938
    10. '  ' → logprob: -16.126937866210938

Token 118: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.2811611294746399
    2. 'blocks' → logprob: -1.4061610698699951
    3. '[]' → logprob: -12.406161308288574
    4. 'block' → logprob: -13.156161308288574
    5. '.blocks' → logprob: -13.656161308288574
    6. ' list' → logprob: -14.281161308288574
    7. 'list' → logprob: -14.281161308288574
    8. ' []' → logprob: -14.531161308288574
    9. ' ' → logprob: -14.531161308288574
    10. '   ' → logprob: -14.906161308288574

Token 119: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25259602069854736
    2. '<|end|>' → logprob: -1.6275960206985474
    3. '       ' → logprob: -4.377595901489258
    4. '    
' → logprob: -5.252595901489258
    5. '   ' → logprob: -5.627595901489258
    6. ' ' → logprob: -6.502595901489258
    7. ' 
' → logprob: -7.002595901489258
    8. '        
' → logprob: -7.002595901489258
    9. '  
' → logprob: -7.377595901489258
    10. '<|end|>' → logprob: -7.377595901489258

Token 121: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.020529165863990784
    2. '       ' → logprob: -4.270529270172119
    3. ' self' → logprob: -5.520529270172119
    4. 'def' → logprob: -6.645529270172119
    5. '   ' → logprob: -7.270529270172119
    6. '#' → logprob: -8.770528793334961
    7. '
' → logprob: -10.270528793334961
    8. ' ' → logprob: -10.395528793334961
    9. 'pass' → logprob: -10.520528793334961
    10. 's' → logprob: -11.270528793334961

Token 122: '.memo' (ID: 161018)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9451646208763123
    2. '.best' → logprob: -1.695164680480957
    3. '.max' → logprob: -1.695164680480957
    4. '._' → logprob: -2.320164680480957
    5. '.sorted' → logprob: -3.320164680480957
    6. '.blocks' → logprob: -3.820164680480957
    7. '.height' → logprob: -3.945164680480957
    8. ' .' → logprob: -4.195164680480957
    9. '.maximum' → logprob: -4.195164680480957
    10. '.stack' → logprob: -4.695164680480957

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520180344581604
    2. '=' → logprob: -1.5020179748535156
    3. ' ' → logprob: -10.127017974853516
    4. '={}' → logprob: -10.752017974853516
    5. '_' → logprob: -11.502017974853516
    6. ' =
' → logprob: -12.752017974853516
    7. ' ={' → logprob: -13.002017974853516
    8. '[' → logprob: -13.377017974853516
    9. '   ' → logprob: -13.877017974853516
    10. '=[]' → logprob: -13.877017974853516

Token 124: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.07889363914728165
    2. ' {}' → logprob: -2.5788936614990234
    3. '{}
' → logprob: -13.703893661499023
    4. ' ' → logprob: -14.328893661499023
    5. '={}' → logprob: -14.703893661499023
    6. ' {}
' → logprob: -14.953893661499023
    7. '{' → logprob: -15.078893661499023
    8. '[]' → logprob: -15.203893661499023
    9. 'dict' → logprob: -15.328893661499023
    10. ' []' → logprob: -16.078893661499023

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1543552428483963
    2. '
' → logprob: -2.40435528755188
    3. 'def' → logprob: -3.65435528755188
    4. '    
' → logprob: -4.279355049133301
    5. ' def' → logprob: -4.779355049133301
    6. '<|end|>' → logprob: -6.404355049133301
    7. ' 
' → logprob: -7.029355049133301
    8. ' ' → logprob: -7.154355049133301
    9. '  
' → logprob: -7.654355049133301
    10. '	def' → logprob: -8.9043550491333

Token 126: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016468495596200228
    2. ' def' → logprob: -6.501646995544434
    3. '   ' → logprob: -8.876646995544434
    4. 'd' → logprob: -13.251646995544434
    5. ' ' → logprob: -13.501646995544434
    6. 'de' → logprob: -14.626646995544434
    7. ')' → logprob: -14.626646995544434
    8. '
' → logprob: -14.876646995544434
    9. '    
' → logprob: -15.251646995544434
    10. '  ' → logprob: -16.001646041870117

Token 127: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.02818017639219761
    2. ' build' → logprob: -4.528180122375488
    3. 'max' → logprob: -4.903180122375488
    4. ' tallest' → logprob: -5.153180122375488
    5. ' best' → logprob: -7.403180122375488
    6. ' stack' → logprob: -7.403180122375488
    7. ' get' → logprob: -7.403180122375488
    8. ' find' → logprob: -7.653180122375488
    9. '_max' → logprob: -7.903180122375488
    10. ' longest' → logprob: -8.403180122375488

Token 128: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.018583573400974274
    2. '_stack' → logprob: -4.01858377456665
    3. '_t' → logprob: -8.643583297729492
    4. '_' → logprob: -9.018583297729492
    5. 'height' → logprob: -9.893583297729492
    6. 'Height' → logprob: -9.893583297729492
    7. ' height' → logprob: -11.268583297729492
    8. 'stack' → logprob: -11.893583297729492
    9. '_he' → logprob: -12.518583297729492
    10. ' stack' → logprob: -13.268583297729492

Token 129: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011146266013383865
    2. '(' → logprob: -4.511146068572998
    3. ' (' → logprob: -9.386146545410156
    4. '   ' → logprob: -12.261146545410156
    5. '(
' → logprob: -12.761146545410156
    6. '_(' → logprob: -12.761146545410156
    7. '(s' → logprob: -13.761146545410156
    8. '_' → logprob: -14.386146545410156
    9. '_t' → logprob: -14.761146545410156
    10. '_block' → logprob: -15.136146545410156

Token 130: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1381521373987198
    2. '):' → logprob: -2.5131521224975586
    3. 'self' → logprob: -3.3881521224975586
    4. '(self' → logprob: -5.513152122497559
    5. '   ' → logprob: -5.638152122497559
    6. '):
' → logprob: -6.263152122497559
    7. '       ' → logprob: -6.638152122497559
    8. ' ,' → logprob: -6.638152122497559
    9. ' self' → logprob: -7.138152122497559
    10. ' ):' → logprob: -7.638152122497559

Token 131: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20203612744808197
    2. '(self' → logprob: -1.7020361423492432
    3. '(
' → logprob: -7.452035903930664
    4. ':' → logprob: -11.202035903930664
    5. '(s' → logprob: -11.202035903930664
    6. '   ' → logprob: -12.327035903930664
    7. '():' → logprob: -13.077035903930664
    8. ' (' → logprob: -13.077035903930664
    9. 'self' → logprob: -13.452035903930664
    10. '(Self' → logprob: -13.452035903930664

Token 132: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1801294982433319
    2. 'int' → logprob: -1.8051295280456543
    3. '   ' → logprob: -8.680129051208496
    4. ' ' → logprob: -9.555129051208496
    5. '(int' → logprob: -9.555129051208496
    6. ' None' → logprob: -10.555129051208496
    7. ':int' → logprob: -11.680129051208496
    8. '    ' → logprob: -12.180129051208496
    9. ' ' → logprob: -12.305129051208496
    10. '       ' → logprob: -12.305129051208496

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05154713988304138
    2. '(self' → logprob: -3.051547050476074
    3. '(' → logprob: -6.801547050476074
    4. '):' → logprob: -7.426547050476074
    5. ':
' → logprob: -7.426547050476074
    6. '       ' → logprob: -7.676547050476074
    7. '   ' → logprob: -9.926547050476074
    8. ' :' → logprob: -9.926547050476074
    9. '():' → logprob: -9.926547050476074
    10. ':self' → logprob: -11.301547050476074

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017245612107217312
    2. '    ' → logprob: -8.251724243164062
    3. '        
' → logprob: -8.251724243164062
    4. '        ' → logprob: -8.501724243164062
    5. ':' → logprob: -8.501724243164062
    6. '   ' → logprob: -8.876724243164062
    7. '\' → logprob: -9.001724243164062
    8. '(' → logprob: -9.501724243164062
    9. '\n' → logprob: -9.501724243164062
    10. '#' → logprob: -9.501724243164062

Token 135: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4547967910766602
    2. ' if' → logprob: -1.4547967910766602
    3. 'def' → logprob: -1.4547967910766602
    4. 'if' → logprob: -1.9547967910766602
    5. 'max' → logprob: -2.45479679107666
    6. ' max' → logprob: -3.20479679107666
    7. ' def' → logprob: -4.07979679107666
    8. 'return' → logprob: -4.82979679107666
    9. 'self' → logprob: -6.07979679107666
    10. ' return' → logprob: -6.32979679107666

Token 136: ' Pre' (ID: 4659)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5634209513664246
    2. 'def' → logprob: -1.4384210109710693
    3. ' max' → logprob: -2.4384210109710693
    4. ' if' → logprob: -2.5634210109710693
    5. 'if' → logprob: -4.43842077255249
    6. 'max' → logprob: -4.56342077255249
    7. ' return' → logprob: -5.81342077255249
    8. 'return' → logprob: -6.68842077255249
    9. ' best' → logprob: -7.43842077255249
    10. '#' → logprob: -7.93842077255249

Token 137: 'processing' (ID: 41376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8153752684593201
    2. 'dict' → logprob: -1.4403753280639648
    3. 'pare' → logprob: -2.065375328063965
    4. '   ' → logprob: -2.815375328063965
    5. 'process' → logprob: -3.565375328063965
    6. 'def' → logprob: -3.940375328063965
    7. '        ' → logprob: -4.315375328063965
    8. 'max' → logprob: -4.315375328063965
    9. 'd' → logprob: -4.440375328063965
    10. 'compute' → logprob: -4.565375328063965

Token 138: ' blocks' (ID: 18125)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5883140563964844
    2. '<|end|>' → logprob: -1.5883140563964844
    3. '       ' → logprob: -1.8383140563964844
    4. '()' → logprob: -2.4633140563964844
    5. '(self' → logprob: -2.5883140563964844
    6. 'def' → logprob: -2.8383140563964844
    7. 'blocks' → logprob: -3.0883140563964844
    8. 'self' → logprob: -3.3383140563964844
    9. '<|end|>' → logprob: -3.5883140563964844
    10. '_blocks' → logprob: -3.9633140563964844

Token 139: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5201747417449951
    2. '<|end|>' → logprob: -2.270174741744995
    3. ' =' → logprob: -2.770174741744995
    4. ':' → logprob: -2.770174741744995
    5. ',' → logprob: -3.270174741744995
    6. '.sort' → logprob: -3.520174741744995
    7. '<|end|>' → logprob: -3.770174741744995
    8. '[' → logprob: -4.020174980163574
    9. '   ' → logprob: -4.395174980163574
    10. 'def' → logprob: -4.770174980163574

Token 140: ' as' (ID: 472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2751637697219849
    2. ' sorted' → logprob: -1.5251637697219849
    3. 'sorted' → logprob: -1.7751637697219849
    4. '#' → logprob: -2.4001636505126953
    5. ' self' → logprob: -2.5251636505126953
    6. ' for' → logprob: -3.1501636505126953
    7. ' blocks' → logprob: -3.4001636505126953
    8. 'for' → logprob: -3.4001636505126953
    9. '       ' → logprob: -3.7751636505126953
    10. 'blocks' → logprob: -4.025163650512695

Token 141: ' length' (ID: 5517)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.3231340646743774
    2. 'self' → logprob: -1.5731340646743774
    3. ' all' → logprob: -1.8231340646743774
    4. ' the' → logprob: -2.323133945465088
    5. 'sum' → logprob: -3.073133945465088
    6. 'length' → logprob: -3.198133945465088
    7. ' length' → logprob: -3.323133945465088
    8. 'sorted' → logprob: -3.323133945465088
    9. ' blocks' → logprob: -3.573133945465088
    10. 's' → logprob: -4.073133945465088

Token 142: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10703885555267334
    2. ' =' → logprob: -2.732038974761963
    3. ',' → logprob: -3.857038974761963
    4. ' ==' → logprob: -6.107038974761963
    5. '==' → logprob: -6.232038974761963
    6. ' and' → logprob: -6.357038974761963
    7. ' is' → logprob: -6.357038974761963
    8. '    ' → logprob: -6.982038974761963
    9. '   ' → logprob: -6.982038974761963
    10. '=self' → logprob: -6.982038974761963

Token 143: ' always' (ID: 3324)
  Prédit: ' always'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' always' → logprob: -0.5104812383651733
    2. 'always' → logprob: -1.3854812383651733
    3. '1' → logprob: -2.010481357574463
    4. ' fixed' → logprob: -4.760481357574463
    5. ' ' → logprob: -5.635481357574463
    6. 'fixed' → logprob: -6.385481357574463
    7. '   ' → logprob: -7.010481357574463
    8. ' constant' → logprob: -7.510481357574463
    9. '    ' → logprob: -9.260480880737305
    10. 'constant' → logprob: -9.635480880737305

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023274481296539307
    2. ' ' → logprob: -3.7732744216918945
    3. '   ' → logprob: -10.523274421691895
    4. '       ' → logprob: -14.148274421691895
    5. '=' → logprob: -14.898274421691895
    6. '```' → logprob: -15.148274421691895
    7. '0' → logprob: -15.648274421691895
    8. '  ' → logprob: -15.898274421691895
    9. '    ' → logprob: -16.02327537536621
    10. ' ' → logprob: -16.71077537536621

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -16.0000057220459
    4. '   ' → logprob: -16.3750057220459
    5. '0' → logprob: -18.3750057220459
    6. '`' → logprob: -18.3750057220459
    7. '=' → logprob: -19.2500057220459
    8. 'fixed' → logprob: -19.5000057220459
    9. '       ' → logprob: -19.8750057220459
    10. 'always' → logprob: -20.1250057220459

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003792946692556143
    2. ',
' → logprob: -6.503792762756348
    3. '       ' → logprob: -6.628792762756348
    4. '<|end|>' → logprob: -7.503792762756348
    5. '<|end|>' → logprob: -9.128792762756348
    6. '
' → logprob: -9.753792762756348
    7. ' ,' → logprob: -9.753792762756348
    8. '        
' → logprob: -10.003792762756348
    9. '#' → logprob: -10.003792762756348
    10. ':' → logprob: -11.003792762756348

Token 147: ' order' (ID: 2569)
  Prédit: ' sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.6623214483261108
    2. 'sort' → logprob: -0.7873214483261108
    3. 'self' → logprob: -4.9123215675354
    4. 'we' → logprob: -5.1623215675354
    5. '       ' → logprob: -5.5373215675354
    6. '#' → logprob: -5.5373215675354
    7. ' self' → logprob: -5.9123215675354
    8. ' we' → logprob: -5.9123215675354
    9. 'sorted' → logprob: -6.9123215675354
    10. ' sorted' → logprob: -7.9123215675354

Token 148: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38013988733291626
    2. '_blocks' → logprob: -2.3801398277282715
    3. ' =' → logprob: -2.8801398277282715
    4. 'ed' → logprob: -3.6301398277282715
    5. '=self' → logprob: -3.8801398277282715
    6. ' by' → logprob: -4.0051398277282715
    7. ' the' → logprob: -4.0051398277282715
    8. 'self' → logprob: -4.0051398277282715
    9. 'blocks' → logprob: -4.0051398277282715
    10. ' blocks' → logprob: -4.3801398277282715

Token 149: ' width' (ID: 4345)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.3561594784259796
    2. ' height' → logprob: -1.4811594486236572
    3. ' -' → logprob: -3.2311594486236572
    4. '-' → logprob: -3.9811594486236572
    5. 'width' → logprob: -4.981159687042236
    6. ' width' → logprob: -6.106159687042236
    7. '-height' → logprob: -6.106159687042236
    8. ' base' → logprob: -7.606159687042236
    9. '   ' → logprob: -7.856159687042236
    10. ' self' → logprob: -8.356159210205078

Token 150: ' descending' (ID: 89489)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1421890258789062
    2. ' =' → logprob: -1.2671890258789062
    3. '=' → logprob: -1.6421890258789062
    4. '       ' → logprob: -1.8921890258789062
    5. 'sorted' → logprob: -4.017189025878906
    6. '=self' → logprob: -4.267189025878906
    7. 'self' → logprob: -5.017189025878906
    8. ' and' → logprob: -5.392189025878906
    9. '_sorted' → logprob: -6.017189025878906
    10. ' sorted' → logprob: -6.267189025878906

Token 151: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12947212159633636
    2. '       ' → logprob: -2.254472017288208
    3. ')' → logprob: -5.254472255706787
    4. ',
' → logprob: -5.879472255706787
    5. 'sorted' → logprob: -6.504472255706787
    6. '()' → logprob: -6.879472255706787
    7. '(sorted' → logprob: -7.129472255706787
    8. '
' → logprob: -7.129472255706787
    9. '        
' → logprob: -7.504472255706787
    10. 'self' → logprob: -7.629472255706787

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009602610021829605
    2. ',' → logprob: -4.7596025466918945
    3. '        
' → logprob: -8.259602546691895
    4. ':' → logprob: -8.384602546691895
    5. '
' → logprob: -9.259602546691895
    6. '<|end|>' → logprob: -9.384602546691895
    7. '   ' → logprob: -9.634602546691895
    8. ')' → logprob: -10.009602546691895
    9. '\n' → logprob: -10.259602546691895
    10. '.' → logprob: -11.134602546691895

Token 153: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5316198468208313
    2. 'sorted' → logprob: -2.1566197872161865
    3. '       ' → logprob: -2.2816197872161865
    4. ' self' → logprob: -2.4066197872161865
    5. 'blocks' → logprob: -2.5316197872161865
    6. ' sorted' → logprob: -4.281620025634766
    7. ' blocks' → logprob: -4.531620025634766
    8. 'block' → logprob: -9.656620025634766
    9. '   ' → logprob: -9.906620025634766
    10. 'return' → logprob: -10.156620025634766

Token 154: ' to' (ID: 316)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.2995448708534241
    2. ' sorted' → logprob: -2.5495448112487793
    3. 'blocks' → logprob: -2.5495448112487793
    4. 'self' → logprob: -2.7995448112487793
    5. ' blocks' → logprob: -3.9245448112487793
    6. '       ' → logprob: -4.174544811248779
    7. ' self' → logprob: -5.174544811248779
    8. '   ' → logprob: -7.424544811248779
    9. 'for' → logprob: -9.424545288085938
    10. 'block' → logprob: -10.299545288085938

Token 155: ' try' (ID: 2075)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2228458672761917
    2. 'self' → logprob: -1.9728459119796753
    3. ' maximize' → logprob: -4.472846031188965
    4. ' ensure' → logprob: -4.847846031188965
    5. ' sorted' → logprob: -4.847846031188965
    6. 'maximize' → logprob: -5.222846031188965
    7. ' allow' → logprob: -5.347846031188965
    8. 'sorted' → logprob: -5.347846031188965
    9. ' def' → logprob: -6.097846031188965
    10. ' optimize' → logprob: -6.222846031188965

Token 156: ' put' (ID: 3006)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3768220841884613
    2. ':' → logprob: -1.3768221139907837
    3. 'to' → logprob: -3.501821994781494
    4. ' all' → logprob: -3.876821994781494
    5. ':
' → logprob: -5.626821994781494
    6. ' placing' → logprob: -6.501821994781494
    7. 'all' → logprob: -7.001821994781494
    8. ' blocks' → logprob: -7.001821994781494
    9. 'placing' → logprob: -7.626821994781494
    10. '   ' → logprob: -8.001822471618652

Token 157: ' bigger' (ID: 17791)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.5784243941307068
    2. 'ting' → logprob: -1.2034244537353516
    3. ' the' → logprob: -3.2034244537353516
    4. ' larger' → logprob: -3.8284244537353516
    5. '   ' → logprob: -4.203424453735352
    6. ' block' → logprob: -4.453424453735352
    7. ' on' → logprob: -5.078424453735352
    8. ' a' → logprob: -5.328424453735352
    9. '       ' → logprob: -5.703424453735352
    10. 't' → logprob: -5.828424453735352

Token 158: ' width' (ID: 4345)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.021975358948111534
    2. ' widths' → logprob: -4.646975517272949
    3. ' ones' → logprob: -5.271975517272949
    4. '_blocks' → logprob: -6.021975517272949
    5. 'blocks' → logprob: -6.146975517272949
    6. ' width' → logprob: -7.521975517272949
    7. ' ' → logprob: -7.646975517272949
    8. ' and' → logprob: -8.52197551727295
    9. ' block' → logprob: -8.89697551727295
    10. '<|end|>' → logprob: -9.02197551727295

Token 159: ' blocks' (ID: 18125)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.8743296265602112
    2. ' blocks' → logprob: -0.8743296265602112
    3. ' on' → logprob: -2.3743295669555664
    4. ' under' → logprob: -3.7493295669555664
    5. ' before' → logprob: -3.8743295669555664
    6. ' below' → logprob: -4.624329566955566
    7. '   ' → logprob: -4.874329566955566
    8. 'first' → logprob: -6.374329566955566
    9. ' ones' → logprob: -6.749329566955566
    10. 'blocks' → logprob: -6.749329566955566

Token 160: ' at' (ID: 540)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.2767694592475891
    2. ' on' → logprob: -2.0267693996429443
    3. ' under' → logprob: -3.0267693996429443
    4. ' below' → logprob: -3.2767693996429443
    5. ' before' → logprob: -4.526769638061523
    6. 'first' → logprob: -5.901769638061523
    7. '   ' → logprob: -5.901769638061523
    8. 'under' → logprob: -6.776769638061523
    9. 'on' → logprob: -6.901769638061523
    10. '    ' → logprob: -7.026769638061523

Token 161: ' bottom' (ID: 8725)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11635007709264755
    2. 'the' → logprob: -2.6163501739501953
    3. 'top' → logprob: -4.241350173950195
    4. ' top' → logprob: -4.366350173950195
    5. 'front' → logprob: -5.741350173950195
    6. ' front' → logprob: -5.741350173950195
    7. '0' → logprob: -6.741350173950195
    8. ' ' → logprob: -6.991350173950195
    9. ' first' → logprob: -8.116350173950195
    10. ' bottom' → logprob: -8.491350173950195

Token 162: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028329208493232727
    2. ',' → logprob: -4.028329372406006
    3. '.' → logprob: -5.653329372406006
    4. '
' → logprob: -5.778329372406006
    5. '        
' → logprob: -7.403329372406006
    6. '   ' → logprob: -7.903329372406006
    7. 'sorted' → logprob: -7.903329372406006
    8. ' and' → logprob: -8.403328895568848
    9. 'blocks' → logprob: -8.653328895568848
    10. ' sorted' → logprob: -9.028328895568848

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036773940082639456
    2. ',' → logprob: -6.2536773681640625
    3. '        
' → logprob: -7.1286773681640625
    4. '<|end|>' → logprob: -7.8786773681640625
    5. '
' → logprob: -8.253677368164062
    6. 'self' → logprob: -10.128677368164062
    7. ':' → logprob: -10.253677368164062
    8. '   ' → logprob: -10.378677368164062
    9. '.' → logprob: -10.628677368164062
    10. '<|end|>' → logprob: -10.878677368164062

Token 164: ' sorted' (ID: 20099)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.567826509475708
    2. 'self' → logprob: -0.942826509475708
    3. ' self' → logprob: -3.317826509475708
    4. 'sorted' (adapté à ' sorted') → logprob: -5.442826271057129
    5. ' sorted' → logprob: -6.567826271057129
    6. 'blocks' → logprob: -6.692826271057129
    7. ' blocks' → logprob: -8.692826271057129
    8. '
' → logprob: -9.067826271057129
    9. '   ' → logprob: -9.442826271057129
    10. 'return' → logprob: -10.067826271057129

Token 165: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.03427128493785858
    2. '(self' → logprob: -3.409271240234375
    3. '(' → logprob: -7.784271240234375
    4. '_' → logprob: -8.784271240234375
    5. '(
' → logprob: -11.284271240234375
    6. '_block' → logprob: -11.659271240234375
    7. ' =' → logprob: -11.909271240234375
    8. 'self' → logprob: -12.159271240234375
    9. '_b' → logprob: -12.409271240234375
    10. '=self' → logprob: -12.909271240234375

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014143168926239
    2. ' =' → logprob: -1.7014143466949463
    3. ',' → logprob: -15.451414108276367
    4. '   ' → logprob: -15.576414108276367
    5. ')' → logprob: -15.701414108276367
    6. '=self' → logprob: -15.701414108276367
    7. '(' → logprob: -16.326414108276367
    8. '＝' → logprob: -16.451414108276367
    9. '       ' → logprob: -16.826414108276367
    10. ' =
' → logprob: -16.826414108276367

Token 167: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.029751762747764587
    2. 'sorted' → logprob: -3.529751777648926
    3. '   ' → logprob: -13.779751777648926
    4. '(sorted' → logprob: -16.02975082397461
    5. ' ' → logprob: -16.52975082397461
    6. '.sorted' → logprob: -17.27975082397461
    7. '       ' → logprob: -17.65475082397461
    8. '    ' → logprob: -19.52975082397461
    9. '  ' → logprob: -19.90475082397461
    10. '[' → logprob: -20.02975082397461

Token 168: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006761906202882528
    2. '(' → logprob: -5.0067620277404785
    3. '(
' → logprob: -10.00676155090332
    4. 'self' → logprob: -14.13176155090332
    5. '(

' → logprob: -14.88176155090332
    6. '((' → logprob: -15.13176155090332
    7. ' (' → logprob: -16.50676155090332
    8. '([' → logprob: -18.75676155090332
    9. '(block' → logprob: -18.75676155090332
    10. '[self' → logprob: -19.25676155090332

Token 169: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -5.347765181795694e-05
    2. '.' → logprob: -10.250053405761719
    3. ' .' → logprob: -11.125053405761719
    4. '.block' → logprob: -13.250053405761719
    5. '.b' → logprob: -14.375053405761719
    6. ').' → logprob: -14.750053405761719
    7. ',' → logprob: -16.00005340576172
    8. '.user' → logprob: -16.00005340576172
    9. '   ' → logprob: -16.50005340576172
    10. '.Block' → logprob: -16.75005340576172

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ' ,' → logprob: -12.000012397766113
    3. ',key' → logprob: -12.125012397766113
    4. '   ' → logprob: -16.125011444091797
    5. ',
' → logprob: -16.250011444091797
    6. ')' → logprob: -17.125011444091797
    7. 'key' → logprob: -18.000011444091797
    8. '),' → logprob: -18.375011444091797
    9. '(),' → logprob: -18.500011444091797
    10. '       ' → logprob: -19.375011444091797

Token 171: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.12698008120059967
    2. 'key' → logprob: -2.1269800662994385
    3. '   ' → logprob: -10.00197982788086
    4. 'lambda' → logprob: -12.62697982788086
    5. '       ' → logprob: -14.12697982788086
    6. ' lambda' → logprob: -14.12697982788086
    7. 'reverse' → logprob: -14.25197982788086
    8. '	key' → logprob: -15.37697982788086
    9. ' reverse' → logprob: -15.50197982788086
    10. '(key' → logprob: -15.50197982788086

Token 172: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -9.615255839889869e-05
    2. '=' → logprob: -9.250096321105957
    3. '=
' → logprob: -17.37509536743164
    4. 'lambda' → logprob: -19.12509536743164
    5. '=len' → logprob: -19.25009536743164
    6. '=

' → logprob: -19.62509536743164
    7. '(lambda' → logprob: -20.00009536743164
    8. '=_' → logprob: -20.00009536743164
    9. '=l' → logprob: -20.12509536743164
    10. ' =' → logprob: -20.12509536743164

Token 173: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2586398422718048
    2. ' block' → logprob: -1.5086398124694824
    3. ' x' → logprob: -5.258639812469482
    4. 'b' → logprob: -6.633639812469482
    5. 'block' → logprob: -9.00864028930664
    6. 'x' → logprob: -11.38364028930664
    7. ' ' → logprob: -11.63364028930664
    8. ' blk' → logprob: -11.88364028930664
    9. '(block' → logprob: -12.13364028930664
    10. ':block' → logprob: -12.50864028930664

Token 174: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022525664418935776
    2. ' b' → logprob: -4.272525787353516
    3. ':b' → logprob: -5.272525787353516
    4. 'b' → logprob: -5.772525787353516
    5. ' :' → logprob: -9.772525787353516
    6. '	b' → logprob: -11.772525787353516
    7. '.b' → logprob: -11.897525787353516
    8. ')b' → logprob: -12.272525787353516
    9. '=b' → logprob: -12.772525787353516
    10. ':block' → logprob: -13.522525787353516

Token 175: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6210634112358093
    2. ' b' → logprob: -0.8710634112358093
    3. ' -' → logprob: -3.246063470840454
    4. '-b' → logprob: -5.871063232421875
    5. '-' → logprob: -6.121063232421875
    6. ' (-' → logprob: -9.371063232421875
    7. '(-' → logprob: -9.621063232421875
    8. ' ' → logprob: -11.871063232421875
    9. '	b' → logprob: -13.121063232421875
    10. '   ' → logprob: -13.121063232421875

Token 176: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -3.47626737493556e-05
    2. '.' → logprob: -10.75003433227539
    3. 'idth' → logprob: -12.12503433227539
    4. '.w' → logprob: -12.37503433227539
    5. '.height' → logprob: -13.62503433227539
    6. 'width' → logprob: -13.62503433227539
    7. ' .' → logprob: -15.12503433227539
    8. '.b' → logprob: -15.50003433227539
    9. '	width' → logprob: -16.12503433227539
    10. '.id' → logprob: -16.37503433227539

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.941850526549388e-06
    2. ' ,' → logprob: -12.000007629394531
    3. '),' → logprob: -13.625007629394531
    4. ')' → logprob: -15.500007629394531
    5. '[::-' → logprob: -15.750007629394531
    6. ',
' → logprob: -16.25000762939453
    7. '[],' → logprob: -17.37500762939453
    8. '(),' → logprob: -17.75000762939453
    9. 'reverse' → logprob: -17.75000762939453
    10. ',re' → logprob: -18.75000762939453

Token 178: ' reverse' (ID: 18199)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3162650465965271
    2. ' -' → logprob: -1.3162651062011719
    3. '-re' → logprob: -6.691265106201172
    4. 'reverse' → logprob: -7.441265106201172
    5. ' True' → logprob: -8.066265106201172
    6. 'True' → logprob: -8.066265106201172
    7. ' reverse' → logprob: -8.316265106201172
    8. ' ' → logprob: -9.316265106201172
    9. '   ' → logprob: -9.316265106201172
    10. 'False' → logprob: -10.191265106201172

Token 179: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0021877337712794542
    2. '=' → logprob: -6.127187728881836
    3. ')' → logprob: -13.377187728881836
    4. '=False' → logprob: -14.127187728881836
    5. ')=' → logprob: -15.502187728881836
    6. '=
' → logprob: -16.502187728881836
    7. ' =' → logprob: -17.002187728881836
    8. 'True' → logprob: -17.752187728881836
    9. '=

' → logprob: -17.752187728881836
    10. '==' → logprob: -18.127187728881836

Token 180: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.3213025744771585e-05
    2. ')
' → logprob: -10.625033378601074
    3. '       ' → logprob: -12.250033378601074
    4. ' )' → logprob: -12.500033378601074
    5. ')

' → logprob: -15.750033378601074
    6. '   ' → logprob: -16.375032424926758
    7. '))' → logprob: -16.500032424926758
    8. ')`' → logprob: -17.250032424926758
    9. ')#' → logprob: -18.125032424926758
    10. '
' → logprob: -18.250032424926758

Token 181: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07446616888046265
    2. '       ' → logprob: -2.8244662284851074
    3. '<|end|>' → logprob: -4.699466228485107
    4. '        
' → logprob: -6.199466228485107
    5. ',' → logprob: -7.824466228485107
    6. ')' → logprob: -8.07446575164795
    7. '<|end|>' → logprob: -9.32446575164795
    8. '  
' → logprob: -9.44946575164795
    9. '

' → logprob: -9.57446575164795
    10. '    
' → logprob: -9.94946575164795

Token 182: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.048661403357982635
    2. '       ' → logprob: -3.798661470413208
    3. 'dp' → logprob: -4.298661231994629
    4. 'n' → logprob: -5.423661231994629
    5. ' def' → logprob: -6.173661231994629
    6. '
' → logprob: -6.423661231994629
    7. 'self' → logprob: -6.548661231994629
    8. '        
' → logprob: -7.173661231994629
    9. 'max' → logprob: -7.798661231994629
    10. '   ' → logprob: -8.173661231994629

Token 183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2521206736564636
    2. ' self' → logprob: -1.5021207332611084
    3. 'max' → logprob: -9.627120971679688
    4. ' max' → logprob: -9.627120971679688
    5. '0' → logprob: -10.002120971679688
    6. '   ' → logprob: -12.252120971679688
    7. '(self' → logprob: -13.127120971679688
    8. ' ' → logprob: -13.502120971679688
    9. '_self' → logprob: -13.627120971679688
    10. '1' → logprob: -13.752120971679688

Token 184: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00938096921890974
    2. '.build' → logprob: -5.38438081741333
    3. '.max' → logprob: -5.50938081741333
    4. '.t' → logprob: -8.884381294250488
    5. '.d' → logprob: -8.884381294250488
    6. '.helper' → logprob: -8.884381294250488
    7. '.dp' → logprob: -10.009381294250488
    8. '.__' → logprob: -10.384381294250488
    9. '.find' → logprob: -10.384381294250488
    10. '.solve' → logprob: -10.384381294250488

Token 185: 'compute' (ID: 54521)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.024031132459640503
    2. 'build' → logprob: -4.524031162261963
    3. 'dfs' → logprob: -4.774031162261963
    4. 'dp' → logprob: -6.774031162261963
    5. '_max' → logprob: -7.024031162261963
    6. 'height' → logprob: -7.399031162261963
    7. 'tower' → logprob: -7.524031162261963
    8. 'helper' → logprob: -8.024030685424805
    9. 'compute' → logprob: -8.774030685424805
    10. 'stack' → logprob: -8.899030685424805

Token 186: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.1630600243806839
    2. '_height' → logprob: -1.9130600690841675
    3. 'max' → logprob: -6.413060188293457
    4. '_t' → logprob: -7.788060188293457
    5. '(' → logprob: -7.913060188293457
    6. '_' → logprob: -9.538060188293457
    7. '_he' → logprob: -9.538060188293457
    8. '_stack' → logprob: -10.038060188293457
    9. '_next' → logprob: -10.038060188293457
    10. '_sorted' → logprob: -10.163060188293457

Token 187: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.0006733550690114498
    2. '_' → logprob: -7.375673294067383
    3. '_he' → logprob: -11.000673294067383
    4. '<|end|>' → logprob: -11.625673294067383
    5. 'height' → logprob: -12.000673294067383
    6. '_h' → logprob: -12.875673294067383
    7. '_depth' → logprob: -13.250673294067383
    8. ' _' → logprob: -13.250673294067383
    9. '_stack' → logprob: -14.000673294067383
    10. '```' → logprob: -14.375673294067383

Token 188: '(sorted' (ID: 92488)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12837404012680054
    2. '(sorted' → logprob: -2.1283740997314453
    3. '(len' → logprob: -8.128374099731445
    4. '((' → logprob: -8.128374099731445
    5. '()' → logprob: -8.378374099731445
    6. '_recursive' → logprob: -8.628374099731445
    7. 'sorted' → logprob: -9.378374099731445
    8. '(s' → logprob: -10.253374099731445
    9. '_sorted' → logprob: -10.253374099731445
    10. '(
' → logprob: -10.378374099731445

Token 189: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -4.4060561776859686e-05
    2. 'blocks' → logprob: -10.625043869018555
    3. '(block' → logprob: -11.750043869018555
    4. ')_' → logprob: -13.125043869018555
    5. '(sorted' → logprob: -13.625043869018555
    6. ')' → logprob: -13.750043869018555
    7. '_bloc' → logprob: -13.750043869018555
    8. '_' → logprob: -14.000043869018555
    9. 'locks' → logprob: -14.000043869018555
    10. '_block' → logprob: -14.500043869018555

Token 190: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002880337997339666
    2. ')' → logprob: -8.750288009643555
    3. '[' → logprob: -9.625288009643555
    4. ' ,' → logprob: -9.875288009643555
    5. ',)' → logprob: -11.625288009643555
    6. '0' → logprob: -14.000288009643555
    7. ',
' → logprob: -14.125288009643555
    8. ' )' → logprob: -14.375288009643555
    9. '   ' → logprob: -15.000288009643555
    10. ' ' → logprob: -15.625288009643555

Token 191: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18699675798416138
    2. '   ' → logprob: -1.9369966983795166
    3. '(
' → logprob: -4.936996936798096
    4. '[' → logprob: -5.186996936798096
    5. '_' → logprob: -5.686996936798096
    6. 'def' → logprob: -6.186996936798096
    7. '
' → logprob: -6.936996936798096
    8. '       ' → logprob: -7.186996936798096
    9. '```' → logprob: -7.186996936798096
    10. ' ' → logprob: -7.311996936798096

Token 192: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.34383150935173035
    2. '
' → logprob: -1.3438315391540527
    3. '   ' → logprob: -3.8438315391540527
    4. ' def' → logprob: -4.968831539154053
    5. '    
' → logprob: -7.218831539154053
    6. '

' → logprob: -7.843831539154053
    7. ' ' → logprob: -8.843831062316895
    8. '_def' → logprob: -9.468831062316895
    9. '        
' → logprob: -9.843831062316895
    10. '  
' → logprob: -9.968831062316895

Token 193: ' _' (ID: 1175)
  Prédit: '_compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_compute' → logprob: -0.5761556029319763
    2. ' _' → logprob: -0.8261556029319763
    3. '_' → logprob: -8.701155662536621
    4. '_build' → logprob: -10.951155662536621
    5. '_max' → logprob: -11.826155662536621
    6. '_com' → logprob: -11.951155662536621
    7. '_construct' → logprob: -12.951155662536621
    8. '_create' → logprob: -13.701155662536621
    9. '_continue' → logprob: -13.826155662536621
    10. '_write' → logprob: -13.951155662536621

Token 194: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.9862216504407115e-05
    2. '_compute' → logprob: -10.875020027160645
    3. ' compute' → logprob: -14.125020027160645
    4. '.compute' → logprob: -16.875019073486328
    5. 'computer' → logprob: -17.375019073486328
    6. 'calculate' → logprob: -17.625019073486328
    7. 'com' → logprob: -17.875019073486328
    8. 'build' → logprob: -18.375019073486328
    9. 'comput' → logprob: -18.625019073486328
    10. 'construct' → logprob: -19.000019073486328

Token 195: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -2.8444881536415778e-05
    2. 'max' → logprob: -10.500028610229492
    3. '_' → logprob: -14.250028610229492
    4. '_height' → logprob: -17.000028610229492
    5. '_next' → logprob: -17.625028610229492
    6. '_min' → logprob: -17.750028610229492
    7. ' max' → logprob: -17.750028610229492
    8. '_MAX' → logprob: -18.125028610229492
    9. ' _' → logprob: -18.750028610229492
    10. '(max' → logprob: -18.875028610229492

Token 196: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -4.60414821645827e-06
    2. '_he' → logprob: -13.250004768371582
    3. 'height' → logprob: -13.500004768371582
    4. ' _' → logprob: -14.000004768371582
    5. '_' → logprob: -15.250004768371582
    6. '   ' → logprob: -15.875004768371582
    7. '_depth' → logprob: -16.750003814697266
    8. '_HEIGHT' → logprob: -17.250003814697266
    9. ' height' → logprob: -17.750003814697266
    10. 'Height' → logprob: -18.000003814697266

Token 197: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005738823674619198
    2. '(' → logprob: -7.500574111938477
    3. ' (' → logprob: -10.875574111938477
    4. '   ' → logprob: -14.250574111938477
    5. 'self' → logprob: -14.375574111938477
    6. '(s' → logprob: -14.875574111938477
    7. '(
' → logprob: -15.750574111938477
    8. '       ' → logprob: -15.875574111938477
    9. '}(' → logprob: -16.375574111938477
    10. ' ' → logprob: -17.000574111938477

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055344607681035995
    2. ' ,' → logprob: -2.930344581604004
    3. 'self' → logprob: -9.180344581604004
    4. ',self' → logprob: -9.555344581604004
    5. '   ' → logprob: -9.805344581604004
    6. ',index' → logprob: -10.055344581604004
    7. '       ' → logprob: -10.305344581604004
    8. '(self' → logprob: -10.555344581604004
    9. ' ' → logprob: -10.805344581604004
    10. ')' → logprob: -10.805344581604004

Token 199: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.3218601644039154
    2. 'blocks' → logprob: -2.0718600749969482
    3. ' index' → logprob: -2.6968600749969482
    4. 'index' → logprob: -2.9468600749969482
    5. ' idx' → logprob: -3.8218600749969482
    6. 'idx' → logprob: -5.946860313415527
    7. ' current' → logprob: -6.696860313415527
    8. ' self' → logprob: -7.321860313415527
    9. ' i' → logprob: -7.571860313415527
    10. 'self' → logprob: -7.571860313415527

Token 200: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004002891946583986
    2. '):' → logprob: -5.629003047943115
    3. ' ,' → logprob: -8.129002571105957
    4. ',index' → logprob: -10.379002571105957
    5. '):
' → logprob: -10.879002571105957
    6. ':' → logprob: -11.004002571105957
    7. '   ' → logprob: -11.254002571105957
    8. ')' → logprob: -12.004002571105957
    9. 'self' → logprob: -12.129002571105957
    10. ',i' → logprob: -12.629002571105957

Token 201: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3889513611793518
    2. '       ' → logprob: -1.638951301574707
    3. '   ' → logprob: -2.513951301574707
    4. ' if' → logprob: -3.888951301574707
    5. '):' → logprob: -4.888951301574707
    6. 'if' → logprob: -5.763951301574707
    7. ',' → logprob: -5.888951301574707
    8. ' :' → logprob: -6.013951301574707
    9. ':
' → logprob: -6.263951301574707
    10. '    ' → logprob: -6.888951301574707

Token 202: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.039507173001766205
    2. ' if' → logprob: -3.2895071506500244
    3. '       ' → logprob: -6.5395073890686035
    4. 'max' → logprob: -11.289506912231445
    5. 'key' → logprob: -13.039506912231445
    6. '        
' → logprob: -13.414506912231445
    7. '#' → logprob: -14.289506912231445
    8. '   ' → logprob: -14.414506912231445
    9. ' key' → logprob: -14.664506912231445
    10. 'index' → logprob: -15.039506912231445

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15574395656585693
    2. '=' → logprob: -2.0307440757751465
    3. ':' → logprob: -5.4057440757751465
    4. ' ' → logprob: -6.1557440757751465
    5. ')' → logprob: -6.2807440757751465
    6. ' >' → logprob: -6.6557440757751465
    7. ',' → logprob: -7.1557440757751465
    8. '   ' → logprob: -7.4057440757751465
    9. '>' → logprob: -7.9057440757751465
    10. ' ==' → logprob: -8.030743598937988

Token 204: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04858794063329697
    2. ' len' → logprob: -3.0485880374908447
    3. '(len' → logprob: -15.298587799072266
    4. '[len' → logprob: -15.798587799072266
    5. '=len' → logprob: -15.923587799072266
    6. '	len' → logprob: -17.298587799072266
    7. ',len' → logprob: -19.548587799072266
    8. '<len' → logprob: -19.798587799072266
    9. '   ' → logprob: -20.298587799072266
    10. '       ' → logprob: -20.298587799072266

Token 205: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.011855345219373703
    2. '(' → logprob: -4.511855125427246
    3. 'blocks' → logprob: -7.136855125427246
    4. '(
' → logprob: -12.011855125427246
    5. ' blocks' → logprob: -12.511855125427246
    6. ' (' → logprob: -13.761855125427246
    7. 'block' → logprob: -15.511855125427246
    8. '(

' → logprob: -15.761855125427246
    9. '.blocks' → logprob: -15.886855125427246
    10. '(b' → logprob: -16.011856079101562

Token 206: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.583550642360933e-05
    2. ')' → logprob: -11.000036239624023
    3. ')s' → logprob: -11.375036239624023
    4. 'blocks' → logprob: -12.875036239624023
    5. '_blocks' → logprob: -13.125036239624023
    6. ' s' → logprob: -14.250036239624023
    7. 'locks' → logprob: -14.250036239624023
    8. ')
' → logprob: -14.625036239624023
    9. '_s' → logprob: -15.375036239624023
    10. '_)' → logprob: -15.750036239624023

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005595852271653712
    2. ' )' → logprob: -8.12555980682373
    3. ')
' → logprob: -8.25055980682373
    4. ',' → logprob: -14.87555980682373
    5. ' )
' → logprob: -14.87555980682373
    6. '       ' → logprob: -15.25055980682373
    7. ')

' → logprob: -15.37555980682373
    8. ' ' → logprob: -15.50055980682373
    9. '
' → logprob: -15.87555980682373
    10. '   ' → logprob: -16.000558853149414

Token 208: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.097055435180664
    2. '       ' → logprob: -1.597055435180664
    3. ' dp' → logprob: -1.597055435180664
    4. ' if' → logprob: -1.722055435180664
    5. ' max' → logprob: -3.722055435180664
    6. 'max' → logprob: -3.847055435180664
    7. 'if' → logprob: -4.097055435180664
    8. ' heights' → logprob: -5.347055435180664
    9. '   ' → logprob: -5.597055435180664
    10. '        
' → logprob: -6.097055435180664

Token 209: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1251772791147232
    2. 'max' → logprob: -2.3751773834228516
    3. 'if' → logprob: -4.000177383422852
    4. 'def' → logprob: -5.250177383422852
    5. ' dp' → logprob: -7.875177383422852
    6. '   ' → logprob: -8.375177383422852
    7. 'memo' → logprob: -8.625177383422852
    8. ' max' → logprob: -9.125177383422852
    9. 'cache' → logprob: -10.000177383422852
    10. '@' → logprob: -10.375177383422852

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020591406151652336
    2. '=' → logprob: -3.8955914974212646
    3. '[' → logprob: -11.145591735839844
    4. ' ' → logprob: -11.520591735839844
    5. ',' → logprob: -11.895591735839844
    6. '_' → logprob: -12.520591735839844
    7. ' =[' → logprob: -12.770591735839844
    8. '   ' → logprob: -12.895591735839844
    9. ')' → logprob: -13.145591735839844
    10. '=[' → logprob: -13.395591735839844

Token 211: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00866609811782837
    2. '[n' → logprob: -4.758666038513184
    3. ' [' → logprob: -10.508666038513184
    4. '[b' → logprob: -11.508666038513184
    5. '[len' → logprob: -11.758666038513184
    6. '[length' → logprob: -12.758666038513184
    7. '[num' → logprob: -14.008666038513184
    8. '[-' → logprob: -14.508666038513184
    9. '[i' → logprob: -15.008666038513184
    10. '   ' → logprob: -15.258666038513184

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07343659549951553
    2. 'block' → logprob: -3.1984364986419678
    3. 'b' → logprob: -3.5734364986419678
    4. 'blocks' → logprob: -6.323436737060547
    5. 'height' → logprob: -10.198436737060547
    6. '(' → logprob: -11.198436737060547
    7. 'blk' → logprob: -11.198436737060547
    8. '(block' → logprob: -11.323436737060547
    9. 'h' → logprob: -11.323436737060547
    10. ' block' → logprob: -11.573436737060547

Token 213: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008441525511443615
    2. ']*' → logprob: -5.38344144821167
    3. ' for' → logprob: -5.63344144821167
    4. 'for' → logprob: -9.008441925048828
    5. ' ]' → logprob: -9.383441925048828
    6. ']*(' → logprob: -10.633441925048828
    7. ',' → logprob: -12.883441925048828
    8. ')' → logprob: -13.883441925048828
    9. '
' → logprob: -14.383441925048828
    10. '}' → logprob: -14.633441925048828

Token 214: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8181334137916565
    2. ']' → logprob: -1.5681333541870117
    3. ' for' → logprob: -1.8181333541870117
    4. '*' → logprob: -2.0681333541870117
    5. ']*' → logprob: -3.4431333541870117
    6. 'for' → logprob: -3.9431333541870117
    7. '*n' → logprob: -4.818133354187012
    8. ' ' → logprob: -7.443133354187012
    9. ')' → logprob: -7.568133354187012
    10. '
' → logprob: -8.068133354187012

Token 215: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07012327015399933
    2. '(n' → logprob: -2.6951231956481934
    3. ' (' → logprob: -9.195123672485352
    4. ' n' → logprob: -9.695123672485352
    5. '(' → logprob: -11.195123672485352
    6. '   ' → logprob: -12.195123672485352
    7. '
' → logprob: -13.945123672485352
    8. '	n' → logprob: -14.070123672485352
    9. '_n' → logprob: -14.320123672485352
    10. ' ' → logprob: -14.695123672485352

Token 216: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0006034302059561014
    2. ' 
' → logprob: -8.375603675842285
    3. '
' → logprob: -9.125603675842285
    4. '        
' → logprob: -9.375603675842285
    5. '       ' → logprob: -9.750603675842285
    6. '<|end|>' → logprob: -9.750603675842285
    7. '    
' → logprob: -10.875603675842285
    8. '  
' → logprob: -11.125603675842285
    9. '\n' → logprob: -11.750603675842285
    10. ' for' → logprob: -12.250603675842285

Token 217: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17409132421016693
    2. '       ' → logprob: -2.549091339111328
    3. ' for' → logprob: -3.674091339111328
    4. ' 
' → logprob: -3.799091339111328
    5. '<|end|>' → logprob: -3.799091339111328
    6. 'for' → logprob: -6.174091339111328
    7. ' ' → logprob: -6.174091339111328
    8. '   ' → logprob: -6.299091339111328
    9. '        
' → logprob: -6.799091339111328
    10. '    
' → logprob: -6.924091339111328

Token 218: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.750436007976532e-05
    2. 'dp' → logprob: -10.87503719329834
    3. ' for' → logprob: -11.12503719329834
    4. '       ' → logprob: -12.75003719329834
    5. '   ' → logprob: -14.37503719329834
    6. '#' (adapté à ' #') → logprob: -15.75003719329834
    7. '
' → logprob: -16.625038146972656
    8. '	for' → logprob: -17.750038146972656
    9. 'if' → logprob: -18.625038146972656
    10. 'result' → logprob: -18.625038146972656

Token 219: ' Compute' (ID: 45438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003977800370194018
    2. ' for' → logprob: -7.875397682189941
    3. '   ' → logprob: -11.875397682189941
    4. '       ' → logprob: -11.875397682189941
    5. '#' → logprob: -13.625397682189941
    6. 'dp' → logprob: -13.875397682189941
    7. 'if' → logprob: -14.375397682189941
    8. 'For' → logprob: -15.375397682189941
    9. '	for' → logprob: -16.000398635864258
    10. 'f' → logprob: -16.250398635864258

Token 220: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5092042088508606
    2. ' dp' → logprob: -1.2592041492462158
    3. ' for' → logprob: -2.384204149246216
    4. 'for' → logprob: -4.009204387664795
    5. ' heights' → logprob: -5.884204387664795
    6. '(dp' → logprob: -7.009204387664795
    7. '   ' → logprob: -7.884204387664795
    8. '[' → logprob: -8.009203910827637
    9. '       ' → logprob: -8.509203910827637
    10. 'max' → logprob: -10.009203910827637

Token 221: ' height' (ID: 4679)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.19319963455200195
    2. 'dp' → logprob: -2.818199634552002
    3. 'height' → logprob: -3.193199634552002
    4. '(dp' → logprob: -3.568199634552002
    5. ' dp' → logprob: -4.193199634552002
    6. ' heights' → logprob: -4.318199634552002
    7. 'he' → logprob: -5.068199634552002
    8. ' height' → logprob: -5.193199634552002
    9. '_he' → logprob: -5.943199634552002
    10. 'Height' → logprob: -6.693199634552002

Token 222: ' tower' (ID: 35225)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2507983446121216
    2. 'for' → logprob: -1.7507983446121216
    3. '       ' → logprob: -3.125798225402832
    4. '
' → logprob: -5.750798225402832
    5. 'dp' → logprob: -8.500798225402832
    6. '        
' → logprob: -8.750798225402832
    7. ' ' → logprob: -8.875798225402832
    8. '[' → logprob: -9.000798225402832
    9. '   ' → logprob: -9.625798225402832
    10. 's' → logprob: -9.750798225402832

Token 223: ' with' (ID: 483)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19767329096794128
    2. 'for' → logprob: -2.0726733207702637
    3. '       ' → logprob: -4.322673320770264
    4. 's' → logprob: -4.322673320770264
    5. ' with' → logprob: -4.447673320770264
    6. '   ' → logprob: -5.822673320770264
    7. 'with' → logprob: -5.947673320770264
    8. ' if' → logprob: -6.197673320770264
    9. ' built' → logprob: -6.572673320770264
    10. '[' → logprob: -6.947673320770264

Token 224: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.6132858991622925
    2. ' block' → logprob: -1.6132858991622925
    3. 'blocks' → logprob: -1.8632858991622925
    4. ' blocks' → logprob: -2.738286018371582
    5. 'top' → logprob: -4.238286018371582
    6. 'i' → logprob: -5.488286018371582
    7. 'bottom' → logprob: -5.488286018371582
    8. ' the' → logprob: -5.613286018371582
    9. 'base' → logprob: -5.738286018371582
    10. 'the' → logprob: -5.738286018371582

Token 225: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7561414837837219
    2. ' i' → logprob: -1.0061414241790771
    3. ' at' → logprob: -2.006141424179077
    4. '[i' → logprob: -4.381141662597656
    5. 'at' → logprob: -4.631141662597656
    6. '0' → logprob: -5.256141662597656
    7. ' ' → logprob: -6.256141662597656
    8. '[' → logprob: -8.256141662597656
    9. '_i' → logprob: -8.881141662597656
    10. '   ' → logprob: -8.881141662597656

Token 226: ' at' (ID: 540)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.04632724076509476
    2. ' at' → logprob: -3.6713273525238037
    3. 'as' → logprob: -4.046327114105225
    4. ' ' → logprob: -7.171327114105225
    5. 'at' → logprob: -7.921327114105225
    6. '<|end|>' → logprob: -7.921327114105225
    7. ',' → logprob: -8.921327590942383
    8. ']' → logprob: -9.046327590942383
    9. ' on' → logprob: -9.546327590942383
    10. '=' → logprob: -9.671327590942383

Token 227: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1184176355600357
    2. ' the' → logprob: -3.368417739868164
    3. 'top' → logprob: -3.493417739868164
    4. 'bottom' → logprob: -3.993417739868164
    5. 'base' → logprob: -4.243417739868164
    6. 'i' → logprob: -4.493417739868164
    7. ' i' → logprob: -7.118417739868164
    8. ' base' → logprob: -7.243417739868164
    9. ' bottom' → logprob: -7.993417739868164
    10. 'position' → logprob: -7.993417739868164

Token 228: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0525629036128521
    2. 'base' → logprob: -3.552562952041626
    3. ' bottom' → logprob: -4.052562713623047
    4. 'top' → logprob: -5.677562713623047
    5. 'i' → logprob: -7.177562713623047
    6. ' base' → logprob: -7.177562713623047
    7. ' top' → logprob: -9.427562713623047
    8. ' ' → logprob: -10.677562713623047
    9. '_bottom' → logprob: -10.802562713623047
    10. 'bot' → logprob: -11.302562713623047

Token 229: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34590160846710205
    2. '       ' → logprob: -1.720901608467102
    3. ' for' → logprob: -3.2209014892578125
    4. '        
' → logprob: -3.4709014892578125
    5. ':' → logprob: -3.9709014892578125
    6. 'for' → logprob: -4.9709014892578125
    7. '.' → logprob: -5.4709014892578125
    8. '    
' → logprob: -6.4709014892578125
    9. '  
' → logprob: -6.5959014892578125
    10. ',' → logprob: -6.7209014892578125

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.470123827457428
    2. ' for' → logprob: -1.0951237678527832
    3. 'for' → logprob: -3.220123767852783
    4. '        
' → logprob: -8.595124244689941
    5. '
' → logprob: -9.095124244689941
    6. '   ' → logprob: -9.095124244689941
    7. '	for' → logprob: -9.220124244689941
    8. ' ' → logprob: -9.970124244689941
    9. '<|end|>' → logprob: -11.220124244689941
    10. ')' → logprob: -11.470124244689941

Token 231: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10029271990060806
    2. ' for' → logprob: -2.350292682647705
    3. '       ' → logprob: -9.600293159484863
    4. '	for' → logprob: -11.475293159484863
    5. '   ' → logprob: -12.350293159484863
    6. '
' → logprob: -12.725293159484863
    7. ' 
' → logprob: -15.475293159484863
    8. '        
' → logprob: -15.725293159484863
    9. ' ' → logprob: -16.225292205810547
    10. '    
' → logprob: -16.350292205810547

Token 232: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03805181756615639
    2. ' i' → logprob: -3.2880518436431885
    3. '   ' → logprob: -12.16305160522461
    4. ' ' → logprob: -13.03805160522461
    5. '	i' → logprob: -13.03805160522461
    6. ' ' → logprob: -15.28805160522461
    7. '  ' → logprob: -15.53805160522461
    8. '```' → logprob: -16.03805160522461
    9. '`' → logprob: -16.66305160522461
    10. '    ' → logprob: -17.16305160522461

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02334948256611824
    2. 'in' → logprob: -3.7733495235443115
    3. ' ' → logprob: -9.27334976196289
    4. '  ' → logprob: -13.14834976196289
    5. '	in' → logprob: -13.64834976196289
    6. ' i' → logprob: -13.89834976196289
    7. ',' → logprob: -14.02334976196289
    8. ')' → logprob: -14.14834976196289
    9. 'space' → logprob: -14.27334976196289
    10. 'import' → logprob: -14.27334976196289

Token 234: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197071075439453
    2. ' range' → logprob: -2.8119707107543945
    3. '   ' → logprob: -13.311970710754395
    4. '	range' → logprob: -14.686970710754395
    5. ' ' → logprob: -14.936970710754395
    6. 'ange' → logprob: -15.186970710754395
    7. '(range' → logprob: -15.936970710754395
    8. '  ' → logprob: -16.061969757080078
    9. '    ' → logprob: -16.936969757080078
    10. ')' → logprob: -17.186969757080078

Token 235: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023563511669635773
    2. 'n' → logprob: -3.7735636234283447
    3. '(' → logprob: -8.148563385009766
    4. ' n' → logprob: -10.648563385009766
    5. ' (' → logprob: -12.898563385009766
    6. ')n' → logprob: -13.898563385009766
    7. '(
' → logprob: -14.273563385009766
    8. '	n' → logprob: -14.773563385009766
    9. ',n' → logprob: -16.023563385009766
    10. '       ' → logprob: -16.148563385009766

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04871409013867378
    2. '):
' → logprob: -3.0487141609191895
    3. ' ):' → logprob: -9.173713684082031
    4. ')' → logprob: -11.548713684082031
    5. '   ' → logprob: -12.423713684082031
    6. '):
' → logprob: -12.673713684082031
    7. ':' → logprob: -12.798713684082031
    8. ' ):
' → logprob: -13.548713684082031
    9. '       ' → logprob: -14.048713684082031
    10. '):

' → logprob: -14.173713684082031

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6757176518440247
    2. ' dp' → logprob: -0.8007176518440247
    3. 'dp' → logprob: -3.30071759223938
    4. '   ' → logprob: -6.300717830657959
    5. '       ' → logprob: -6.425717830657959
    6. '	dp' → logprob: -6.550717830657959
    7. '(dp' → logprob: -8.1757173538208
    8. '            
' → logprob: -10.4257173538208
    9. ',' → logprob: -10.5507173538208
    10. '_dp' → logprob: -10.6757173538208

Token 238: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00032485672272741795
    2. ' dp' → logprob: -8.750325202941895
    3. '           ' → logprob: -9.250325202941895
    4. '       ' → logprob: -10.000325202941895
    5. 'max' → logprob: -11.125325202941895
    6. '   ' → logprob: -11.625325202941895
    7. '	dp' → logprob: -14.375325202941895
    8. 'block' → logprob: -15.125325202941895
    9. 'best' → logprob: -16.250324249267578
    10. 'for' → logprob: -16.250324249267578

Token 239: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -12.125008583068848
    3. ' [' → logprob: -13.000008583068848
    4. ' =' → logprob: -15.625008583068848
    5. 'i' → logprob: -16.00000762939453
    6. '```' → logprob: -16.50000762939453
    7. '[
' → logprob: -16.75000762939453
    8. '\[' → logprob: -16.87500762939453
    9. '=' → logprob: -17.12500762939453
    10. '
' → logprob: -17.50000762939453

Token 240: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026503115077503026
    2. ']=' → logprob: -9.250265121459961
    3. ' =' → logprob: -9.500265121459961
    4. '=' → logprob: -9.750265121459961
    5. ' ]' → logprob: -10.250265121459961
    6. ')' → logprob: -15.375265121459961
    7. ']+=' → logprob: -16.75026512145996
    8. '[' → logprob: -17.75026512145996
    9. ' ' → logprob: -17.87526512145996
    10. '>' → logprob: -18.87526512145996

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326231360435486
    2. ' =' → logprob: -1.3132623434066772
    3. '+=' → logprob: -15.188261985778809
    4. ' +=' → logprob: -15.563261985778809
    5. '=int' → logprob: -17.438262939453125
    6. '=

' → logprob: -17.938262939453125
    7. '=i' → logprob: -18.063262939453125
    8. '.=' → logprob: -18.063262939453125
    9. ' ' → logprob: -18.313262939453125
    10. '=max' → logprob: -18.563262939453125

Token 242: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.0017027945723384619
    2. ' blocks' → logprob: -6.376702785491943
    3. 'block' → logprob: -15.376703262329102
    4. '.blocks' → logprob: -15.751703262329102
    5. '       ' → logprob: -15.876703262329102
    6. '   ' → logprob: -16.0017032623291
    7. '           ' → logprob: -17.3767032623291
    8. 'b' → logprob: -17.7517032623291
    9. '_blocks' → logprob: -18.5017032623291
    10. 'blo' → logprob: -18.6267032623291

Token 243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.750003814697266
    3. '```' → logprob: -15.000003814697266
    4. ')[' → logprob: -15.500003814697266
    5. '.[' → logprob: -16.125003814697266
    6. 'i' → logprob: -16.250003814697266
    7. '[I' → logprob: -17.000003814697266
    8. '\[' → logprob: -17.000003814697266
    9. '.' → logprob: -17.250003814697266
    10. '[
' → logprob: -17.375003814697266

Token 244: '].' (ID: 1651)
  Prédit: '.height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.00033546582562848926
    2. '].' → logprob: -8.125335693359375
    3. ').' → logprob: -10.625335693359375
    4. '}.' → logprob: -12.125335693359375
    5. '.' → logprob: -12.750335693359375
    6. ' .' → logprob: -13.375335693359375
    7. '.he' → logprob: -13.500335693359375
    8. '.width' → logprob: -13.750335693359375
    9. '.length' → logprob: -14.125335693359375
    10. '   ' → logprob: -15.125335693359375

Token 245: 'height' (ID: 5097)
  Prédit: 'height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: 0.0
    2. ' height' → logprob: -16.875
    3. '.height' → logprob: -17.875
    4. '_height' → logprob: -19.0
    5. 'width' → logprob: -19.375
    6. 'length' → logprob: -19.375
    7. '	height' → logprob: -20.25
    8. 'he' → logprob: -21.375
    9. '-height' → logprob: -21.375
    10. 'h' → logprob: -21.75

Token 246: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20139122009277344
    2. '       ' → logprob: -2.7013912200927734
    3. '<|end|>' → logprob: -2.8263912200927734
    4. '           ' → logprob: -3.2013912200927734
    5. '<|end|>' → logprob: -4.826391220092773
    6. ' for' → logprob: -6.451391220092773
    7. '  
' → logprob: -6.826391220092773
    8. '        
' → logprob: -6.951391220092773
    9. '
' → logprob: -6.951391220092773
    10. ' 
' → logprob: -7.326391220092773

Token 247: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6484302282333374
    2. ' for' → logprob: -1.0234302282333374
    3. '
' → logprob: -2.898430347442627
    4. '       ' → logprob: -3.523430347442627
    5. 'for' → logprob: -3.648430347442627
    6. '   ' → logprob: -6.023430347442627
    7. ' 
' → logprob: -6.773430347442627
    8. '<|end|>' → logprob: -7.023430347442627
    9. '        
' → logprob: -7.148430347442627
    10. ' ' → logprob: -7.398430347442627

Token 248: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06299751996994019
    2. ' for' → logprob: -2.812997579574585
    3. '       ' → logprob: -7.062997341156006
    4. '   ' → logprob: -9.062997817993164
    5. '	for' → logprob: -10.562997817993164
    6. '
' → logprob: -10.812997817993164
    7. '        
' → logprob: -11.937997817993164
    8. '    
' → logprob: -13.187997817993164
    9. '```' → logprob: -13.937997817993164
    10. ' ' → logprob: -14.562997817993164

Token 249: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07953648269176483
    2. ' j' → logprob: -2.5795364379882812
    3. 'i' → logprob: -8.079536437988281
    4. ' ' → logprob: -8.704536437988281
    5. 'j' → logprob: -8.829536437988281
    6. '   ' → logprob: -11.579536437988281
    7. ' ' → logprob: -12.204536437988281
    8. '  ' → logprob: -12.454536437988281
    9. '	i' → logprob: -12.954536437988281
    10. '    ' → logprob: -13.579536437988281

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005264237988740206
    2. 'in' → logprob: -5.2552642822265625
    3. ' ' → logprob: -10.880264282226562
    4. '	in' → logprob: -12.380264282226562
    5. 'import' → logprob: -13.130264282226562
    6. '  ' → logprob: -13.380264282226562
    7. '    ' → logprob: -14.130264282226562
    8. '   ' → logprob: -14.130264282226562
    9. ' i' → logprob: -14.505264282226562
    10. '1' → logprob: -14.505264282226562

Token 251: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759539008140564
    2. ' range' → logprob: -0.8259539008140564
    3. ' ' → logprob: -11.700953483581543
    4. '(range' → logprob: -12.700953483581543
    5. '   ' → logprob: -13.450953483581543
    6. '  ' → logprob: -14.700953483581543
    7. '    ' → logprob: -15.075953483581543
    8. ' in' → logprob: -15.325953483581543
    9. '	range' → logprob: -15.700953483581543
    10. '1' → logprob: -15.950953483581543

Token 252: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011061026714742184
    2. '(n' → logprob: -4.511061191558838
    3. '1' → logprob: -11.76106071472168
    4. 'n' → logprob: -12.88606071472168
    5. 'range' → logprob: -13.38606071472168
    6. ' (' → logprob: -14.51106071472168
    7. '(
' → logprob: -15.26106071472168
    8. ' ' → logprob: -15.51106071472168
    9. '(range' → logprob: -15.76106071472168
    10. '(i' → logprob: -16.01106071472168

Token 253: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.036067262291908264
    2. '):
' → logprob: -3.411067247390747
    3. ' ):' → logprob: -6.036067485809326
    4. ' ):
' → logprob: -11.536067008972168
    5. '       ' → logprob: -11.911067008972168
    6. '   ' → logprob: -12.911067008972168
    7. '):
' → logprob: -13.036067008972168
    8. ':' → logprob: -13.036067008972168
    9. ')' → logprob: -13.286067008972168
    10. '
' → logprob: -14.036067008972168

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002579343970865011
    2. ' for' → logprob: -6.002579212188721
    3. '       ' → logprob: -10.127579689025879
    4. '   ' → logprob: -10.502579689025879
    5. 'for' → logprob: -10.752579689025879
    6. '	       ' → logprob: -12.377579689025879
    7. ' ' → logprob: -13.002579689025879
    8. '	   ' → logprob: -13.252579689025879
    9. ',' → logprob: -13.377579689025879
    10. '
' → logprob: -13.627579689025879

Token 255: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5765237212181091
    2. ' for' → logprob: -0.8265237212181091
    3. '   ' → logprob: -8.201523780822754
    4. '       ' → logprob: -8.201523780822754
    5. '           ' → logprob: -10.951523780822754
    6. ' ' → logprob: -11.201523780822754
    7. '	for' → logprob: -12.576523780822754
    8. '    ' → logprob: -14.826523780822754
    9. '  ' → logprob: -14.951523780822754
    10. '     ' → logprob: -15.826523780822754

Token 256: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.03805147483944893
    2. 'j' → logprob: -3.2880513668060303
    3. '    ' → logprob: -12.03805160522461
    4. '	j' → logprob: -13.41305160522461
    5. ' ' → logprob: -13.66305160522461
    6. '   ' → logprob: -13.78805160522461
    7. 'range' → logprob: -15.91305160522461
    8. ' range' → logprob: -16.03805160522461
    9. '  ' → logprob: -16.28805160522461
    10. '_j' → logprob: -17.03805160522461

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005950132850557566
    2. 'in' → logprob: -5.130949974060059
    3. ' ' → logprob: -11.505949974060059
    4. '	in' → logprob: -12.255949974060059
    5. ' i' → logprob: -13.380949974060059
    6. '    ' → logprob: -13.880949974060059
    7. '        ' → logprob: -14.005949974060059
    8. '=' → logprob: -14.255949974060059
    9. ' =' → logprob: -14.880949974060059
    10. '1' → logprob: -15.005949974060059

Token 258: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269323080778122
    2. 'range' → logprob: -2.126932382583618
    3. '(range' → logprob: -12.876932144165039
    4. ' ' → logprob: -14.751932144165039
    5. '	range' → logprob: -15.001932144165039
    6. 'ange' → logprob: -15.251932144165039
    7. ' i' → logprob: -15.376932144165039
    8. '   ' → logprob: -15.501932144165039
    9. 'i' → logprob: -16.12693214416504
    10. ' in' → logprob: -16.12693214416504

Token 259: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1691119372844696
    2. ' i' → logprob: -2.169111967086792
    3. 'i' → logprob: -3.419111967086792
    4. ' (' → logprob: -5.044111728668213
    5. '(' → logprob: -6.544111728668213
    6. ' range' → logprob: -7.919111728668213
    7. '0' → logprob: -8.794112205505371
    8. '           ' → logprob: -10.169112205505371
    9. 'range' → logprob: -10.169112205505371
    10. '       ' → logprob: -10.919112205505371

Token 260: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08405844122171402
    2. '):
' → logprob: -2.7090585231781006
    3. ' ):' → logprob: -4.3340582847595215
    4. ' ):
' → logprob: -7.5840582847595215
    5. ')' → logprob: -8.08405876159668
    6. '+' → logprob: -10.45905876159668
    7. '):

' → logprob: -10.70905876159668
    8. ' )' → logprob: -11.45905876159668
    9. ' ' → logprob: -11.83405876159668
    10. '       ' → logprob: -12.33405876159668

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005059692775830626
    2. ':' → logprob: -8.250506401062012
    3. '           ' → logprob: -9.500506401062012
    4. ':
' → logprob: -10.000506401062012
    5. ' if' → logprob: -10.375506401062012
    6. ',' → logprob: -10.875506401062012
    7. '<|end|>' → logprob: -11.250506401062012
    8. '            ' → logprob: -11.875506401062012
    9. '                
' → logprob: -12.000506401062012
    10. '              ' → logprob: -12.000506401062012

Token 262: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8572583794593811
    2. '                   ' → logprob: -1.1072583198547363
    3. '               ' → logprob: -1.4822583198547363
    4. '           ' → logprob: -5.232258319854736
    5. 'if' → logprob: -5.482258319854736
    6. '                    
' → logprob: -5.982258319854736
    7. ':
' → logprob: -6.732258319854736
    8. ' 
' → logprob: -6.982258319854736
    9. '                       ' → logprob: -7.107258319854736
    10. '                ' → logprob: -7.107258319854736

Token 263: ' Strict' (ID: 97654)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.201467826962471
    2. 'if' → logprob: -1.7014678716659546
    3. '           ' → logprob: -10.826467514038086
    4. '               ' → logprob: -10.826467514038086
    5. '                   ' → logprob: -12.701467514038086
    6. ' dp' → logprob: -12.951467514038086
    7. 'If' → logprob: -13.076467514038086
    8. ' blocks' → logprob: -13.576467514038086
    9. ' ' → logprob: -13.826467514038086
    10. 'dp' → logprob: -13.951467514038086

Token 264: 'ly' (ID: 423)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4422968327999115
    2. 'blocks' → logprob: -2.1922967433929443
    3. ' if' → logprob: -2.6922967433929443
    4. ' blocks' → logprob: -3.0672967433929443
    5. ' and' → logprob: -3.0672967433929443
    6. 'ly' → logprob: -3.1922967433929443
    7. 'and' → logprob: -3.3172967433929443
    8. '_blocks' → logprob: -5.317296981811523
    9. '.blocks' → logprob: -7.567296981811523
    10. 'width' → logprob: -7.942296981811523

Token 265: ' decreasing' (ID: 70763)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.428915411233902
    2. 'blocks' → logprob: -1.9289153814315796
    3. ' less' → logprob: -2.803915500640869
    4. '<' → logprob: -2.928915500640869
    5. 'greater' → logprob: -3.303915500640869
    6. '>' → logprob: -4.428915500640869
    7. ' blocks' → logprob: -4.678915500640869
    8. 'if' → logprob: -4.928915500640869
    9. ' <' → logprob: -5.303915500640869
    10. '_less' → logprob: -5.553915500640869

Token 266: ' width' (ID: 4345)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15395581722259521
    2. ' if' → logprob: -2.9039559364318848
    3. 'and' → logprob: -3.2789559364318848
    4. 'width' → logprob: -4.028955936431885
    5. ' width' → logprob: -4.153955936431885
    6. 'if' → logprob: -4.528955936431885
    7. ' in' → logprob: -5.778955936431885
    8. ':' → logprob: -7.028955936431885
    9. '_width' → logprob: -7.528955936431885
    10. ' widths' → logprob: -7.778955936431885

Token 267: ' for' (ID: 395)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05059460923075676
    2. 'and' → logprob: -3.1755945682525635
    3. '               ' → logprob: -5.425594806671143
    4. '                   ' → logprob: -6.800594806671143
    5. ' if' → logprob: -7.050594806671143
    6. '           ' → logprob: -7.800594806671143
    7. ',' → logprob: -8.550594329833984
    8. ':
' → logprob: -8.550594329833984
    9. '                       ' → logprob: -9.175594329833984
    10. ':' → logprob: -9.800594329833984

Token 268: ' upper' (ID: 13057)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.1648341864347458
    2. 'blocks' → logprob: -2.1648342609405518
    3. ' stacking' → logprob: -4.164834022521973
    4. ' block' → logprob: -5.414834022521973
    5. ' stability' → logprob: -5.539834022521973
    6. ' the' → logprob: -5.789834022521973
    7. 'block' → logprob: -6.414834022521973
    8. 'dp' → logprob: -6.664834022521973
    9. ' placement' → logprob: -7.164834022521973
    10. ' dp' → logprob: -7.289834022521973

Token 269: ' block' (ID: 4355)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.7570041418075562
    2. 'blocks' → logprob: -0.8820041418075562
    3. ' block' → logprob: -2.8820042610168457
    4. 'block' → logprob: -3.1320042610168457
    5. '_blocks' → logprob: -5.257004261016846
    6. ' <' → logprob: -5.507004261016846
    7. 'width' → logprob: -6.257004261016846
    8. ' >' → logprob: -7.132004261016846
    9. '               ' → logprob: -7.257004261016846
    10. ' and' → logprob: -7.382004261016846

Token 270: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13229696452617645
    2. '               ' → logprob: -2.3822970390319824
    3. ' if' → logprob: -4.257297039031982
    4. '                   ' → logprob: -5.007297039031982
    5. 'and' → logprob: -5.507297039031982
    6. ':
' → logprob: -5.882297039031982
    7. ',' → logprob: -6.632297039031982
    8. '           ' → logprob: -7.132297039031982
    9. ':' → logprob: -7.882297039031982
    10. '                       ' → logprob: -8.257296562194824

Token 271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013270470313727856
    2. ' if' → logprob: -4.513270378112793
    3. ' and' → logprob: -6.388270378112793
    4. ',' → logprob: -8.263270378112793
    5. 'if' → logprob: -9.263270378112793
    6. '                
' → logprob: -9.638270378112793
    7. '                   ' → logprob: -10.638270378112793
    8. 'and' → logprob: -11.263270378112793
    9. ')' → logprob: -11.388270378112793
    10. '           ' → logprob: -11.638270378112793

Token 272: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14733242988586426
    2. '               ' → logprob: -2.0223324298858643
    3. 'if' (adapté à ' if') → logprob: -5.522332191467285
    4. '                   ' → logprob: -8.647332191467285
    5. ' 
' → logprob: -8.772332191467285
    6. '                
' → logprob: -9.397332191467285
    7. '                ' → logprob: -9.647332191467285
    8. '           ' → logprob: -9.772332191467285
    9. ',' → logprob: -10.397332191467285
    10. '
' → logprob: -10.522332191467285

Token 273: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.018216904252767563
    2. 'blocks' → logprob: -4.018217086791992
    3. '           ' → logprob: -11.018217086791992
    4. '               ' → logprob: -11.143217086791992
    5. '.blocks' → logprob: -11.143217086791992
    6. '(block' → logprob: -12.768217086791992
    7. ' block' → logprob: -12.768217086791992
    8. '_blocks' → logprob: -12.893217086791992
    9. '   ' → logprob: -13.018217086791992
    10. '                   ' → logprob: -13.018217086791992

Token 274: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.05490598455071449
    2. '[i' → logprob: -2.929905891418457
    3. '[' → logprob: -11.304905891418457
    4. '```' → logprob: -12.429905891418457
    5. ' [' → logprob: -13.429905891418457
    6. ')[' → logprob: -13.679905891418457
    7. '   ' → logprob: -13.929905891418457
    8. 'j' → logprob: -14.429905891418457
    9. '][' → logprob: -14.679905891418457
    10. 'i' → logprob: -15.054905891418457

Token 275: '].' (ID: 1651)
  Prédit: '.width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.16516602039337158
    2. '].' → logprob: -1.9151660203933716
    3. ').' → logprob: -5.915165901184082
    4. '.' → logprob: -6.915165901184082
    5. '}.' → logprob: -7.290165901184082
    6. ' .' → logprob: -8.665165901184082
    7. '.height' → logprob: -9.540165901184082
    8. ' ].' → logprob: -9.790165901184082
    9. '[' → logprob: -10.165165901184082
    10. '.w' → logprob: -10.415165901184082

Token 276: 'width' (ID: 6015)
  Prédit: 'width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -6.194110756041482e-05
    2. ' width' → logprob: -10.500061988830566
    3. '.width' → logprob: -10.625061988830566
    4. 'base' → logprob: -11.625061988830566
    5. 'w' → logprob: -15.000061988830566
    6. 'length' → logprob: -15.625061988830566
    7. '_width' → logprob: -15.750061988830566
    8. '   ' → logprob: -15.875061988830566
    9. '	width' → logprob: -15.875061988830566
    10. 'height' → logprob: -16.62506103515625

Token 277: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.030224328860640526
    2. '<' → logprob: -3.530224323272705
    3. ' ' → logprob: -7.780224323272705
    4. ' >' → logprob: -11.155224800109863
    5. ')' → logprob: -11.280224800109863
    6. '>' → logprob: -11.530224800109863
    7. '[' → logprob: -12.530224800109863
    8. ']' → logprob: -13.092724800109863
    9. ',' → logprob: -13.592724800109863
    10. '```' → logprob: -13.592724800109863

Token 278: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.2014428675174713
    2. ' blocks' → logprob: -1.701442837715149
    3. '.blocks' → logprob: -11.32644271850586
    4. 'block' → logprob: -11.57644271850586
    5. '   ' → logprob: -13.07644271850586
    6. '=' → logprob: -13.45144271850586
    7. '_blocks' → logprob: -13.70144271850586
    8. '       ' → logprob: -13.82644271850586
    9. ' ' → logprob: -15.07644271850586
    10. ' block' → logprob: -15.20144271850586

Token 279: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.87500286102295
    3. '[i' → logprob: -14.50000286102295
    4. '[
' → logprob: -15.25000286102295
    5. ' [' → logprob: -15.62500286102295
    6. '```' → logprob: -15.62500286102295
    7. 'j' → logprob: -16.250001907348633
    8. '
' → logprob: -16.375001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '][' → logprob: -18.125001907348633

Token 280: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.20435193181037903
    2. '.width' → logprob: -1.7043519020080566
    3. '}.' → logprob: -6.829351902008057
    4. ').' → logprob: -7.079351902008057
    5. '.' → logprob: -8.204352378845215
    6. '>.' → logprob: -9.204352378845215
    7. ' ].' → logprob: -9.454352378845215
    8. ']' → logprob: -9.454352378845215
    9. ' .' → logprob: -9.704352378845215
    10. ''].' → logprob: -9.829352378845215

Token 281: 'width' (ID: 6015)
  Prédit: 'width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -2.339278580620885e-06
    2. ' width' → logprob: -13.125001907348633
    3. '.width' → logprob: -16.125001907348633
    4. '	width' → logprob: -16.750001907348633
    5. '_width' → logprob: -16.875001907348633
    6. 'idth' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.125001907348633
    8. 'wide' → logprob: -18.750001907348633
    9. 'height' → logprob: -18.750001907348633
    10. 'w' → logprob: -18.875001907348633

Token 282: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.42731136083602905
    2. ':' → logprob: -1.1773114204406738
    3. ':
' → logprob: -3.427311420440674
    4. 'and' → logprob: -5.052311420440674
    5. '               ' → logprob: -8.177310943603516
    6. '           ' → logprob: -8.302310943603516
    7. '                   ' → logprob: -9.177310943603516
    8. '):
' → logprob: -10.052310943603516
    9. '):' → logprob: -11.177310943603516
    10. '                       ' → logprob: -11.302310943603516

Token 283: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23118658363819122
    2. ' and' → logprob: -1.6061866283416748
    3. '               ' → logprob: -5.856186389923096
    4. 'and' → logprob: -6.856186389923096
    5. ':
' → logprob: -7.856186389923096
    6. '                       ' → logprob: -7.856186389923096
    7. ':' → logprob: -7.856186389923096
    8. '           ' → logprob: -8.231186866760254
    9. '                    ' → logprob: -9.231186866760254
    10. ' dp' → logprob: -9.731186866760254

Token 284: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.19206400215625763
    2. 'if' → logprob: -1.8170640468597412
    3. ' if' → logprob: -4.817063808441162
    4. ' dp' → logprob: -6.067063808441162
    5. '                   ' → logprob: -6.442063808441162
    6. '                       ' → logprob: -8.94206428527832
    7. '               ' → logprob: -9.69206428527832
    8. '           ' → logprob: -10.81706428527832
    9. '   ' → logprob: -11.94206428527832
    10. '                           ' → logprob: -12.06706428527832

Token 285: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0040831477381289005
    2. '[j' → logprob: -5.504083156585693
    3. '[' → logprob: -12.379082679748535
    4. ' [' → logprob: -15.379082679748535
    5. 'i' → logprob: -16.62908363342285
    6. '[I' → logprob: -16.62908363342285
    7. '```' → logprob: -17.00408363342285
    8. '][' → logprob: -17.37908363342285
    9. '\[' → logprob: -17.75408363342285
    10. ']' → logprob: -18.00408363342285

Token 286: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025020692497491837
    2. ']=' → logprob: -3.7750205993652344
    3. ' =' → logprob: -7.025020599365234
    4. '=' → logprob: -7.275020599365234
    5. ' ]' → logprob: -9.275020599365234
    6. '=max' → logprob: -10.525020599365234
    7. ']+=' → logprob: -10.900020599365234
    8. '[' → logprob: -10.900020599365234
    9. 'max' → logprob: -11.025020599365234
    10. '[i' → logprob: -12.150020599365234

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0027393740601837635
    2. ' =' → logprob: -6.002739429473877
    3. '=max' → logprob: -8.252738952636719
    4. 'max' → logprob: -12.752738952636719
    5. '+=' → logprob: -15.877738952636719
    6. '>' → logprob: -16.87773895263672
    7. ']=' → logprob: -17.25273895263672
    8. '=

' → logprob: -17.37773895263672
    9. ' max' → logprob: -17.75273895263672
    10. ',max' → logprob: -17.75273895263672

Token 288: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1602245420217514
    2. 'max' → logprob: -1.9102245569229126
    3. '	max' → logprob: -14.785224914550781
    4. '   ' → logprob: -17.53522491455078
    5. '(max' → logprob: -18.03522491455078
    6. '[max' → logprob: -18.16022491455078
    7. '                       ' → logprob: -18.66022491455078
    8. ' ' → logprob: -18.91022491455078
    9. '.max' → logprob: -18.91022491455078
    10. '_max' → logprob: -18.91022491455078

Token 289: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.011058545671403408
    2. '(' → logprob: -4.511058330535889
    3. '(
' → logprob: -12.136058807373047
    4. 'dp' → logprob: -12.636058807373047
    5. ' (' → logprob: -13.761058807373047
    6. ' dp' → logprob: -14.261058807373047
    7. '(

' → logprob: -15.511058807373047
    8. '	dp' → logprob: -16.011058807373047
    9. '(df' → logprob: -16.886058807373047
    10. '(max' → logprob: -18.511058807373047

Token 290: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.363617962459102e-05
    2. ')' → logprob: -10.125083923339844
    3. '[j' → logprob: -10.750083923339844
    4. ')[' → logprob: -11.875083923339844
    5. '[' → logprob: -12.500083923339844
    6. ')i' → logprob: -13.000083923339844
    7. 'i' → logprob: -13.375083923339844
    8. '   ' → logprob: -13.625083923339844
    9. '[
' → logprob: -13.750083923339844
    10. ',i' → logprob: -13.750083923339844

Token 291: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015324745327234268
    2. ' ,' → logprob: -6.626532554626465
    3. '],' → logprob: -8.626532554626465
    4. '   ' → logprob: -12.376532554626465
    5. '           ' → logprob: -12.376532554626465
    6. ',
' → logprob: -12.376532554626465
    7. 'dp' → logprob: -12.626532554626465
    8. '       ' → logprob: -13.001532554626465
    9. '),' → logprob: -13.376532554626465
    10. ' dp' → logprob: -14.001532554626465

Token 292: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029929019510746002
    2. ' dp' → logprob: -3.5299289226531982
    3. 'blocks' → logprob: -10.029929161071777
    4. '                   ' → logprob: -10.404929161071777
    5. '	dp' → logprob: -10.654929161071777
    6. '               ' → logprob: -11.279929161071777
    7. '                       ' → logprob: -11.279929161071777
    8. '(dp' → logprob: -11.529929161071777
    9. ' blocks' → logprob: -11.904929161071777
    10. '                    ' → logprob: -12.654929161071777

Token 293: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.2127087504486553e-05
    2. 'j' → logprob: -11.000021934509277
    3. '[' → logprob: -13.125021934509277
    4. ' [' → logprob: -13.500021934509277
    5. '[i' → logprob: -14.125021934509277
    6. '[
' → logprob: -14.875021934509277
    7. '   ' → logprob: -15.125021934509277
    8. ' j' → logprob: -16.125022888183594
    9. '	j' → logprob: -16.375022888183594
    10. '][' → logprob: -16.375022888183594

Token 294: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009514177218079567
    2. ']+' → logprob: -4.759514331817627
    3. ' ]' → logprob: -7.134514331817627
    4. ')' → logprob: -9.384513854980469
    5. '+' → logprob: -12.259513854980469
    6. ' +' → logprob: -12.259513854980469
    7. '   ' → logprob: -13.384513854980469
    8. ')+' → logprob: -13.384513854980469
    9. '[i' → logprob: -13.884513854980469
    10. '}' → logprob: -14.759513854980469

Token 295: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25205516815185547
    2. '+' → logprob: -1.5020551681518555
    3. ']+' → logprob: -10.002055168151855
    4. ')' → logprob: -10.377055168151855
    5. ')+' → logprob: -10.752055168151855
    6. ']' → logprob: -10.752055168151855
    7. '[' → logprob: -13.377055168151855
    8. '   ' → logprob: -14.002055168151855
    9. ' ' → logprob: -14.002055168151855
    10. '+i' → logprob: -14.252055168151855

Token 296: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.2519332468509674
    2. ' blocks' → logprob: -1.501933217048645
    3. 'block' → logprob: -12.751933097839355
    4. '.blocks' → logprob: -14.626933097839355
    5. '   ' → logprob: -15.376933097839355
    6. '       ' → logprob: -16.001934051513672
    7. 'b' → logprob: -16.251934051513672
    8. '           ' → logprob: -16.376934051513672
    9. ' ' → logprob: -16.501934051513672
    10. '_blocks' → logprob: -16.876934051513672

Token 297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[j' → logprob: -14.250001907348633
    3. '[' → logprob: -14.375001907348633
    4. 'i' → logprob: -16.250001907348633
    5. '[
' → logprob: -16.375001907348633
    6. '```' → logprob: -16.500001907348633
    7. '.' → logprob: -16.750001907348633
    8. ' [' → logprob: -17.000001907348633
    9. ')[' → logprob: -17.250001907348633
    10. '.[' → logprob: -17.250001907348633

Token 298: '].' (ID: 1651)
  Prédit: '.height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0018543887417763472
    2. '].' → logprob: -6.626854419708252
    3. ').' → logprob: -7.876854419708252
    4. '}.' → logprob: -10.251853942871094
    5. '.he' → logprob: -10.251853942871094
    6. '.h' → logprob: -10.501853942871094
    7. '.' → logprob: -10.501853942871094
    8. '.width' → logprob: -12.001853942871094
    9. ' .' → logprob: -12.626853942871094
    10. '.value' → logprob: -13.001853942871094

Token 299: 'height' (ID: 5097)
  Prédit: 'height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -9.253090865968261e-06
    2. ' height' → logprob: -11.625009536743164
    3. '.height' → logprob: -15.500009536743164
    4. '_height' → logprob: -17.875009536743164
    5. '	height' → logprob: -18.000009536743164
    6. ' ' → logprob: -18.375009536743164
    7. '   ' → logprob: -18.500009536743164
    8. 'width' → logprob: -18.625009536743164
    9. 'he' → logprob: -19.250009536743164
    10. '```' → logprob: -19.750009536743164

Token 300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.686778503237292e-05
    2. ')
' → logprob: -10.125097274780273
    3. '       ' → logprob: -10.125097274780273
    4. ' )' → logprob: -11.375097274780273
    5. '               ' → logprob: -13.500097274780273
    6. '<|end|>' → logprob: -13.750097274780273
    7. ')return' → logprob: -14.000097274780273
    8. '           ' → logprob: -14.000097274780273
    9. '   ' → logprob: -16.000097274780273
    10. '                   ' → logprob: -16.250097274780273

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11144740134477615
    2. '
' → logprob: -3.111447334289551
    3. '        
' → logprob: -3.736447334289551
    4. ' return' → logprob: -4.361447334289551
    5. '<|end|>' → logprob: -5.111447334289551
    6. 'return' → logprob: -5.486447334289551
    7. ' 
' → logprob: -5.611447334289551
    8. '  
' → logprob: -5.736447334289551
    9. '\n' → logprob: -5.986447334289551
    10. '        ' → logprob: -6.361447334289551

Token 302: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.24545538425445557
    2. '       ' → logprob: -1.7454553842544556
    3. ' return' → logprob: -3.870455265045166
    4. '
' → logprob: -3.995455265045166
    5. '   ' → logprob: -5.995455265045166
    6. '        
' → logprob: -6.870455265045166
    7. '    
' → logprob: -8.995455741882324
    8. '	return' → logprob: -9.495455741882324
    9. ' ' → logprob: -10.120455741882324
    10. '  
' → logprob: -10.870455741882324

Token 303: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25192990899086
    2. ' max' → logprob: -1.5019298791885376
    3. '(max' → logprob: -14.501930236816406
    4. '[max' → logprob: -16.126930236816406
    5. 'dp' → logprob: -16.126930236816406
    6. '	max' → logprob: -16.376930236816406
    7. '```' → logprob: -17.626930236816406
    8. '   ' → logprob: -17.876930236816406
    9. ' ' → logprob: -18.001930236816406
    10. '=max' → logprob: -18.126930236816406

Token 304: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -7.493430894101039e-05
    2. '(' → logprob: -9.500075340270996
    3. 'dp' → logprob: -17.62507438659668
    4. '(
' → logprob: -17.62507438659668
    5. '(df' → logprob: -19.75007438659668
    6. '	dp' → logprob: -20.00007438659668
    7. ' dp' → logprob: -20.25007438659668
    8. '(dt' → logprob: -20.37507438659668
    9. ' (' → logprob: -20.87507438659668
    10. '(d' → logprob: -21.00007438659668

Token 305: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014001218369230628
    2. ' )' → logprob: -9.000140190124512
    3. ' if' → logprob: -11.750140190124512
    4. ' or' → logprob: -12.000140190124512
    5. '   ' → logprob: -13.875140190124512
    6. ',' → logprob: -15.125140190124512
    7. 'if' → logprob: -15.375140190124512
    8. ')
' → logprob: -15.750140190124512
    9. ')+' → logprob: -15.875140190124512
    10. ']' → logprob: -16.250139236450195

Token 306: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1602610945701599
    2. ' dp' → logprob: -1.9102611541748047
    3. 'n' → logprob: -10.660261154174805
    4. 'len' → logprob: -12.160261154174805
    5. ' n' → logprob: -12.410261154174805
    6. '(dp' → logprob: -13.160261154174805
    7. '	dp' → logprob: -14.160261154174805
    8. 'blocks' → logprob: -14.285261154174805
    9. ' len' → logprob: -14.410261154174805
    10. ' blocks' → logprob: -15.160261154174805

Token 308: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10020699352025986
    2. 'else' → logprob: -2.3502070903778076
    3. '!=' → logprob: -15.725207328796387
    4. ')' → logprob: -16.10020637512207
    5. '   ' → logprob: -16.72520637512207
    6. ' ' → logprob: -17.60020637512207
    7. '[:]' → logprob: -17.85020637512207
    8. 'and' → logprob: -17.97520637512207
    9. '	else' → logprob: -18.35020637512207
    10. '>' → logprob: -18.35020637512207

Token 309: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004622137639671564
    2. ' ' → logprob: -5.379621982574463
    3. '   ' → logprob: -14.004622459411621
    4. ' ' → logprob: -14.004622459411621
    5. '  ' → logprob: -16.004621505737305
    6. '       ' → logprob: -16.129621505737305
    7. '​' → logprob: -17.504621505737305
    8. '    ' → logprob: -17.879621505737305
    9. '     ' → logprob: -18.192121505737305
    10. '```' → logprob: -18.192121505737305

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.000018119812012
    3. '"' → logprob: -14.937518119812012
    4. '   ' → logprob: -15.375018119812012
    5. ' ' → logprob: -15.812518119812012
    6. '```' → logprob: -16.500017166137695
    7. '[' → logprob: -17.187517166137695
    8. '  ' → logprob: -17.187517166137695
    9. '۰' → logprob: -17.312517166137695
    10. '{' → logprob: -17.375017166137695

Token 311: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ' Input' (ID: 10090)
  Prédit: ' Tower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Tower' → logprob: -0.8941442370414734
    2. ' Block' → logprob: -1.8941442966461182
    3. ' Solution' → logprob: -2.019144296646118
    4. ' Stack' → logprob: -2.269144296646118
    5. 'Tower' → logprob: -2.894144296646118
    6. 'Stack' → logprob: -3.019144296646118
    7. 'Block' → logprob: -3.769144296646118
    8. 'Solution' → logprob: -3.769144296646118
    9. ' Builder' → logprob: -4.644144058227539
    10. ' Pyramid' → logprob: -4.769144058227539

Token 314: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.5519469380378723
    2. 'Parser' → logprob: -1.8019468784332275
    3. 'Processor' → logprob: -2.4269468784332275
    4. ':' → logprob: -2.5519468784332275
    5. 'Reader' → logprob: -2.8019468784332275
    6. 'Data' → logprob: -4.301947116851807
    7. 'Manager' → logprob: -5.426947116851807
    8. 'Provider' → logprob: -5.926947116851807
    9. 'Validator' → logprob: -5.926947116851807
    10. '():' → logprob: -6.051947116851807

Token 315: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004659384489059448
    2. ':
' → logprob: -5.379659175872803
    3. '):' → logprob: -11.254659652709961
    4. '():' → logprob: -11.629659652709961
    5. ' :' → logprob: -12.254659652709961
    6. ':def' → logprob: -12.504659652709961
    7. ':

' → logprob: -13.129659652709961
    8. '():
' → logprob: -13.754659652709961
    9. '<|end|>' → logprob: -13.879659652709961
    10. '):
' → logprob: -14.129659652709961

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004811492282897234
    2. ' def' → logprob: -5.3798112869262695
    3. 'def' → logprob: -8.62981128692627
    4. ':' → logprob: -12.50481128692627
    5. '<|end|>' → logprob: -13.00481128692627
    6. '	def' → logprob: -13.12981128692627
    7. '    
' → logprob: -14.25481128692627
    8. ':
' → logprob: -14.37981128692627
    9. '```' → logprob: -14.50481128692627
    10. '   ' → logprob: -14.87981128692627

Token 317: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09700259566307068
    2. ' def' → logprob: -2.5970025062561035
    3. '   ' → logprob: -4.5970025062561035
    4. '@' → logprob: -5.2220025062561035
    5. ' @' → logprob: -6.0970025062561035
    6. 'staticmethod' → logprob: -8.472002983093262
    7. ' static' → logprob: -12.597002983093262
    8. 'static' → logprob: -12.847002983093262
    9. ' ' → logprob: -13.597002983093262
    10. 'classmethod' → logprob: -13.597002983093262

Token 318: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.744428813457489
    2. ' parse' → logprob: -0.744428813457489
    3. ' __' → logprob: -3.119428873062134
    4. 'def' → logprob: -5.869428634643555
    5. ' static' → logprob: -6.494428634643555
    6. 'parse' → logprob: -7.619428634643555
    7. ' ' → logprob: -7.619428634643555
    8. 'staticmethod' → logprob: -8.744428634643555
    9. '__' → logprob: -9.244428634643555
    10. ' init' → logprob: -9.744428634643555

Token 319: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. 'ini' → logprob: -14.625000953674316
    3. ' init' → logprob: -15.250000953674316
    4. 'new' → logprob: -15.250000953674316
    5. 'in' → logprob: -15.875000953674316
    6. 'int' → logprob: -17.375001907348633
    7. 'inite' → logprob: -18.750001907348633
    8. 'call' → logprob: -18.875001907348633
    9. 'next' → logprob: -19.000001907348633
    10. 'initi' → logprob: -19.375001907348633

Token 320: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00877954438328743
    2. '(' → logprob: -5.258779525756836
    3. ' (' → logprob: -6.508779525756836
    4. '__(' → logprob: -7.258779525756836
    5. '<|end|>' → logprob: -7.508779525756836
    6. 'self' → logprob: -8.008779525756836
    7. ',' → logprob: -8.508779525756836
    8. ')(' → logprob: -10.633779525756836
    9. '<|end|>' → logprob: -10.633779525756836
    10. ':' → logprob: -10.883779525756836

Token 321: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011784763046307489
    2. ' self' → logprob: -9.375118255615234
    3. ')' → logprob: -10.500118255615234
    4. '
' → logprob: -12.875118255615234
    5. '(self' → logprob: -14.000118255615234
    6. '<|end|>' → logprob: -14.000118255615234
    7. '):
' → logprob: -15.125118255615234
    8. 's' → logprob: -15.375118255615234
    9. '   ' → logprob: -16.125118255615234
    10. '<|end|>' → logprob: -16.375118255615234

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16305172443389893
    2. '):' → logprob: -1.913051724433899
    3. '):
' → logprob: -6.538051605224609
    4. ',input' → logprob: -6.913051605224609
    5. 'self' → logprob: -8.91305160522461
    6. ' ,' → logprob: -9.91305160522461
    7. ' ):' → logprob: -10.28805160522461
    8. ',self' → logprob: -10.91305160522461
    9. ',
' → logprob: -11.28805160522461
    10. ',data' → logprob: -11.41305160522461

Token 323: ' raw' (ID: 11428)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2772461473941803
    2. ' input' → logprob: -1.652246117591858
    3. ' lines' → logprob: -3.9022462368011475
    4. 'data' → logprob: -4.527245998382568
    5. 'lines' → logprob: -5.152245998382568
    6. ')' → logprob: -5.277245998382568
    7. ' data' → logprob: -6.027245998382568
    8. ' raw' → logprob: -6.402245998382568
    9. 'raw' → logprob: -6.527245998382568
    10. 'inputs' → logprob: -7.402245998382568

Token 324: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.8020238876342773
    2. '_data' → logprob: -1.1770238876342773
    3. '_text' → logprob: -1.4270238876342773
    4. '_string' → logprob: -6.302023887634277
    5. ')' → logprob: -7.427023887634277
    6. ')_' → logprob: -8.302023887634277
    7. '_code' → logprob: -8.552023887634277
    8. '_' → logprob: -9.052023887634277
    9. 'text' → logprob: -9.427023887634277
    10. '_inputs' → logprob: -9.552023887634277

Token 325: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013170111924409866
    2. ':' → logprob: -4.63817024230957
    3. '):
' → logprob: -6.13817024230957
    4. ')' → logprob: -6.76317024230957
    5. '=None' → logprob: -10.13817024230957
    6. ' ):' → logprob: -11.13817024230957
    7. ':str' → logprob: -11.26317024230957
    8. '=' → logprob: -11.76317024230957
    9. '):

' → logprob: -12.38817024230957
    10. '():' → logprob: -12.63817024230957

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007842378690838814
    2. ':' → logprob: -5.007842540740967
    3. '   ' → logprob: -8.132842063903809
    4. ',' → logprob: -8.382842063903809
    5. ')' → logprob: -9.007842063903809
    6. ' raw' → logprob: -9.007842063903809
    7. '):
' → logprob: -9.132842063903809
    8. '):' → logprob: -9.382842063903809
    9. '<|end|>' → logprob: -10.132842063903809
    10. ':
' → logprob: -10.632842063903809

Token 327: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.016372988000512123
    2. ' self' → logprob: -4.141373157501221
    3. '       ' → logprob: -8.016372680664062
    4. 'raw' → logprob: -12.266372680664062
    5. '   ' → logprob: -13.141372680664062
    6. ' raw' → logprob: -13.766372680664062
    7. ' ' → logprob: -15.016372680664062
    8. '	self' → logprob: -15.141372680664062
    9. '_raw' → logprob: -16.391372680664062
    10. 's' → logprob: -17.016372680664062

Token 328: '.raw' (ID: 36636)
  Prédit: '.raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raw' → logprob: -0.00044675805838778615
    2. '.' → logprob: -7.750446796417236
    3. 'raw' → logprob: -12.000446319580078
    4. '.data' → logprob: -12.125446319580078
    5. '._' → logprob: -13.625446319580078
    6. '.input' → logprob: -14.000446319580078
    7. ' .' → logprob: -14.125446319580078
    8. '.lines' → logprob: -14.625446319580078
    9. ' raw' → logprob: -14.875446319580078
    10. '	raw' → logprob: -15.375446319580078

Token 329: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.003638203488662839
    2. '_' → logprob: -5.62863826751709
    3. ' _' → logprob: -11.12863826751709
    4. '_inputs' → logprob: -11.75363826751709
    5. '_output' → logprob: -12.87863826751709
    6. '_in' → logprob: -13.25363826751709
    7. '_data' → logprob: -13.37863826751709
    8. '_raw' → logprob: -13.62863826751709
    9. '_code' → logprob: -13.75363826751709
    10. '_i' → logprob: -14.12863826751709

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012532602995634079
    2. ' =' → logprob: -4.387532711029053
    3. '   ' → logprob: -11.387532234191895
    4. ')' → logprob: -13.137532234191895
    5. '.strip' → logprob: -13.137532234191895
    6. '       ' → logprob: -13.387532234191895
    7. '.split' → logprob: -14.012532234191895
    8. '=self' → logprob: -14.137532234191895
    9. '=
' → logprob: -14.262532234191895
    10. ' ' → logprob: -14.637532234191895

Token 331: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.04859304800629616
    2. ' raw' → logprob: -3.048593044281006
    3. '	raw' → logprob: -12.673593521118164
    4. '(raw' → logprob: -13.173593521118164
    5. '_raw' → logprob: -15.173593521118164
    6. '.raw' → logprob: -15.548593521118164
    7. '/raw' → logprob: -16.798593521118164
    8. 'Raw' → logprob: -17.048593521118164
    9. '   ' → logprob: -17.923593521118164
    10. ' ' → logprob: -18.673593521118164

Token 332: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.3596853831550106e-05
    2. 'input' → logprob: -10.875053405761719
    3. '_' → logprob: -11.000053405761719
    4. 'put' → logprob: -11.750053405761719
    5. '_in' → logprob: -13.250053405761719
    6. ' _' → logprob: -13.500053405761719
    7. '_raw' → logprob: -13.500053405761719
    8. '_inputs' → logprob: -13.500053405761719
    9. '```' → logprob: -14.125053405761719
    10. '_put' → logprob: -14.500053405761719

Token 333: '.strip' (ID: 40613)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9629553556442261
    2. '   ' → logprob: -1.337955355644226
    3. '<|end|>' → logprob: -1.337955355644226
    4. '    
' → logprob: -3.2129554748535156
    5. 'def' → logprob: -3.3379554748535156
    6. '<|end|>' → logprob: -5.587955474853516
    7. '        
' → logprob: -5.837955474853516
    8. '       ' → logprob: -6.337955474853516
    9. ',' → logprob: -6.337955474853516
    10. ' def' → logprob: -6.587955474853516

Token 334: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001382241171086207
    2. ')' → logprob: -9.750138282775879
    3. '().' → logprob: -10.250138282775879
    4. '())' → logprob: -11.250138282775879
    5. '()\' → logprob: -11.625138282775879
    6. '()
' → logprob: -11.750138282775879
    7. '(' → logprob: -12.000138282775879
    8. '()

' → logprob: -13.125138282775879
    9. '()`' → logprob: -13.250138282775879
    10. '(),' → logprob: -13.875138282775879

Token 335: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.0
    3. 'strip' → logprob: -18.5
    4. 'lines' → logprob: -19.125
    5. 'spl' → logprob: -19.375
    6. '(split' → logprob: -20.25
    7. 'replace' → logprob: -20.5
    8. '```' → logprob: -21.75
    9. 'rstrip' → logprob: -21.75
    10. '.split' → logprob: -22.625

Token 336: '('\' (ID: 24345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15436647832393646
    2. '[' → logprob: -3.1543664932250977
    3. '()' → logprob: -3.4043664932250977
    4. '   ' → logprob: -3.6543664932250977
    5. 'def' → logprob: -3.9043664932250977
    6. '('' → logprob: -4.904366493225098
    7. '('\' → logprob: -5.154366493225098
    8. '(
' → logprob: -5.904366493225098
    9. '```' → logprob: -6.904366493225098
    10. ')' → logprob: -7.029366493225098

Token 337: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. '\n' → logprob: -14.75
    3. ' n' → logprob: -18.375
    4. '
' → logprob: -19.75
    5. 'newline' → logprob: -21.625
    6. '	n' → logprob: -21.875
    7. 't' → logprob: -22.0
    8. '```' → logprob: -22.875
    9. ')n' → logprob: -23.125
    10. 'ndef' → logprob: -23.25

Token 338: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004096208605915308
    2. ')' → logprob: -5.504096031188965
    3. ']' → logprob: -11.629096031188965
    4. '")' → logprob: -11.879096031188965
    5. '')"' → logprob: -14.254096031188965
    6. '')
' → logprob: -14.879096031188965
    7. ''' → logprob: -15.004096031188965
    8. '']' → logprob: -15.754096031188965
    9. '   ' → logprob: -16.50409698486328
    10. '[' → logprob: -16.75409698486328

Token 339: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31404757499694824
    2. '
' → logprob: -1.9390475749969482
    3. 'def' → logprob: -2.1890475749969482
    4. ' def' → logprob: -5.064047813415527
    5. '    
' → logprob: -5.439047813415527
    6. '       ' → logprob: -6.564047813415527
    7. '	def' → logprob: -7.564047813415527
    8. '<|end|>' → logprob: -7.564047813415527
    9. '        
' → logprob: -8.189047813415527
    10. '

' → logprob: -9.314047813415527

Token 340: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10541132092475891
    2. '       ' → logprob: -2.7304112911224365
    3. '   ' → logprob: -3.7304112911224365
    4. 'def' → logprob: -4.605411529541016
    5. ' self' → logprob: -7.105411529541016
    6. '
' → logprob: -11.230411529541016
    7. '	self' → logprob: -11.605411529541016
    8. ' ' → logprob: -12.105411529541016
    9. '```' → logprob: -12.105411529541016
    10. '    
' → logprob: -12.855411529541016

Token 341: '.index' (ID: 9736)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.37726786732673645
    2. '.index' → logprob: -1.752267837524414
    3. '.blocks' → logprob: -2.752267837524414
    4. '.lines' → logprob: -3.127267837524414
    5. '.data' → logprob: -4.252267837524414
    6. 'index' → logprob: -5.127267837524414
    7. 'current' → logprob: -5.752267837524414
    8. 'data' → logprob: -6.377267837524414
    9. '.pos' → logprob: -6.502267837524414
    10. '.tokens' → logprob: -6.877267837524414

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6470341086387634
    2. ' +=' → logprob: -1.2720341682434082
    3. '=' → logprob: -1.7720341682434082
    4. '+=' → logprob: -3.647034168243408
    5. '+' → logprob: -10.89703369140625
    6. '<|end|>' → logprob: -10.89703369140625
    7. ' ' → logprob: -11.52203369140625
    8. ' -=' → logprob: -11.89703369140625
    9. ')' → logprob: -12.02203369140625
    10. '   ' → logprob: -12.27203369140625

Token 343: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.875015258789062
    4. '۰' → logprob: -20.125015258789062
    5. '  ' → logprob: -20.625015258789062
    6. '<|end|>' → logprob: -21.000015258789062
    7. '1' → logprob: -21.125015258789062
    8. '-' → logprob: -21.500015258789062
    9. '=' → logprob: -21.875015258789062
    10. '```' → logprob: -22.812515258789062

Token 344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '1' → logprob: -16.500001907348633
    4. '-' → logprob: -16.500001907348633
    5. '۰' → logprob: -19.125001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '=' → logprob: -19.750001907348633
    8. ' -' → logprob: -20.250001907348633
    9. '```' → logprob: -20.312501907348633
    10. '０' → logprob: -21.187501907348633

Token 345: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5564329624176025
    2. '
' → logprob: -1.3064329624176025
    3. 'def' → logprob: -2.3064329624176025
    4. ' def' → logprob: -3.9314329624176025
    5. '<|end|>' → logprob: -3.9314329624176025
    6. '    
' → logprob: -4.306432723999023
    7. '	def' → logprob: -7.431432723999023
    8. '<|end|>' → logprob: -7.431432723999023
    9. '

' → logprob: -7.556432723999023
    10. ' 
' → logprob: -7.681432723999023

Token 346: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6016828417778015
    2. '   ' → logprob: -1.6016829013824463
    3. ' def' → logprob: -2.2266829013824463
    4. '
' → logprob: -2.6016829013824463
    5. '<|end|>' → logprob: -2.8516829013824463
    6. '    
' → logprob: -5.601682662963867
    7. ' ' → logprob: -5.851682662963867
    8. '<|end|>' → logprob: -6.601682662963867
    9. '

' → logprob: -6.726682662963867
    10. '	def' → logprob: -7.351682662963867

Token 347: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00044401636114344
    2. ' def' → logprob: -7.750443935394287
    3. '   ' → logprob: -11.375444412231445
    4. '
' → logprob: -13.750444412231445
    5. '	def' → logprob: -14.125444412231445
    6. 'de' → logprob: -17.625444412231445
    7. '```' → logprob: -18.500444412231445
    8. '    
' → logprob: -18.625444412231445
    9. ':def' → logprob: -18.750444412231445
    10. '

' → logprob: -19.750444412231445

Token 348: ' read' (ID: 1729)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.3962033987045288
    2. 'next' → logprob: -1.1462033987045288
    3. 'read' → logprob: -5.021203517913818
    4. ' has' → logprob: -6.521203517913818
    5. ' next' → logprob: -7.271203517913818
    6. 'parse' → logprob: -7.771203517913818
    7. '__' → logprob: -10.14620304107666
    8. 'get' → logprob: -10.39620304107666
    9. '_next' → logprob: -10.64620304107666
    10. ' read' → logprob: -12.77120304107666

Token 349: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.006855439394712448
    2. 'line' → logprob: -5.131855487823486
    3. '_int' → logprob: -7.506855487823486
    4. 'int' → logprob: -8.381855010986328
    5. '_next' → logprob: -9.506855010986328
    6. '_block' → logprob: -10.381855010986328
    7. '_' → logprob: -10.506855010986328
    8. 'Line' → logprob: -12.506855010986328
    9. '()' → logprob: -12.756855010986328
    10. '_token' → logprob: -13.006855010986328

Token 350: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14317600429058075
    2. '()' → logprob: -2.0181760787963867
    3. '(' → logprob: -8.268176078796387
    4. 's' → logprob: -9.643176078796387
    5. 'self' → logprob: -9.768176078796387
    6. '_line' → logprob: -10.393176078796387
    7. '():
' → logprob: -10.768176078796387
    8. '()(' → logprob: -11.018176078796387
    9. '():' → logprob: -11.268176078796387
    10. '(s' → logprob: -12.143176078796387

Token 351: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08100254088640213
    2. '):
' → logprob: -2.7060024738311768
    3. ')' → logprob: -4.581002712249756
    4. 'self' → logprob: -7.331002712249756
    5. '(self' → logprob: -9.956002235412598
    6. '):

' → logprob: -11.206002235412598
    7. ' ):' → logprob: -11.456002235412598
    8. '):
' → logprob: -11.831002235412598
    9. '():' → logprob: -12.081002235412598
    10. 's' → logprob: -12.331002235412598

Token 352: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.282195508480072
    2. '       ' → logprob: -1.6571955680847168
    3. '()
' → logprob: -3.532195568084717
    4. 'return' → logprob: -4.907195568084717
    5. '        ' → logprob: -5.657195568084717
    6. '(self' → logprob: -5.782195568084717
    7. ' return' → logprob: -6.032195568084717
    8. '   ' → logprob: -6.157195568084717
    9. '(' → logprob: -6.282195568084717
    10. ' ' → logprob: -6.907195568084717

Token 353: ' val' (ID: 1459)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5128952264785767
    2. 'val' (adapté à ' val') → logprob: -1.7628952264785767
    3. ' val' → logprob: -2.012895107269287
    4. ' value' → logprob: -2.512895107269287
    5. 'line' → logprob: -5.137895107269287
    6. 'result' → logprob: -5.512895107269287
    7. ' line' → logprob: -6.262895107269287
    8. 'int' → logprob: -6.887895107269287
    9. 'res' → logprob: -7.262895107269287
    10. ' res' → logprob: -7.887895107269287

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04320768639445305
    2. '=' → logprob: -3.1682076454162598
    3. '()' → logprob: -8.793208122253418
    4. '   ' → logprob: -10.918208122253418
    5. ' ' → logprob: -10.918208122253418
    6. '  ' → logprob: -11.418208122253418
    7. '=self' → logprob: -12.668208122253418
    8. '       ' → logprob: -13.418208122253418
    9. ',' → logprob: -13.918208122253418
    10. '    ' → logprob: -14.293208122253418

Token 355: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014165511354804039
    2. ' int' → logprob: -4.26416540145874
    3. 'self' → logprob: -13.139165878295898
    4. ' self' → logprob: -17.3891658782959
    5. '(int' → logprob: -17.7641658782959
    6. '   ' → logprob: -18.5141658782959
    7. '	int' → logprob: -20.3891658782959
    8. '[int' → logprob: -20.7641658782959
    9. '=int' → logprob: -21.1391658782959
    10. '<int' → logprob: -21.3891658782959

Token 356: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. 'self' → logprob: -16.00001335144043
    4. '(
' → logprob: -20.12501335144043
    5. '(this' → logprob: -20.37501335144043
    6. '[self' → logprob: -21.00001335144043
    7. '	self' → logprob: -21.37501335144043
    8. '((' → logprob: -21.37501335144043
    9. ' (' → logprob: -21.62501335144043
    10. ' self' → logprob: -22.00001335144043

Token 357: '.raw' (ID: 36636)
  Prédit: '.raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raw' → logprob: -3.128163257315464e-07
    2. 'raw' → logprob: -15.5
    3. '.' → logprob: -17.25
    4. ' .' → logprob: -17.75
    5. '	raw' → logprob: -18.25
    6. '.self' → logprob: -18.5
    7. ' raw' → logprob: -20.375
    8. '.
' → logprob: -20.625
    9. '(raw' → logprob: -20.875
    10. '.Raw' → logprob: -21.0

Token 358: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.4121114822482923e-06
    2. 'input' → logprob: -12.875003814697266
    3. 'Input' → logprob: -15.375003814697266
    4. '_line' → logprob: -15.750003814697266
    5. '_inputs' → logprob: -15.750003814697266
    6. 'self' → logprob: -16.250003814697266
    7. 'put' → logprob: -17.125003814697266
    8. '[self' → logprob: -17.375003814697266
    9. '_int' → logprob: -17.750003814697266
    10. '_INPUT' → logprob: -17.750003814697266

Token 359: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -11.500011444091797
    3. 'self' → logprob: -13.500011444091797
    4. '[
' → logprob: -17.000011444091797
    5. ' [' → logprob: -17.250011444091797
    6. '   ' → logprob: -17.250011444091797
    7. ' self' → logprob: -18.625011444091797
    8. ' ' → logprob: -20.125011444091797
    9. ')[' → logprob: -20.875011444091797
    10. '(self' → logprob: -20.875011444091797

Token 360: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.018488790839910507
    2. 'index' → logprob: -4.018488883972168
    3. 'self' → logprob: -8.393488883972168
    4. '.' → logprob: -9.143488883972168
    5. ' .' → logprob: -12.893488883972168
    6. ' index' → logprob: -13.643488883972168
    7. '.i' → logprob: -15.018488883972168
    8. '[index' → logprob: -15.143488883972168
    9. '_index' → logprob: -15.393488883972168
    10. '	index' → logprob: -15.643488883972168

Token 361: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05418194830417633
    2. ')' → logprob: -3.3041820526123047
    3. '])
' → logprob: -4.179182052612305
    4. ')
' → logprob: -7.804182052612305
    5. '.strip' → logprob: -8.804182052612305
    6. ']' → logprob: -9.679182052612305
    7. ' ])' → logprob: -10.554182052612305
    8. '[self' → logprob: -10.679182052612305
    9. ' )' → logprob: -11.304182052612305
    10. '.split' → logprob: -12.804182052612305

Token 362: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05504578351974487
    2. 'self' → logprob: -3.4300458431243896
    3. '       ' → logprob: -4.3050456047058105
    4. '<|end|>' → logprob: -5.0550456047058105
    5. ' self' → logprob: -7.5550456047058105
    6. '[self' → logprob: -8.930046081542969
    7. '\n' → logprob: -9.180046081542969
    8. '<|end|>' → logprob: -9.180046081542969
    9. '```' → logprob: -9.305046081542969
    10. '        
' → logprob: -9.680046081542969

Token 363: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0053098928183317184
    2. ' self' → logprob: -5.25531005859375
    3. '       ' → logprob: -9.50531005859375
    4. '
' → logprob: -14.00531005859375
    5. '	self' → logprob: -14.38031005859375
    6. '\' → logprob: -16.50531005859375
    7. '```' → logprob: -16.88031005859375
    8. '        
' → logprob: -17.00531005859375
    9. '   ' → logprob: -17.38031005859375
    10. '[self' → logprob: -17.50531005859375

Token 364: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.005434504244476557
    2. 'index' → logprob: -5.255434513092041
    3. '.' → logprob: -8.630434036254883
    4. '_index' → logprob: -11.255434036254883
    5. ' index' → logprob: -12.130434036254883
    6. '=index' → logprob: -13.380434036254883
    7. ' .' → logprob: -14.130434036254883
    8. '	index' → logprob: -14.630434036254883
    9. '[index' → logprob: -15.255434036254883
    10. ':index' → logprob: -15.505434036254883

Token 365: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048642098903656006
    2. ' +=' → logprob: -3.048642158508301
    3. '+' → logprob: -9.9236421585083
    4. '<|end|>' → logprob: -13.0486421585083
    5. ']+=' → logprob: -13.4236421585083
    6. '+="' → logprob: -13.7986421585083
    7. '+='' → logprob: -14.2986421585083
    8. '=' → logprob: -15.9236421585083
    9. '+=(' → logprob: -16.423641204833984
    10. '```' → logprob: -16.673641204833984

Token 366: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -22.37502098083496
    4. '   ' → logprob: -22.75002098083496
    5. '
' → logprob: -23.37502098083496
    6. '１' → logprob: -24.00002098083496
    7. '۱' → logprob: -25.00002098083496
    8. '0' → logprob: -25.87502098083496
    9. '+' → logprob: -26.00002098083496
    10. ' ' → logprob: -26.12502098083496

Token 367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -22.625
    4. '
' → logprob: -23.125
    5. '   ' → logprob: -23.25
    6. '１' → logprob: -23.875
    7. '۱' → logprob: -24.0
    8. '১' → logprob: -24.875
    9. '१' → logprob: -24.875
    10. '' → logprob: -25.25

Token 368: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5401281118392944
    2. '       ' → logprob: -0.9151281118392944
    3. ' return' → logprob: -4.290128231048584
    4. '
' → logprob: -6.165128231048584
    5. '   ' → logprob: -7.540128231048584
    6. '	return' → logprob: -8.415127754211426
    7. '<|end|>' → logprob: -9.290127754211426
    8. '        
' → logprob: -9.790127754211426
    9. ' 
' → logprob: -10.540127754211426
    10. ':return' → logprob: -10.665127754211426

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11069659888744354
    2. '
' → logprob: -2.98569655418396
    3. 'return' → logprob: -3.11069655418396
    4. ' return' → logprob: -5.610696792602539
    5. '   ' → logprob: -6.360696792602539
    6. '<|end|>' → logprob: -6.360696792602539
    7. '	return' → logprob: -6.735696792602539
    8. '	' → logprob: -8.235696792602539
    9. '        
' → logprob: -8.235696792602539
    10. '\n' → logprob: -8.360696792602539

Token 370: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006733965128660202
    2. ' return' → logprob: -5.2567338943481445
    3. '       ' → logprob: -6.5067338943481445
    4. '	return' → logprob: -12.381733894348145
    5. '   ' → logprob: -13.881733894348145
    6. ':return' → logprob: -15.881733894348145
    7. '{return' → logprob: -16.13173484802246
    8. '	' → logprob: -16.50673484802246
    9. '```' → logprob: -16.50673484802246
    10. '@return' → logprob: -18.13173484802246

Token 371: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0001584850688232109
    2. ' val' → logprob: -8.750158309936523
    3. '	val' → logprob: -22.250158309936523
    4. '(val' → logprob: -22.750158309936523
    5. '[val' → logprob: -24.000158309936523
    6. 'v' → logprob: -24.500158309936523
    7. '_val' → logprob: -25.625158309936523
    8. ',val' → logprob: -25.875158309936523
    9. 'vall' → logprob: -26.250158309936523
    10. 'Val' → logprob: -26.625158309936523

Token 372: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5272213220596313
    2. '   ' → logprob: -1.0272213220596313
    3. '```' → logprob: -3.277221202850342
    4. ' def' → logprob: -4.402221202850342
    5. '<|end|>' → logprob: -7.152221202850342
    6. '	def' → logprob: -7.527221202850342
    7. '    
' → logprob: -8.4022216796875
    8. '
' → logprob: -8.7772216796875
    9. ' ' → logprob: -11.4022216796875
    10. '<|end|>' → logprob: -11.4022216796875

Token 374: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.5213274309644476e-05
    2. ' def' → logprob: -11.250015258789062
    3. '   ' → logprob: -13.125015258789062
    4. '	def' → logprob: -17.000015258789062
    5. '```' → logprob: -18.875015258789062
    6. ' ' → logprob: -19.375015258789062
    7. 'd' → logprob: -19.750015258789062
    8. '    
' → logprob: -19.750015258789062
    9. '  ' → logprob: -20.750015258789062
    10. '
' → logprob: -21.375015258789062

Token 375: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.003627865808084607
    2. ' read' → logprob: -5.628627777099609
    3. 'has' → logprob: -11.00362777709961
    4. 'peek' → logprob: -12.75362777709961
    5. 'next' → logprob: -13.00362777709961
    6. 'parse' → logprob: -13.25362777709961
    7. ' has' → logprob: -13.37862777709961
    8. '	read' → logprob: -14.00362777709961
    9. ' readline' → logprob: -14.25362777709961
    10. 'def' → logprob: -15.25362777709961

Token 376: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.39243799448013306
    2. '_list' → logprob: -1.1424379348754883
    3. '_block' → logprob: -5.517437934875488
    4. '_' → logprob: -6.767437934875488
    5. '_int' → logprob: -9.267437934875488
    6. '_array' → logprob: -9.767437934875488
    7. 'list' → logprob: -9.767437934875488
    8. '_tuple' → logprob: -10.267437934875488
    9. '_lines' → logprob: -10.642437934875488
    10. '_str' → logprob: -10.767437934875488

Token 377: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26107174158096313
    2. '_list' → logprob: -1.5110716819763184
    3. '()' → logprob: -5.636071681976318
    4. '_array' → logprob: -5.761071681976318
    5. 'list' → logprob: -6.386071681976318
    6. '_line' → logprob: -7.386071681976318
    7. 'List' → logprob: -10.761072158813477
    8. 'array' → logprob: -11.261072158813477
    9. '_arr' → logprob: -11.261072158813477
    10. 'line' → logprob: -11.886072158813477

Token 378: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.3464544432936236e-05
    2. '(' → logprob: -10.125043869018555
    3. ' (' → logprob: -13.250043869018555
    4. '(s' → logprob: -14.250043869018555
    5. 'self' → logprob: -14.625043869018555
    6. '(sel' → logprob: -15.500043869018555
    7. '()' → logprob: -16.125043869018555
    8. '(se' → logprob: -16.125043869018555
    9. '(
' → logprob: -16.750043869018555
    10. '   ' → logprob: -17.750043869018555

Token 379: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11144740134477615
    2. '):' → logprob: -2.861447334289551
    3. '():' → logprob: -4.236447334289551
    4. '()' → logprob: -4.361447334289551
    5. '):
' → logprob: -4.986447334289551
    6. ')' → logprob: -5.111447334289551
    7. '():
' → logprob: -5.611447334289551
    8. 'self' → logprob: -5.861447334289551
    9. '(' → logprob: -6.861447334289551
    10. '()):
' → logprob: -7.861447334289551

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.816059947013855
    2. '()' → logprob: -1.441059947013855
    3. 'return' → logprob: -1.691059947013855
    4. '(self' → logprob: -2.3160600662231445
    5. ' return' → logprob: -4.1910600662231445
    6. '(' → logprob: -4.1910600662231445
    7. 'self' → logprob: -6.1910600662231445
    8. '():' → logprob: -6.6910600662231445
    9. '{' → logprob: -7.6910600662231445
    10. ' (' → logprob: -7.8160600662231445

Token 381: ' vals' (ID: 58985)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.48394134640693665
    2. ' list' → logprob: -0.9839413166046143
    3. 'return' → logprob: -4.858941555023193
    4. ' return' → logprob: -6.233941555023193
    5. 'map' → logprob: -10.233941078186035
    6. '       ' → logprob: -10.608941078186035
    7. ' map' → logprob: -11.358941078186035
    8. '[' → logprob: -12.233941078186035
    9. '   ' → logprob: -12.608941078186035
    10. '=list' → logprob: -12.858941078186035

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08028727024793625
    2. ' =' → logprob: -2.580287218093872
    3. '()' → logprob: -6.580287456512451
    4. '   ' → logprob: -12.830286979675293
    5. '=[]' → logprob: -13.830286979675293
    6. ' ' → logprob: -13.955286979675293
    7. '＝' → logprob: -14.080286979675293
    8. '=self' → logprob: -14.580286979675293
    9. '[]' → logprob: -14.705286979675293
    10. '()=>' → logprob: -15.205286979675293

Token 383: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.018150413408875465
    2. ' list' → logprob: -4.018150329589844
    3. '[list' → logprob: -14.518150329589844
    4. '[' → logprob: -17.018150329589844
    5. ' [' → logprob: -20.143150329589844
    6. 'List' → logprob: -21.018150329589844
    7. '	list' → logprob: -21.018150329589844
    8. 'map' → logprob: -21.143150329589844
    9. '(list' → logprob: -21.643150329589844
    10. '=list' → logprob: -22.518150329589844

Token 384: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.166338137816638e-05
    2. 'map' → logprob: -10.500031471252441
    3. '(' → logprob: -12.500031471252441
    4. ' map' → logprob: -15.375031471252441
    5. '	map' → logprob: -16.750032424926758
    6. '(int' → logprob: -17.250032424926758
    7. '_map' → logprob: -18.000032424926758
    8. '.map' → logprob: -18.125032424926758
    9. '(
' → logprob: -18.625032424926758
    10. ',map' → logprob: -19.000032424926758

Token 385: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.558399319241289e-05
    2. 'int' → logprob: -11.000025749206543
    3. '(' → logprob: -11.750025749206543
    4. ',int' → logprob: -15.000025749206543
    5. ' int' → logprob: -15.375025749206543
    6. '=int' → logprob: -16.250024795532227
    7. '<int' → logprob: -16.625024795532227
    8. '[int' → logprob: -16.750024795532227
    9. '(lambda' → logprob: -16.750024795532227
    10. '(str' → logprob: -17.875024795532227

Token 386: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010139952646568418
    2. '(' → logprob: -7.626014232635498
    3. ' (' → logprob: -8.25101375579834
    4. 'self' → logprob: -9.00101375579834
    5. ',' → logprob: -9.12601375579834
    6. ',self' → logprob: -10.50101375579834
    7. ' self' → logprob: -12.62601375579834
    8. '(
' → logprob: -14.00101375579834
    9. ')' → logprob: -14.75101375579834
    10. ')(' → logprob: -15.12601375579834

Token 387: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015028368216007948
    2. ' self' → logprob: -6.501502990722656
    3. '(self' → logprob: -14.751502990722656
    4. '   ' → logprob: -18.126502990722656
    5. '           ' → logprob: -18.751502990722656
    6. '               ' → logprob: -18.876502990722656
    7. '	self' → logprob: -19.501502990722656
    8. '       ' → logprob: -19.501502990722656
    9. ' ' → logprob: -19.751502990722656
    10. '                   ' → logprob: -19.876502990722656

Token 388: '.raw' (ID: 36636)
  Prédit: '.raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raw' → logprob: -2.7729658540920354e-05
    2. 'raw' → logprob: -10.875027656555176
    3. ' .' → logprob: -12.750027656555176
    4. '.' → logprob: -13.250027656555176
    5. '(raw' → logprob: -13.500027656555176
    6. '.self' → logprob: -13.625027656555176
    7. '	raw' → logprob: -14.625027656555176
    8. ').' → logprob: -15.250027656555176
    9. 'self' → logprob: -15.250027656555176
    10. '
' → logprob: -16.000028610229492

Token 389: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.5301375985145569
    2. 'raw' → logprob: -1.405137538909912
    3. '.raw' → logprob: -2.155137538909912
    4. '(raw' → logprob: -3.405137538909912
    5. '.split' → logprob: -5.030137538909912
    6. '.readline' → logprob: -5.405137538909912
    7. 'split' → logprob: -6.655137538909912
    8. 'input' → logprob: -6.905137538909912
    9. 'self' → logprob: -7.030137538909912
    10. 'Input' → logprob: -7.530137538909912

Token 390: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -5.085517113911919e-05
    2. '[' → logprob: -10.37505054473877
    3. 'self' → logprob: -11.12505054473877
    4. '   ' → logprob: -13.12505054473877
    5. ' [' → logprob: -13.25005054473877
    6. '(self' → logprob: -14.75005054473877
    7. '[
' → logprob: -15.62505054473877
    8. ' self' → logprob: -15.87505054473877
    9. '       ' → logprob: -16.250051498413086
    10. ')[' → logprob: -16.750051498413086

Token 391: '.index' (ID: 9736)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.002477200934663415
    2. 'self' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.502477645874023
    4. '[' → logprob: -14.502477645874023
    5. 'index' → logprob: -15.502477645874023
    6. ' self' → logprob: -16.002477645874023
    7. '       ' → logprob: -17.502477645874023
    8. ' ' → logprob: -17.877477645874023
    9. '	self' → logprob: -18.002477645874023
    10. '(self' → logprob: -18.127477645874023

Token 392: '].' (ID: 1651)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0012274926993995905
    2. 'self' → logprob: -6.876227378845215
    3. '].' → logprob: -8.751227378845215
    4. '[' → logprob: -11.376227378845215
    5. '(self' → logprob: -11.751227378845215
    6. '][' → logprob: -12.001227378845215
    7. ']' → logprob: -12.001227378845215
    8. ' self' → logprob: -12.626227378845215
    9. ']))' → logprob: -14.751227378845215
    10. '.split' → logprob: -15.126227378845215

Token 393: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01815626211464405
    2. 'strip' → logprob: -4.018156051635742
    3. ' split' → logprob: -12.018156051635742
    4. ' strip' → logprob: -15.393156051635742
    5. 'rstrip' → logprob: -16.518156051635742
    6. '(split' → logprob: -17.143156051635742
    7. 'spl' → logprob: -18.393156051635742
    8. '.split' → logprob: -18.768156051635742
    9. '.strip' → logprob: -19.893156051635742
    10. '_split' → logprob: -20.643156051635742

Token 394: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00882728397846222
    2. '()' → logprob: -4.758827209472656
    3. '())' → logprob: -9.508827209472656
    4. '()))
' → logprob: -9.508827209472656
    5. '('' → logprob: -10.008827209472656
    6. '()));' → logprob: -12.008827209472656
    7. '())))' → logprob: -12.383827209472656
    8. '))' → logprob: -12.633827209472656
    9. '()))

' → logprob: -13.758827209472656
    10. '(' → logprob: -13.758827209472656

Token 395: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014322631061077118
    2. '       ' → logprob: -4.264322757720947
    3. ' self' → logprob: -8.764322280883789
    4. '	self' → logprob: -13.389322280883789
    5. '   ' → logprob: -14.139322280883789
    6. '```' → logprob: -15.139322280883789
    7. '[self' → logprob: -15.639322280883789
    8. '(self' → logprob: -16.51432228088379
    9. '​' → logprob: -16.76432228088379
    10. '\' → logprob: -17.26432228088379

Token 397: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.002496587112545967
    2. '.index' → logprob: -6.002496719360352
    3. '_index' → logprob: -11.002496719360352
    4. ' index' → logprob: -12.502496719360352
    5. '	index' → logprob: -15.752496719360352
    6. '[index' → logprob: -16.37749671936035
    7. '#index' → logprob: -16.50249671936035
    8. '.' → logprob: -16.62749671936035
    9. '=index' → logprob: -16.62749671936035
    10. '@index' → logprob: -17.00249671936035

Token 398: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759648680686951
    2. ' +=' → logprob: -0.8259648680686951
    3. ']+=' → logprob: -10.95096492767334
    4. '+' → logprob: -12.45096492767334
    5. '    ' → logprob: -13.20096492767334
    6. ' ' → logprob: -14.82596492767334
    7. '++' → logprob: -15.07596492767334
    8. '+='' → logprob: -15.32596492767334
    9. '+="' → logprob: -15.45096492767334
    10. '        ' → logprob: -15.45096492767334

Token 399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -21.75000762939453
    4. '１' → logprob: -22.75000762939453
    5. '۱' → logprob: -23.37500762939453
    6. '   ' → logprob: -23.62500762939453
    7. '
' → logprob: -24.62500762939453
    8. '0' → logprob: -25.43750762939453
    9. '+' → logprob: -25.43750762939453
    10. '১' → logprob: -25.56250762939453

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -20.875
    4. '１' → logprob: -21.875
    5. '۱' → logprob: -22.375
    6. '
' → logprob: -22.875
    7. '   ' → logprob: -23.0
    8. '১' → logprob: -24.125
    9. '१' → logprob: -24.125
    10. '١' → logprob: -24.375

Token 401: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026359455659985542
    2. 'return' → logprob: -6.002635955810547
    3. ' return' → logprob: -9.377635955810547
    4. '   ' → logprob: -10.502635955810547
    5. '	' → logprob: -10.877635955810547
    6. '<|end|>' → logprob: -11.252635955810547
    7. '	return' → logprob: -11.627635955810547
    8. ',' → logprob: -13.377635955810547
    9. ':return' → logprob: -13.377635955810547
    10. '```' → logprob: -13.752635955810547

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007717476109974086
    2. 'return' → logprob: -7.250771522521973
    3. ' return' → logprob: -10.375771522521973
    4. '   ' → logprob: -10.750771522521973
    5. '	return' → logprob: -12.375771522521973
    6. '<|end|>' → logprob: -12.750771522521973
    7. '	' → logprob: -14.125771522521973
    8. ':return' → logprob: -14.875771522521973
    9. '{return' → logprob: -15.375771522521973
    10. '```' → logprob: -15.500771522521973

Token 403: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009395699598826468
    2. '       ' → logprob: -7.00093936920166
    3. ' return' → logprob: -10.50093936920166
    4. '	return' → logprob: -14.62593936920166
    5. '```' → logprob: -16.750940322875977
    6. '{return' → logprob: -16.875940322875977
    7. '   ' → logprob: -17.500940322875977
    8. ':return' → logprob: -17.875940322875977
    9. 'eturn' → logprob: -19.250940322875977
    10. ')return' → logprob: -19.625940322875977

Token 404: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.00020413640595506877
    2. ' vals' → logprob: -8.500204086303711
    3. 'val' → logprob: -14.500204086303711
    4. '(vals' → logprob: -17.12520408630371
    5. 'vall' → logprob: -20.12520408630371
    6. '_vals' → logprob: -20.37520408630371
    7. 'vars' → logprob: -20.62520408630371
    8. 'Vals' → logprob: -20.75020408630371
    9. 'ints' → logprob: -21.87520408630371
    10. ' ' → logprob: -22.62520408630371

Token 405: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011172551661729813
    2. 'class' → logprob: -4.636172771453857
    3. 'if' → logprob: -7.136172771453857
    4. '```' → logprob: -8.1361722946167
    5. 'block' → logprob: -8.6361722946167
    6. 'blocks' → logprob: -9.2611722946167
    7. '#' → logprob: -10.5111722946167
    8. '   ' → logprob: -11.8861722946167
    9. 'n' → logprob: -12.0111722946167
    10. '
' → logprob: -13.2611722946167

Token 407: ' Dangerous' (ID: 148632)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.264472097158432
    2. 'Block' → logprob: -2.389472007751465
    3. 'Solver' → logprob: -3.389472007751465
    4. 'Main' → logprob: -3.639472007751465
    5. 'Output' → logprob: -3.639472007751465
    6. 'Tower' → logprob: -4.014472007751465
    7. ' Solution' → logprob: -4.264472007751465
    8. 'Problem' → logprob: -4.764472007751465
    9. 'Test' → logprob: -5.514472007751465
    10. 'main' → logprob: -6.264472007751465

Token 408: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -0.3582232594490051
    2. 'Block' → logprob: -1.2332231998443604
    3. 'Area' → logprob: -5.8582234382629395
    4. 'Stack' → logprob: -5.8582234382629395
    5. 'Zone' → logprob: -7.1082234382629395
    6. 'Blocks' → logprob: -7.1082234382629395
    7. 'Builder' → logprob: -7.6082234382629395
    8. 'Object' → logprob: -8.108222961425781
    9. ':' → logprob: -8.358222961425781
    10. 'ness' → logprob: -8.733222961425781

Token 409: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032709988299757242
    2. ':
' → logprob: -6.253271102905273
    3. 'Builder' → logprob: -6.628271102905273
    4. '.Builder' → logprob: -12.378271102905273
    5. '{' → logprob: -12.628271102905273
    6. '(' → logprob: -13.253271102905273
    7. '():' → logprob: -13.503271102905273
    8. '   ' → logprob: -13.628271102905273
    9. '_builder' → logprob: -13.628271102905273
    10. ':

' → logprob: -13.753271102905273

Token 410: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025003906339406967
    2. ':
' → logprob: -6.002500534057617
    3. ':def' → logprob: -11.127500534057617
    4. ' :' → logprob: -12.127500534057617
    5. '<|end|>' → logprob: -14.002500534057617
    6. ':

' → logprob: -14.002500534057617
    7. '():' → logprob: -14.127500534057617
    8. '(' → logprob: -14.502500534057617
    9. '):' → logprob: -15.127500534057617
    10. 'def' → logprob: -15.502500534057617

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05012895166873932
    2. ' def' → logprob: -3.300128936767578
    3. 'def' → logprob: -4.425128936767578
    4. 'class' → logprob: -11.050128936767578
    5. '```' → logprob: -11.050128936767578
    6. '	def' → logprob: -12.425128936767578
    7. ':' → logprob: -13.425128936767578
    8. '    
' → logprob: -13.550128936767578
    9. '    ' → logprob: -14.050128936767578
    10. ' class' → logprob: -14.550128936767578

Token 412: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.40495431423187256
    2. ' def' → logprob: -1.1549543142318726
    3. '   ' → logprob: -4.029954433441162
    4. '__' → logprob: -10.029953956604004
    5. ':' → logprob: -10.654953956604004
    6. 'class' → logprob: -11.154953956604004
    7. '    ' → logprob: -11.279953956604004
    8. '  ' → logprob: -11.279953956604004
    9. '	def' → logprob: -11.404953956604004
    10. ' ' → logprob: -11.779953956604004

Token 413: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1304301619529724
    2. 'init' → logprob: -2.630430221557617
    3. ' def' → logprob: -3.630430221557617
    4. ' init' → logprob: -4.380430221557617
    5. '__' → logprob: -4.630430221557617
    6. 'def' → logprob: -7.255430221557617
    7. '_init' → logprob: -7.505430221557617
    8. '```' → logprob: -8.630430221557617
    9. '___' → logprob: -12.005430221557617
    10. '   ' → logprob: -12.880430221557617

Token 414: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -17.875
    3. '(init' → logprob: -18.0
    4. ' init' → logprob: -18.75
    5. 'int' → logprob: -19.875
    6. '_init' → logprob: -20.125
    7. 'ini' → logprob: -20.375
    8. 'inite' → logprob: -20.875
    9. '	init' → logprob: -21.625
    10. '```' → logprob: -21.75

Token 415: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.019692959263920784
    2. '(self' → logprob: -4.019692897796631
    3. '__(
' → logprob: -6.894692897796631
    4. '(' → logprob: -8.519693374633789
    5. '<>(' → logprob: -9.519693374633789
    6. '<|end|>' → logprob: -9.644693374633789
    7. '__' → logprob: -10.269693374633789
    8. '__((' → logprob: -10.269693374633789
    9. ' (' → logprob: -10.394693374633789
    10. ')(' → logprob: -10.644693374633789

Token 416: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00019030878320336342
    2. ')' → logprob: -9.000190734863281
    3. ' self' → logprob: -9.875190734863281
    4. '
' → logprob: -12.500190734863281
    5. '):
' → logprob: -12.625190734863281
    6. '(self' → logprob: -12.750190734863281
    7. ',' → logprob: -13.250190734863281
    8. 'blocks' → logprob: -14.500190734863281
    9. '[self' → logprob: -14.500190734863281
    10. '[' → logprob: -14.625190734863281

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.756989700486884e-05
    2. 'self' → logprob: -9.62508773803711
    3. ' ,' → logprob: -11.37508773803711
    4. ',self' → logprob: -12.00008773803711
    5. '):
' → logprob: -13.62508773803711
    6. '<|end|>' → logprob: -14.25008773803711
    7. '(self' → logprob: -14.50008773803711
    8. ',
' → logprob: -15.00008773803711
    9. '__,' → logprob: -15.50008773803711
    10. ')' → logprob: -15.87508773803711

Token 418: ' input' (ID: 3422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09288302809000015
    2. 'blocks' → logprob: -2.7178831100463867
    3. 'raw' → logprob: -4.342883110046387
    4. ' self' → logprob: -5.342883110046387
    5. ' blocks' → logprob: -6.217883110046387
    6. 'input' → logprob: -6.592883110046387
    7. '):
' → logprob: -7.217883110046387
    8. ' raw' → logprob: -8.092883110046387
    9. 'inputs' → logprob: -8.342883110046387
    10. ')' → logprob: -9.467883110046387

Token 419: '_lines' (ID: 42980)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.060966070741415024
    2. '_lines' → logprob: -3.5609660148620605
    3. '_str' → logprob: -3.5609660148620605
    4. '_text' → logprob: -6.5609660148620605
    5. '):' → logprob: -8.185966491699219
    6. '_string' → logprob: -8.435966491699219
    7. '_parser' → logprob: -9.185966491699219
    8. 's' → logprob: -9.310966491699219
    9. '_' → logprob: -9.560966491699219
    10. 'data' → logprob: -10.060966491699219

Token 420: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030494853854179382
    2. '):
' → logprob: -5.878049373626709
    3. ':' → logprob: -8.628049850463867
    4. ')' → logprob: -10.128049850463867
    5. '=None' → logprob: -11.128049850463867
    6. ' ):' → logprob: -12.128049850463867
    7. '):
' → logprob: -12.878049850463867
    8. '   ' → logprob: -13.503049850463867
    9. '=' → logprob: -14.878049850463867
    10. '       ' → logprob: -15.128049850463867

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002948816865682602
    2. 'self' → logprob: -6.377948760986328
    3. 'def' → logprob: -7.377948760986328
    4. '   ' → logprob: -7.627948760986328
    5. '(self' → logprob: -9.377948760986328
    6. ' self' → logprob: -10.752948760986328
    7. ',' → logprob: -12.002948760986328
    8. ':' → logprob: -12.127948760986328
    9. '(' → logprob: -12.752948760986328
    10. '):
' → logprob: -13.252948760986328

Token 422: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06005620211362839
    2. ' self' → logprob: -2.935056209564209
    3. '       ' → logprob: -5.310056209564209
    4. 'parser' → logprob: -8.68505573272705
    5. ' parser' → logprob: -10.06005573272705
    6. '   ' → logprob: -12.93505573272705
    7. 'input' → logprob: -13.81005573272705
    8. '	self' → logprob: -13.93505573272705
    9. 'def' → logprob: -14.06005573272705
    10. ' ' → logprob: -14.06005573272705

Token 423: '.parser' (ID: 50244)
  Prédit: '.raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raw' → logprob: -0.8716170787811279
    2. '.blocks' → logprob: -0.8716170787811279
    3. '.input' → logprob: -1.871617078781128
    4. '.lines' → logprob: -4.996617317199707
    5. '.' → logprob: -6.496617317199707
    6. '.inputs' → logprob: -7.371617317199707
    7. '.parser' → logprob: -7.996617317199707
    8. ' .' → logprob: -8.871617317199707
    9. '.user' → logprob: -9.996617317199707
    10. '.block' → logprob: -11.121617317199707

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141363143920898
    2. ' =' → logprob: -1.701413631439209
    3. ' ' → logprob: -16.076414108276367
    4. '=
' → logprob: -16.451414108276367
    5. '=input' → logprob: -16.701414108276367
    6. ' =
' → logprob: -17.201414108276367
    7. '<|end|>' → logprob: -17.326414108276367
    8. '   ' → logprob: -17.701414108276367
    9. '=parse' → logprob: -17.951414108276367
    10. '.' → logprob: -18.076414108276367

Token 425: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.01814994215965271
    2. ' Input' → logprob: -4.0181498527526855
    3. 'input' → logprob: -18.643150329589844
    4. '	Input' → logprob: -18.643150329589844
    5. ' input' → logprob: -18.768150329589844
    6. '<Input' → logprob: -19.893150329589844
    7. '_input' → logprob: -20.143150329589844
    8. '_Input' → logprob: -20.893150329589844
    9. '\Input' → logprob: -21.143150329589844
    10. '.Input' → logprob: -23.018150329589844

Token 426: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -17.625
    3. 'Processor' → logprob: -18.375
    4. 'Parse' → logprob: -19.625
    5. ' Parser' → logprob: -20.25
    6. '_parser' → logprob: -20.875
    7. '.Parser' → logprob: -21.125
    8. 'Parsing' → logprob: -21.75
    9. '(Parser' → logprob: -21.875
    10. 'Parsed' → logprob: -22.375

Token 427: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -8.77627644513268e-06
    2. '(' → logprob: -12.375008583068848
    3. 'input' → logprob: -12.375008583068848
    4. ' (' → logprob: -15.500008583068848
    5. '(
' → logprob: -16.750009536743164
    6. ' input' → logprob: -18.375009536743164
    7. '[input' → logprob: -18.625009536743164
    8. '(raw' → logprob: -18.750009536743164
    9. '=input' → logprob: -18.875009536743164
    10. ',input' → logprob: -18.875009536743164

Token 428: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: 0.0
    2. '=' → logprob: -17.25
    3. 'lines' → logprob: -18.5
    4. '_layers' → logprob: -20.25
    5. '_' → logprob: -20.375
    6. '(lines' → logprob: -20.375
    7. '_LINES' → logprob: -20.5
    8. '_=' → logprob: -20.75
    9. '=input' → logprob: -20.875
    10. 'Lines' → logprob: -21.25

Token 429: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -12.750004768371582
    3. '<|end|>' → logprob: -14.250004768371582
    4. ')
' → logprob: -14.625004768371582
    5. '   ' → logprob: -14.750004768371582
    6. ' ' → logprob: -16.250003814697266
    7. '       ' → logprob: -16.625003814697266
    8. '[' → logprob: -16.875003814697266
    9. '<|end|>' → logprob: -17.000003814697266
    10. ')

' → logprob: -17.625003814697266

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4814020097255707
    2. '<|end|>' → logprob: -1.606402039527893
    3. '   ' → logprob: -1.856402039527893
    4. 'def' → logprob: -3.8564019203186035
    5. ' def' → logprob: -6.6064019203186035
    6. '
' → logprob: -6.9814019203186035
    7. '<|end|>' → logprob: -7.1064019203186035
    8. '        
' → logprob: -8.106402397155762
    9. ' ' → logprob: -8.856402397155762
    10. 'self' → logprob: -9.106402397155762

Token 431: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.058187954127788544
    2. 'def' → logprob: -3.808187961578369
    3. ' self' → logprob: -4.058187961578369
    4. '       ' → logprob: -4.183187961578369
    5. '   ' → logprob: -6.433187961578369
    6. ' def' → logprob: -9.558187484741211
    7. 'n' → logprob: -10.058187484741211
    8. '	self' → logprob: -10.558187484741211
    9. 'num' → logprob: -10.808187484741211
    10. ' ' → logprob: -11.933187484741211

Token 432: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -0.005904027260839939
    2. '.t' → logprob: -6.130904197692871
    3. '.results' → logprob: -7.005904197692871
    4. '.num' → logprob: -7.130904197692871
    5. '.block' → logprob: -7.130904197692871
    6. ' .' → logprob: -8.630904197692871
    7. '.s' → logprob: -9.005904197692871
    8. '.n' → logprob: -9.130904197692871
    9. '.result' → logprob: -9.630904197692871
    10. '.max' → logprob: -9.630904197692871

Token 433: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761308073997498
    2. '=' → logprob: -0.8261308073997498
    3. '=[]' → logprob: -8.826130867004395
    4. '<|end|>' → logprob: -10.826130867004395
    5. ',' → logprob: -11.951130867004395
    6. ' ' → logprob: -12.201130867004395
    7. '=None' → logprob: -12.951130867004395
    8. ')' → logprob: -13.076130867004395
    9. '   ' → logprob: -13.451130867004395
    10. '<|end|>' → logprob: -13.951130867004395

Token 434: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -6.110668618930504e-05
    2. '[]
' → logprob: -9.75006103515625
    3. '[]

' → logprob: -13.50006103515625
    4. ' []' → logprob: -14.37506103515625
    5. '[]}' → logprob: -14.87506103515625
    6. '[' → logprob: -15.00006103515625
    7. '[]"' → logprob: -15.87506103515625
    8. '[],' → logprob: -18.25006103515625
    9. '[]>' → logprob: -18.37506103515625
    10. '[])' → logprob: -19.37506103515625

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007546288892626762
    2. 'def' → logprob: -5.632546424865723
    3. ' def' → logprob: -6.007546424865723
    4. '       ' → logprob: -6.757546424865723
    5. '<|end|>' → logprob: -9.007546424865723
    6. '
' → logprob: -9.257546424865723
    7. '    
' → logprob: -9.632546424865723
    8. '        
' → logprob: -11.382546424865723
    9. '	def' → logprob: -11.882546424865723
    10. '  ' → logprob: -12.632546424865723

Token 436: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004345498513430357
    2. ' def' → logprob: -5.754345417022705
    3. '   ' → logprob: -6.754345417022705
    4. '	def' → logprob: -14.004345893859863
    5. '
' → logprob: -15.754345893859863
    6. '  ' → logprob: -16.754344940185547
    7. '<|end|>' → logprob: -16.879344940185547
    8. ' ' → logprob: -17.004344940185547
    9. '       ' → logprob: -17.129344940185547
    10. '    
' → logprob: -17.379344940185547

Token 437: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.5264573693275452
    2. 'read' → logprob: -1.1514573097229004
    3. ' parse' → logprob: -3.4014573097229004
    4. 'solve' → logprob: -3.5264573097229004
    5. ' read' → logprob: -4.1514573097229
    6. 'load' → logprob: -4.7764573097229
    7. ' solve' → logprob: -6.4014573097229
    8. 'build' → logprob: -6.9014573097229
    9. ' load' → logprob: -7.1514573097229
    10. 'run' → logprob: -7.1514573097229

Token 438: '_input' (ID: 12507)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.06066891923546791
    2. '(self' → logprob: -3.0606689453125
    3. '_input' → logprob: -4.9356689453125
    4. '_' → logprob: -5.5606689453125
    5. '_inputs' → logprob: -8.1856689453125
    6. '(' → logprob: -8.1856689453125
    7. '_(' → logprob: -8.8106689453125
    8. '_lines' → logprob: -9.5606689453125
    9. '_block' → logprob: -9.6856689453125
    10. '_self' → logprob: -10.3106689453125

Token 439: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.794061770662665e-05
    2. '(' → logprob: -9.25009822845459
    3. '():' → logprob: -14.25009822845459
    4. ' (' → logprob: -14.75009822845459
    5. '(s' → logprob: -15.00009822845459
    6. '   ' → logprob: -15.75009822845459
    7. 'self' → logprob: -16.750097274780273
    8. '       ' → logprob: -16.875097274780273
    9. '():
' → logprob: -17.250097274780273
    10. '(
' → logprob: -17.625097274780273

Token 440: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016394564881920815
    2. '):
' → logprob: -4.14139461517334
    3. 'self' → logprob: -8.39139461517334
    4. '(self' → logprob: -9.26639461517334
    5. ',' → logprob: -11.01639461517334
    6. '):
' → logprob: -12.01639461517334
    7. '   ' → logprob: -12.01639461517334
    8. ')' → logprob: -12.26639461517334
    9. '):

' → logprob: -13.76639461517334
    10. '():' → logprob: -13.76639461517334

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16236403584480286
    2. ' n' → logprob: -2.4123640060424805
    3. 'n' → logprob: -3.1623640060424805
    4. 'num' → logprob: -4.7873640060424805
    5. ' num' → logprob: -4.9123640060424805
    6. ' count' → logprob: -7.4123640060424805
    7. 'count' → logprob: -7.4123640060424805
    8. ' length' → logprob: -8.03736400604248
    9. ' while' → logprob: -8.66236400604248
    10. ' for' → logprob: -8.91236400604248

Token 442: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3893587291240692
    2. 'num' → logprob: -1.7643587589263916
    3. '       ' → logprob: -2.2643587589263916
    4. ' n' → logprob: -3.2643587589263916
    5. ' num' → logprob: -5.3893585205078125
    6. 'count' → logprob: -5.7643585205078125
    7. 't' → logprob: -7.1393585205078125
    8. ' count' → logprob: -8.764358520507812
    9. '   ' → logprob: -9.014358520507812
    10. 'block' → logprob: -9.639358520507812

Token 443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197866424918175
    2. '=' → logprob: -2.811978578567505
    3. '   ' → logprob: -11.936978340148926
    4. ' ' → logprob: -13.186978340148926
    5. '    ' → logprob: -13.936978340148926
    6. '()' → logprob: -14.311978340148926
    7. '       ' → logprob: -14.686978340148926
    8. '=int' → logprob: -15.061978340148926
    9. '  ' → logprob: -16.061979293823242
    10. '        ' → logprob: -16.436979293823242

Token 444: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020699352025986
    2. ' self' → logprob: -2.3502070903778076
    3. 'int' → logprob: -15.475207328796387
    4. '       ' → logprob: -16.35020637512207
    5. '	self' → logprob: -17.72520637512207
    6. ' int' → logprob: -18.22520637512207
    7. '(self' → logprob: -18.35020637512207
    8. '=self' → logprob: -18.47520637512207
    9. ' ' → logprob: -18.72520637512207
    10. '   ' → logprob: -18.85020637512207

Token 445: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.00043496055877767503
    2. 'parser' → logprob: -7.750434875488281
    3. '	parser' → logprob: -13.250434875488281
    4. ' .' → logprob: -13.625434875488281
    5. '.' → logprob: -14.250434875488281
    6. ' parser' → logprob: -15.375434875488281
    7. '   ' → logprob: -15.750434875488281
    8. '(parser' → logprob: -17.12543487548828
    9. '.p' → logprob: -17.12543487548828
    10. '.processor' → logprob: -17.75043487548828

Token 446: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -1.1041145626222715e-05
    2. 'read' → logprob: -11.875011444091797
    3. '.' → logprob: -12.625011444091797
    4. ' .' → logprob: -14.375011444091797
    5. '.readline' → logprob: -17.000011444091797
    6. ' read' → logprob: -19.000011444091797
    7. '.readlines' → logprob: -20.625011444091797
    8. '_read' → logprob: -20.875011444091797
    9. '.next' → logprob: -21.000011444091797
    10. '	read' → logprob: -21.125011444091797

Token 447: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -4.246537173457909e-06
    2. 'int' → logprob: -12.500003814697266
    3. '_' → logprob: -15.250003814697266
    4. 'Int' → logprob: -17.250003814697266
    5. ' _' → logprob: -17.375003814697266
    6. '
' → logprob: -18.125003814697266
    7. '_val' → logprob: -18.750003814697266
    8. '_INT' → logprob: -19.125003814697266
    9. '_in' → logprob: -19.250003814697266
    10. '__' → logprob: -19.375003814697266

Token 448: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011077526025474072
    2. '()
' → logprob: -4.511077404022217
    3. '       ' → logprob: -10.636077880859375
    4. '()\' → logprob: -13.136077880859375
    5. '()

' → logprob: -13.761077880859375
    6. '())' → logprob: -14.261077880859375
    7. '()
' → logprob: -14.386077880859375
    8. '()`' → logprob: -15.011077880859375
    9. '()<' → logprob: -15.136077880859375
    10. ' ()' → logprob: -15.886077880859375

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008762052282691002
    2. 'for' → logprob: -5.133761882781982
    3. ' for' → logprob: -5.883761882781982
    4. '<|end|>' → logprob: -10.88376235961914
    5. '   ' → logprob: -11.50876235961914
    6. '	for' → logprob: -11.63376235961914
    7. '	' → logprob: -12.25876235961914
    8. '	   ' → logprob: -14.50876235961914
    9. '           ' → logprob: -15.00876235961914
    10. 'self' → logprob: -15.25876235961914

Token 450: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03070049174129963
    2. '       ' → logprob: -3.780700445175171
    3. ' for' → logprob: -4.90570068359375
    4. '	for' → logprob: -11.15570068359375
    5. 'self' → logprob: -12.28070068359375
    6. 'width' → logprob: -13.65570068359375
    7. '        
' → logprob: -13.65570068359375
    8. '
' → logprob: -14.78070068359375
    9. 'sizes' → logprob: -14.78070068359375
    10. '   ' → logprob: -15.28070068359375

Token 451: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10021205991506577
    2. ' _' → logprob: -2.3502120971679688
    3. '_i' → logprob: -12.850212097167969
    4. ' i' → logprob: -13.725212097167969
    5. ' in' → logprob: -14.225212097167969
    6. '_range' → logprob: -14.600212097167969
    7. '_in' → logprob: -14.975212097167969
    8. ' ' → logprob: -15.975212097167969
    9. ' ' → logprob: -16.85021209716797
    10. 'i' → logprob: -16.97521209716797

Token 452: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006180775817483664
    2. 'in' → logprob: -7.500617980957031
    3. 'range' → logprob: -9.750617980957031
    4. ' ' → logprob: -12.375617980957031
    5. 'import' → logprob: -14.375617980957031
    6. '  ' → logprob: -14.625617980957031
    7. ' range' → logprob: -14.875617980957031
    8. '   ' → logprob: -15.375617980957031
    9. '	in' → logprob: -15.750617980957031
    10. 'i' → logprob: -16.00061798095703

Token 453: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002036595979006961
    2. ' range' → logprob: -8.500204086303711
    3. '	range' → logprob: -17.00020408630371
    4. '   ' → logprob: -17.62520408630371
    5. '(range' → logprob: -17.75020408630371
    6. '  ' → logprob: -18.50020408630371
    7. ' ' → logprob: -19.12520408630371
    8. 'rang' → logprob: -19.62520408630371
    9. '[' → logprob: -19.75020408630371
    10. 'n' → logprob: -19.87520408630371

Token 454: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.080963092041202e-06
    2. 'n' → logprob: -12.625004768371582
    3. '(' → logprob: -13.250004768371582
    4. ' (' → logprob: -18.2500057220459
    5. ' n' → logprob: -19.5000057220459
    6. 'range' → logprob: -20.5000057220459
    7. '(
' → logprob: -21.0000057220459
    8. '(range' → logprob: -21.8750057220459
    9. '_n' → logprob: -22.1250057220459
    10. '	n' → logprob: -22.6250057220459

Token 455: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6345215439796448
    2. '):' → logprob: -0.7595215439796448
    3. ' ):' → logprob: -7.009521484375
    4. ' ):
' → logprob: -7.509521484375
    5. ':' → logprob: -8.384521484375
    6. '       ' → logprob: -8.759521484375
    7. '   ' → logprob: -10.509521484375
    8. '):
' → logprob: -10.884521484375
    9. ':
' → logprob: -11.384521484375
    10. ',' → logprob: -11.759521484375

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029074961319565773
    2. 'length' → logprob: -4.1540751457214355
    3. 'width' → logprob: -4.9040751457214355
    4. ' length' → logprob: -6.0290751457214355
    5. 'height' → logprob: -6.2790751457214355
    6. ' width' → logprob: -8.154074668884277
    7. ' lengths' → logprob: -8.404074668884277
    8. 'w' → logprob: -8.404074668884277
    9. ' w' → logprob: -8.779074668884277
    10. 'h' → logprob: -9.404074668884277

Token 457: ' a' (ID: 261)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6082543730735779
    2. 'w' → logprob: -1.6082544326782227
    3. 'width' → logprob: -1.8582544326782227
    4. ' length' → logprob: -3.2332544326782227
    5. 'l' → logprob: -3.7332544326782227
    6. '_,' → logprob: -4.608254432678223
    7. '           ' → logprob: -4.858254432678223
    8. ' width' → logprob: -4.858254432678223
    9. ' w' → logprob: -4.858254432678223
    10. ' l' → logprob: -7.608254432678223

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024464004673063755
    2. ' ,' → logprob: -6.877446174621582
    3. '=' → logprob: -7.252446174621582
    4. 'width' → logprob: -8.627446174621582
    5. 'w' → logprob: -8.877446174621582
    6. ' =' → logprob: -9.252446174621582
    7. '_width' → logprob: -9.377446174621582
    8. ',b' → logprob: -9.502446174621582
    9. ',width' → logprob: -10.127446174621582
    10. ',w' → logprob: -10.127446174621582

Token 459: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.049310680478811264
    2. 'w' → logprob: -3.4243106842041016
    3. 'h' → logprob: -4.799310684204102
    4. ' b' → logprob: -5.424310684204102
    5. 'd' → logprob: -6.924310684204102
    6. 'l' → logprob: -7.299310684204102
    7. ' w' → logprob: -8.174310684204102
    8. 'a' → logprob: -8.674310684204102
    9. 's' → logprob: -9.174310684204102
    10. ' h' → logprob: -9.299310684204102

Token 460: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024022052064538002
    2. '=' → logprob: -4.024022102355957
    3. ' =' → logprob: -5.149022102355957
    4. ' ,' → logprob: -10.024022102355957
    5. 'c' → logprob: -13.774022102355957
    6. 'w' → logprob: -14.524022102355957
    7. 'a' → logprob: -14.524022102355957
    8. ' ' → logprob: -14.774022102355957
    9. '_,' → logprob: -14.899022102355957
    10. '<|end|>' → logprob: -15.149022102355957

Token 461: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975129522383213
    2. ' self' → logprob: -3.5297513008117676
    3. '(self' → logprob: -15.40475082397461
    4. 'map' → logprob: -15.77975082397461
    5. ' ' → logprob: -16.40475082397461
    6. '	self' → logprob: -16.52975082397461
    7. '[self' → logprob: -16.90475082397461
    8. 'se' → logprob: -17.02975082397461
    9. 'sel' → logprob: -17.02975082397461
    10. 's' → logprob: -17.02975082397461

Token 462: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -4.1318875446449965e-05
    2. 'parser' → logprob: -10.250041007995605
    3. ' .' → logprob: -13.000041007995605
    4. ' parser' → logprob: -13.125041007995605
    5. '	parser' → logprob: -13.500041007995605
    6. '.' → logprob: -16.250041961669922
    7. '(parser' → logprob: -16.875041961669922
    8. '.parsers' → logprob: -17.500041961669922
    9. '.processor' → logprob: -17.750041961669922
    10. '.p' → logprob: -17.750041961669922

Token 463: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.002195813925936818
    2. '()' → logprob: -6.252195835113525
    3. '().' → logprob: -8.752195358276367
    4. 'read' → logprob: -9.627195358276367
    5. '()
' → logprob: -10.252195358276367
    6. '.readline' → logprob: -12.627195358276367
    7. '.' → logprob: -13.127195358276367
    8. '.readlines' → logprob: -13.752195358276367
    9. ' read' → logprob: -14.752195358276367
    10. ' .' → logprob: -15.377195358276367

Token 464: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -3.452426608419046e-05
    2. 'ints' → logprob: -10.37503433227539
    3. 'int' → logprob: -13.00003433227539
    4. 'Ints' → logprob: -14.25003433227539
    5. ' ints' → logprob: -16.00003433227539
    6. 's' → logprob: -16.25003433227539
    7. ' _' → logprob: -16.75003433227539
    8. '_' → logprob: -16.87503433227539
    9. '
' → logprob: -17.87503433227539
    10. '_inds' → logprob: -18.12503433227539

Token 465: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1994775377388578e-05
    2. ' s' → logprob: -11.375012397766113
    3. '()' → logprob: -15.000012397766113
    4. ')s' → logprob: -17.000011444091797
    5. '   ' → logprob: -17.625011444091797
    6. '(s' → logprob: -17.875011444091797
    7. ''s' → logprob: -18.250011444091797
    8. '_s' → logprob: -18.375011444091797
    9. ')' → logprob: -18.625011444091797
    10. '	s' → logprob: -18.875011444091797

Token 466: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3733343780040741
    2. '           ' → logprob: -1.6233344078063965
    3. '()' → logprob: -2.9983344078063965
    4. '()
' → logprob: -3.3733344078063965
    5. '<|end|>' → logprob: -3.9983344078063965
    6. '            
' → logprob: -4.9983344078063965
    7. '       ' → logprob: -6.7483344078063965
    8. ',' → logprob: -7.1233344078063965
    9. '<|end|>' → logprob: -7.6233344078063965
    10. '  
' → logprob: -7.6233344078063965

Token 467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.951771421066951e-05
    2. '       ' → logprob: -12.000029563903809
    3. '<|end|>' → logprob: -12.000029563903809
    4. ',' → logprob: -12.250029563903809
    5. 'self' → logprob: -12.750029563903809
    6. '   ' → logprob: -12.750029563903809
    7. '
' → logprob: -13.000029563903809
    8. '            
' → logprob: -13.625029563903809
    9. ' self' → logprob: -13.875029563903809
    10. ' block' → logprob: -14.500029563903809

Token 468: ' #' (ID: 1069)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.9421546459197998
    2. '           ' → logprob: -1.0671546459197998
    3. 'self' → logprob: -1.4421546459197998
    4. ' block' → logprob: -4.442154884338379
    5. ' self' → logprob: -4.817154884338379
    6. '#' (adapté à ' #') → logprob: -4.942154884338379
    7. 'height' → logprob: -7.192154884338379
    8. 'new' → logprob: -7.442154884338379
    9. 'length' → logprob: -7.692154884338379
    10. 'if' → logprob: -8.567154884338379

Token 469: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0048024654388428
    2. 'block' → logprob: -1.8798024654388428
    3. ' self' → logprob: -2.0048024654388428
    4. '           ' → logprob: -2.2548024654388428
    5. ' block' → logprob: -2.2548024654388428
    6. '#' → logprob: -2.2548024654388428
    7. ' #' → logprob: -4.754802703857422
    8. ' new' → logprob: -5.504802703857422
    9. 'length' → logprob: -5.754802703857422
    10. 'height' → logprob: -5.879802703857422

Token 470: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693262100219727
    2. ' =' → logprob: -2.1269326210021973
    3. ' is' → logprob: -12.751932144165039
    4. '       ' → logprob: -14.376932144165039
    5. ',' → logprob: -15.001932144165039
    6. '           ' → logprob: -15.376932144165039
    7. '   ' → logprob: -15.751932144165039
    8. '=
' → logprob: -16.00193214416504
    9. 's' → logprob: -16.62693214416504
    10. ' =
' → logprob: -17.00193214416504

Token 471: ' fixed' (ID: 13213)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004338877333793789
    2. ' ' → logprob: -7.750433921813965
    3. '           ' → logprob: -13.000433921813965
    4. '   ' → logprob: -14.625433921813965
    5. '=' → logprob: -15.000433921813965
    6. '       ' → logprob: -16.00043296813965
    7. '               ' → logprob: -17.62543296813965
    8. 'a' → logprob: -18.87543296813965
    9. ' =' → logprob: -18.87543296813965
    10. '```' → logprob: -18.87543296813965

Token 472: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02821146696805954
    2. '1' → logprob: -3.7782113552093506
    3. ' =' → logprob: -5.40321159362793
    4. '           ' → logprob: -8.15321159362793
    5. ' ' → logprob: -9.52821159362793
    6. '       ' → logprob: -10.65321159362793
    7. ',' → logprob: -10.77821159362793
    8. '   ' → logprob: -11.02821159362793
    9. '               ' → logprob: -11.40321159362793
    10. '            ' → logprob: -11.77821159362793

Token 473: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.750296592712402
    4. '```' → logprob: -18.625295639038086
    5. '       ' → logprob: -19.750295639038086
    6. '=' → logprob: -19.875295639038086
    7. '  ' → logprob: -20.375295639038086
    8. '`' → logprob: -20.625295639038086
    9. '<|end|>' → logprob: -21.000295639038086
    10. '           ' → logprob: -21.125295639038086

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -18.125
    4. '```' → logprob: -18.375
    5. '       ' → logprob: -20.25
    6. '           ' → logprob: -20.25
    7. '<|end|>' → logprob: -21.0
    8. '=' → logprob: -21.0
    9. '`' → logprob: -22.25
    10. '۱' → logprob: -22.875

Token 475: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01995287463068962
    2. ',' → logprob: -4.019952774047852
    3. '       ' → logprob: -6.894952774047852
    4. '
' → logprob: -7.894952774047852
    5. '<|end|>' → logprob: -8.769952774047852
    6. '            
' → logprob: -9.894952774047852
    7. '            ' → logprob: -10.019952774047852
    8. ' ,' → logprob: -10.519952774047852
    9. '               ' → logprob: -10.644952774047852
    10. 'self' → logprob: -10.894952774047852

Token 476: ' A' (ID: 355)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -1.0936521291732788
    2. '           ' → logprob: -1.2186521291732788
    3. ' width' → logprob: -1.7186521291732788
    4. 'self' → logprob: -2.3436522483825684
    5. 'height' → logprob: -3.2186522483825684
    6. ' self' → logprob: -3.5936522483825684
    7. 'block' → logprob: -4.718652248382568
    8. ' block' → logprob: -4.843652248382568
    9. ' height' → logprob: -4.968652248382568
    10. 'length' → logprob: -7.093652248382568

Token 477: '_i' (ID: 10853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7031360268592834
    2. ' =' → logprob: -1.8281359672546387
    3. 'nd' → logprob: -2.2031359672546387
    4. 'height' → logprob: -2.9531359672546387
    5. ',' → logprob: -3.0781359672546387
    6. 's' → logprob: -3.3281359672546387
    7. ' and' → logprob: -4.078135967254639
    8. '           ' → logprob: -4.328135967254639
    9. 'width' → logprob: -4.453135967254639
    10. 'b' → logprob: -4.578135967254639

Token 478: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14635246992111206
    2. ' =' → logprob: -2.146352529525757
    3. ',' → logprob: -4.021352291107178
    4. ' and' → logprob: -7.396352291107178
    5. 'and' → logprob: -8.646352767944336
    6. ' is' → logprob: -9.146352767944336
    7. '=
' → logprob: -9.396352767944336
    8. ' ,' → logprob: -10.021352767944336
    9. '=a' → logprob: -10.021352767944336
    10. 'a' → logprob: -10.271352767944336

Token 479: ' width' (ID: 4345)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46284013986587524
    2. 'b' → logprob: -1.0878400802612305
    3. 'max' → logprob: -3.9628400802612305
    4. ' a' → logprob: -5.2128400802612305
    5. ' max' → logprob: -5.7128400802612305
    6. ' b' → logprob: -5.8378400802612305
    7. '1' → logprob: -7.4628400802612305
    8. 'the' → logprob: -7.4628400802612305
    9. 'always' → logprob: -7.8378400802612305
    10. 'min' → logprob: -8.33784008026123

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7158460021018982
    2. '           ' → logprob: -0.7158460021018982
    3. ' and' → logprob: -4.715846061706543
    4. '       ' → logprob: -5.215846061706543
    5. '
' → logprob: -5.715846061706543
    6. ',
' → logprob: -6.590846061706543
    7. ' ,' → logprob: -6.715846061706543
    8. '=' → logprob: -7.340846061706543
    9. 'and' → logprob: -7.590846061706543
    10. ' =' → logprob: -7.965846061706543

Token 481: ' B' (ID: 418)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18347114324569702
    2. 'height' → logprob: -2.308471202850342
    3. 'a' → logprob: -3.183471202850342
    4. '           ' → logprob: -4.558471202850342
    5. '#' → logprob: -5.183471202850342
    6. ' b' → logprob: -5.308471202850342
    7. ' height' → logprob: -6.058471202850342
    8. 'self' → logprob: -6.558471202850342
    9. 'h' → logprob: -6.683471202850342
    10. ' a' → logprob: -8.808470726013184

Token 482: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.025829339399933815
    2. '=' → logprob: -4.275829315185547
    3. ' =' → logprob: -4.525829315185547
    4. '_' → logprob: -8.275829315185547
    5. '   ' → logprob: -8.900829315185547
    6. '           ' → logprob: -9.775829315185547
    7. ',' → logprob: -9.775829315185547
    8. 'i' → logprob: -10.150829315185547
    9. '=self' → logprob: -10.150829315185547
    10. '<|end|>' → logprob: -10.400829315185547

Token 483: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5496315956115723
    2. ' is' → logprob: -0.9246315956115723
    3. '=' → logprob: -3.6746315956115723
    4. ' =' → logprob: -7.299631595611572
    5. '           ' → logprob: -10.424631118774414
    6. ' ' → logprob: -11.549631118774414
    7. 'height' → logprob: -11.549631118774414
    8. 'as' → logprob: -11.674631118774414
    9. '<|end|>' → logprob: -11.924631118774414
    10. ',' → logprob: -11.924631118774414

Token 484: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.016101589426398277
    2. ' height' → logprob: -4.141101360321045
    3. 'the' → logprob: -10.141101837158203
    4. 'a' → logprob: -12.016101837158203
    5. ' the' → logprob: -12.016101837158203
    6. '   ' → logprob: -12.391101837158203
    7. ' ' → logprob: -12.766101837158203
    8. '           ' → logprob: -14.016101837158203
    9. 'width' → logprob: -14.016101837158203
    10. '       ' → logprob: -14.016101837158203

Token 485: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00042030587792396545
    2. ',' → logprob: -8.250420570373535
    3. '
' → logprob: -9.500420570373535
    4. 'self' → logprob: -10.500420570373535
    5. '       ' → logprob: -10.875420570373535
    6. '<|end|>' → logprob: -11.125420570373535
    7. '            
' → logprob: -11.500420570373535
    8. '   ' → logprob: -12.875420570373535
    9. 'block' → logprob: -13.000420570373535
    10. '               ' → logprob: -13.500420570373535

Token 486: 'or' (ID: 267)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.413959264755249
    2. ')' → logprob: -1.663959264755249
    3. '           ' → logprob: -1.913959264755249
    4. ' )
' → logprob: -6.913959503173828
    5. '       ' → logprob: -8.038959503173828
    6. ')
' → logprob: -8.663959503173828
    7. ' )' → logprob: -9.413959503173828
    8. '):
' → logprob: -9.413959503173828
    9. 'self' → logprob: -9.663959503173828
    10. '               ' → logprob: -10.038959503173828

Token 487: ' vice' (ID: 22625)
  Prédit: ' vice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vice' → logprob: -1.0654865503311157
    2. 'both' → logprob: -1.8154865503311157
    3. 'maybe' → logprob: -2.815486431121826
    4. 'height' → logprob: -3.065486431121826
    5. 'width' → logprob: -3.190486431121826
    6. 'base' → logprob: -3.315486431121826
    7. 'something' → logprob: -3.565486431121826
    8. 'depth' → logprob: -3.565486431121826
    9. 'block' → logprob: -4.065486431121826
    10. ' base' → logprob: -4.190486431121826

Token 488: ' versa' (ID: 74153)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059333015233278275
    2. '=' → logprob: -3.309333086013794
    3. '?' → logprob: -5.059332847595215
    4. ')?' → logprob: -5.059332847595215
    5. ')
' → logprob: -5.809332847595215
    6. ',' → logprob: -6.434332847595215
    7. '?)' → logprob: -7.309332847595215
    8. '),' → logprob: -7.559332847595215
    9. '):
' → logprob: -7.559332847595215
    10. '=True' → logprob: -7.934332847595215

Token 489: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1477956771850586
    2. '           ' → logprob: -2.1477956771850586
    3. ')
' → logprob: -3.8977956771850586
    4. ',' → logprob: -8.772795677185059
    5. '       ' → logprob: -9.897795677185059
    6. '),' → logprob: -10.272795677185059
    7. '<|end|>' → logprob: -10.522795677185059
    8. '               ' → logprob: -10.772795677185059
    9. ').' → logprob: -11.397795677185059
    10. ' if' → logprob: -11.772795677185059

Token 490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001450187264708802
    2. ',' → logprob: -9.500144958496094
    3. '
' → logprob: -10.750144958496094
    4. '<|end|>' → logprob: -10.750144958496094
    5. '            
' → logprob: -11.250144958496094
    6. '       ' → logprob: -11.875144958496094
    7. '   ' → logprob: -13.375144958496094
    8. '```' → logprob: -13.875144958496094
    9. '               ' → logprob: -14.250144958496094
    10. 'self' → logprob: -14.375144958496094

Token 491: ' block' (ID: 4355)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5717759728431702
    2. '           ' → logprob: -1.0717759132385254
    3. 'block' (adapté à ' block') → logprob: -2.6967759132385254
    4. '#' → logprob: -4.196775913238525
    5. ' self' → logprob: -5.821775913238525
    6. 'if' → logprob: -6.196775913238525
    7. 'for' → logprob: -6.196775913238525
    8. 'width' → logprob: -6.571775913238525
    9. '       ' → logprob: -6.946775913238525
    10. ' block' → logprob: -8.196776390075684

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.314008891582489
    2. '=' → logprob: -1.3140089511871338
    3. 's' → logprob: -7.314008712768555
    4. '   ' → logprob: -10.564008712768555
    5. '=
' → logprob: -10.939008712768555
    6. '       ' → logprob: -11.689008712768555
    7. '1' → logprob: -11.689008712768555
    8. '.append' → logprob: -12.064008712768555
    9. '.' → logprob: -12.439008712768555
    10. '           ' → logprob: -12.564008712768555

Token 493: ' Block' (ID: 13063)
  Prédit: 'Block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Block' → logprob: -0.061973292380571365
    2. ' Block' → logprob: -2.8119733333587646
    3. '	Block' → logprob: -12.186973571777344
    4. '(Block' → logprob: -15.436973571777344
    5. '_Block' → logprob: -15.436973571777344
    6. '<Block' → logprob: -16.686973571777344
    7. '   ' → logprob: -16.936973571777344
    8. 'Blocked' → logprob: -17.561973571777344
    9. '       ' → logprob: -18.061973571777344
    10. 'block' → logprob: -18.186973571777344

Token 494: '(length' (ID: 47037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004008115269243717
    2. '(length' → logprob: -5.7540082931518555
    3. '1' → logprob: -7.3790082931518555
    4. 'length' → logprob: -8.879008293151855
    5. '(
' → logprob: -9.754008293151855
    6. '(a' → logprob: -12.504008293151855
    7. '(width' → logprob: -13.254008293151855
    8. '(
' → logprob: -14.254008293151855
    9. ' length' → logprob: -14.254008293151855
    10. 'a' → logprob: -14.254008293151855

Token 495: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38797494769096375
    2. '=' → logprob: -1.1379749774932861
    3. '(' → logprob: -6.887974739074707
    4. ',' → logprob: -10.637974739074707
    5. ')' → logprob: -10.637974739074707
    6. ' ' → logprob: -11.012974739074707
    7. '   ' → logprob: -11.762974739074707
    8. ' =' → logprob: -12.262974739074707
    9. '(
' → logprob: -12.887974739074707
    10. '```' → logprob: -14.137974739074707

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.250001907348633
    4. '```' → logprob: -20.000001907348633
    5. '<|end|>' → logprob: -20.125001907348633
    6. '۱' → logprob: -21.250001907348633
    7. ')' → logprob: -21.625001907348633
    8. '' → logprob: -21.937501907348633
    9. '  ' → logprob: -22.062501907348633
    10. '１' → logprob: -22.375001907348633

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.749814019713085e-06
    2. '           ' → logprob: -13.000006675720215
    3. ',width' → logprob: -13.250006675720215
    4. ',
' → logprob: -13.875006675720215
    5. ' ,' → logprob: -14.125006675720215
    6. 'a' → logprob: -14.750006675720215
    7. ',b' → logprob: -15.875006675720215
    8. '   ' → logprob: -15.875006675720215
    9. '       ' → logprob: -15.875006675720215
    10. 'b' → logprob: -17.25000762939453

Token 498: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.06204532831907272
    2. ' width' → logprob: -2.8120453357696533
    3. 'a' → logprob: -9.687045097351074
    4. '           ' → logprob: -11.937045097351074
    5. 'w' → logprob: -12.437045097351074
    6. '   ' → logprob: -13.687045097351074
    7. 'height' → logprob: -14.437045097351074
    8. 'b' → logprob: -14.437045097351074
    9. ',width' → logprob: -14.562045097351074
    10. '	width' → logprob: -14.687045097351074

Token 499: '=a' (ID: 53088)
  Prédit: '=a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=a' → logprob: -0.5422403812408447
    2. 'a' → logprob: -0.9172403812408447
    3. '=' → logprob: -4.667240142822266
    4. ' a' → logprob: -5.042240142822266
    5. '=b' → logprob: -6.792240142822266
    6. ',' → logprob: -7.042240142822266
    7. ',a' → logprob: -7.167240142822266
    8. 'b' → logprob: -9.167240142822266
    9. ' =' → logprob: -9.292240142822266
    10. '   ' → logprob: -10.542240142822266

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005890139145776629
    2. ' ,' → logprob: -7.500588893890381
    3. '           ' → logprob: -11.000589370727539
    4. '       ' → logprob: -12.375589370727539
    5. ',width' → logprob: -12.375589370727539
    6. ',
' → logprob: -12.500589370727539
    7. '   ' → logprob: -12.750589370727539
    8. ')' → logprob: -13.375589370727539
    9. ',height' → logprob: -13.750589370727539
    10. '<|end|>' → logprob: -15.125589370727539

Token 501: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.0031791406217962503
    2. ' height' → logprob: -5.75317907333374
    3. '           ' → logprob: -14.253179550170898
    4. 'width' → logprob: -15.253179550170898
    5. 'b' → logprob: -15.628179550170898
    6. '   ' → logprob: -16.2531795501709
    7. ' ' → logprob: -16.2531795501709
    8. '            
' → logprob: -16.8781795501709
    9. '
' → logprob: -17.0031795501709
    10. '            ' → logprob: -17.3781795501709

Token 502: '=b' (ID: 49769)
  Prédit: '=b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=b' → logprob: -0.036055758595466614
    2. '=' → logprob: -4.036055564880371
    3. 'b' → logprob: -4.036055564880371
    4. ' b' → logprob: -9.661055564880371
    5. ')b' → logprob: -11.411055564880371
    6. ' =' → logprob: -13.286055564880371
    7. ')' → logprob: -14.161055564880371
    8. '=int' → logprob: -14.661055564880371
    9. '	b' → logprob: -15.161055564880371
    10. '=
' → logprob: -15.161055564880371

Token 503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006765937432646751
    2. ')
' → logprob: -5.006765842437744
    3. '           ' → logprob: -10.756766319274902
    4. '       ' → logprob: -10.756766319274902
    5. ' )' → logprob: -12.006766319274902
    6. ')

' → logprob: -14.131766319274902
    7. ')
' → logprob: -14.756766319274902
    8. ' )
' → logprob: -15.631766319274902
    9. '               ' → logprob: -15.881766319274902
    10. '   ' → logprob: -16.256765365600586

Token 504: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.666993507067673e-05
    2. '       ' → logprob: -11.000036239624023
    3. 'self' → logprob: -11.125036239624023
    4. '<|end|>' → logprob: -13.125036239624023
    5. '               ' → logprob: -13.875036239624023
    6. '   ' → logprob: -14.375036239624023
    7. ' self' → logprob: -14.500036239624023
    8. ',' → logprob: -15.000036239624023
    9. '          ' → logprob: -15.000036239624023
    10. '
' → logprob: -15.625036239624023

Token 505: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05878744646906853
    2. '           ' → logprob: -2.9337873458862305
    3. ' self' → logprob: -5.5587873458862305
    4. '       ' → logprob: -10.18378734588623
    5. '   ' → logprob: -12.68378734588623
    6. '	self' → logprob: -14.05878734588623
    7. '               ' → logprob: -14.18378734588623
    8. '
' → logprob: -14.43378734588623
    9. ' ' → logprob: -15.05878734588623
    10. '          ' → logprob: -15.43378734588623

Token 506: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -1.5451681974809617e-05
    2. 'blocks' → logprob: -11.125015258789062
    3. '.block' → logprob: -14.625015258789062
    4. '.' → logprob: -15.625015258789062
    5. ' blocks' → logprob: -17.500015258789062
    6. ' .' → logprob: -18.250015258789062
    7. '_blocks' → logprob: -18.750015258789062
    8. '.Block' → logprob: -19.375015258789062
    9. '.b' → logprob: -20.375015258789062
    10. '
' → logprob: -20.625015258789062

Token 507: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.632542913896032e-05
    2. '.' → logprob: -10.250046730041504
    3. '.app' → logprob: -11.875046730041504
    4. '.ap' → logprob: -12.625046730041504
    5. '.push' → logprob: -15.250046730041504
    6. ' .' → logprob: -16.000045776367188
    7. 'append' → logprob: -16.125045776367188
    8. '.add' → logprob: -16.750045776367188
    9. '.extend' → logprob: -18.000045776367188
    10. '.Append' → logprob: -18.125045776367188

Token 508: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -1.3306015716807451e-05
    2. 'block' → logprob: -11.50001335144043
    3. '(' → logprob: -12.75001335144043
    4. '(
' → logprob: -15.37501335144043
    5. ':block' → logprob: -19.50001335144043
    6. ' block' → logprob: -20.12501335144043
    7. '	block' → logprob: -20.75001335144043
    8. '(Block' → logprob: -21.00001335144043
    9. '(b' → logprob: -21.25001335144043
    10. '(

' → logprob: -21.37501335144043

Token 509: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055247712880373
    2. '<|end|>' → logprob: -2.9302477836608887
    3. '
' → logprob: -8.80524730682373
    4. '<|end|>' → logprob: -9.55524730682373
    5. ')return' → logprob: -9.93024730682373
    6. '       ' → logprob: -10.05524730682373
    7. ')
' → logprob: -10.68024730682373
    8. ' )' → logprob: -11.05524730682373
    9. '')' → logprob: -13.68024730682373
    10. '")' → logprob: -13.68024730682373

Token 510: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 511: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008892982266843319
    2. '   ' → logprob: -5.258893013000488
    3. ' def' → logprob: -5.633893013000488
    4. '
' → logprob: -9.508893013000488
    5. '    
' → logprob: -13.633893013000488
    6. '	def' → logprob: -13.758893013000488
    7. ' ' → logprob: -15.133893013000488
    8. '<|end|>' → logprob: -15.133893013000488
    9. '

' → logprob: -15.258893013000488
    10. '        
' → logprob: -16.008892059326172

Token 512: ' solve' (ID: 17722)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.16712549328804016
    2. ' build' → logprob: -2.4171254634857178
    3. 'solve' → logprob: -2.9171254634857178
    4. ' solve' → logprob: -5.042125701904297
    5. 'compute' → logprob: -5.917125701904297
    6. 'get' → logprob: -7.667125701904297
    7. 'max' → logprob: -8.417125701904297
    8. ' compute' → logprob: -8.417125701904297
    9. 'calculate' → logprob: -8.417125701904297
    10. ' get' → logprob: -9.167125701904297

Token 513: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00036144492332823575
    2. '(' → logprob: -8.000361442565918
    3. '   ' → logprob: -11.250361442565918
    4. 'self' → logprob: -12.125361442565918
    5. ' (' → logprob: -12.500361442565918
    6. '       ' → logprob: -12.875361442565918
    7. '(
' → logprob: -15.125361442565918
    8. '(s' → logprob: -15.375361442565918
    9. '():
' → logprob: -15.750361442565918
    10. '()' → logprob: -16.375362396240234

Token 514: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10380230844020844
    2. '):
' → logprob: -2.60380220413208
    3. 'self' → logprob: -3.97880220413208
    4. ')' → logprob: -5.47880220413208
    5. '(self' → logprob: -6.47880220413208
    6. '   ' → logprob: -9.353802680969238
    7. '       ' → logprob: -10.603802680969238
    8. '
' → logprob: -11.353802680969238
    9. '):
' → logprob: -11.603802680969238
    10. '):

' → logprob: -11.728802680969238

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008137972326949239
    2. '
' → logprob: -7.875813961029053
    3. 'self' → logprob: -8.250813484191895
    4. 'return' → logprob: -9.250813484191895
    5. '        
' → logprob: -11.000813484191895
    6. 'max' → logprob: -11.125813484191895
    7. '(self' → logprob: -11.375813484191895
    8. ' return' → logprob: -12.000813484191895
    9. ' self' → logprob: -12.000813484191895
    10. '   ' → logprob: -12.375813484191895

Token 516: ' self' (ID: 1051)
  Prédit: 'builder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'builder' → logprob: -0.04540931433439255
    2. ' builder' → logprob: -3.2954092025756836
    3. '       ' → logprob: -5.670409202575684
    4. 'tb' → logprob: -6.045409202575684
    5. 'tower' → logprob: -6.545409202575684
    6. '   ' → logprob: -10.170409202575684
    7. ' tower' → logprob: -10.295409202575684
    8. ' tb' → logprob: -11.420409202575684
    9. 't' → logprob: -12.670409202575684
    10. '	builder' → logprob: -14.045409202575684

Token 517: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.021905388683080673
    2. '.blocks' → logprob: -4.146905422210693
    3. '.builder' → logprob: -6.146905422210693
    4. 'parse' → logprob: -6.396905422210693
    5. '.parser' → logprob: -7.021905422210693
    6. '.' → logprob: -7.146905422210693
    7. '.t' → logprob: -9.021904945373535
    8. ' .' → logprob: -10.396904945373535
    9. '=parse' → logprob: -10.521904945373535
    10. 'blocks' → logprob: -10.521904945373535

Token 518: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.128163257315464e-07
    2. 'input' → logprob: -15.875
    3. '_' → logprob: -16.5
    4. '_inputs' → logprob: -18.25
    5. '_output' → logprob: -18.375
    6. '_
' → logprob: -19.5
    7. 'Input' → logprob: -19.75
    8. ' input' → logprob: -20.25
    9. '_Input' → logprob: -21.0
    10. '_in' → logprob: -21.125

Token 519: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043199460953474045
    2. '
' → logprob: -3.1681995391845703
    3. 't' → logprob: -9.41819953918457
    4. '   ' → logprob: -9.79319953918457
    5. 'builder' → logprob: -10.91819953918457
    6. '        
' → logprob: -11.16819953918457
    7. '()
' → logprob: -11.79319953918457
    8. ' builder' → logprob: -12.79319953918457
    9. '<|end|>' → logprob: -12.91819953918457
    10. '  
' → logprob: -12.91819953918457

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012404164299368858
    2. 'builder' → logprob: -4.512403964996338
    3. ' builder' → logprob: -7.637403964996338
    4. '   ' → logprob: -7.637403964996338
    5. 'tb' → logprob: -8.637404441833496
    6. '
' → logprob: -8.762404441833496
    7. 'tower' → logprob: -10.762404441833496
    8. 'return' → logprob: -11.137404441833496
    9. 't' → logprob: -11.262404441833496
    10. '```' → logprob: -13.387404441833496

Token 521: ' builder' (ID: 11592)
  Prédit: 'builder'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'builder' (adapté à ' builder') → logprob: -0.031948160380125046
    2. 'tb' → logprob: -3.5319480895996094
    3. 'tower' → logprob: -6.531948089599609
    4. ' builder' → logprob: -7.281948089599609
    5. '   ' → logprob: -10.53194808959961
    6. '       ' → logprob: -11.78194808959961
    7. 'return' → logprob: -11.78194808959961
    8. ' tb' → logprob: -11.90694808959961
    9. '	builder' → logprob: -14.53194808959961
    10. 'solver' → logprob: -14.65694808959961

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751529917120934
    2. '=' → logprob: -3.5297515392303467
    3. ' ' → logprob: -14.654751777648926
    4. '   ' → logprob: -14.779751777648926
    5. '  ' → logprob: -16.15475082397461
    6. '    ' → logprob: -16.90475082397461
    7. '       ' → logprob: -17.52975082397461
    8. 'er' → logprob: -17.77975082397461
    9. '        ' → logprob: -17.77975082397461
    10. 's' → logprob: -18.27975082397461

Token 523: ' Tower' (ID: 37994)
  Prédit: 'Tower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -0.25193363428115845
    2. ' Tower' → logprob: -1.5019335746765137
    3. 'Tour' → logprob: -13.751934051513672
    4. '
' → logprob: -14.001934051513672
    5. '   ' → logprob: -14.126934051513672
    6. '       ' → logprob: -14.751934051513672
    7. 'Torch' → logprob: -14.876934051513672
    8. 'Block' → logprob: -16.001934051513672
    9. ' ' → logprob: -16.001934051513672
    10. '```' → logprob: -16.126934051513672

Token 524: 'Builder' (ID: 4542)
  Prédit: 'Builder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Builder' → logprob: -1.1472419600977446e-06
    2. 'builder' → logprob: -13.750000953674316
    3. 'uilder' → logprob: -18.250001907348633
    4. '@Builder' → logprob: -18.625001907348633
    5. ' Builder' → logprob: -19.125001907348633
    6. '_builder' → logprob: -19.375001907348633
    7. '       ' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '```' → logprob: -20.125001907348633
    10. '
' → logprob: -20.125001907348633

Token 525: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.250000953674316
    3. '(block' → logprob: -16.5
    4. '       ' → logprob: -16.75
    5. 'self' → logprob: -17.25
    6. '[self' → logprob: -17.75
    7. '(
' → logprob: -18.25
    8. '(Block' → logprob: -18.625
    9. '((' → logprob: -19.25
    10. '```' → logprob: -19.375

Token 526: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -2.8444881536415778e-05
    2. 'blocks' → logprob: -10.500028610229492
    3. ' .' → logprob: -15.000028610229492
    4. '.block' → logprob: -15.000028610229492
    5. ').' → logprob: -16.500028610229492
    6. '.' → logprob: -16.625028610229492
    7. ' blocks' → logprob: -18.000028610229492
    8. '.b' → logprob: -18.500028610229492
    9. '
' → logprob: -20.125028610229492
    10. '   ' → logprob: -20.125028610229492

Token 527: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.062080394476652145
    2. ')' → logprob: -2.8120803833007812
    3. '       ' → logprob: -9.562080383300781
    4. ')
' → logprob: -10.312080383300781
    5. ')

' → logprob: -12.437080383300781
    6. '   ' → logprob: -13.312080383300781
    7. ').' → logprob: -13.437080383300781
    8. ' )
' → logprob: -13.687080383300781
    9. ')return' → logprob: -15.187080383300781
    10. ' ' → logprob: -15.687080383300781

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030897626653313637
    2. 'return' → logprob: -3.530897617340088
    3. ' return' → logprob: -6.780897617340088
    4. '
' → logprob: -11.655898094177246
    5. '	return' → logprob: -14.280898094177246
    6. '{return' → logprob: -14.780898094177246
    7. '   ' → logprob: -15.030898094177246
    8. 'result' → logprob: -15.155898094177246
    9. '```' → logprob: -15.405898094177246
    10. '<|end|>' → logprob: -15.905898094177246

Token 529: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -5.3120038501219824e-05
    2. '       ' → logprob: -11.000053405761719
    3. ' return' → logprob: -11.000053405761719
    4. 'print' → logprob: -11.250053405761719
    5. 'result' → logprob: -12.375053405761719
    6. 'height' → logprob: -13.250053405761719
    7. 'max' → logprob: -15.000053405761719
    8. '
' → logprob: -15.500053405761719
    9. '   ' → logprob: -17.00005340576172
    10. 'res' → logprob: -17.62505340576172

Token 530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055192552506923676
    2. '=' → logprob: -2.930192470550537
    3. '       ' → logprob: -8.305192947387695
    4. '   ' → logprob: -10.930192947387695
    5. 'ow' → logprob: -11.555192947387695
    6. 'wer' → logprob: -11.805192947387695
    7. 'w' → logprob: -12.055192947387695
    8. '=w' → logprob: -12.430192947387695
    9. '_height' → logprob: -12.555192947387695
    10. '=True' → logprob: -12.680192947387695

Token 531: ' builder' (ID: 11592)
  Prédit: ' builder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' builder' → logprob: -0.25192907452583313
    2. 'builder' → logprob: -1.5019290447235107
    3. '	builder' → logprob: -17.501928329467773
    4. '(builder' → logprob: -18.001928329467773
    5. 'Builder' → logprob: -19.501928329467773
    6. '.builder' → logprob: -19.626928329467773
    7. ' builders' → logprob: -19.876928329467773
    8. '   ' → logprob: -20.501928329467773
    9. '_builder' → logprob: -20.501928329467773
    10. '```' → logprob: -21.251928329467773

Token 532: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -5.931863051955588e-05
    2. '.' → logprob: -9.750059127807617
    3. 'max' → logprob: -14.000059127807617
    4. ' .' → logprob: -16.625059127807617
    5. '.min' → logprob: -17.250059127807617
    6. ' max' → logprob: -19.125059127807617
    7. '..' → logprob: -19.500059127807617
    8. ',max' → logprob: -19.500059127807617
    9. '	max' → logprob: -19.500059127807617
    10. '.maximum' → logprob: -19.625059127807617

Token 533: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -6.511406809295295e-06
    2. 'height' → logprob: -12.000006675720215
    3. '_' → logprob: -16.5000057220459
    4. 'Height' → logprob: -16.6250057220459
    5. ' height' → logprob: -17.5000057220459
    6. '_HEIGHT' → logprob: -17.5000057220459
    7. '_length' → logprob: -17.7500057220459
    8. '_he' → logprob: -18.5000057220459
    9. ' _' → logprob: -19.5000057220459
    10. '_size' → logprob: -19.8750057220459

Token 534: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1594732254743576
    2. '       ' → logprob: -2.034473180770874
    3. '()
' → logprob: -4.284473419189453
    4. '()' → logprob: -6.659473419189453
    5. 'return' → logprob: -7.784473419189453
    6. ' return' → logprob: -7.909473419189453
    7. '        
' → logprob: -8.409473419189453
    8. '
' → logprob: -8.409473419189453
    9. '<|end|>' → logprob: -8.409473419189453
    10. '  
' → logprob: -10.534473419189453

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004658087622374296
    2. '
' → logprob: -5.504658222198486
    3. ' return' → logprob: -8.004657745361328
    4. 'return' → logprob: -8.754657745361328
    5. '<|end|>' → logprob: -10.129657745361328
    6. '   ' → logprob: -10.754657745361328
    7. '```' → logprob: -11.504657745361328
    8. '        
' → logprob: -11.879657745361328
    9. '	return' → logprob: -13.379657745361328
    10. ',' → logprob: -13.754657745361328

Token 536: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3207414746284485
    2. '       ' → logprob: -1.3207414150238037
    3. ' return' → logprob: -5.695741653442383
    4. '
' → logprob: -6.195741653442383
    5. 'print' (adapté à ' print') → logprob: -6.195741653442383
    6. '        
' → logprob: -12.570741653442383
    7. '	return' → logprob: -12.570741653442383
    8. '   ' → logprob: -12.570741653442383
    9. '	' → logprob: -13.570741653442383
    10. ' print' → logprob: -14.320741653442383

Token 537: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.56102097814437e-05
    2. '(' → logprob: -10.000045776367188
    3. 'ans' → logprob: -16.750045776367188
    4. '(
' → logprob: -17.000045776367188
    5. '(f' → logprob: -17.125045776367188
    6. ' (' → logprob: -17.875045776367188
    7. '(answer' → logprob: -18.250045776367188
    8. '()' → logprob: -18.375045776367188
    9. '(abs' → logprob: -19.000045776367188
    10. '	ans' → logprob: -19.250045776367188

Token 538: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -14.00000286102295
    3. '()' → logprob: -14.25000286102295
    4. '())' → logprob: -14.25000286102295
    5. '`)' → logprob: -16.250001907348633
    6. ' )' → logprob: -16.375001907348633
    7. ')`' → logprob: -16.625001907348633
    8. '       ' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.125001907348633
    10. '')' → logprob: -17.500001907348633

Token 539: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003576304006855935
    2. 'def' → logprob: -8.375357627868652
    3. '#' → logprob: -9.750357627868652
    4. ' if' → logprob: -10.375357627868652
    5. '```' → logprob: -11.000357627868652
    6. 'd' → logprob: -11.500357627868652
    7. '
' → logprob: -11.875357627868652
    8. 'import' → logprob: -14.250357627868652
    9. '<|end|>' → logprob: -14.875357627868652
    10. 'danger' → logprob: -15.000357627868652

Token 540: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0004689226043410599
    2. 'main' → logprob: -8.375469207763672
    3. ' __' → logprob: -8.625469207763672
    4. ' run' → logprob: -10.125469207763672
    5. ' solve' → logprob: -11.250469207763672
    6. '_main' → logprob: -12.625469207763672
    7. '__' → logprob: -14.250469207763672
    8. ' ' → logprob: -14.375469207763672
    9. '	main' → logprob: -14.750469207763672
    10. ' mains' → logprob: -15.375469207763672

Token 541: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011212585377506912
    2. '():
' → logprob: -9.125112533569336
    3. ' ():' → logprob: -13.125112533569336
    4. '()' → logprob: -14.000112533569336
    5. '():
' → logprob: -16.375112533569336
    6. ':' → logprob: -16.375112533569336
    7. '():

' → logprob: -16.750112533569336
    8. '(' → logprob: -17.500112533569336
    9. '()>' → logprob: -17.625112533569336
    10. '();' → logprob: -18.125112533569336

Token 542: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017093708738684654
    2. 'import' → logprob: -5.017093658447266
    3. ' if' → logprob: -5.517093658447266
    4. 'if' → logprob: -5.767093658447266
    5. ' import' → logprob: -6.392093658447266
    6. ' input' → logprob: -7.267093658447266
    7. 'input' → logprob: -8.017093658447266
    8. ' solver' → logprob: -8.642093658447266
    9. ' lines' → logprob: -9.017093658447266
    10. 'solver' → logprob: -9.767093658447266

Token 543: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.22399169206619263
    2. ' import' → logprob: -1.9739916324615479
    3. 'solver' → logprob: -3.723991632461548
    4. 'input' → logprob: -3.848991632461548
    5. ' input' → logprob: -5.473991870880127
    6. '   ' → logprob: -5.848991870880127
    7. 'if' → logprob: -5.848991870880127
    8. ' solver' → logprob: -6.098991870880127
    9. 'raw' → logprob: -7.223991870880127
    10. 'lines' → logprob: -7.348991870880127

Token 544: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12692926824092865
    2. ' sys' → logprob: -2.12692928314209
    3. '=sys' → logprob: -14.00192928314209
    4. '	sys' → logprob: -15.62692928314209
    5. '(sys' → logprob: -16.626928329467773
    6. '_sys' → logprob: -17.876928329467773
    7. '```' → logprob: -18.751928329467773
    8. '.sys' → logprob: -19.251928329467773
    9. 'io' → logprob: -20.376928329467773
    10. 's' → logprob: -21.001928329467773

Token 545: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36371031403541565
    2. '   ' → logprob: -1.2387102842330933
    3. '    
' → logprob: -4.988710403442383
    4. 'input' → logprob: -4.988710403442383
    5. ' input' → logprob: -7.613710403442383
    6. ' lines' → logprob: -7.988710403442383
    7. '	lines' → logprob: -8.863710403442383
    8. ' 
' → logprob: -8.988710403442383
    9. '_input' → logprob: -9.613710403442383
    10. '   
' → logprob: -9.738710403442383

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.213231161236763
    2. 'input' → logprob: -2.338231086730957
    3. ' lines' → logprob: -2.963231086730957
    4. ' input' → logprob: -3.213231086730957
    5. ' raw' → logprob: -6.963231086730957
    6. '    
' → logprob: -7.463231086730957
    7. 'lines' → logprob: -7.463231086730957
    8. '
' → logprob: -7.963231086730957
    9. '	lines' → logprob: -8.213231086730957
    10. 'raw' → logprob: -8.463231086730957

Token 547: ' solver' (ID: 63271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16858120262622833
    2. ' input' → logprob: -1.918581247329712
    3. '   ' → logprob: -5.543581008911133
    4. ' lines' → logprob: -6.043581008911133
    5. 'lines' → logprob: -6.668581008911133
    6. ' raw' → logprob: -8.043581008911133
    7. 'raw' → logprob: -8.293581008911133
    8. 'solver' (adapté à ' solver') → logprob: -9.168581008911133
    9. 'data' → logprob: -9.918581008911133
    10. ' solver' → logprob: -11.543581008911133

Token 548: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008620131760835648
    2. '=' → logprob: -4.758620262145996
    3. '.' → logprob: -12.633620262145996
    4. '(' → logprob: -13.508620262145996
    5. ' ' → logprob: -15.133620262145996
    6. '()' → logprob: -15.258620262145996
    7. '   ' → logprob: -15.758620262145996
    8. ')' → logprob: -16.75861930847168
    9. '.=' → logprob: -16.88361930847168
    10. '  ' → logprob: -16.88361930847168

Token 549: ' Dangerous' (ID: 148632)
  Prédit: 'Danger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Danger' → logprob: -0.16022950410842896
    2. ' Dangerous' → logprob: -1.9102294445037842
    3. 'Dang' → logprob: -12.785229682922363
    4. ' dangerous' → logprob: -13.035229682922363
    5. '	D' → logprob: -16.410228729248047
    6. '_D' → logprob: -16.535228729248047
    7. 'danger' → logprob: -16.535228729248047
    8. 'D' → logprob: -16.910228729248047
    9. ' Danger' → logprob: -17.160228729248047
    10. '危险' → logprob: -18.410228729248047

Token 550: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -7.941850526549388e-06
    2. 'Solver' → logprob: -12.125007629394531
    3. '
' → logprob: -14.500007629394531
    4. ' Tower' → logprob: -14.750007629394531
    5. 'To' → logprob: -14.875007629394531
    6. '```' → logprob: -14.875007629394531
    7. 'Tow' → logprob: -15.125007629394531
    8. 'tower' → logprob: -15.250007629394531
    9. '_T' → logprob: -16.25000762939453
    10. 'Tour' → logprob: -17.87500762939453

Token 551: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -7.707997428951785e-05
    2. 'solver' → logprob: -9.500077247619629
    3. '_solver' → logprob: -13.500077247619629
    4. 'olver' → logprob: -14.625077247619629
    5. ' solver' → logprob: -16.125076293945312
    6. ' Solver' → logprob: -16.125076293945312
    7. 'Solve' → logprob: -16.500076293945312
    8. 'solve' → logprob: -16.500076293945312
    9. 'Sol' → logprob: -18.000076293945312
    10. '   ' → logprob: -18.250076293945312

Token 552: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -9.782141569303349e-05
    2. 'sys' → logprob: -9.50009822845459
    3. '(' → logprob: -10.87509822845459
    4. ' sys' → logprob: -13.62509822845459
    5. ' (' → logprob: -14.12509822845459
    6. '(s' → logprob: -14.25009822845459
    7. '   ' → logprob: -14.75009822845459
    8. '=sys' → logprob: -15.37509822845459
    9. '	sys' → logprob: -15.37509822845459
    10. '((' → logprob: -15.75009822845459

Token 553: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.011072585359215736
    2. '.argv' → logprob: -4.511072635650635
    3. '.' → logprob: -10.761072158813477
    4. '.stdout' → logprob: -13.011072158813477
    5. 'stdin' → logprob: -14.136072158813477
    6. '.std' → logprob: -15.511072158813477
    7. '.stderr' → logprob: -16.386072158813477
    8. '(stdin' → logprob: -16.511072158813477
    9. 'argv' → logprob: -16.636072158813477
    10. ' .' → logprob: -16.761072158813477

Token 554: '.read' (ID: 7211)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008966236375272274
    2. '.readline' → logprob: -5.258966445922852
    3. '.readlines' → logprob: -5.633966445922852
    4. '.read' → logprob: -9.258966445922852
    5. ')
' → logprob: -10.133966445922852
    6. ')>' → logprob: -13.008966445922852
    7. ')#' → logprob: -13.008966445922852
    8. 'read' → logprob: -13.258966445922852
    9. '<|end|>' → logprob: -13.383966445922852
    10. ').' → logprob: -13.883966445922852

Token 555: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0002917254460044205
    2. '()' → logprob: -8.25029182434082
    3. '().' → logprob: -11.25029182434082
    4. ')' → logprob: -11.62529182434082
    5. ' ())' → logprob: -12.25029182434082
    6. '())
' → logprob: -12.87529182434082
    7. '())

' → logprob: -14.00029182434082
    8. '();)' → logprob: -16.25029182434082
    9. '()))' → logprob: -16.75029182434082
    10. '()]' → logprob: -17.12529182434082

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016467027366161346
    2. 'solver' → logprob: -4.141467094421387
    3. '
' → logprob: -8.391467094421387
    4. ' solver' → logprob: -8.641467094421387
    5. '	s' → logprob: -11.641467094421387
    6. '    
' → logprob: -11.766467094421387
    7. '_solver' → logprob: -11.891467094421387
    8. '  ' → logprob: -13.266467094421387
    9. '<|end|>' → logprob: -13.641467094421387
    10. ' ' → logprob: -14.266467094421387

Token 557: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -3.35706390615087e-05
    2. '   ' → logprob: -11.000033378601074
    3. ' solver' → logprob: -11.000033378601074
    4. 'sol' → logprob: -17.00003433227539
    5. 'solve' → logprob: -17.50003433227539
    6. '_solver' → logprob: -18.37503433227539
    7. '    
' → logprob: -18.87503433227539
    8. 'scheduler' → logprob: -19.00003433227539
    9. '
' → logprob: -19.62503433227539
    10. '  ' → logprob: -19.75003433227539

Token 558: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -8.41866585687967e-06
    2. '.' → logprob: -11.750008583068848
    3. ' .' → logprob: -15.500008583068848
    4. '.run' → logprob: -16.12500762939453
    5. '.sol' → logprob: -17.25000762939453
    6. '.execute' → logprob: -17.37500762939453
    7. '.s' → logprob: -17.75000762939453
    8. '.resolve' → logprob: -18.62500762939453
    9. 'solve' → logprob: -18.62500762939453
    10. '.
' → logprob: -18.75000762939453

Token 559: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24781297147274017
    2. '<|end|>' → logprob: -1.6228129863739014
    3. '
' → logprob: -4.122812747955322
    4. '()
' → logprob: -5.497812747955322
    5. '```' → logprob: -7.122812747955322
    6. 'if' → logprob: -7.872812747955322
    7. ')' → logprob: -8.49781322479248
    8. '<|end|>' → logprob: -9.24781322479248
    9. '(
' → logprob: -9.49781322479248
    10. '()

' → logprob: -9.74781322479248

Token 560: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007037336472421885
    2. ' if' → logprob: -8.125703811645508
    3. 'main' → logprob: -8.625703811645508
    4. '
' → logprob: -9.250703811645508
    5. '```' → logprob: -9.375703811645508
    6. '<|end|>' → logprob: -10.500703811645508
    7. '#' → logprob: -11.375703811645508
    8. '\n' → logprob: -12.375703811645508
    9. '__' → logprob: -13.875703811645508
    10. '[' → logprob: -14.125703811645508

Token 561: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04866878315806389
    2. '__' → logprob: -3.04866886138916
    3. '_' → logprob: -9.54866886138916
    4. '_name' → logprob: -12.17366886138916
    5. '___' → logprob: -13.29866886138916
    6. 'name' → logprob: -13.42366886138916
    7. ' ' → logprob: -14.17366886138916
    8. ' ' → logprob: -14.54866886138916
    9. ' _' → logprob: -15.17366886138916
    10. ' ___' → logprob: -16.423667907714844

Token 562: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.032605938613414764
    2. '==' → logprob: -4.03260612487793
    3. ' ==' → logprob: -4.28260612487793
    4. '_' → logprob: -8.65760612487793
    5. '=="' → logprob: -8.90760612487793
    6. ' __' → logprob: -9.03260612487793
    7. '=='' → logprob: -10.65760612487793
    8. '__.__' → logprob: -11.03260612487793
    9. '.__' → logprob: -11.28260612487793
    10. 'name' → logprob: -11.40760612487793

Token 563: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00044377794256433845
    2. '==' → logprob: -7.750443935394287
    3. '=="' → logprob: -11.625443458557129
    4. ' ==' → logprob: -12.625443458557129
    5. '__.__' → logprob: -14.625443458557129
    6. '=='' → logprob: -16.375444412231445
    7. '___' → logprob: -16.625444412231445
    8. '_' → logprob: -17.500444412231445
    9. '"' → logprob: -17.500444412231445
    10. '____' → logprob: -17.750444412231445

Token 564: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7043323516845703
    2. '__' → logprob: -0.7043323516845703
    3. ' ==' → logprob: -4.70433235168457
    4. '=="' → logprob: -6.57933235168457
    5. '=='' → logprob: -7.32933235168457
    6. '=' → logprob: -11.57933235168457
    7. '===' → logprob: -12.70433235168457
    8. '==
' → logprob: -12.82933235168457
    9. '_' → logprob: -13.20433235168457
    10. '___' → logprob: -13.45433235168457

Token 565: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0024962294846773148
    2. ''' → logprob: -6.002496242523193
    3. ' "__' → logprob: -10.877495765686035
    4. '__' → logprob: -13.752495765686035
    5. '"user' → logprob: -15.127495765686035
    6. '"name' → logprob: -15.877495765686035
    7. ' '__' → logprob: -16.25249671936035
    8. '"class' → logprob: -17.00249671936035
    9. '"default' → logprob: -17.62749671936035
    10. '"type' → logprob: -17.87749671936035

Token 566: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011676260270178318
    2. '__' → logprob: -4.51167631149292
    3. '"' → logprob: -7.76167631149292
    4. ''' → logprob: -8.636675834655762
    5. 'name' → logprob: -10.886675834655762
    6. '_main' → logprob: -13.511675834655762
    7. ''m' → logprob: -13.511675834655762
    8. ' main' → logprob: -14.011675834655762
    9. '__":
' → logprob: -14.886675834655762
    10. 'm' → logprob: -15.136675834655762

Token 567: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38756030797958374
    2. '__":
' → logprob: -1.1375603675842285
    3. '__':
' → logprob: -7.6375603675842285
    4. '__.__' → logprob: -9.26255989074707
    5. '__.' → logprob: -9.63755989074707
    6. '__["' → logprob: -10.13755989074707
    7. '__
' → logprob: -13.01255989074707
    8. '__
' → logprob: -13.38755989074707
    9. '__:' → logprob: -13.76255989074707
    10. '__("' → logprob: -14.26255989074707

Token 568: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011255897581577301
    2. ''' → logprob: -4.511255741119385
    3. ' "__' → logprob: -8.636256217956543
    4. '   ' → logprob: -10.886256217956543
    5. '__' → logprob: -11.636256217956543
    6. ' '__' → logprob: -13.386256217956543
    7. '"_' → logprob: -14.136256217956543
    8. ' ' → logprob: -16.011255264282227
    9. '("__' → logprob: -16.136255264282227
    10. 'main' → logprob: -16.136255264282227

Token 569: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.5048530030981055e-06
    2. ' main' → logprob: -13.500001907348633
    3. '	main' → logprob: -21.000001907348633
    4. 'mai' → logprob: -23.250001907348633
    5. 'ma' → logprob: -23.375001907348633
    6. '   ' → logprob: -23.625001907348633
    7. 'm' → logprob: -24.875001907348633
    8. 'maine' → logprob: -25.500001907348633
    9. '.main' → logprob: -25.625001907348633
    10. '(main' → logprob: -25.750001907348633

Token 570: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 568
Tokens correctement prédits (1ère position, stricte): 243
Tokens correctement prédits (1ère position, avec adaptation): 277
Tokens correctement prédits (top 10): 475
Précision stricte (1ère position): 42.78%
Précision adaptée (1ère position): 48.77%
Précision (top 10): 83.63%
================================================================================
