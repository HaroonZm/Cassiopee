================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class DarumaOtoshiGame:
    class Block:
        def __init__(self, weight: int, position: int):
            self.weight = weight
            self.position = position

        def __repr__(self):
            return f"Block(w={self.weight}, pos={self.position})"

    class Stack:
        def __init__(self, blocks):
            self.blocks = blocks  # List[DarumaOtoshiGame.Block]

        def can_remove_pair(self, i, j):
            # Can remove two adjacent blocks at positions i, j if |weight_i - weight_j| <= 1
            if abs(self.blocks[i].weight - self.blocks[j].weight) <= 1:
                return True
            return False

        def remove_pair(self, i, j):
            # Remove two adjacent blocks i and j and return a new Stack
            new_blocks = self.blocks[:i] + self.blocks[j + 1:]
            # Re-index positions
            for idx, blk in enumerate(new_blocks):
                blk.position = idx
            return DarumaOtoshiGame.Stack(new_blocks)

        def __len__(self):
            return len(self.blocks)

        def __repr__(self):
            return f"Stack({self.blocks})"

    class Solver:
        def __init__(self, weights):
            self.original_weights = weights
            self.n = len(weights)
            self.memo = dict()

        def _encode_state(self, stack):
            # Encode the state as a tuple of weights
            return tuple(blk.weight for blk in stack.blocks)

        def max_removed_blocks(self, stack):
            state_key = self._encode_state(stack)
            if state_key in self.memo:
                return self.memo[state_key]

            max_removed = 0
            length = len(stack)
            # Try every possible adjacent pair removal
            for i in range(length - 1):
                if stack.can_remove_pair(i, i + 1):
                    new_stack = stack.remove_pair(i, i + 1)
                    removed = 2 + self.max_removed_blocks(new_stack)
                    if removed > max_removed:
                        max_removed = removed

            self.memo[state_key] = max_removed
            return max_removed

    class InputParser:
        @staticmethod
        def parse_input(lines):
            # Parse lines input into list of datasets (list of weights per dataset)
            datasets = []
            idx = 0
            while idx < len(lines):
                line = lines[idx].strip()
                if line == "0":
                    break
                n = int(line)
                idx += 1
                weights_line = lines[idx].strip()
                weights = list(map(int, weights_line.split()))
                idx += 1
                datasets.append(weights)
            return datasets

    @staticmethod
    def run_solver(weights_list):
        results = []
        for weights in weights_list:
            blocks = [DarumaOtoshiGame.Block(w, pos) for pos, w in enumerate(weights)]
            stack = DarumaOtoshiGame.Stack(blocks)
            solver = DarumaOtoshiGame.Solver(weights)
            result = solver.max_removed_blocks(stack)
            results.append(result)
        return results


def main():
    import sys
    input_lines = sys.stdin.read().strip().split('\n')
    datasets = DarumaOtoshiGame.InputParser.parse_input(input_lines)
    answers = DarumaOtoshiGame.run_solver(datasets)
    for ans in answers:
        print(ans)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dar' (ID: 17214)
  → Token d'amorce (pas de prédiction)

Token 2: 'uma' (ID: 5669)
  → Token d'amorce (pas de prédiction)

Token 3: 'O' (ID: 46)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2547720670700073
    2. '(' → logprob: -1.8797720670700073
    3. '{' → logprob: -2.879772186279297
    4. '.' → logprob: -4.379772186279297
    5. ' {' → logprob: -6.004772186279297
    6. '```' → logprob: -7.254772186279297
    7. ' :' → logprob: -9.379772186279297
    8. ' ' → logprob: -9.504772186279297
    9. '(:' → logprob: -10.129772186279297
    10. '():' → logprob: -10.379772186279297

Token 4: 'tos' (ID: 33712)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7057122588157654
    2. ':' → logprob: -0.9557122588157654
    3. '{' → logprob: -2.20571231842041
    4. ' {' → logprob: -5.33071231842041
    5. '.' → logprob: -5.70571231842041
    6. ' :' → logprob: -7.08071231842041
    7. '```' → logprob: -7.45571231842041
    8. '({' → logprob: -8.20571231842041
    9. ' (' → logprob: -8.45571231842041
    10. ' ' → logprob: -8.58071231842041

Token 5: 'hi' (ID: 3686)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4226202368736267
    2. '(' → logprob: -1.7976202964782715
    3. '{' → logprob: -1.7976202964782715
    4. ' {' → logprob: -4.5476202964782715
    5. ' ' → logprob: -7.0476202964782715
    6. ' :' → logprob: -7.5476202964782715
    7. ' (' → logprob: -7.7976202964782715
    8. '.' → logprob: -8.047619819641113
    9. '(:' → logprob: -9.047619819641113
    10. '({' → logprob: -9.422619819641113

Token 6: 'Game' (ID: 6627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4839266538619995
    2. '(' → logprob: -1.2339266538619995
    3. '{' → logprob: -3.358926773071289
    4. ':' → logprob: -3.733926773071289
    5. '.' → logprob: -4.358926773071289
    6. ' {' → logprob: -4.858926773071289
    7. '  
' → logprob: -5.608926773071289
    8. '```' → logprob: -5.733926773071289
    9. '\' → logprob: -6.608926773071289
    10. ' (' → logprob: -6.983926773071289

Token 7: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2181568145751953
    2. '(' → logprob: -2.2181568145751953
    3. '{' → logprob: -2.4681568145751953
    4. '.' → logprob: -6.218156814575195
    5. ' {' → logprob: -8.718156814575195
    6. '(:' → logprob: -9.093156814575195
    7. '```' → logprob: -9.968156814575195
    8. ' ' → logprob: -10.843156814575195
    9. '():' → logprob: -10.968156814575195
    10. '({' → logprob: -11.218156814575195

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19711601734161377
    2. '(' → logprob: -1.8221160173416138
    3. '   ' → logprob: -5.197115898132324
    4. '```' → logprob: -5.947115898132324
    5. '.' → logprob: -6.197115898132324
    6. '(
' → logprob: -6.322115898132324
    7. '\' → logprob: -6.822115898132324
    8. '():' → logprob: -7.447115898132324
    9. ' (' → logprob: -7.572115898132324
    10. ''' → logprob: -7.697115898132324

Token 9: ' class' (ID: 744)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5383021235466003
    2. '   ' → logprob: -1.2883021831512451
    3. '    
' → logprob: -3.163302183151245
    4. '    ' → logprob: -4.288301944732666
    5. '<|end|>' → logprob: -4.413301944732666
    6. ' 
' → logprob: -4.538301944732666
    7. '(' → logprob: -4.538301944732666
    8. '```' → logprob: -4.913301944732666
    9. ''' → logprob: -5.038301944732666
    10. ' (' → logprob: -5.163301944732666

Token 10: ' Block' (ID: 13063)
  Prédit: ' Dar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Dar' → logprob: -0.20511583983898163
    2. ' Player' → logprob: -1.955115795135498
    3. 'Dar' → logprob: -4.205115795135498
    4. ' Game' → logprob: -5.705115795135498
    5. ' def' → logprob: -5.830115795135498
    6. ' __' → logprob: -5.955115795135498
    7. ' Builder' → logprob: -6.205115795135498
    8. ' Level' → logprob: -6.205115795135498
    9. ' Token' → logprob: -6.330115795135498
    10. ' Engine' → logprob: -6.330115795135498

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2530100345611572
    2. '(' → logprob: -1.5030100345611572
    3. '<|end|>' → logprob: -7.503009796142578
    4. ' :' → logprob: -9.503009796142578
    5. '(Block' → logprob: -9.628009796142578
    6. '[' → logprob: -10.003009796142578
    7. '():' → logprob: -10.128009796142578
    8. '   ' → logprob: -10.253009796142578
    9. '(
' → logprob: -10.628009796142578
    10. ' (' → logprob: -10.878009796142578

Token 12: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036330778151750565
    2. ':' → logprob: -5.036330699920654
    3. '\' → logprob: -5.036330699920654
    4. '       ' → logprob: -5.036330699920654
    5. '<|end|>' → logprob: -5.411330699920654
    6. '   ' → logprob: -6.036330699920654
    7. '    ' → logprob: -6.286330699920654
    8. '(
' → logprob: -6.411330699920654
    9. '(n' → logprob: -6.911330699920654
    10. '(object' → logprob: -7.411330699920654

Token 13: ' def' (ID: 1056)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.9917271137237549
    2. '(' → logprob: -1.6167271137237549
    3. '       ' → logprob: -2.116727113723755
    4. ' ' → logprob: -2.116727113723755
    5. '    ' → logprob: -3.241727113723755
    6. '   ' → logprob: -3.741727113723755
    7. '_' → logprob: -3.866727113723755
    8. '           ' → logprob: -4.116726875305176
    9. ' (' → logprob: -4.491726875305176
    10. '            ' → logprob: -4.491726875305176

Token 14: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01145661249756813
    2. '__' → logprob: -4.511456489562988
    3. ' init' → logprob: -8.761456489562988
    4. '_' → logprob: -9.386456489562988
    5. '_init' → logprob: -9.386456489562988
    6. ' ' → logprob: -10.261456489562988
    7. 'init' → logprob: -10.386456489562988
    8. ' ' → logprob: -12.011456489562988
    9. ' _' → logprob: -12.386456489562988
    10. ' constructor' → logprob: -13.636456489562988

Token 15: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.5048530030981055e-06
    2. ' init' → logprob: -14.250001907348633
    3. 'ini' → logprob: -14.625001907348633
    4. 'i' → logprob: -16.125001907348633
    5. 'in' → logprob: -16.375001907348633
    6. 'inite' → logprob: -17.625001907348633
    7. '	init' → logprob: -17.750001907348633
    8. 'int' → logprob: -18.125001907348633
    9. '_init' → logprob: -18.125001907348633
    10. '```' → logprob: -18.625001907348633

Token 16: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11163506656885147
    2. '(' → logprob: -2.8616349697113037
    3. '__' → logprob: -3.1116349697113037
    4. '__(
' → logprob: -6.236635208129883
    5. '_' → logprob: -7.236635208129883
    6. '(self' → logprob: -7.361635208129883
    7. '__('' → logprob: -8.736635208129883
    8. '__((' → logprob: -8.986635208129883
    9. '_(' → logprob: -9.111635208129883
    10. ' (' → logprob: -10.111635208129883

Token 17: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004080301150679588
    2. ' self' → logprob: -5.504080295562744
    3. ')' → logprob: -14.004080772399902
    4. '(self' → logprob: -14.879080772399902
    5. '_self' → logprob: -15.754080772399902
    6. '	self' → logprob: -16.254079818725586
    7. ''s' → logprob: -16.254079818725586
    8. 'block' → logprob: -16.504079818725586
    9. '0' → logprob: -16.629079818725586
    10. 's' → logprob: -16.879079818725586

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061133723706007004
    2. 'self' → logprob: -3.061133623123169
    3. ' ,' → logprob: -4.686133861541748
    4. ',self' → logprob: -6.561133861541748
    5. ' self' → logprob: -6.686133861541748
    6. '(self' → logprob: -8.18613338470459
    7. ')' → logprob: -9.18613338470459
    8. '_self' → logprob: -9.31113338470459
    9. '<|end|>' → logprob: -10.43613338470459
    10. '_,' → logprob: -11.18613338470459

Token 19: ' weight' (ID: 6049)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.6437793374061584
    2. ' self' → logprob: -1.0187792778015137
    3. ' name' → logprob: -3.2687792778015137
    4. 'self' → logprob: -3.6437792778015137
    5. 'color' → logprob: -4.018779277801514
    6. ' text' → logprob: -5.143779277801514
    7. ' height' → logprob: -5.268779277801514
    8. ' level' → logprob: -5.643779277801514
    9. ' size' → logprob: -5.768779277801514
    10. ' x' → logprob: -6.143779277801514

Token 20: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024117253720760345
    2. ',' → logprob: -4.274117469787598
    3. '=' → logprob: -4.774117469787598
    4. ' ):' → logprob: -7.399117469787598
    5. ':' → logprob: -7.524117469787598
    6. ')' → logprob: -8.524117469787598
    7. ' ,' → logprob: -10.024117469787598
    8. '=None' → logprob: -11.274117469787598
    9. ' ' → logprob: -11.399117469787598
    10. '):
' → logprob: -11.399117469787598

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.22559955716133118
    2. 'int' → logprob: -1.6005995273590088
    3. ' ' → logprob: -9.47559928894043
    4. ' float' → logprob: -10.10059928894043
    5. ':int' → logprob: -10.35059928894043
    6. '=int' → logprob: -11.47559928894043
    7. 'float' → logprob: -12.35059928894043
    8. ')' → logprob: -12.47559928894043
    9. '(int' → logprob: -12.60059928894043
    10. ' str' → logprob: -12.85059928894043

Token 22: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15349110960960388
    2. ',' → logprob: -2.1534910202026367
    3. ')' → logprob: -3.6534910202026367
    4. ' ):' → logprob: -9.153491020202637
    5. ':' → logprob: -9.653491020202637
    6. ' ,' → logprob: -9.778491020202637
    7. '):
' → logprob: -10.528491020202637
    8. ' ' → logprob: -11.403491020202637
    9. ' )' → logprob: -11.653491020202637
    10. '<|end|>' → logprob: -11.903491020202637

Token 23: ' position' (ID: 4010)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.04976538568735123
    2. ' material' → logprob: -4.299765586853027
    3. ' height' → logprob: -4.549765586853027
    4. ' position' → logprob: -4.674765586853027
    5. 'color' → logprob: -4.799765586853027
    6. ' name' → logprob: -5.299765586853027
    7. ' level' → logprob: -8.299765586853027
    8. ' is' → logprob: -8.674765586853027
    9. ' layer' → logprob: -8.799765586853027
    10. ' size' → logprob: -8.924765586853027

Token 24: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18717244267463684
    2. ':' → logprob: -1.8121724128723145
    3. ')' → logprob: -5.3121724128723145
    4. ',' → logprob: -6.3121724128723145
    5. ' ):' → logprob: -7.8121724128723145
    6. '=' → logprob: -9.312172889709473
    7. ':int' → logprob: -9.562172889709473
    8. '):
' → logprob: -9.937172889709473
    9. '=None' → logprob: -11.187172889709473
    10. ' :' → logprob: -11.937172889709473

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4742029905319214
    2. 'int' → logprob: -0.9742029905319214
    3. ')' → logprob: -10.099203109741211
    4. ':int' → logprob: -10.599203109741211
    5. '[int' → logprob: -10.974203109741211
    6. '<int' → logprob: -11.724203109741211
    7. ' ' → logprob: -12.224203109741211
    8. '(int' → logprob: -12.349203109741211
    9. ' )' → logprob: -12.349203109741211
    10. '<|end|>' → logprob: -12.349203109741211

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007990812882781029
    2. ')' → logprob: -4.882990837097168
    3. ',' → logprob: -8.007990837097168
    4. ':' → logprob: -10.757990837097168
    5. ' ):' → logprob: -10.882990837097168
    6. '):
' → logprob: -11.632990837097168
    7. '   ' → logprob: -14.632990837097168
    8. '       ' → logprob: -14.632990837097168
    9. ' ,' → logprob: -14.757990837097168
    10. ' )' → logprob: -14.757990837097168

Token 27: '           ' (ID: 352)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12021876126527786
    2. ')' → logprob: -2.6202187538146973
    3. '       ' → logprob: -3.9952187538146973
    4. ',' → logprob: -4.495218753814697
    5. ' ):' → logprob: -5.620218753814697
    6. '           ' → logprob: -6.245218753814697
    7. ':' → logprob: -6.370218753814697
    8. ' )' → logprob: -6.620218753814697
    9. ' ,' → logprob: -7.495218753814697
    10. '):
' → logprob: -7.995218753814697

Token 28: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.963233232498169
    2. 'self' (adapté à ' self') → logprob: -1.338233232498169
    3. '               ' → logprob: -1.338233232498169
    4. '           ' → logprob: -2.463233232498169
    5. '            ' → logprob: -5.58823299407959
    6. ' ' → logprob: -5.96323299407959
    7. '       ' → logprob: -7.46323299407959
    8. '             ' → logprob: -7.71323299407959
    9. '                ' → logprob: -7.96323299407959
    10. ' ' → logprob: -8.46323299407959

Token 29: '.weight' (ID: 49415)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25250333547592163
    2. '.weight' → logprob: -1.5025033950805664
    3. '.position' → logprob: -8.002503395080566
    4. ' .' → logprob: -8.877503395080566
    5. '.weights' → logprob: -10.752503395080566
    6. '.we' → logprob: -11.377503395080566
    7. '._' → logprob: -11.627503395080566
    8. 'weight' → logprob: -11.627503395080566
    9. '.w' → logprob: -11.877503395080566
    10. '.block' → logprob: -11.877503395080566

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055876050144433975
    2. '=' → logprob: -2.9308760166168213
    3. ' ' → logprob: -7.3058762550354
    4. '<|end|>' → logprob: -8.555875778198242
    5. ')' → logprob: -10.180875778198242
    6. ' +=' → logprob: -10.680875778198242
    7. '.' → logprob: -11.055875778198242
    8. ',' → logprob: -11.305875778198242
    9. '<|end|>' → logprob: -11.805875778198242
    10. '_' → logprob: -11.930875778198242

Token 31: ' weight' (ID: 6049)
  Prédit: ' weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.02975129522383213
    2. 'weight' → logprob: -3.5297513008117676
    3. '(weight' → logprob: -15.15475082397461
    4. ' gewicht' → logprob: -16.27975082397461
    5. 'weig' → logprob: -16.27975082397461
    6. ' ' → logprob: -16.40475082397461
    7. ' weig' → logprob: -16.52975082397461
    8. '.weight' → logprob: -17.15475082397461
    9. '_weight' → logprob: -17.15475082397461
    10. ' ' → logprob: -17.27975082397461

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7549314498901367
    2. 'self' (adapté à ' self') → logprob: -0.7549314498901367
    3. '
' → logprob: -4.004931449890137
    4. ' self' → logprob: -4.129931449890137
    5. 'position' → logprob: -4.379931449890137
    6. '            ' → logprob: -5.754931449890137
    7. '               ' → logprob: -5.879931449890137
    8. '\n' → logprob: -6.504931449890137
    9. ' ' → logprob: -6.754931449890137
    10. '       ' → logprob: -7.004931449890137

Token 35: '.position' (ID: 13130)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05498642846941948
    2. '.position' → logprob: -2.9299864768981934
    3. 'position' → logprob: -10.304986000061035
    4. ' .' → logprob: -10.554986000061035
    5. ' position' → logprob: -10.929986000061035
    6. '.positions' → logprob: -11.554986000061035
    7. '.weight' → logprob: -11.804986000061035
    8. '[position' → logprob: -13.679986000061035
    9. ' positions' → logprob: -13.679986000061035
    10. '<|end|>' → logprob: -13.804986000061035

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143312215805054
    2. '=' → logprob: -1.7014331817626953
    3. ' ' → logprob: -11.576433181762695
    4. ' =
' → logprob: -12.326433181762695
    5. '<|end|>' → logprob: -12.951433181762695
    6. ')' → logprob: -13.201433181762695
    7. ' =)' → logprob: -14.451433181762695
    8. ' ==' → logprob: -15.951433181762695
    9. ' +=' → logprob: -16.076433181762695
    10. '_' → logprob: -16.076433181762695

Token 37: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.029751179739832878
    2. 'position' → logprob: -3.5297510623931885
    3. '	position' → logprob: -15.27975082397461
    4. '(position' → logprob: -15.40475082397461
    5. '0' → logprob: -16.27975082397461
    6. ' ' → logprob: -16.65475082397461
    7. '[position' → logprob: -16.65475082397461
    8. '.position' → logprob: -17.40475082397461
    9. ' weight' → logprob: -17.52975082397461
    10. ' ' → logprob: -18.65475082397461

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20616856217384338
    2. '<|end|>' → logprob: -2.4561686515808105
    3. '       ' → logprob: -3.0811686515808105
    4. '    
' → logprob: -4.3311686515808105
    5. 'newline' → logprob: -4.8311686515808105
    6. '\n' → logprob: -4.8311686515808105
    7. '        
' → logprob: -5.3311686515808105
    8. '   ' → logprob: -5.3311686515808105
    9. ' 
' → logprob: -5.3311686515808105
    10. '```' → logprob: -6.3311686515808105

Token 39: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7983314990997314
    2. '   ' → logprob: -1.5483314990997314
    3. '<|end|>' → logprob: -1.5483314990997314
    4. '    
' → logprob: -2.7983314990997314
    5. '       ' → logprob: -3.6733314990997314
    6. '\n' → logprob: -4.048331260681152
    7. '        
' → logprob: -5.423331260681152
    8. '    ' → logprob: -5.798331260681152
    9. ' 
' → logprob: -5.923331260681152
    10. 'newline' → logprob: -5.923331260681152

Token 40: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12448693811893463
    2. '       ' → logprob: -2.9994869232177734
    3. '
' → logprob: -3.4994869232177734
    4. '   ' → logprob: -3.6244869232177734
    5. '    
' → logprob: -6.124486923217773
    6. '        
' → logprob: -6.499486923217773
    7. '\n' → logprob: -6.499486923217773
    8. '    ' → logprob: -6.749486923217773
    9. ' def' → logprob: -7.124486923217773
    10. '<|end|>' → logprob: -7.499486923217773

Token 41: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.40531396865844727
    2. '__' → logprob: -1.1553139686584473
    3. ' get' → logprob: -4.655313968658447
    4. 'get' → logprob: -4.905313968658447
    5. ' move' → logprob: -8.405313491821289
    6. 'def' → logprob: -8.405313491821289
    7. ' def' → logprob: -8.655313491821289
    8. ' is' → logprob: -9.280313491821289
    9. '_' → logprob: -9.655313491821289
    10. 'move' → logprob: -9.655313491821289

Token 42: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.2655501067638397
    2. 'repr' → logprob: -1.515550136566162
    3. 'str' → logprob: -4.390550136566162
    4. 'init' → logprob: -7.265550136566162
    5. 'lt' → logprob: -7.765550136566162
    6. 'hash' → logprob: -12.390549659729004
    7. 're' → logprob: -13.765549659729004
    8. 'len' → logprob: -14.140549659729004
    9. 'ne' → logprob: -14.265549659729004
    10. 'gt' → logprob: -14.390549659729004

Token 43: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1434241235256195
    2. '(' → logprob: -2.7684240341186523
    3. '__' → logprob: -2.7684240341186523
    4. '(self' → logprob: -5.643424034118652
    5. '__(
' → logprob: -5.768424034118652
    6. '__('' → logprob: -6.893424034118652
    7. '__((' → logprob: -8.893424034118652
    8. '__("' → logprob: -9.268424034118652
    9. '_' → logprob: -9.768424034118652
    10. '__(*' → logprob: -10.518424034118652

Token 44: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.4192871175473556e-05
    2. ')' → logprob: -9.875054359436035
    3. ' self' → logprob: -13.250054359436035
    4. '_self' → logprob: -15.500054359436035
    5. '<|end|>' → logprob: -15.625054359436035
    6. '(self' → logprob: -16.25005340576172
    7. 'sel' → logprob: -16.50005340576172
    8. 'Self' → logprob: -16.75005340576172
    9. ' ' → logprob: -16.87505340576172
    10. 'sef' → logprob: -17.00005340576172

Token 45: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6391802430152893
    2. '):' → logprob: -0.7641802430152893
    3. ',' → logprob: -5.8891801834106445
    4. 'self' → logprob: -6.2641801834106445
    5. '__' → logprob: -7.5141801834106445
    6. '(' → logprob: -7.7641801834106445
    7. ':' → logprob: -9.139180183410645
    8. '_' → logprob: -9.389180183410645
    9. '(self' → logprob: -9.389180183410645
    10. '):
' → logprob: -9.514180183410645

Token 46: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037358261179178953
    2. '       ' → logprob: -6.6287360191345215
    3. ' return' → logprob: -7.1287360191345215
    4. '            ' → logprob: -7.6287360191345215
    5. 'return' → logprob: -8.378735542297363
    6. '        ' → logprob: -8.378735542297363
    7. '               ' → logprob: -8.503735542297363
    8. '   ' → logprob: -9.253735542297363
    9. 'self' → logprob: -9.378735542297363
    10. '"' → logprob: -9.753735542297363

Token 47: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005832810886204243
    2. ' return' → logprob: -5.255832672119141
    3. '           ' → logprob: -7.505832672119141
    4. '       ' → logprob: -10.63083267211914
    5. '   ' → logprob: -11.63083267211914
    6. 'f' → logprob: -12.00583267211914
    7. 'r' → logprob: -12.50583267211914
    8. '{return' → logprob: -12.63083267211914
    9. '               ' → logprob: -14.25583267211914
    10. 're' → logprob: -14.63083267211914

Token 48: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.0619756355881691
    2. 'f' → logprob: -2.8119757175445557
    3. ''' → logprob: -12.936975479125977
    4. '"' → logprob: -13.311975479125977
    5. ''f' → logprob: -13.311975479125977
    6. ' repr' → logprob: -14.061975479125977
    7. '	f' → logprob: -14.436975479125977
    8. ' ' → logprob: -14.686975479125977
    9. 'repr' → logprob: -15.061975479125977
    10. ' ' → logprob: -15.811975479125977

Token 49: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.016621682792901993
    2. ''' → logprob: -5.0166215896606445
    3. '"D' → logprob: -5.0166215896606445
    4. '"{' → logprob: -6.3916215896606445
    5. ''D' → logprob: -7.3916215896606445
    6. ''{' → logprob: -7.6416215896606445
    7. '"class' → logprob: -9.141621589660645
    8. '"<' → logprob: -9.266621589660645
    9. ''"' → logprob: -9.891621589660645
    10. '"B' → logprob: -10.016621589660645

Token 50: 'Block' (ID: 5464)
  Prédit: 'Block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Block' → logprob: -0.23462067544460297
    2. 'Dar' → logprob: -1.6096206903457642
    3. '<Block' → logprob: -4.734620571136475
    4. '<' → logprob: -8.734621047973633
    5. '{' → logprob: -9.234621047973633
    6. '(Block' → logprob: -10.484621047973633
    7. ' Dar' → logprob: -10.859621047973633
    8. '{"' → logprob: -11.234621047973633
    9. '	Block' → logprob: -11.734621047973633
    10. 'block' → logprob: -11.859621047973633

Token 51: '(w' (ID: 7420)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16721726953983307
    2. '({' → logprob: -2.042217254638672
    3. '(weight' → logprob: -4.167217254638672
    4. '{' → logprob: -4.917217254638672
    5. '(weights' → logprob: -7.292217254638672
    6. '(f' → logprob: -9.042217254638672
    7. '("' → logprob: -9.167217254638672
    8. '(self' → logprob: -9.292217254638672
    9. '(block' → logprob: -9.542217254638672
    10. '("{' → logprob: -9.542217254638672

Token 52: '={' (ID: 1693)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.00019781860464718193
    2. 'e' → logprob: -8.625197410583496
    3. 'weight' → logprob: -11.750197410583496
    4. 'eig' → logprob: -12.250197410583496
    5. ' eight' → logprob: -13.000197410583496
    6. 'ei' → logprob: -13.250197410583496
    7. 'Eight' → logprob: -14.125197410583496
    8. 'eid' → logprob: -14.750197410583496
    9. 'height' → logprob: -16.625198364257812
    10. '```' → logprob: -16.750198364257812

Token 53: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005633997498080134
    2. '{' → logprob: -7.500563621520996
    3. 'elf' → logprob: -11.625563621520996
    4. ' self' → logprob: -14.000563621520996
    5. 'sel' → logprob: -16.00056266784668
    6. 's' → logprob: -16.75056266784668
    7. '_self' → logprob: -17.00056266784668
    8. 'e' → logprob: -17.37556266784668
    9. ')' → logprob: -17.50056266784668
    10. 'f' → logprob: -17.62556266784668

Token 54: '.weight' (ID: 49415)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.0381552129983902
    2. 'weight' → logprob: -3.4131553173065186
    3. 'e' → logprob: -5.6631550788879395
    4. 'ight' → logprob: -7.4131550788879395
    5. '.weight' → logprob: -7.9131550788879395
    6. '.e' → logprob: -11.288155555725098
    7. 'eig' → logprob: -11.538155555725098
    8. 'ei' → logprob: -11.663155555725098
    9. 'weig' → logprob: -12.163155555725098
    10. ' eight' → logprob: -12.288155555725098

Token 55: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001182052365038544
    2. ' ,' → logprob: -9.125118255615234
    3. ',
' → logprob: -12.375118255615234
    4. ',

' → logprob: -13.875118255615234
    5. ')' → logprob: -14.125118255615234
    6. '‌,' → logprob: -14.125118255615234
    7. '},' → logprob: -14.250118255615234
    8. '<|end|>' → logprob: -14.375118255615234
    9. '),' → logprob: -14.625118255615234
    10. ',",' → logprob: -15.750118255615234

Token 56: ' pos' (ID: 1253)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.02581295557320118
    2. 'p' → logprob: -4.275813102722168
    3. ' position' → logprob: -5.025813102722168
    4. 'position' → logprob: -5.900813102722168
    5. 'pos' → logprob: -6.525813102722168
    6. ' pos' → logprob: -7.150813102722168
    7. ' ' → logprob: -10.650813102722168
    8. ' ' → logprob: -14.150813102722168
    9. ' f' → logprob: -14.275813102722168
    10. '```' → logprob: -14.775813102722168

Token 57: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.0016403080662712455
    2. '=' → logprob: -6.751640319824219
    3. '{' → logprob: -8.251640319824219
    4. 'ition' → logprob: -8.876640319824219
    5. 'i' → logprob: -10.501640319824219
    6. '{i' → logprob: -11.251640319824219
    7. '}' → logprob: -12.126640319824219
    8. '=}' → logprob: -12.126640319824219
    9. '='{' → logprob: -12.751640319824219
    10. '={
' → logprob: -13.501640319824219

Token 58: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019457722082734108
    2. '{' → logprob: -6.251945972442627
    3. ' self' → logprob: -11.001945495605469
    4. 'elf' → logprob: -15.876945495605469
    5. 's' → logprob: -16.25194549560547
    6. '{s' → logprob: -16.87694549560547
    7. '{
' → logprob: -17.00194549560547
    8. 'f' → logprob: -17.50194549560547
    9. ' {' → logprob: -17.50194549560547
    10. '```' → logprob: -17.62694549560547

Token 59: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -1.1637164789135568e-05
    2. 'position' → logprob: -11.625011444091797
    3. '.' → logprob: -13.250011444091797
    4. '.weight' → logprob: -14.375011444091797
    5. 'osition' → logprob: -15.250011444091797
    6. '.block' → logprob: -17.375011444091797
    7. '[position' → logprob: -17.500011444091797
    8. '	position' → logprob: -17.500011444091797
    9. ').' → logprob: -17.875011444091797
    10. '.pos' → logprob: -18.000011444091797

Token 60: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.4751622974872589
    2. ')' → logprob: -0.9751622676849365
    3. ')}' → logprob: -8.350162506103516
    4. '})' → logprob: -8.350162506103516
    5. ')">' → logprob: -8.350162506103516
    6. ')")' → logprob: -8.600162506103516
    7. '}"' → logprob: -9.350162506103516
    8. '}' → logprob: -10.350162506103516
    9. '")' → logprob: -10.475162506103516
    10. '}")' → logprob: -10.850162506103516

Token 61: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0018871112260967493
    2. ')' → logprob: -7.751887321472168
    3. '\n' → logprob: -7.876887321472168
    4. '"
' → logprob: -8.126887321472168
    5. '"""' → logprob: -8.626887321472168
    6. '```' → logprob: -8.626887321472168
    7. '
' → logprob: -9.001887321472168
    8. ''' → logprob: -9.251887321472168
    9. '")' → logprob: -9.626887321472168
    10. '"\' → logprob: -10.001887321472168

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1282094269990921
    2. '   ' → logprob: -2.878209352493286
    3. '    
' → logprob: -2.878209352493286
    4. '

' → logprob: -6.003209590911865
    5. ' 
' → logprob: -6.628209590911865
    6. '        
' → logprob: -7.003209590911865
    7. '<|end|>' → logprob: -7.003209590911865
    8. '
    
' → logprob: -7.628209590911865
    9. '    ' → logprob: -8.253209114074707
    10. '\n' → logprob: -8.628209114074707

Token 63: ' class' (ID: 744)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22590899467468262
    2. '   ' → logprob: -1.8509089946746826
    3. '    
' → logprob: -3.3509089946746826
    4. 'def' → logprob: -4.975909233093262
    5. '```' → logprob: -7.225909233093262
    6. '<|end|>' → logprob: -7.850909233093262
    7. '        
' → logprob: -8.100909233093262
    8. ' 
' → logprob: -8.225909233093262
    9. '

' → logprob: -8.225909233093262
    10. '
    
' → logprob: -8.475909233093262

Token 64: ' Stack' (ID: 25134)
  Prédit: ' Stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stack' → logprob: -0.7420385479927063
    2. ' Player' → logprob: -1.2420384883880615
    3. ' Tower' → logprob: -2.1170384883880615
    4. ' Board' → logprob: -3.4920384883880615
    5. ' Base' → logprob: -3.7420384883880615
    6. ' Platform' → logprob: -3.7420384883880615
    7. ' Score' → logprob: -5.367038726806641
    8. ' Game' → logprob: -5.617038726806641
    9. ' Ladder' → logprob: -5.742038726806641
    10. ' Column' → logprob: -5.867038726806641

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002557369298301637
    2. ':
' → logprob: -8.625255584716797
    3. '):' → logprob: -9.750255584716797
    4. '():' → logprob: -12.125255584716797
    5. '(' → logprob: -12.625255584716797
    6. '   ' → logprob: -13.375255584716797
    7. ' :' → logprob: -13.500255584716797
    8. '(object' → logprob: -13.750255584716797
    9. '>:' → logprob: -13.875255584716797
    10. ':**' → logprob: -14.625255584716797

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03954796865582466
    2. ':' → logprob: -3.789547920227051
    3. '   ' → logprob: -5.289547920227051
    4. ':
' → logprob: -5.664547920227051
    5. '
' → logprob: -5.789547920227051
    6. '(' → logprob: -6.664547920227051
    7. '<|end|>' → logprob: -7.164547920227051
    8. 'def' → logprob: -7.664547920227051
    9. '(n' → logprob: -7.914547920227051
    10. ' def' → logprob: -8.03954792022705

Token 67: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08215059340000153
    2. ' def' → logprob: -2.58215069770813
    3. '       ' → logprob: -5.957150459289551
    4. '   ' → logprob: -7.332150459289551
    5. '           ' → logprob: -11.70715045928955
    6. 'class' → logprob: -12.83215045928955
    7. '	def' → logprob: -13.20715045928955
    8. '```' → logprob: -14.45715045928955
    9. ' ' → logprob: -15.20715045928955
    10. ':' → logprob: -15.70715045928955

Token 68: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.003921787720173597
    2. ' def' → logprob: -6.253921985626221
    3. '__' → logprob: -7.628921985626221
    4. ' ' → logprob: -7.753921985626221
    5. ' ' → logprob: -7.878921985626221
    6. ' []' → logprob: -8.753921508789062
    7. ' None' → logprob: -9.003921508789062
    8. ' object' → logprob: -9.628921508789062
    9. '_init' → logprob: -9.628921508789062
    10. ' init' → logprob: -10.003921508789062

Token 69: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.02763601392507553
    2. 'i' → logprob: -3.6526360511779785
    3. 'in' → logprob: -7.0276360511779785
    4. 'I' → logprob: -9.27763557434082
    5. '_init' → logprob: -9.27763557434082
    6. '   ' → logprob: -9.77763557434082
    7. ' init' → logprob: -10.15263557434082
    8. 'ini' → logprob: -10.65263557434082
    9. ' i' → logprob: -10.77763557434082
    10. 'int' → logprob: -10.77763557434082

Token 70: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6841151714324951
    2. '(' → logprob: -1.0591151714324951
    3. '__(' → logprob: -2.059115171432495
    4. ' (' → logprob: -4.059115409851074
    5. '_(' → logprob: -5.934115409851074
    6. ')(' → logprob: -7.934115409851074
    7. ',' → logprob: -8.684115409851074
    8. 'self' → logprob: -8.684115409851074
    9. '_' → logprob: -9.059115409851074
    10. '(s' → logprob: -9.559115409851074

Token 71: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0279390811920166
    2. ' self' → logprob: -3.6529390811920166
    3. ')' → logprob: -6.6529388427734375
    4. '):
' → logprob: -8.402938842773438
    5. '):' → logprob: -10.777938842773438
    6. '):

' → logprob: -10.902938842773438
    7. ' )' → logprob: -11.152938842773438
    8. '       ' → logprob: -11.152938842773438
    9. ' ' → logprob: -11.277938842773438
    10. '   ' → logprob: -11.902938842773438

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06327987462282181
    2. ' ,' → logprob: -2.813279867172241
    3. '):' → logprob: -7.18828010559082
    4. ')' → logprob: -8.43828010559082
    5. 'self' → logprob: -8.93828010559082
    6. ' ):' → logprob: -9.56328010559082
    7. ' )' → logprob: -10.18828010559082
    8. ' ' → logprob: -10.43828010559082
    9. ' self' → logprob: -11.06328010559082
    10. ',self' → logprob: -11.43828010559082

Token 73: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.09940701723098755
    2. 'blocks' → logprob: -3.0994069576263428
    3. ' self' → logprob: -3.4744069576263428
    4. 'self' → logprob: -4.099407196044922
    5. ' weights' → logprob: -6.849407196044922
    6. 'weights' → logprob: -8.599407196044922
    7. '_blocks' → logprob: -9.349407196044922
    8. '   ' → logprob: -9.474407196044922
    9. ' )' → logprob: -9.599407196044922
    10. '       ' → logprob: -9.849407196044922

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29633161425590515
    2. ':' → logprob: -1.4213316440582275
    3. '=None' → logprob: -4.796331405639648
    4. '=[]' → logprob: -5.671331405639648
    5. '=' → logprob: -6.671331405639648
    6. ')' → logprob: -6.921331405639648
    7. ' ):' → logprob: -7.171331405639648
    8. ',' → logprob: -9.171331405639648
    9. ':list' → logprob: -9.546331405639648
    10. '):
' → logprob: -9.671331405639648

Token 75: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2513042688369751
    2. '           ' → logprob: -1.876304268836975
    3. '):' → logprob: -3.2513041496276855
    4. ',' → logprob: -4.0013041496276855
    5. '       ' → logprob: -5.6263041496276855
    6. '<|end|>' → logprob: -6.0013041496276855
    7. ')' → logprob: -6.8763041496276855
    8. '               ' → logprob: -7.0013041496276855
    9. '            ' → logprob: -7.6263041496276855
    10. ' :' → logprob: -7.7513041496276855

Token 76: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22557257115840912
    2. 'self' (adapté à ' self') → logprob: -1.6005725860595703
    3. '       ' → logprob: -9.22557258605957
    4. '           ' → logprob: -11.35057258605957
    5. '	self' → logprob: -11.35057258605957
    6. ' ' → logprob: -11.47557258605957
    7. ' ' → logprob: -11.85057258605957
    8. '   ' → logprob: -11.97557258605957
    9. '        ' → logprob: -12.85057258605957
    10. ' blocks' → logprob: -12.85057258605957

Token 77: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -0.07912342250347137
    2. '.' → logprob: -2.5791234970092773
    3. ' .' → logprob: -8.829123497009277
    4. '.stack' → logprob: -10.079123497009277
    5. '.block' → logprob: -10.329123497009277
    6. '.b' → logprob: -13.204123497009277
    7. '   ' → logprob: -13.829123497009277
    8. '.Block' → logprob: -13.829123497009277
    9. '.weights' → logprob: -13.954123497009277
    10. '       ' → logprob: -13.954123497009277

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759528279304504
    2. ' =' → logprob: -0.8259528279304504
    3. '=[]' → logprob: -11.825952529907227
    4. ')' → logprob: -13.450952529907227
    5. '.' → logprob: -14.075952529907227
    6. ':' → logprob: -14.200952529907227
    7. '_' → logprob: -14.950952529907227
    8. '<|end|>' → logprob: -15.075952529907227
    9. '=}' → logprob: -15.200952529907227
    10. '[:]' → logprob: -15.200952529907227

Token 79: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.4303532540798187
    2. 'blocks' → logprob: -1.0553532838821411
    3. 'list' → logprob: -7.305353164672852
    4. ' list' → logprob: -7.555353164672852
    5. '[]' → logprob: -8.305353164672852
    6. ' []' → logprob: -9.305353164672852
    7. '[' → logprob: -9.930353164672852
    8. ' [' → logprob: -10.555353164672852
    9. '   ' → logprob: -11.430353164672852
    10. '.blocks' → logprob: -11.930353164672852

Token 80: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' List' (ID: 2655)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7812888026237488
    2. ' blocks' → logprob: -1.2812888622283936
    3. ' []' → logprob: -1.7812888622283936
    4. '[' → logprob: -3.0312888622283936
    5. ' list' → logprob: -3.9062888622283936
    6. 'blocks' → logprob: -4.4062886238098145
    7. ' ' → logprob: -4.9062886238098145
    8. 'list' → logprob: -6.0312886238098145
    9. '[]' → logprob: -6.6562886238098145
    10. '   ' → logprob: -6.6562886238098145

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04750823974609375
    2. ' of' → logprob: -3.4225082397460938
    3. '<|end|>' → logprob: -4.547508239746094
    4. '[
' → logprob: -7.047508239746094
    5. '[int' → logprob: -7.047508239746094
    6. '[List' → logprob: -7.547508239746094
    7. ')' → logprob: -7.922508239746094
    8. '<|end|>' → logprob: -8.422508239746094
    9. ']' → logprob: -9.047508239746094
    10. ' ' → logprob: -10.297508239746094

Token 84: 'Dar' (ID: 64136)
  Prédit: 'Block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Block' → logprob: -0.7332074642181396
    2. 'self' → logprob: -1.1082074642181396
    3. 'Dar' → logprob: -2.6082074642181396
    4. ' self' → logprob: -3.3582074642181396
    5. ' Block' → logprob: -3.4832074642181396
    6. ' Dar' → logprob: -3.6082074642181396
    7. ']' → logprob: -5.108207702636719
    8. 's' → logprob: -5.233207702636719
    9. 'B' → logprob: -5.983207702636719
    10. 'D' → logprob: -6.108207702636719

Token 85: 'uma' (ID: 5669)
  Prédit: 'uma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uma' → logprob: -0.010458730161190033
    2. 'u' → logprob: -5.260458946228027
    3. 'O' → logprob: -5.510458946228027
    4. 'Uma' → logprob: -7.010458946228027
    5. '   ' → logprob: -9.385458946228027
    6. 'um' → logprob: -10.135458946228027
    7. '    ' → logprob: -10.260458946228027
    8. 'umaha' → logprob: -11.135458946228027
    9. 'ma' → logprob: -11.510458946228027
    10. 'a' → logprob: -11.760458946228027

Token 86: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -2.6895233531831764e-05
    2. '.' → logprob: -11.12502670288086
    3. '   ' → logprob: -13.25002670288086
    4. '  ' → logprob: -13.62502670288086
    5. ' ' → logprob: -13.87502670288086
    6. '.O' → logprob: -14.31252670288086
    7. ')' → logprob: -14.31252670288086
    8. '>' → logprob: -14.37502670288086
    9. '<|end|>' → logprob: -14.62502670288086
    10. '	O' → logprob: -14.75002670288086

Token 87: 'tos' (ID: 33712)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.0009657727787271142
    2. '   ' → logprob: -7.625965595245361
    3. ' ' → logprob: -8.75096607208252
    4. 'T' → logprob: -9.25096607208252
    5. '  ' → logprob: -10.12596607208252
    6. '    ' → logprob: -10.12596607208252
    7. ' O' → logprob: -10.37596607208252
    8. 't' → logprob: -11.37596607208252
    9. 'ts' → logprob: -11.37596607208252
    10. '```' → logprob: -11.50096607208252

Token 88: 'hi' (ID: 3686)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3879565894603729
    2. 'hi' → logprob: -1.1379566192626953
    3. '   ' → logprob: -7.762956619262695
    4. 'i' → logprob: -9.137956619262695
    5. '
' → logprob: -9.387956619262695
    6. 'e' → logprob: -9.637956619262695
    7. '\' → logprob: -10.262956619262695
    8. '<h' → logprob: -10.512956619262695
    9. '    
' → logprob: -11.012956619262695
    10. '\xef\xbd' → logprob: -11.137956619262695

Token 89: 'Game' (ID: 6627)
  Prédit: '.Block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Block' → logprob: -0.05372359976172447
    2. '.Game' → logprob: -3.1787235736846924
    3. 'Game' → logprob: -5.0537238121032715
    4. 'Block' → logprob: -6.0537238121032715
    5. '::' → logprob: -6.6787238121032715
    6. '.' → logprob: -8.678723335266113
    7. '.B' → logprob: -9.053723335266113
    8. 'O' → logprob: -9.553723335266113
    9. '>' → logprob: -10.178723335266113
    10. '.Stack' → logprob: -10.553723335266113

Token 90: '.Block' (ID: 46007)
  Prédit: '.Block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Block' → logprob: -0.0009045533952303231
    2. '.' → logprob: -7.250904560089111
    3. '::' → logprob: -9.125904083251953
    4. 'Block' → logprob: -10.500904083251953
    5. '.Stack' → logprob: -11.000904083251953
    6. ' .' → logprob: -11.250904083251953
    7. '.B' → logprob: -11.500904083251953
    8. '.Bl' → logprob: -12.000904083251953
    9. '.Class' → logprob: -13.125904083251953
    10. '<Block' → logprob: -13.625904083251953

Token 91: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.9292415749514475e-05
    2. ']
' → logprob: -10.750039100646973
    3. ' ]' → logprob: -11.125039100646973
    4. ')' → logprob: -13.750039100646973
    5. '])' → logprob: -13.750039100646973
    6. ']

' → logprob: -15.000039100646973
    7. '   ' → logprob: -15.125039100646973
    8. '       ' → logprob: -16.37504005432129
    9. '<|end|>' → logprob: -16.37504005432129
    10. '[' → logprob: -17.12504005432129

Token 92: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7322559356689453
    2. 'def' (adapté à ' def') → logprob: -0.7322559356689453
    3. ' def' → logprob: -3.3572559356689453
    4. '       ' → logprob: -5.857255935668945
    5. ' ' → logprob: -7.857255935668945
    6. '    ' → logprob: -9.357255935668945
    7. '  ' → logprob: -9.607255935668945
    8. 'd' → logprob: -9.857255935668945
    9. '	def' → logprob: -10.857255935668945
    10. 'de' → logprob: -11.107255935668945

Token 94: ' can' (ID: 665)
  Prédit: ' pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pop' → logprob: -0.9665772914886475
    2. ' __' → logprob: -1.3415772914886475
    3. ' remove' → logprob: -1.7165772914886475
    4. ' push' → logprob: -2.3415772914886475
    5. ' def' → logprob: -3.3415772914886475
    6. 'pop' → logprob: -4.466577529907227
    7. '__' → logprob: -4.591577529907227
    8. 'remove' → logprob: -4.716577529907227
    9. 'push' → logprob: -5.466577529907227
    10. ' get' → logprob: -5.716577529907227

Token 95: '_remove' (ID: 41629)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11461486667394638
    2. '_remove' → logprob: -2.239614963531494
    3. '_drop' → logprob: -6.864614963531494
    4. '_rem' → logprob: -9.114614486694336
    5. '_break' → logprob: -9.364614486694336
    6. '_pop' → logprob: -9.364614486694336
    7. 'Remove' → logprob: -9.614614486694336
    8. '_continue' → logprob: -10.114614486694336
    9. '_hit' → logprob: -10.239614486694336
    10. ' _' → logprob: -10.239614486694336

Token 96: '_pair' (ID: 34819)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.035805054008960724
    2. '(' → logprob: -4.1608052253723145
    3. '(self' → logprob: -4.6608052253723145
    4. '_block' → logprob: -5.1608052253723145
    5. '_next' → logprob: -6.5358052253723145
    6. '_token' → logprob: -6.6608052253723145
    7. '_self' → logprob: -7.6608052253723145
    8. '_space' → logprob: -8.410804748535156
    9. '_at' → logprob: -8.410804748535156
    10. '<|end|>' → logprob: -8.910804748535156

Token 97: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015159777365624905
    2. '(self' → logprob: -4.265159606933594
    3. ' (' → logprob: -7.515159606933594
    4. '(s' → logprob: -8.265159606933594
    5. '(
' → logprob: -9.640159606933594
    6. 's' → logprob: -9.765159606933594
    7. '()' → logprob: -11.140159606933594
    8. '<|end|>' → logprob: -11.140159606933594
    9. '_' → logprob: -11.890159606933594
    10. ')' → logprob: -12.015159606933594

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009547592140734196
    2. '):' → logprob: -5.259547710418701
    3. ' ,' → logprob: -5.884547710418701
    4. ')' → logprob: -6.634547710418701
    5. 'self' → logprob: -9.884547233581543
    6. 's' → logprob: -10.384547233581543
    7. ' ' → logprob: -10.509547233581543
    8. ' ):' → logprob: -10.509547233581543
    9. '(' → logprob: -11.134547233581543
    10. ' )' → logprob: -11.634547233581543

Token 99: ' i' (ID: 575)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.24605247378349304
    2. 'self' → logprob: -2.2460525035858154
    3. ' )' → logprob: -3.4960525035858154
    4. ')' → logprob: -3.9960525035858154
    5. ' index' → logprob: -4.121052265167236
    6. ' block' → logprob: -4.246052265167236
    7. ' i' → logprob: -4.496052265167236
    8. ' pos' → logprob: -4.871052265167236
    9. ' idx' → logprob: -5.746052265167236
    10. 'index' → logprob: -5.871052265167236

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11784098297357559
    2. ')' → logprob: -2.8678410053253174
    3. ' ,' → logprob: -3.3678410053253174
    4. ' )' → logprob: -4.867840766906738
    5. '+' → logprob: -5.242840766906738
    6. '):' → logprob: -5.367840766906738
    7. ':' → logprob: -6.617840766906738
    8. ' ):' → logprob: -8.367840766906738
    9. ' ' → logprob: -8.492840766906738
    10. '):
' → logprob: -8.867840766906738

Token 101: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06266682595014572
    2. 'j' → logprob: -2.812666893005371
    3. ' )' → logprob: -8.187666893005371
    4. ' i' → logprob: -8.937666893005371
    5. ')' → logprob: -9.437666893005371
    6. ' ' → logprob: -9.562666893005371
    7. '	j' → logprob: -9.937666893005371
    8. 'i' → logprob: -10.312666893005371
    9. ' ' → logprob: -10.687666893005371
    10. ' ):
' → logprob: -11.812666893005371

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1605343371629715
    2. ')' → logprob: -1.910534381866455
    3. '):
' → logprob: -8.410533905029297
    4. ':' → logprob: -10.160533905029297
    5. ',' → logprob: -10.785533905029297
    6. ' ):' → logprob: -10.785533905029297
    7. ' )' → logprob: -12.660533905029297
    8. '):

' → logprob: -13.910533905029297
    9. ')**' → logprob: -14.410533905029297
    10. ')
' → logprob: -14.535533905029297

Token 103: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008175285533070564
    2. '):' → logprob: -5.883175373077393
    3. ' :' → logprob: -5.883175373077393
    4. ':
' → logprob: -7.258175373077393
    5. '<|end|>' → logprob: -7.758175373077393
    6. '       ' → logprob: -7.883175373077393
    7. ')' → logprob: -7.883175373077393
    8. ' ' → logprob: -8.883174896240234
    9. '():' → logprob: -9.133174896240234
    10. ':return' → logprob: -9.258174896240234

Token 104: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14780545234680176
    2. '<|end|>' → logprob: -3.5228054523468018
    3. '       ' → logprob: -3.6478054523468018
    4. '           ' → logprob: -4.022805213928223
    5. ' 
' → logprob: -4.022805213928223
    6. '        ' → logprob: -4.397805213928223
    7. ' return' → logprob: -4.772805213928223
    8. 'return' → logprob: -5.397805213928223
    9. ':' → logprob: -6.022805213928223
    10. ')' → logprob: -6.147805213928223

Token 105: ' Can' (ID: 4101)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29362931847572327
    2. ' return' → logprob: -2.2936294078826904
    3. ')' → logprob: -2.9186294078826904
    4. '<|end|>' → logprob: -3.9186294078826904
    5. ' )' → logprob: -4.293629169464111
    6. 'return' → logprob: -4.418629169464111
    7. ' self' → logprob: -4.668629169464111
    8. '        ' → logprob: -4.918629169464111
    9. 'self' → logprob: -5.293629169464111
    10. ' if' → logprob: -5.293629169464111

Token 106: ' remove' (ID: 6234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5986214280128479
    2. '<|end|>' → logprob: -2.098621368408203
    3. ' )' → logprob: -2.348621368408203
    4. ' ' → logprob: -2.973621368408203
    5. ' if' → logprob: -3.473621368408203
    6. ' and' → logprob: -3.723621368408203
    7. ' return' → logprob: -3.723621368408203
    8. ' i' → logprob: -3.848621368408203
    9. '):' → logprob: -4.223621368408203
    10. '       ' → logprob: -4.348621368408203

Token 107: ' two' (ID: 1920)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12649226188659668
    2. ' and' → logprob: -2.7514922618865967
    3. '<|end|>' → logprob: -3.3764922618865967
    4. ' ' → logprob: -5.251492500305176
    5. '<|end|>' → logprob: -5.251492500305176
    6. ')' → logprob: -6.626492500305176
    7. ' return' → logprob: -6.626492500305176
    8. '
' → logprob: -6.876492500305176
    9. 'if' → logprob: -7.251492500305176
    10. ' blocks' → logprob: -7.376492500305176

Token 108: ' adjacent' (ID: 39069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.09600967913866043
    2. '<|end|>' → logprob: -3.2210097312927246
    3. ')' → logprob: -3.8460097312927246
    4. 'blocks' → logprob: -4.596009731292725
    5. ' ' → logprob: -5.096009731292725
    6. ' if' → logprob: -5.471009731292725
    7. ' )' → logprob: -5.846009731292725
    8. '_blocks' → logprob: -6.096009731292725
    9. ' and' → logprob: -7.346009731292725
    10. '.blocks' → logprob: -7.471009731292725

Token 110: ' at' (ID: 540)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2763240337371826
    2. ' if' → logprob: -2.0263240337371826
    3. ')' → logprob: -3.4013240337371826
    4. ' ' → logprob: -3.5263240337371826
    5. '       ' → logprob: -4.026324272155762
    6. 'and' → logprob: -5.151324272155762
    7. ',' → logprob: -5.776324272155762
    8. ':' → logprob: -5.776324272155762
    9. '   ' → logprob: -5.901324272155762
    10. '    ' → logprob: -6.151324272155762

Token 111: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.0900258794426918
    2. ' i' → logprob: -3.4650259017944336
    3. ' indices' → logprob: -3.5900259017944336
    4. 'positions' → logprob: -4.215025901794434
    5. ' the' → logprob: -5.715025901794434
    6. ' ' → logprob: -5.965025901794434
    7. 'i' → logprob: -6.465025901794434
    8. '<|end|>' → logprob: -6.590025901794434
    9. 'indices' → logprob: -7.090025901794434
    10. ' position' → logprob: -7.340025901794434

Token 112: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.30318936705589294
    2. 'i' → logprob: -1.8031893968582153
    3. ' ' → logprob: -3.678189277648926
    4. ' if' → logprob: -4.053189277648926
    5. '<|end|>' → logprob: -4.303189277648926
    6. ')' → logprob: -4.553189277648926
    7. ' j' → logprob: -5.178189277648926
    8. ' (' → logprob: -5.428189277648926
    9. 'j' → logprob: -5.428189277648926
    10. ',' → logprob: -5.803189277648926

Token 113: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04026090353727341
    2. ' ' → logprob: -4.1652607917785645
    3. ' or' → logprob: -4.7902607917785645
    4. ')' → logprob: -4.9152607917785645
    5. 'and' → logprob: -5.7902607917785645
    6. ' ==' → logprob: -6.4152607917785645
    7. ' +' → logprob: -7.1652607917785645
    8. ',' → logprob: -7.2902607917785645
    9. '+' → logprob: -7.5402607917785645
    10. '<|end|>' → logprob: -7.5402607917785645

Token 114: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4906293749809265
    2. 'j' → logprob: -0.9906293749809265
    3. ' ' → logprob: -5.115629196166992
    4. 'i' → logprob: -5.240629196166992
    5. ' i' → logprob: -5.365629196166992
    6. '    ' → logprob: -8.490629196166992
    7. ')' → logprob: -9.115629196166992
    8. '<|end|>' → logprob: -10.365629196166992
    9. ' )' → logprob: -10.990629196166992
    10. ' and' → logprob: -11.240629196166992

Token 115: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7067998051643372
    2. ')' → logprob: -1.4567997455596924
    3. ' if' → logprob: -2.2067997455596924
    4. '       ' → logprob: -2.9567997455596924
    5. ':' → logprob: -3.4567997455596924
    6. ' ' → logprob: -3.8317997455596924
    7. '):' → logprob: -4.2067999839782715
    8. ',' → logprob: -4.4567999839782715
    9. '<|end|>' → logprob: -4.7067999839782715
    10. '
' → logprob: -5.5817999839782715

Token 116: ' |' (ID: 1022)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.14166833460330963
    2. 'abs' → logprob: -2.6416683197021484
    3. ' self' → logprob: -3.1416683197021484
    4. 'self' → logprob: -4.516668319702148
    5. ' j' → logprob: -5.141668319702148
    6. 'j' → logprob: -7.766668319702148
    7. ' ' → logprob: -9.016668319702148
    8. ' ' → logprob: -9.141668319702148
    9. ' i' → logprob: -9.516668319702148
    10. ' (' → logprob: -9.891668319702148

Token 117: 'weight' (ID: 8250)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.025093581527471542
    2. ' self' → logprob: -3.7750935554504395
    3. 'i' → logprob: -6.4000935554504395
    4. ' i' → logprob: -9.275094032287598
    5. '(self' → logprob: -10.025094032287598
    6. 's' → logprob: -10.900094032287598
    7. '=self' → logprob: -11.900094032287598
    8. '	self' → logprob: -12.400094032287598
    9. ' ' → logprob: -13.025094032287598
    10. '
' → logprob: -13.400094032287598

Token 118: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01359178964048624
    2. '[' → logprob: -4.638591766357422
    3. '[j' → logprob: -5.638591766357422
    4. 'i' → logprob: -8.888591766357422
    5. 's' → logprob: -9.763591766357422
    6. '-' → logprob: -11.263591766357422
    7. '[
' → logprob: -11.388591766357422
    8. ' -' → logprob: -11.763591766357422
    9. '[int' → logprob: -11.888591766357422
    10. ' ' → logprob: -11.888591766357422

Token 119: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.049389198422431946
    2. '-' → logprob: -3.049389123916626
    3. '[' → logprob: -8.174388885498047
    4. ' ' → logprob: -8.549388885498047
    5. '-j' → logprob: -8.799388885498047
    6. '-i' → logprob: -9.924388885498047
    7. '[i' → logprob: -10.924388885498047
    8. '[j' → logprob: -11.174388885498047
    9. '   ' → logprob: -11.174388885498047
    10. ')' → logprob: -11.424388885498047

Token 120: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.28517600893974304
    2. ' weight' → logprob: -1.4101760387420654
    3. 'w' → logprob: -6.785175800323486
    4. 'self' → logprob: -7.035175800323486
    5. '_weight' → logprob: -8.035176277160645
    6. ' self' → logprob: -8.035176277160645
    7. ' ' → logprob: -8.660176277160645
    8. '           ' → logprob: -8.785176277160645
    9. '    ' → logprob: -8.910176277160645
    10. ' w' → logprob: -9.160176277160645

Token 121: '_j' (ID: 12021)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0006915858830325305
    2. '[j' → logprob: -8.250691413879395
    3. ' |' → logprob: -8.375691413879395
    4. '[' → logprob: -9.250691413879395
    5. ')' → logprob: -10.375691413879395
    6. '[i' → logprob: -10.875691413879395
    7. ' -' → logprob: -11.125691413879395
    8. '_j' → logprob: -11.500691413879395
    9. ')|' → logprob: -11.875691413879395
    10. '_|' → logprob: -12.750691413879395

Token 122: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00560973072424531
    2. ')' → logprob: -5.755609512329102
    3. ')|' → logprob: -6.130609512329102
    4. ' |' → logprob: -8.380609512329102
    5. ']|' → logprob: -12.005609512329102
    6. ']' → logprob: -12.380609512329102
    7. '|
' → logprob: -12.755609512329102
    8. '}|' → logprob: -13.380609512329102
    9. '```' → logprob: -13.755609512329102
    10. '   ' → logprob: -13.755609512329102

Token 123: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.29418402910232544
    2. '|' → logprob: -1.9191839694976807
    3. ')' → logprob: -3.0441839694976807
    4. '<=' → logprob: -3.7941839694976807
    5. ' ==' → logprob: -4.04418420791626
    6. ' ' → logprob: -5.04418420791626
    7. ' |' → logprob: -5.16918420791626
    8. '==' → logprob: -5.79418420791626
    9. ' <' → logprob: -6.16918420791626
    10. '1' → logprob: -6.66918420791626

Token 124: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24338065087795258
    2. ' ' → logprob: -1.6183806657791138
    3. '2' → logprob: -4.118380546569824
    4. '3' → logprob: -6.868380546569824
    5. '5' → logprob: -7.743380546569824
    6. '4' → logprob: -10.368380546569824
    7. '10' → logprob: -11.493380546569824
    8. '7' → logprob: -12.743380546569824
    9. '  ' → logprob: -12.930880546569824
    10. '
' → logprob: -13.305880546569824

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.148456871509552
    2. '3' → logprob: -2.3984568119049072
    3. '2' → logprob: -3.1484568119049072
    4. ' ' → logprob: -6.273457050323486
    5. '5' → logprob: -6.648457050323486
    6. '4' → logprob: -7.773457050323486
    7. '10' → logprob: -8.398456573486328
    8. '0' → logprob: -9.023456573486328
    9. '```' → logprob: -9.710956573486328
    10. '7' → logprob: -9.835956573486328

Token 126: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5793550610542297
    2. '<|end|>' → logprob: -1.079355001449585
    3. ' ' → logprob: -2.704355001449585
    4. '       ' → logprob: -4.329355239868164
    5. '
' → logprob: -5.454355239868164
    6. '<|end|>' → logprob: -5.829355239868164
    7. ' )' → logprob: -6.204355239868164
    8. ',' → logprob: -6.329355239868164
    9. '        ' → logprob: -6.329355239868164
    10. ':' → logprob: -6.704355239868164

Token 127: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6322383284568787
    2. ')' → logprob: -1.5072383880615234
    3. '       ' → logprob: -2.1322383880615234
    4. '):' → logprob: -2.2572383880615234
    5. '
' → logprob: -5.257238388061523
    6. '           ' → logprob: -5.507238388061523
    7. ' :' → logprob: -5.882238388061523
    8. ',' → logprob: -6.132238388061523
    9. '):
' → logprob: -6.507238388061523
    10. ' ' → logprob: -6.507238388061523

Token 128: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2478257268667221
    2. '<|end|>' → logprob: -1.8728257417678833
    3. ')' → logprob: -3.4978256225585938
    4. ' 
' → logprob: -3.8728256225585938
    5. ' )' → logprob: -5.247825622558594
    6. '<|end|>' → logprob: -6.497825622558594
    7. '
' → logprob: -6.622825622558594
    8. '       ' → logprob: -6.872825622558594
    9. '  ' → logprob: -7.372825622558594
    10. '  
' → logprob: -7.372825622558594

Token 129: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.025982439517974854
    2. 'abs' → logprob: -3.77598237991333
    3. ' i' → logprob: -6.65098237991333
    4. ' j' → logprob: -7.65098237991333
    5. ' self' → logprob: -8.025982856750488
    6. ' ' → logprob: -8.275982856750488
    7. 'i' → logprob: -8.650982856750488
    8. 'j' → logprob: -9.525982856750488
    9. '  ' → logprob: -10.150982856750488
    10. 'self' → logprob: -10.150982856750488

Token 130: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933275461196899
    2. '(self' → logprob: -0.6933275461196899
    3. '(
' → logprob: -8.693327903747559
    4. '(

' → logprob: -11.818327903747559
    5. '(s' → logprob: -13.193327903747559
    6. '(this' → logprob: -13.693327903747559
    7. 'self' → logprob: -13.693327903747559
    8. ' (' → logprob: -15.318327903747559
    9. '((' → logprob: -15.693327903747559
    10. '('' → logprob: -15.818327903747559

Token 131: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -4.429896944202483e-05
    2. '.weights' → logprob: -10.250043869018555
    3. ' .' → logprob: -12.625043869018555
    4. '.' → logprob: -12.750043869018555
    5. '.weight' → logprob: -13.500043869018555
    6. '.block' → logprob: -14.500043869018555
    7. ').' → logprob: -15.250043869018555
    8. '   ' → logprob: -15.500043869018555
    9. '       ' → logprob: -16.125043869018555
    10. 'blocks' → logprob: -16.750043869018555

Token 132: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00029840084607712924
    2. '[' → logprob: -8.250298500061035
    3. '[j' → logprob: -10.750298500061035
    4. '[
' → logprob: -11.375298500061035
    5. ')' → logprob: -13.625298500061035
    6. '[I' → logprob: -14.125298500061035
    7. '[self' → logprob: -14.500298500061035
    8. '[int' → logprob: -15.000298500061035
    9. '[index' → logprob: -15.500298500061035
    10. '[s' → logprob: -15.500298500061035

Token 133: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.6949318051338196
    2. '.weight' → logprob: -0.6949318051338196
    3. ']' → logprob: -7.694931983947754
    4. '.weights' → logprob: -7.819931983947754
    5. ').' → logprob: -8.194931983947754
    6. ' .' → logprob: -8.694931983947754
    7. '.' → logprob: -8.819931983947754
    8. '}.' → logprob: -8.944931983947754
    9. '.position' → logprob: -9.319931983947754
    10. ' ].' → logprob: -10.444931983947754

Token 134: 'weight' (ID: 8250)
  Prédit: 'weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -2.5107177862082608e-05
    2. ' weight' → logprob: -10.750024795532227
    3. '.weight' → logprob: -12.750024795532227
    4. 'weig' → logprob: -14.375024795532227
    5. '_weight' → logprob: -17.000024795532227
    6. 'weights' → logprob: -17.000024795532227
    7. ' ' → logprob: -17.500024795532227
    8. 'gewicht' → logprob: -18.125024795532227
    9. ')' → logprob: -18.250024795532227
    10. '(weight' → logprob: -18.875024795532227

Token 135: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00886557251214981
    2. '-' → logprob: -4.7588653564453125
    3. ' ' → logprob: -8.633865356445312
    4. '<|end|>' → logprob: -9.633865356445312
    5. ')' → logprob: -12.758865356445312
    6. '<|end|>' → logprob: -13.383865356445312
    7. '  ' → logprob: -13.883865356445312
    8. ' ' → logprob: -14.133865356445312
    9. '-self' → logprob: -15.258865356445312
    10. ' -
' → logprob: -15.696365356445312

Token 136: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47411900758743286
    2. 'self' → logprob: -0.9741190075874329
    3. '<|end|>' → logprob: -10.724119186401367
    4. ' ' → logprob: -11.974119186401367
    5. '	self' → logprob: -11.974119186401367
    6. ' ' → logprob: -12.724119186401367
    7. '_self' → logprob: -13.474119186401367
    8. ')' → logprob: -13.974119186401367
    9. 's' → logprob: -14.224119186401367
    10. '[self' → logprob: -15.224119186401367

Token 137: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -9.579495235811919e-05
    2. 'blocks' → logprob: -9.50009536743164
    3. '.' → logprob: -11.00009536743164
    4. ' blocks' → logprob: -13.50009536743164
    5. '.block' → logprob: -13.62509536743164
    6. ' .' → logprob: -14.62509536743164
    7. '.
' → logprob: -15.25009536743164
    8. ').' → logprob: -15.25009536743164
    9. '
' → logprob: -15.87509536743164
    10. '.weights' → logprob: -15.87509536743164

Token 138: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001249925117008388
    2. '[' → logprob: -9.62512493133545
    3. '[i' → logprob: -10.50012493133545
    4. '[
' → logprob: -11.12512493133545
    5. '.blocks' → logprob: -11.75012493133545
    6. 'blocks' → logprob: -12.37512493133545
    7. '
' → logprob: -13.50012493133545
    8. '```' → logprob: -14.12512493133545
    9. ')' → logprob: -15.00012493133545
    10. '   ' → logprob: -15.25012493133545

Token 139: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0040604714304208755
    2. ']' → logprob: -6.1290602684021
    3. '.weight' → logprob: -6.5040602684021
    4. '.' → logprob: -8.879060745239258
    5. '])' → logprob: -9.129060745239258
    6. ').' → logprob: -9.754060745239258
    7. ' ].' → logprob: -11.254060745239258
    8. ')' → logprob: -12.379060745239258
    9. '.weights' → logprob: -12.379060745239258
    10. '.user' → logprob: -12.504060745239258

Token 140: 'weight' (ID: 8250)
  Prédit: 'weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -4.644463479053229e-05
    2. ' weight' → logprob: -11.000046730041504
    3. 'weig' → logprob: -11.250046730041504
    4. '.weight' → logprob: -11.625046730041504
    5. ')' → logprob: -12.625046730041504
    6. 'weights' → logprob: -13.375046730041504
    7. '_weight' → logprob: -14.250046730041504
    8. 'w' → logprob: -14.250046730041504
    9. ' ' → logprob: -15.375046730041504
    10. 'we' → logprob: -15.500046730041504

Token 141: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002986392646562308
    2. ' )' → logprob: -8.375298500061035
    3. ')<=' → logprob: -9.625298500061035
    4. ')>' → logprob: -13.750298500061035
    5. ')
' → logprob: -15.750298500061035
    6. ')`' → logprob: -15.875298500061035
    7. '）' → logprob: -16.50029945373535
    8. '<=' → logprob: -16.62529945373535
    9. '`)' → logprob: -16.62529945373535
    10. '')' → logprob: -16.75029945373535

Token 142: ' <=' (ID: 5017)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49132442474365234
    2. ' <=' → logprob: -1.3663244247436523
    3. ' )' → logprob: -2.1163244247436523
    4. ' >' → logprob: -4.741324424743652
    5. '<=' → logprob: -6.241324424743652
    6. ')<=' → logprob: -6.741324424743652
    7. ' ' → logprob: -7.866324424743652
    8. '>' → logprob: -8.241324424743652
    9. ')>' → logprob: -9.616324424743652
    10. '[' → logprob: -11.241324424743652

Token 143: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17974522709846497
    2. '1' → logprob: -1.8047451972961426
    3. ' ' → logprob: -14.9297456741333
    4. '
' → logprob: -17.179744720458984
    5. '<|end|>' → logprob: -17.554744720458984
    6. ' 
' → logprob: -17.867244720458984
    7. ')' → logprob: -18.117244720458984
    8. '  ' → logprob: -18.367244720458984
    9. '```' → logprob: -18.367244720458984
    10. '１' → logprob: -18.742244720458984

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '
' → logprob: -19.000123977661133
    4. '```' → logprob: -19.187623977661133
    5. '<|end|>' → logprob: -19.250123977661133
    6. '  ' → logprob: -19.562623977661133
    7. '   ' → logprob: -19.562623977661133
    8. '１' → logprob: -19.687623977661133
    9. '۱' → logprob: -19.750123977661133
    10. '' → logprob: -20.375123977661133

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0836080014705658
    2. '):' → logprob: -3.2086079120635986
    3. ' and' → logprob: -3.3336079120635986
    4. ')' → logprob: -6.458608150482178
    5. 'and' → logprob: -7.083608150482178
    6. ' :' → logprob: -7.208608150482178
    7. ':
' → logprob: -7.958608150482178
    8. ':return' → logprob: -7.958608150482178
    9. ' ):' → logprob: -8.95860767364502
    10. '):
' → logprob: -9.58360767364502

Token 146: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6090537309646606
    2. '           ' → logprob: -1.4840537309646606
    3. '               ' → logprob: -2.359053611755371
    4. '
' → logprob: -2.859053611755371
    5. '):' → logprob: -4.234053611755371
    6. ' and' → logprob: -4.359053611755371
    7. ')' → logprob: -4.484053611755371
    8. ':
' → logprob: -4.484053611755371
    9. ':return' → logprob: -4.734053611755371
    10. '<|end|>' → logprob: -5.609053611755371

Token 147: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2982250452041626
    2. '           ' → logprob: -2.423224925994873
    3. 'return' (adapté à ' return') → logprob: -2.423224925994873
    4. ' return' → logprob: -2.548224925994873
    5. '   ' → logprob: -6.923224925994873
    6. '                   ' → logprob: -7.673224925994873
    7. '
' → logprob: -7.798224925994873
    8. '       ' → logprob: -8.923225402832031
    9. ' 
' → logprob: -9.548225402832031
    10. ':return' → logprob: -9.673225402832031

Token 148: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10020667314529419
    2. ' True' → logprob: -2.3502066135406494
    3. 'Tr' → logprob: -16.85020637512207
    4. '   ' → logprob: -18.22520637512207
    5. '(True' → logprob: -18.47520637512207
    6. '           ' → logprob: -18.85020637512207
    7. ' Tru' → logprob: -19.72520637512207
    8. '               ' → logprob: -19.72520637512207
    9. 'False' → logprob: -19.85020637512207
    10. 'T' → logprob: -20.97520637512207

Token 149: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2329120934009552
    2. '
' → logprob: -1.6079120635986328
    3. '       ' → logprob: -5.482912063598633
    4. '    
' → logprob: -6.857912063598633
    5. 'return' → logprob: -7.107912063598633
    6. '<|end|>' → logprob: -7.732912063598633
    7. ' 
' → logprob: -8.607912063598633
    8. '            
' → logprob: -8.857912063598633
    9. 'else' → logprob: -9.232912063598633
    10. '        
' → logprob: -9.232912063598633

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035531469620764256
    2. '
' → logprob: -6.2535529136657715
    3. '       ' → logprob: -6.6285529136657715
    4. 'else' → logprob: -8.87855339050293
    5. 'return' → logprob: -9.50355339050293
    6. '		' → logprob: -10.62855339050293
    7. '    
' → logprob: -11.25355339050293
    8. '	       ' → logprob: -11.87855339050293
    9. '            
' → logprob: -12.00355339050293
    10. '   ' → logprob: -12.00355339050293

Token 151: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12488599121570587
    2. 'return' (adapté à ' return') → logprob: -2.8748860359191895
    3. '           ' → logprob: -3.2498860359191895
    4. 'else' → logprob: -4.1248860359191895
    5. '
' → logprob: -5.2498860359191895
    6. '   ' → logprob: -8.374885559082031
    7. ' return' → logprob: -8.874885559082031
    8. '    
' → logprob: -8.874885559082031
    9. ' else' → logprob: -8.999885559082031
    10. '	return' → logprob: -10.124885559082031

Token 152: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3868710398674011
    2. 'False' → logprob: -1.136871099472046
    3. '(False' → logprob: -19.261871337890625
    4. '=False' → logprob: -20.511871337890625
    5. ' ' → logprob: -21.011871337890625
    6. ' false' → logprob: -21.136871337890625
    7. '_false' → logprob: -21.261871337890625
    8. 'Fal' → logprob: -21.386871337890625
    9. 'F' → logprob: -21.511871337890625
    10. 'Falsy' → logprob: -21.636871337890625

Token 153: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18846727907657623
    2. '<|end|>' → logprob: -1.813467264175415
    3. '       ' → logprob: -5.563467502593994
    4. '   ' → logprob: -6.063467502593994
    5. '    
' → logprob: -7.188467502593994
    6. ' 
' → logprob: -7.688467502593994
    7. '<|end|>' → logprob: -7.688467502593994
    8. '

' → logprob: -8.313467025756836
    9. '        
' → logprob: -8.688467025756836
    10. ' ' → logprob: -8.813467025756836

Token 155: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.054057274013757706
    2. '   ' → logprob: -3.3040573596954346
    3. '       ' → logprob: -4.1790571212768555
    4. ' def' → logprob: -7.6790571212768555
    5. ' ' → logprob: -10.304057121276855
    6. '        
' → logprob: -10.304057121276855
    7. '    
' → logprob: -10.929057121276855
    8. '	def' → logprob: -11.804057121276855
    9. '  ' → logprob: -12.054057121276855
    10. '    ' → logprob: -12.429057121276855

Token 156: ' remove' (ID: 6234)
  Prédit: ' remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.19553998112678528
    2. 'remove' → logprob: -1.820539951324463
    3. ' def' → logprob: -4.445539951324463
    4. 'def' → logprob: -5.820539951324463
    5. ' can' → logprob: -7.695539951324463
    6. 'can' → logprob: -8.820540428161621
    7. ' pop' → logprob: -9.820540428161621
    8. '_remove' → logprob: -10.070540428161621
    9. ' get' → logprob: -10.320540428161621
    10. ' find' → logprob: -10.445540428161621

Token 157: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.014123310334980488
    2. '_pairs' → logprob: -5.139123439788818
    3. '_' → logprob: -5.389123439788818
    4. '_at' → logprob: -5.889123439788818
    5. '_two' → logprob: -7.889123439788818
    6. '_block' → logprob: -8.01412296295166
    7. '_blocks' → logprob: -9.63912296295166
    8. '_adj' → logprob: -11.38912296295166
    9. '_double' → logprob: -12.13912296295166
    10. '_between' → logprob: -12.13912296295166

Token 158: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019362468738108873
    2. '(' → logprob: -6.251936435699463
    3. '(s' → logprob: -12.626935958862305
    4. ' (' → logprob: -13.251935958862305
    5. '(
' → logprob: -13.626935958862305
    6. 'self' → logprob: -14.001935958862305
    7. '(sel' → logprob: -15.251935958862305
    8. '	self' → logprob: -16.001935958862305
    9. ' self' → logprob: -16.501935958862305
    10. '   ' → logprob: -17.251935958862305

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.747814349073451e-05
    2. ' ,' → logprob: -11.125017166137695
    3. ',i' → logprob: -13.250017166137695
    4. 'self' → logprob: -14.625017166137695
    5. ',index' → logprob: -16.125017166137695
    6. ')' → logprob: -16.250017166137695
    7. '   ' → logprob: -16.375017166137695
    8. '):' → logprob: -16.875017166137695
    9. '       ' → logprob: -17.125017166137695
    10. ',
' → logprob: -17.625017166137695

Token 160: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05650129169225693
    2. 'i' → logprob: -3.0565013885498047
    3. ' self' → logprob: -5.431501388549805
    4. 'self' → logprob: -5.681501388549805
    5. ' indices' → logprob: -10.306501388549805
    6. ')' → logprob: -11.181501388549805
    7. '   ' → logprob: -11.931501388549805
    8. 'indices' → logprob: -12.056501388549805
    9. '	i' → logprob: -12.181501388549805
    10. '    ' → logprob: -12.181501388549805

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.572941179503687e-05
    2. ' ,' → logprob: -10.875045776367188
    3. ',j' → logprob: -11.125045776367188
    4. ')' → logprob: -12.375045776367188
    5. ',
' → logprob: -12.625045776367188
    6. '+' → logprob: -12.750045776367188
    7. ',i' → logprob: -14.000045776367188
    8. ',)' → logprob: -16.000045776367188
    9. '+,' → logprob: -16.125045776367188
    10. '‌,' → logprob: -16.250045776367188

Token 162: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3868916928768158
    2. ' j' → logprob: -1.1368917226791382
    3. ')' → logprob: -12.01189136505127
    4. '	j' → logprob: -12.26189136505127
    5. '    ' → logprob: -12.88689136505127
    6. '   ' → logprob: -13.38689136505127
    7. 'i' → logprob: -13.51189136505127
    8. ' ' → logprob: -13.63689136505127
    9. '<|end|>' → logprob: -13.76189136505127
    10. ' i' → logprob: -14.63689136505127

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005849646404385567
    2. '):
' → logprob: -7.500585079193115
    3. ' ):' → logprob: -11.250584602355957
    4. ')' → logprob: -11.875584602355957
    5. ',' → logprob: -12.125584602355957
    6. ':' → logprob: -12.250584602355957
    7. '):
' → logprob: -14.250584602355957
    8. '   ' → logprob: -14.250584602355957
    9. '       ' → logprob: -15.250584602355957
    10. '):

' → logprob: -15.875584602355957

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3797914385795593
    2. '       ' → logprob: -1.254791498184204
    3. '
' → logprob: -3.629791498184204
    4. ',' → logprob: -7.379791259765625
    5. '<|end|>' → logprob: -7.504791259765625
    6. '               ' → logprob: -7.754791259765625
    7. '        
' → logprob: -8.004791259765625
    8. '   ' → logprob: -8.129791259765625
    9. '    
' → logprob: -8.254791259765625
    10. ':' → logprob: -8.254791259765625

Token 165: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9236248135566711
    2. '           ' → logprob: -1.9236247539520264
    3. ' del' → logprob: -1.9236247539520264
    4. 'if' → logprob: -2.0486247539520264
    5. '#' (adapté à ' #') → logprob: -2.7986247539520264
    6. ' #' → logprob: -3.1736247539520264
    7. '       ' → logprob: -3.6736247539520264
    8. 'del' → logprob: -3.9236247539520264
    9. ' self' → logprob: -4.5486249923706055
    10. ' indices' → logprob: -5.1736249923706055

Token 166: ' Remove' (ID: 18141)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8112430572509766
    2. ' self' → logprob: -2.0612430572509766
    3. 'if' → logprob: -2.3112430572509766
    4. ' #' → logprob: -2.4362430572509766
    5. 'self' → logprob: -2.5612430572509766
    6. ' indices' → logprob: -2.5612430572509766
    7. '#' → logprob: -3.3112430572509766
    8. 'indices' → logprob: -3.8112430572509766
    9. ' idx' → logprob: -4.811243057250977
    10. ' del' → logprob: -5.436243057250977

Token 167: ' two' (ID: 1920)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.24616794288158417
    2. ' blocks' → logprob: -2.1211678981781006
    3. 'self' → logprob: -2.9961678981781006
    4. ' the' → logprob: -3.2461678981781006
    5. ' ' → logprob: -5.87116813659668
    6. ' i' → logprob: -6.74616813659668
    7. ' j' → logprob: -6.99616813659668
    8. ' del' → logprob: -7.12116813659668
    9. 'blocks' → logprob: -7.12116813659668
    10. '   ' → logprob: -7.74616813659668

Token 168: ' adjacent' (ID: 39069)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.0077019804157316685
    2. ' adjacent' → logprob: -5.882701873779297
    3. 'blocks' → logprob: -6.007701873779297
    4. '_blocks' → logprob: -6.882701873779297
    5. ' ' → logprob: -7.132701873779297
    6. '.blocks' → logprob: -7.882701873779297
    7. '_' → logprob: -10.507701873779297
    8. '.' → logprob: -10.507701873779297
    9. ' ' → logprob: -10.882701873779297
    10. ' )' → logprob: -11.007701873779297

Token 169: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.01713612861931324
    2. 'blocks' → logprob: -4.142136096954346
    3. ' ' → logprob: -7.392136096954346
    4. '_blocks' → logprob: -8.642136573791504
    5. '.blocks' → logprob: -9.392136573791504
    6. ' )' → logprob: -10.267136573791504
    7. 's' → logprob: -10.517136573791504
    8. ')' → logprob: -10.642136573791504
    9. ' ' → logprob: -10.892136573791504
    10. 'self' → logprob: -11.267136573791504

Token 170: ' i' (ID: 575)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2538706064224243
    2. '       ' → logprob: -1.5038706064224243
    3. ',' → logprob: -2.1288704872131348
    4. ' at' → logprob: -2.3788704872131348
    5. '           ' → logprob: -2.5038704872131348
    6. '<|end|>' → logprob: -2.5038704872131348
    7. ' and' → logprob: -3.7538704872131348
    8. ' if' → logprob: -3.8788704872131348
    9. '<|end|>' → logprob: -3.8788704872131348
    10. ' from' → logprob: -4.503870487213135

Token 171: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4597231149673462
    2. ',' → logprob: -1.7097231149673462
    3. 'and' → logprob: -2.2097229957580566
    4. ')' → logprob: -4.459722995758057
    5. ']' → logprob: -4.459722995758057
    6. ',j' → logprob: -4.959722995758057
    7. '+' → logprob: -5.084722995758057
    8. '   ' → logprob: -5.084722995758057
    9. ':j' → logprob: -5.334722995758057
    10. ':' → logprob: -5.334722995758057

Token 172: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3871122896671295
    2. 'j' → logprob: -1.1371122598648071
    3. ' ' → logprob: -9.137112617492676
    4. ' i' → logprob: -10.012112617492676
    5. 'i' → logprob: -10.137112617492676
    6. '	j' → logprob: -10.887112617492676
    7. ' ' → logprob: -12.512112617492676
    8. '   ' → logprob: -12.512112617492676
    9. '  ' → logprob: -13.074612617492676
    10. ',' → logprob: -13.324612617492676

Token 173: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.079764723777771
    2. ':' → logprob: -1.329764723777771
    3. '           ' → logprob: -1.704764723777771
    4. '
' → logprob: -2.4547648429870605
    5. ',' → logprob: -3.0797648429870605
    6. ')' → logprob: -4.2047648429870605
    7. ':
' → logprob: -4.2047648429870605
    8. '<|end|>' → logprob: -4.4547648429870605
    9. '        
' → logprob: -5.3297648429870605
    10. '):
' → logprob: -5.3297648429870605

Token 174: ' return' (ID: 622)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.28702446818351746
    2. ' del' → logprob: -2.66202449798584
    3. 'self' → logprob: -3.16202449798584
    4. ' replace' → logprob: -3.16202449798584
    5. '       ' → logprob: -4.16202449798584
    6. '    ' → logprob: -4.16202449798584
    7. ' ' → logprob: -4.78702449798584
    8. 'del' → logprob: -4.91202449798584
    9. ' return' → logprob: -5.03702449798584
    10. '        ' → logprob: -5.03702449798584

Token 175: ' a' (ID: 261)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7401332259178162
    2. ' a' → logprob: -1.740133285522461
    3. ' True' → logprob: -1.865133285522461
    4. ' new' → logprob: -2.365133285522461
    5. ' [' → logprob: -2.990133285522461
    6. ' ' → logprob: -4.240133285522461
    7. ' self' → logprob: -4.615133285522461
    8. 'None' → logprob: -4.865133285522461
    9. 'self' → logprob: -5.740133285522461
    10. ' False' → logprob: -5.865133285522461

Token 176: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.02018539048731327
    2. ' ' → logprob: -4.270185470581055
    3. 'new' → logprob: -5.145185470581055
    4. ' list' → logprob: -10.145185470581055
    5. 'n' → logprob: -10.645185470581055
    6. 'w' → logprob: -11.145185470581055
    7. '  ' → logprob: -11.395185470581055
    8. ' 
' → logprob: -11.645185470581055
    9. ' ' → logprob: -11.645185470581055
    10. ' n' → logprob: -11.895185470581055

Token 177: ' Stack' (ID: 25134)
  Prédit: ' Stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stack' → logprob: -0.308827668428421
    2. ' Dar' → logprob: -1.6838276386260986
    3. 'Stack' → logprob: -2.6838276386260986
    4. 'Dar' → logprob: -4.933827877044678
    5. ' ' → logprob: -5.933827877044678
    6. ' Block' → logprob: -6.683827877044678
    7. '  ' → logprob: -8.80882740020752
    8. ' stack' → logprob: -9.05882740020752
    9. '_stack' → logprob: -9.05882740020752
    10. 'Block' → logprob: -9.80882740020752

Token 178: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6494388580322266
    2. '           ' → logprob: -1.3994388580322266
    3. ':' → logprob: -3.1494388580322266
    4. '<|end|>' → logprob: -3.3994388580322266
    5. ':
' → logprob: -3.5244388580322266
    6. ',' → logprob: -3.6494388580322266
    7. '<|end|>' → logprob: -3.8994388580322266
    8. '   ' → logprob: -4.149438858032227
    9. '
' → logprob: -4.524438858032227
    10. '(' → logprob: -4.899438858032227

Token 179: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3134061098098755
    2. '       ' → logprob: -2.063405990600586
    3. '<|end|>' → logprob: -3.313405990600586
    4. '
' → logprob: -3.438405990600586
    5. ':
' → logprob: -3.563405990600586
    6. ',' → logprob: -3.813405990600586
    7. '<|end|>' → logprob: -5.813405990600586
    8. '        
' → logprob: -5.938405990600586
    9. '.' → logprob: -5.938405990600586
    10. '   ' → logprob: -6.188405990600586

Token 180: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3755165934562683
    2. '        ' → logprob: -2.375516653060913
    3. 'new' (adapté à ' new') → logprob: -2.625516653060913
    4. ' blocks' → logprob: -3.250516653060913
    5. '       ' → logprob: -3.375516653060913
    6. '           ' → logprob: -3.375516653060913
    7. ' if' → logprob: -4.625516414642334
    8. '            ' → logprob: -4.875516414642334
    9. '    ' → logprob: -5.250516414642334
    10. '        
' → logprob: -6.250516414642334

Token 181: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.24161884188652039
    2. '(' → logprob: -2.1166188716888428
    3. '.blocks' → logprob: -3.8666188716888428
    4. 'Blocks' → logprob: -4.241618633270264
    5. '.' → logprob: -4.491618633270264
    6. '._' → logprob: -4.616618633270264
    7. '(
' → logprob: -4.741618633270264
    8. '_' → logprob: -5.116618633270264
    9. '.Block' → logprob: -5.116618633270264
    10. 's' → logprob: -5.866618633270264

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067225913517177105
    2. '=' → logprob: -5.006722450256348
    3. ' =[' → logprob: -12.756722450256348
    4. 's' → logprob: -13.506722450256348
    5. '[:]' → logprob: -13.881722450256348
    6. '[' → logprob: -13.881722450256348
    7. ' =
' → logprob: -15.506722450256348
    8. '=[]' → logprob: -15.756722450256348
    9. ' ' → logprob: -15.881722450256348
    10. ')' → logprob: -16.006723403930664

Token 183: ' self' (ID: 1051)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.5467307567596436
    2. ' [' → logprob: -1.2967307567596436
    3. ' self' → logprob: -2.7967307567596436
    4. 'self' → logprob: -2.7967307567596436
    5. '[' → logprob: -3.6717307567596436
    6. ' ' → logprob: -9.546730995178223
    7. '[]' → logprob: -9.796730995178223
    8. '[
' → logprob: -10.171730995178223
    9. '   ' → logprob: -10.421730995178223
    10. '	self' → logprob: -10.546730995178223

Token 184: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -0.00020056030189152807
    2. '.' → logprob: -8.625200271606445
    3. ' .' → logprob: -11.125200271606445
    4. '.block' → logprob: -12.875200271606445
    5. '.b' → logprob: -13.750200271606445
    6. '.points' → logprob: -14.625200271606445
    7. '   ' → logprob: -15.625200271606445
    8. 'blocks' → logprob: -15.625200271606445
    9. '.Block' → logprob: -15.750200271606445
    10. '       ' → logprob: -16.000200271606445

Token 185: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0011777279432862997
    2. '[:]' → logprob: -6.751177787780762
    3. '.copy' → logprob: -12.376177787780762
    4. '[' → logprob: -12.876177787780762
    5. '[i' → logprob: -14.626177787780762
    6. ' [:' → logprob: -15.876177787780762
    7. '[
' → logprob: -17.126176834106445
    8. '[:-' → logprob: -17.376176834106445
    9. '.' → logprob: -19.376176834106445
    10. '][:' → logprob: -20.001176834106445

Token 186: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002481078845448792
    2. ']' → logprob: -8.375247955322266
    3. 'max' → logprob: -12.000247955322266
    4. ' i' → logprob: -12.625247955322266
    5. 'min' → logprob: -13.125247955322266
    6. ')' → logprob: -13.625247955322266
    7. ']+' → logprob: -14.250247955322266
    8. '
' → logprob: -14.500247955322266
    9. '   ' → logprob: -14.500247955322266
    10. ' ' → logprob: -14.625247955322266

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015169414109550416
    2. ']+' → logprob: -9.000151634216309
    3. ' ]' → logprob: -10.500151634216309
    4. '```' → logprob: -15.250151634216309
    5. '+' → logprob: -15.875151634216309
    6. '}' → logprob: -16.625152587890625
    7. ']
' → logprob: -16.750152587890625
    8. '"]' → logprob: -16.875152587890625
    9. '-' → logprob: -17.125152587890625
    10. '']' → logprob: -17.500152587890625

Token 188: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2862738370895386
    2. ' +' → logprob: -1.4112738370895386
    3. ']' → logprob: -6.036273956298828
    4. ']+' → logprob: -6.286273956298828
    5. '+j' → logprob: -8.286273956298828
    6. '+i' → logprob: -8.411273956298828
    7. '```' → logprob: -9.036273956298828
    8. '+self' → logprob: -9.411273956298828
    9. '0' → logprob: -10.661273956298828
    10. '    ' → logprob: -10.911273956298828

Token 189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02327774278819561
    2. ' self' → logprob: -3.773277759552002
    3. '[self' → logprob: -10.648277282714844
    4. '	self' → logprob: -12.648277282714844
    5. '[' → logprob: -13.398277282714844
    6. '(self' → logprob: -13.523277282714844
    7. '       ' → logprob: -14.023277282714844
    8. ' ' → logprob: -15.023277282714844
    9. '=self' → logprob: -15.023277282714844
    10. 's' → logprob: -15.273277282714844

Token 190: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -0.0001322639436693862
    2. 's' → logprob: -9.62513256072998
    3. 'blocks' → logprob: -10.25013256072998
    4. '[j' → logprob: -11.75013256072998
    5. 'self' → logprob: -12.25013256072998
    6. ' .' → logprob: -13.00013256072998
    7. '       ' → logprob: -13.12513256072998
    8. '```' → logprob: -13.62513256072998
    9. 'b' → logprob: -13.87513256072998
    10. '.contents' → logprob: -13.87513256072998

Token 191: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.664371848164592e-05
    2. '[' → logprob: -11.125016212463379
    3. 'j' → logprob: -14.125016212463379
    4. '[i' → logprob: -14.375016212463379
    5. '   ' → logprob: -16.375017166137695
    6. '[
' → logprob: -16.625017166137695
    7. '[(' → logprob: -16.750017166137695
    8. '```' → logprob: -16.750017166137695
    9. '[js' → logprob: -17.125017166137695
    10. '
' → logprob: -17.375017166137695

Token 192: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00029875844484195113
    2. '[' → logprob: -8.750298500061035
    3. ' +' → logprob: -8.875298500061035
    4. '+[' → logprob: -14.750298500061035
    5. '1' → logprob: -16.12529945373535
    6. '()+' → logprob: -18.12529945373535
    7. '+]' → logprob: -19.25029945373535
    8. 's' → logprob: -19.37529945373535
    9. '＋' → logprob: -19.37529945373535
    10. '+s' → logprob: -19.50029945373535

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.500030517578125
    4. '<|end|>' → logprob: -18.000030517578125
    5. '  ' → logprob: -18.125030517578125
    6. '2' → logprob: -18.375030517578125
    7. '           ' → logprob: -18.500030517578125
    8. '
' → logprob: -18.875030517578125
    9. '...' → logprob: -19.000030517578125
    10. ']' → logprob: -19.000030517578125

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. ']' → logprob: -17.750009536743164
    4. '   ' → logprob: -17.875009536743164
    5. '0' → logprob: -18.125009536743164
    6. '...' → logprob: -18.125009536743164
    7. '           ' → logprob: -18.625009536743164
    8. '
' → logprob: -18.875009536743164
    9. '```' → logprob: -18.875009536743164
    10. '<|end|>' → logprob: -19.500009536743164

Token 195: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00037967207026667893
    2. '<|end|>' → logprob: -8.37537956237793
    3. ' ]' → logprob: -9.00037956237793
    4. '<|end|>' → logprob: -11.62537956237793
    5. ':]' → logprob: -12.25037956237793
    6. ']()' → logprob: -12.50037956237793
    7. ']
' → logprob: -12.87537956237793
    8. '()]' → logprob: -14.12537956237793
    9. '}' → logprob: -14.12537956237793
    10. ')' → logprob: -14.25037956237793

Token 196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0051678200252354145
    2. '       ' → logprob: -5.7551679611206055
    3. '<|end|>' → logprob: -6.6301679611206055
    4. ')' → logprob: -8.255167961120605
    5. '
' → logprob: -9.380167961120605
    6. '   ' → logprob: -9.630167961120605
    7. 'return' → logprob: -9.630167961120605
    8. ' return' → logprob: -9.755167961120605
    9. '		' → logprob: -10.255167961120605
    10. '               ' → logprob: -10.380167961120605

Token 197: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7284688353538513
    2. '       ' → logprob: -1.228468894958496
    3. '           ' → logprob: -1.978468894958496
    4. ' return' → logprob: -2.478468894958496
    5. '   ' → logprob: -6.353468894958496
    6. '
' → logprob: -7.978468894958496
    7. '	return' → logprob: -8.228468894958496
    8. ' ' → logprob: -11.603468894958496
    9. ' ' → logprob: -11.603468894958496
    10. '        
' → logprob: -11.603468894958496

Token 198: ' Re' (ID: 907)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18449531495571136
    2. ' return' → logprob: -1.8094953298568726
    3. '           ' → logprob: -5.809495449066162
    4. '       ' → logprob: -6.434495449066162
    5. '        ' → logprob: -10.684494972229004
    6. '	return' → logprob: -11.059494972229004
    7. '```' → logprob: -11.059494972229004
    8. '
' → logprob: -11.184494972229004
    9. '   ' → logprob: -11.559494972229004
    10. ' ' → logprob: -11.684494972229004

Token 199: '-index' (ID: 45533)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.008057862520217896
    2. 'index' → logprob: -5.508058071136475
    3. 'calculate' → logprob: -6.508058071136475
    4. 'assign' → logprob: -7.508058071136475
    5. 'position' → logprob: -8.008057594299316
    6. 'move' → logprob: -8.383057594299316
    7. 'build' → logprob: -8.383057594299316
    8. 'set' → logprob: -8.508057594299316
    9. '       ' → logprob: -8.758057594299316
    10. '           ' → logprob: -9.133057594299316

Token 200: ' positions' (ID: 15897)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8100712895393372
    2. ' new' → logprob: -1.0600712299346924
    3. 'new' → logprob: -3.0600712299346924
    4. 'ing' → logprob: -3.4350712299346924
    5. 'ed' → logprob: -3.4350712299346924
    6. ' blocks' → logprob: -3.8100712299346924
    7. 'for' → logprob: -3.9350712299346924
    8. '_blocks' → logprob: -4.0600714683532715
    9. '           ' → logprob: -4.6850714683532715
    10. '<|end|>' → logprob: -5.1850714683532715

Token 201: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07534336298704147
    2. ' for' → logprob: -2.950343370437622
    3. '
' → logprob: -4.200343132019043
    4. 'for' → logprob: -5.575343132019043
    5. '       ' → logprob: -7.325343132019043
    6. '<|end|>' → logprob: -8.075343132019043
    7. '               ' → logprob: -8.825343132019043
    8. ',' → logprob: -9.575343132019043
    9. '   ' → logprob: -9.950343132019043
    10. '<|end|>' → logprob: -10.075343132019043

Token 202: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3308529555797577
    2. '           ' → logprob: -1.33085298538208
    3. 'for' → logprob: -4.08085298538208
    4. '       ' → logprob: -8.205852508544922
    5. '<|end|>' → logprob: -9.455852508544922
    6. '   ' → logprob: -9.955852508544922
    7. ',' → logprob: -10.080852508544922
    8. ' ' → logprob: -10.830852508544922
    9. ' =' → logprob: -11.705852508544922
    10. '               ' → logprob: -11.705852508544922

Token 203: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.584147572517395
    2. 'for' (adapté à ' for') → logprob: -0.834147572517395
    3. '           ' → logprob: -4.8341474533081055
    4. '       ' → logprob: -8.709147453308105
    5. '[' → logprob: -10.834147453308105
    6. '	for' → logprob: -11.209147453308105
    7. '   ' → logprob: -11.959147453308105
    8. ' ' → logprob: -12.834147453308105
    9. ' new' → logprob: -13.084147453308105
    10. '               ' → logprob: -13.209147453308105

Token 204: ' idx' (ID: 14016)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6994434595108032
    2. ' idx' → logprob: -0.6994434595108032
    3. 'k' → logprob: -5.324443340301514
    4. ' index' → logprob: -7.074443340301514
    5. 'idx' → logprob: -7.699443340301514
    6. ' ' → logprob: -10.324443817138672
    7. '   ' → logprob: -10.949443817138672
    8. 'index' → logprob: -11.074443817138672
    9. ' block' → logprob: -11.324443817138672
    10. ' b' → logprob: -11.574443817138672

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012023082002997398
    2. ' in' → logprob: -4.512022972106934
    3. ' ,' → logprob: -7.262022972106934
    4. 'in' → logprob: -8.387022972106934
    5. ' ' → logprob: -11.012022972106934
    6. ',in' → logprob: -11.137022972106934
    7. ',new' → logprob: -13.012022972106934
    8. 's' → logprob: -13.387022972106934
    9. '=' → logprob: -13.387022972106934
    10. '<|end|>' → logprob: -13.637022972106934

Token 206: ' blk' (ID: 99453)
  Prédit: ' block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.43363186717033386
    2. 'block' → logprob: -1.0586318969726562
    3. 'b' → logprob: -5.933631896972656
    4. ' blk' → logprob: -6.808631896972656
    5. 'blk' → logprob: -7.308631896972656
    6. ' b' → logprob: -7.683631896972656
    7. '	block' → logprob: -11.433631896972656
    8. 'bl' → logprob: -11.683631896972656
    9. ':block' → logprob: -13.058631896972656
    10. ' blok' → logprob: -13.308631896972656

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019392271060496569
    2. 'ock' → logprob: -6.751939296722412
    3. 'in' → logprob: -7.501939296722412
    4. 'k' → logprob: -8.876938819885254
    5. 'ocks' → logprob: -10.751938819885254
    6. ' ' → logprob: -11.126938819885254
    7. 'lock' → logprob: -11.126938819885254
    8. 's' → logprob: -11.751938819885254
    9. ',' → logprob: -12.251938819885254
    10. '   ' → logprob: -13.626938819885254

Token 208: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.06196768581867218
    2. 'enumer' → logprob: -2.811967611312866
    3. '```' → logprob: -17.936967849731445
    4. 'en' → logprob: -18.186967849731445
    5. ' ' → logprob: -18.561967849731445
    6. '.enumer' → logprob: -18.811967849731445
    7. ' enumeration' → logprob: -19.186967849731445
    8. ' enumer' → logprob: -19.311967849731445
    9. '
' → logprob: -19.561967849731445
    10. 'Enumer' → logprob: -19.686967849731445

Token 209: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0013590441085398197
    2. 'new' → logprob: -6.626358985900879
    3. ' new' → logprob: -10.501358985900879
    4. '(' → logprob: -12.376358985900879
    5. ')new' → logprob: -14.001358985900879
    6. '(self' → logprob: -15.376358985900879
    7. ' (' → logprob: -15.876358985900879
    8. '	new' → logprob: -16.001359939575195
    9. ',new' → logprob: -17.251359939575195
    10. '[new' → logprob: -17.501359939575195

Token 210: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.006868582684546709
    2. 'new' → logprob: -5.506868362426758
    3. 'blocks' → logprob: -6.131868362426758
    4. '_new' → logprob: -7.881868362426758
    5. '.blocks' → logprob: -8.881868362426758
    6. 'Blocks' → logprob: -10.131868362426758
    7. ' blocks' → logprob: -11.006868362426758
    8. '_block' → logprob: -11.256868362426758
    9. ' new' → logprob: -12.256868362426758
    10. '_' → logprob: -12.381868362426758

Token 211: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3517628610134125
    2. '):' → logprob: -1.2267628908157349
    3. ':' → logprob: -5.851762771606445
    4. ':
' → logprob: -8.351762771606445
    5. '       ' → logprob: -9.351762771606445
    6. '):
' → logprob: -10.226762771606445
    7. '   ' → logprob: -10.351762771606445
    8. '           ' → logprob: -11.101762771606445
    9. ')' → logprob: -11.851762771606445
    10. ',' → logprob: -12.601762771606445

Token 212: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004381467122584581
    2. '           ' → logprob: -5.8793816566467285
    3. '                
' → logprob: -7.3793816566467285
    4. 'blk' → logprob: -8.12938117980957
    5. '<|end|>' → logprob: -9.25438117980957
    6. '   ' → logprob: -9.37938117980957
    7. '       ' → logprob: -9.50438117980957
    8. '              ' → logprob: -9.75438117980957
    9. ' blk' → logprob: -9.75438117980957
    10. '                ' → logprob: -9.87938117980957

Token 213: ' blk' (ID: 99453)
  Prédit: ' blk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blk' → logprob: -0.3418249189853668
    2. 'blk' (adapté à ' blk') → logprob: -1.5918248891830444
    3. '               ' → logprob: -2.466825008392334
    4. '           ' → logprob: -7.966825008392334
    5. '                   ' → logprob: -8.341824531555176
    6. '   ' → logprob: -8.466824531555176
    7. 'block' → logprob: -9.341824531555176
    8. 'bl' → logprob: -10.216824531555176
    9. '                ' → logprob: -10.341824531555176
    10. '_blk' → logprob: -10.466824531555176

Token 214: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -4.11996734328568e-05
    2. '.' → logprob: -10.125041007995605
    3. ' .' → logprob: -14.750041007995605
    4. '.positions' → logprob: -15.000041007995605
    5. '.weight' → logprob: -16.750041961669922
    6. '.pos' → logprob: -16.875041961669922
    7. '[position' → logprob: -16.875041961669922
    8. '.status' → logprob: -17.375041961669922
    9. '.location' → logprob: -17.875041961669922
    10. '.period' → logprob: -18.000041961669922

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '＝' → logprob: -17.03522491455078
    4. ' ' → logprob: -18.91022491455078
    5. '=
' → logprob: -19.03522491455078
    6. '.=' → logprob: -19.41022491455078
    7. '=

' → logprob: -19.53522491455078
    8. ' =
' → logprob: -19.53522491455078
    9. '=}' → logprob: -20.03522491455078
    10. '=index' → logprob: -20.28522491455078

Token 216: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5759406089782715
    2. 'idx' → logprob: -0.8259406089782715
    3. '[idx' → logprob: -14.45094108581543
    4. '	idx' → logprob: -14.70094108581543
    5. '(idx' → logprob: -15.20094108581543
    6. '_idx' → logprob: -20.32594108581543
    7. '.idx' → logprob: -20.57594108581543
    8. 'i' → logprob: -21.57594108581543
    9. ' ' → logprob: -21.57594108581543
    10. 'indx' → logprob: -21.70094108581543

Token 217: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14996829628944397
    2. '
' → logprob: -2.024968385696411
    3. 'new' → logprob: -6.149968147277832
    4. '    
' → logprob: -6.899968147277832
    5. 'return' → logprob: -7.024968147277832
    6. ' new' → logprob: -7.274968147277832
    7. '            
' → logprob: -7.399968147277832
    8. '<|end|>' → logprob: -7.524968147277832
    9. '       ' → logprob: -7.774968147277832
    10. ' return' → logprob: -8.399968147277832

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17175602912902832
    2. '       ' → logprob: -2.6717560291290283
    3. '
' → logprob: -2.7967560291290283
    4. 'return' → logprob: -4.171755790710449
    5. ' return' → logprob: -5.546755790710449
    6. '<|end|>' → logprob: -6.171755790710449
    7. '    
' → logprob: -6.546755790710449
    8. '   ' → logprob: -6.671755790710449
    9. 'new' → logprob: -7.046755790710449
    10. '        
' → logprob: -7.296755790710449

Token 219: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5262870788574219
    2. 'return' (adapté à ' return') → logprob: -1.0262870788574219
    3. '       ' → logprob: -3.651287078857422
    4. ' return' → logprob: -3.776287078857422
    5. '   ' → logprob: -6.401287078857422
    6. '
' → logprob: -8.651287078857422
    7. '	return' → logprob: -9.401287078857422
    8. '    
' → logprob: -11.401287078857422
    9. ')return' → logprob: -11.401287078857422
    10. '<|end|>' → logprob: -11.401287078857422

Token 220: ' Dar' (ID: 17214)
  Prédit: 'Dar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dar' → logprob: -0.07248101383447647
    2. 'self' → logprob: -2.6974809169769287
    3. ' Dar' → logprob: -6.197481155395508
    4. ' self' → logprob: -7.697481155395508
    5. 'Stack' → logprob: -10.447481155395508
    6. 'type' → logprob: -10.947481155395508
    7. '           ' → logprob: -13.822481155395508
    8. '   ' → logprob: -13.822481155395508
    9. 'stack' → logprob: -14.197481155395508
    10. ' type' → logprob: -14.322481155395508

Token 221: 'uma' (ID: 5669)
  Prédit: 'uma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uma' → logprob: -3.416665640543215e-05
    2. 'ma' → logprob: -10.37503433227539
    3. 'Ma' → logprob: -14.00003433227539
    4. 'Uma' → logprob: -14.00003433227539
    5. 'u' → logprob: -14.75003433227539
    6. ' uma' → logprob: -16.00003433227539
    7. 'ума' → logprob: -16.25003433227539
    8. 'um' → logprob: -16.37503433227539
    9. '   ' → logprob: -16.50003433227539
    10. 'ama' → logprob: -16.62503433227539

Token 222: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -4.320199877838604e-07
    2. ' O' → logprob: -15.5
    3. 'Ot' → logprob: -15.75
    4. 'otos' → logprob: -17.125
    5. 'О' → logprob: -17.875
    6. '	O' → logprob: -18.125
    7. '   ' → logprob: -18.5
    8. 'OTOS' → logprob: -18.5
    9. 'OT' → logprob: -18.75
    10. ' Ot' → logprob: -19.75

Token 223: 'tos' (ID: 33712)
  Prédit: 'tos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tos' → logprob: -0.5043386816978455
    2. 'ts' → logprob: -1.7543387413024902
    3. 'T' → logprob: -2.0043387413024902
    4. 'O' → logprob: -3.2543387413024902
    5. 'shi' → logprob: -4.00433874130249
    6. 't' → logprob: -4.62933874130249
    7. 'st' → logprob: -4.62933874130249
    8. 'sh' → logprob: -4.87933874130249
    9. 'tes' → logprob: -6.75433874130249
    10. 'te' → logprob: -6.75433874130249

Token 224: 'hi' (ID: 3686)
  Prédit: 'hi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -6.754368223482743e-05
    2. 'h' → logprob: -10.500067710876465
    3. 'i' → logprob: -11.750067710876465
    4. 'his' → logprob: -12.000067710876465
    5. '   ' → logprob: -12.375067710876465
    6. '

' → logprob: -12.625067710876465
    7. '
' → logprob: -12.750067710876465
    8. 'Hi' → logprob: -12.875067710876465
    9. 'chi' → logprob: -13.000067710876465
    10. '\' → logprob: -14.250067710876465

Token 225: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -7.703443770878948e-06
    2. 'O' → logprob: -12.500007629394531
    3. 'Gam' → logprob: -14.500007629394531
    4. ' Game' → logprob: -14.625007629394531
    5. '_Game' → logprob: -14.625007629394531
    6. 'Stack' → logprob: -14.625007629394531
    7. 'game' → logprob: -15.000007629394531
    8. 'G' → logprob: -15.125007629394531
    9. '<Game' → logprob: -15.125007629394531
    10. '_game' → logprob: -15.375007629394531

Token 226: '.Stack' (ID: 84183)
  Prédit: '.Stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Stack' → logprob: -0.0014774868031963706
    2. 'O' → logprob: -6.8764777183532715
    3. 'Stack' → logprob: -8.376477241516113
    4. '.Game' → logprob: -8.876477241516113
    5. '.' → logprob: -10.501477241516113
    6. '.D' → logprob: -11.001477241516113
    7. '(Stack' → logprob: -11.126477241516113
    8. 'Game' → logprob: -11.626477241516113
    9. '.Block' → logprob: -12.876477241516113
    10. '.O' → logprob: -13.876477241516113

Token 227: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.500003814697266
    3. '[new' → logprob: -17.875003814697266
    4. 'new' → logprob: -18.125003814697266
    5. '(New' → logprob: -18.250003814697266
    6. ')new' → logprob: -18.750003814697266
    7. '((' → logprob: -19.250003814697266
    8. '(n' → logprob: -19.250003814697266
    9. ' (' → logprob: -19.375003814697266
    10. ',new' → logprob: -20.250003814697266

Token 228: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -1.5213274309644476e-05
    2. 'blocks' → logprob: -11.125015258789062
    3. 'Blocks' → logprob: -15.250015258789062
    4. '_block' → logprob: -16.875015258789062
    5. '_bloc' → logprob: -17.875015258789062
    6. 'new' → logprob: -18.125015258789062
    7. 'block' → logprob: -19.125015258789062
    8. '.blocks' → logprob: -19.125015258789062
    9. ' blocks' → logprob: -19.250015258789062
    10. '_b' → logprob: -19.375015258789062

Token 229: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.250001907348633
    4. '<|end|>' → logprob: -15.875001907348633
    5. '       ' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '))' → logprob: -18.000001907348633
    8. ')return' → logprob: -18.125001907348633
    9. ')`' → logprob: -18.375001907348633
    10. '),' → logprob: -18.375001907348633

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7303553819656372
    2. '<|end|>' → logprob: -0.8553553819656372
    3. '   ' → logprob: -2.6053552627563477
    4. ' ' → logprob: -4.605355262756348
    5. '
' → logprob: -5.855355262756348
    6. '<|end|>' → logprob: -6.230355262756348
    7. '        
' → logprob: -6.980355262756348
    8. 'def' → logprob: -7.105355262756348
    9. '    
' → logprob: -7.605355262756348
    10. '  ' → logprob: -7.980355262756348

Token 231: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.35356375575065613
    2. '       ' → logprob: -1.6035637855529785
    3. '   ' → logprob: -2.3535637855529785
    4. '        
' → logprob: -7.8535637855529785
    5. ' def' → logprob: -7.8535637855529785
    6. '
' → logprob: -7.9785637855529785
    7. '    
' → logprob: -9.22856330871582
    8. ' ' → logprob: -9.22856330871582
    9. '	def' → logprob: -9.22856330871582
    10. '<|end|>' → logprob: -9.72856330871582

Token 232: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5249903202056885
    2. ' __' → logprob: -1.5249903202056885
    3. ' find' → logprob: -2.1499903202056885
    4. 'can' → logprob: -2.2749903202056885
    5. 'is' → logprob: -2.3999903202056885
    6. ' is' → logprob: -2.7749903202056885
    7. 'top' → logprob: -3.2749903202056885
    8. ' can' → logprob: -3.3999903202056885
    9. 'remove' → logprob: -3.3999903202056885
    10. 'find' → logprob: -3.6499903202056885

Token 233: 'len' (ID: 3303)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.12864482402801514
    2. 'len' → logprob: -2.1286449432373047
    3. 'str' → logprob: -6.378644943237305
    4. 'iter' → logprob: -11.128644943237305
    5. 'getitem' → logprob: -12.878644943237305
    6. 'init' → logprob: -15.378644943237305
    7. 'rep' → logprob: -15.878644943237305
    8. 'eq' → logprob: -16.128644943237305
    9. 're' → logprob: -16.253644943237305
    10. ' repr' → logprob: -16.753644943237305

Token 234: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.7915485501289368
    2. '(' → logprob: -1.041548490524292
    3. '(self' → logprob: -1.666548490524292
    4. '__' → logprob: -5.916548728942871
    5. '__(
' → logprob: -6.166548728942871
    6. '__((' → logprob: -9.666548728942871
    7. '_(' → logprob: -9.666548728942871
    8. '(
' → logprob: -10.666548728942871
    9. '__('' → logprob: -10.916548728942871
    10. ' (' → logprob: -11.041548728942871

Token 235: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016098834748845547
    2. ')' → logprob: -9.250161170959473
    3. ' self' → logprob: -9.750161170959473
    4. '(self' → logprob: -12.000161170959473
    5. '	self' → logprob: -15.750161170959473
    6. ')(' → logprob: -16.375160217285156
    7. '   ' → logprob: -16.750160217285156
    8. ' ' → logprob: -16.875160217285156
    9. '
' → logprob: -16.875160217285156
    10. '(' → logprob: -18.000160217285156

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013553575612604618
    2. '):
' → logprob: -4.513553619384766
    3. ')' → logprob: -6.013553619384766
    4. ' ):' → logprob: -10.388553619384766
    5. '():' → logprob: -11.263553619384766
    6. 'self' → logprob: -12.638553619384766
    7. '):

' → logprob: -12.763553619384766
    8. '):
' → logprob: -13.263553619384766
    9. '()' → logprob: -13.388553619384766
    10. '(self' → logprob: -14.013553619384766

Token 237: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13329944014549255
    2. 'return' → logprob: -2.1332993507385254
    3. '       ' → logprob: -5.633299350738525
    4. '()' → logprob: -6.258299350738525
    5. '           ' → logprob: -7.883299350738525
    6. '()
' → logprob: -9.133299827575684
    7. '   ' → logprob: -9.258299827575684
    8. '	return' → logprob: -9.383299827575684
    9. ':return' → logprob: -10.133299827575684
    10. '{return' → logprob: -10.633299827575684

Token 238: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06782889366149902
    2. ' return' → logprob: -3.317828893661499
    3. 'len' → logprob: -3.567828893661499
    4. '       ' → logprob: -7.567829132080078
    5. ' len' → logprob: -7.567829132080078
    6. '   ' → logprob: -9.692829132080078
    7. '           ' → logprob: -10.317829132080078
    8. ' ' → logprob: -14.442829132080078
    9. '	return' → logprob: -14.442829132080078
    10. '    ' → logprob: -14.567829132080078

Token 239: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12692810595035553
    2. ' len' → logprob: -2.1269280910491943
    3. '	len' → logprob: -17.126928329467773
    4. '   ' → logprob: -17.626928329467773
    5. '(len' → logprob: -17.751928329467773
    6. '       ' → logprob: -19.126928329467773
    7. '=len' → logprob: -20.376928329467773
    8. '           ' → logprob: -21.251928329467773
    9. '[len' → logprob: -21.501928329467773
    10. 'self' → logprob: -22.126928329467773

Token 240: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007111206650733948
    2. '(' → logprob: -7.250710964202881
    3. 'self' → logprob: -14.875711441040039
    4. '(this' → logprob: -15.000711441040039
    5. ' (' → logprob: -15.500711441040039
    6. '(s' → logprob: -16.37571144104004
    7. '(sel' → logprob: -18.25071144104004
    8. '(
' → logprob: -19.00071144104004
    9. ' self' → logprob: -19.25071144104004
    10. '((' → logprob: -19.75071144104004

Token 241: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -2.045823566731997e-05
    2. '.' → logprob: -11.125020027160645
    3. ' .' → logprob: -12.500020027160645
    4. ').' → logprob: -14.125020027160645
    5. '.block' → logprob: -15.375020027160645
    6. '.tokens' → logprob: -15.750020027160645
    7. '.sections' → logprob: -15.875020027160645
    8. '.b' → logprob: -15.875020027160645
    9. '.points' → logprob: -16.37502098083496
    10. '.stack' → logprob: -16.75002098083496

Token 242: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.787507714354433e-05
    2. ')
' → logprob: -10.12504768371582
    3. '<|end|>' → logprob: -12.37504768371582
    4. ' )' → logprob: -13.75004768371582
    5. '   ' → logprob: -13.87504768371582
    6. '       ' → logprob: -14.12504768371582
    7. ')

' → logprob: -15.00004768371582
    8. ')return' → logprob: -15.87504768371582
    9. '}' → logprob: -16.00004768371582
    10. '<|end|>' → logprob: -16.50004768371582

Token 243: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38693222403526306
    2. '
' → logprob: -2.011932134628296
    3. '<|end|>' → logprob: -2.011932134628296
    4. '       ' → logprob: -3.011932134628296
    5. '    
' → logprob: -6.511932373046875
    6. '<|end|>' → logprob: -6.761932373046875
    7. 'def' → logprob: -7.386932373046875
    8. '        
' → logprob: -8.136932373046875
    9. ' ' → logprob: -8.386932373046875
    10. '    ' → logprob: -9.511932373046875

Token 244: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016897499153856188
    2. '   ' → logprob: -8.750168800354004
    3. '       ' → logprob: -12.000168800354004
    4. ' def' → logprob: -12.375168800354004
    5. '	def' → logprob: -17.00016975402832
    6. '        
' → logprob: -18.12516975402832
    7. 'class' → logprob: -18.87516975402832
    8. '
' → logprob: -19.00016975402832
    9. '    
' → logprob: -19.25016975402832
    10. ' ' → logprob: -19.25016975402832

Token 245: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004102504346519709
    2. ' __' → logprob: -5.50410270690918
    3. 'repr' → logprob: -11.62910270690918
    4. 'getitem' → logprob: -12.75410270690918
    5. 'is' → logprob: -13.00410270690918
    6. '_repr' → logprob: -13.00410270690918
    7. 'get' → logprob: -13.12910270690918
    8. 'def' → logprob: -13.62910270690918
    9. '[]' → logprob: -14.00410270690918
    10. '___' → logprob: -14.12910270690918

Token 246: 'repr' (ID: 67002)
  Prédit: 'getitem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getitem' → logprob: -0.4122164249420166
    2. 'repr' → logprob: -1.1622164249420166
    3. 'iter' → logprob: -4.1622161865234375
    4. 'str' → logprob: -4.6622161865234375
    5. 'bool' → logprob: -11.912216186523438
    6. 'eq' → logprob: -13.912216186523438
    7. 'contains' → logprob: -14.912216186523438
    8. 'len' → logprob: -15.162216186523438
    9. 'next' → logprob: -16.787216186523438
    10. 'copy' → logprob: -17.162216186523438

Token 247: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -3.023293538717553e-05
    2. '__' → logprob: -10.625030517578125
    3. '__(
' → logprob: -12.375030517578125
    4. '(self' → logprob: -13.750030517578125
    5. '__('' → logprob: -15.000030517578125
    6. '__("' → logprob: -16.000030517578125
    7. '__((' → logprob: -16.500030517578125
    8. '_(' → logprob: -17.250030517578125
    9. '(' → logprob: -19.250030517578125
    10. '__(*' → logprob: -19.250030517578125

Token 248: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9361264946837764e-07
    2. ' self' → logprob: -16.125
    3. ')' → logprob: -19.125
    4. 's' → logprob: -19.25
    5. '(self' → logprob: -19.25
    6. 'Self' → logprob: -20.75
    7. '       ' → logprob: -21.25
    8. 'sel' → logprob: -21.625
    9. 'elf' → logprob: -22.25
    10. '           ' → logprob: -22.625

Token 249: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.8735542297363281
    2. '__' → logprob: -1.3735542297363281
    3. '(self' → logprob: -1.4985542297363281
    4. 'self' → logprob: -2.873554229736328
    5. ')' → logprob: -3.248554229736328
    6. '__)' → logprob: -5.373554229736328
    7. '__(
' → logprob: -6.498554229736328
    8. ')(' → logprob: -6.998554229736328
    9. ' self' → logprob: -7.373554229736328
    10. '):
' → logprob: -7.873554229736328

Token 250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002833649516105652
    2. '       ' → logprob: -6.002833843231201
    3. ' return' → logprob: -9.127833366394043
    4. 'return' → logprob: -9.252833366394043
    5. 'self' → logprob: -9.502833366394043
    6. '   ' → logprob: -10.127833366394043
    7. '               ' → logprob: -10.752833366394043
    8. ' self' → logprob: -11.627833366394043
    9. '        ' → logprob: -13.377833366394043
    10. '          ' → logprob: -13.377833366394043

Token 251: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0780792236328125
    2. 'f' → logprob: -1.2030792236328125
    3. ' f' → logprob: -1.7030792236328125
    4. '"' → logprob: -2.5780792236328125
    5. ' return' → logprob: -2.8280792236328125
    6. '           ' → logprob: -3.3280792236328125
    7. '       ' → logprob: -5.7030792236328125
    8. '   ' → logprob: -5.9530792236328125
    9. ' "' → logprob: -8.703079223632812
    10. ''' → logprob: -8.953079223632812

Token 252: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.004690710920840502
    2. 'f' → logprob: -5.379690647125244
    3. '"' → logprob: -9.629691123962402
    4. ' repr' → logprob: -13.379691123962402
    5. ''' → logprob: -13.504691123962402
    6. ' "' → logprob: -14.004691123962402
    7. ' ' → logprob: -14.629691123962402
    8. 'repr' → logprob: -15.629691123962402
    9. '   ' → logprob: -15.754691123962402
    10. ''f' → logprob: -16.129690170288086

Token 253: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5762412548065186
    2. 'f' → logprob: -0.9512412548065186
    3. ' f' → logprob: -3.2012412548065186
    4. '"D' → logprob: -4.951241493225098
    5. '"<' → logprob: -5.951241493225098
    6. '(f' → logprob: -8.076241493225098
    7. '"{' → logprob: -8.201241493225098
    8. 'Stack' → logprob: -8.576241493225098
    9. 'Dar' → logprob: -9.576241493225098
    10. ''D' → logprob: -9.701241493225098

Token 254: 'Stack' (ID: 5622)
  Prédit: 'Stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stack' → logprob: -0.07209298014640808
    2. 'Dar' → logprob: -2.6970930099487305
    3. 'Block' → logprob: -7.1970930099487305
    4. 'f' → logprob: -7.3220930099487305
    5. '"' → logprob: -7.9470930099487305
    6. '{' → logprob: -8.94709300994873
    7. ''' → logprob: -9.19709300994873
    8. ''D' → logprob: -9.82209300994873
    9. 'stack' → logprob: -9.94709300994873
    10. ''{' → logprob: -11.69709300994873

Token 255: '({' (ID: 3972)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.22122323513031006
    2. '({' → logprob: -1.72122323513031
    3. '(' → logprob: -3.9712233543395996
    4. '(self' → logprob: -7.9712233543396
    5. '{' → logprob: -8.471222877502441
    6. '(w' → logprob: -9.721222877502441
    7. '(b' → logprob: -9.846222877502441
    8. '("' → logprob: -10.846222877502441
    9. '(\' → logprob: -10.971222877502441
    10. '(weights' → logprob: -10.971222877502441

Token 256: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00630972720682621
    2. '',' → logprob: -5.131309509277344
    3. '[self' → logprob: -8.631309509277344
    4. '','.' → logprob: -9.506309509277344
    5. '[' → logprob: -9.881309509277344
    6. ' self' → logprob: -10.256309509277344
    7. ''' → logprob: -11.006309509277344
    8. ',' → logprob: -11.756309509277344
    9. ''s' → logprob: -12.131309509277344
    10. ''.' → logprob: -13.006309509277344

Token 257: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -1.5048530030981055e-06
    2. '}.' → logprob: -14.500001907348633
    3. ' .' → logprob: -14.625001907348633
    4. ').' → logprob: -16.000001907348633
    5. 'blocks' → logprob: -16.250001907348633
    6. '.' → logprob: -16.500001907348633
    7. '.block' → logprob: -17.250001907348633
    8. ''.' → logprob: -17.625001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '[].' → logprob: -18.500001907348633

Token 258: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.25432097911834717
    2. ')' → logprob: -1.5043209791183472
    3. ')"' → logprob: -6.254321098327637
    4. ')}' → logprob: -8.629321098327637
    5. '])' → logprob: -9.504321098327637
    6. ' })' → logprob: -9.754321098327637
    7. '}' → logprob: -10.004321098327637
    8. '))' → logprob: -10.379321098327637
    9. ')")' → logprob: -10.754321098327637
    10. '[' → logprob: -11.379321098327637

Token 259: '"

' (ID: 2678)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.032137952744960785
    2. '<|end|>' → logprob: -4.157137870788574
    3. '   ' → logprob: -4.282137870788574
    4. '    
' → logprob: -7.282137870788574
    5. '       ' → logprob: -7.407137870788574
    6. '<|end|>' → logprob: -7.657137870788574
    7. '        
' → logprob: -8.907137870788574
    8. '

' → logprob: -9.282137870788574
    9. 'def' → logprob: -10.032137870788574
    10. '' → logprob: -10.657137870788574

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0047857495956122875
    2. '
' → logprob: -6.129785537719727
    3. 'def' → logprob: -6.379785537719727
    4. '    
' → logprob: -7.254785537719727
    5. '       ' → logprob: -9.004785537719727
    6. '        
' → logprob: -10.254785537719727
    7. '<|end|>' → logprob: -11.004785537719727
    8. ' def' → logprob: -12.504785537719727
    9. '```' → logprob: -13.004785537719727
    10. '  
' → logprob: -13.254785537719727

Token 261: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04604211449623108
    2. 'def' → logprob: -3.1710422039031982
    3. '
' → logprob: -6.171041965484619
    4. '    
' → logprob: -7.671041965484619
    5. ' def' → logprob: -8.046042442321777
    6. '       ' → logprob: -9.296042442321777
    7. '        
' → logprob: -10.046042442321777
    8. '	def' → logprob: -11.421042442321777
    9. '<|end|>' → logprob: -12.171042442321777
    10. '            
' → logprob: -13.296042442321777

Token 262: ' Solver' (ID: 141655)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.7077112197875977
    2. 'Player' → logprob: -1.7077112197875977
    3. 'Game' → logprob: -1.7077112197875977
    4. 'State' → logprob: -2.4577112197875977
    5. 'Solution' → logprob: -4.457711219787598
    6. 'Board' → logprob: -4.707711219787598
    7. ' Solver' → logprob: -4.832711219787598
    8. 'Node' → logprob: -5.082711219787598
    9. 'Hand' → logprob: -5.957711219787598
    10. ' Player' → logprob: -5.957711219787598

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004089678172022104
    2. ':
' → logprob: -5.504089832305908
    3. ':def' → logprob: -12.62908935546875
    4. '   ' → logprob: -13.00408935546875
    5. '(object' → logprob: -13.37908935546875
    6. ' :' → logprob: -13.75408935546875
    7. '(' → logprob: -14.12908935546875
    8. '():' → logprob: -14.62908935546875
    9. '):' → logprob: -14.75408935546875
    10. ':

' → logprob: -14.75408935546875

Token 264: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13149136304855347
    2. '       ' → logprob: -2.3814914226531982
    3. ' def' → logprob: -4.006491184234619
    4. 'def' → logprob: -5.256491184234619
    5. '    
' → logprob: -5.506491184234619
    6. '
' → logprob: -6.381491184234619
    7. '    ' → logprob: -7.381491184234619
    8. '	def' → logprob: -8.131491661071777
    9. '        
' → logprob: -8.631491661071777
    10. '[' → logprob: -9.131491661071777

Token 265: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.18008269369602203
    2. ' def' → logprob: -1.8050826787948608
    3. '   ' → logprob: -8.305082321166992
    4. ' ' → logprob: -10.430082321166992
    5. '@' → logprob: -10.680082321166992
    6. 'from' → logprob: -10.805082321166992
    7. '       ' → logprob: -12.305082321166992
    8. '  ' → logprob: -12.680082321166992
    9. 'import' → logprob: -12.680082321166992
    10. '    ' → logprob: -13.180082321166992

Token 266: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0055766636505723
    2. ' def' → logprob: -5.2555766105651855
    3. '__' → logprob: -8.880577087402344
    4. ' _' → logprob: -9.505577087402344
    5. 'def' → logprob: -9.880577087402344
    6. ' solve' → logprob: -10.255577087402344
    7. '_' → logprob: -10.630577087402344
    8. ' init' → logprob: -11.630577087402344
    9. ' ' → logprob: -12.255577087402344
    10. ' find' → logprob: -13.380577087402344

Token 267: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.5776860184123507e-06
    2. 'call' → logprob: -13.87500286102295
    3. 'new' → logprob: -14.25000286102295
    4. 'def' → logprob: -14.50000286102295
    5. ' init' → logprob: -15.75000286102295
    6. 'inite' → logprob: -16.000001907348633
    7. '   ' → logprob: -17.000001907348633
    8. 'next' → logprob: -17.250001907348633
    9. '(init' → logprob: -17.375001907348633
    10. 'int' → logprob: -17.625001907348633

Token 268: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00042268994729965925
    2. '(self' → logprob: -7.875422477722168
    3. '__' → logprob: -10.125422477722168
    4. '_(' → logprob: -13.625422477722168
    5. '__(
' → logprob: -13.875422477722168
    6. '__((' → logprob: -15.750422477722168
    7. '(' → logprob: -16.500423431396484
    8. 'self' → logprob: -16.875423431396484
    9. ' (' → logprob: -17.625423431396484
    10. '       ' → logprob: -18.125423431396484

Token 269: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.93710636976175e-05
    2. ' self' → logprob: -9.500099182128906
    3. ')' → logprob: -11.500099182128906
    4. ',' → logprob: -11.625099182128906
    5. '       ' → logprob: -13.250099182128906
    6. '0' → logprob: -13.625099182128906
    7. '           ' → logprob: -14.250099182128906
    8. '):
' → logprob: -14.375099182128906
    9. '
' → logprob: -14.625099182128906
    10. '   ' → logprob: -15.875099182128906

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. 'self' → logprob: -10.75002670288086
    3. ' ,' → logprob: -12.25002670288086
    4. ',self' → logprob: -14.62502670288086
    5. '__,' → logprob: -18.25002670288086
    6. '   ' → logprob: -18.37502670288086
    7. '

' → logprob: -19.00002670288086
    8. ',
' → logprob: -19.12502670288086
    9. '‌,' → logprob: -19.37502670288086
    10. '(self' → logprob: -19.50002670288086

Token 271: ' weights' (ID: 28460)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.5876116752624512
    2. 'stack' → logprob: -0.9626116752624512
    3. ' blocks' → logprob: -3.337611675262451
    4. ' stack' → logprob: -4.212611675262451
    5. 'weights' → logprob: -5.087611675262451
    6. 'initial' → logprob: -5.712611675262451
    7. 'self' → logprob: -6.962611675262451
    8. 'block' → logprob: -7.712611675262451
    9. ' initial' → logprob: -7.837611675262451
    10. ' stacks' → logprob: -7.962611675262451

Token 272: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026899512857198715
    2. ':' → logprob: -4.026899337768555
    3. '):
' → logprob: -4.776899337768555
    4. ' ):' → logprob: -8.526899337768555
    5. ')' → logprob: -10.276899337768555
    6. ':list' → logprob: -11.026899337768555
    7. '   ' → logprob: -11.276899337768555
    8. '):
' → logprob: -11.776899337768555
    9. ' :' → logprob: -12.401899337768555
    10. ',' → logprob: -12.401899337768555

Token 273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00968290213495493
    2. '       ' → logprob: -5.134683132171631
    3. ',' → logprob: -6.634683132171631
    4. 'self' → logprob: -7.134683132171631
    5. ' self' → logprob: -7.134683132171631
    6. '	       ' → logprob: -8.509682655334473
    7. '               ' → logprob: -8.634682655334473
    8. ':' → logprob: -9.134682655334473
    9. '   ' → logprob: -9.759682655334473
    10. '(self' → logprob: -9.884682655334473

Token 274: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.028487490490078926
    2. ' self' → logprob: -3.65348744392395
    3. '           ' → logprob: -6.153487682342529
    4. '       ' → logprob: -9.903487205505371
    5. '   ' → logprob: -12.028487205505371
    6. ' ' → logprob: -14.278487205505371
    7. '	self' → logprob: -14.653487205505371
    8. 'super' → logprob: -15.028487205505371
    9. 'n' → logprob: -15.153487205505371
    10. '#' → logprob: -15.528487205505371

Token 275: '.original' (ID: 65193)
  Prédit: '.weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.weights' → logprob: -0.08431410789489746
    2. '.blocks' → logprob: -3.0843141078948975
    3. ' .' → logprob: -3.5843141078948975
    4. '.' → logprob: -5.084314346313477
    5. '.stack' → logprob: -7.584314346313477
    6. '           ' → logprob: -9.084314346313477
    7. 'weights' → logprob: -9.334314346313477
    8. '       ' → logprob: -9.334314346313477
    9. '.we' → logprob: -9.459314346313477
    10. '.initial' → logprob: -9.959314346313477

Token 276: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.15074197947978973
    2. ' =' → logprob: -2.7757420539855957
    3. '_blocks' → logprob: -3.4007420539855957
    4. '_stack' → logprob: -3.6507420539855957
    5. '=' → logprob: -4.275742053985596
    6. 'weights' → logprob: -6.400742053985596
    7. '_positions' → logprob: -6.900742053985596
    8. '   ' → logprob: -8.150741577148438
    9. '.weights' → logprob: -8.400741577148438
    10. 'Weights' → logprob: -8.525741577148438

Token 277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740826487541199
    2. '=' → logprob: -0.9740826487541199
    3. ')' → logprob: -12.974082946777344
    4. ' =[' → logprob: -13.599082946777344
    5. ' ' → logprob: -14.474082946777344
    6. ' )' → logprob: -14.599082946777344
    7. '    ' → logprob: -15.349082946777344
    8. '   ' → logprob: -15.349082946777344
    9. '=[]' → logprob: -15.724082946777344
    10. '[' → logprob: -16.474082946777344

Token 278: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.04861303046345711
    2. ' weights' → logprob: -3.0486130714416504
    3. '[' → logprob: -11.298612594604492
    4. 'list' → logprob: -11.798612594604492
    5. ' list' → logprob: -13.173612594604492
    6. 'weight' → logprob: -13.798612594604492
    7. ' [' → logprob: -14.173612594604492
    8. '   ' → logprob: -14.673612594604492
    9. '(weights' → logprob: -14.673612594604492
    10. 'weig' → logprob: -14.673612594604492

Token 279: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022344857454299927
    2. '       ' → logprob: -4.272345066070557
    3. '
' → logprob: -5.647345066070557
    4. '<|end|>' → logprob: -5.647345066070557
    5. 'self' → logprob: -8.147344589233398
    6. '   ' → logprob: -8.897344589233398
    7. '<|end|>' → logprob: -9.397344589233398
    8. '        
' → logprob: -9.397344589233398
    9. '	       ' → logprob: -9.897344589233398
    10. ',' → logprob: -10.022344589233398

Token 281: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00020544764993246645
    2. '           ' → logprob: -8.875205039978027
    3. 'from' → logprob: -10.500205039978027
    4. ' self' → logprob: -11.250205039978027
    5. '       ' → logprob: -11.500205039978027
    6. 'n' → logprob: -11.625205039978027
    7. '#' → logprob: -12.625205039978027
    8. 'initial' → logprob: -13.750205039978027
    9. '0' → logprob: -14.625205039978027
    10. '   ' → logprob: -14.750205039978027

Token 282: '.n' (ID: 1835)
  Prédit: '.memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.3551955223083496
    2. '.stack' → logprob: -1.9801955223083496
    3. '.initial' → logprob: -2.8551955223083496
    4. '.best' → logprob: -3.9801955223083496
    5. '.blocks' → logprob: -3.9801955223083496
    6. '.cache' → logprob: -4.23019552230835
    7. '.results' → logprob: -4.35519552230835
    8. '.n' → logprob: -4.48019552230835
    9. '.' → logprob: -5.10519552230835
    10. '.result' → logprob: -5.60519552230835

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760064721107483
    2. ' =' → logprob: -0.8260064721107483
    3. '   ' → logprob: -10.076006889343262
    4. '    ' → logprob: -11.701006889343262
    5. '       ' → logprob: -12.201006889343262
    6. '        ' → logprob: -13.076006889343262
    7. 'um' → logprob: -13.326006889343262
    8. ' ' → logprob: -13.451006889343262
    9. '=int' → logprob: -13.701006889343262
    10. '           ' → logprob: -14.076006889343262

Token 284: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0031777136027812958
    2. ' len' → logprob: -5.753177642822266
    3. '(len' → logprob: -17.628177642822266
    4. '=len' → logprob: -18.378177642822266
    5. '[len' → logprob: -18.503177642822266
    6. '   ' → logprob: -19.753177642822266
    7. '	len' → logprob: -19.753177642822266
    8. '           ' → logprob: -21.128177642822266
    9. ',len' → logprob: -21.253177642822266
    10. '<len' → logprob: -21.378177642822266

Token 285: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.00013154871703591198
    2. '(self' → logprob: -9.000131607055664
    3. '(' → logprob: -12.125131607055664
    4. 'weights' → logprob: -13.125131607055664
    5. '(weight' → logprob: -15.000131607055664
    6. 'self' → logprob: -15.375131607055664
    7. '(w' → logprob: -16.250131607055664
    8. ' weights' → logprob: -17.500131607055664
    9. '(words' → logprob: -18.625131607055664
    10. '.weights' → logprob: -18.750131607055664

Token 286: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001105762057704851
    2. '<|end|>' → logprob: -9.875110626220703
    3. ' )' → logprob: -10.250110626220703
    4. ')
' → logprob: -11.125110626220703
    5. '       ' → logprob: -12.375110626220703
    6. '<|end|>' → logprob: -13.125110626220703
    7. '           ' → logprob: -13.500110626220703
    8. '
' → logprob: -14.625110626220703
    9. '   ' → logprob: -15.500110626220703
    10. '),' → logprob: -16.125110626220703

Token 287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038987014442682266
    2. '       ' → logprob: -3.413986921310425
    3. '<|end|>' → logprob: -5.413987159729004
    4. '
' → logprob: -7.413987159729004
    5. '   ' → logprob: -9.538987159729004
    6. '<|end|>' → logprob: -9.663987159729004
    7. '        
' → logprob: -10.038987159729004
    8. ' self' → logprob: -10.913987159729004
    9. 'self' → logprob: -10.913987159729004
    10. '```' → logprob: -11.913987159729004

Token 288: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0018968674121424556
    2. 'from' → logprob: -6.376896858215332
    3. '           ' → logprob: -9.376896858215332
    4. '       ' → logprob: -10.001896858215332
    5. '#' → logprob: -10.626896858215332
    6. 'def' → logprob: -11.126896858215332
    7. ' self' → logprob: -11.376896858215332
    8. 'initial' → logprob: -11.751896858215332
    9. 'import' → logprob: -12.751896858215332
    10. '   ' → logprob: -13.751896858215332

Token 289: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.4489525258541107
    2. '.results' → logprob: -2.6989524364471436
    3. '.stack' → logprob: -2.9489524364471436
    4. '.dp' → logprob: -3.3239524364471436
    5. '.best' → logprob: -3.3239524364471436
    6. '.f' → logprob: -3.4489524364471436
    7. '.result' → logprob: -3.4489524364471436
    8. '.' → logprob: -3.5739524364471436
    9. '.cache' → logprob: -4.448952674865723
    10. '.initial' → logprob: -4.573952674865723

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269591897726059
    2. '=' → logprob: -2.1269590854644775
    3. '={}' → logprob: -10.501958847045898
    4. ' ' → logprob: -12.876958847045898
    5. ' ={' → logprob: -15.501958847045898
    6. '=[]' → logprob: -15.751958847045898
    7. '={' → logprob: -16.1269588470459
    8. '=dict' → logprob: -16.5019588470459
    9. '   ' → logprob: -16.6269588470459
    10. ',' → logprob: -16.7519588470459

Token 291: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -4.370294846012257e-05
    2. ' {}' → logprob: -10.250043869018555
    3. 'dict' → logprob: -11.750043869018555
    4. '{}
' → logprob: -15.375043869018555
    5. ' dict' → logprob: -15.500043869018555
    6. '{' → logprob: -18.125043869018555
    7. '={}' → logprob: -18.125043869018555
    8. '{}

' → logprob: -18.875043869018555
    9. '{})' → logprob: -18.875043869018555
    10. '{},' → logprob: -19.125043869018555

Token 292: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.546478935983032e-05
    2. '()
' → logprob: -10.875025749206543
    3. '{}' → logprob: -12.625025749206543
    4. '()

' → logprob: -14.000025749206543
    5. '()}' → logprob: -14.750025749206543
    6. '()>' → logprob: -15.000025749206543
    7. '()\' → logprob: -15.500025749206543
    8. '()<' → logprob: -15.625025749206543
    9. '())' → logprob: -15.750025749206543
    10. '{' → logprob: -15.875025749206543

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11445209383964539
    2. 'def' → logprob: -3.1144521236419678
    3. '   ' → logprob: -3.2394521236419678
    4. '        
' → logprob: -4.114451885223389
    5. '<|end|>' → logprob: -5.364451885223389
    6. '    
' → logprob: -5.989451885223389
    7. '
' → logprob: -7.864451885223389
    8. '<|end|>' → logprob: -8.239452362060547
    9. ' def' → logprob: -9.364452362060547
    10. '```' → logprob: -9.364452362060547

Token 294: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01430558878928423
    2. '       ' → logprob: -4.389305591583252
    3. '   ' → logprob: -6.389305591583252
    4. ' def' → logprob: -9.139305114746094
    5. '
' → logprob: -12.764305114746094
    6. ' ' → logprob: -13.514305114746094
    7. '	def' → logprob: -13.514305114746094
    8. ')' → logprob: -14.264305114746094
    9. '        
' → logprob: -14.764305114746094
    10. '```' → logprob: -15.139305114746094

Token 295: ' _' (ID: 1175)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.2699107229709625
    2. ' can' → logprob: -1.6449106931686401
    3. 'solve' → logprob: -3.5199108123779297
    4. 'dfs' → logprob: -4.89491081237793
    5. ' solve' → logprob: -5.64491081237793
    6. ' dfs' → logprob: -6.26991081237793
    7. '_can' → logprob: -7.89491081237793
    8. 'dp' → logprob: -8.51991081237793
    9. 'max' → logprob: -9.14491081237793
    10. 'def' → logprob: -9.51991081237793

Token 296: 'encode' (ID: 12949)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.13963225483894348
    2. 'dfs' → logprob: -2.264632225036621
    3. 'solve' → logprob: -4.014632225036621
    4. '_can' → logprob: -5.514632225036621
    5. 'dp' → logprob: -6.389632225036621
    6. 'search' → logprob: -6.514632225036621
    7. 'remove' → logprob: -7.389632225036621
    8. 'try' → logprob: -8.889632225036621
    9. 'max' → logprob: -9.389632225036621
    10. 'is' → logprob: -9.764632225036621

Token 297: '_state' (ID: 9479)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.27746567130088806
    2. 'state' → logprob: -1.9024657011032104
    3. 'self' → logprob: -3.027465581893921
    4. '_state' → logprob: -3.652465581893921
    5. '_stack' → logprob: -4.5274658203125
    6. '(' → logprob: -5.5274658203125
    7. 'stack' → logprob: -6.2774658203125
    8. 'def' → logprob: -8.0274658203125
    9. '_blocks' → logprob: -8.0274658203125
    10. '_states' → logprob: -8.4024658203125

Token 298: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015106932260096073
    2. '(' → logprob: -6.5015106201171875
    3. ' (' → logprob: -11.876510620117188
    4. '(
' → logprob: -14.001510620117188
    5. '(s' → logprob: -15.001510620117188
    6. 'self' → logprob: -16.876510620117188
    7. '(se' → logprob: -17.626510620117188
    8. '   ' → logprob: -17.626510620117188
    9. '(block' → logprob: -18.126510620117188
    10. '(sel' → logprob: -18.126510620117188

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06014285981655121
    2. ' ,' → logprob: -3.560142755508423
    3. '):' → logprob: -3.810142755508423
    4. 'self' → logprob: -5.310142993927002
    5. '):
' → logprob: -6.810142993927002
    6. '(self' → logprob: -7.060142993927002
    7. ' ):' → logprob: -7.685142993927002
    8. ')' → logprob: -8.560142517089844
    9. ' )' → logprob: -10.310142517089844
    10. '       ' → logprob: -10.310142517089844

Token 300: ' stack' (ID: 10825)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.5370237827301025
    2. 'self' → logprob: -0.9120237827301025
    3. 'weights' → logprob: -4.912023544311523
    4. 'stack' → logprob: -5.912023544311523
    5. 'positions' → logprob: -6.787023544311523
    6. ' blocks' → logprob: -7.162023544311523
    7. 'block' → logprob: -7.537023544311523
    8. '   ' → logprob: -8.412023544311523
    9. ' self' → logprob: -8.537023544311523
    10. 'tuple' → logprob: -9.037023544311523

Token 301: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003905165009200573
    2. '):
' → logprob: -5.628905296325684
    3. ':' → logprob: -8.503905296325684
    4. 'self' → logprob: -9.628905296325684
    5. ' ):' → logprob: -11.378905296325684
    6. '_blocks' → logprob: -11.753905296325684
    7. '   ' → logprob: -12.128905296325684
    8. ')' → logprob: -12.378905296325684
    9. '       ' → logprob: -13.503905296325684
    10. ' ' → logprob: -13.503905296325684

Token 302: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11034297943115234
    2. '       ' → logprob: -3.2353429794311523
    3. '           ' → logprob: -4.110342979431152
    4. '(' → logprob: -4.485342979431152
    5. '[:]' → logprob: -4.610342979431152
    6. ':
' → logprob: -4.985342979431152
    7. '():' → logprob: -5.610342979431152
    8. ':return' → logprob: -5.610342979431152
    9. '):' → logprob: -6.485342979431152
    10. '':' → logprob: -6.610342979431152

Token 303: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012758025899529457
    2. ' return' → logprob: -4.887758255004883
    3. '           ' → logprob: -5.387758255004883
    4. 'tuple' → logprob: -8.012758255004883
    5. 'weights' → logprob: -9.637758255004883
    6. '       ' → logprob: -9.762758255004883
    7. '#' (adapté à ' #') → logprob: -10.012758255004883
    8. 'positions' → logprob: -11.012758255004883
    9. 'key' → logprob: -11.137758255004883
    10. ' tuple' → logprob: -11.387758255004883

Token 304: ' Encode' (ID: 117866)
  Prédit: '','.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '','.' → logprob: -0.4382561147212982
    2. '",".' → logprob: -1.6882561445236206
    3. 'return' → logprob: -2.063256025314331
    4. '''.' → logprob: -3.938256025314331
    5. 'tuple' → logprob: -4.06325626373291
    6. ' return' → logprob: -6.18825626373291
    7. '"' → logprob: -6.18825626373291
    8. ''' → logprob: -7.93825626373291
    9. ' tuple' → logprob: -8.43825626373291
    10. '','' → logprob: -8.56325626373291

Token 305: ' the' (ID: 290)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.11509320884943008
    2. 'positions' → logprob: -3.490093231201172
    3. ' tuple' → logprob: -3.615093231201172
    4. 'return' → logprob: -3.990093231201172
    5. 'state' → logprob: -4.240093231201172
    6. 'weights' → logprob: -5.490093231201172
    7. '(tuple' → logprob: -5.865093231201172
    8. '",".' → logprob: -6.365093231201172
    9. 'pos' → logprob: -6.615093231201172
    10. '','.' → logprob: -6.615093231201172

Token 306: ' state' (ID: 2608)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.032119713723659515
    2. '",".' → logprob: -4.2821197509765625
    3. '','.' → logprob: -4.2821197509765625
    4. ' tuple' → logprob: -6.5321197509765625
    5. 'positions' → logprob: -7.2821197509765625
    6. '"' → logprob: -7.4071197509765625
    7. 'len' → logprob: -7.6571197509765625
    8. '''.' → logprob: -8.407119750976562
    9. ''' → logprob: -8.907119750976562
    10. '(tuple' → logprob: -9.282119750976562

Token 307: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.22457543015480042
    2. ' =' → logprob: -1.849575400352478
    3. '           ' → logprob: -3.9745755195617676
    4. ':' → logprob: -4.974575519561768
    5. 'as' → logprob: -5.599575519561768
    6. '(self' → logprob: -5.724575519561768
    7. ' into' → logprob: -5.724575519561768
    8. '       ' → logprob: -5.974575519561768
    9. '=' → logprob: -6.349575519561768
    10. 'tokens' → logprob: -7.474575519561768

Token 308: ' a' (ID: 261)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.30102598667144775
    2. '','.' → logprob: -2.051025867462158
    3. '",".' → logprob: -2.051025867462158
    4. '''.' → logprob: -6.176025867462158
    5. ' tuple' → logprob: -8.301026344299316
    6. '"' → logprob: -8.801026344299316
    7. '(tuple' → logprob: -9.301026344299316
    8. ''' → logprob: -10.301026344299316
    9. '','' → logprob: -10.301026344299316
    10. '',' → logprob: -10.926026344299316

Token 309: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.007051372434943914
    2. '','.' → logprob: -5.132051467895508
    3. '",".' → logprob: -7.507051467895508
    4. '''.' → logprob: -7.882051467895508
    5. ' tuple' → logprob: -9.132051467895508
    6. 'string' → logprob: -10.507051467895508
    7. ''-' → logprob: -11.007051467895508
    8. '','' → logprob: -11.382051467895508
    9. '"' → logprob: -11.757051467895508
    10. '"-' → logprob: -12.007051467895508

Token 310: ' of' (ID: 328)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.21007059514522552
    2. '([' → logprob: -2.3350706100463867
    3. '(' → logprob: -2.9600706100463867
    4. '(block' → logprob: -3.7100706100463867
    5. '(
' → logprob: -4.585070610046387
    6. '((' → logprob: -6.585070610046387
    7. '(stack' → logprob: -6.585070610046387
    8. '(token' → logprob: -6.710070610046387
    9. '(sorted' → logprob: -7.085070610046387
    10. '(s' → logprob: -8.210070610046387

Token 311: ' weights' (ID: 28460)
  Prédit: 'blk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blk' → logprob: -0.4478859007358551
    2. 'block' → logprob: -1.0728858709335327
    3. 'b' → logprob: -4.572885990142822
    4. ' blk' → logprob: -5.572885990142822
    5. '(block' → logprob: -6.822885990142822
    6. '[' → logprob: -6.947885990142822
    7. 'w' → logprob: -7.197885990142822
    8. 'bw' → logprob: -7.697885990142822
    9. ' block' → logprob: -7.822885990142822
    10. 'weight' → logprob: -7.822885990142822

Token 312: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16731742024421692
    2. '(
' → logprob: -2.9173173904418945
    3. '           ' → logprob: -3.2923173904418945
    4. '=' → logprob: -4.0423173904418945
    5. '(tuple' → logprob: -4.0423173904418945
    6. ',' → logprob: -5.0423173904418945
    7. ':' → logprob: -5.0423173904418945
    8. ' =' → logprob: -5.0423173904418945
    9. '       ' → logprob: -6.1673173904418945
    10. ' (' → logprob: -6.5423173904418945

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18696056306362152
    2. '(' → logprob: -2.061960458755493
    3. ':' → logprob: -4.061960697174072
    4. '=' → logprob: -5.186960697174072
    5. ',' → logprob: -5.311960697174072
    6. '       ' → logprob: -5.561960697174072
    7. '(
' → logprob: -5.561960697174072
    8. ' =' → logprob: -6.561960697174072
    9. '[' → logprob: -6.686960697174072
    10. ' (' → logprob: -6.811960697174072

Token 314: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47115230560302734
    2. 'tuple' → logprob: -1.2211523056030273
    3. ' tuple' → logprob: -2.9711523056030273
    4. '(tuple' → logprob: -4.096152305603027
    5. ' return' → logprob: -4.471152305603027
    6. '           ' → logprob: -6.971152305603027
    7. '   ' → logprob: -7.721152305603027
    8. '       ' → logprob: -9.846152305603027
    9. '(
' → logprob: -9.971152305603027
    10. '(' → logprob: -11.596152305603027

Token 315: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.014364108443260193
    2. ' tuple' → logprob: -4.264364242553711
    3. '(tuple' → logprob: -8.514364242553711
    4. '   ' → logprob: -17.51436424255371
    5. '_tuple' → logprob: -19.51436424255371
    6. 'uple' → logprob: -19.88936424255371
    7. 'tu' → logprob: -21.01436424255371
    8. ' ' → logprob: -21.63936424255371
    9. '  ' → logprob: -22.51436424255371
    10. 'Tuple' → logprob: -22.63936424255371

Token 316: '(' (ID: 7)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.39894017577171326
    2. '(' → logprob: -1.1489402055740356
    3. 'blk' → logprob: -5.148940086364746
    4. '(b' → logprob: -5.398940086364746
    5. '([' → logprob: -6.523940086364746
    6. 'block' → logprob: -9.398940086364746
    7. ' blk' → logprob: -9.523940086364746
    8. '(bl' → logprob: -10.523940086364746
    9. 'b' → logprob: -11.898940086364746
    10. '_blk' → logprob: -12.273940086364746

Token 317: 'blk' (ID: 70462)
  Prédit: 'blk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blk' → logprob: -0.0028326958417892456
    2. 'block' → logprob: -6.002832889556885
    3. 'b' → logprob: -8.002832412719727
    4. ' blk' → logprob: -10.752832412719727
    5. '[' → logprob: -14.002832412719727
    6. 'bk' → logprob: -16.502832412719727
    7. 'bl' → logprob: -16.752832412719727
    8. '_blk' → logprob: -16.752832412719727
    9. '[b' → logprob: -16.877832412719727
    10. 'bloc' → logprob: -17.377832412719727

Token 318: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -0.00020830852736253291
    2. '.block' → logprob: -8.500207901000977
    3. '.weights' → logprob: -12.625207901000977
    4. '.w' → logprob: -15.000207901000977
    5. '.we' → logprob: -15.500207901000977
    6. 'weight' → logprob: -15.750207901000977
    7. ' .' → logprob: -15.750207901000977
    8. '.position' → logprob: -16.000207901000977
    9. '.lock' → logprob: -16.125207901000977
    10. '.Weight' → logprob: -16.375207901000977

Token 319: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03804631531238556
    2. 'for' → logprob: -3.288046360015869
    3. ' ' → logprob: -13.163045883178711
    4. ')' → logprob: -14.038045883178711
    5. '            ' → logprob: -14.288045883178711
    6. '	for' → logprob: -14.788045883178711
    7. '           ' → logprob: -15.163045883178711
    8. '        ' → logprob: -15.663045883178711
    9. '    ' → logprob: -16.03804588317871
    10. '   ' → logprob: -16.28804588317871

Token 320: ' blk' (ID: 99453)
  Prédit: ' blk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blk' → logprob: -0.048590321093797684
    2. 'blk' → logprob: -3.0485904216766357
    3. '_blk' → logprob: -13.673590660095215
    4. ' bloc' → logprob: -14.673590660095215
    5. 'Blk' → logprob: -14.673590660095215
    6. ' ' → logprob: -15.798590660095215
    7. ' bl' → logprob: -15.798590660095215
    8. 'bloc' → logprob: -16.0485897064209
    9. ' stk' → logprob: -16.4235897064209
    10. ' blok' → logprob: -16.5485897064209

Token 321: ' in' (ID: 306)
  Prédit: ' blk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blk' → logprob: -0.47340822219848633
    2. 'blk' → logprob: -1.5984082221984863
    3. ' stack' → logprob: -1.9734082221984863
    4. 'stack' → logprob: -3.4734082221984863
    5. ' in' → logprob: -5.473408222198486
    6. 'in' → logprob: -8.473407745361328
    7. ' block' → logprob: -9.223407745361328
    8. ' bloc' → logprob: -9.223407745361328
    9. 'block' → logprob: -9.473407745361328
    10. ' ' → logprob: -9.598407745361328

Token 322: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.048592593520879745
    2. ' stack' → logprob: -3.0485925674438477
    3. 'self' → logprob: -13.298592567443848
    4. '	stack' → logprob: -13.798592567443848
    5. '(stack' → logprob: -14.173592567443848
    6. ' ' → logprob: -14.423592567443848
    7. '   ' → logprob: -14.923592567443848
    8. '.stack' → logprob: -15.548592567443848
    9. ')' → logprob: -15.798592567443848
    10. 'block' → logprob: -16.298593521118164

Token 323: '.blocks' (ID: 104609)
  Prédit: '.blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.blocks' → logprob: -7.350386295001954e-05
    2. ')' → logprob: -10.125073432922363
    3. ' .' → logprob: -10.375073432922363
    4. '.' → logprob: -13.625073432922363
    5. ' )' → logprob: -14.375073432922363
    6. '.block' → logprob: -16.00007438659668
    7. '.bl' → logprob: -16.25007438659668
    8. ').' → logprob: -16.37507438659668
    9. '   ' → logprob: -17.50007438659668
    10. '.b' → logprob: -17.62507438659668

Token 324: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006786000449210405
    2. '           ' → logprob: -7.500678539276123
    3. ' )' → logprob: -9.250679016113281
    4. '       ' → logprob: -10.500679016113281
    5. ')
' → logprob: -14.000679016113281
    6. '   ' → logprob: -15.000679016113281
    7. '())' → logprob: -15.625679016113281
    8. '               ' → logprob: -16.25067901611328
    9. '),' → logprob: -16.37567901611328
    10. ')`' → logprob: -16.37567901611328

Token 325: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25323134660720825
    2. '       ' → logprob: -1.5032312870025635
    3. '   ' → logprob: -6.878231525421143
    4. ' def' → logprob: -8.753231048583984
    5. '
' → logprob: -9.378231048583984
    6. '        
' → logprob: -10.878231048583984
    7. '```' → logprob: -12.753231048583984
    8. '	def' → logprob: -12.878231048583984
    9. ' ' → logprob: -13.503231048583984
    10. '    
' → logprob: -13.753231048583984

Token 327: ' max' (ID: 2999)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3137631118297577
    2. ' def' → logprob: -1.31376314163208
    3. 'can' → logprob: -9.063762664794922
    4. ' can' → logprob: -9.313762664794922
    5. 'solve' → logprob: -9.813762664794922
    6. ' ' → logprob: -9.938762664794922
    7. ' dfs' → logprob: -9.938762664794922
    8. ' solve' → logprob: -10.063762664794922
    9. 'dfs' → logprob: -10.313762664794922
    10. 'max' → logprob: -12.063762664794922

Token 328: '_removed' (ID: 173812)
  Prédit: '_remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.22482755780220032
    2. '_rem' → logprob: -1.849827527999878
    3. '_blocks' → logprob: -4.224827766418457
    4. '_removed' → logprob: -4.224827766418457
    5. '_score' → logprob: -4.599827766418457
    6. '_sequence' → logprob: -6.599827766418457
    7. '_stack' → logprob: -7.099827766418457
    8. '_pairs' → logprob: -7.974827766418457
    9. '_remaining' → logprob: -8.099827766418457
    10. '_length' → logprob: -8.349827766418457

Token 329: '_blocks' (ID: 60244)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13274812698364258
    2. '_pairs' → logprob: -2.2577481269836426
    3. '_pair' → logprob: -4.882748126983643
    4. '_blocks' → logprob: -4.882748126983643
    5. 'self' → logprob: -6.382748126983643
    6. '(' → logprob: -6.632748126983643
    7. '_count' → logprob: -7.507748126983643
    8. '_self' → logprob: -7.507748126983643
    9. 'pairs' → logprob: -9.257747650146484
    10. '_' → logprob: -9.382747650146484

Token 330: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.24179228907451e-05
    2. '(' → logprob: -9.750061988830566
    3. ' (' → logprob: -12.500061988830566
    4. 'self' → logprob: -15.875061988830566
    5. '(
' → logprob: -16.500062942504883
    6. '   ' → logprob: -17.250062942504883
    7. '       ' → logprob: -18.000062942504883
    8. ' self' → logprob: -18.250062942504883
    9. '(s' → logprob: -18.375062942504883
    10. '(Self' → logprob: -18.375062942504883

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6177647709846497
    2. '):' → logprob: -0.8677647709846497
    3. ' ):' → logprob: -3.742764711380005
    4. 'self' → logprob: -4.992764949798584
    5. ' ,' → logprob: -5.117764949798584
    6. '):
' → logprob: -6.242764949798584
    7. ')' → logprob: -6.992764949798584
    8. '(self' → logprob: -7.492764949798584
    9. ' )' → logprob: -8.242764472961426
    10. '   ' → logprob: -8.992764472961426

Token 332: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.4462886154651642
    2. ' stack' → logprob: -1.0712885856628418
    3. 'self' → logprob: -4.321288585662842
    4. ' self' → logprob: -5.696288585662842
    5. ' current' → logprob: -8.1962890625
    6. ')' → logprob: -8.8212890625
    7. 'current' → logprob: -8.9462890625
    8. '   ' → logprob: -9.1962890625
    9. '       ' → logprob: -10.1962890625
    10. ' stacks' → logprob: -10.8212890625

Token 333: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.623244553338736e-05
    2. '):
' → logprob: -10.000065803527832
    3. ':' → logprob: -11.625065803527832
    4. ')' → logprob: -12.125065803527832
    5. ' ):' → logprob: -12.625065803527832
    6. ',' → logprob: -13.000065803527832
    7. '   ' → logprob: -14.500065803527832
    8. '):
' → logprob: -15.750065803527832
    9. '       ' → logprob: -15.875065803527832
    10. '():' → logprob: -16.87506675720215

Token 334: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36704540252685547
    2. '       ' → logprob: -1.3670454025268555
    3. ':' → logprob: -3.6170454025268555
    4. '   ' → logprob: -5.1170454025268555
    5. '<|end|>' → logprob: -5.1170454025268555
    6. ' if' → logprob: -6.6170454025268555
    7. '        ' → logprob: -6.7420454025268555
    8. ' :' → logprob: -6.7420454025268555
    9. '```' → logprob: -6.7420454025268555
    10. ',' → logprob: -6.7420454025268555

Token 335: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.8012474179267883
    2. 'if' → logprob: -1.3012473583221436
    3. '           ' → logprob: -2.0512473583221436
    4. 'key' → logprob: -2.3012473583221436
    5. ' if' → logprob: -3.4262473583221436
    6. ' key' → logprob: -4.801247596740723
    7. '       ' → logprob: -5.176247596740723
    8. ' state' → logprob: -6.051247596740723
    9. '   ' → logprob: -7.051247596740723
    10. 'encoded' → logprob: -7.426247596740723

Token 336: '_key' (ID: 6724)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10699387639760971
    2. '=' → logprob: -2.3569939136505127
    3. '_key' → logprob: -5.231993675231934
    4. ')' → logprob: -7.356993675231934
    5. '_state' → logprob: -7.856993675231934
    6. '_' → logprob: -8.356993675231934
    7. '_encoded' → logprob: -9.731993675231934
    8. 'key' → logprob: -11.106993675231934
    9. '_tuple' → logprob: -11.231993675231934
    10. ')=' → logprob: -11.731993675231934

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804194927215576
    2. '=' → logprob: -3.2880420684814453
    3. ' =
' → logprob: -15.413042068481445
    4. ' ' → logprob: -15.538042068481445
    5. ')' → logprob: -16.288042068481445
    6. '    ' → logprob: -17.288042068481445
    7. ' =)' → logprob: -17.538042068481445
    8. ' =
' → logprob: -18.413042068481445
    9. '=
' → logprob: -19.038042068481445
    10. '   ' → logprob: -19.163042068481445

Token 338: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005536287208087742
    2. ' self' → logprob: -7.500553607940674
    3. '(self' → logprob: -14.375554084777832
    4. '           ' → logprob: -17.125553131103516
    5. '   ' → logprob: -19.125553131103516
    6. '	self' → logprob: -19.750553131103516
    7. '       ' → logprob: -19.750553131103516
    8. 'tuple' → logprob: -20.000553131103516
    9. '[self' → logprob: -20.500553131103516
    10. ' ' → logprob: -21.000553131103516

Token 339: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.008678274229168892
    2. '_encode' → logprob: -4.758678436279297
    3. '.encode' → logprob: -10.008678436279297
    4. '_encoded' → logprob: -12.008678436279297
    5. '.Encode' → logprob: -12.133678436279297
    6. '.' → logprob: -12.258678436279297
    7. '.\' → logprob: -14.633678436279297
    8. '_encoder' → logprob: -15.008678436279297
    9. '_encoding' → logprob: -15.133678436279297
    10. ' _' → logprob: -15.508678436279297

Token 340: 'encode' (ID: 12949)
  Prédit: 'encode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encode' → logprob: -2.1008713702030946e-06
    2. '_encode' → logprob: -13.750001907348633
    3. ' encode' → logprob: -14.125001907348633
    4. '.encode' → logprob: -15.875001907348633
    5. 'code' → logprob: -16.875001907348633
    6. 'decode' → logprob: -18.875001907348633
    7. '
' → logprob: -19.125001907348633
    8. 'encoded' → logprob: -19.250001907348633
    9. '```' → logprob: -19.625001907348633
    10. 'enc' → logprob: -19.875001907348633

Token 341: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0003977800370194018
    2. 'state' → logprob: -8.000397682189941
    3. '_' → logprob: -10.125397682189941
    4. '(state' → logprob: -11.000397682189941
    5. '_stack' → logprob: -12.875397682189941
    6. ' state' → logprob: -14.875397682189941
    7. '(stack' → logprob: -15.125397682189941
    8. '_stat' → logprob: -15.250397682189941
    9. '_State' → logprob: -15.375397682189941
    10. '(' → logprob: -15.625397682189941

Token 342: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.0015090317465364933
    2. '(' → logprob: -6.501509189605713
    3. '(st' → logprob: -12.751508712768555
    4. '(
' → logprob: -13.251508712768555
    5. ')' → logprob: -14.376508712768555
    6. 'stack' → logprob: -14.501508712768555
    7. '(Stack' → logprob: -14.501508712768555
    8. '(space' → logprob: -16.001508712768555
    9. '(state' → logprob: -16.376508712768555
    10. '(stock' → logprob: -16.626508712768555

Token 343: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003181159496307373
    2. ')
' → logprob: -5.753180980682373
    3. ')
' → logprob: -13.128181457519531
    4. ' )' → logprob: -14.628181457519531
    5. ')`' → logprob: -15.003181457519531
    6. ')

' → logprob: -15.378181457519531
    7. ')`
' → logprob: -15.753181457519531
    8. '):' → logprob: -16.00318145751953
    9. '           ' → logprob: -16.50318145751953
    10. '       ' → logprob: -17.50318145751953

Token 344: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16927701234817505
    2. '<|end|>' → logprob: -2.5442769527435303
    3. '       ' → logprob: -3.0442769527435303
    4. ' if' → logprob: -3.7942769527435303
    5. '<|end|>' → logprob: -5.544277191162109
    6. '        ' → logprob: -7.544277191162109
    7. ' ' → logprob: -7.794277191162109
    8. '   ' → logprob: -7.919277191162109
    9. ')' → logprob: -7.919277191162109
    10. ' =' → logprob: -8.41927719116211

Token 345: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11412469297647476
    2. ' if' → logprob: -2.6141247749328613
    3. '           ' → logprob: -3.3641247749328613
    4. '       ' → logprob: -10.614124298095703
    5. '   ' → logprob: -12.614124298095703
    6. '	if' → logprob: -14.489124298095703
    7. 'If' → logprob: -15.114124298095703
    8. '
' → logprob: -15.614124298095703
    9. '            
' → logprob: -16.114124298095703
    10. '          ' → logprob: -16.614124298095703

Token 346: ' state' (ID: 2608)
  Prédit: ' state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' state' → logprob: -0.47408702969551086
    2. 'state' → logprob: -0.9740869998931885
    3. 'stack' → logprob: -11.72408676147461
    4. ' stack' → logprob: -13.34908676147461
    5. '           ' → logprob: -16.34908676147461
    6. '(state' → logprob: -17.09908676147461
    7. ' len' → logprob: -17.34908676147461
    8. '   ' → logprob: -17.84908676147461
    9. '	state' → logprob: -17.84908676147461
    10. 'self' → logprob: -18.22408676147461

Token 347: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -1.282920129597187e-05
    2. 'key' → logprob: -11.375012397766113
    3. '_' → logprob: -14.375012397766113
    4. '
' → logprob: -15.500012397766113
    5. 'Key' → logprob: -15.500012397766113
    6. '_KEY' → logprob: -15.875012397766113
    7. '_Key' → logprob: -17.25001335144043
    8. '   ' → logprob: -17.62501335144043
    9. 'in' → logprob: -17.62501335144043
    10. 'ey' → logprob: -18.00001335144043

Token 348: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08896052092313766
    2. 'in' → logprob: -2.4639604091644287
    3. ' ' → logprob: -11.588960647583008
    4. ')' → logprob: -12.588960647583008
    5. 'not' → logprob: -13.213960647583008
    6. ' not' → logprob: -13.463960647583008
    7. ':' → logprob: -13.713960647583008
    8. ' is' → logprob: -13.713960647583008
    9. '	in' → logprob: -13.963960647583008
    10. 'In' → logprob: -14.963960647583008

Token 349: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.865583706414327e-05
    2. '           ' → logprob: -9.75009822845459
    3. ' self' → logprob: -10.12509822845459
    4. '(self' → logprob: -16.750099182128906
    5. '       ' → logprob: -16.875099182128906
    6. '
' → logprob: -17.250099182128906
    7. '            
' → logprob: -17.500099182128906
    8. '               ' → logprob: -17.750099182128906
    9. '   ' → logprob: -18.000099182128906
    10. '          ' → logprob: -18.000099182128906

Token 350: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -2.3080716346157715e-05
    2. 'memo' → logprob: -11.125022888183594
    3. '.mem' → logprob: -12.500022888183594
    4. '.' → logprob: -12.875022888183594
    5. '.memory' → logprob: -13.250022888183594
    6. ' .' → logprob: -17.000022888183594
    7. ' memo' → logprob: -17.125022888183594
    8. '.user' → logprob: -18.000022888183594
    9. '.cache' → logprob: -18.250022888183594
    10. '.m' → logprob: -18.250022888183594

Token 351: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030003171414136887
    2. ':
' → logprob: -3.530003070831299
    3. ':return' → logprob: -8.405003547668457
    4. '           ' → logprob: -11.030003547668457
    5. '):
' → logprob: -13.030003547668457
    6. '               ' → logprob: -13.155003547668457
    7. '):' → logprob: -13.280003547668457
    8. ' and' → logprob: -13.530003547668457
    9. ':
' → logprob: -13.530003547668457
    10. ' :' → logprob: -13.905003547668457

Token 352: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.057441890239715576
    2. '           ' → logprob: -2.9324419498443604
    3. 'return' → logprob: -6.307441711425781
    4. ' return' → logprob: -7.432441711425781
    5. ':return' → logprob: -9.807441711425781
    6. '{return' → logprob: -10.307441711425781
    7. '       ' → logprob: -11.057441711425781
    8. ':' → logprob: -11.182441711425781
    9. ':
' → logprob: -12.557441711425781
    10. '<|end|>' → logprob: -12.682441711425781

Token 353: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0035740535240620375
    2. '           ' → logprob: -6.378573894500732
    3. ' return' → logprob: -6.378573894500732
    4. '               ' → logprob: -8.75357437133789
    5. '
' → logprob: -12.00357437133789
    6. '{return' → logprob: -12.50357437133789
    7. '   ' → logprob: -13.75357437133789
    8. '	return' → logprob: -13.75357437133789
    9. ':return' → logprob: -13.75357437133789
    10. '                   ' → logprob: -14.25357437133789

Token 354: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043102685594931245
    2. ' self' → logprob: -7.750431060791016
    3. '0' → logprob: -15.500431060791016
    4. '           ' → logprob: -16.000431060791016
    5. '[self' → logprob: -17.125431060791016
    6. '(self' → logprob: -19.125431060791016
    7. '	self' → logprob: -19.125431060791016
    8. '
' → logprob: -19.625431060791016
    9. '_self' → logprob: -20.625431060791016
    10. '1' → logprob: -21.125431060791016

Token 355: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -5.204720582696609e-05
    2. '.mem' → logprob: -10.625052452087402
    3. '.' → logprob: -11.500052452087402
    4. 'memo' → logprob: -11.625052452087402
    5. '.memory' → logprob: -12.000052452087402
    6. ' .' → logprob: -13.250052452087402
    7. '.mime' → logprob: -15.750052452087402
    8. '.m' → logprob: -16.250051498413086
    9. '.mn' → logprob: -16.250051498413086
    10. ' memo' → logprob: -16.625051498413086

Token 356: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -6.392202976712724e-06
    2. 'state' → logprob: -12.250006675720215
    3. ',state' → logprob: -14.250006675720215
    4. '[' → logprob: -14.875006675720215
    5. '(state' → logprob: -15.625006675720215
    6. '
' → logprob: -16.5000057220459
    7. '   ' → logprob: -16.8750057220459
    8. '[
' → logprob: -17.0000057220459
    9. '][' → logprob: -17.1250057220459
    10. '       ' → logprob: -17.1250057220459

Token 357: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -6.153795766294934e-06
    2. 'key' → logprob: -12.375005722045898
    3. '_KEY' → logprob: -14.500005722045898
    4. '
' → logprob: -15.000005722045898
    5. 'Key' → logprob: -15.500005722045898
    6. ')' → logprob: -15.750005722045898
    7. '   ' → logprob: -15.750005722045898
    8. ']' → logprob: -15.750005722045898
    9. '][' → logprob: -16.8750057220459
    10. '```' → logprob: -17.3750057220459

Token 358: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.0391463193809614e-05
    2. ']
' → logprob: -10.250060081481934
    3. ' ]' → logprob: -10.750060081481934
    4. '           ' → logprob: -13.000060081481934
    5. ')' → logprob: -14.625060081481934
    6. ']

' → logprob: -15.125060081481934
    7. '],' → logprob: -15.375060081481934
    8. '       ' → logprob: -16.37506103515625
    9. ')]' → logprob: -16.87506103515625
    10. '               ' → logprob: -17.37506103515625

Token 359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15609198808670044
    2. '       ' → logprob: -2.0310919284820557
    3. '
' → logprob: -5.281092166900635
    4. '        
' → logprob: -5.281092166900635
    5. '            
' → logprob: -6.281092166900635
    6. '    
' → logprob: -7.156092166900635
    7. '<|end|>' → logprob: -9.281091690063477
    8. '        ' → logprob: -9.531091690063477
    9. '```' → logprob: -9.531091690063477
    10. '          ' → logprob: -9.781091690063477

Token 360: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.4764849841594696
    2. 'if' → logprob: -0.976485013961792
    3. 'best' → logprob: -6.726484775543213
    4. '           ' → logprob: -6.976484775543213
    5. ' if' → logprob: -8.601485252380371
    6. ' max' → logprob: -10.101485252380371
    7. 'result' → logprob: -10.601485252380371
    8. 'res' → logprob: -11.226485252380371
    9. '   ' → logprob: -12.851485252380371
    10. 'answer' → logprob: -12.976485252380371

Token 361: '_removed' (ID: 173812)
  Prédit: '_removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -0.008800579234957695
    2. '_remove' → logprob: -5.008800506591797
    3. '_count' → logprob: -6.758800506591797
    4. 'removed' → logprob: -8.008800506591797
    5. '_rem' → logprob: -8.383800506591797
    6. '_blocks' → logprob: -8.758800506591797
    7. '_result' → logprob: -9.508800506591797
    8. '_num' → logprob: -9.883800506591797
    9. '_' → logprob: -10.133800506591797
    10. 'remove' → logprob: -11.883800506591797

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5764085054397583
    2. '=' → logprob: -0.8264085054397583
    3. '_blocks' → logprob: -7.701408386230469
    4. '_' → logprob: -11.326408386230469
    5. '   ' → logprob: -13.951408386230469
    6. 'blocks' → logprob: -13.951408386230469
    7. '_pairs' → logprob: -14.451408386230469
    8. '_count' → logprob: -14.951408386230469
    9. 's' → logprob: -14.951408386230469
    10. ',' → logprob: -15.076408386230469

Token 363: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002969703928101808
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.250296592712402
    4. '           ' → logprob: -15.625296592712402
    5. 'len' → logprob: -15.875296592712402
    6. ' ' → logprob: -16.87529754638672
    7. '       ' → logprob: -17.00029754638672
    8. '۰' → logprob: -17.06279754638672
    9. '０' → logprob: -17.93779754638672
    10. '    ' → logprob: -18.56279754638672

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -16.875001907348633
    4. '۰' → logprob: -17.062501907348633
    5. '2' → logprob: -17.250001907348633
    6. '1' → logprob: -17.312501907348633
    7. 'len' → logprob: -17.437501907348633
    8. '[' → logprob: -17.937501907348633
    9. '０' → logprob: -18.312501907348633
    10. '   ' → logprob: -18.937501907348633

Token 365: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4221048057079315
    2. '
' → logprob: -1.172104835510254
    3. ' for' → logprob: -4.172104835510254
    4. '       ' → logprob: -4.672104835510254
    5. 'for' → logprob: -5.047104835510254
    6. '   ' → logprob: -6.547104835510254
    7. '            
' → logprob: -7.047104835510254
    8. '<|end|>' → logprob: -8.172104835510254
    9. '        
' → logprob: -8.547104835510254
    10. '    
' → logprob: -8.547104835510254

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007252107840031385
    2. '       ' → logprob: -6.007252216339111
    3. 'for' → logprob: -6.257252216339111
    4. ' for' → logprob: -6.507252216339111
    5. '   ' → logprob: -6.757252216339111
    6. '
' → logprob: -8.757251739501953
    7. '    
' → logprob: -11.257251739501953
    8. '            
' → logprob: -11.382251739501953
    9. '        
' → logprob: -11.632251739501953
    10. 'if' → logprob: -14.257251739501953

Token 367: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01202496699988842
    2. ' for' → logprob: -5.012024879455566
    3. '           ' → logprob: -5.262024879455566
    4. 'n' → logprob: -9.512024879455566
    5. '   ' → logprob: -11.012024879455566
    6. '       ' → logprob: -11.387024879455566
    7. 'length' (adapté à ' length') → logprob: -12.762024879455566
    8. 'i' → logprob: -13.012024879455566
    9. ' n' → logprob: -13.512024879455566
    10. 'stack' → logprob: -13.762024879455566

Token 368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009834716096520424
    2. '=' → logprob: -4.6348347663879395
    3. '_stack' → logprob: -10.634834289550781
    4. '=len' → logprob: -11.009834289550781
    5. ' ' → logprob: -11.634834289550781
    6. '(stack' → logprob: -12.259834289550781
    7. '   ' → logprob: -12.509834289550781
    8. '           ' → logprob: -12.634834289550781
    9. 'stack' → logprob: -12.884834289550781
    10. '_len' → logprob: -13.259834289550781

Token 369: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12695172429084778
    2. ' len' → logprob: -2.1269516944885254
    3. '(len' → logprob: -10.751952171325684
    4. '           ' → logprob: -13.501952171325684
    5. '=len' → logprob: -15.251952171325684
    6. '[len' → logprob: -15.626952171325684
    7. '	len' → logprob: -15.626952171325684
    8. '   ' → logprob: -15.876952171325684
    9. ',len' → logprob: -16.751951217651367
    10. 'stack' → logprob: -16.876951217651367

Token 370: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.000181372175575234
    2. 'stack' → logprob: -8.625181198120117
    3. '(' → logprob: -14.000181198120117
    4. ' stack' → logprob: -15.250181198120117
    5. '	stack' → logprob: -15.375181198120117
    6. '(self' → logprob: -15.500181198120117
    7. '(
' → logprob: -16.625181198120117
    8. '(queue' → logprob: -17.750181198120117
    9. '(stock' → logprob: -17.750181198120117
    10. '(st' → logprob: -17.875181198120117

Token 371: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006653088144958019
    2. ')
' → logprob: -5.131653308868408
    3. ' )' → logprob: -7.756653308868408
    4. '())' → logprob: -9.00665283203125
    5. '.blocks' → logprob: -9.38165283203125
    6. '       ' → logprob: -10.13165283203125
    7. '   ' → logprob: -11.13165283203125
    8. ' )
' → logprob: -11.63165283203125
    9. '           ' → logprob: -11.75665283203125
    10. ')

' → logprob: -12.75665283203125

Token 372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45810946822166443
    2. ' for' → logprob: -1.9581094980239868
    3. '
' → logprob: -2.5831093788146973
    4. '       ' → logprob: -2.5831093788146973
    5. '   ' → logprob: -3.0831093788146973
    6. '    
' → logprob: -4.458109378814697
    7. '\n' → logprob: -5.333109378814697
    8. 'for' → logprob: -5.458109378814697
    9. '        
' → logprob: -5.958109378814697
    10. '            
' → logprob: -6.333109378814697

Token 373: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16337989270687103
    2. ' for' → logprob: -1.9133799076080322
    3. '       ' → logprob: -6.413379669189453
    4. '           ' → logprob: -7.163379669189453
    5. '   ' → logprob: -8.038379669189453
    6. 'if' → logprob: -8.288379669189453
    7. ' i' → logprob: -9.538379669189453
    8. 'i' → logprob: -9.663379669189453
    9. ' if' → logprob: -10.788379669189453
    10. ' ' → logprob: -13.163379669189453

Token 374: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011594036914175376
    2. 'if' → logprob: -9.750116348266602
    3. '           ' → logprob: -10.000116348266602
    4. ' for' → logprob: -11.875116348266602
    5. 'i' → logprob: -12.375116348266602
    6. '       ' → logprob: -13.875116348266602
    7. '   ' → logprob: -16.0001163482666
    8. '```' → logprob: -19.3751163482666
    9. '            
' → logprob: -19.6251163482666
    10. '	for' → logprob: -20.0001163482666

Token 375: ' every' (ID: 1753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5625845193862915
    2. 'i' → logprob: -1.4375845193862915
    3. ' for' → logprob: -1.8125845193862915
    4. ' i' → logprob: -4.437584400177002
    5. '           ' → logprob: -4.812584400177002
    6. '   ' → logprob: -5.562584400177002
    7. 'all' → logprob: -5.687584400177002
    8. ' all' → logprob: -7.062584400177002
    9. '               ' → logprob: -7.812584400177002
    10. '       ' → logprob: -7.937584400177002

Token 376: ' possible' (ID: 4149)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20451924204826355
    2. ' i' → logprob: -2.579519271850586
    3. 'adj' → logprob: -3.079519271850586
    4. ' adjacent' → logprob: -3.579519271850586
    5. 'pair' → logprob: -4.079519271850586
    6. 'possible' → logprob: -4.579519271850586
    7. ' pair' → logprob: -5.079519271850586
    8. ' possible' → logprob: -6.579519271850586
    9. 'index' → logprob: -7.954519271850586
    10. '   ' → logprob: -10.329519271850586

Token 377: ' adjacent' (ID: 39069)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.3755227029323578
    2. 'i' → logprob: -1.5005227327346802
    3. 'adj' → logprob: -2.6255226135253906
    4. ' pair' → logprob: -4.750522613525391
    5. ' adjacent' → logprob: -5.375522613525391
    6. ' i' → logprob: -5.625522613525391
    7. 'index' → logprob: -8.37552261352539
    8. '   ' → logprob: -8.75052261352539
    9. 'for' → logprob: -9.50052261352539
    10. ' ' → logprob: -9.75052261352539

Token 378: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.029221195727586746
    2. ' pair' → logprob: -3.654221296310425
    3. 'i' → logprob: -6.029221057891846
    4. 'pairs' → logprob: -8.779221534729004
    5. ' i' → logprob: -9.029221534729004
    6. 'index' → logprob: -9.404221534729004
    7. 'block' → logprob: -10.154221534729004
    8. ' ' → logprob: -10.529221534729004
    9. '   ' → logprob: -10.904221534729004
    10. '_pair' → logprob: -11.154221534729004

Token 379: ' removal' (ID: 23201)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7262125611305237
    2. '           ' → logprob: -0.8512125611305237
    3. 'for' → logprob: -2.476212501525879
    4. '       ' → logprob: -6.101212501525879
    5. ' to' → logprob: -6.226212501525879
    6. ',' → logprob: -7.851212501525879
    7. ' in' → logprob: -8.601212501525879
    8. '   ' → logprob: -8.851212501525879
    9. 'to' → logprob: -9.476212501525879
    10. '.' → logprob: -9.976212501525879

Token 380: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17334994673728943
    2. ' for' → logprob: -2.1733498573303223
    3. 'for' → logprob: -3.2983498573303223
    4. '       ' → logprob: -5.048349857330322
    5. '
' → logprob: -6.673349857330322
    6. '   ' → logprob: -7.548349857330322
    7. ',' → logprob: -9.92335033416748
    8. '    
' → logprob: -10.17335033416748
    9. '            
' → logprob: -10.17335033416748
    10. '        
' → logprob: -10.42335033416748

Token 381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32440245151519775
    2. '       ' → logprob: -2.074402332305908
    3. ' for' → logprob: -2.074402332305908
    4. 'for' → logprob: -4.074402332305908
    5. '   ' → logprob: -5.699402332305908
    6. '
' → logprob: -6.074402332305908
    7. '<|end|>' → logprob: -7.074402332305908
    8. '        
' → logprob: -7.324402332305908
    9. '    
' → logprob: -7.949402332305908
    10. ',' → logprob: -8.074402809143066

Token 382: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20398461818695068
    2. ' for' → logprob: -1.7039846181869507
    3. '           ' → logprob: -6.20398473739624
    4. '       ' → logprob: -7.95398473739624
    5. '   ' → logprob: -8.578984260559082
    6. '	for' → logprob: -12.453984260559082
    7. '
' → logprob: -13.453984260559082
    8. ' ' → logprob: -14.453984260559082
    9. '    ' → logprob: -14.578984260559082
    10. '            
' → logprob: -15.703984260559082

Token 383: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016141818836331367
    2. ' i' → logprob: -4.141141891479492
    3. 'idx' → logprob: -9.391141891479492
    4. ' idx' → logprob: -11.641141891479492
    5. '   ' → logprob: -11.891141891479492
    6. 'index' → logprob: -13.016141891479492
    7. ' ' → logprob: -13.141141891479492
    8. '	i' → logprob: -13.391141891479492
    9. 'k' → logprob: -14.016141891479492
    10. '```' → logprob: -14.516141891479492

Token 384: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005951552651822567
    2. 'in' → logprob: -5.380951404571533
    3. ' ' → logprob: -6.630951404571533
    4. '+' → logprob: -12.505951881408691
    5. ',' → logprob: -12.880951881408691
    6. ' i' → logprob: -13.880951881408691
    7. '	in' → logprob: -13.880951881408691
    8. '  ' → logprob: -14.255951881408691
    9. '<|end|>' → logprob: -14.755951881408691
    10. '1' → logprob: -15.005951881408691

Token 385: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476016292348504
    2. ' range' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.37747573852539
    4. '   ' → logprob: -15.87747573852539
    5. '(range' → logprob: -17.25247573852539
    6. '	range' → logprob: -17.50247573852539
    7. '  ' → logprob: -17.75247573852539
    8. 'rang' → logprob: -18.87747573852539
    9. '
' → logprob: -19.00247573852539
    10. 'ange' → logprob: -19.37747573852539

Token 386: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.0005903251585550606
    2. 'length' → logprob: -7.5005903244018555
    3. '(len' → logprob: -10.500590324401855
    4. '(' → logprob: -11.625590324401855
    5. ' length' → logprob: -14.875590324401855
    6. '[length' → logprob: -15.000590324401855
    7. 'len' → logprob: -16.625591278076172
    8. ',length' → logprob: -16.750591278076172
    9. '	length' → logprob: -17.500591278076172
    10. '1' → logprob: -18.000591278076172

Token 387: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.054900676012039185
    2. '-' → logprob: -2.929900646209717
    3. ' ' → logprob: -12.054901123046875
    4. ')' → logprob: -12.179901123046875
    5. '   ' → logprob: -12.929901123046875
    6. '1' → logprob: -13.429901123046875
    7. '       ' → logprob: -14.054901123046875
    8. '):
' → logprob: -14.179901123046875
    9. '           ' → logprob: -14.554901123046875
    10. '
' → logprob: -14.929901123046875

Token 388: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.56254005432129
    4. '2' → logprob: -17.68754005432129
    5. '```' → logprob: -17.75004005432129
    6. '  ' → logprob: -18.81254005432129
    7. ')' → logprob: -18.93754005432129
    8. '0' → logprob: -19.25004005432129
    9. '    ' → logprob: -19.50004005432129
    10. '<|end|>' → logprob: -19.81254005432129

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -18.875003814697266
    4. '
' → logprob: -19.125003814697266
    5. '2' → logprob: -19.187503814697266
    6. '   ' → logprob: -20.062503814697266
    7. '１' → logprob: -20.062503814697266
    8. '۱' → logprob: -20.125003814697266
    9. ')' → logprob: -20.500003814697266
    10. '  ' → logprob: -20.625003814697266

Token 390: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10075294971466064
    2. '):
' → logprob: -2.350752830505371
    3. ':' → logprob: -8.725752830505371
    4. ' ):' → logprob: -8.725752830505371
    5. ')' → logprob: -9.225752830505371
    6. '):
' → logprob: -9.475752830505371
    7. ' ):
' → logprob: -11.225752830505371
    8. '           ' → logprob: -11.225752830505371
    9. '):

' → logprob: -11.975752830505371
    10. '       ' → logprob: -12.100752830505371

Token 391: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07855813205242157
    2. '               ' → logprob: -2.7035582065582275
    3. ' if' → logprob: -5.953557968139648
    4. ' ' → logprob: -6.578557968139648
    5. '<|end|>' → logprob: -6.828557968139648
    6. '            
' → logprob: -6.953557968139648
    7. '            ' → logprob: -6.953557968139648
    8. ' 
' → logprob: -8.328557968139648
    9. ',' → logprob: -8.328557968139648
    10. '                
' → logprob: -8.453557968139648

Token 392: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008560674265027046
    2. ' if' → logprob: -5.008560657501221
    3. '           ' → logprob: -6.508560657501221
    4. '               ' → logprob: -8.008561134338379
    5. 'j' → logprob: -11.758561134338379
    6. '	if' → logprob: -12.758561134338379
    7. ' ' → logprob: -13.383561134338379
    8. 'If' → logprob: -14.008561134338379
    9. 'for' → logprob: -14.008561134338379
    10. ',' → logprob: -14.133561134338379

Token 393: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.000644764571916312
    2. ' stack' → logprob: -7.500644683837891
    3. 'self' → logprob: -9.37564468383789
    4. '   ' → logprob: -13.00064468383789
    5. '	stack' → logprob: -13.37564468383789
    6. '(stack' → logprob: -14.12564468383789
    7. '           ' → logprob: -14.12564468383789
    8. ' ' → logprob: -14.62564468383789
    9. '
' → logprob: -15.00064468383789
    10. '               ' → logprob: -15.00064468383789

Token 394: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.000000953674316
    3. ' .' → logprob: -15.625000953674316
    4. '.Can' → logprob: -16.125001907348633
    5. '       ' → logprob: -17.250001907348633
    6. '	can' → logprob: -18.125001907348633
    7. '.has' → logprob: -18.250001907348633
    8. ').' → logprob: -18.375001907348633
    9. '           ' → logprob: -18.625001907348633
    10. '   ' → logprob: -19.125001907348633

Token 395: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -3.047134305234067e-05
    2. 'remove' → logprob: -10.500030517578125
    3. '_REMOVE' → logprob: -13.125030517578125
    4. '_can' → logprob: -15.125030517578125
    5. ' remove' → logprob: -15.500030517578125
    6. '_' → logprob: -16.750030517578125
    7. 'can' → logprob: -16.875030517578125
    8. '_Remove' → logprob: -16.875030517578125
    9. 'Remove' → logprob: -17.000030517578125
    10. '_continue' → logprob: -17.125030517578125

Token 396: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -6.968934758333489e-05
    2. 'pair' → logprob: -9.625069618225098
    3. '
' → logprob: -14.125069618225098
    4. '_pairs' → logprob: -14.750069618225098
    5. '[i' → logprob: -15.125069618225098
    6. '(i' → logprob: -15.250069618225098
    7. '   ' → logprob: -15.375069618225098
    8. ' pair' → logprob: -15.500069618225098
    9. '```' → logprob: -15.500069618225098
    10. ' ' → logprob: -15.625069618225098

Token 397: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -11.625009536743164
    3. '(
' → logprob: -14.375009536743164
    4. ' (' → logprob: -16.625009536743164
    5. '   ' → logprob: -18.875009536743164
    6. ' ' → logprob: -19.750009536743164
    7. '(

' → logprob: -21.250009536743164
    8. '    ' → logprob: -21.500009536743164
    9. ',' → logprob: -21.500009536743164
    10. ',i' → logprob: -21.625009536743164

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004745180252939463
    2. ',i' → logprob: -5.504745006561279
    3. ' ,' → logprob: -7.379745006561279
    4. ',
' → logprob: -10.504745483398438
    5. 'i' → logprob: -12.254745483398438
    6. '   ' → logprob: -12.879745483398438
    7. '(i' → logprob: -13.004745483398438
    8. ',j' → logprob: -13.629745483398438
    9. ' i' → logprob: -13.879745483398438
    10. '+' → logprob: -14.629745483398438

Token 399: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.88418151892256e-05
    2. ' i' → logprob: -9.750059127807617
    3. '(i' → logprob: -15.750059127807617
    4. '   ' → logprob: -15.750059127807617
    5. '                   ' → logprob: -16.250059127807617
    6. '	i' → logprob: -17.000059127807617
    7. '
' → logprob: -17.500059127807617
    8. '[i' → logprob: -18.500059127807617
    9. '               ' → logprob: -18.625059127807617
    10. ')i' → logprob: -18.625059127807617

Token 400: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008618946187198162
    2. ' +' → logprob: -4.7586188316345215
    3. '+
' → logprob: -13.00861930847168
    4. '1' → logprob: -13.38361930847168
    5. ' +
' → logprob: -15.13361930847168
    6. ' ' → logprob: -15.63361930847168
    7. ' plus' → logprob: -17.50861930847168
    8. '+)' → logprob: -17.50861930847168
    9. '[' → logprob: -18.50861930847168
    10. '2' → logprob: -18.75861930847168

Token 401: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.875009536743164
    4. '```' → logprob: -19.125009536743164
    5. '
' → logprob: -19.625009536743164
    6. '  ' → logprob: -19.750009536743164
    7. ')' → logprob: -20.375009536743164
    8. '2' → logprob: -21.500009536743164
    9. '    ' → logprob: -21.812509536743164
    10. '0' → logprob: -22.062509536743164

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.000001907348633
    5. ')' → logprob: -17.500001907348633
    6. '```' → logprob: -17.500001907348633
    7. '0' → logprob: -18.312501907348633
    8. '

' → logprob: -19.187501907348633
    9. '  ' → logprob: -19.500001907348633
    10. '[' → logprob: -19.937501907348633

Token 403: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10028009861707687
    2. '):
' → logprob: -2.3502800464630127
    3. '):
' → logprob: -10.225279808044434
    4. ':' → logprob: -10.975279808044434
    5. ' ):' → logprob: -11.600279808044434
    6. ')' → logprob: -12.225279808044434
    7. '):

' → logprob: -12.600279808044434
    8. ' ):
' → logprob: -13.975279808044434
    9. '               ' → logprob: -14.100279808044434
    10. '           ' → logprob: -15.100279808044434

Token 404: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0038200297858566046
    2. '               ' → logprob: -6.503819942474365
    3. 'new' → logprob: -6.878819942474365
    4. ' new' → logprob: -7.378819942474365
    5. '                    
' → logprob: -8.253820419311523
    6. 'removed' → logprob: -8.878820419311523
    7. ' removed' → logprob: -9.628820419311523
    8. ':' → logprob: -10.378820419311523
    9. ':
' → logprob: -10.628820419311523
    10. '
' → logprob: -10.753820419311523

Token 405: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.13179346919059753
    2. 'new' (adapté à ' new') → logprob: -2.38179349899292
    3. '                   ' → logprob: -3.63179349899292
    4. ' next' → logprob: -5.63179349899292
    5. 'next' → logprob: -7.25679349899292
    6. ' removed' → logprob: -9.006793022155762
    7. '   ' → logprob: -9.756793022155762
    8. 'removed' → logprob: -10.131793022155762
    9. '                    ' → logprob: -10.631793022155762
    10. '                    
' → logprob: -10.631793022155762

Token 406: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0005216968129388988
    2. 'stack' → logprob: -7.625521659851074
    3. '_' → logprob: -10.625521659851074
    4. '_removed' → logprob: -12.500521659851074
    5. 'Stack' → logprob: -12.750521659851074
    6. ' stack' → logprob: -14.375521659851074
    7. '_state' → logprob: -14.750521659851074
    8. '_blocks' → logprob: -14.875521659851074
    9. '_STACK' → logprob: -15.125521659851074
    10. '_pair' → logprob: -15.125521659851074

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022473573684692
    2. '=' → logprob: -1.9102246761322021
    3. ')' → logprob: -14.785224914550781
    4. ' ' → logprob: -16.66022491455078
    5. ' =
' → logprob: -16.91022491455078
    6. ',' → logprob: -17.28522491455078
    7. '＝' → logprob: -17.66022491455078
    8. '.' → logprob: -17.78522491455078
    9. '=
' → logprob: -17.78522491455078
    10. '    ' → logprob: -18.03522491455078

Token 408: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.029756510630249977
    2. ' stack' → logprob: -3.529756546020508
    3. 'self' → logprob: -12.279756546020508
    4. '	stack' → logprob: -14.154756546020508
    5. 'Stack' → logprob: -15.529756546020508
    6. 'stackoverflow' → logprob: -16.154756546020508
    7. ' self' → logprob: -16.404756546020508
    8. '(stack' → logprob: -16.654756546020508
    9. '.stack' → logprob: -16.904756546020508
    10. '   ' → logprob: -17.904756546020508

Token 409: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -2.8921695047756657e-05
    2. '.' → logprob: -10.500028610229492
    3. ' .' → logprob: -13.875028610229492
    4. 'remove' → logprob: -14.750028610229492
    5. ' =' → logprob: -17.875028610229492
    6. '.replace' → logprob: -18.750028610229492
    7. '.
' → logprob: -19.000028610229492
    8. '.__' → logprob: -19.000028610229492
    9. '=' → logprob: -19.375028610229492
    10. ').' → logprob: -19.500028610229492

Token 410: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -1.3856492842023727e-06
    2. 'pair' → logprob: -14.750000953674316
    3. '```' → logprob: -15.125000953674316
    4. '_' → logprob: -15.625000953674316
    5. '_stack' → logprob: -16.500001907348633
    6. '_pairs' → logprob: -16.625001907348633
    7. ' _' → logprob: -17.125001907348633
    8. '_p' → logprob: -17.250001907348633
    9. '_PAIR' → logprob: -17.375001907348633
    10. '_remove' → logprob: -17.625001907348633

Token 411: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.572941179503687e-05
    2. '(' → logprob: -10.000045776367188
    3. '(
' → logprob: -15.625045776367188
    4. ' (' → logprob: -16.250045776367188
    5. ' ' → logprob: -18.250045776367188
    6. '   ' → logprob: -18.875045776367188
    7. '(ii' → logprob: -19.500045776367188
    8. 'i' → logprob: -20.625045776367188
    9. '```' → logprob: -21.375045776367188
    10. '((' → logprob: -21.625045776367188

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001737539772875607
    2. ',i' → logprob: -6.501737594604492
    3. ' ,' → logprob: -9.001737594604492
    4. ',
' → logprob: -9.376737594604492
    5. '+' → logprob: -11.501737594604492
    6. '   ' → logprob: -11.876737594604492
    7. 'i' → logprob: -12.876737594604492
    8. '(i' → logprob: -13.626737594604492
    9. ' ' → logprob: -13.751737594604492
    10. ' i' → logprob: -14.001737594604492

Token 413: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00023214559769257903
    2. ' i' → logprob: -8.375231742858887
    3. '(i' → logprob: -14.000231742858887
    4. '   ' → logprob: -15.000231742858887
    5. '	i' → logprob: -15.625231742858887
    6. '
' → logprob: -16.250232696533203
    7. '    ' → logprob: -17.125232696533203
    8. ')i' → logprob: -17.625232696533203
    9. '{i' → logprob: -17.625232696533203
    10. '```' → logprob: -17.875232696533203

Token 414: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003165360540151596
    2. ' +' → logprob: -5.878165245056152
    3. '1' → logprob: -8.003165245056152
    4. '+
' → logprob: -11.128165245056152
    5. '+)' → logprob: -12.378165245056152
    6. ' ' → logprob: -12.628165245056152
    7. '2' → logprob: -14.003165245056152
    8. ')' → logprob: -14.378165245056152
    9. '           ' → logprob: -14.878165245056152
    10. ' +
' → logprob: -15.128165245056152

Token 415: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '2' → logprob: -15.875021934509277
    4. '   ' → logprob: -16.93752098083496
    5. '```' → logprob: -17.06252098083496
    6. '
' → logprob: -17.62502098083496
    7. '۱' → logprob: -17.68752098083496
    8. '  ' → logprob: -18.25002098083496
    9. '１' → logprob: -18.25002098083496
    10. '१' → logprob: -18.81252098083496

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.625006675720215
    4. '2' → logprob: -15.625006675720215
    5. '```' → logprob: -16.62500762939453
    6. '
' → logprob: -16.93750762939453
    7. '  ' → logprob: -17.62500762939453
    8. '۱' → logprob: -17.81250762939453
    9. '１' → logprob: -18.06250762939453
    10. '           ' → logprob: -18.43750762939453

Token 417: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4887984097003937
    2. ')
' → logprob: -0.9887983798980713
    3. '                   ' → logprob: -4.23879861831665
    4. ')
' → logprob: -9.238798141479492
    5. ')

' → logprob: -10.738798141479492
    6. '               ' → logprob: -11.113798141479492
    7. ' )
' → logprob: -11.488798141479492
    8. ' )' → logprob: -11.738798141479492
    9. '
' → logprob: -12.238798141479492
    10. '                    ' → logprob: -12.363798141479492

Token 418: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010081980377435684
    2. '
' → logprob: -5.260081768035889
    3. '                    
' → logprob: -6.010081768035889
    4. '               ' → logprob: -7.135081768035889
    5. '       ' → logprob: -8.260082244873047
    6. '           ' → logprob: -8.260082244873047
    7. '                    ' → logprob: -8.260082244873047
    8. ' 
' → logprob: -9.135082244873047
    9. '<|end|>' → logprob: -9.135082244873047
    10. '   ' → logprob: -9.385082244873047

Token 419: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' (adapté à ' removed') → logprob: -0.0007027800311334431
    2. 'result' → logprob: -8.125702857971191
    3. '                   ' → logprob: -9.000702857971191
    4. 'res' → logprob: -9.000702857971191
    5. 'rem' → logprob: -9.250702857971191
    6. ' removed' → logprob: -10.000702857971191
    7. 'current' → logprob: -12.000702857971191
    8. 'remove' → logprob: -12.000702857971191
    9. 'next' → logprob: -13.750702857971191
    10. 'taken' → logprob: -14.000702857971191

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5694891214370728
    2. ' =' → logprob: -1.4444891214370728
    3. '_blocks' → logprob: -1.6944891214370728
    4. '                   ' → logprob: -4.944489002227783
    5. '_count' → logprob: -5.069489002227783
    6. 'count' → logprob: -7.569489002227783
    7. 'blocks' → logprob: -8.194489479064941
    8. '                    ' → logprob: -8.569489479064941
    9. '_amount' → logprob: -10.569489479064941
    10. 'Blocks' → logprob: -10.944489479064941

Token 421: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023798657639417797
    2. ' ' → logprob: -8.375238418579102
    3. '   ' → logprob: -12.875238418579102
    4. 'self' → logprob: -13.875238418579102
    5. 'stack' → logprob: -14.000238418579102
    6. 'max' → logprob: -14.375238418579102
    7. '
' → logprob: -14.750238418579102
    8. 'len' → logprob: -14.875238418579102
    9. '           ' → logprob: -15.125238418579102
    10. '               ' → logprob: -15.625238418579102

Token 422: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.664371848164592e-05
    2. ' ' → logprob: -11.375016212463379
    3. 'self' → logprob: -13.125016212463379
    4. 'max' → logprob: -13.875016212463379
    5. 'stack' → logprob: -14.250016212463379
    6. '   ' → logprob: -14.500016212463379
    7. '
' → logprob: -15.250016212463379
    8. 'len' → logprob: -15.250016212463379
    9. '２' → logprob: -16.750017166137695
    10. '           ' → logprob: -17.000017166137695

Token 423: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269282102584839
    2. '+' → logprob: -2.1269283294677734
    3. '+
' → logprob: -17.626928329467773
    4. ' ' → logprob: -18.126928329467773
    5. ' +
' → logprob: -18.626928329467773
    6. ' plus' → logprob: -18.626928329467773
    7. '
' → logprob: -19.001928329467773
    8. '+self' → logprob: -19.001928329467773
    9. '＋' → logprob: -19.126928329467773
    10. '+=' → logprob: -20.001928329467773

Token 424: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015030752401798964
    2. ' self' → logprob: -6.501502990722656
    3. '                   ' → logprob: -15.001502990722656
    4. '           ' → logprob: -15.376502990722656
    5. '(self' → logprob: -16.876502990722656
    6. '               ' → logprob: -17.626502990722656
    7. '[self' → logprob: -18.001502990722656
    8. 'stack' → logprob: -18.626502990722656
    9. '	self' → logprob: -18.751502990722656
    10. '                       ' → logprob: -18.876502990722656

Token 425: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0005580356228165329
    2. '.' → logprob: -7.500557899475098
    3. 'max' → logprob: -12.500557899475098
    4. ' .' → logprob: -15.000557899475098
    5. '.next' → logprob: -15.000557899475098
    6. '.min' → logprob: -15.625557899475098
    7. '.s' → logprob: -16.250558853149414
    8. '.user' → logprob: -16.625558853149414
    9. '._' → logprob: -17.125558853149414
    10. '.stack' → logprob: -17.125558853149414

Token 426: '_removed' (ID: 173812)
  Prédit: '_removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -1.0280383548888494e-06
    2. 'removed' → logprob: -14.125000953674316
    3. '_remove' → logprob: -15.625000953674316
    4. '_remaining' → logprob: -16.000001907348633
    5. '_' → logprob: -17.250001907348633
    6. 'Removed' → logprob: -17.875001907348633
    7. '_deleted' → logprob: -18.000001907348633
    8. '_added' → logprob: -19.250001907348633
    9. '_missing' → logprob: -19.500001907348633
    10. '```' → logprob: -19.625001907348633

Token 427: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -3.7697225252486533e-06
    2. 'blocks' → logprob: -13.250003814697266
    3. '_stack' → logprob: -13.500003814697266
    4. '_pairs' → logprob: -15.250003814697266
    5. '```' → logprob: -15.875003814697266
    6. '_removed' → logprob: -16.375003814697266
    7. '_' → logprob: -17.000003814697266
    8. 'Blocks' → logprob: -18.125003814697266
    9. 'stack' → logprob: -18.375003814697266
    10. '_block' → logprob: -18.375003814697266

Token 428: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. '(
' → logprob: -15.750008583068848
    4. 'new' → logprob: -16.12500762939453
    5. ' (' → logprob: -17.00000762939453
    6. ')new' → logprob: -17.75000762939453
    7. '(n' → logprob: -18.62500762939453
    8. '((' → logprob: -18.62500762939453
    9. '[new' → logprob: -18.87500762939453
    10. '(ne' → logprob: -19.62500762939453

Token 429: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0008425032719969749
    2. '(new' → logprob: -7.375842571258545
    3. 'Stack' → logprob: -8.750842094421387
    4. '_' → logprob: -11.125842094421387
    5. 'stack' → logprob: -11.750842094421387
    6. '(Stack' → logprob: -12.000842094421387
    7. '_(' → logprob: -12.375842094421387
    8. '_st' → logprob: -12.500842094421387
    9. ')' → logprob: -12.500842094421387
    10. '(' → logprob: -12.750842094421387

Token 430: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047904785722494125
    2. '(new' → logprob: -3.7979047298431396
    3. '(stack' → logprob: -3.9229047298431396
    4. ')
' → logprob: -5.672904968261719
    5. '(' → logprob: -8.172904968261719
    6. '(
' → logprob: -8.422904968261719
    7. ')new' → logprob: -8.797904968261719
    8. ' )' → logprob: -9.172904968261719
    9. '           ' → logprob: -9.172904968261719
    10. 'new' → logprob: -9.547904968261719

Token 431: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007200572872534394
    2. '               ' → logprob: -7.750720024108887
    3. '           ' → logprob: -9.125720024108887
    4. '
' → logprob: -9.125720024108887
    5. '                       ' → logprob: -10.500720024108887
    6. '       ' → logprob: -11.750720024108887
    7. '<|end|>' → logprob: -11.750720024108887
    8. '                    
' → logprob: -12.000720024108887
    9. '   ' → logprob: -12.250720024108887
    10. '		           ' → logprob: -13.000720024108887

Token 432: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.061799827963113785
    2. ' if' → logprob: -3.3117997646331787
    3. '           ' → logprob: -3.8117997646331787
    4. 'max' → logprob: -7.186800003051758
    5. '                   ' → logprob: -7.686800003051758
    6. '               ' → logprob: -8.811800003051758
    7. ' max' → logprob: -13.061800003051758
    8. '                       ' → logprob: -13.311800003051758
    9. '
' → logprob: -14.811800003051758
    10. '            
' → logprob: -15.061800003051758

Token 433: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.10020849853754044
    2. ' removed' → logprob: -2.3502085208892822
    3. 'rem' → logprob: -14.225208282470703
    4. '_removed' → logprob: -14.850208282470703
    5. '   ' → logprob: -14.975208282470703
    6. 'remove' → logprob: -15.975208282470703
    7. ' ' → logprob: -16.475208282470703
    8. ' ' → logprob: -16.850208282470703
    9. '```' → logprob: -16.850208282470703
    10. 're' → logprob: -16.975208282470703

Token 434: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08894763886928558
    2. '>' → logprob: -2.4639475345611572
    3. ' ' → logprob: -12.463947296142578
    4. '<|end|>' → logprob: -13.463947296142578
    5. ')' → logprob: -13.963947296142578
    6. ' >
' → logprob: -14.588947296142578
    7. '   ' → logprob: -14.713947296142578
    8. ')>' → logprob: -15.338947296142578
    9. ' ' → logprob: -15.713947296142578
    10. '<|end|>' → logprob: -15.963947296142578

Token 435: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00020354038861114532
    2. ' max' → logprob: -8.500203132629395
    3. '	max' → logprob: -20.12520408630371
    4. '_max' → logprob: -20.37520408630371
    5. '           ' → logprob: -20.62520408630371
    6. '(max' → logprob: -21.50020408630371
    7. '               ' → logprob: -22.12520408630371
    8. '
' → logprob: -22.12520408630371
    9. '=max' → logprob: -22.12520408630371
    10. '                   ' → logprob: -22.62520408630371

Token 436: '_removed' (ID: 173812)
  Prédit: '_removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -2.45848218582978e-06
    2. 'removed' → logprob: -13.50000286102295
    3. 'Removed' → logprob: -14.12500286102295
    4. '               ' → logprob: -16.625001907348633
    5. '_remaining' → logprob: -16.625001907348633
    6. '_deleted' → logprob: -16.750001907348633
    7. '_added' → logprob: -17.375001907348633
    8. 'max' → logprob: -17.750001907348633
    9. '                   ' → logprob: -17.875001907348633
    10. '           ' → logprob: -17.875001907348633

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048803556710481644
    2. ':
' → logprob: -3.0488035678863525
    3. '                       ' → logprob: -9.423803329467773
    4. '                   ' → logprob: -9.798803329467773
    5. '               ' → logprob: -10.173803329467773
    6. '):
' → logprob: -11.173803329467773
    7. '<|end|>' → logprob: -11.798803329467773
    8. '):' → logprob: -12.548803329467773
    9. '           ' → logprob: -12.548803329467773
    10. '                           ' → logprob: -12.923803329467773

Token 438: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0016511372523382306
    2. '                   ' → logprob: -6.501651287078857
    3. 'max' → logprob: -9.7516508102417
    4. '               ' → logprob: -9.8766508102417
    5. ' max' → logprob: -11.2516508102417
    6. '                           ' → logprob: -11.8766508102417
    7. '           ' → logprob: -12.3766508102417
    8. '                        
' → logprob: -12.6266508102417
    9. '
' → logprob: -13.2516508102417
    10. '```' → logprob: -13.3766508102417

Token 439: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.019124502316117287
    2. ' max' → logprob: -4.019124507904053
    3. '                       ' → logprob: -7.394124507904053
    4. '                           ' → logprob: -8.019124031066895
    5. '               ' → logprob: -11.394124031066895
    6. '                   ' → logprob: -11.394124031066895
    7. '           ' → logprob: -13.019124031066895
    8. '                               ' → logprob: -13.019124031066895
    9. '(max' → logprob: -13.894124031066895
    10. '	max' → logprob: -14.519124031066895

Token 440: '_removed' (ID: 173812)
  Prédit: '_removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -2.45848218582978e-06
    2. '_max' → logprob: -13.87500286102295
    3. '_' → logprob: -14.25000286102295
    4. '_deleted' → logprob: -15.37500286102295
    5. '_remove' → logprob: -15.50000286102295
    6. 'Removed' → logprob: -16.125001907348633
    7. '_re' → logprob: -16.375001907348633
    8. 'removed' → logprob: -16.500001907348633
    9. '                   ' → logprob: -17.250001907348633
    10. '_added' → logprob: -17.375001907348633

Token 441: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132619559764862
    2. '=' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.188261032104492
    4. ' =
' → logprob: -16.688261032104492
    5. '＝' → logprob: -17.063261032104492
    6. '<|end|>' → logprob: -17.188261032104492
    7. '=
' → logprob: -17.813261032104492
    8. ',' → logprob: -17.938261032104492
    9. '=max' → logprob: -17.938261032104492
    10. '=

' → logprob: -18.563261032104492

Token 442: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.02324594371020794
    2. ' removed' → logprob: -3.7732460498809814
    3. 'rem' → logprob: -15.398245811462402
    4. 'remove' → logprob: -16.02324676513672
    5. '_removed' → logprob: -16.27324676513672
    6. 'deleted' → logprob: -17.89824676513672
    7. 'Removed' → logprob: -18.52324676513672
    8. 'returned' → logprob: -18.64824676513672
    9. 'released' → logprob: -19.27324676513672
    10. 're' → logprob: -19.39824676513672

Token 443: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3139910399913788
    2. '
' → logprob: -1.3139910697937012
    3. '            
' → logprob: -7.563991069793701
    4. '       ' → logprob: -9.938990592956543
    5. '        
' → logprob: -9.938990592956543
    6. '    
' → logprob: -10.563990592956543
    7. '          ' → logprob: -10.813990592956543
    8. '            ' → logprob: -10.938990592956543
    9. '  
' → logprob: -11.438990592956543
    10. '               ' → logprob: -12.313990592956543

Token 444: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024596223374828696
    2. '       ' → logprob: -8.500246047973633
    3. '
' → logprob: -10.625246047973633
    4. '            
' → logprob: -11.500246047973633
    5. '          ' → logprob: -12.750246047973633
    6. '               ' → logprob: -13.625246047973633
    7. 'self' → logprob: -14.000246047973633
    8. '```' → logprob: -14.375246047973633
    9. '   ' → logprob: -14.625246047973633
    10. '        
' → logprob: -14.875246047973633

Token 445: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3995264768600464
    2. '           ' → logprob: -1.1495264768600464
    3. ' self' → logprob: -4.649526596069336
    4. '       ' → logprob: -5.899526596069336
    5. '   ' → logprob: -8.524526596069336
    6. '
' → logprob: -10.524526596069336
    7. '```' → logprob: -10.899526596069336
    8. '            
' → logprob: -11.899526596069336
    9. 'return' → logprob: -12.024526596069336
    10. ' ' → logprob: -12.649526596069336

Token 446: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.0025372595991939306
    2. '.' → logprob: -6.752537250518799
    3. '.mem' → logprob: -7.252537250518799
    4. '.memory' → logprob: -7.627537250518799
    5. ' .' → logprob: -8.752537727355957
    6. '.micro' → logprob: -12.502537727355957
    7. '.mime' → logprob: -13.377537727355957
    8. '​.' → logprob: -13.502537727355957
    9. '.s' → logprob: -14.002537727355957
    10. '.motor' → logprob: -14.127537727355957

Token 447: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.000001907348633
    3. '[self' → logprob: -18.750001907348633
    4. '[key' → logprob: -19.375001907348633
    5. '[action' → logprob: -20.250001907348633
    6. '[s' → logprob: -20.375001907348633
    7. '[event' → logprob: -21.125001907348633
    8. '[class' → logprob: -21.500001907348633
    9. '[
' → logprob: -21.875001907348633
    10. '[data' → logprob: -21.875001907348633

Token 448: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.0005577972042374313
    2. '[state' → logprob: -7.500557899475098
    3. '[key' → logprob: -12.750557899475098
    4. '[' → logprob: -14.000557899475098
    5. 'key' → logprob: -14.375557899475098
    6. '_KEY' → logprob: -15.000557899475098
    7. ']' → logprob: -16.25055694580078
    8. '_state' → logprob: -16.37555694580078
    9. '][' → logprob: -16.87555694580078
    10. '[
' → logprob: -17.62555694580078

Token 449: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11051429808139801
    2. ' =' → logprob: -2.3605144023895264
    3. ']' → logprob: -4.610514163970947
    4. ']=' → logprob: -8.110514640808105
    5. ' ]' → logprob: -12.485514640808105
    6. ')' → logprob: -12.610514640808105
    7. ')=' → logprob: -14.735514640808105
    8. '=
' → logprob: -16.23551368713379
    9. '[' → logprob: -16.61051368713379
    10. ' =
' → logprob: -17.23551368713379

Token 450: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '=
' → logprob: -18.951414108276367
    4. ' =
' → logprob: -20.701414108276367
    5. '＝' → logprob: -20.826414108276367
    6. '   ' → logprob: -21.826414108276367
    7. '.=' → logprob: -21.951414108276367
    8. ' ' → logprob: -22.201414108276367
    9. ']=' → logprob: -22.326414108276367
    10. '       ' → logprob: -22.326414108276367

Token 451: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015023599844425917
    2. ' max' → logprob: -6.501502513885498
    3. '(max' → logprob: -21.001502990722656
    4. '	max' → logprob: -21.376502990722656
    5. '[max' → logprob: -21.876502990722656
    6. '
' → logprob: -22.001502990722656
    7. '=max' → logprob: -22.126502990722656
    8. 'ma' → logprob: -22.251502990722656
    9. 'm' → logprob: -22.376502990722656
    10. '           ' → logprob: -22.626502990722656

Token 452: '_removed' (ID: 173812)
  Prédit: '_removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -1.6240566083070007e-06
    2. 'removed' → logprob: -14.500001907348633
    3. '_return' → logprob: -14.750001907348633
    4. 'Removed' → logprob: -15.750001907348633
    5. '_max' → logprob: -15.875001907348633
    6. 'oved' → logprob: -16.625001907348633
    7. '_' → logprob: -16.875001907348633
    8. '_added' → logprob: -16.875001907348633
    9. '_deleted' → logprob: -17.250001907348633
    10. '_re' → logprob: -17.875001907348633

Token 453: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020710406824946404
    2. 'return' → logprob: -6.877070903778076
    3. '
' → logprob: -7.002070903778076
    4. '       ' → logprob: -9.752071380615234
    5. ' return' → logprob: -10.127071380615234
    6. '		' → logprob: -11.502071380615234
    7. '   ' → logprob: -12.002071380615234
    8. '	return' → logprob: -12.627071380615234
    9. '<|end|>' → logprob: -12.877071380615234
    10. '    
' → logprob: -13.752071380615234

Token 454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004507970064878464
    2. '
' → logprob: -5.754508018493652
    3. 'return' → logprob: -6.879508018493652
    4. '       ' → logprob: -8.754508018493652
    5. ' return' → logprob: -9.254508018493652
    6. '		' → logprob: -11.254508018493652
    7. '   ' → logprob: -11.379508018493652
    8. '	return' → logprob: -11.629508018493652
    9. '<|end|>' → logprob: -12.629508018493652
    10. '        
' → logprob: -13.254508018493652

Token 455: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08127602189779282
    2. 'return' (adapté à ' return') → logprob: -2.5812759399414062
    3. ' return' → logprob: -6.081275939941406
    4. '       ' → logprob: -9.456275939941406
    5. '
' → logprob: -11.581275939941406
    6. '   ' → logprob: -11.706275939941406
    7. '	return' → logprob: -13.706275939941406
    8. '               ' → logprob: -15.331275939941406
    9. '          ' → logprob: -15.456275939941406
    10. '		' → logprob: -15.581275939941406

Token 456: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12692810595035553
    2. ' max' → logprob: -2.1269280910491943
    3. '(max' → logprob: -18.751928329467773
    4. '_max' → logprob: -19.126928329467773
    5. '	max' → logprob: -20.001928329467773
    6. '[max' → logprob: -21.001928329467773
    7. ',max' → logprob: -21.126928329467773
    8. '=max' → logprob: -22.126928329467773
    9. '
' → logprob: -22.751928329467773
    10. '           ' → logprob: -23.001928329467773

Token 457: '_removed' (ID: 173812)
  Prédit: '_removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -5.200166469876422e-06
    2. 'removed' → logprob: -12.250004768371582
    3. 'Removed' → logprob: -15.875004768371582
    4. '_max' → logprob: -16.8750057220459
    5. 'max' → logprob: -17.2500057220459
    6. '_' → logprob: -17.5000057220459
    7. '_deleted' → logprob: -17.8750057220459
    8. '_re' → logprob: -18.6250057220459
    9. '_remove' → logprob: -18.8750057220459
    10. '_added' → logprob: -19.0000057220459

Token 458: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3516738712787628
    2. '<|end|>' → logprob: -1.4766738414764404
    3. '   ' → logprob: -2.8516738414764404
    4. '#' → logprob: -5.3516740798950195
    5. '
' → logprob: -5.4766740798950195
    6. '<|end|>' → logprob: -7.6016740798950195
    7. '```' → logprob: -8.10167407989502
    8. 'def' → logprob: -8.35167407989502
    9. '        
' → logprob: -8.85167407989502
    10. '    
' → logprob: -9.85167407989502

Token 460: ' class' (ID: 744)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5953243970870972
    2. 'def' → logprob: -1.2203243970870972
    3. '<|end|>' → logprob: -2.3453245162963867
    4. '   ' → logprob: -3.8453245162963867
    5. 'weights' → logprob: -3.9703245162963867
    6. '```' → logprob: -4.720324516296387
    7. '<|end|>' → logprob: -5.595324516296387
    8. '       ' → logprob: -7.095324516296387
    9. 'weight' → logprob: -7.345324516296387
    10. '
' → logprob: -7.845324516296387

Token 461: ' Input' (ID: 10090)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.8562575578689575
    2. ' Player' → logprob: -1.6062575578689575
    3. 'Game' → logprob: -2.231257438659668
    4. 'Dar' → logprob: -3.356257438659668
    5. ' Dar' → logprob: -3.481257438659668
    6. ' Game' → logprob: -3.731257438659668
    7. 'Test' → logprob: -3.856257438659668
    8. 'Tester' → logprob: -3.981257438659668
    9. 'Stack' → logprob: -4.231257438659668
    10. ' Tester' → logprob: -4.356257438659668

Token 462: 'Parser' (ID: 9231)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8544257283210754
    2. 'Reader' → logprob: -1.3544256687164307
    3. 'Handler' → logprob: -1.6044256687164307
    4. ':
' → logprob: -2.8544256687164307
    5. 'Parser' → logprob: -3.1044256687164307
    6. 'Line' → logprob: -5.47942590713501
    7. 'Processor' → logprob: -5.97942590713501
    8. 'Data' → logprob: -6.35442590713501
    9. 'Stream' → logprob: -6.85442590713501
    10. 'Text' → logprob: -7.60442590713501

Token 463: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015149809187278152
    2. ':
' → logprob: -6.876514911651611
    3. '(' → logprob: -7.876514911651611
    4. '):' → logprob: -10.12651538848877
    5. ':def' → logprob: -10.87651538848877
    6. '():' → logprob: -11.62651538848877
    7. '<|end|>' → logprob: -11.87651538848877
    8. '(object' → logprob: -11.87651538848877
    9. '   ' → logprob: -12.50151538848877
    10. 'def' → logprob: -12.62651538848877

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38917821645736694
    2. '   ' → logprob: -1.1391782760620117
    3. 'def' → logprob: -6.139178276062012
    4. ' def' → logprob: -9.014178276062012
    5. '
' → logprob: -12.389178276062012
    6. '    
' → logprob: -12.514178276062012
    7. '     ' → logprob: -12.639178276062012
    8. '```' → logprob: -12.639178276062012
    9. '           ' → logprob: -13.014178276062012
    10. '	   ' → logprob: -13.139178276062012

Token 465: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27577921748161316
    2. '@' (adapté à ' @') → logprob: -1.7757792472839355
    3. '   ' → logprob: -2.7757792472839355
    4. ' def' → logprob: -5.0257792472839355
    5. ' @' → logprob: -6.0257792472839355
    6. '       ' → logprob: -7.9007792472839355
    7. 'staticmethod' → logprob: -11.650778770446777
    8. ' ' → logprob: -12.650778770446777
    9. '	def' → logprob: -14.025778770446777
    10. 'static' → logprob: -14.275778770446777

Token 466: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0004444931691978127
    2. 'classmethod' → logprob: -7.750444412231445
    3. 'static' → logprob: -11.375444412231445
    4. 'dat' → logprob: -13.000444412231445
    5. 'st' → logprob: -17.875444412231445
    6. 'property' → logprob: -18.875444412231445
    7. ' static' → logprob: -19.375444412231445
    8. 'sta' → logprob: -19.375444412231445
    9. 'stat' → logprob: -19.500444412231445
    10. '@' → logprob: -19.875444412231445

Token 467: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14208045601844788
    2. '       ' → logprob: -2.267080545425415
    3. '
' → logprob: -3.892080545425415
    4. '   ' → logprob: -5.267080307006836
    5. ' def' → logprob: -5.892080307006836
    6. '        
' → logprob: -8.017080307006836
    7. '	def' → logprob: -9.767080307006836
    8. '    
' → logprob: -10.142080307006836
    9. '           ' → logprob: -10.392080307006836
    10. '(' → logprob: -11.142080307006836

Token 468: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05090576782822609
    2. '       ' → logprob: -3.050905704498291
    3. '   ' → logprob: -6.675905704498291
    4. ' def' → logprob: -7.050905704498291
    5. '
' → logprob: -8.67590618133545
    6. '	def' → logprob: -11.80090618133545
    7. '        
' → logprob: -12.17590618133545
    8. '           ' → logprob: -13.05090618133545
    9. '     ' → logprob: -14.30090618133545
    10. ' ' → logprob: -14.67590618133545

Token 469: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002036595979006961
    2. ' def' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.75020408630371
    4. '       ' → logprob: -18.62520408630371
    5. '	def' → logprob: -19.25020408630371
    6. '
' → logprob: -20.87520408630371
    7. ' ' → logprob: -21.00020408630371
    8. 'from' → logprob: -21.37520408630371
    9. '```' → logprob: -22.12520408630371
    10. '  ' → logprob: -22.50020408630371

Token 470: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00020914296328555793
    2. 'read' → logprob: -8.500208854675293
    3. ' parse' → logprob: -12.625208854675293
    4. 'from' → logprob: -13.000208854675293
    5. 'get' → logprob: -17.37520980834961
    6. 'split' → logprob: -17.50020980834961
    7. 'input' → logprob: -18.00020980834961
    8. 'decode' → logprob: -19.12520980834961
    9. '.parse' → logprob: -19.25020980834961
    10. 'load' → logprob: -19.25020980834961

Token 471: '_input' (ID: 12507)
  Prédit: '(weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.0441252626478672
    2. '(line' → logprob: -3.9191253185272217
    3. '(lines' → logprob: -4.544125080108643
    4. '(input' → logprob: -5.044125080108643
    5. '(' → logprob: -5.294125080108643
    6. '(s' → logprob: -8.0441255569458
    7. 'weights' → logprob: -8.0441255569458
    8. '(list' → logprob: -8.5441255569458
    9. '(raw' → logprob: -9.2941255569458
    10. '(text' → logprob: -9.5441255569458

Token 472: '(lines' (ID: 73839)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.9708244204521179
    2. '(line' → logprob: -1.0958244800567627
    3. '():' → logprob: -2.0958244800567627
    4. '(lines' → logprob: -2.2208244800567627
    5. '(' → logprob: -3.8458244800567627
    6. '(s' → logprob: -4.595824241638184
    7. '(text' → logprob: -4.970824241638184
    8. '(data' → logprob: -5.095824241638184
    9. '():
' → logprob: -5.345824241638184
    10. '(string' → logprob: -5.720824241638184

Token 473: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0233928095549345
    2. '):
' → logprob: -3.773392915725708
    3. ')' → logprob: -10.273392677307129
    4. '(lines' → logprob: -10.523392677307129
    5. ',' → logprob: -10.648392677307129
    6. ':' → logprob: -10.773392677307129
    7. '   ' → logprob: -10.898392677307129
    8. ' ):' → logprob: -11.898392677307129
    9. '):
' → logprob: -12.023392677307129
    10. '       ' → logprob: -12.398392677307129

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012109770439565182
    2. ' lines' → logprob: -5.012109756469727
    3. '(lines' → logprob: -6.262109756469727
    4. 'tokens' → logprob: -6.762109756469727
    5. '       ' → logprob: -7.637109756469727
    6. '[' → logprob: -7.887109756469727
    7. ',' → logprob: -8.012109756469727
    8. 'lines' → logprob: -8.262109756469727
    9. '(' → logprob: -8.887109756469727
    10. '               ' → logprob: -9.137109756469727

Token 475: ' #' (ID: 1069)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.17917415499687195
    2. ' weights' → logprob: -2.4291741847991943
    3. 'n' → logprob: -2.8041741847991943
    4. ' n' → logprob: -4.554173946380615
    5. '           ' → logprob: -6.554173946380615
    6. 'num' → logprob: -6.929173946380615
    7. 'return' → logprob: -7.554173946380615
    8. '       ' → logprob: -7.554173946380615
    9. 'counts' → logprob: -7.679173946380615
    10. ' counts' → logprob: -8.179174423217773

Token 476: ' Parse' (ID: 26701)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.2114006131887436
    2. 'n' → logprob: -1.7114006280899048
    3. 'num' → logprob: -5.461400508880615
    4. ' weights' → logprob: -6.336400508880615
    5. ' n' → logprob: -6.461400508880615
    6. 'lines' → logprob: -7.086400508880615
    7. '   ' → logprob: -7.961400508880615
    8. 'counts' → logprob: -7.961400508880615
    9. 'return' → logprob: -8.836400985717773
    10. 'if' → logprob: -8.961400985717773

Token 477: ' lines' (ID: 8698)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.019823739305138588
    2. ' weights' → logprob: -4.2698235511779785
    3. 'n' → logprob: -5.7698235511779785
    4. 'blocks' → logprob: -6.8948235511779785
    5. ' n' → logprob: -7.6448235511779785
    6. 'num' → logprob: -8.519824028015137
    7. '       ' → logprob: -8.769824028015137
    8. 'int' → logprob: -8.769824028015137
    9. 'lines' → logprob: -8.894824028015137
    10. 'length' → logprob: -9.269824028015137

Token 478: ' input' (ID: 3422)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6804861426353455
    2. ' =' → logprob: -0.9304861426353455
    3. '=' → logprob: -3.5554862022399902
    4. '       ' → logprob: -3.5554862022399902
    5. ':' → logprob: -4.18048620223999
    6. '[' → logprob: -4.55548620223999
    7. '(lines' → logprob: -5.68048620223999
    8. 'return' → logprob: -5.93048620223999
    9. ',' → logprob: -6.30548620223999
    10. ' lines' → logprob: -6.68048620223999

Token 479: ' into' (ID: 1511)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031454913318157196
    2. ' =' → logprob: -4.281455039978027
    3. ',' → logprob: -4.781455039978027
    4. '       ' → logprob: -6.156455039978027
    5. '(lines' → logprob: -6.531455039978027
    6. '=' → logprob: -7.531455039978027
    7. ':
' → logprob: -7.656455039978027
    8. ':' → logprob: -7.656455039978027
    9. '=[]' → logprob: -7.906455039978027
    10. ' and' → logprob: -7.906455039978027

Token 480: ' list' (ID: 1562)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.1025916188955307
    2. '[int' → logprob: -2.4775915145874023
    3. 'list' → logprob: -4.727591514587402
    4. 'int' → logprob: -6.352591514587402
    5. '[' → logprob: -6.477591514587402
    6. '[List' → logprob: -7.477591514587402
    7. 'List' → logprob: -8.602591514587402
    8. 'a' → logprob: -8.727591514587402
    9. ' weights' → logprob: -9.352591514587402
    10. '[list' → logprob: -9.477591514587402

Token 481: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0547439306974411
    2. ' of' → logprob: -3.304744005203247
    3. 'of' → logprob: -4.804743766784668
    4. '           ' → logprob: -5.304743766784668
    5. '[' → logprob: -6.179743766784668
    6. '       ' → logprob: -7.429743766784668
    7. '   ' → logprob: -8.304743766784668
    8. '(int' → logprob: -8.679743766784668
    9. '_of' → logprob: -9.929743766784668
    10. '<int' → logprob: -10.054743766784668

Token 482: ' datasets' (ID: 57711)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.033297888934612274
    2. 'ints' → logprob: -4.033298015594482
    3. 'inte' → logprob: -4.408298015594482
    4. 'weights' → logprob: -5.908298015594482
    5. '[int' → logprob: -9.033297538757324
    6. 'blocks' → logprob: -11.658297538757324
    7. ' integers' → logprob: -12.283297538757324
    8. ' int' → logprob: -12.908297538757324
    9. '<int' → logprob: -14.158297538757324
    10. 'integer' → logprob: -14.158297538757324

Token 483: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10563046485185623
    2. '       ' → logprob: -3.480630397796631
    3. ' lines' → logprob: -3.730630397796631
    4. '(lines' → logprob: -3.855630397796631
    5. 'lines' → logprob: -4.355630397796631
    6. '[' → logprob: -6.230630397796631
    7. '[
' → logprob: -6.230630397796631
    8. 'def' → logprob: -6.605630397796631
    9. '(' → logprob: -6.605630397796631
    10. '   ' → logprob: -6.980630397796631

Token 484: 'list' (ID: 2641)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.46261125802993774
    2. '[List' → logprob: -1.212611198425293
    3. 'list' → logprob: -3.587611198425293
    4. ' List' → logprob: -4.212611198425293
    5. '[
' → logprob: -4.962611198425293
    6. ')' → logprob: -4.962611198425293
    7. '[int' → logprob: -4.962611198425293
    8. '[' → logprob: -5.712611198425293
    9. '[]' → logprob: -6.712611198425293
    10. '[])' → logprob: -6.837611198425293

Token 485: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.2521403431892395
    2. '[List' → logprob: -2.7521402835845947
    3. '[list' → logprob: -2.8771402835845947
    4. ' of' → logprob: -3.0021402835845947
    5. '[str' → logprob: -3.2521402835845947
    6. 'of' → logprob: -4.752140522003174
    7. ')' → logprob: -5.502140522003174
    8. '):' → logprob: -7.752140522003174
    9. '   ' → logprob: -8.002140045166016
    10. '[' → logprob: -8.002140045166016

Token 486: ' weights' (ID: 28460)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4539584219455719
    2. 'weights' → logprob: -1.7039583921432495
    3. 'lists' → logprob: -2.828958511352539
    4. 'list' → logprob: -3.453958511352539
    5. '(int' → logprob: -3.703958511352539
    6. 'ints' → logprob: -3.703958511352539
    7. 'List' → logprob: -3.703958511352539
    8. 'inte' → logprob: -5.078958511352539
    9. 'blocks' → logprob: -5.578958511352539
    10. '[int' → logprob: -5.703958511352539

Token 487: ' per' (ID: 777)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07586615532636642
    2. ')
' → logprob: -3.325866222381592
    3. '):' → logprob: -3.825866222381592
    4. '           ' → logprob: -4.825866222381592
    5. ')' → logprob: -5.200866222381592
    6. '       ' → logprob: -6.700866222381592
    7. '   ' → logprob: -8.450865745544434
    8. '):
' → logprob: -9.825865745544434
    9. '):

' → logprob: -9.950865745544434
    10. '               ' → logprob: -10.450865745544434

Token 488: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.04863005504012108
    2. ' dataset' → logprob: -3.2986299991607666
    3. 'line' → logprob: -4.923630237579346
    4. 'game' → logprob: -6.548630237579346
    5. 'stack' → logprob: -7.423630237579346
    6. 'data' → logprob: -7.673630237579346
    7. ' line' → logprob: -8.173629760742188
    8. ' game' → logprob: -8.548629760742188
    9. 'list' → logprob: -9.048629760742188
    10. ' stack' → logprob: -9.798629760742188

Token 489: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2661426067352295
    2. '):' → logprob: -2.2661426067352295
    3. '           ' → logprob: -2.8911426067352295
    4. ')' → logprob: -3.2661426067352295
    5. ')
' → logprob: -3.5161426067352295
    6. '       ' → logprob: -5.141142845153809
    7. '   ' → logprob: -8.641142845153809
    8. '):
' → logprob: -9.266142845153809
    9. '):

' → logprob: -9.766142845153809
    10. 'def' → logprob: -9.766142845153809

Token 490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061161983758211136
    2. '       ' → logprob: -2.936161994934082
    3. '(' → logprob: -6.561161994934082
    4. ' lines' → logprob: -6.811161994934082
    5. '```' → logprob: -6.936161994934082
    6. ',' → logprob: -7.061161994934082
    7. '[' → logprob: -7.811161994934082
    8. '(lines' → logprob: -8.186161994934082
    9. '   ' → logprob: -8.311161994934082
    10. '[
' → logprob: -8.436161994934082

Token 491: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.016095254570245743
    2. 'data' → logprob: -4.641095161437988
    3. ' datasets' → logprob: -5.141095161437988
    4. '           ' → logprob: -8.266095161437988
    5. ' data' → logprob: -9.016095161437988
    6. '               ' → logprob: -10.766095161437988
    7. 'dataset' → logprob: -10.891095161437988
    8. 'datas' → logprob: -11.391095161437988
    9. 'lines' → logprob: -12.141095161437988
    10. '```' → logprob: -12.266095161437988

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760121941566467
    2. '=' → logprob: -0.8260121941566467
    3. '=[]' → logprob: -9.70101261138916
    4. '=[]
' → logprob: -11.45101261138916
    5. '   ' → logprob: -15.70101261138916
    6. ',' → logprob: -15.82601261138916
    7. '=[]
' → logprob: -16.076011657714844
    8. '[]' → logprob: -16.326011657714844
    9. '＝' → logprob: -16.451011657714844
    10. ')' → logprob: -16.826011657714844

Token 493: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004109865520149469
    2. '[]
' → logprob: -5.504109859466553
    3. ' []' → logprob: -10.504110336303711
    4. '[]

' → logprob: -12.754110336303711
    5. '[' → logprob: -13.879110336303711
    6. ' []
' → logprob: -16.50411033630371
    7. '[]}' → logprob: -17.75411033630371
    8. '[]"' → logprob: -18.25411033630371
    9. '[])' → logprob: -19.12911033630371
    10. 'list' → logprob: -19.50411033630371

Token 494: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009091705083847046
    2. ' for' → logprob: -5.259091854095459
    3. 'for' → logprob: -5.634091854095459
    4. '       ' → logprob: -8.3840913772583
    5. '   ' → logprob: -11.2590913772583
    6. '               ' → logprob: -11.6340913772583
    7. '	       ' → logprob: -12.5090913772583
    8. 'i' → logprob: -13.0090913772583
    9. ',' → logprob: -13.0090913772583
    10. '		' → logprob: -13.2590913772583

Token 495: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5013576149940491
    2. 'idx' (adapté à ' idx') → logprob: -1.5013575553894043
    3. 'i' → logprob: -2.2513575553894043
    4. 'index' → logprob: -2.7513575553894043
    5. '           ' → logprob: -6.501357555389404
    6. ' for' → logprob: -7.876357555389404
    7. ' idx' → logprob: -8.626358032226562
    8. 'current' → logprob: -8.751358032226562
    9. '       ' → logprob: -10.251358032226562
    10. '```' → logprob: -10.626358032226562

Token 496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759573578834534
    2. '=' → logprob: -0.8259573578834534
    3. ' +=' → logprob: -11.950957298278809
    4. '+=' → logprob: -12.950957298278809
    5. '   ' → logprob: -13.200957298278809
    6. ' ' → logprob: -13.325957298278809
    7. '    ' → logprob: -13.950957298278809
    8. 'import' → logprob: -14.200957298278809
    9. ',' → logprob: -14.200957298278809
    10. '        ' → logprob: -14.325957298278809

Token 497: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008191577508114278
    2. ' ' → logprob: -7.125819206237793
    3. '1' → logprob: -11.125819206237793
    4. '   ' → logprob: -18.375818252563477
    5. '           ' → logprob: -20.125818252563477
    6. '  ' → logprob: -20.250818252563477
    7. '    ' → logprob: -20.750818252563477
    8. '۰' → logprob: -20.750818252563477
    9. '=' → logprob: -20.813318252563477
    10. '[' → logprob: -21.000818252563477

Token 498: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012047011114191264
    2. '1' → logprob: -9.250120162963867
    3. ' ' → logprob: -10.625120162963867
    4. '   ' → logprob: -18.125120162963867
    5. '2' → logprob: -19.312620162963867
    6. '[' → logprob: -19.562620162963867
    7. '```' → logprob: -20.000120162963867
    8. '  ' → logprob: -20.187620162963867
    9. '۰' → logprob: -20.500120162963867
    10. '=' → logprob: -20.750120162963867

Token 499: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0770033597946167
    2. ' while' → logprob: -1.4520033597946167
    3. 'while' → logprob: -1.5770033597946167
    4. '
' → logprob: -1.8270033597946167
    5. '	while' → logprob: -3.4520034790039062
    6. '<|end|>' → logprob: -4.577003479003906
    7. '       ' → logprob: -4.827003479003906
    8. '   ' → logprob: -6.202003479003906
    9. ',' → logprob: -6.702003479003906
    10. '    ' → logprob: -7.327003479003906

Token 500: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3692721724510193
    2. '<|end|>' → logprob: -1.369272232055664
    3. '       ' → logprob: -3.619272232055664
    4. ' while' → logprob: -4.869272232055664
    5. '   ' → logprob: -5.244272232055664
    6. '
' → logprob: -6.119272232055664
    7. '<|end|>' → logprob: -6.119272232055664
    8. ',' → logprob: -6.244272232055664
    9. 'while' → logprob: -6.494272232055664
    10. '	while' → logprob: -6.994272232055664

Token 501: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.38869431614875793
    2. ' while' → logprob: -1.1386942863464355
    3. '       ' → logprob: -7.5136942863464355
    4. ' n' → logprob: -7.8886942863464355
    5. '           ' → logprob: -8.138694763183594
    6. '   ' → logprob: -8.388694763183594
    7. 'n' → logprob: -8.513694763183594
    8. '	while' → logprob: -8.888694763183594
    9. 'num' → logprob: -10.388694763183594
    10. ' lines' → logprob: -13.013694763183594

Token 502: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.07317205518484116
    2. ' idx' → logprob: -2.948172092437744
    3. 'True' → logprob: -4.448172092437744
    4. ' True' → logprob: -5.073172092437744
    5. 'lines' → logprob: -9.823171615600586
    6. '	idx' → logprob: -10.073171615600586
    7. ' lines' → logprob: -10.823171615600586
    8. '   ' → logprob: -10.823171615600586
    9. ' ' → logprob: -11.823171615600586
    10. '(idx' → logprob: -12.198171615600586

Token 503: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07042896002531052
    2. '<' → logprob: -2.6954288482666016
    3. '<len' → logprob: -7.695428848266602
    4. '<n' → logprob: -11.195428848266602
    5. ' ' → logprob: -11.945428848266602
    6. '[' → logprob: -12.195428848266602
    7. '<class' → logprob: -13.070428848266602
    8. '<size' → logprob: -13.195428848266602
    9. '<num' → logprob: -13.945428848266602
    10. '<int' → logprob: -14.195428848266602

Token 504: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.5491004129871726e-05
    2. ' len' → logprob: -10.000045776367188
    3. 'lines' → logprob: -19.500045776367188
    4. '(len' → logprob: -19.750045776367188
    5. '           ' → logprob: -19.875045776367188
    6. 'line' → logprob: -20.125045776367188
    7. 'int' → logprob: -20.625045776367188
    8. '<len' → logprob: -20.625045776367188
    9. '[len' → logprob: -21.125045776367188
    10. '	len' → logprob: -21.625045776367188

Token 505: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0011102091521024704
    2. 'lines' → logprob: -7.376110076904297
    3. ' lines' → logprob: -7.751110076904297
    4. '(' → logprob: -9.876110076904297
    5. ' (' → logprob: -14.376110076904297
    6. '	lines' → logprob: -14.376110076904297
    7. '_lines' → logprob: -14.876110076904297
    8. '(line' → logprob: -15.626110076904297
    9. 'Lines' → logprob: -16.251110076904297
    10. '.lines' → logprob: -16.251110076904297

Token 506: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0651501417160034
    2. '):
' → logprob: -1.1901501417160034
    3. ':' → logprob: -1.9401501417160034
    4. ':
' → logprob: -2.190150260925293
    5. 'and' → logprob: -2.940150260925293
    6. '):' → logprob: -3.565150260925293
    7. ')' → logprob: -4.315150260925293
    8. '           ' → logprob: -8.315150260925293
    9. '():
' → logprob: -9.190150260925293
    10. '[' → logprob: -9.315150260925293

Token 507: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04253969341516495
    2. ' if' → logprob: -3.667539596557617
    3. '               ' → logprob: -5.167539596557617
    4. 'if' → logprob: -5.292539596557617
    5. '   ' → logprob: -6.417539596557617
    6. '```' → logprob: -6.542539596557617
    7. ' ' → logprob: -7.167539596557617
    8. '       ' → logprob: -7.667539596557617
    9. '            
' → logprob: -8.417539596557617
    10. '	       ' → logprob: -8.667539596557617

Token 508: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3372597396373749
    2. 'count' → logprob: -2.0872597694396973
    3. 'line' (adapté à ' line') → logprob: -2.4622597694396973
    4. 'num' → logprob: -2.9622597694396973
    5. ' n' → logprob: -4.212259769439697
    6. ' line' → logprob: -5.337259769439697
    7. '   ' → logprob: -6.087259769439697
    8. ' count' → logprob: -6.462259769439697
    9. '                   ' → logprob: -7.837259769439697
    10. 'length' → logprob: -8.087259292602539

Token 509: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4290968179702759
    2. '=' → logprob: -1.0540968179702759
    3. '.strip' → logprob: -8.304097175598145
    4. '=line' → logprob: -9.679097175598145
    5. '_tokens' → logprob: -10.429097175598145
    6. '           ' → logprob: -11.804097175598145
    7. 'tokens' → logprob: -12.054097175598145
    8. '=
' → logprob: -12.054097175598145
    9. '_strip' → logprob: -12.179097175598145
    10. 's' → logprob: -12.179097175598145

Token 510: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2014143168926239
    2. ' lines' → logprob: -1.7014143466949463
    3. '(lines' → logprob: -14.451414108276367
    4. '	lines' → logprob: -14.826414108276367
    5. 'line' → logprob: -16.326414108276367
    6. '.lines' → logprob: -17.451414108276367
    7. '           ' → logprob: -19.201414108276367
    8. '   ' → logprob: -19.201414108276367
    9. 'lin' → logprob: -19.576414108276367
    10. '-lines' → logprob: -20.076414108276367

Token 511: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.3494349420070648
    2. '.strip' → logprob: -1.2244349718093872
    3. '.' → logprob: -7.724434852600098
    4. 'strip' → logprob: -8.224434852600098
    5. '           ' → logprob: -8.599434852600098
    6. '               ' → logprob: -10.474434852600098
    7. '.trim' → logprob: -10.974434852600098
    8. 'idx' → logprob: -11.599434852600098
    9. '```' → logprob: -11.599434852600098
    10. '       ' → logprob: -12.224434852600098

Token 512: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.31568795442581177
    2. '].' → logprob: -1.315687894821167
    3. ').' → logprob: -6.190688133239746
    4. ']' → logprob: -9.190688133239746
    5. '           ' → logprob: -9.315688133239746
    6. 'strip' → logprob: -9.690688133239746
    7. '.' → logprob: -10.065688133239746
    8. '.rstrip' → logprob: -11.190688133239746
    9. '.trim' → logprob: -11.315688133239746
    10. ']
' → logprob: -11.440688133239746

Token 513: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. 'rstrip' → logprob: -17.25
    3. '.strip' → logprob: -17.875
    4. 'split' → logprob: -18.125
    5. ' strip' → logprob: -19.375
    6. '_strip' → logprob: -21.5
    7. '(strip' → logprob: -22.375
    8. 'str' → logprob: -22.625
    9. '
' → logprob: -23.375
    10. '-strip' → logprob: -24.125

Token 514: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062062691897153854
    2. '()
' → logprob: -2.8120627403259277
    3. '())' → logprob: -11.06206226348877
    4. '():
' → logprob: -11.31206226348877
    5. '               ' → logprob: -11.56206226348877
    6. '           ' → logprob: -11.56206226348877
    7. '()

' → logprob: -11.93706226348877
    8. '()</' → logprob: -12.06206226348877
    9. '()\' → logprob: -12.18706226348877
    10. '()]' → logprob: -12.31206226348877

Token 515: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5322023034095764
    2. 'if' → logprob: -0.9072023034095764
    3. ' if' → logprob: -5.032202243804932
    4. '           ' → logprob: -6.157202243804932
    5. '```' → logprob: -9.15720272064209
    6. '                   ' → logprob: -9.40720272064209
    7. '<|end|>' → logprob: -9.78220272064209
    8. '   ' → logprob: -10.28220272064209
    9. '	if' → logprob: -10.90720272064209
    10. '                
' → logprob: -10.90720272064209

Token 516: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00010103991371579468
    2. '               ' → logprob: -9.250101089477539
    3. ' if' → logprob: -12.375101089477539
    4. '           ' → logprob: -15.125101089477539
    5. '                   ' → logprob: -15.125101089477539
    6. 'num' → logprob: -16.87510108947754
    7. 'n' → logprob: -17.62510108947754
    8. '```' → logprob: -18.12510108947754
    9. 'break' → logprob: -18.25010108947754
    10. '	if' → logprob: -18.87510108947754

Token 517: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2750687897205353
    2. 'not' → logprob: -1.900068759918213
    3. ' not' → logprob: -2.525068759918213
    4. ' line' → logprob: -4.525068759918213
    5. '#line' → logprob: -11.400069236755371
    6. '(line' → logprob: -11.525069236755371
    7. 'len' → logprob: -12.525069236755371
    8. ' ' → logprob: -12.775069236755371
    9. '	line' → logprob: -13.150069236755371
    10. '   ' → logprob: -13.525069236755371

Token 518: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029862144961953163
    2. ' ==' → logprob: -3.52986216545105
    3. '==
' → logprob: -10.154862403869629
    4. '.startswith' → logprob: -10.529862403869629
    5. '=' → logprob: -10.654862403869629
    6. '===' → logprob: -11.779862403869629
    7. '()==' → logprob: -12.154862403869629
    8. '=='' → logprob: -12.529862403869629
    9. '=="' → logprob: -12.779862403869629
    10. ')==' → logprob: -13.904862403869629

Token 519: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4635807275772095
    2. '"' → logprob: -1.2135807275772095
    3. '''' → logprob: -2.96358060836792
    4. '""' → logprob: -4.21358060836792
    5. '"":' → logprob: -4.96358060836792
    6. ''end' → logprob: -9.338581085205078
    7. ''O' → logprob: -9.588581085205078
    8. ''#' → logprob: -9.963581085205078
    9. ' '' → logprob: -10.088581085205078
    10. '0' → logprob: -10.713581085205078

Token 520: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010330132208764553
    2. '"' → logprob: -4.6353302001953125
    3. ''' → logprob: -7.8853302001953125
    4. '":' → logprob: -9.135330200195312
    5. '""' → logprob: -10.260330200195312
    6. '":
' → logprob: -10.510330200195312
    7. '#' → logprob: -12.135330200195312
    8. '"":' → logprob: -12.260330200195312
    9. 'end' → logprob: -12.385330200195312
    10. ' ' → logprob: -13.010330200195312

Token 521: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.08230980485677719
    2. '":
' → logprob: -2.5823097229003906
    3. '":
' → logprob: -5.957309722900391
    4. '"' → logprob: -7.332309722900391
    5. '"):
' → logprob: -9.70730972290039
    6. '0' → logprob: -10.08230972290039
    7. ':' → logprob: -10.58230972290039
    8. '"):' → logprob: -11.08230972290039
    9. '__":
' → logprob: -12.45730972290039
    10. '":

' → logprob: -12.95730972290039

Token 522: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01450593676418066
    2. ':' → logprob: -4.514505863189697
    3. ':
' → logprob: -6.389505863189697
    4. '               ' → logprob: -6.764505863189697
    5. '                       ' → logprob: -8.014506340026855
    6. 'break' → logprob: -9.514506340026855
    7. '           ' → logprob: -9.764506340026855
    8. '                           ' → logprob: -10.639506340026855
    9. ' break' → logprob: -10.889506340026855
    10. '<|end|>' → logprob: -10.889506340026855

Token 523: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6253163814544678
    2. '                   ' → logprob: -0.8753163814544678
    3. '               ' → logprob: -3.6253163814544678
    4. ' break' → logprob: -4.500316619873047
    5. '	break' → logprob: -4.625316619873047
    6. '                       ' → logprob: -7.625316619873047
    7. '	               ' → logprob: -10.250316619873047
    8. '	           ' → logprob: -11.125316619873047
    9. '           ' → logprob: -11.250316619873047
    10. '   ' → logprob: -11.375316619873047

Token 524: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23826250433921814
    2. '<|end|>' → logprob: -2.113262414932251
    3. '
' → logprob: -2.863262414932251
    4. '                
' → logprob: -3.488262414932251
    5. '<|end|>' → logprob: -6.73826265335083
    6. '\n' → logprob: -7.36326265335083
    7. '  
' → logprob: -7.86326265335083
    8. '            
' → logprob: -8.363262176513672
    9. '                    
' → logprob: -8.613262176513672
    10. '    
' → logprob: -8.738262176513672

Token 525: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004686799366027117
    2. '<|end|>' → logprob: -5.5046868324279785
    3. '                
' → logprob: -7.7546868324279785
    4. '<|end|>' → logprob: -9.75468635559082
    5. '  
' → logprob: -10.37968635559082
    6. '```' → logprob: -11.00468635559082
    7. '    
' → logprob: -11.37968635559082
    8. '           ' → logprob: -11.37968635559082
    9. '              ' → logprob: -11.37968635559082
    10. '                    
' → logprob: -12.25468635559082

Token 526: ' n' (ID: 297)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.47889024019241333
    2. 'n' (adapté à ' n') → logprob: -1.6038901805877686
    3. 'count' → logprob: -2.2288901805877686
    4. '               ' → logprob: -3.1038901805877686
    5. ' n' → logprob: -4.853890419006348
    6. 'length' → logprob: -4.978890419006348
    7. ' num' → logprob: -5.103890419006348
    8. ' count' → logprob: -5.853890419006348
    9. 'size' → logprob: -6.978890419006348
    10. ' length' → logprob: -7.478890419006348

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232642889022827
    2. '=' → logprob: -0.8982642889022827
    3. ',' → logprob: -9.273263931274414
    4. '=int' → logprob: -10.773263931274414
    5. ')' → logprob: -11.898263931274414
    6. ' ' → logprob: -12.523263931274414
    7. '<|end|>' → logprob: -13.023263931274414
    8. '   ' → logprob: -13.148263931274414
    9. '    ' → logprob: -13.273263931274414
    10. ' =
' → logprob: -13.773263931274414

Token 528: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00861456897109747
    2. ' int' → logprob: -4.758614540100098
    3. '[int' → logprob: -18.633615493774414
    4. '(int' → logprob: -19.633615493774414
    5. '<int' → logprob: -20.008615493774414
    6. ' ' → logprob: -20.008615493774414
    7. '=int' → logprob: -20.758615493774414
    8. '	int' → logprob: -20.758615493774414
    9. '   ' → logprob: -22.258615493774414
    10. ':int' → logprob: -22.633615493774414

Token 529: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.2113979209971149e-05
    2. 'line' → logprob: -11.500012397766113
    3. '(' → logprob: -13.250012397766113
    4. '(lines' → logprob: -16.500011444091797
    5. ' line' → logprob: -17.375011444091797
    6. '=line' → logprob: -17.625011444091797
    7. '(
' → logprob: -18.125011444091797
    8. '[line' → logprob: -18.125011444091797
    9. '#line' → logprob: -19.000011444091797
    10. '(n' → logprob: -19.375011444091797

Token 530: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07918267697095871
    2. ')' → logprob: -2.5791826248168945
    3. '               ' → logprob: -8.204182624816895
    4. ')
' → logprob: -11.079182624816895
    5. '                   ' → logprob: -13.454182624816895
    6. '           ' → logprob: -13.829182624816895
    7. ')`
' → logprob: -14.704182624816895
    8. ')

' → logprob: -15.204182624816895
    9. ' )
' → logprob: -15.329182624816895
    10. ')
/' → logprob: -16.57918357849121

Token 531: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006438010837882757
    2. '           ' → logprob: -6.1314377784729
    3. '                   ' → logprob: -6.2564377784729
    4. '<|end|>' → logprob: -6.3814377784729
    5. '<|end|>' → logprob: -9.256438255310059
    6. '                
' → logprob: -9.256438255310059
    7. '
' → logprob: -9.381438255310059
    8. '       ' → logprob: -9.631438255310059
    9. '```' → logprob: -10.006438255310059
    10. '                ' → logprob: -10.256438255310059

Token 532: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.10769585520029068
    2. 'weights' → logprob: -2.4826958179473877
    3. '               ' → logprob: -4.857696056365967
    4. '           ' → logprob: -4.982696056365967
    5. ' idx' → logprob: -6.107696056365967
    6. 'indices' → logprob: -7.857696056365967
    7. ' weights' → logprob: -7.982696056365967
    8. 'blocks' → logprob: -7.982696056365967
    9. '	idx' → logprob: -8.857695579528809
    10. '                   ' → logprob: -9.107695579528809

Token 533: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759401917457581
    2. '+=' → logprob: -0.8259401917457581
    3. ']+=' → logprob: -14.700940132141113
    4. '=' → logprob: -15.825940132141113
    5. '+' → logprob: -16.20094108581543
    6. '   ' → logprob: -16.45094108581543
    7. '```' → logprob: -16.95094108581543
    8. ' =' → logprob: -17.57594108581543
    9. '	' → logprob: -19.32594108581543
    10. '    ' → logprob: -19.32594108581543

Token 534: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'n' → logprob: -19.125009536743164
    4. '   ' → logprob: -19.625009536743164
    5. '0' → logprob: -19.875009536743164
    6. '```' → logprob: -20.312509536743164
    7. '
' → logprob: -20.687509536743164
    8. '１' → logprob: -21.125009536743164
    9. '۱' → logprob: -21.500009536743164
    10. '+' → logprob: -21.500009536743164

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'n' → logprob: -18.0
    4. '0' → logprob: -19.8125
    5. '１' → logprob: -20.6875
    6. '
' → logprob: -21.0
    7. '```' → logprob: -21.0
    8. '   ' → logprob: -21.375
    9. 's' → logprob: -21.9375
    10. '১' → logprob: -22.25

Token 536: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6185859441757202
    2. 'weights' → logprob: -1.2435859441757202
    3. 'blocks' → logprob: -2.6185860633850098
    4. '           ' → logprob: -2.9935860633850098
    5. ' lines' → logprob: -3.9935860633850098
    6. ' weights' → logprob: -5.11858606338501
    7. 'datasets' → logprob: -5.24358606338501
    8. 'lines' → logprob: -5.36858606338501
    9. 'tokens' → logprob: -5.61858606338501
    10. '<|end|>' → logprob: -6.49358606338501

Token 537: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13423308730125427
    2. 'weights' → logprob: -2.134232997894287
    3. '           ' → logprob: -6.384232997894287
    4. ' weights' → logprob: -6.634232997894287
    5. ' lines' → logprob: -6.759232997894287
    6. 'blocks' → logprob: -7.259232997894287
    7. 'lines' → logprob: -7.384232997894287
    8. 'datasets' → logprob: -7.759232997894287
    9. 'data' → logprob: -8.134233474731445
    10. 'tokens' → logprob: -8.384233474731445

Token 538: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' (adapté à ' weights') → logprob: -0.005625258665531874
    2. ' weights' → logprob: -5.255625247955322
    3. 'blocks' → logprob: -8.63062572479248
    4. '               ' → logprob: -8.75562572479248
    5. 'weight' → logprob: -11.25562572479248
    6. 'for' → logprob: -11.88062572479248
    7. '           ' → logprob: -12.25562572479248
    8. 'line' → logprob: -12.25562572479248
    9. '   ' → logprob: -12.25562572479248
    10. 'while' → logprob: -12.75562572479248

Token 539: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408178448677063
    2. ' =' → logprob: -0.9740817546844482
    3. '=line' → logprob: -13.224081993103027
    4. '           ' → logprob: -13.599081993103027
    5. '   ' → logprob: -14.474081993103027
    6. '_line' → logprob: -14.724081993103027
    7. 'line' → logprob: -15.599081993103027
    8. '＝' → logprob: -16.59908103942871
    9. ',' → logprob: -16.72408103942871
    10. '            ' → logprob: -16.97408103942871

Token 540: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. '           ' → logprob: -14.576414108276367
    4. '       ' → logprob: -16.576414108276367
    5. '=line' → logprob: -16.951414108276367
    6. '   ' → logprob: -17.576414108276367
    7. ' ' → logprob: -17.951414108276367
    8. '               ' → logprob: -18.451414108276367
    9. '＝' → logprob: -19.201414108276367
    10. 's' → logprob: -19.326414108276367

Token 541: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.03364984691143036
    2. ' lines' → logprob: -3.4086499214172363
    3. '	lines' → logprob: -13.283649444580078
    4. '   ' → logprob: -13.408649444580078
    5. '(lines' → logprob: -14.533649444580078
    6. 'line' → logprob: -15.908649444580078
    7. '           ' → logprob: -16.908649444580078
    8. '.lines' → logprob: -16.908649444580078
    9. ' ' → logprob: -17.408649444580078
    10. '       ' → logprob: -17.908649444580078

Token 542: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.246537173457909e-06
    2. 'idx' → logprob: -13.125003814697266
    3. '[' → logprob: -14.500003814697266
    4. '       ' → logprob: -14.750003814697266
    5. '           ' → logprob: -14.750003814697266
    6. '                   ' → logprob: -14.750003814697266
    7. '               ' → logprob: -15.125003814697266
    8. '   ' → logprob: -16.250003814697266
    9. '[self' → logprob: -17.625003814697266
    10. ' [' → logprob: -17.750003814697266

Token 543: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0031866247300058603
    2. '.strip' → logprob: -5.7531867027282715
    3. '.' → logprob: -12.128186225891113
    4. ']' → logprob: -13.378186225891113
    5. ' ].' → logprob: -14.503186225891113
    6. '.rstrip' → logprob: -15.503186225891113
    7. '"].' → logprob: -15.503186225891113
    8. '.split' → logprob: -15.628186225891113
    9. ']
' → logprob: -15.753186225891113
    10. '           ' → logprob: -15.878186225891113

Token 544: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.128163257315464e-07
    2. 'split' → logprob: -16.5
    3. 'rstrip' → logprob: -16.5
    4. ' strip' → logprob: -18.0
    5. '.strip' → logprob: -20.25
    6. '_strip' → logprob: -24.0
    7. '(strip' → logprob: -26.125
    8. '-strip' → logprob: -26.5
    9. 'str' → logprob: -26.75
    10. 'stripe' → logprob: -27.0

Token 545: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01719249039888382
    2. 'weights' → logprob: -4.767192363739014
    3. '           ' → logprob: -5.892192363739014
    4. 'tokens' → logprob: -6.642192363739014
    5. '<|end|>' → logprob: -6.767192363739014
    6. ' weights' → logprob: -6.892192363739014
    7. '                
' → logprob: -7.642192363739014
    8. '(weights' → logprob: -8.142192840576172
    9. ',' → logprob: -8.392192840576172
    10. ')' → logprob: -8.642192840576172

Token 546: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016993449535220861
    2. '           ' → logprob: -7.501699447631836
    3. 'weights' → logprob: -7.626699447631836
    4. '<|end|>' → logprob: -8.376699447631836
    5. 'tokens' → logprob: -8.751699447631836
    6. ' weights' → logprob: -8.751699447631836
    7. '       ' → logprob: -11.001699447631836
    8. '		       ' → logprob: -11.251699447631836
    9. ' tokens' → logprob: -11.376699447631836
    10. '	       ' → logprob: -11.501699447631836

Token 547: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' (adapté à ' weights') → logprob: -0.058901749551296234
    2. ' weights' → logprob: -2.933901786804199
    3. '               ' → logprob: -5.558901786804199
    4. '           ' → logprob: -9.0589017868042
    5. '(weights' → logprob: -11.1839017868042
    6. '_weights' → logprob: -12.1839017868042
    7. '       ' → logprob: -12.3089017868042
    8. 'weight' → logprob: -12.3089017868042
    9. '.weights' → logprob: -12.4339017868042
    10. '                   ' → logprob: -12.4339017868042

Token 548: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693902850151062
    2. '=' → logprob: -2.126939058303833
    3. '_list' → logprob: -12.501938819885254
    4. '_tokens' → logprob: -12.626938819885254
    5. '=[]' → logprob: -14.251938819885254
    6. '           ' → logprob: -14.626938819885254
    7. '   ' → logprob: -14.751938819885254
    8. 's' → logprob: -14.876938819885254
    9. ' ' → logprob: -15.126938819885254
    10. '_weights' → logprob: -15.251938819885254

Token 549: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0005998577689751983
    2. ' list' → logprob: -7.5005998611450195
    3. '[list' → logprob: -10.00059986114502
    4. '[' → logprob: -13.50059986114502
    5. ' [' → logprob: -18.250598907470703
    6. '	list' → logprob: -21.000598907470703
    7. '(list' → logprob: -21.125598907470703
    8. 'List' → logprob: -21.250598907470703
    9. '=list' → logprob: -21.375598907470703
    10. '[List' → logprob: -21.375598907470703

Token 550: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.0629870858974755e-05
    2. '(' → logprob: -9.75006103515625
    3. 'map' → logprob: -13.50006103515625
    4. '(
' → logprob: -14.75006103515625
    5. '(int' → logprob: -15.37506103515625
    6. '()' → logprob: -16.62506103515625
    7. '	map' → logprob: -16.87506103515625
    8. '.map' → logprob: -17.62506103515625
    9. ' map' → logprob: -18.25006103515625
    10. '(range' → logprob: -18.37506103515625

Token 551: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005430232849903405
    2. 'int' → logprob: -7.750543117523193
    3. '(' → logprob: -9.125542640686035
    4. '(
' → logprob: -13.250542640686035
    5. '(str' → logprob: -14.625542640686035
    6. '(lambda' → logprob: -14.750542640686035
    7. '[int' → logprob: -14.875542640686035
    8. ' int' → logprob: -15.625542640686035
    9. '<int' → logprob: -16.12554359436035
    10. '   ' → logprob: -16.62554359436035

Token 552: ',' (ID: 11)
  Prédit: '(weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.005941121373325586
    2. '(' → logprob: -5.505940914154053
    3. 'weights' → logprob: -6.880940914154053
    4. ',' → logprob: -7.380940914154053
    5. ')' → logprob: -9.255941390991211
    6. ' weights' → logprob: -10.255941390991211
    7. '(lines' → logprob: -10.755941390991211
    8. ' (' → logprob: -11.130941390991211
    9. '.weights' → logprob: -11.755941390991211
    10. '<|end|>' → logprob: -11.880941390991211

Token 553: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -3.5597102396423e-05
    2. ' weights' → logprob: -10.250035285949707
    3. '(weights' → logprob: -16.750036239624023
    4. 'weight' → logprob: -18.125036239624023
    5. '.weights' → logprob: -19.500036239624023
    6. '_weights' → logprob: -20.875036239624023
    7. 'weig' → logprob: -21.500036239624023
    8. '   ' → logprob: -21.500036239624023
    9. '           ' → logprob: -21.875036239624023
    10. 'Weights' → logprob: -22.125036239624023

Token 554: '_line' (ID: 14418)
  Prédit: '(weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.6166715025901794
    2. 'weights' → logprob: -1.6166715621948242
    3. '.split' → logprob: -2.241671562194824
    4. '.weights' → logprob: -2.616671562194824
    5. '.readline' → logprob: -3.616671562194824
    6. '().' → logprob: -4.366671562194824
    7. '_weights' → logprob: -4.866671562194824
    8. '(lines' → logprob: -5.366671562194824
    9. '.' → logprob: -5.491671562194824
    10. '.findall' → logprob: -5.616671562194824

Token 555: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.008265982381999493
    2. '.strip' → logprob: -5.008265972137451
    3. '().' → logprob: -6.758265972137451
    4. '.' → logprob: -8.00826644897461
    5. ' .' → logprob: -10.13326644897461
    6. '.rstrip' → logprob: -11.50826644897461
    7. '.readline' → logprob: -12.63326644897461
    8. 'split' → logprob: -14.00826644897461
    9. '.findall' → logprob: -15.63326644897461
    10. ')' → logprob: -15.63326644897461

Token 556: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004692376125603914
    2. '()' → logprob: -5.504692554473877
    3. '()))
' → logprob: -7.754692554473877
    4. '(' → logprob: -9.379692077636719
    5. '())' → logprob: -10.004692077636719
    6. '())))' → logprob: -10.754692077636719
    7. '))' → logprob: -11.254692077636719
    8. '('' → logprob: -11.254692077636719
    9. '()))

' → logprob: -13.129692077636719
    10. '()));' → logprob: -13.254692077636719

Token 557: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007173155900090933
    2. '<|end|>' → logprob: -7.8757171630859375
    3. '           ' → logprob: -9.250717163085938
    4. '
' → logprob: -9.250717163085938
    5. '                   ' → logprob: -9.500717163085938
    6. '                
' → logprob: -10.625717163085938
    7. '<|end|>' → logprob: -11.250717163085938
    8. '              ' → logprob: -11.250717163085938
    9. '       ' → logprob: -12.250717163085938
    10. '                ' → logprob: -12.625717163085938

Token 558: ' idx' (ID: 14016)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03641032800078392
    2. 'idx' (adapté à ' idx') → logprob: -3.411410331726074
    3. ' idx' → logprob: -6.911410331726074
    4. '
' → logprob: -7.161410331726074
    5. '                   ' → logprob: -7.911410331726074
    6. '           ' → logprob: -8.286410331726074
    7. '                
' → logprob: -8.411410331726074
    8. '	idx' → logprob: -10.661410331726074
    9. '```' → logprob: -11.161410331726074
    10. '       ' → logprob: -11.161410331726074

Token 559: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04858986660838127
    2. ' +=' → logprob: -3.0485899448394775
    3. ']+=' → logprob: -13.923589706420898
    4. '           ' → logprob: -14.048589706420898
    5. '=' → logprob: -15.048589706420898
    6. '+' → logprob: -15.173589706420898
    7. '   ' → logprob: -16.2985897064209
    8. '               ' → logprob: -16.4235897064209
    9. '```' → logprob: -17.2985897064209
    10. '            ' → logprob: -17.6735897064209

Token 560: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018852073117159307
    2. '0' → logprob: -8.625188827514648
    3. ' ' → logprob: -11.625188827514648
    4. '   ' → logprob: -18.87518882751465
    5. 'n' → logprob: -20.12518882751465
    6. '
' → logprob: -20.25018882751465
    7. '           ' → logprob: -20.93768882751465
    8. '2' → logprob: -21.18768882751465
    9. '```' → logprob: -21.18768882751465
    10. '１' → logprob: -21.56268882751465

Token 561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -14.625000953674316
    3. ' ' → logprob: -17.25
    4. '１' → logprob: -22.75
    5. '2' → logprob: -22.875
    6. '   ' → logprob: -23.375
    7. '۱' → logprob: -24.5
    8. '
' → logprob: -24.625
    9. 'n' → logprob: -24.75
    10. '```' → logprob: -24.875

Token 562: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011330705601722002
    2. '<|end|>' → logprob: -7.376132965087891
    3. '           ' → logprob: -8.12613296508789
    4. '                
' → logprob: -9.37613296508789
    5. 'datasets' → logprob: -9.50113296508789
    6. '
' → logprob: -11.50113296508789
    7. ' datasets' → logprob: -11.87613296508789
    8. '            
' → logprob: -12.37613296508789
    9. '                   ' → logprob: -12.37613296508789
    10. '              ' → logprob: -12.62613296508789

Token 563: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06860388070344925
    2. 'datasets' → logprob: -2.818603992462158
    3. '           ' → logprob: -5.193603992462158
    4. ' datasets' → logprob: -7.068603992462158
    5. '<|end|>' → logprob: -9.568603515625
    6. '.datasets' → logprob: -9.818603515625
    7. 'd' → logprob: -10.568603515625
    8. '                   ' → logprob: -11.443603515625
    9. '       ' → logprob: -11.693603515625
    10. '```' → logprob: -11.818603515625

Token 564: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.0010403135092929006
    2. '               ' → logprob: -7.376040458679199
    3. ' datasets' → logprob: -8.2510404586792
    4. '           ' → logprob: -8.8760404586792
    5. '.datasets' → logprob: -11.7510404586792
    6. '
' → logprob: -14.0010404586792
    7. 'dat' → logprob: -14.1260404586792
    8. 'd' → logprob: -14.1260404586792
    9. 'for' → logprob: -14.3760404586792
    10. '   ' → logprob: -14.7510404586792

Token 565: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031847211066633463
    2. '.' → logprob: -5.753184795379639
    3. '.app' → logprob: -13.00318431854248
    4. '           ' → logprob: -13.87818431854248
    5. '.Append' → logprob: -14.25318431854248
    6. '.ap' → logprob: -14.62818431854248
    7. '.extend' → logprob: -14.62818431854248
    8. ' .' → logprob: -14.62818431854248
    9. '​.' → logprob: -14.62818431854248
    10. 'append' → logprob: -14.87818431854248

Token 566: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -4.727905979962088e-05
    2. 'weights' → logprob: -10.00004768371582
    3. '(weight' → logprob: -13.75004768371582
    4. '(' → logprob: -14.62504768371582
    5. '((' → logprob: -16.12504768371582
    6. ' (' → logprob: -17.12504768371582
    7. ' weights' → logprob: -17.50004768371582
    8. '   ' → logprob: -17.50004768371582
    9. '([' → logprob: -17.75004768371582
    10. '(
' → logprob: -18.50004768371582

Token 567: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005522481165826321
    2. '           ' → logprob: -5.63052225112915
    3. ')
' → logprob: -6.38052225112915
    4. '<|end|>' → logprob: -8.880522727966309
    5. ')return' → logprob: -10.380522727966309
    6. '       ' → logprob: -10.380522727966309
    7. '               ' → logprob: -11.255522727966309
    8. '<|end|>' → logprob: -12.255522727966309
    9. '
' → logprob: -14.005522727966309
    10. ' )' → logprob: -14.130522727966309

Token 568: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2809241712093353
    2. '<|end|>' → logprob: -1.5309242010116577
    3. '       ' → logprob: -4.030924320220947
    4. '
' → logprob: -5.030924320220947
    5. '<|end|>' → logprob: -6.780924320220947
    6. 'return' → logprob: -7.030924320220947
    7. ' return' → logprob: -8.280923843383789
    8. '   ' → logprob: -8.280923843383789
    9. '	return' → logprob: -8.280923843383789
    10. '            
' → logprob: -8.405923843383789

Token 569: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026317255571484566
    2. '       ' → logprob: -4.026317119598389
    3. 'return' (adapté à ' return') → logprob: -5.401317119598389
    4. ' return' → logprob: -5.651317119598389
    5. '   ' → logprob: -9.526317596435547
    6. '               ' → logprob: -10.901317596435547
    7. '
' → logprob: -12.401317596435547
    8. '	return' → logprob: -12.526317596435547
    9. '<|end|>' → logprob: -12.651317596435547
    10. '          ' → logprob: -12.901317596435547

Token 570: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -9.65101717156358e-05
    2. ' datasets' → logprob: -9.250096321105957
    3. '.datasets' → logprob: -15.000096321105957
    4. 'dataset' → logprob: -17.125097274780273
    5. 'dat' → logprob: -18.250097274780273
    6. 'd' → logprob: -18.375097274780273
    7. 'atasets' → logprob: -18.625097274780273
    8. 'datas' → logprob: -18.875097274780273
    9. 'data' → logprob: -20.125097274780273
    10. '```' → logprob: -20.625097274780273

Token 571: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: ' @' (ID: 759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -9.674858301877975e-05
    2. 'classmethod' → logprob: -9.250096321105957
    3. 'static' → logprob: -15.000096321105957
    4. 'dat' → logprob: -15.375096321105957
    5. 'property' → logprob: -17.125097274780273
    6. '@' → logprob: -21.000097274780273
    7. ' static' → logprob: -22.000097274780273
    8. '__' → logprob: -23.250097274780273
    9. 'Static' → logprob: -23.250097274780273
    10. 'stat' → logprob: -24.000097274780273

Token 575: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06691617518663406
    2. '   ' → logprob: -3.0669162273406982
    3. '
' → logprob: -4.191915988922119
    4. ' def' → logprob: -5.816915988922119
    5. '	def' → logprob: -9.941916465759277
    6. '    
' → logprob: -11.691916465759277
    7. '  
' → logprob: -12.941916465759277
    8. ' ' → logprob: -13.191916465759277
    9. '  ' → logprob: -13.441916465759277
    10. '       ' → logprob: -13.441916465759277

Token 576: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003623235272243619
    2. '   ' → logprob: -5.753623008728027
    3. ' def' → logprob: -7.753623008728027
    4. '
' → logprob: -11.128623008728027
    5. '	def' → logprob: -14.003623008728027
    6. ' ' → logprob: -14.253623008728027
    7. '  ' → logprob: -16.003623962402344
    8. '       ' → logprob: -18.003623962402344
    9. '    
' → logprob: -18.253623962402344
    10. '```' → logprob: -18.878623962402344

Token 577: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00020425561524461955
    2. ' def' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.625204086303711
    4. '
' → logprob: -15.625204086303711
    5. 'classmethod' → logprob: -16.75020408630371
    6. '  ' → logprob: -18.00020408630371
    7. 'staticmethod' → logprob: -18.12520408630371
    8. 'class' → logprob: -18.75020408630371
    9. 'property' → logprob: -19.12520408630371
    10. ' ' → logprob: -19.37520408630371

Token 578: ' run' (ID: 2461)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7742621898651123
    2. 'run' → logprob: -1.1492621898651123
    3. 'play' → logprob: -1.6492621898651123
    4. 'solve' → logprob: -3.6492621898651123
    5. 'def' → logprob: -6.774262428283691
    6. 'from' → logprob: -7.524262428283691
    7. 'read' → logprob: -7.649262428283691
    8. 'parse' → logprob: -7.774262428283691
    9. ' main' → logprob: -7.899262428283691
    10. ' play' → logprob: -8.649262428283691

Token 579: '_solver' (ID: 139123)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.3647964596748352
    2. '(' → logprob: -2.1147964000701904
    3. '():' → logprob: -2.1147964000701904
    4. '(cls' → logprob: -3.8647964000701904
    5. '(args' → logprob: -4.2397966384887695
    6. '(self' → logprob: -4.3647966384887695
    7. '():
' → logprob: -4.8647966384887695
    8. '(input' → logprob: -6.3647966384887695
    9. '(line' → logprob: -6.6147966384887695
    10. '(
' → logprob: -6.6147966384887695

Token 580: '(weights' (ID: 154124)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0011448607547208667
    2. '(cls' → logprob: -7.751144886016846
    3. '(' → logprob: -8.001144409179688
    4. '   ' → logprob: -9.001144409179688
    5. '(line' → logprob: -9.876144409179688
    6. '():' → logprob: -10.251144409179688
    7. '(input' → logprob: -10.251144409179688
    8. '(self' → logprob: -10.376144409179688
    9. '(inputs' → logprob: -10.626144409179688
    10. '(args' → logprob: -10.876144409179688

Token 581: '_list' (ID: 4162)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5766003131866455
    2. '):
' → logprob: -0.8266003131866455
    3. '):
' → logprob: -7.951600074768066
    4. ')' → logprob: -8.826600074768066
    5. '   ' → logprob: -9.201600074768066
    6. ':' → logprob: -10.076600074768066
    7. '):

' → logprob: -12.076600074768066
    8. '       ' → logprob: -12.576600074768066
    9. ' ):' → logprob: -12.576600074768066
    10. ',' → logprob: -12.951600074768066

Token 582: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038168519735336304
    2. '):
' → logprob: -3.288168430328369
    3. ')' → logprob: -9.788168907165527
    4. '   ' → logprob: -10.288168907165527
    5. '):
' → logprob: -11.038168907165527
    6. ',' → logprob: -11.413168907165527
    7. ':' → logprob: -12.163168907165527
    8. '       ' → logprob: -13.413168907165527
    9. ' ):' → logprob: -13.913168907165527
    10. '):

' → logprob: -14.038168907165527

Token 583: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04143194854259491
    2. 'stack' → logprob: -3.7914319038391113
    3. 'results' → logprob: -5.166431903839111
    4. '   ' → logprob: -5.791431903839111
    5. ' stack' → logprob: -5.916431903839111
    6. ' results' → logprob: -6.166431903839111
    7. ' stacks' → logprob: -6.291431903839111
    8. 'blocks' → logprob: -7.041431903839111
    9. 'result' → logprob: -7.291431903839111
    10. ' blocks' → logprob: -8.29143238067627

Token 584: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.12151344120502472
    2. ' results' → logprob: -2.2465133666992188
    3. '       ' → logprob: -6.371513366699219
    4. 'result' → logprob: -6.371513366699219
    5. '   ' → logprob: -6.871513366699219
    6. 'st' → logprob: -7.121513366699219
    7. 'blocks' → logprob: -7.121513366699219
    8. 'max' → logprob: -7.371513366699219
    9. 'all' → logprob: -7.371513366699219
    10. 'best' → logprob: -8.121513366699219

Token 585: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759506821632385
    2. ' =' → logprob: -0.8259506821632385
    3. '=[]' → logprob: -11.450950622558594
    4. '=[]
' → logprob: -15.325950622558594
    5. '   ' → logprob: -16.450950622558594
    6. ' ' → logprob: -16.575950622558594
    7. '＝' → logprob: -16.700950622558594
    8. '[]' → logprob: -17.075950622558594
    9. ' =[' → logprob: -17.325950622558594
    10. ':' → logprob: -17.825950622558594

Token 586: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00468371482565999
    2. '[]
' → logprob: -5.754683494567871
    3. ' []' → logprob: -6.504683494567871
    4. ' []
' → logprob: -12.004683494567871
    5. '[' → logprob: -13.129683494567871
    6. '[]

' → logprob: -15.879683494567871
    7. '   ' → logprob: -17.129684448242188
    8. '[]"' → logprob: -17.254684448242188
    9. '[]}' → logprob: -17.254684448242188
    10. '[]>' → logprob: -17.379684448242188

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08597513288259506
    2. ' for' → logprob: -2.585975170135498
    3. 'for' → logprob: -5.460975170135498
    4. '   ' → logprob: -6.210975170135498
    5. '	for' → logprob: -8.08597469329834
    6. '        
' → logprob: -9.21097469329834
    7. '           ' → logprob: -9.33597469329834
    8. '
' → logprob: -9.71097469329834
    9. '        ' → logprob: -9.71097469329834
    10. '    ' → logprob: -9.83597469329834

Token 588: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0029319413006305695
    2. ' for' → logprob: -5.877932071685791
    3. '       ' → logprob: -9.002931594848633
    4. '   ' → logprob: -12.752931594848633
    5. 'stack' → logprob: -14.252931594848633
    6. '```' → logprob: -15.127931594848633
    7. '	for' → logprob: -15.752931594848633
    8. 'from' → logprob: -16.877931594848633
    9. '           ' → logprob: -18.127931594848633
    10. '``' → logprob: -18.252931594848633

Token 589: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.00030412263004109263
    2. ' weights' → logprob: -8.125304222106934
    3. '   ' → logprob: -12.000304222106934
    4. 'weight' → logprob: -14.000304222106934
    5. 'w' → logprob: -14.125304222106934
    6. '       ' → logprob: -16.500303268432617
    7. '(weights' → logprob: -17.500303268432617
    8. 'ws' → logprob: -17.625303268432617
    9. 'wt' → logprob: -17.625303268432617
    10. '.weights' → logprob: -17.750303268432617

Token 590: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47410276532173157
    2. 'in' → logprob: -0.9741027355194092
    3. '   ' → logprob: -11.599102973937988
    4. '_in' → logprob: -11.724102973937988
    5. '	in' → logprob: -12.974102973937988
    6. ' ' → logprob: -13.099102973937988
    7. '    ' → logprob: -13.599102973937988
    8. '  ' → logprob: -14.099102973937988
    9. ')' → logprob: -14.849102973937988
    10. '
' → logprob: -14.974102973937988

Token 591: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.005936739966273308
    2. ' weights' → logprob: -5.130936622619629
    3. '   ' → logprob: -12.505936622619629
    4. 'weight' → logprob: -13.005936622619629
    5. '(weights' → logprob: -14.130936622619629
    6. '       ' → logprob: -14.380936622619629
    7. '.weights' → logprob: -15.255936622619629
    8. '_weights' → logprob: -15.630936622619629
    9. 'weig' → logprob: -15.880936622619629
    10. '
' → logprob: -15.880936622619629

Token 592: '_list' (ID: 4162)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0504511296749115
    2. ':' → logprob: -3.3004510402679443
    3. '           ' → logprob: -5.675451278686523
    4. 'O' → logprob: -5.800451278686523
    5. '       ' → logprob: -5.800451278686523
    6. '   ' → logprob: -6.550451278686523
    7. '):
' → logprob: -7.300451278686523
    8. '[' → logprob: -8.675451278686523
    9. ':
' → logprob: -10.050451278686523
    10. '：
' → logprob: -10.050451278686523

Token 593: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26671844720840454
    2. ':' → logprob: -1.5167183876037598
    3. '           ' → logprob: -4.39171838760376
    4. '):
' → logprob: -6.64171838760376
    5. ',' → logprob: -7.51671838760376
    6. '       ' → logprob: -8.391718864440918
    7. ' :
' → logprob: -9.016718864440918
    8. '   ' → logprob: -11.016718864440918
    9. '):' → logprob: -11.141718864440918
    10. ':

' → logprob: -11.391718864440918

Token 594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16263721883296967
    2. 'stack' → logprob: -2.287637233734131
    3. 'blocks' → logprob: -4.037637233734131
    4. ' blocks' → logprob: -4.287637233734131
    5. ' stack' → logprob: -4.537637233734131
    6. '       ' → logprob: -5.287637233734131
    7. '   ' → logprob: -7.287637233734131
    8. 'block' → logprob: -8.412636756896973
    9. ' block' → logprob: -9.037636756896973
    10. '_blocks' → logprob: -9.162636756896973

Token 595: ' blocks' (ID: 18125)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.9234511256217957
    2. 'blocks' (adapté à ' blocks') → logprob: -1.0484511852264404
    3. ' blocks' → logprob: -1.6734511852264404
    4. ' stack' → logprob: -3.0484511852264404
    5. '           ' → logprob: -4.423450946807861
    6. 'initial' → logprob: -5.923450946807861
    7. ' initial' → logprob: -6.298450946807861
    8. 'block' → logprob: -8.04845142364502
    9. '       ' → logprob: -8.29845142364502
    10. '   ' → logprob: -9.67345142364502

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132708668708801
    2. '=' → logprob: -1.3132708072662354
    3. '   ' → logprob: -11.813270568847656
    4. '=[' → logprob: -14.063270568847656
    5. '    ' → logprob: -15.438270568847656
    6. '=[]' → logprob: -15.563270568847656
    7. ' =[' → logprob: -15.813270568847656
    8. '_blocks' → logprob: -16.188270568847656
    9. ' ' → logprob: -16.688270568847656
    10. '=[]
' → logprob: -17.063270568847656

Token 597: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01347301434725523
    2. ' [' → logprob: -4.763473033905029
    3. '[D' → logprob: -5.388473033905029
    4. '[
' → logprob: -9.263472557067871
    5. 'Dar' → logprob: -9.888472557067871
    6. '           ' → logprob: -10.138472557067871
    7. '[class' → logprob: -10.138472557067871
    8. '   ' → logprob: -11.138472557067871
    9. '[self' → logprob: -11.638472557067871
    10. '       ' → logprob: -12.138472557067871

Token 598: 'Dar' (ID: 64136)
  Prédit: 'Dar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dar' → logprob: -3.011373155459296e-05
    2. ' Dar' → logprob: -10.500030517578125
    3. '           ' → logprob: -13.875030517578125
    4. '       ' → logprob: -14.000030517578125
    5. '   ' → logprob: -14.375030517578125
    6. 'class' → logprob: -16.750030517578125
    7. 'dar' → logprob: -16.875030517578125
    8. '               ' → logprob: -17.000030517578125
    9. '         ' → logprob: -17.875030517578125
    10. '     ' → logprob: -18.375030517578125

Token 599: 'uma' (ID: 5669)
  Prédit: 'uma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uma' → logprob: -5.080963092041202e-06
    2. 'ma' → logprob: -13.125004768371582
    3. 'um' → logprob: -13.750004768371582
    4. 'u' → logprob: -14.500004768371582
    5. 'Uma' → logprob: -14.500004768371582
    6. 'umas' → logprob: -15.750004768371582
    7. 'ума' → logprob: -16.1250057220459
    8. 'urma' → logprob: -16.5000057220459
    9. 'D' → logprob: -16.7500057220459
    10. 'Ma' → logprob: -17.3750057220459

Token 600: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -14.625000953674316
    3. ' O' → logprob: -15.875000953674316
    4. '       ' → logprob: -16.062501907348633
    5. 'Ot' → logprob: -16.250001907348633
    6. 'О' → logprob: -16.562501907348633
    7. 'otos' → logprob: -16.812501907348633
    8. ' ' → logprob: -17.000001907348633
    9. '	O' → logprob: -17.062501907348633
    10. '`' → logprob: -17.187501907348633

Token 601: 'tos' (ID: 33712)
  Prédit: 'tos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tos' → logprob: -0.018771013244986534
    2. 'ts' → logprob: -4.143771171569824
    3. 'T' → logprob: -6.768771171569824
    4. 'O' → logprob: -6.768771171569824
    5. 't' → logprob: -8.268771171569824
    6. 'tas' → logprob: -9.518771171569824
    7. 'st' → logprob: -10.393771171569824
    8. 'stos' → logprob: -10.393771171569824
    9. 'tes' → logprob: -11.643771171569824
    10. 'to' → logprob: -11.893771171569824

Token 602: 'hi' (ID: 3686)
  Prédit: 'shi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shi' → logprob: -0.24525447189807892
    2. 'chi' → logprob: -1.8702545166015625
    3. 'hi' → logprob: -2.8702545166015625
    4. 'O' → logprob: -6.1202545166015625
    5. 'ti' → logprob: -7.2452545166015625
    6. 'i' → logprob: -7.4952545166015625
    7. '   ' → logprob: -7.4952545166015625
    8. 'Shi' → logprob: -7.7452545166015625
    9. 'thi' → logprob: -8.120254516601562
    10. 'し' → logprob: -8.620254516601562

Token 603: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -4.246537173457909e-06
    2. 'O' → logprob: -13.875003814697266
    3. '.Game' → logprob: -13.875003814697266
    4. 'Dar' → logprob: -14.125003814697266
    5. '   ' → logprob: -15.250003814697266
    6. 'game' → logprob: -15.375003814697266
    7. '<Game' → logprob: -15.375003814697266
    8. '_Game' → logprob: -15.875003814697266
    9. '
' → logprob: -16.000003814697266
    10. 'Block' → logprob: -16.125003814697266

Token 604: '.Block' (ID: 46007)
  Prédit: '.Block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Block' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -13.500001907348633
    3. '.Stack' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.375001907348633
    5. ' .' → logprob: -17.875001907348633
    6. '<Block' → logprob: -18.000001907348633
    7. '.Class' → logprob: -18.375001907348633
    8. '.Bl' → logprob: -18.375001907348633
    9. '	Block' → logprob: -18.625001907348633
    10. 'Block' → logprob: -19.500001907348633

Token 605: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.10023945569992065
    2. '(weight' → logprob: -2.3502395153045654
    3. '(' → logprob: -10.475239753723145
    4. 'w' → logprob: -13.350239753723145
    5. '(weights' → logprob: -14.225239753723145
    6. 'weight' → logprob: -14.600239753723145
    7. '(i' → logprob: -15.350239753723145
    8. '(x' → logprob: -15.600239753723145
    9. '(
' → logprob: -15.600239753723145
    10. '   ' → logprob: -15.975239753723145

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000194361709873192
    2. ',w' → logprob: -9.375194549560547
    3. ',i' → logprob: -9.500194549560547
    4. '=' → logprob: -11.125194549560547
    5. ' ,' → logprob: -11.750194549560547
    6. ')' → logprob: -12.625194549560547
    7. 't' → logprob: -13.500194549560547
    8. 'eight' → logprob: -13.500194549560547
    9. 'e' → logprob: -13.875194549560547
    10. 'ight' → logprob: -14.250194549560547

Token 607: ' pos' (ID: 1253)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08685903251171112
    2. 'pos' → logprob: -2.5868589878082275
    3. 'idx' → logprob: -4.836859226226807
    4. 'p' → logprob: -12.961858749389648
    5. ' pos' → logprob: -13.461858749389648
    6. ' i' → logprob: -13.711858749389648
    7. ' idx' → logprob: -14.211858749389648
    8. 'index' → logprob: -17.33685874938965
    9. 'ix' → logprob: -18.08685874938965
    10. '   ' → logprob: -18.08685874938965

Token 608: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44043388962745667
    2. '=' → logprob: -1.0654338598251343
    3. '=i' → logprob: -5.440433979034424
    4. 'pos' → logprob: -5.940433979034424
    5. 'i' → logprob: -6.315433979034424
    6. 'ition' → logprob: -7.690433979034424
    7. ',' → logprob: -7.690433979034424
    8. ',pos' → logprob: -7.815433979034424
    9. 'osition' → logprob: -8.065433502197266
    10. ')
' → logprob: -8.315433502197266

Token 609: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08856336027383804
    2. 'for' → logprob: -2.8385634422302246
    3. '           ' → logprob: -3.7135634422302246
    4. '            ' → logprob: -6.713563442230225
    5. ')' → logprob: -7.963563442230225
    6. '               ' → logprob: -8.713562965393066
    7. '	for' → logprob: -10.088562965393066
    8. ' in' → logprob: -11.088562965393066
    9. '	           ' → logprob: -11.463562965393066
    10. ',' → logprob: -11.588562965393066

Token 610: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0005530327325686812
    2. ' pos' → logprob: -7.500553131103516
    3. '	pos' → logprob: -17.375553131103516
    4. ',pos' → logprob: -18.250553131103516
    5. 'position' → logprob: -19.000553131103516
    6. '(pos' → logprob: -19.125553131103516
    7. 'pose' → logprob: -20.500553131103516
    8. ',' → logprob: -20.750553131103516
    9. '_pos' → logprob: -21.250553131103516
    10. 'posa' → logprob: -21.500553131103516

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19412605464458466
    2. ' in' → logprob: -1.819126009941101
    3. 'in' → logprob: -4.319126129150391
    4. ',pos' → logprob: -7.694126129150391
    5. ' ,' → logprob: -8.19412612915039
    6. ',w' → logprob: -8.94412612915039
    7. 'pos' → logprob: -9.94412612915039
    8. 'w' → logprob: -10.19412612915039
    9. ' ' → logprob: -12.56912612915039
    10. ',in' → logprob: -12.56912612915039

Token 612: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023362644016742706
    2. ' w' → logprob: -3.773362636566162
    3. ' (' → logprob: -10.27336311340332
    4. ' in' → logprob: -10.52336311340332
    5. '(w' → logprob: -10.77336311340332
    6. 'enumer' → logprob: -10.89836311340332
    7. ',w' → logprob: -11.89836311340332
    8. 'weight' → logprob: -12.77336311340332
    9. 'in' → logprob: -13.02336311340332
    10. '_w' → logprob: -13.39836311340332

Token 613: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22542423009872437
    2. 'in' → logprob: -1.6004242897033691
    3. '	in' → logprob: -12.600423812866211
    4. ' ' → logprob: -13.475423812866211
    5. 'n' → logprob: -13.600423812866211
    6. 'import' → logprob: -13.725423812866211
    7. 'inthe' → logprob: -14.100423812866211
    8. ')' → logprob: -14.100423812866211
    9. '<|end|>' → logprob: -14.975423812866211
    10. 'ind' → logprob: -15.225423812866211

Token 614: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.003178306156769395
    2. ' enumerate' → logprob: -5.753178119659424
    3. 'in' → logprob: -14.628178596496582
    4. 'enum' → logprob: -16.503177642822266
    5. 'en' → logprob: -16.628177642822266
    6. '```' → logprob: -16.628177642822266
    7. '
' → logprob: -17.003177642822266
    8. ' in' → logprob: -17.878177642822266
    9. 'enqueue' → logprob: -18.628177642822266
    10. '.enumer' → logprob: -19.378177642822266

Token 615: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.16110871732234955
    2. 'weights' → logprob: -1.9111087322235107
    3. ' weights' → logprob: -7.036108493804932
    4. '(weight' → logprob: -12.66110897064209
    5. 'weight' → logprob: -14.78610897064209
    6. '(w' → logprob: -14.91110897064209
    7. '.weights' → logprob: -15.03610897064209
    8. '_weights' → logprob: -16.036108016967773
    9. ')' → logprob: -16.286108016967773
    10. ' (' → logprob: -16.411108016967773

Token 616: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0054148235358297825
    2. ')' → logprob: -5.755414962768555
    3. ')]
' → logprob: -6.505414962768555
    4. ']' → logprob: -7.255414962768555
    5. '           ' → logprob: -10.630414962768555
    6. ')
' → logprob: -12.755414962768555
    7. ']
' → logprob: -13.005414962768555
    8. '       ' → logprob: -13.505414962768555
    9. ' )' → logprob: -14.505414962768555
    10. ')]
' → logprob: -14.505414962768555

Token 617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033710941672325134
    2. 'stack' → logprob: -4.033710956573486
    3. '       ' → logprob: -4.908710956573486
    4. ' stack' → logprob: -5.158710956573486
    5. '
' → logprob: -7.658710956573486
    6. '            ' → logprob: -8.408710479736328
    7. '<|end|>' → logprob: -8.408710479736328
    8. '	stack' → logprob: -8.408710479736328
    9. ')' → logprob: -8.533710479736328
    10. '               ' → logprob: -8.783710479736328

Token 618: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0015139080351218581
    2. ' stack' → logprob: -6.751513957977295
    3. 'initial' → logprob: -8.251513481140137
    4. '           ' → logprob: -9.626513481140137
    5. 'start' → logprob: -11.751513481140137
    6. ' initial' → logprob: -12.751513481140137
    7. 'game' → logprob: -13.376513481140137
    8. 'init' → logprob: -13.376513481140137
    9. 'solver' → logprob: -13.376513481140137
    10. '   ' → logprob: -15.251513481140137

Token 619: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931503415107727
    2. ' =' → logprob: -0.6931503415107727
    3. '   ' → logprob: -12.943150520324707
    4. ' ' → logprob: -15.818150520324707
    5. '=D' → logprob: -16.06814956665039
    6. '    ' → logprob: -16.19314956665039
    7. '=
' → logprob: -16.31814956665039
    8. 'er' → logprob: -16.44314956665039
    9. '       ' → logprob: -16.56814956665039
    10. 's' → logprob: -16.56814956665039

Token 620: ' Dar' (ID: 17214)
  Prédit: 'Dar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dar' → logprob: -3.547789674485102e-05
    2. ' Dar' → logprob: -10.250035285949707
    3. 'dar' → logprob: -18.375036239624023
    4. 'D' → logprob: -19.250036239624023
    5. 'DAR' → logprob: -21.000036239624023
    6. '   ' → logprob: -21.375036239624023
    7. 'Dan' → logprob: -22.625036239624023
    8. 'Dal' → logprob: -23.250036239624023
    9. ' dar' → logprob: -23.625036239624023
    10. 'Da' → logprob: -23.750036239624023

Token 621: 'uma' (ID: 5669)
  Prédit: 'uma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uma' → logprob: -5.438573680294212e-06
    2. 'ma' → logprob: -12.375005722045898
    3. 'um' → logprob: -14.875005722045898
    4. 'u' → logprob: -15.500005722045898
    5. 'Uma' → logprob: -16.2500057220459
    6. 'ума' → logprob: -16.2500057220459
    7. 'ama' → logprob: -16.6250057220459
    8. 'umas' → logprob: -17.0000057220459
    9. '   ' → logprob: -17.7500057220459
    10. 'una' → logprob: -18.2500057220459

Token 622: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -4.246537173457909e-06
    2. 'Dar' → logprob: -13.875003814697266
    3. 'Game' → logprob: -14.062503814697266
    4. 'otos' → logprob: -14.562503814697266
    5. 'D' → logprob: -15.375003814697266
    6. ' Dar' → logprob: -15.687503814697266
    7. '   ' → logprob: -15.750003814697266
    8. 'Ot' → logprob: -15.875003814697266
    9. 'О' → logprob: -15.937503814697266
    10. 'ot' → logprob: -15.937503814697266

Token 623: 'tos' (ID: 33712)
  Prédit: 'tos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tos' → logprob: -0.19525963068008423
    2. 'ts' → logprob: -2.3202595710754395
    3. 'O' → logprob: -2.9452595710754395
    4. 'T' → logprob: -4.3202595710754395
    5. 'st' → logprob: -5.4452595710754395
    6. 'shi' → logprob: -5.6952595710754395
    7. 'sh' → logprob: -6.6952595710754395
    8. 'tes' → logprob: -6.8202595710754395
    9. 'te' → logprob: -6.9452595710754395
    10. 'sti' → logprob: -7.5702595710754395

Token 624: 'hi' (ID: 3686)
  Prédit: 'hi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.0023855185136198997
    2. 'shi' → logprob: -6.25238561630249
    3. 'i' → logprob: -8.502385139465332
    4. 'h' → logprob: -9.002385139465332
    5. 'Hi' → logprob: -10.127385139465332
    6. 'chi' → logprob: -11.127385139465332
    7. '   ' → logprob: -11.252385139465332
    8. 'Game' → logprob: -11.252385139465332
    9. 'Shi' → logprob: -11.877385139465332
    10. 'his' → logprob: -12.127385139465332

Token 625: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -3.9888433093437925e-05
    2. 'O' → logprob: -10.500040054321289
    3. 'game' → logprob: -13.250040054321289
    4. 'Stack' → logprob: -13.250040054321289
    5. 'o' → logprob: -13.500040054321289
    6. '_game' → logprob: -13.875040054321289
    7. 'Games' → logprob: -14.250040054321289
    8. ' Game' → logprob: -14.250040054321289
    9. '_Game' → logprob: -14.375040054321289
    10. '<Game' → logprob: -14.500040054321289

Token 626: '.Stack' (ID: 84183)
  Prédit: '.Stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Stack' → logprob: -8.2994620242971e-06
    2. '.Block' → logprob: -12.000008583068848
    3. '.' → logprob: -13.500008583068848
    4. '.Game' → logprob: -15.250008583068848
    5. 'Stack' → logprob: -15.750008583068848
    6. '.S' → logprob: -16.50000762939453
    7. '.St' → logprob: -16.62500762939453
    8. ' .' → logprob: -17.12500762939453
    9. '(Stack' → logprob: -17.25000762939453
    10. '.D' → logprob: -17.87500762939453

Token 627: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: 0.0
    2. 'blocks' → logprob: -17.75
    3. ' (' → logprob: -19.625
    4. '(branch' → logprob: -20.375
    5. '.blocks' → logprob: -20.625
    6. '(Block' → logprob: -20.75
    7. '(b' → logprob: -20.875
    8. '(' → logprob: -21.25
    9. '(stack' → logprob: -21.25
    10. '(
' → logprob: -21.375

Token 628: 's' (ID: 82)
  Prédit: 'cks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cks' → logprob: -0.9594632983207703
    2. 'ocks' → logprob: -1.584463357925415
    3. 's' → logprob: -1.709463357925415
    4. 'blocks' → logprob: -1.709463357925415
    5. 'acks' → logprob: -3.459463357925415
    6. 'locks' → logprob: -4.209463119506836
    7. 'ks' → logprob: -6.209463119506836
    8. '(block' → logprob: -7.709463119506836
    9. '.blocks' → logprob: -7.834463119506836
    10. '   ' → logprob: -8.084463119506836

Token 629: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03883199021220207
    2. ')
' → logprob: -3.288831949234009
    3. '           ' → logprob: -7.163832187652588
    4. ')
' → logprob: -11.53883171081543
    5. '       ' → logprob: -12.66383171081543
    6. ')

' → logprob: -13.53883171081543
    7. '   ' → logprob: -14.91383171081543
    8. ' )' → logprob: -14.91383171081543
    9. ')`
' → logprob: -15.16383171081543
    10. ')`' → logprob: -15.16383171081543

Token 630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013702382566407323
    2. 'solver' → logprob: -7.251370429992676
    3. '       ' → logprob: -8.001370429992676
    4. 'results' → logprob: -9.126370429992676
    5. 'result' → logprob: -9.376370429992676
    6. '   ' → logprob: -9.751370429992676
    7. 's' → logprob: -10.876370429992676
    8. ' solver' → logprob: -11.001370429992676
    9. ' results' → logprob: -11.876370429992676
    10. 'solution' → logprob: -12.001370429992676

Token 631: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.0028946325182914734
    2. ' solver' → logprob: -5.877894401550293
    3. 'solution' → logprob: -10.252894401550293
    4. 'sol' → logprob: -10.502894401550293
    5. '           ' → logprob: -10.752894401550293
    6. 'result' → logprob: -12.877894401550293
    7. '       ' → logprob: -14.127894401550293
    8. 'solve' → logprob: -14.502894401550293
    9. 's' → logprob: -14.752894401550293
    10. '_solver' → logprob: -14.877894401550293

Token 632: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692883610725403
    2. '=' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.87692928314209
    4. '   ' → logprob: -15.12692928314209
    5. '_' → logprob: -16.751928329467773
    6. '.' → logprob: -17.501928329467773
    7. '  ' → logprob: -17.876928329467773
    8. '_instance' → logprob: -17.876928329467773
    9. '=new' → logprob: -18.126928329467773
    10. '    ' → logprob: -18.126928329467773

Token 633: ' Dar' (ID: 17214)
  Prédit: 'Dar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dar' → logprob: -0.0009115827269852161
    2. ' Dar' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.750911712646484
    4. ' ' → logprob: -19.250911712646484
    5. 'dar' → logprob: -19.875911712646484
    6. 'D' → logprob: -20.375911712646484
    7. '  ' → logprob: -20.625911712646484
    8. 'DAR' → logprob: -21.125911712646484
    9. '       ' → logprob: -21.250911712646484
    10. '	D' → logprob: -21.375911712646484

Token 634: 'uma' (ID: 5669)
  Prédit: 'uma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uma' → logprob: -6.2729995988775045e-06
    2. 'ma' → logprob: -12.250006675720215
    3. 'u' → logprob: -14.375006675720215
    4. 'um' → logprob: -14.750006675720215
    5. ' uma' → logprob: -16.3750057220459
    6. 'ума' → logprob: -16.3750057220459
    7. 'Uma' → logprob: -16.6250057220459
    8. 'umas' → logprob: -17.1250057220459
    9. 'ama' → logprob: -17.2500057220459
    10. 'una' → logprob: -18.1250057220459

Token 635: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.9361264946837764e-07
    2. 'Dar' → logprob: -17.0
    3. 'Ot' → logprob: -17.875
    4. ' O' → logprob: -18.3125
    5. '	O' → logprob: -18.5625
    6. 'О' → logprob: -18.6875
    7. ' Dar' → logprob: -19.6875
    8. 'Game' → logprob: -19.8125
    9. '_O' → logprob: -19.875
    10. 'otos' → logprob: -19.9375

Token 636: 'tos' (ID: 33712)
  Prédit: 'shi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shi' → logprob: -0.04503139108419418
    2. 'tos' → logprob: -3.5450313091278076
    3. 'O' → logprob: -4.795031547546387
    4. 't' → logprob: -5.920031547546387
    5. 'ts' → logprob: -6.420031547546387
    6. 'T' → logprob: -6.795031547546387
    7. 'sti' → logprob: -8.170031547546387
    8. 'oshi' → logprob: -8.670031547546387
    9. 'st' → logprob: -8.920031547546387
    10. 'sh' → logprob: -8.920031547546387

Token 637: 'hi' (ID: 3686)
  Prédit: 'hi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.025324562564492226
    2. 'shi' → logprob: -3.775324583053589
    3. 'i' → logprob: -7.02532434463501
    4. 'h' → logprob: -8.025324821472168
    5. 'chi' → logprob: -8.025324821472168
    6. 'sh' → logprob: -9.150324821472168
    7. 'Shi' → logprob: -9.275324821472168
    8. 'Hi' → logprob: -9.525324821472168
    9. 'his' → logprob: -9.900324821472168
    10. 'Game' → logprob: -10.525324821472168

Token 638: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -4.36574100604048e-06
    2. 'Dar' → logprob: -13.250004768371582
    3. '.Game' → logprob: -13.375004768371582
    4. 'O' → logprob: -15.500004768371582
    5. 'Solver' → logprob: -15.500004768371582
    6. '_game' → logprob: -15.875004768371582
    7. '_Game' → logprob: -15.875004768371582
    8. '<Game' → logprob: -16.375003814697266
    9. 'Games' → logprob: -16.625003814697266
    10. '	Game' → logprob: -17.250003814697266

Token 639: '.S' (ID: 1242)
  Prédit: '.S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.S' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.625005722045898
    3. ' .' → logprob: -14.375005722045898
    4. 'Solver' → logprob: -14.500005722045898
    5. '.Game' → logprob: -14.750005722045898
    6. '.Stack' → logprob: -15.750005722045898
    7. '.С' → logprob: -15.875005722045898
    8. '.Run' → logprob: -16.1250057220459
    9. '.Loader' → logprob: -16.1250057220459
    10. '.Handler' → logprob: -16.2500057220459

Token 640: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: 0.0
    2. 'solver' → logprob: -19.75
    3. 'over' → logprob: -20.125
    4. 'olve' → logprob: -20.25
    5. 'ol' → logprob: -20.5
    6. 'olvers' → logprob: -21.0
    7. 'o' → logprob: -21.125
    8. 'erver' → logprob: -21.75
    9. '```' → logprob: -21.75
    10. 'olution' → logprob: -22.0

Token 641: '(weights' (ID: 154124)
  Prédit: '(stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(stack' → logprob: -5.2166411478538066e-05
    2. 'stack' → logprob: -10.125052452087402
    3. '.stack' → logprob: -12.125052452087402
    4. '(' → logprob: -12.625052452087402
    5. '(Stack' → logprob: -13.875052452087402
    6. '           ' → logprob: -14.000052452087402
    7. '(st' → logprob: -14.875052452087402
    8. '   ' → logprob: -15.125052452087402
    9. '
' → logprob: -15.750052452087402
    10. '       ' → logprob: -16.000051498413086

Token 642: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0025961112696677446
    2. ')' → logprob: -6.002595901489258
    3. '(stack' → logprob: -9.752595901489258
    4. ').' → logprob: -10.252595901489258
    5. '           ' → logprob: -11.377595901489258
    6. ' )
' → logprob: -12.877595901489258
    7. 'stack' → logprob: -13.002595901489258
    8. ')
' → logprob: -13.002595901489258
    9. '       ' → logprob: -13.002595901489258
    10. '   ' → logprob: -13.377595901489258

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006993488408625126
    2. 'results' → logprob: -5.256993293762207
    3. ' results' → logprob: -7.006993293762207
    4. '
' → logprob: -7.381993293762207
    5. 'result' → logprob: -8.756993293762207
    6. '       ' → logprob: -10.506993293762207
    7. '            
' → logprob: -11.381993293762207
    8. '<|end|>' → logprob: -11.631993293762207
    9. '```' → logprob: -12.131993293762207
    10. ' result' → logprob: -12.381993293762207

Token 644: ' result' (ID: 1534)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.38375741243362427
    2. 'result' (adapté à ' result') → logprob: -1.6337573528289795
    3. ' results' → logprob: -2.5087573528289795
    4. ' result' → logprob: -3.7587573528289795
    5. 'removed' → logprob: -4.758757591247559
    6. 'max' → logprob: -5.008757591247559
    7. '           ' → logprob: -6.258757591247559
    8. ' max' → logprob: -7.008757591247559
    9. 'res' → logprob: -8.008757591247559
    10. ' removed' → logprob: -8.508757591247559

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042064756155014
    2. '=' → logprob: -3.2880420684814453
    3. '.append' → logprob: -15.663042068481445
    4. ' ' → logprob: -16.038042068481445
    5. 's' → logprob: -16.163042068481445
    6. '           ' → logprob: -16.538042068481445
    7. '   ' → logprob: -17.038042068481445
    8. '=result' → logprob: -17.538042068481445
    9. '    ' → logprob: -17.788042068481445
    10. ')' → logprob: -17.913042068481445

Token 646: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.0019291093340143561
    2. ' solver' → logprob: -6.25192928314209
    3. 'sol' → logprob: -14.50192928314209
    4. 's' → logprob: -18.126928329467773
    5. '_solver' → logprob: -18.501928329467773
    6. '   ' → logprob: -18.751928329467773
    7. 'result' → logprob: -18.876928329467773
    8. '           ' → logprob: -19.501928329467773
    9. '
' → logprob: -20.001928329467773
    10. 'Solver' → logprob: -20.126928329467773

Token 647: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -8.2994620242971e-06
    2. '.' → logprob: -11.875008583068848
    3. 'max' → logprob: -13.750008583068848
    4. ' .' → logprob: -16.75000762939453
    5. '	max' → logprob: -18.00000762939453
    6. '.maximum' → logprob: -18.37500762939453
    7. '.mainloop' → logprob: -19.00000762939453
    8. '.min' → logprob: -19.00000762939453
    9. '.ma' → logprob: -19.12500762939453
    10. '=max' → logprob: -19.25000762939453

Token 648: '_removed' (ID: 173812)
  Prédit: '_removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -1.9361264946837764e-07
    2. 'removed' → logprob: -16.0
    3. '_remove' → logprob: -17.625
    4. '_remaining' → logprob: -17.75
    5. '_' → logprob: -18.625
    6. 'Removed' → logprob: -18.75
    7. '_deleted' → logprob: -18.875
    8. '_received' → logprob: -20.25
    9. '_added' → logprob: -20.25
    10. '_return' → logprob: -20.5

Token 649: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -6.511406809295295e-06
    2. 'blocks' → logprob: -12.000006675720215
    3. '```' → logprob: -15.875006675720215
    4. '_removed' → logprob: -16.1250057220459
    5. 'Blocks' → logprob: -17.0000057220459
    6. '_stack' → logprob: -17.6250057220459
    7. '_' → logprob: -18.2500057220459
    8. 'removed' → logprob: -18.6250057220459
    9. ' blocks' → logprob: -19.0000057220459
    10. '_pairs' → logprob: -19.1250057220459

Token 650: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.500004768371582
    3. '(
' → logprob: -14.625004768371582
    4. '(st' → logprob: -15.125004768371582
    5. '(Stack' → logprob: -15.250004768371582
    6. ' (' → logprob: -16.2500057220459
    7. '(stock' → logprob: -17.7500057220459
    8. '(step' → logprob: -18.6250057220459
    9. '```' → logprob: -18.8750057220459
    10. '(start' → logprob: -18.8750057220459

Token 651: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5839627981185913
    2. ')
' → logprob: -0.8339627981185913
    3. '           ' → logprob: -4.833962917327881
    4. '       ' → logprob: -11.458962440490723
    5. ')
' → logprob: -11.458962440490723
    6. '   ' → logprob: -12.333962440490723
    7. '               ' → logprob: -12.833962440490723
    8. '()
' → logprob: -13.583962440490723
    9. '
' → logprob: -13.833962440490723
    10. ' )
' → logprob: -14.083962440490723

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003221150254830718
    2. '       ' → logprob: -8.875322341918945
    3. '   ' → logprob: -9.625322341918945
    4. '<|end|>' → logprob: -9.625322341918945
    5. 'results' → logprob: -10.875322341918945
    6. '
' → logprob: -11.250322341918945
    7. '            
' → logprob: -12.375322341918945
    8. '```' → logprob: -12.875322341918945
    9. '    
' → logprob: -13.000322341918945
    10. '               ' → logprob: -13.250322341918945

Token 653: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0011966594029217958
    2. ' results' → logprob: -6.75119686126709
    3. '           ' → logprob: -10.75119686126709
    4. '       ' → logprob: -12.62619686126709
    5. '	results' → logprob: -13.62619686126709
    6. '   ' → logprob: -15.12619686126709
    7. '.results' → logprob: -16.251195907592773
    8. '_results' → logprob: -16.376195907592773
    9. '               ' → logprob: -17.001195907592773
    10. '(results' → logprob: -17.251195907592773

Token 654: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026538874953985214
    2. '.' → logprob: -8.250265121459961
    3. '.extend' → logprob: -13.375265121459961
    4. '.ap' → logprob: -13.750265121459961
    5. '.app' → logprob: -13.875265121459961
    6. ' .' → logprob: -15.000265121459961
    7. '.add' → logprob: -16.37526512145996
    8. '.push' → logprob: -16.62526512145996
    9. '_append' → logprob: -17.37526512145996
    10. 'append' → logprob: -17.75026512145996

Token 655: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0002614550176076591
    2. 'result' → logprob: -8.250261306762695
    3. '(' → logprob: -15.750261306762695
    4. ' result' → logprob: -17.250261306762695
    5. '(results' → logprob: -19.250261306762695
    6. '=result' → logprob: -20.250261306762695
    7. ',result' → logprob: -20.750261306762695
    8. '_result' → logprob: -21.000261306762695
    9. '(res' → logprob: -21.125261306762695
    10. '(
' → logprob: -21.375261306762695

Token 656: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027200261130928993
    2. ')
' → logprob: -4.152200222015381
    3. '
' → logprob: -4.527200222015381
    4. '<|end|>' → logprob: -9.277200698852539
    5. '       ' → logprob: -9.527200698852539
    6. '    
' → logprob: -10.652200698852539
    7. ')return' → logprob: -10.652200698852539
    8. ' )' → logprob: -11.152200698852539
    9. '  
' → logprob: -11.527200698852539
    10. ' 
' → logprob: -11.652200698852539

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8615537285804749
    2. '
' → logprob: -1.36155366897583
    3. 'return' → logprob: -1.36155366897583
    4. '	return' → logprob: -2.98655366897583
    5. '   ' → logprob: -5.11155366897583
    6. ' return' → logprob: -5.48655366897583
    7. '	' → logprob: -6.11155366897583
    8. '        
' → logprob: -7.61155366897583
    9. '    
' → logprob: -7.73655366897583
    10. '```' → logprob: -7.86155366897583

Token 658: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020484323613345623
    2. '       ' → logprob: -7.002048492431641
    3. ' return' → logprob: -7.002048492431641
    4. '   ' → logprob: -8.75204849243164
    5. '	return' → logprob: -9.62704849243164
    6. '
' → logprob: -13.87704849243164
    7. '           ' → logprob: -15.25204849243164
    8. '	' → logprob: -15.50204849243164
    9. '<|end|>' → logprob: -16.12704849243164
    10. 'eturn' → logprob: -16.37704849243164

Token 659: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.00861456897109747
    2. ' results' → logprob: -4.758614540100098
    3. '	results' → logprob: -19.258615493774414
    4. '(results' → logprob: -19.883615493774414
    5. 'result' → logprob: -21.008615493774414
    6. '[' → logprob: -21.883615493774414
    7. '.results' → logprob: -22.883615493774414
    8. ' [' → logprob: -24.008615493774414
    9. 'Results' → logprob: -24.133615493774414
    10. '_results' → logprob: -24.508615493774414

Token 660: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 661: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 662: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.005239445250481367
    2. 'main' → logprob: -5.255239486694336
    3. ' run' → logprob: -12.755239486694336
    4. ' solve' → logprob: -13.630239486694336
    5. ' example' → logprob: -14.755239486694336
    6. ' parse' → logprob: -14.880239486694336
    7. ' test' → logprob: -15.005239486694336
    8. ' process' → logprob: -15.255239486694336
    9. ' dar' → logprob: -15.880239486694336
    10. 'solve' → logprob: -16.755239486694336

Token 663: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0683535037969705e-05
    2. '():
' → logprob: -11.62501049041748
    3. ' ():' → logprob: -13.37501049041748
    4. '()' → logprob: -16.000011444091797
    5. '():
' → logprob: -17.750011444091797
    6. '(' → logprob: -17.875011444091797
    7. ':' → logprob: -18.250011444091797
    8. '().' → logprob: -18.625011444091797
    9. '(":' → logprob: -18.750011444091797
    10. '()>' → logprob: -19.125011444091797

Token 664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007993770763278008
    2. ' import' → logprob: -5.382993698120117
    3. 'import' → logprob: -6.132993698120117
    4. ' lines' → logprob: -6.757993698120117
    5. '	import' → logprob: -10.757993698120117
    6. '   ' → logprob: -12.382993698120117
    7. ' input' → logprob: -12.632993698120117
    8. '	lines' → logprob: -12.882993698120117
    9. 'lines' → logprob: -13.632993698120117
    10. ' if' → logprob: -14.257993698120117

Token 665: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.20149919390678406
    2. ' import' → logprob: -1.7014992237091064
    3. '   ' → logprob: -10.201498985290527
    4. ' lines' → logprob: -10.326498985290527
    5. 'lines' → logprob: -11.076498985290527
    6. '	import' → logprob: -15.576498985290527
    7. 'input' → logprob: -15.826498985290527
    8. 'if' → logprob: -15.826498985290527
    9. 'from' → logprob: -16.201499938964844
    10. ' input' → logprob: -17.201499938964844

Token 666: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.048587825149297714
    2. ' sys' → logprob: -3.0485877990722656
    3. '=sys' → logprob: -15.048587799072266
    4. '	sys' → logprob: -16.548587799072266
    5. '(sys' → logprob: -18.548587799072266
    6. '.sys' → logprob: -19.173587799072266
    7. '_sys' → logprob: -19.298587799072266
    8. 'io' → logprob: -22.048587799072266
    9. 'stdin' → logprob: -22.048587799072266
    10. '```' → logprob: -22.048587799072266

Token 667: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019991323351860046
    2. ' lines' → logprob: -4.394991397857666
    3. '	lines' → logprob: -6.144991397857666
    4. '
' → logprob: -6.269991397857666
    5. 'lines' → logprob: -6.644991397857666
    6. '    
' → logprob: -6.644991397857666
    7. '_lines' → logprob: -7.894991397857666
    8. '(lines' → logprob: -8.394990921020508
    9. '<|end|>' → logprob: -9.519990921020508
    10. 'input' → logprob: -9.769990921020508

Token 668: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3602798283100128
    2. ' lines' → logprob: -1.3602797985076904
    3. 'lines' → logprob: -3.1102797985076904
    4. '	lines' → logprob: -6.7352800369262695
    5. '_lines' → logprob: -9.23528003692627
    6. '(lines' → logprob: -10.36028003692627
    7. 'input' → logprob: -12.48528003692627
    8. '   ' → logprob: -12.61028003692627
    9. '    
' → logprob: -12.73528003692627
    10. ' input' → logprob: -12.98528003692627

Token 669: ' input' (ID: 3422)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7084338068962097
    2. 'lines' → logprob: -0.7084338068962097
    3. '   ' → logprob: -4.208433628082275
    4. 'input' (adapté à ' input') → logprob: -8.583434104919434
    5. ' input' → logprob: -9.583434104919434
    6. '	lines' → logprob: -10.583434104919434
    7. '_lines' → logprob: -11.833434104919434
    8. 'inputs' → logprob: -12.458434104919434
    9. 'line' → logprob: -12.708434104919434
    10. '(lines' → logprob: -13.083434104919434

Token 670: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.03698018938302994
    2. '_data' → logprob: -3.411980152130127
    3. '_' → logprob: -6.411980152130127
    4. ' =' → logprob: -6.661980152130127
    5. '()' → logprob: -9.286980628967285
    6. '=' → logprob: -9.286980628967285
    7. '_line' → logprob: -9.411980628967285
    8. 'lines' → logprob: -9.786980628967285
    9. 'data' → logprob: -10.411980628967285
    10. '_list' → logprob: -11.286980628967285

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021670162677765
    2. ' =' → logprob: -2.3502166271209717
    3. '=sys' → logprob: -12.22521686553955
    4. '=[]' → logprob: -13.72521686553955
    5. '   ' → logprob: -13.85021686553955
    6. '＝' → logprob: -13.97521686553955
    7. '()' → logprob: -14.47521686553955
    8. ' =
' → logprob: -14.60021686553955
    9. ' ' → logprob: -15.22521686553955
    10. '=
' → logprob: -15.60021686553955

Token 672: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16022492945194244
    2. ' sys' → logprob: -1.9102249145507812
    3. '[' → logprob: -14.410224914550781
    4. '	sys' → logprob: -16.53522491455078
    5. '=sys' → logprob: -16.78522491455078
    6. '(sys' → logprob: -16.91022491455078
    7. ' [' → logprob: -17.03522491455078
    8. 'list' → logprob: -18.53522491455078
    9. '   ' → logprob: -18.78522491455078
    10. '_sys' → logprob: -20.41022491455078

Token 673: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001129602751461789
    2. 'stdin' → logprob: -9.375112533569336
    3. 'in' → logprob: -11.250112533569336
    4. '.argv' → logprob: -12.625112533569336
    5. 'din' → logprob: -13.125112533569336
    6. '.stdout' → logprob: -13.125112533569336
    7. '(stdin' → logprob: -13.500112533569336
    8. 'import' → logprob: -14.250112533569336
    9. '=sys' → logprob: -14.375112533569336
    10. '   ' → logprob: -14.375112533569336

Token 674: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.07243210822343826
    2. '.readline' → logprob: -3.072432041168213
    3. 'read' → logprob: -3.947432041168213
    4. '.' → logprob: -5.697432041168213
    5. '.read' → logprob: -7.072432041168213
    6. 'lines' → logprob: -10.447432518005371
    7. 'buffer' → logprob: -12.072432518005371
    8. '_read' → logprob: -12.197432518005371
    9. '```' → logprob: -13.072432518005371
    10. ' readline' → logprob: -13.322432518005371

Token 675: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011755822924897075
    2. '()' → logprob: -6.751175403594971
    3. 'lines' → logprob: -12.626175880432129
    4. '_lines' → logprob: -13.751175880432129
    5. '(' → logprob: -14.376175880432129
    6. '()
' → logprob: -15.376175880432129
    7. '()\' → logprob: -17.001174926757812
    8. ' ().' → logprob: -17.126174926757812
    9. 'split' → logprob: -17.626174926757812
    10. '()

' → logprob: -18.001174926757812

Token 676: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.25242987275123596
    2. 'split' → logprob: -1.5024298429489136
    3. 'read' → logprob: -7.752429962158203
    4. 'decode' → logprob: -9.877429962158203
    5. 'rstrip' → logprob: -10.877429962158203
    6. 'lines' → logprob: -14.252429962158203
    7. ' split' → logprob: -16.252429962158203
    8. ' strip' → logprob: -17.627429962158203
    9. 'str' → logprob: -18.002429962158203
    10. 'plit' → logprob: -18.002429962158203

Token 677: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0052350712940096855
    2. '()' → logprob: -5.255235195159912
    3. '()
' → logprob: -14.630234718322754
    4. '()\' → logprob: -14.630234718322754
    5. '('\' → logprob: -15.755234718322754
    6. '(' → logprob: -15.755234718322754
    7. 'split' → logprob: -16.63023567199707
    8. ' ().' → logprob: -17.25523567199707
    9. '()

' → logprob: -17.88023567199707
    10. '('' → logprob: -18.38023567199707

Token 678: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.875
    3. '(split' → logprob: -19.0
    4. 'spl' → logprob: -19.125
    5. 'decode' → logprob: -21.375
    6. 'sp' → logprob: -22.125
    7. 'strip' → logprob: -22.625
    8. 'rstrip' → logprob: -22.75
    9. '.split' → logprob: -23.125
    10. '```' → logprob: -23.125

Token 679: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.019631939008831978
    2. 'lines' → logprob: -4.019631862640381
    3. '("\' → logprob: -6.769631862640381
    4. '()' → logprob: -8.019632339477539
    5. '(' → logprob: -12.769632339477539
    6. '()
' → logprob: -14.894632339477539
    7. '('' → logprob: -15.019632339477539
    8. '()\' → logprob: -15.019632339477539
    9. ''\' → logprob: -17.39463233947754
    10. '(
' → logprob: -18.39463233947754

Token 680: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02334575727581978
    2. '\n' → logprob: -3.773345708847046
    3. 'lines' → logprob: -9.523345947265625
    4. '\' → logprob: -11.648345947265625
    5. ''\' → logprob: -11.773345947265625
    6. '
' → logprob: -11.898345947265625
    7. 'newline' → logprob: -13.023345947265625
    8. '('\' → logprob: -14.148345947265625
    9. '"\' → logprob: -14.273345947265625
    10. '```' → logprob: -16.273345947265625

Token 681: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0069724093191325665
    2. '')' → logprob: -5.256972312927246
    3. '   ' → logprob: -6.506972312927246
    4. ')
' → logprob: -8.506972312927246
    5. '")' → logprob: -10.381972312927246
    6. '')
' → logprob: -11.756972312927246
    7. ' )' → logprob: -13.506972312927246
    8. '`)' → logprob: -14.631972312927246
    9. ')
' → logprob: -15.131972312927246
    10. ')")' → logprob: -15.381972312927246

Token 682: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004621303640305996
    2. 'weights' → logprob: -5.629621505737305
    3. 'datasets' → logprob: -8.004621505737305
    4. ' weights' → logprob: -8.379621505737305
    5. '<|end|>' → logprob: -8.629621505737305
    6. 'lines' → logprob: -8.879621505737305
    7. ' lines' → logprob: -9.254621505737305
    8. '    
' → logprob: -11.754621505737305
    9. '```' → logprob: -11.754621505737305
    10. 'weight' → logprob: -12.254621505737305

Token 683: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.2522036135196686
    2. 'weights' → logprob: -1.5022035837173462
    3. 'data' → logprob: -8.627203941345215
    4. 'weight' → logprob: -10.127203941345215
    5. '   ' → logprob: -10.502203941345215
    6. 'dataset' → logprob: -11.252203941345215
    7. 'parsed' → logprob: -12.002203941345215
    8. 'datas' → logprob: -13.002203941345215
    9. ' datasets' → logprob: -13.127203941345215
    10. 'parser' → logprob: -13.502203941345215

Token 684: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692862749099731
    2. '=' → logprob: -2.1269285678863525
    3. '   ' → logprob: -15.751928329467773
    4. ' =
' → logprob: -15.751928329467773
    5. '=[]' → logprob: -16.001928329467773
    6. '＝' → logprob: -16.751928329467773
    7. ' ' → logprob: -17.001928329467773
    8. ')' → logprob: -17.376928329467773
    9. ',' → logprob: -17.376928329467773
    10. '<|end|>' → logprob: -17.626928329467773

Token 685: ' Dar' (ID: 17214)
  Prédit: 'Dar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dar' → logprob: -2.165027217415627e-05
    2. ' Dar' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.12502098083496
    4. 'dar' → logprob: -19.75002098083496
    5. '  ' → logprob: -20.12502098083496
    6. ' ' → logprob: -20.75002098083496
    7. 'Dat' → logprob: -21.62502098083496
    8. 'D' → logprob: -21.75002098083496
    9. 'DAR' → logprob: -21.75002098083496
    10. '    ' → logprob: -22.12502098083496

Token 686: 'uma' (ID: 5669)
  Prédit: 'uma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uma' → logprob: -0.005671495106071234
    2. 'Uma' → logprob: -5.505671501159668
    3. 'Ar' → logprob: -7.880671501159668
    4. 'Dar' → logprob: -8.130671501159668
    5. 'D' → logprob: -8.505671501159668
    6. 'um' → logprob: -8.505671501159668
    7. 'ma' → logprob: -8.755671501159668
    8. 'Ma' → logprob: -10.005671501159668
    9. 'ar' → logprob: -10.130671501159668
    10. '   ' → logprob: -10.130671501159668

Token 687: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.2664456789934775e-06
    2. 'otos' → logprob: -14.250000953674316
    3. 'OTOS' → logprob: -15.375000953674316
    4. 'Ot' → logprob: -15.750000953674316
    5. ' O' → logprob: -17.000001907348633
    6. 'О' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.250001907348633
    8. '
' → logprob: -18.500001907348633
    9. 'Dar' → logprob: -18.875001907348633
    10. '_O' → logprob: -19.375001907348633

Token 688: 'tos' (ID: 33712)
  Prédit: 'tos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tos' → logprob: -0.010360228829085827
    2. 'T' → logprob: -4.635360240936279
    3. 'ts' → logprob: -7.760360240936279
    4. 'stos' → logprob: -9.260359764099121
    5. 'O' → logprob: -10.010359764099121
    6. 't' → logprob: -11.010359764099121
    7. 'tes' → logprob: -12.510359764099121
    8. 'otos' → logprob: -12.760359764099121
    9. 'chos' → logprob: -13.010359764099121
    10. 'itos' → logprob: -13.260359764099121

Token 689: 'hi' (ID: 3686)
  Prédit: 'hi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.0028467215597629547
    2. 'chi' → logprob: -6.502846717834473
    3. 'shi' → logprob: -7.002846717834473
    4. 'h' → logprob: -8.502846717834473
    5. 'Hi' → logprob: -9.002846717834473
    6. 'ho' → logprob: -10.252846717834473
    7. '   ' → logprob: -10.377846717834473
    8. 'i' → logprob: -11.877846717834473
    9. 'O' → logprob: -12.627846717834473
    10. 'Shi' → logprob: -12.627846717834473

Token 690: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -2.45848218582978e-06
    2. '_game' → logprob: -14.00000286102295
    3. 'Games' → logprob: -14.50000286102295
    4. 'O' → logprob: -15.00000286102295
    5. 'game' → logprob: -15.12500286102295
    6. '_Game' → logprob: -15.87500286102295
    7. ' Game' → logprob: -16.250001907348633
    8. '<Game' → logprob: -16.375001907348633
    9. 'Dar' → logprob: -17.000001907348633
    10. '.Game' → logprob: -17.375001907348633

Token 691: '.Input' (ID: 22638)
  Prédit: '.Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Input' → logprob: -1.0445127372804563e-05
    2. 'Input' → logprob: -11.50001049041748
    3. '\Input' → logprob: -16.375009536743164
    4. '<Input' → logprob: -16.875009536743164
    5. '.INPUT' → logprob: -17.000009536743164
    6. '.' → logprob: -17.125009536743164
    7. ' .' → logprob: -17.375009536743164
    8. '.input' → logprob: -18.125009536743164
    9. '_Input' → logprob: -19.500009536743164
    10. '.I' → logprob: -19.500009536743164

Token 692: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. '_parser' → logprob: -17.25
    3. 'Parse' → logprob: -17.875
    4. 'parser' → logprob: -18.0
    5. '.Parser' → logprob: -19.0
    6. 'Parsed' → logprob: -19.875
    7. '(Parser' → logprob: -19.875
    8. ' Parser' → logprob: -20.125
    9. 'Parsing' → logprob: -20.875
    10. '-parser' → logprob: -20.875

Token 693: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -2.3319124011322856e-05
    2. '.' → logprob: -10.750022888183594
    3. '().' → logprob: -14.000022888183594
    4. '.run' → logprob: -14.500022888183594
    5. ' .' → logprob: -15.375022888183594
    6. '   ' → logprob: -16.125022888183594
    7. '```' → logprob: -16.875022888183594
    8. '.decode' → logprob: -17.125022888183594
    9. '{}.' → logprob: -17.500022888183594
    10. 'parse' → logprob: -17.875022888183594

Token 694: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.3856492842023727e-06
    2. 'input' → logprob: -14.000000953674316
    3. 'Input' → logprob: -15.250000953674316
    4. '_inputs' → logprob: -16.000001907348633
    5. '(input' → logprob: -16.500001907348633
    6. '_output' → logprob: -16.625001907348633
    7. '_data' → logprob: -17.750001907348633
    8. '_Input' → logprob: -18.375001907348633
    9. '_INPUT' → logprob: -18.500001907348633
    10. 'd' → logprob: -18.750001907348633

Token 695: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.908022285439074e-05
    2. '(lines' → logprob: -9.750059127807617
    3. 'input' → logprob: -15.750059127807617
    4. '[input' → logprob: -15.750059127807617
    5. '_lines' → logprob: -16.250059127807617
    6. '(output' → logprob: -16.750059127807617
    7. '   ' → logprob: -17.125059127807617
    8. '(inputs' → logprob: -17.125059127807617
    9. ',input' → logprob: -17.125059127807617
    10. '```' → logprob: -17.125059127807617

Token 696: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.2723104848410003e-05
    2. ')' → logprob: -11.125022888183594
    3. '(lines' → logprob: -12.875022888183594
    4. '_' → logprob: -13.625022888183594
    5. '   ' → logprob: -14.125022888183594
    6. 'lines' → logprob: -14.125022888183594
    7. ')
' → logprob: -14.250022888183594
    8. '_)' → logprob: -14.625022888183594
    9. ')_' → logprob: -14.875022888183594
    10. '```' → logprob: -15.375022888183594

Token 697: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009324517101049423
    2. '   ' → logprob: -4.759324550628662
    3. ')
' → logprob: -7.259324550628662
    4. ' )' → logprob: -12.884324073791504
    5. '    
' → logprob: -13.759324073791504
    6. ' ' → logprob: -14.634324073791504
    7. '       ' → logprob: -14.884324073791504
    8. '
' → logprob: -15.009324073791504
    9. '<|end|>' → logprob: -15.509324073791504
    10. '()' → logprob: -16.00932502746582

Token 698: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.799230694770813
    2. 'results' → logprob: -0.799230694770813
    3. ' results' → logprob: -2.2992305755615234
    4. '	results' → logprob: -8.174230575561523
    5. 'result' → logprob: -11.174230575561523
    6. '    
' → logprob: -11.924230575561523
    7. 'outputs' → logprob: -12.424230575561523
    8. '_results' → logprob: -13.174230575561523
    9. 'for' → logprob: -13.424230575561523
    10. '
' → logprob: -13.674230575561523

Token 699: ' answers' (ID: 14716)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.00015860427811276168
    2. ' results' → logprob: -8.750158309936523
    3. 'outputs' → logprob: -16.875158309936523
    4. 'result' → logprob: -17.375158309936523
    5. 'answers' (adapté à ' answers') → logprob: -17.375158309936523
    6. '	results' → logprob: -17.875158309936523
    7. '   ' → logprob: -18.625158309936523
    8. '
' → logprob: -20.000158309936523
    9. 'for' → logprob: -20.250158309936523
    10. '    
' → logprob: -21.250158309936523

Token 700: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815556176006794
    2. '=' → logprob: -4.018155574798584
    3. '   ' → logprob: -13.268155097961426
    4. '=[]' → logprob: -13.643155097961426
    5. '_' → logprob: -13.768155097961426
    6. ')' → logprob: -15.018155097961426
    7. '[:]' → logprob: -15.518155097961426
    8. '	' → logprob: -15.768155097961426
    9. ',' → logprob: -15.768155097961426
    10. '.' → logprob: -16.018156051635742

Token 701: ' Dar' (ID: 17214)
  Prédit: 'Dar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dar' → logprob: -0.0031777136027812958
    2. ' Dar' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.003177642822266
    4. 'D' → logprob: -19.378177642822266
    5. 'Dan' → logprob: -19.503177642822266
    6. 'Da' → logprob: -21.003177642822266
    7. ' ' → logprob: -21.128177642822266
    8. 'dar' → logprob: -21.753177642822266
    9. 'Dal' → logprob: -22.128177642822266
    10. '  ' → logprob: -22.128177642822266

Token 702: 'uma' (ID: 5669)
  Prédit: 'uma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uma' → logprob: -6.153795766294934e-06
    2. 'ama' → logprob: -12.125005722045898
    3. 'a' → logprob: -15.250005722045898
    4. 'um' → logprob: -16.1250057220459
    5. 'Uma' → logprob: -16.2500057220459
    6. 'umas' → logprob: -17.0000057220459
    7. 'ma' → logprob: -17.1250057220459
    8. 'u' → logprob: -17.1250057220459
    9. 'ума' → logprob: -17.5000057220459
    10. 'Ar' → logprob: -20.0000057220459

Token 703: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -6.749814019713085e-06
    2. 'otos' → logprob: -13.000006675720215
    3. 'ot' → logprob: -14.062506675720215
    4. 'Ot' → logprob: -14.500006675720215
    5. 'ots' → logprob: -14.562506675720215
    6. '   ' → logprob: -14.812506675720215
    7. 'oto' → logprob: -15.375006675720215
    8. 'oshi' → logprob: -15.750006675720215
    9. 'О' → logprob: -16.00000762939453
    10. '0' → logprob: -16.12500762939453

Token 704: 'tos' (ID: 33712)
  Prédit: 'tos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tos' → logprob: -0.0013680962147191167
    2. 'T' → logprob: -6.626368045806885
    3. 'stos' → logprob: -10.751368522644043
    4. 'ts' → logprob: -11.626368522644043
    5. 't' → logprob: -12.501368522644043
    6. 'O' → logprob: -12.751368522644043
    7. 'otos' → logprob: -13.001368522644043
    8. 'To' → logprob: -14.251368522644043
    9. 'tas' → logprob: -14.501368522644043
    10. 'dos' → logprob: -15.001368522644043

Token 705: 'hi' (ID: 3686)
  Prédit: 'hi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.006614480633288622
    2. 'chi' → logprob: -5.131614685058594
    3. 'shi' → logprob: -7.631614685058594
    4. 'h' → logprob: -10.006614685058594
    5. 'Hi' → logprob: -10.006614685058594
    6. 'i' → logprob: -10.381614685058594
    7. '   ' → logprob: -11.131614685058594
    8. '[' → logprob: -11.881614685058594
    9. '#' → logprob: -12.131614685058594
    10. 'his' → logprob: -12.131614685058594

Token 706: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -1.7432603272027336e-06
    2. 'O' → logprob: -14.125001907348633
    3. 'Dar' → logprob: -14.750001907348633
    4. '_game' → logprob: -15.250001907348633
    5. ' Game' → logprob: -16.000001907348633
    6. '_Game' → logprob: -16.375001907348633
    7. 'Games' → logprob: -16.750001907348633
    8. 'game' → logprob: -17.250001907348633
    9. '<Game' → logprob: -17.750001907348633
    10. 'Gam' → logprob: -17.875001907348633

Token 707: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -5.1689596148207784e-05
    2. '.' → logprob: -10.000051498413086
    3. '
' → logprob: -13.125051498413086
    4. ' .' → logprob: -13.375051498413086
    5. 'run' → logprob: -13.375051498413086
    6. '().' → logprob: -15.250051498413086
    7. '```' → logprob: -16.000051498413086
    8. '\.' → logprob: -16.125051498413086
    9. '   ' → logprob: -16.375051498413086
    10. '.Run' → logprob: -16.500051498413086

Token 708: '_solver' (ID: 139123)
  Prédit: '_solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solver' → logprob: -6.704273118884885e-07
    2. 'Solver' → logprob: -14.375000953674316
    3. 'solver' → logprob: -17.75
    4. '_runner' → logprob: -18.25
    5. '_scheduler' → logprob: -18.875
    6. '_sol' → logprob: -19.25
    7. '_optimizer' → logprob: -19.25
    8. '_s' → logprob: -19.625
    9. 'olver' → logprob: -20.25
    10. '_parser' → logprob: -20.25

Token 709: '(d' (ID: 2572)
  Prédit: '(weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.6487075090408325
    2. '(d' → logprob: -1.2737075090408325
    3. '(' → logprob: -1.7737075090408325
    4. '(results' → logprob: -3.648707389831543
    5. '(scores' → logprob: -7.648707389831543
    6. '(outputs' → logprob: -8.148707389831543
    7. '(dataset' → logprob: -8.148707389831543
    8. '(datas' → logprob: -9.023707389831543
    9. '(samples' → logprob: -9.523707389831543
    10. ' (' → logprob: -9.648707389831543

Token 710: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -0.0038936613127589226
    2. 'ataset' → logprob: -5.628893852233887
    3. 'at' → logprob: -8.753893852233887
    4. 'atas' → logprob: -9.878893852233887
    5. 'ata' → logprob: -10.753893852233887
    6. 'sets' → logprob: -10.878893852233887
    7. 's' → logprob: -11.128893852233887
    8. 'ats' → logprob: -11.753893852233887
    9. 'datasets' → logprob: -11.878893852233887
    10. '(weights' → logprob: -12.753893852233887

Token 711: ')
' (ID: 446)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.12906810641288757
    2. '()' → logprob: -2.12906813621521
    3. '   ' → logprob: -6.254067897796631
    4. ')
' → logprob: -9.254068374633789
    5. ')' → logprob: -9.379068374633789
    6. '()
' → logprob: -11.754068374633789
    7. '())
' → logprob: -11.879068374633789
    8. '(
' → logprob: -11.879068374633789
    9. '(' → logprob: -12.254068374633789
    10. '())' → logprob: -13.004068374633789

Token 712: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3874123990535736
    2. 'for' → logprob: -1.137412428855896
    3. ' for' → logprob: -7.6374125480651855
    4. 'print' → logprob: -10.387412071228027
    5. '
' → logprob: -11.012412071228027
    6. '    
' → logprob: -11.887412071228027
    7. '	for' → logprob: -12.387412071228027
    8. '<|end|>' → logprob: -14.762412071228027
    9. '```' → logprob: -15.637412071228027
    10. '  
' → logprob: -16.387413024902344

Token 713: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.567575034452602e-05
    2. '   ' → logprob: -9.50009536743164
    3. 'print' → logprob: -11.00009536743164
    4. ' for' → logprob: -12.50009536743164
    5. '
' → logprob: -14.75009536743164
    6. '	for' → logprob: -18.37509536743164
    7. '    
' → logprob: -18.37509536743164
    8. '```' → logprob: -20.50009536743164
    9. 'import' → logprob: -21.00009536743164
    10. '

' → logprob: -21.75009536743164

Token 714: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6649396419525146
    2. 'answer' → logprob: -0.9149396419525146
    3. ' ans' → logprob: -2.6649396419525146
    4. ' answer' → logprob: -4.164939880371094
    5. 'a' → logprob: -10.914939880371094
    6. '(ans' → logprob: -13.664939880371094
    7. '   ' → logprob: -14.664939880371094
    8. '	ans' → logprob: -15.039939880371094
    9. '	answer' → logprob: -16.164939880371094
    10. ' a' → logprob: -16.539939880371094

Token 715: ' in' (ID: 306)
  Prédit: 'swer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swer' → logprob: -0.17098239064216614
    2. 'wer' → logprob: -2.2959823608398438
    3. ' in' → logprob: -4.045982360839844
    4. 'w' → logprob: -4.295982360839844
    5. 'wera' → logprob: -4.295982360839844
    6. '   ' → logprob: -5.795982360839844
    7. 'wers' → logprob: -6.045982360839844
    8. '       ' → logprob: -7.045982360839844
    9. 'ow' → logprob: -7.170982360839844
    10. ' w' → logprob: -7.545982360839844

Token 716: ' answers' (ID: 14716)
  Prédit: 'answers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answers' → logprob: -0.00012356207298580557
    2. ' answers' → logprob: -9.000123977661133
    3. 'ans' → logprob: -16.750123977661133
    4. '.answers' → logprob: -18.500123977661133
    5. '   ' → logprob: -18.625123977661133
    6. 'answer' → logprob: -18.750123977661133
    7. 'Answers' → logprob: -20.250123977661133
    8. '_answers' → logprob: -20.750123977661133
    9. '答案' → logprob: -21.375123977661133
    10. '
' → logprob: -21.375123977661133

Token 717: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042437899857759476
    2. ':
' → logprob: -3.667437791824341
    3. '       ' → logprob: -4.16743803024292
    4. '   ' → logprob: -8.292437553405762
    5. 'print' → logprob: -9.042437553405762
    6. ',' → logprob: -9.542437553405762
    7. ' print' → logprob: -10.667437553405762
    8. '():
' → logprob: -11.417437553405762
    9. '.print' → logprob: -11.792437553405762
    10. '():' → logprob: -12.042437553405762

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005001319805160165
    2. 'print' → logprob: -7.625500202178955
    3. ' print' → logprob: -11.500499725341797
    4. '   ' → logprob: -13.750499725341797
    5. '```' → logprob: -14.250499725341797
    6. '           ' → logprob: -17.125499725341797
    7. '        
' → logprob: -17.125499725341797
    8. '      ' → logprob: -17.375499725341797
    9. '`' → logprob: -17.375499725341797
    10. '
' → logprob: -17.500499725341797

Token 719: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.4021237802808173e-05
    2. ' print' → logprob: -11.500014305114746
    3. '   ' → logprob: -12.500014305114746
    4. '       ' → logprob: -17.12501335144043
    5. '```' → logprob: -18.50001335144043
    6. 'pr' → logprob: -20.00001335144043
    7. '	print' → logprob: -21.00001335144043
    8. '
' → logprob: -21.87501335144043
    9. 'printf' → logprob: -22.62501335144043
    10. 'println' → logprob: -22.62501335144043

Token 720: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.896309739408025e-07
    2. 'ans' → logprob: -14.250000953674316
    3. '(' → logprob: -17.625
    4. '	ans' → logprob: -20.875
    5. '(answer' → logprob: -21.875
    6. '(
' → logprob: -21.875
    7. ' ans' → logprob: -22.375
    8. '(an' → logprob: -22.625
    9. ' (' → logprob: -22.75
    10. '(abs' → logprob: -23.0

Token 721: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '()' → logprob: -12.875004768371582
    3. '())' → logprob: -13.625004768371582
    4. ')
' → logprob: -15.000004768371582
    5. ' )' → logprob: -15.375004768371582
    6. ')`' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.625003814697266
    8. '))' → logprob: -18.250003814697266
    9. '`)' → logprob: -19.000003814697266
    10. '')' → logprob: -19.000003814697266

Token 722: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7432603272027336e-06
    2. ' if' → logprob: -13.500001907348633
    3. '```' → logprob: -15.500001907348633
    4. '#' → logprob: -16.500001907348633
    5. '
' → logprob: -17.500001907348633
    6. '<|end|>' → logprob: -18.250001907348633
    7. 'main' → logprob: -18.500001907348633
    8. '#if' → logprob: -19.000001907348633
    9. '    
' → logprob: -19.750001907348633
    10. '__' → logprob: -20.000001907348633

Token 723: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02639968879520893
    2. '__' → logprob: -3.651399612426758
    3. '_name' → logprob: -10.026399612426758
    4. '_' → logprob: -11.026399612426758
    5. 'name' → logprob: -11.151399612426758
    6. ' ' → logprob: -11.276399612426758
    7. ' _' → logprob: -12.151399612426758
    8. ' ' → logprob: -13.401399612426758
    9. '___' → logprob: -13.401399612426758
    10. ' ' → logprob: -14.276399612426758

Token 724: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010015659034252167
    2. ' ==' → logprob: -5.385015487670898
    3. ' __' → logprob: -6.135015487670898
    4. '==' → logprob: -6.385015487670898
    5. '.__' → logprob: -7.260015487670898
    6. 'name' → logprob: -8.010015487670898
    7. '__.__' → logprob: -8.885015487670898
    8. 'if' → logprob: -9.635015487670898
    9. '__.' → logprob: -9.635015487670898
    10. '_name' → logprob: -9.760015487670898

Token 725: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.632542913896032e-05
    2. '==' → logprob: -10.000046730041504
    3. '__.__' → logprob: -15.250046730041504
    4. '_' → logprob: -15.500046730041504
    5. ' ==' → logprob: -16.125045776367188
    6. '=="' → logprob: -16.375045776367188
    7. '__
' → logprob: -16.750045776367188
    8. '=' → logprob: -17.000045776367188
    9. '____' → logprob: -17.375045776367188
    10. '___' → logprob: -18.500045776367188

Token 726: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5398437976837158
    2. '==' → logprob: -0.9148437976837158
    3. ' ==' → logprob: -4.539843559265137
    4. '=="' → logprob: -5.164843559265137
    5. '=='' → logprob: -8.789843559265137
    6. '=' → logprob: -11.289843559265137
    7. '"' → logprob: -11.664843559265137
    8. '_' → logprob: -12.164843559265137
    9. '==
' → logprob: -12.539843559265137
    10. '===' → logprob: -12.914843559265137

Token 727: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006717505399137735
    2. ''' → logprob: -5.006717681884766
    3. '__' → logprob: -13.506717681884766
    4. ' "__' → logprob: -14.131717681884766
    5. '"user' → logprob: -17.006717681884766
    6. '"class' → logprob: -17.881717681884766
    7. '"name' → logprob: -18.256717681884766
    8. ''"' → logprob: -19.131717681884766
    9. '"default' → logprob: -19.256717681884766
    10. '"'' → logprob: -19.631717681884766

Token 728: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0024802929256111383
    2. '__' → logprob: -6.002480506896973
    3. '"' → logprob: -12.752480506896973
    4. '_main' → logprob: -14.002480506896973
    5. ' main' → logprob: -14.377480506896973
    6. 'name' → logprob: -16.252479553222656
    7. '主' → logprob: -16.752479553222656
    8. ''' → logprob: -17.127479553222656
    9. '__":
' → logprob: -17.252479553222656
    10. '-main' → logprob: -17.627479553222656

Token 729: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.01832716166973114
    2. '__' → logprob: -4.018327236175537
    3. '__':
' → logprob: -8.643326759338379
    4. '__["' → logprob: -14.893326759338379
    5. '__.' → logprob: -15.768326759338379
    6. '__.__' → logprob: -15.893326759338379
    7. '__:' → logprob: -16.268327713012695
    8. '__
' → logprob: -16.768327713012695
    9. '__
' → logprob: -17.018327713012695
    10. '__("' → logprob: -17.268327713012695

Token 730: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1793317049741745
    2. '__' → logprob: -1.929331660270691
    3. 'main' → logprob: -4.8043317794799805
    4. '   ' → logprob: -5.0543317794799805
    5. ''' → logprob: -5.6793317794799805
    6. ' "__' → logprob: -7.6793317794799805
    7. '__":
' → logprob: -8.30433177947998
    8. ' main' → logprob: -9.92933177947998
    9. '("__' → logprob: -9.92933177947998
    10. '____' → logprob: -10.17933177947998

Token 731: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '	main' → logprob: -22.25
    4. '   ' → logprob: -22.375
    5. 'mai' → logprob: -24.875
    6. 'import' → logprob: -25.75
    7. 'ma' → logprob: -25.875
    8. '.main' → logprob: -26.0
    9. '(main' → logprob: -26.375
    10. 'm' → logprob: -26.5

Token 732: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 730
Tokens correctement prédits (1ère position, stricte): 340
Tokens correctement prédits (1ère position, avec adaptation): 386
Tokens correctement prédits (top 10): 629
Précision stricte (1ère position): 46.58%
Précision adaptée (1ère position): 52.88%
Précision (top 10): 86.16%
================================================================================
