================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:29:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class PointCard:
    def __init__(self, total_slots: int, hit_count: int, miss_count: int):
        self.total_slots = total_slots
        self.hit_count = hit_count
        self.miss_count = miss_count

    def cost_to_reach_target(self, target_hits: int) -> int:
        if self.hit_count >= target_hits:
            return 0
        needed = target_hits - self.hit_count
        # We can convert misses to hits at a cost of 1 per slot
        return max(needed, 0)

class PointCardCollection:
    def __init__(self, cards, N):
        self.cards = cards
        self.target = N
        self.M = len(cards)

    def minimum_cost_for_prizes(self):
        # Calculate all needed costs to make each card eligible for prize
        costs = [card.cost_to_reach_target(self.target) for card in self.cards]
        # Sort costs to pick the cheapest (M-1) cards to convert
        costs.sort()
        # We want M - 1 cards with hits >= target with minimal total cost
        # Select smallest M-1 costs
        return sum(costs[:self.M -1])

class InputParser:
    @staticmethod
    def parse_input():
        import sys
        lines = sys.stdin.read().strip().split('\n')
        N, M = map(int, lines[0].split())
        cards = []
        total_slots = 2 * N
        for i in range(1, M+1):
            A, B = map(int, lines[i].split())
            cards.append(PointCard(total_slots=total_slots, hit_count=A, miss_count=B))
        return N, M, cards

class JOISolver:
    def __init__(self):
        pass

    def solve(self):
        N, M, cards = InputParser.parse_input()
        collection = PointCardCollection(cards, N)
        print(collection.minimum_cost_for_prizes())

if __name__ == "__main__":
    JOISolver().solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Point' (ID: 9971)
  → Token d'amorce (pas de prédiction)

Token 2: 'Card' (ID: 6376)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5251641869544983
    2. ':' → logprob: -1.0251641273498535
    3. '{' → logprob: -3.0251641273498535
    4. '.' → logprob: -7.4001641273498535
    5. '(:' → logprob: -8.275164604187012
    6. ' {' → logprob: -8.650164604187012
    7. 's' → logprob: -10.150164604187012
    8. '```' → logprob: -10.150164604187012
    9. '({' → logprob: -10.525164604187012
    10. ' :' → logprob: -10.650164604187012

Token 4: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8097299933433533
    2. '   ' → logprob: -1.684730052947998
    3. '```' → logprob: -1.809730052947998
    4. ':' → logprob: -2.809730052947998
    5. ''' → logprob: -3.434730052947998
    6. ' ' → logprob: -3.809730052947998
    7. '(
' → logprob: -4.184730052947998
    8. '\' → logprob: -4.184730052947998
    9. '()' → logprob: -4.434730052947998
    10. '.' → logprob: -4.684730052947998

Token 5: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08008646965026855
    2. '    ' → logprob: -3.3300864696502686
    3. ' 
' → logprob: -4.955086708068848
    4. '```' → logprob: -5.080086708068848
    5. '   ' → logprob: -5.205086708068848
    6. '\' → logprob: -5.455086708068848
    7. ''' → logprob: -6.205086708068848
    8. ' (' → logprob: -6.455086708068848
    9. ' ```' → logprob: -6.705086708068848
    10. '     
' → logprob: -6.830086708068848

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6694609522819519
    2. ' __' → logprob: -0.9194609522819519
    3. '__' → logprob: -2.7944610118865967
    4. ' init' → logprob: -4.169460773468018
    5. ' calculate' → logprob: -5.794460773468018
    6. ' ' → logprob: -6.044460773468018
    7. ' add' → logprob: -6.794460773468018
    8. '_' → logprob: -7.044460773468018
    9. ' ```' → logprob: -7.544460773468018
    10. ' initialize' → logprob: -7.669460773468018

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.36574100604048e-06
    2. ' init' → logprob: -13.000004768371582
    3. '_init' → logprob: -13.250004768371582
    4. 'ini' → logprob: -15.750004768371582
    5. '	init' → logprob: -17.500003814697266
    6. 'in' → logprob: -17.750003814697266
    7. '_' → logprob: -18.125003814697266
    8. 'int' → logprob: -18.250003814697266
    9. 'i' → logprob: -18.500003814697266
    10. 'inti' → logprob: -18.625003814697266

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5831002593040466
    2. '__' → logprob: -0.8331002593040466
    3. '_' → logprob: -5.833100318908691
    4. '(' → logprob: -6.083100318908691
    5. '__(
' → logprob: -6.458100318908691
    6. '__((' → logprob: -8.583100318908691
    7. '__('' → logprob: -9.708100318908691
    8. '_(' → logprob: -10.333100318908691
    9. '___' → logprob: -10.708100318908691
    10. '(self' → logprob: -11.458100318908691

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007146967691369355
    2. ' self' → logprob: -7.2507147789001465
    3. ')' → logprob: -13.000714302062988
    4. '(self' → logprob: -13.375714302062988
    5. ' ' → logprob: -15.750714302062988
    6. '   ' → logprob: -16.250715255737305
    7. 'point' → logprob: -16.625715255737305
    8. '_self' → logprob: -16.750715255737305
    9. '*self' → logprob: -16.750715255737305
    10. '$self' → logprob: -16.750715255737305

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5215777158737183
    2. ')' → logprob: -1.7715777158737183
    3. '_' → logprob: -2.146577835083008
    4. 'self' → logprob: -2.396577835083008
    5. '_self' → logprob: -5.146577835083008
    6. 's' → logprob: -5.896577835083008
    7. ' ,' → logprob: -5.896577835083008
    8. ' ' → logprob: -5.896577835083008
    9. ' )' → logprob: -6.146577835083008
    10. '(' → logprob: -6.146577835083008

Token 11: ' total' (ID: 3609)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04343164712190628
    2. ' self' → logprob: -3.1684317588806152
    3. 'x' → logprob: -8.168431282043457
    4. ' x' → logprob: -9.418431282043457
    5. ')' → logprob: -11.043431282043457
    6. 'coordinates' → logprob: -11.418431282043457
    7. 'points' → logprob: -11.668431282043457
    8. 'point' → logprob: -11.793431282043457
    9. ' coordinates' → logprob: -12.293431282043457
    10. '```' → logprob: -12.418431282043457

Token 12: '_slots' (ID: 143546)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0018547463696449995
    2. '):' → logprob: -7.62685489654541
    3. '_' → logprob: -7.75185489654541
    4. ')' → logprob: -8.37685489654541
    5. '_pts' → logprob: -8.50185489654541
    6. '_rewards' → logprob: -8.75185489654541
    7. '_score' → logprob: -9.75185489654541
    8. 'Points' → logprob: -10.12685489654541
    9. '_tokens' → logprob: -10.25185489654541
    10. ',' → logprob: -10.37685489654541

Token 13: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4405069351196289
    2. '):' → logprob: -1.065506935119629
    3. ':' → logprob: -4.815506935119629
    4. '=' → logprob: -6.190506935119629
    5. ' ,' → logprob: -7.440506935119629
    6. '   ' → logprob: -8.065506935119629
    7. ':int' → logprob: -8.190506935119629
    8. ' ):' → logprob: -8.315506935119629
    9. '):
' → logprob: -9.690506935119629
    10. ')' → logprob: -10.690506935119629

Token 14: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5760923624038696
    2. ' int' → logprob: -0.8260923624038696
    3. '=int' → logprob: -9.451092720031738
    4. ':int' → logprob: -10.701092720031738
    5. '[int' → logprob: -11.076092720031738
    6. ')' → logprob: -11.951092720031738
    7. '(int' → logprob: -12.076092720031738
    8. '<int' → logprob: -12.701092720031738
    9. ' )' → logprob: -12.701092720031738
    10. ' ' → logprob: -12.826092720031738

Token 15: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04595990478992462
    2. ',' → logprob: -3.170959949493408
    3. ')' → logprob: -5.920959949493408
    4. '):
' → logprob: -8.67095947265625
    5. '   ' → logprob: -9.67095947265625
    6. ':' → logprob: -11.92095947265625
    7. '```' → logprob: -11.92095947265625
    8. ' ,' → logprob: -12.29595947265625
    9. ' ):' → logprob: -12.42095947265625
    10. '       ' → logprob: -12.79595947265625

Token 16: ' hit' (ID: 7103)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8786119222640991
    2. ' max' → logprob: -1.0036119222640991
    3. 'max' → logprob: -2.6286120414733887
    4. ' current' → logprob: -3.2536120414733887
    5. ' available' → logprob: -3.5036120414733887
    6. 'total' → logprob: -3.8786120414733887
    7. ' used' → logprob: -4.628612041473389
    8. ' initial' → logprob: -4.878612041473389
    9. '   ' → logprob: -5.003612041473389
    10. ' points' → logprob: -5.003612041473389

Token 17: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4568749666213989
    2. '_points' → logprob: -1.081874966621399
    3. '_rate' → logprob: -4.206874847412109
    4. '_count' → logprob: -5.831874847412109
    5. 'points' → logprob: -5.956874847412109
    6. '_point' → logprob: -6.706874847412109
    7. '_slots' → logprob: -6.706874847412109
    8. '_s' → logprob: -7.331874847412109
    9. '_bonus' → logprob: -7.331874847412109
    10. '_score' → logprob: -7.456874847412109

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1661454290151596
    2. '):' → logprob: -1.9161454439163208
    3. '=' → logprob: -5.791145324707031
    4. ')' → logprob: -6.041145324707031
    5. ',' → logprob: -9.041145324707031
    6. 's' → logprob: -9.166145324707031
    7. ' :' → logprob: -9.916145324707031
    8. ' ):' → logprob: -9.916145324707031
    9. '_per' → logprob: -10.041145324707031
    10. '):
' → logprob: -10.041145324707031

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.633301854133606
    2. ' int' → logprob: -0.758301854133606
    3. '0' → logprob: -7.633301734924316
    4. ' ' → logprob: -8.883301734924316
    5. ':int' → logprob: -10.758301734924316
    6. '1' → logprob: -11.508301734924316
    7. '=int' → logprob: -11.508301734924316
    8. ')' → logprob: -11.633301734924316
    9. '[int' → logprob: -11.758301734924316
    10. '(int' → logprob: -12.258301734924316

Token 20: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014918346889317036
    2. ',' → logprob: -4.764918327331543
    3. ')' → logprob: -5.139918327331543
    4. '):
' → logprob: -8.264918327331543
    5. '   ' → logprob: -9.514918327331543
    6. ':' → logprob: -9.764918327331543
    7. '```' → logprob: -11.389918327331543
    8. '=' → logprob: -12.264918327331543
    9. ' ):' → logprob: -12.514918327331543
    10. ' ' → logprob: -12.514918327331543

Token 21: ' miss' (ID: 5141)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.206948161125183
    2. ' current' → logprob: -1.331948161125183
    3. ' max' → logprob: -2.8319482803344727
    4. ' used' → logprob: -2.9569482803344727
    5. ' remaining' → logprob: -3.0819482803344727
    6. '   ' → logprob: -3.3319482803344727
    7. ' available' → logprob: -3.4569482803344727
    8. ' hit' → logprob: -3.7069482803344727
    9. ' redeemed' → logprob: -3.8319482803344727
    10. ' filled' → logprob: -3.8319482803344727

Token 22: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.23792698979377747
    2. 's' → logprob: -1.612926959991455
    3. 'ed' → logprob: -4.487926959991455
    4. '_s' → logprob: -6.862926959991455
    5. '_' → logprob: -10.487927436828613
    6. '_rate' → logprob: -11.237927436828613
    7. ' _' → logprob: -11.487927436828613
    8. '_score' → logprob: -11.612927436828613
    9. '_counts' → logprob: -11.612927436828613
    10. 'ing' → logprob: -11.737927436828613

Token 23: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2271030694246292
    2. ':' → logprob: -1.6021031141281128
    3. ')' → logprob: -6.977103233337402
    4. ',' → logprob: -7.602103233337402
    5. '   ' → logprob: -9.227103233337402
    6. '):
' → logprob: -9.477103233337402
    7. '```' → logprob: -11.102103233337402
    8. '=' → logprob: -11.227103233337402
    9. ' ):' → logprob: -11.227103233337402
    10. 's' → logprob: -11.852103233337402

Token 24: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.34896695613861084
    2. 'int' → logprob: -1.2239669561386108
    3. ')' → logprob: -8.348966598510742
    4. ':int' → logprob: -8.848966598510742
    5. ' )' → logprob: -10.348966598510742
    6. '=int' → logprob: -10.723966598510742
    7. ' ' → logprob: -10.973966598510742
    8. '[int' → logprob: -11.598966598510742
    9. ']int' → logprob: -11.723966598510742
    10. '(int' → logprob: -11.848966598510742

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014666540082544088
    2. '):
' → logprob: -7.251466751098633
    3. ',' → logprob: -7.876466751098633
    4. ')' → logprob: -8.001466751098633
    5. '   ' → logprob: -10.876466751098633
    6. ':' → logprob: -11.376466751098633
    7. '```' → logprob: -12.251466751098633
    8. '):

' → logprob: -12.876466751098633
    9. '):
' → logprob: -13.751466751098633
    10. ' ):' → logprob: -14.126466751098633

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3251911699771881
    2. ':' → logprob: -2.0751912593841553
    3. '   ' → logprob: -3.2001912593841553
    4. '<|end|>' → logprob: -3.3251912593841553
    5. '\n' → logprob: -3.9501912593841553
    6. '```' → logprob: -4.325191020965576
    7. 'newline' → logprob: -4.825191020965576
    8. '\' → logprob: -4.950191020965576
    9. ')' → logprob: -5.450191020965576
    10. '        
' → logprob: -5.450191020965576

Token 27: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15304060280323029
    2. '       ' → logprob: -2.403040647506714
    3. ' self' → logprob: -3.028040647506714
    4. '<|end|>' → logprob: -7.403040409088135
    5. '```' → logprob: -7.528040409088135
    6. '   ' → logprob: -7.653040409088135
    7. '           ' → logprob: -8.028040885925293
    8. ' ' → logprob: -8.278040885925293
    9. ' ' → logprob: -8.653040885925293
    10. '_self' → logprob: -8.653040885925293

Token 28: '.total' (ID: 23374)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004253746476024389
    2. '.total' → logprob: -6.00425386428833
    3. ' .' → logprob: -6.50425386428833
    4. 'self' → logprob: -9.379253387451172
    5. '       ' → logprob: -10.754253387451172
    6. ')' → logprob: -10.879253387451172
    7. '.self' → logprob: -11.129253387451172
    8. '.token' → logprob: -11.379253387451172
    9. '   ' → logprob: -11.629253387451172
    10. ' ' → logprob: -11.754253387451172

Token 29: '_slots' (ID: 143546)
  Prédit: '_slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_slots' → logprob: -0.010159281082451344
    2. '_' → logprob: -4.760159492492676
    3. '_s' → logprob: -7.635159492492676
    4. ' _' → logprob: -8.010159492492676
    5. '_tokens' → logprob: -9.010159492492676
    6. '```' → logprob: -9.135159492492676
    7. '_sl' → logprob: -9.385159492492676
    8. '_count' → logprob: -9.760159492492676
    9. '_points' → logprob: -9.885159492492676
    10. '_spaces' → logprob: -10.260159492492676

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07572271674871445
    2. '=' → logprob: -2.7007226943969727
    3. ' ' → logprob: -5.825722694396973
    4. '<|end|>' → logprob: -6.700722694396973
    5. '    ' → logprob: -8.075722694396973
    6. ' +=' → logprob: -8.450722694396973
    7. '   ' → logprob: -8.450722694396973
    8. ' -=' → logprob: -8.825722694396973
    9. '        ' → logprob: -9.200722694396973
    10. ')' → logprob: -9.200722694396973

Token 31: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.002479581395164132
    2. 'total' → logprob: -6.002479553222656
    3. ' ' → logprob: -13.002479553222656
    4. ' tot' → logprob: -15.127479553222656
    5. ' tota' → logprob: -15.252479553222656
    6. '_total' → logprob: -15.252479553222656
    7. '	total' → logprob: -15.377479553222656
    8. '0' → logprob: -15.752479553222656
    9. ' ' → logprob: -15.877479553222656
    10. '(total' → logprob: -16.127479553222656

Token 32: '_slots' (ID: 143546)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10133706778287888
    2. '_slots' → logprob: -2.35133695602417
    3. '_s' → logprob: -7.97633695602417
    4. 't' → logprob: -8.476337432861328
    5. '_spaces' → logprob: -8.726337432861328
    6. '```' → logprob: -8.976337432861328
    7. '_t' → logprob: -9.601337432861328
    8. '_tokens' → logprob: -10.101337432861328
    9. '_space' → logprob: -10.476337432861328
    10. '__' → logprob: -10.851337432861328

Token 33: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026791229844093323
    2. '<|end|>' → logprob: -5.026791095733643
    3. '```' → logprob: -5.026791095733643
    4. '        
' → logprob: -5.276791095733643
    5. '`' → logprob: -6.276791095733643
    6. '\' → logprob: -6.776791095733643
    7. '\n' → logprob: -7.276791095733643
    8. '   ' → logprob: -7.276791095733643
    9. 'newline' → logprob: -7.276791095733643
    10. '        ' → logprob: -7.401791095733643

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07791677117347717
    2. '        
' → logprob: -4.327916622161865
    3. '\' → logprob: -4.702916622161865
    4. '```' → logprob: -4.702916622161865
    5. '<|end|>' → logprob: -5.077916622161865
    6. ' ' → logprob: -5.202916622161865
    7. '   ' → logprob: -5.327916622161865
    8. '\n' → logprob: -5.577916622161865
    9. '    ' → logprob: -5.702916622161865
    10. '        ' → logprob: -5.952916622161865

Token 35: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18836665153503418
    2. '       ' → logprob: -2.188366651535034
    3. ' self' → logprob: -2.938366651535034
    4. '        ' → logprob: -5.688366889953613
    5. ' ' → logprob: -7.188366889953613
    6. '```' → logprob: -7.313366889953613
    7. ' ' → logprob: -7.938366889953613
    8. '\n' → logprob: -8.563366889953613
    9. '\' → logprob: -8.563366889953613
    10. '        
' → logprob: -8.813366889953613

Token 36: '.hit' (ID: 109877)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001137358252890408
    2. '.total' → logprob: -7.7511372566223145
    3. '.hit' → logprob: -8.001137733459473
    4. '.points' → logprob: -9.501137733459473
    5. '.user' → logprob: -9.626137733459473
    6. '.point' → logprob: -9.751137733459473
    7. ' .' → logprob: -10.376137733459473
    8. '.h' → logprob: -10.626137733459473
    9. '.m' → logprob: -11.126137733459473
    10. '.count' → logprob: -12.001137733459473

Token 37: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0031563304364681244
    2. '_' → logprob: -6.1281561851501465
    3. '_s' → logprob: -7.8781561851501465
    4. 's' → logprob: -8.128156661987305
    5. '_counts' → logprob: -8.378156661987305
    6. ' _' → logprob: -9.878156661987305
    7. '_c' → logprob: -12.253156661987305
    8. '_counter' → logprob: -12.753156661987305
    9. '_hits' → logprob: -14.378156661987305
    10. '_cache' → logprob: -14.628156661987305

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0431378036737442
    2. '=' → logprob: -3.168137788772583
    3. ' +=' → logprob: -9.668137550354004
    4. '<|end|>' → logprob: -10.293137550354004
    5. ' ' → logprob: -10.918137550354004
    6. ')' → logprob: -12.418137550354004
    7. '_' → logprob: -12.543137550354004
    8. ' =
' → logprob: -12.668137550354004
    9. ' |=' → logprob: -12.793137550354004
    10. ' ==' → logprob: -13.418137550354004

Token 39: ' hit' (ID: 7103)
  Prédit: ' hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hit' → logprob: -0.00193280098028481
    2. 'hit' → logprob: -6.251932621002197
    3. '(hit' → logprob: -13.126933097839355
    4. ' ' → logprob: -13.626933097839355
    5. '_hit' → logprob: -14.376933097839355
    6. ' miss' → logprob: -15.626933097839355
    7. 'Hit' → logprob: -16.62693214416504
    8. ' ' → logprob: -16.75193214416504
    9. 'miss' → logprob: -16.87693214416504
    10. '.hit' → logprob: -17.50193214416504

Token 40: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.3886130750179291
    2. '_' → logprob: -1.1386131048202515
    3. '_t' → logprob: -7.513613224029541
    4. ' _' → logprob: -7.763613224029541
    5. '_c' → logprob: -7.888613224029541
    6. 't' → logprob: -8.388612747192383
    7. '_counter' → logprob: -9.388612747192383
    8. '_counts' → logprob: -11.138612747192383
    9. '__' → logprob: -11.888612747192383
    10. 'ed' → logprob: -12.138612747192383

Token 41: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004192330234218389
    2. '```' → logprob: -9.000419616699219
    3. '        
' → logprob: -9.125419616699219
    4. '<|end|>' → logprob: -9.750419616699219
    5. '
' → logprob: -10.500419616699219
    6. '   ' → logprob: -10.625419616699219
    7. 'self' → logprob: -10.625419616699219
    8. '      ' → logprob: -12.000419616699219
    9. ' 
' → logprob: -12.250419616699219
    10. '`' → logprob: -12.250419616699219

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033260034397244453
    2. '```' → logprob: -6.253325939178467
    3. 'self' → logprob: -7.253325939178467
    4. '        
' → logprob: -8.253326416015625
    5. '`' → logprob: -9.253326416015625
    6. '   ' → logprob: -9.378326416015625
    7. '<|end|>' → logprob: -10.003326416015625
    8. '        ' → logprob: -10.628326416015625
    9. '      ' → logprob: -10.878326416015625
    10. '\' → logprob: -11.003326416015625

Token 43: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013250701129436493
    2. 'self' (adapté à ' self') → logprob: -4.388250827789307
    3. ' self' → logprob: -7.388250827789307
    4. '   ' → logprob: -10.638250350952148
    5. '```' → logprob: -10.888250350952148
    6. ' ' → logprob: -11.638250350952148
    7. '
' → logprob: -11.763250350952148
    8. '	' → logprob: -11.763250350952148
    9. '	self' → logprob: -11.888250350952148
    10. '      ' → logprob: -11.888250350952148

Token 44: '.m' (ID: 1021)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003280751989223063
    2. '.m' → logprob: -8.250328063964844
    3. ' .' → logprob: -10.375328063964844
    4. '._' → logprob: -10.625328063964844
    5. '_' → logprob: -12.875328063964844
    6. '<|end|>' → logprob: -13.875328063964844
    7. '.user' → logprob: -14.000328063964844
    8. '.period' → logprob: -14.000328063964844
    9. '.hit' → logprob: -14.125328063964844
    10. '.total' → logprob: -14.250328063964844

Token 45: 'iss' (ID: 1009)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008178002201020718
    2. 'iss' → logprob: -4.883178234100342
    3. 'is' → logprob: -7.883178234100342
    4. '_i' → logprob: -8.758177757263184
    5. '```' → logprob: -11.258177757263184
    6. 'issed' → logprob: -12.008177757263184
    7. '_' → logprob: -12.883177757263184
    8. '	i' → logprob: -13.008177757263184
    9. 'issing' → logprob: -13.133177757263184
    10. 'issi' → logprob: -13.383177757263184

Token 46: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00021641071361955255
    2. '_' → logprob: -8.625216484069824
    3. ' _' → logprob: -10.750216484069824
    4. 's' → logprob: -11.625216484069824
    5. '_counts' → logprob: -13.000216484069824
    6. '_c' → logprob: -13.500216484069824
    7. '_counter' → logprob: -13.750216484069824
    8. '_s' → logprob: -14.500216484069824
    9. '```' → logprob: -15.625216484069824
    10. '_co' → logprob: -15.875216484069824

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17979998886585236
    2. '=' → logprob: -1.804800033569336
    3. ' ' → logprob: -10.429800033569336
    4. '<|end|>' → logprob: -11.179800033569336
    5. ' =
' → logprob: -11.804800033569336
    6. '_' → logprob: -13.679800033569336
    7. ')' → logprob: -13.929800033569336
    8. '   ' → logprob: -14.679800033569336
    9. '<|end|>' → logprob: -15.054800033569336
    10. '=
' → logprob: -15.429800033569336

Token 48: ' miss' (ID: 5141)
  Prédit: ' miss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' miss' → logprob: -0.04309716448187828
    2. 'miss' → logprob: -3.1680972576141357
    3. '0' → logprob: -10.043097496032715
    4. ' ' → logprob: -10.043097496032715
    5. ' missed' → logprob: -12.168097496032715
    6. 'm' → logprob: -13.543097496032715
    7. ' misses' → logprob: -13.543097496032715
    8. ' ' → logprob: -14.293097496032715
    9. ' m' → logprob: -14.418097496032715
    10. '	m' → logprob: -14.918097496032715

Token 49: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.003201358253136277
    2. '_' → logprob: -5.753201484680176
    3. '_c' → logprob: -11.128201484680176
    4. 'count' → logprob: -12.628201484680176
    5. ' _' → logprob: -13.378201484680176
    6. '_counts' → logprob: -14.003201484680176
    7. '_counter' → logprob: -14.378201484680176
    8. '_

' → logprob: -14.628201484680176
    9. 'ount' → logprob: -14.878201484680176
    10. '_t' → logprob: -15.128201484680176

Token 50: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09982656687498093
    2. '<|end|>' → logprob: -2.7248265743255615
    3. '   ' → logprob: -4.099826335906982
    4. '```' → logprob: -5.224826335906982
    5. '    
' → logprob: -5.849826335906982
    6. '\n' → logprob: -7.099826335906982
    7. ' 
' → logprob: -7.224826335906982
    8. '<|end|>' → logprob: -7.599826335906982
    9. '' → logprob: -7.974826335906982
    10. 'newline' → logprob: -7.974826335906982

Token 51: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13893449306488037
    2. '   ' → logprob: -2.38893461227417
    3. '    
' → logprob: -3.51393461227417
    4. ' 
' → logprob: -5.88893461227417
    5. '```' → logprob: -6.38893461227417
    6. '<|end|>' → logprob: -6.76393461227417
    7. '  
' → logprob: -7.38893461227417
    8. '\n' → logprob: -7.76393461227417
    9. ' ' → logprob: -8.138934135437012
    10. 'def' → logprob: -8.638934135437012

Token 52: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6792839169502258
    2. '    
' → logprob: -1.554283857345581
    3. 'def' (adapté à ' def') → logprob: -2.054283857345581
    4. '
' → logprob: -2.429283857345581
    5. ' 
' → logprob: -3.804283857345581
    6. ' def' → logprob: -4.30428409576416
    7. '```' → logprob: -4.30428409576416
    8. '\' → logprob: -5.55428409576416
    9. '\n' → logprob: -5.67928409576416
    10. ' ' → logprob: -6.92928409576416

Token 53: ' cost' (ID: 3097)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.9479337930679321
    2. ' calculate' → logprob: -1.1979337930679321
    3. ' ' → logprob: -1.8229337930679321
    4. ' get' → logprob: -2.0729336738586426
    5. ' add' → logprob: -5.697933673858643
    6. ' reset' → logprob: -5.822933673858643
    7. ' check' → logprob: -5.822933673858643
    8. ' total' → logprob: -6.072933673858643
    9. ' update' → logprob: -6.322933673858643
    10. ' def' → logprob: -6.572933673858643

Token 54: '_to' (ID: 5089)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6373357176780701
    2. '(self' → logprob: -0.7623357176780701
    3. '_' → logprob: -5.762335777282715
    4. 's' → logprob: -7.387335777282715
    5. '_per' → logprob: -8.137335777282715
    6. '_space' → logprob: -9.262335777282715
    7. 'self' → logprob: -9.387335777282715
    8. '_factor' → logprob: -9.387335777282715
    9. '_(' → logprob: -9.887335777282715
    10. ')' → logprob: -10.262335777282715

Token 55: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.4184514284133911
    2. '_replace' → logprob: -2.0434513092041016
    3. '_' → logprob: -2.1684513092041016
    4. '_fill' → logprob: -2.9184513092041016
    5. '_string' → logprob: -3.0434513092041016
    6. '_ref' → logprob: -3.1684513092041016
    7. '_allocate' → logprob: -3.1684513092041016
    8. '_update' → logprob: -3.5434513092041016
    9. '_use' → logprob: -3.7934513092041016
    10. '_hit' → logprob: -3.9184513092041016

Token 56: 'ach' (ID: 678)
  Prédit: 'trieve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trieve' → logprob: -1.016570806503296
    2. 'ach' → logprob: -1.391570806503296
    3. 'place' → logprob: -1.766570806503296
    4. 'move' → logprob: -2.141570806503296
    5. 'de' → logprob: -3.766570806503296
    6. 'fill' → logprob: -4.516571044921875
    7. 'solve' → logprob: -4.891571044921875
    8. 'tain' → logprob: -5.016571044921875
    9. 'use' → logprob: -5.141571044921875
    10. 'dem' → logprob: -5.141571044921875

Token 57: '_target' (ID: 24705)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23581863939762115
    2. '_point' → logprob: -2.61081862449646
    3. '(' → logprob: -2.73581862449646
    4. '_space' → logprob: -3.36081862449646
    5. '_target' → logprob: -4.235818862915039
    6. '(self' → logprob: -4.610818862915039
    7. '_parent' → logprob: -6.110818862915039
    8. ' (' → logprob: -6.485818862915039
    9. '_goal' → logprob: -6.610818862915039
    10. '_self' → logprob: -7.110818862915039

Token 58: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4793795645236969
    2. '(self' → logprob: -0.9793795347213745
    3. '_point' → logprob: -5.979379653930664
    4. '_' → logprob: -6.979379653930664
    5. '_points' → logprob: -8.104379653930664
    6. 'self' → logprob: -8.104379653930664
    7. ' (' → logprob: -8.604379653930664
    8. '_target' → logprob: -8.729379653930664
    9. '_space' → logprob: -8.729379653930664
    10. '_distance' → logprob: -8.854379653930664

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3468448519706726
    2. '):' → logprob: -1.5968449115753174
    3. ')' → logprob: -2.8468449115753174
    4. 'self' → logprob: -4.346844673156738
    5. '(self' → logprob: -4.971844673156738
    6. '_target' → logprob: -5.471844673156738
    7. ':' → logprob: -6.096844673156738
    8. '_point' → logprob: -6.096844673156738
    9. 'target' → logprob: -7.096844673156738
    10. '_' → logprob: -7.471844673156738

Token 60: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.030065754428505898
    2. ' self' → logprob: -3.7800657749176025
    3. 'target' → logprob: -5.280065536499023
    4. 'self' → logprob: -7.030065536499023
    5. ' current' → logprob: -7.905065536499023
    6. ' points' → logprob: -8.905065536499023
    7. ' point' → logprob: -9.530065536499023
    8. ')' → logprob: -9.905065536499023
    9. ' hit' → logprob: -10.030065536499023
    10. ' total' → logprob: -10.405065536499023

Token 61: '_hits' (ID: 166473)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.039923395961523056
    2. ':' → logprob: -3.5399234294891357
    3. ')' → logprob: -5.039923191070557
    4. ' ):' → logprob: -7.039923191070557
    5. '_point' → logprob: -7.289923191070557
    6. '_value' → logprob: -7.414923191070557
    7. '_points' → logprob: -7.914923191070557
    8. '_count' → logprob: -8.664923667907715
    9. ',' → logprob: -8.789923667907715
    10. '):
' → logprob: -8.789923667907715

Token 62: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5246722102165222
    2. '):' → logprob: -0.8996722102165222
    3. ')' → logprob: -6.774672031402588
    4. ',' → logprob: -8.524672508239746
    5. ' ):' → logprob: -9.274672508239746
    6. ':int' → logprob: -10.024672508239746
    7. '):
' → logprob: -10.899672508239746
    8. '=' → logprob: -11.149672508239746
    9. '_count' → logprob: -11.274672508239746
    10. ' :' → logprob: -11.649672508239746

Token 63: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05522425100207329
    2. 'int' → logprob: -2.9302241802215576
    3. ')' → logprob: -8.680224418640137
    4. ' )' → logprob: -8.930224418640137
    5. ':int' → logprob: -10.805224418640137
    6. ' ' → logprob: -12.055224418640137
    7. '[int' → logprob: -12.680224418640137
    8. '=int' → logprob: -12.930224418640137
    9. '(int' → logprob: -13.180224418640137
    10. '    ' → logprob: -14.305224418640137

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2284221053123474
    2. '):' → logprob: -1.6034221649169922
    3. ',' → logprob: -5.853422164916992
    4. ')->' → logprob: -10.228422164916992
    5. ' )' → logprob: -10.228422164916992
    6. ':' → logprob: -10.478422164916992
    7. '):
' → logprob: -11.228422164916992
    8. ' ):' → logprob: -11.603422164916992
    9. '   ' → logprob: -11.978422164916992
    10. ' ' → logprob: -14.103422164916992

Token 65: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009566014050506055
    2. '):' → logprob: -7.3759565353393555
    3. '():' → logprob: -8.375956535339355
    4. ':**' → logprob: -10.375956535339355
    5. ' :' → logprob: -10.625956535339355
    6. ':return' → logprob: -11.250956535339355
    7. ':
' → logprob: -12.125956535339355
    8. ':self' → logprob: -12.375956535339355
    9. ':def' → logprob: -12.375956535339355
    10. '(self' → logprob: -12.500956535339355

Token 66: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.15834464132785797
    2. ' ' → logprob: -2.0333447456359863
    3. 'int' → logprob: -4.408344745635986
    4. ' float' → logprob: -5.783344745635986
    5. ' None' → logprob: -8.783344268798828
    6. ' '' → logprob: -10.283344268798828
    7. ' ' → logprob: -10.533344268798828
    8. ' space' → logprob: -10.783344268798828
    9. ' Optional' → logprob: -11.533344268798828
    10. 'float' → logprob: -11.658344268798828

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001254693343071267
    2. '):' → logprob: -9.125125885009766
    3. '():' → logprob: -11.750125885009766
    4. ':**' → logprob: -12.875125885009766
    5. ':return' → logprob: -13.000125885009766
    6. ':
' → logprob: -13.750125885009766
    7. ':def' → logprob: -14.000125885009766
    8. ' :' → logprob: -14.125125885009766
    9. '>:' → logprob: -14.875125885009766
    10. '<|end|>' → logprob: -15.625125885009766

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022891459986567497
    2. '        ' → logprob: -4.897891521453857
    3. ' ' → logprob: -5.147891521453857
    4. '    ' → logprob: -5.772891521453857
    5. '   ' → logprob: -6.772891521453857
    6. ' 
' → logprob: -6.897891521453857
    7. '<|end|>' → logprob: -7.022891521453857
    8. '        
' → logprob: -7.272891521453857
    9. ':' → logprob: -7.647891521453857
    10. '
' → logprob: -7.772891521453857

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34864768385887146
    2. '       ' → logprob: -1.5986477136611938
    3. 'if' (adapté à ' if') → logprob: -3.0986475944519043
    4. '        ' → logprob: -3.5986475944519043
    5. ' current' → logprob: -5.223647594451904
    6. ' return' → logprob: -5.598647594451904
    7. '    ' → logprob: -5.973647594451904
    8. ' i' → logprob: -6.473647594451904
    9. ' pass' → logprob: -6.723647594451904
    10. ' cost' → logprob: -7.098647594451904

Token 70: ' self' (ID: 1051)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.4782288670539856
    2. ' self' → logprob: -0.9782288670539856
    3. 'target' → logprob: -6.22822904586792
    4. 'self' → logprob: -6.60322904586792
    5. ' ' → logprob: -7.35322904586792
    6. ' not' → logprob: -9.353228569030762
    7. ' ' → logprob: -9.728228569030762
    8. '(target' → logprob: -11.728228569030762
    9. '	target' → logprob: -12.728228569030762
    10. ' hit' → logprob: -12.978228569030762

Token 71: '.hit' (ID: 109877)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05638907849788666
    2. '.hit' → logprob: -2.931389093399048
    3. ' .' → logprob: -6.931388854980469
    4. '.total' → logprob: -8.056388854980469
    5. '.cost' → logprob: -9.056388854980469
    6. '.h' → logprob: -10.806388854980469
    7. '.target' → logprob: -11.556388854980469
    8. '.current' → logprob: -11.681388854980469
    9. '.has' → logprob: -11.931388854980469
    10. '.space' → logprob: -12.181388854980469

Token 72: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0002910102193709463
    2. '_' → logprob: -8.250290870666504
    3. ' _' → logprob: -10.750290870666504
    4. '_c' → logprob: -13.125290870666504
    5. '_counts' → logprob: -13.125290870666504
    6. 's' → logprob: -13.625290870666504
    7. '_co' → logprob: -13.750290870666504
    8. '__' → logprob: -15.000290870666504
    9. '```' → logprob: -15.125290870666504
    10. '_counter' → logprob: -15.500290870666504

Token 73: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.020621657371520996
    2. ' <' → logprob: -4.1456217765808105
    3. ' ' → logprob: -5.6456217765808105
    4. '>=' → logprob: -7.0206217765808105
    5. ' >' → logprob: -9.645621299743652
    6. '<' → logprob: -10.395621299743652
    7. ' ==' → logprob: -11.145621299743652
    8. '>' → logprob: -11.895621299743652
    9. ' ' → logprob: -12.020621299743652
    10. '    ' → logprob: -12.020621299743652

Token 74: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.024449778720736504
    2. 'target' → logprob: -3.7744498252868652
    3. ' ' → logprob: -6.774449825286865
    4. '(target' → logprob: -10.774449348449707
    5. '	target' → logprob: -11.524449348449707
    6. ' ' → logprob: -11.774449348449707
    7. '_target' → logprob: -11.899449348449707
    8. '[target' → logprob: -12.274449348449707
    9. '<|end|>' → logprob: -12.899449348449707
    10. '.target' → logprob: -13.524449348449707

Token 75: '_hits' (ID: 166473)
  Prédit: '_hits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hits' → logprob: -0.0015179537003859878
    2. '_' → logprob: -6.5015177726745605
    3. ' _' → logprob: -12.501518249511719
    4. '_hit' → logprob: -12.751518249511719
    5. 's' → logprob: -12.876518249511719
    6. '_s' → logprob: -13.876518249511719
    7. '```' → logprob: -13.876518249511719
    8. '_h' → logprob: -13.876518249511719
    9. '_counts' → logprob: -14.251518249511719
    10. '_count' → logprob: -14.251518249511719

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00028410006780177355
    2. ':
' → logprob: -8.875284194946289
    3. ':return' → logprob: -8.875284194946289
    4. ' :' → logprob: -13.500284194946289
    5. '       ' → logprob: -13.500284194946289
    6. ':**' → logprob: -14.750284194946289
    7. ' or' → logprob: -15.000284194946289
    8. '):' → logprob: -15.625284194946289
    9. ' and' → logprob: -15.750284194946289
    10. ',' → logprob: -16.12528419494629

Token 77: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02673785574734211
    2. ':return' → logprob: -4.776737689971924
    3. '           ' → logprob: -4.901737689971924
    4. ':
' → logprob: -5.026737689971924
    5. '       ' → logprob: -6.026737689971924
    6. '
' → logprob: -7.401737689971924
    7. ' :' → logprob: -7.401737689971924
    8. ' return' → logprob: -8.901738166809082
    9. 'return' → logprob: -9.901738166809082
    10. ' :
' → logprob: -10.776738166809082

Token 78: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9093677401542664
    2. '       ' → logprob: -1.9093677997589111
    3. ' return' → logprob: -2.159367799758911
    4. ' 
' → logprob: -2.284367799758911
    5. 'return' (adapté à ' return') → logprob: -2.409367799758911
    6. '0' → logprob: -2.409367799758911
    7. '           ' → logprob: -3.784367799758911
    8. '        ' → logprob: -4.409367561340332
    9. '
' → logprob: -5.784367561340332
    10. '        
' → logprob: -5.784367561340332

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300296679139137
    2. ' ' → logprob: -3.1680030822753906
    3. '           ' → logprob: -13.79300308227539
    4. 'self' → logprob: -14.16800308227539
    5. '       ' → logprob: -14.66800308227539
    6. ' ' → logprob: -14.79300308227539
    7. '1' → logprob: -14.91800308227539
    8. '               ' → logprob: -15.54300308227539
    9. '        ' → logprob: -15.66800308227539
    10. ' self' → logprob: -15.79300308227539

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '           ' → logprob: -16.500001907348633
    4. '       ' → logprob: -18.125001907348633
    5. '               ' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.500001907348633
    7. 'self' → logprob: -18.750001907348633
    8. '```' → logprob: -18.875001907348633
    9. '                   ' → logprob: -20.625001907348633
    10. '`' → logprob: -20.750001907348633

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019656725227832794
    2. '       ' → logprob: -4.269656658172607
    3. '        
' → logprob: -5.894656658172607
    4. '\n' → logprob: -6.394656658172607
    5. '    
' → logprob: -8.394657135009766
    6. '<|end|>' → logprob: -8.394657135009766
    7. '\
' → logprob: -9.144657135009766
    8. '' → logprob: -9.394657135009766
    9. '```' → logprob: -9.394657135009766
    10. '        ' → logprob: -9.769657135009766

Token 82: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03217639401555061
    2. '       ' → logprob: -3.7821764945983887
    3. '        
' → logprob: -4.907176494598389
    4. '\n' → logprob: -7.532176494598389
    5. '    
' → logprob: -7.907176494598389
    6. '<|end|>' → logprob: -9.28217601776123
    7. '' → logprob: -9.53217601776123
    8. '\
' → logprob: -9.53217601776123
    9. 'n' → logprob: -9.65717601776123
    10. '```' → logprob: -9.90717601776123

Token 83: ' needed' (ID: 6118)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5645956993103027
    2. '       ' → logprob: -1.0645956993103027
    3. ' else' → logprob: -3.6895956993103027
    4. '        
' → logprob: -3.6895956993103027
    5. ' 
' → logprob: -4.939595699310303
    6. '```' → logprob: -5.064595699310303
    7. ' if' → logprob: -5.939595699310303
    8. 'n' → logprob: -6.064595699310303
    9. ' elif' → logprob: -6.064595699310303
    10. 'else' → logprob: -6.564595699310303

Token 84: ' =' (ID: 314)
  Prédit: '_hits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hits' → logprob: -0.31398120522499084
    2. '_' → logprob: -1.3139811754226685
    3. '_slots' → logprob: -7.813981056213379
    4. '_points' → logprob: -9.563981056213379
    5. ' _' → logprob: -9.813981056213379
    6. '_to' → logprob: -10.063981056213379
    7. ' =' → logprob: -10.688981056213379
    8. '_hit' → logprob: -10.813981056213379
    9. '_votes' → logprob: -11.688981056213379
    10. '_reads' → logprob: -11.688981056213379

Token 85: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.004109865520149469
    2. 'target' → logprob: -5.504109859466553
    3. ' max' → logprob: -10.754110336303711
    4. '(target' → logprob: -12.379110336303711
    5. ' self' → logprob: -12.504110336303711
    6. ' (' → logprob: -13.754110336303711
    7. '	target' → logprob: -15.379110336303711
    8. 'max' → logprob: -15.379110336303711
    9. ' ' → logprob: -15.504110336303711
    10. ' ' → logprob: -15.504110336303711

Token 86: '_hits' (ID: 166473)
  Prédit: '_hits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hits' → logprob: -1.282920129597187e-05
    2. ' _' → logprob: -12.125012397766113
    3. '_' → logprob: -12.250012397766113
    4. '```' → logprob: -14.375012397766113
    5. 'hits' → logprob: -14.750012397766113
    6. '_hit' → logprob: -14.875012397766113
    7. '_targets' → logprob: -15.250012397766113
    8. '_counts' → logprob: -15.500012397766113
    9. '-_' → logprob: -15.625012397766113
    10. '_count' → logprob: -16.25001335144043

Token 87: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0009390931227244437
    2. '-' → logprob: -7.000938892364502
    3. ' ' → logprob: -10.75093936920166
    4. '<|end|>' → logprob: -12.87593936920166
    5. '   ' → logprob: -14.00093936920166
    6. ' ' → logprob: -14.00093936920166
    7. '```' → logprob: -14.50093936920166
    8. '  ' → logprob: -14.87593936920166
    9. '       ' → logprob: -15.37593936920166
    10. '        ' → logprob: -15.62593936920166

Token 88: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5231643915176392
    2. ' self' → logprob: -0.8981643915176392
    3. '       ' → logprob: -10.523164749145508
    4. ' ' → logprob: -12.023164749145508
    5. '	self' → logprob: -12.898164749145508
    6. '   ' → logprob: -13.273164749145508
    7. '<|end|>' → logprob: -13.773164749145508
    8. ' ' → logprob: -14.773164749145508
    9. '_self' → logprob: -14.898164749145508
    10. '    ' → logprob: -15.023164749145508

Token 89: '.hit' (ID: 109877)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14282666146755219
    2. '.hit' → logprob: -2.017826557159424
    3. '.h' → logprob: -9.517827033996582
    4. '.user' → logprob: -11.267827033996582
    5. '.hist' → logprob: -12.017827033996582
    6. '‌.' → logprob: -12.142827033996582
    7. '.ht' → logprob: -12.642827033996582
    8. '._' → logprob: -12.767827033996582
    9. '.point' → logprob: -12.892827033996582

Token 90: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00043805985478684306
    2. '_' → logprob: -7.875438213348389
    3. ' _' → logprob: -10.25043773651123
    4. '_c' → logprob: -11.37543773651123
    5. '_counts' → logprob: -12.87543773651123
    6. '_co' → logprob: -13.12543773651123
    7. '._' → logprob: -13.37543773651123
    8. '_counter' → logprob: -13.50043773651123
    9. 'count' → logprob: -14.00043773651123
    10. '_code' → logprob: -15.37543773651123

Token 91: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3462035357952118
    2. ' 
' → logprob: -1.4712035655975342
    3. '       ' → logprob: -3.346203565597534
    4. '  
' → logprob: -4.971203327178955
    5. '<|end|>' → logprob: -4.971203327178955
    6. '        
' → logprob: -5.096203327178955
    7. '```' → logprob: -6.721203327178955
    8. ' return' → logprob: -6.971203327178955
    9. '\' → logprob: -7.221203327178955
    10. 'return' → logprob: -7.221203327178955

Token 92: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6928766965866089
    2. '       ' → logprob: -1.0678766965866089
    3. ' 
' → logprob: -2.6928768157958984
    4. '        
' → logprob: -3.1928768157958984
    5. '<|end|>' → logprob: -4.317876815795898
    6. 'n' → logprob: -4.692876815795898
    7. '\n' → logprob: -5.317876815795898
    8. '  
' → logprob: -5.567876815795898
    9. '\' → logprob: -6.067876815795898
    10. '```' → logprob: -6.067876815795898

Token 93: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3896902799606323
    2. 'return' → logprob: -1.5146902799606323
    3. ' if' → logprob: -2.764690399169922
    4. '       ' → logprob: -3.514690399169922
    5. 'if' → logprob: -6.389690399169922
    6. ' cost' → logprob: -6.764690399169922
    7. ' misses' → logprob: -7.139690399169922
    8. ' available' → logprob: -7.389690399169922
    9. ' current' → logprob: -7.514690399169922
    10. ' slots' → logprob: -7.639690399169922

Token 94: ' We' (ID: 1416)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3606788218021393
    2. ' if' → logprob: -2.4856789112091064
    3. 'return' → logprob: -2.7356789112091064
    4. ' cost' → logprob: -2.8606789112091064
    5. ' remaining' → logprob: -4.110678672790527
    6. ' needed' → logprob: -4.360678672790527
    7. ' additional' → logprob: -4.610678672790527
    8. ' possible' → logprob: -5.235678672790527
    9. 'cost' → logprob: -5.235678672790527
    10. ' current' → logprob: -5.235678672790527

Token 95: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.22124183177948
    2. ' can' → logprob: -1.47124183177948
    3. ' need' → logprob: -1.47124183177948
    4. '   ' → logprob: -3.4712419509887695
    5. ' should' → logprob: -3.4712419509887695
    6. ' return' → logprob: -3.7212419509887695
    7. ' have' → logprob: -4.2212419509887695
    8. ' assume' → logprob: -4.5962419509887695
    9. ' cannot' → logprob: -4.5962419509887695
    10. ' don't' → logprob: -4.7212419509887695

Token 96: ' convert' (ID: 8452)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.7670795321464539
    2. ' use' → logprob: -1.1420795917510986
    3. ' assume' → logprob: -2.2670795917510986
    4. ' try' → logprob: -3.6420795917510986
    5. 'simulate' → logprob: -4.5170793533325195
    6. 'only' → logprob: -4.7670793533325195
    7. '       ' → logprob: -4.8920793533325195
    8. ' consider' → logprob: -4.8920793533325195
    9. ' add' → logprob: -5.2670793533325195
    10. 'use' → logprob: -5.5170793533325195

Token 97: ' misses' (ID: 100918)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.9878268241882324
    2. ' the' → logprob: -1.9878268241882324
    3. ' some' → logprob: -2.1128268241882324
    4. ' needed' → logprob: -2.1128268241882324
    5. ' misses' → logprob: -2.2378268241882324
    6. ' one' → logprob: -2.4878268241882324
    7. ' self' → logprob: -2.7378268241882324
    8. ' missed' → logprob: -3.3628268241882324
    9. ' hits' → logprob: -3.4878268241882324
    10. ' missing' → logprob: -3.9878268241882324

Token 98: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4582503139972687
    2. ' into' → logprob: -1.0832502841949463
    3. ' ' → logprob: -4.708250522613525
    4. ' *' → logprob: -4.833250522613525
    5. '    ' → logprob: -5.833250522613525
    6. 'to' → logprob: -5.958250522613525
    7. '   ' → logprob: -6.583250522613525
    8. ' +' → logprob: -6.708250522613525
    9. '*' → logprob: -7.083250522613525
    10. ' //' → logprob: -7.833250522613525

Token 99: ' hits' (ID: 21571)
  Prédit: ' hits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hits' → logprob: -0.038290947675704956
    2. 'hits' → logprob: -3.5382909774780273
    3. ' points' → logprob: -5.163290977478027
    4. '_hits' → logprob: -7.538290977478027
    5. ' successes' → logprob: -8.038290977478027
    6. ' hit' → logprob: -8.038290977478027
    7. 'points' → logprob: -8.163290977478027
    8. ' spaces' → logprob: -8.413290977478027
    9. ' wins' → logprob: -9.038290977478027
    10. ' slots' → logprob: -9.100790977478027

Token 100: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26155513525009155
    2. ' if' → logprob: -2.6365551948547363
    3. '
' → logprob: -3.1365551948547363
    4. ',' → logprob: -3.1365551948547363
    5. ' by' → logprob: -3.6365551948547363
    6. ' for' → logprob: -4.636555194854736
    7. ' to' → logprob: -5.261555194854736
    8. ' ' → logprob: -5.386555194854736
    9. ' with' → logprob: -5.636555194854736
    10. ' or' → logprob: -5.886555194854736

Token 101: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0906211137771606
    2. ' a' → logprob: -1.4656211137771606
    3. ' ' → logprob: -1.7156211137771606
    4. '1' → logprob: -1.8406211137771606
    5. ' needed' → logprob: -3.590620994567871
    6. ' self' → logprob: -3.715620994567871
    7. 'self' → logprob: -4.590620994567871
    8. ' one' → logprob: -4.965620994567871
    9. 'needed' → logprob: -5.340620994567871
    10. ' cost' → logprob: -5.715620994567871

Token 102: ' cost' (ID: 3097)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11746056377887726
    2. ' cost' → logprob: -2.3674604892730713
    3. ' ' → logprob: -4.99246072769165
    4. ' rate' → logprob: -5.61746072769165
    5. ' one' → logprob: -5.86746072769165
    6. ' n' → logprob: -6.11746072769165
    7. 'cost' → logprob: -7.49246072769165
    8. ' certain' → logprob: -8.367460250854492
    9. ' linear' → logprob: -9.492460250854492
    10. 'rate' → logprob: -9.617460250854492

Token 103: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.25962406396865845
    2. '       ' → logprob: -1.6346240043640137
    3. '=' → logprob: -4.259624004364014
    4. ' =' → logprob: -5.134624004364014
    5. '   ' → logprob: -5.634624004364014
    6. ' ' → logprob: -6.384624004364014
    7. ',' → logprob: -6.634624004364014
    8. '
' → logprob: -6.884624004364014
    9. 'of' → logprob: -7.134624004364014
    10. '1' → logprob: -7.259624004364014

Token 104: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1871451586484909
    2. '1' → logprob: -1.9371451139450073
    3. '2' → logprob: -3.687145233154297
    4. '10' → logprob: -7.187145233154297
    5. '5' → logprob: -8.562145233154297
    6. '3' → logprob: -8.812145233154297
    7. '```' → logprob: -9.312145233154297
    8. '100' → logprob: -9.812145233154297
    9. ' self' → logprob: -10.062145233154297
    10. 'self' → logprob: -10.187145233154297

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2137569934129715
    2. ' ' → logprob: -2.088757038116455
    3. '2' → logprob: -2.713757038116455
    4. '5' → logprob: -6.713757038116455
    5. '10' → logprob: -7.338757038116455
    6. 'self' → logprob: -8.838756561279297
    7. '3' → logprob: -8.963756561279297
    8. '100' → logprob: -9.963756561279297
    9. ' self' → logprob: -10.213756561279297
    10. '```' → logprob: -10.776256561279297

Token 106: ' per' (ID: 777)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.588535726070404
    2. ' per' → logprob: -1.3385357856750488
    3. '       ' → logprob: -3.213535785675049
    4. ' *' → logprob: -3.463535785675049
    5. ',' → logprob: -3.588535785675049
    6. '*' → logprob: -4.088535785675049
    7. '
' → logprob: -4.463535785675049
    8. '        
' → logprob: -4.713535785675049
    9. ' each' → logprob: -4.838535785675049
    10. ' return' → logprob: -5.088535785675049

Token 107: ' slot' (ID: 8215)
  Prédit: 'miss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'miss' → logprob: -0.26027289032936096
    2. ' miss' → logprob: -1.5102728605270386
    3. ' conversion' → logprob: -5.885272979736328
    4. ' hit' → logprob: -7.135272979736328
    5. ' missed' → logprob: -7.260272979736328
    6. ' slot' → logprob: -7.260272979736328
    7. ' point' → logprob: -7.760272979736328
    8. 'conversion' → logprob: -7.760272979736328
    9. ' convert' → logprob: -7.885272979736328
    10. ' unit' → logprob: -7.885272979736328

Token 108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37445712089538574
    2. '
' → logprob: -1.2494571208953857
    3. ',' → logprob: -4.374457359313965
    4. '        
' → logprob: -5.374457359313965
    5. '.' → logprob: -5.874457359313965
    6. '<|end|>' → logprob: -6.874457359313965
    7. ' to' → logprob: -7.499457359313965
    8. 'return' → logprob: -7.624457359313965
    9. ' return' → logprob: -7.874457359313965
    10. ' for' → logprob: -8.124457359313965

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03383149579167366
    2. '
' → logprob: -3.7838315963745117
    3. ' return' → logprob: -5.783831596374512
    4. '        
' → logprob: -6.033831596374512
    5. 'return' → logprob: -6.408831596374512
    6. ',' → logprob: -7.658831596374512
    7. '<|end|>' → logprob: -7.658831596374512
    8. '        ' → logprob: -8.033831596374512
    9. '\n' → logprob: -8.283831596374512
    10. '   ' → logprob: -8.408831596374512

Token 110: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8768154978752136
    2. 'return' (adapté à ' return') → logprob: -0.8768154978752136
    3. ' if' → logprob: -2.7518155574798584
    4. ' return' → logprob: -2.7518155574798584
    5. 'if' → logprob: -3.3768155574798584
    6. 'cost' → logprob: -6.001815319061279
    7. ' cost' → logprob: -6.501815319061279
    8. '```' → logprob: -7.376815319061279
    9. 'available' → logprob: -7.876815319061279
    10. ' available' → logprob: -8.626815795898438

Token 111: ' max' (ID: 2999)
  Prédit: ' needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' needed' → logprob: -0.04493475332856178
    2. 'needed' → logprob: -3.1699347496032715
    3. ' self' → logprob: -6.2949347496032715
    4. 'self' → logprob: -9.54493522644043
    5. '_needed' → logprob: -12.16993522644043
    6. ' need' → logprob: -12.91993522644043
    7. ' necessary' → logprob: -12.91993522644043
    8. '   ' → logprob: -13.04493522644043
    9. '       ' → logprob: -13.79493522644043
    10. ' ' → logprob: -13.91993522644043

Token 112: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.2994620242971e-06
    2. '(self' → logprob: -12.250008583068848
    3. '((' → logprob: -13.500008583068848
    4. ' (' → logprob: -14.125008583068848
    5. '0' → logprob: -15.000008583068848
    6. '<|end|>' → logprob: -15.250008583068848
    7. 'needed' → logprob: -15.375008583068848
    8. '(
' → logprob: -15.750008583068848
    9. '(required' → logprob: -16.25000762939453
    10. ')' → logprob: -17.75000762939453

Token 113: 'needed' (ID: 57162)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22436103224754333
    2. 'needed' → logprob: -2.099360942840576
    3. ' ' → logprob: -3.224360942840576
    4. ' self' → logprob: -4.349360942840576
    5. 'self' → logprob: -4.349360942840576
    6. ' needed' → logprob: -4.599360942840576
    7. '(' → logprob: -6.349360942840576
    8. '(self' → logprob: -7.599360942840576
    9. ')' → logprob: -8.724361419677734
    10. '_needed' → logprob: -9.474361419677734

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27868908643722534
    2. ' -' → logprob: -1.5286891460418701
    3. ' ,' → logprob: -3.65368914604187
    4. ')' → logprob: -9.02868938446045
    5. '-' → logprob: -9.02868938446045
    6. ' ' → logprob: -9.02868938446045
    7. '0' → logprob: -10.52868938446045
    8. '<|end|>' → logprob: -10.77868938446045
    9. '       ' → logprob: -10.90368938446045
    10. ' -,' → logprob: -11.15368938446045

Token 115: ' ' (ID: 220)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7926322221755981
    2. '0' → logprob: -1.4176322221755981
    3. 'self' → logprob: -1.4176322221755981
    4. ' ' → logprob: -2.7926321029663086
    5. '       ' → logprob: -7.417632102966309
    6. ')' → logprob: -8.042632102966309
    7. '(self' → logprob: -8.917632102966309
    8. '<|end|>' → logprob: -9.167632102966309
    9. '[self' → logprob: -9.730132102966309
    10. '	self' → logprob: -9.917632102966309

Token 116: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.48461249470710754
    2. '0' → logprob: -0.9846124649047852
    3. ' self' → logprob: -4.859612464904785
    4. ' ' → logprob: -5.984612464904785
    5. '       ' → logprob: -9.484612464904785
    6. ')' → logprob: -10.359612464904785
    7. '(self' → logprob: -10.484612464904785
    8. '   ' → logprob: -11.109612464904785
    9. '<|end|>' → logprob: -11.359612464904785
    10. '-self' → logprob: -11.859612464904785

Token 117: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009697424247860909
    2. ' )' → logprob: -4.759697437286377
    3. '       ' → logprob: -6.884697437286377
    4. '<|end|>' → logprob: -10.759696960449219
    5. '   ' → logprob: -11.259696960449219
    6. ' -' → logprob: -11.884696960449219
    7. ')
' → logprob: -12.134696960449219
    8. '}' → logprob: -13.259696960449219
    9. '        ' → logprob: -13.384696960449219
    10. '))' → logprob: -13.509696960449219

Token 118: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.06648313999176025
    2. ' Space' → logprob: -3.5664830207824707
    3. ' Cache' → logprob: -3.8164830207824707
    4. ' Player' → logprob: -5.316483020782471
    5. ' ' → logprob: -6.566483020782471
    6. ' Counter' → logprob: -6.691483020782471
    7. ' User' → logprob: -6.691483020782471
    8. ' Target' → logprob: -6.816483020782471
    9. ' Slot' → logprob: -8.066483497619629
    10. ' Score' → logprob: -8.066483497619629

Token 120: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.0028979515191167593
    2. 'Cache' → logprob: -6.7528977394104
    3. 'Tracker' → logprob: -8.752898216247559
    4. 'Cards' → logprob: -8.877898216247559
    5. 'Accumulator' → logprob: -8.877898216247559
    6. 'Calculator' → logprob: -9.252898216247559
    7. 'Manager' → logprob: -9.252898216247559
    8. 'Collector' → logprob: -9.252898216247559
    9. 'Multiplier' → logprob: -9.502898216247559
    10. 'Counter' → logprob: -9.627898216247559

Token 121: 'Collection' (ID: 4160)
  Prédit: 'Manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Manager' → logprob: -0.8510411381721497
    2. ':' → logprob: -0.9760411381721497
    3. 'Collection' → logprob: -3.226041078567505
    4. 'Set' → logprob: -3.351041078567505
    5. 's' → logprob: -3.476041078567505
    6. 'Factory' → logprob: -4.726041316986084
    7. 'List' → logprob: -4.851041316986084
    8. 'Allocator' → logprob: -4.851041316986084
    9. 'Builder' → logprob: -5.476041316986084
    10. 'Handler' → logprob: -5.726041316986084

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020392718724906445
    2. '(' → logprob: -6.877039432525635
    3. ':
' → logprob: -7.627039432525635
    4. '<|end|>' → logprob: -7.752039432525635
    5. ' :' → logprob: -10.252038955688477
    6. '):' → logprob: -11.252038955688477
    7. '[' → logprob: -12.002038955688477
    8. '():' → logprob: -12.127038955688477
    9. '(
' → logprob: -12.252038955688477
    10. '<|end|>' → logprob: -12.877038955688477

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09038881212472916
    2. ':
' → logprob: -2.715388774871826
    3. ':' → logprob: -4.340388774871826
    4. ' def' → logprob: -5.840388774871826
    5. 'def' → logprob: -7.090388774871826
    6. '    
' → logprob: -7.465388774871826
    7. ' :
' → logprob: -7.715388774871826
    8. '
' → logprob: -7.840388774871826
    9. '(' → logprob: -7.840388774871826
    10. ' (' → logprob: -7.965388774871826

Token 124: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06242954358458519
    2. 'def' (adapté à ' def') → logprob: -3.312429428100586
    3. '   ' → logprob: -4.062429428100586
    4. '    ' → logprob: -5.062429428100586
    5. 'class' → logprob: -8.187429428100586
    6. ' ' → logprob: -9.437429428100586
    7. ' 
' → logprob: -9.687429428100586
    8. ' class' → logprob: -9.937429428100586
    9. '    
' → logprob: -10.562429428100586
    10. '```' → logprob: -11.312429428100586

Token 125: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018722109496593475
    2. ' ' → logprob: -4.268722057342529
    3. ' init' → logprob: -5.518722057342529
    4. 'init' → logprob: -8.268722534179688
    5. '_init' → logprob: -8.643722534179688
    6. ' def' → logprob: -9.768722534179688
    7. ' _' → logprob: -10.643722534179688
    8. ' ```' → logprob: -11.518722534179688
    9. ' ' → logprob: -12.893722534179688
    10. ' ___' → logprob: -13.268722534179688

Token 126: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.088346359931165e-07
    2. ' init' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.0
    4. 'def' → logprob: -18.5
    5. '  ' → logprob: -18.875
    6. ' ' → logprob: -19.375
    7. '_init' → logprob: -19.375
    8. 'i' → logprob: -19.75
    9. '
' → logprob: -19.75
    10. '	init' → logprob: -19.75

Token 127: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00023047674039844424
    2. '__' → logprob: -8.62523078918457
    3. '__(
' → logprob: -10.62523078918457
    4. '(self' → logprob: -11.12523078918457
    5. '(' → logprob: -12.25023078918457
    6. '_(' → logprob: -12.37523078918457
    7. '__((' → logprob: -13.12523078918457
    8. ' (' → logprob: -15.25023078918457
    9. '__('' → logprob: -15.87523078918457
    10. '_' → logprob: -15.87523078918457

Token 128: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023272152990102768
    2. ' self' → logprob: -3.7732720375061035
    3. ')' → logprob: -11.273272514343262
    4. '       ' → logprob: -12.398272514343262
    5. '
' → logprob: -12.648272514343262
    6. ' ' → logprob: -13.398272514343262
    7. '   ' → logprob: -13.648272514343262
    8. ',' → logprob: -13.648272514343262
    9. 'total' → logprob: -14.148272514343262
    10. '

' → logprob: -14.398272514343262

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010902086272835732
    2. ' ,' → logprob: -5.010901927947998
    3. 'self' → logprob: -5.635901927947998
    4. ' self' → logprob: -7.760901927947998
    5. '(self' → logprob: -9.760902404785156
    6. ')' → logprob: -10.135902404785156
    7. ' ' → logprob: -10.260902404785156
    8. ' (' → logprob: -11.010902404785156
    9. ',self' → logprob: -11.260902404785156
    10. '<|end|>' → logprob: -12.135902404785156

Token 130: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -1.1078346967697144
    2. 'self' → logprob: -1.3578346967697144
    3. ' self' → logprob: -1.8578346967697144
    4. ' point' → logprob: -1.9828346967697144
    5. 'cards' → logprob: -2.857834815979004
    6. 'point' → logprob: -3.232834815979004
    7. ' points' → logprob: -4.857834815979004
    8. '   ' → logprob: -5.607834815979004
    9. 'points' → logprob: -5.982834815979004
    10. ')' → logprob: -5.982834815979004

Token 131: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13213486969470978
    2. '):' → logprob: -2.1321349143981934
    3. '=None' → logprob: -6.257134914398193
    4. '):
' → logprob: -6.382134914398193
    5. '=[]' → logprob: -7.132134914398193
    6. ' ):' → logprob: -8.007134437561035
    7. ')' → logprob: -8.757134437561035
    8. '=' → logprob: -9.257134437561035
    9. ':list' → logprob: -10.007134437561035
    10. ' :' → logprob: -10.007134437561035

Token 132: ' N' (ID: 478)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.05676397681236267
    2. ' total' → logprob: -3.3067638874053955
    3. 'target' → logprob: -4.931764125823975
    4. ' cards' → logprob: -5.931764125823975
    5. ' points' → logprob: -6.306764125823975
    6. ' current' → logprob: -6.556764125823975
    7. ' max' → logprob: -7.181764125823975
    8. ' slots' → logprob: -7.181764125823975
    9. 'total' → logprob: -7.431764125823975
    10. ' available' → logprob: -7.431764125823975

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1689213663339615
    2. ':' → logprob: -1.9189213514328003
    3. ' ):' → logprob: -5.66892147064209
    4. '):
' → logprob: -6.41892147064209
    5. '=' → logprob: -6.79392147064209
    6. ':int' → logprob: -6.91892147064209
    7. ',' → logprob: -7.04392147064209
    8. ')' → logprob: -9.04392147064209
    9. '_slots' → logprob: -9.16892147064209
    10. '_total' → logprob: -9.54392147064209

Token 134: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03337905928492546
    2. '):' → logprob: -3.783379077911377
    3. '       ' → logprob: -4.908379077911377
    4. '<|end|>' → logprob: -6.658379077911377
    5. ',' → logprob: -7.283379077911377
    6. '):
' → logprob: -8.033378601074219
    7. ':
' → logprob: -8.533378601074219
    8. ')' → logprob: -9.408378601074219
    9. '<|end|>' → logprob: -9.908378601074219
    10. ' :' → logprob: -10.408378601074219

Token 135: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.15145081281661987
    2. '       ' → logprob: -2.2764508724212646
    3. 'self' (adapté à ' self') → logprob: -3.2764508724212646
    4. '        ' → logprob: -10.276451110839844
    5. ' ' → logprob: -10.526451110839844
    6. '	self' → logprob: -10.651451110839844
    7. '   ' → logprob: -11.151451110839844
    8. ' ' → logprob: -11.401451110839844
    9. '      ' → logprob: -12.401451110839844
    10. '    ' → logprob: -12.526451110839844

Token 136: '.cards' (ID: 91358)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.706484317779541
    2. '.cards' → logprob: -0.706484317779541
    3. ' .' → logprob: -4.831484317779541
    4. '.points' → logprob: -5.706484317779541
    5. '_cards' → logprob: -7.581484317779541
    6. ' =' → logprob: -7.706484317779541
    7. '.total' → logprob: -8.206483840942383
    8. '.c' → logprob: -8.831483840942383
    9. ' ' → logprob: -9.331483840942383
    10. '.point' → logprob: -9.456483840942383

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12716296315193176
    2. '=' → logprob: -2.1271629333496094
    3. '.extend' → logprob: -8.87716293334961
    4. '.append' → logprob: -10.00216293334961
    5. '.' → logprob: -10.12716293334961
    6. ' ' → logprob: -12.75216293334961
    7. '   ' → logprob: -13.62716293334961
    8. ')' → logprob: -14.12716293334961
    9. '=[]' → logprob: -14.37716293334961
    10. '<|end|>' → logprob: -14.62716293334961

Token 138: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.007909203879535198
    2. 'cards' → logprob: -5.132909297943115
    3. ' []' → logprob: -6.757909297943115
    4. ' [' → logprob: -7.507909297943115
    5. '[]' → logprob: -8.757908821105957
    6. '(cards' → logprob: -9.882908821105957
    7. ' ' → logprob: -11.382908821105957
    8. '.cards' → logprob: -11.507908821105957
    9. '[' → logprob: -11.757908821105957
    10. '_cards' → logprob: -12.007908821105957

Token 139: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00882161408662796
    2. '<|end|>' → logprob: -4.758821487426758
    3. ' 
' → logprob: -9.758821487426758
    4. '       ' → logprob: -9.883821487426758
    5. '  
' → logprob: -10.008821487426758
    6. '        
' → logprob: -10.758821487426758
    7. '<|end|>' → logprob: -10.883821487426758
    8. '
' → logprob: -12.258821487426758
    9. '    
' → logprob: -12.258821487426758
    10. ' ' → logprob: -13.383821487426758

Token 140: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027713701128959656
    2. '       ' → logprob: -3.9027137756347656
    3. '<|end|>' → logprob: -5.027713775634766
    4. '        
' → logprob: -8.152713775634766
    5. '  
' → logprob: -8.902713775634766
    6. ' 
' → logprob: -9.527713775634766
    7. '    
' → logprob: -10.152713775634766
    8. '<|end|>' → logprob: -10.402713775634766
    9. '
' → logprob: -11.527713775634766
    10. ',' → logprob: -12.777713775634766

Token 141: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5760543942451477
    2. 'self' (adapté à ' self') → logprob: -0.8260543942451477
    3. 'N' → logprob: -9.576054573059082
    4. '       ' → logprob: -10.326054573059082
    5. ' N' → logprob: -11.576054573059082
    6. '
' → logprob: -13.451054573059082
    7. 'n' → logprob: -14.701054573059082
    8. ' ' → logprob: -15.076054573059082
    9. ' 
' → logprob: -15.076054573059082
    10. ' target' → logprob: -15.826054573059082

Token 142: '.target' (ID: 11090)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4500140845775604
    2. '.N' → logprob: -1.2000141143798828
    3. '.total' → logprob: -3.450014114379883
    4. ' .' → logprob: -3.825014114379883
    5. '.n' → logprob: -5.200014114379883
    6. '.target' → logprob: -7.075014114379883
    7. ' ' → logprob: -8.450014114379883
    8. '.points' → logprob: -9.075014114379883
    9. ' N' → logprob: -9.325014114379883
    10. '
' → logprob: -9.575014114379883

Token 143: ' =' (ID: 314)
  Prédit: '_hits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hits' → logprob: -0.0038180106785148382
    2. '_' → logprob: -6.253818035125732
    3. '_hit' → logprob: -7.753818035125732
    4. ' =' → logprob: -7.753818035125732
    5. '_targets' → logprob: -7.753818035125732
    6. '_target' → logprob: -8.128817558288574
    7. '_slots' → logprob: -9.503817558288574
    8. '_points' → logprob: -9.628817558288574
    9. '_count' → logprob: -10.003817558288574
    10. '=' → logprob: -10.503817558288574

Token 144: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.029758941382169724
    2. 'N' → logprob: -3.529758930206299
    3. ' ' → logprob: -12.404759407043457
    4. ' ' → logprob: -12.529759407043457
    5. ' 
' → logprob: -15.029759407043457
    6. '	N' → logprob: -15.904759407043457
    7. ' target' → logprob: -16.90475845336914
    8. 'target' → logprob: -17.02975845336914
    9. '[N' → logprob: -17.27975845336914
    10. 'n' → logprob: -17.52975845336914

Token 145: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08396747708320618
    2. '<|end|>' → logprob: -2.833967447280884
    3. '   ' → logprob: -4.708967685699463
    4. 'def' → logprob: -4.958967685699463
    5. '    
' → logprob: -6.208967685699463
    6. '

' → logprob: -6.583967685699463
    7. ' def' → logprob: -6.708967685699463
    8. '<|end|>' → logprob: -7.208967685699463
    9. '        
' → logprob: -8.958967208862305
    10. '  
' → logprob: -9.333967208862305

Token 147: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7776222825050354
    2. '<|end|>' → logprob: -0.7776222825050354
    3. '
' → logprob: -2.7776222229003906
    4. '   ' → logprob: -5.152622222900391
    5. '       ' → logprob: -5.402622222900391
    6. ' def' → logprob: -5.777622222900391
    7. 'self' (adapté à ' self') → logprob: -5.902622222900391
    8. '<|end|>' → logprob: -6.402622222900391
    9. ' self' → logprob: -8.27762222290039
    10. ' ' → logprob: -8.90262222290039

Token 148: '.M' (ID: 2015)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9671680927276611
    2. '._' → logprob: -1.8421680927276611
    3. '_cost' → logprob: -1.8421680927276611
    4. '_total' → logprob: -2.342168092727661
    5. ' .' → logprob: -2.592168092727661
    6. 'def' → logprob: -4.092167854309082
    7. ' _' → logprob: -4.217167854309082
    8. '.total' → logprob: -4.217167854309082
    9. ' def' → logprob: -4.467167854309082
    10. '_' → logprob: -4.842167854309082

Token 149: ' =' (ID: 314)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.7548710107803345
    2. ' =' → logprob: -0.8798710107803345
    3. '=' → logprob: -2.754870891571045
    4. 'emory' → logprob: -4.254870891571045
    5. 'issing' → logprob: -4.629870891571045
    6. 'AX' → logprob: -5.504870891571045
    7. '=None' → logprob: -5.879870891571045
    8. '   ' → logprob: -5.879870891571045
    9. 'ethod' → logprob: -6.379870891571045
    10. '_slots' → logprob: -6.754870891571045

Token 150: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2126207947731018
    2. 'len' → logprob: -1.962620735168457
    3. ' sum' → logprob: -3.462620735168457
    4. ' ' → logprob: -4.962620735168457
    5. ' max' → logprob: -5.212620735168457
    6. 'sum' → logprob: -5.962620735168457
    7. '[len' → logprob: -7.087620735168457
    8. ' float' → logprob: -7.087620735168457
    9. 'max' → logprob: -7.212620735168457
    10. '0' → logprob: -7.712620735168457

Token 151: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.2538619041442871
    2. '(self' → logprob: -1.503861904144287
    3. '(' → logprob: -6.253861904144287
    4. '(c' → logprob: -12.003862380981445
    5. '(card' → logprob: -13.753862380981445
    6. '(points' → logprob: -15.128862380981445
    7. 'self' → logprob: -15.753862380981445
    8. '(car' → logprob: -16.878862380981445
    9. ' cards' → logprob: -16.878862380981445
    10. '(s' → logprob: -17.503862380981445

Token 152: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030709904967807233
    2. ' )' → logprob: -8.125307083129883
    3. ')
' → logprob: -12.625307083129883
    4. '<|end|>' → logprob: -12.625307083129883
    5. '       ' → logprob: -12.750307083129883
    6. '   ' → logprob: -13.875307083129883
    7. ' ' → logprob: -15.375307083129883
    8. '}' → logprob: -17.000307083129883
    9. '())' → logprob: -17.125307083129883
    10. ')

' → logprob: -17.250307083129883

Token 153: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14894168078899384
    2. '<|end|>' → logprob: -2.6489417552948
    3. 'def' → logprob: -3.1489417552948
    4. '   ' → logprob: -4.398941516876221
    5. ' def' → logprob: -4.773941516876221
    6. '

' → logprob: -6.648941516876221
    7. '    
' → logprob: -6.773941516876221
    8. '<|end|>' → logprob: -7.148941516876221
    9. '	def' → logprob: -8.523941993713379
    10. '       ' → logprob: -8.898941993713379

Token 154: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0037462865002453327
    2. ' def' → logprob: -5.628746509552002
    3. '   ' → logprob: -8.878746032714844
    4. '
' → logprob: -13.003746032714844
    5. 'import' → logprob: -13.128746032714844
    6. 'from' → logprob: -13.378746032714844
    7. 'de' → logprob: -15.253746032714844
    8. ' ' → logprob: -15.503746032714844
    9. 'dp' → logprob: -15.628746032714844
    10. '    
' → logprob: -15.628746032714844

Token 155: ' minimum' (ID: 11085)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.2729651927947998
    2. ' min' → logprob: -1.6479651927947998
    3. ' minimal' → logprob: -1.8979651927947998
    4. ' cost' → logprob: -2.0229651927948
    5. ' minimum' → logprob: -2.0229651927948
    6. ' best' → logprob: -3.2729651927948
    7. 'cost' → logprob: -4.022965431213379
    8. 'total' → logprob: -4.272965431213379
    9. 'min' → logprob: -4.522965431213379
    10. ' calculate' → logprob: -4.772965431213379

Token 156: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.01934131793677807
    2. '_total' → logprob: -4.519341468811035
    3. '_' → logprob: -5.519341468811035
    4. '_points' → logprob: -6.144341468811035
    5. '_point' → logprob: -7.269341468811035
    6. '_slots' → logprob: -8.144341468811035
    7. '_target' → logprob: -8.769341468811035
    8. '_cards' → logprob: -8.769341468811035
    9. '_card' → logprob: -9.144341468811035
    10. '_hit' → logprob: -9.519341468811035

Token 157: '_for' (ID: 11903)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002744365716353059
    2. '_to' → logprob: -6.002744197845459
    3. '(' → logprob: -8.377744674682617
    4. ' (' → logprob: -10.502744674682617
    5. '_(' → logprob: -11.877744674682617
    6. '_' → logprob: -12.877744674682617
    7. 'self' → logprob: -14.502744674682617
    8. '   ' → logprob: -15.252744674682617
    9. 'to' → logprob: -15.627744674682617
    10. 'To' → logprob: -15.752744674682617

Token 158: '_pr' (ID: 18177)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.049568455666303635
    2. '(self' → logprob: -3.9245684146881104
    3. '_hits' → logprob: -4.4245686531066895
    4. '_hit' → logprob: -5.0495686531066895
    5. '_targets' → logprob: -5.6745686531066895
    6. '_points' → logprob: -6.4245686531066895
    7. 'target' → logprob: -6.5495686531066895
    8. '_' → logprob: -6.9245686531066895
    9. '_all' → logprob: -7.2995686531066895
    10. 'self' → logprob: -7.5495686531066895

Token 159: 'izes' (ID: 6370)
  Prédit: 'esent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'esent' → logprob: -1.041307806968689
    2. 'es' → logprob: -2.0413079261779785
    3. 'og' → logprob: -2.0413079261779785
    4. 'oc' → logprob: -2.2913079261779785
    5. 'edict' → logprob: -2.4163079261779785
    6. 'ec' → logprob: -2.5413079261779785
    7. 'op' → logprob: -3.5413079261779785
    8. 'o' → logprob: -4.0413079261779785
    9. 'e' → logprob: -4.2913079261779785
    10. 'ob' → logprob: -4.2913079261779785

Token 160: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.861651490908116e-05
    2. '(' → logprob: -9.750068664550781
    3. ' (' → logprob: -11.500068664550781
    4. 'self' → logprob: -16.87506866455078
    5. '(s' → logprob: -18.00006866455078
    6. '(
' → logprob: -18.12506866455078
    7. '   ' → logprob: -19.37506866455078
    8. ' self' → logprob: -19.75006866455078
    9. '(sel' → logprob: -19.75006866455078
    10. '(Self' → logprob: -19.75006866455078

Token 161: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.41947004199028015
    2. ',' → logprob: -1.1694700717926025
    3. 'self' → logprob: -4.294469833374023
    4. '):' → logprob: -5.169469833374023
    5. '       ' → logprob: -5.294469833374023
    6. ')(' → logprob: -6.044469833374023
    7. '   ' → logprob: -6.419469833374023
    8. '):
' → logprob: -6.544469833374023
    9. ')' → logprob: -6.669469833374023
    10. ' (' → logprob: -8.169469833374023

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012552979402244091
    2. ':' → logprob: -4.6375532150268555
    3. '
' → logprob: -7.3875532150268555
    4. '        
' → logprob: -7.7625532150268555
    5. '<|end|>' → logprob: -7.8875532150268555
    6. ',' → logprob: -8.262553215026855
    7. ' 
' → logprob: -8.262553215026855
    8. ':
' → logprob: -9.512553215026855
    9. '  
' → logprob: -9.512553215026855
    10. '(' → logprob: -9.637553215026855

Token 163: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32684946060180664
    2. ' dp' → logprob: -1.3268494606018066
    3. '       ' → logprob: -4.701849460601807
    4. ' import' → logprob: -6.076849460601807
    5. 'import' → logprob: -6.826849460601807
    6. ' n' → logprob: -7.701849460601807
    7. ' from' → logprob: -8.201848983764648
    8. ' cost' → logprob: -9.201848983764648
    9. 'n' → logprob: -9.826848983764648
    10. 'cost' → logprob: -9.951848983764648

Token 164: ' Calculate' (ID: 38942)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3372604250907898
    2. 'dp' → logprob: -1.3372604846954346
    3. ' import' → logprob: -4.3372602462768555
    4. ' from' → logprob: -5.4622602462768555
    5. 'import' → logprob: -6.2122602462768555
    6. ' n' → logprob: -6.4622602462768555
    7. 'from' → logprob: -6.8372602462768555
    8. ' #' → logprob: -8.087260246276855
    9. ' total' → logprob: -8.712260246276855
    10. '#' → logprob: -8.837260246276855

Token 165: ' all' (ID: 722)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4389972686767578
    2. 'dp' → logprob: -1.1889972686767578
    3. ' total' → logprob: -3.438997268676758
    4. 'total' → logprob: -5.063997268676758
    5. ' min' → logprob: -5.938997268676758
    6. 'import' → logprob: -6.063997268676758
    7. ' import' → logprob: -6.438997268676758
    8. ' all' → logprob: -6.563997268676758
    9. ' costs' → logprob: -7.313997268676758
    10. ' max' → logprob: -7.313997268676758

Token 166: ' needed' (ID: 6118)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -1.2727398872375488
    2. ' possible' → logprob: -1.5227398872375488
    3. '_cost' → logprob: -1.7727398872375488
    4. '_possible' → logprob: -2.272739887237549
    5. 'possible' → logprob: -3.147739887237549
    6. ' costs' → logprob: -3.147739887237549
    7. 'cost' → logprob: -3.397739887237549
    8. '_points' → logprob: -3.522739887237549
    9. ' cost' → logprob: -4.522739887237549
    10. '_cards' → logprob: -4.647739887237549

Token 167: ' costs' (ID: 8959)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.5608684420585632
    2. ' costs' → logprob: -1.310868501663208
    3. '_slots' → logprob: -3.310868501663208
    4. 'cost' → logprob: -3.435868501663208
    5. '_points' → logprob: -3.685868501663208
    6. '_' → logprob: -3.685868501663208
    7. ' cost' → logprob: -4.685868263244629
    8. ' points' → logprob: -4.935868263244629
    9. '_hits' → logprob: -5.310868263244629
    10. ' slots' → logprob: -6.185868263244629

Token 168: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2856076657772064
    2. ' =' → logprob: -2.0356075763702393
    3. ' for' → logprob: -3.2856075763702393
    4. '(self' → logprob: -3.9106075763702393
    5. ',' → logprob: -4.035607814788818
    6. ' to' → logprob: -4.785607814788818
    7. '<|end|>' → logprob: -4.785607814788818
    8. 'def' → logprob: -5.160607814788818
    9. ' and' → logprob: -5.785607814788818
    10. 'for' → logprob: -5.910607814788818

Token 169: ' make' (ID: 1520)
  Prédit: ' achieve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' achieve' → logprob: -0.7942262291908264
    2. ' get' → logprob: -1.7942261695861816
    3. 'ach' → logprob: -2.0442261695861816
    4. ' acquire' → logprob: -2.7942261695861816
    5. ' obtain' → logprob: -3.0442261695861816
    6. ' collect' → logprob: -3.1692261695861816
    7. ' reach' → logprob: -3.6692261695861816
    8. 'reach' → logprob: -4.169226169586182
    9. 'collect' → logprob: -4.169226169586182
    10. ' win' → logprob: -4.294226169586182

Token 170: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.774459719657898
    2. 'each' → logprob: -1.899459719657898
    3. ' self' → logprob: -2.5244598388671875
    4. 'self' → logprob: -2.6494598388671875
    5. ' all' → logprob: -2.6494598388671875
    6. ' sure' → logprob: -2.7744598388671875
    7. ' cards' → logprob: -2.7744598388671875
    8. ' at' → logprob: -2.7744598388671875
    9. 'all' → logprob: -3.1494598388671875
    10. 'pr' → logprob: -3.2744598388671875

Token 171: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.015303240157663822
    2. 'card' → logprob: -4.265303134918213
    3. ' point' → logprob: -7.140303134918213
    4. ' hit' → logprob: -9.140303611755371
    5. 'point' → logprob: -9.765303611755371
    6. ' ' → logprob: -10.265303611755371
    7. 'self' → logprob: -10.390303611755371
    8. ' self' → logprob: -10.515303611755371
    9. ' slot' → logprob: -10.765303611755371
    10. 'hit' → logprob: -11.140303611755371

Token 172: ' eligible' (ID: 21680)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9600642919540405
    2. ' into' → logprob: -1.0850642919540405
    3. ' hits' → logprob: -2.46006441116333
    4. ' hit' → logprob: -2.58506441116333
    5. 'hits' → logprob: -3.21006441116333
    6. 'a' → logprob: -3.83506441116333
    7. '       ' → logprob: -3.96006441116333
    8. 'hit' → logprob: -4.71006441116333
    9. ' to' → logprob: -4.96006441116333
    10. '   ' → logprob: -5.83506441116333

Token 173: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3328150808811188
    2. '<|end|>' → logprob: -1.4578150510787964
    3. ' for' → logprob: -4.457815170288086
    4. ',' → logprob: -4.457815170288086
    5. '(self' → logprob: -4.707815170288086
    6. '(' → logprob: -5.207815170288086
    7. '<|end|>' → logprob: -5.332815170288086
    8. '        ' → logprob: -6.582815170288086
    9. 'for' → logprob: -6.707815170288086
    10. '        
' → logprob: -7.082815170288086

Token 174: ' prize' (ID: 29528)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.7419753074645996
    2. ' prizes' → logprob: -1.9919753074645996
    3. 'self' → logprob: -2.1169753074645996
    4. 'the' → logprob: -2.3669753074645996
    5. ' the' → logprob: -2.7419753074645996
    6. ' self' → logprob: -2.8669753074645996
    7. ' prize' → logprob: -3.4919753074645996
    8. ' a' → logprob: -5.3669753074646
    9. 'target' → logprob: -5.8669753074646
    10. 'a' → logprob: -5.9919753074646

Token 175: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4268241822719574
    2. '
' → logprob: -2.0518240928649902
    3. '<|end|>' → logprob: -2.0518240928649902
    4. ',' → logprob: -3.1768240928649902
    5. ':' → logprob: -3.8018240928649902
    6. '<|end|>' → logprob: -4.80182409286499
    7. '        
' → logprob: -5.67682409286499
    8. ' =' → logprob: -6.17682409286499
    9. 'def' → logprob: -6.30182409286499
    10. 's' → logprob: -6.80182409286499

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011859235353767872
    2. ',' → logprob: -5.76185941696167
    3. '
' → logprob: -5.76185941696167
    4. '<|end|>' → logprob: -5.88685941696167
    5. ':' → logprob: -6.76185941696167
    6. ' for' → logprob: -8.136858940124512
    7. '        
' → logprob: -8.136858940124512
    8. 'def' → logprob: -8.511858940124512
    9. ' and' → logprob: -9.011858940124512
    10. ' to' → logprob: -9.261858940124512

Token 177: ' costs' (ID: 8959)
  Prédit: ' costs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.6547133922576904
    2. 'cost' → logprob: -1.2797133922576904
    3. 'dp' → logprob: -1.9047133922576904
    4. ' dp' → logprob: -3.6547133922576904
    5. ' cost' → logprob: -4.2797136306762695
    6. '       ' → logprob: -4.4047136306762695
    7. 'import' → logprob: -8.52971363067627
    8. 'all' → logprob: -8.77971363067627
    9. 'total' → logprob: -8.90471363067627
    10. 'n' → logprob: -8.90471363067627

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005238260608166456
    2. '=' → logprob: -5.255238056182861
    3. '=[]' → logprob: -12.63023853302002
    4. ',' → logprob: -14.63023853302002
    5. '   ' → logprob: -15.38023853302002
    6. ' =[' → logprob: -15.50523853302002
    7. 's' → logprob: -16.755237579345703
    8. ' =
' → logprob: -17.130237579345703
    9. '=[]
' → logprob: -17.380237579345703
    10. ' ' → logprob: -17.505237579345703

Token 179: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1380372941493988
    2. '[' → logprob: -2.1380372047424316
    3. ' []' → logprob: -5.138037204742432
    4. '[]' → logprob: -5.388037204742432
    5. '[self' → logprob: -8.13803768157959
    6. '[]
' → logprob: -9.13803768157959
    7. '[int' → logprob: -9.76303768157959
    8. '[i' → logprob: -10.13803768157959
    9. '[
' → logprob: -10.76303768157959
    10. '[class' → logprob: -10.88803768157959

Token 180: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.0008285674848593771
    2. ' card' → logprob: -7.125828742980957
    3. 'c' → logprob: -11.250828742980957
    4. 'self' → logprob: -11.750828742980957
    5. 'cards' → logprob: -14.250828742980957
    6. '(card' → logprob: -14.375828742980957
    7. '   ' → logprob: -14.625828742980957
    8. '       ' → logprob: -14.625828742980957
    9. '	card' → logprob: -15.250828742980957
    10. '           ' → logprob: -15.625828742980957

Token 181: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.0006421420839615166
    2. '.' → logprob: -7.3756422996521
    3. ').' → logprob: -12.250641822814941
    4. 'cost' → logprob: -12.500641822814941
    5. ' .' → logprob: -13.125641822814941
    6. ' cost' → logprob: -13.375641822814941
    7. '.minimum' → logprob: -13.750641822814941
    8. '   ' → logprob: -14.875641822814941
    9. '].' → logprob: -15.000641822814941
    10. '       ' → logprob: -15.750641822814941

Token 182: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.000000953674316
    3. '_cost' → logprob: -15.375000953674316
    4. ')_' → logprob: -15.625000953674316
    5. 'to' → logprob: -17.500001907348633
    6. 'To' → logprob: -17.750001907348633
    7. ' _' → logprob: -18.125001907348633
    8. '_TO' → logprob: -18.125001907348633
    9. '##_' → logprob: -18.125001907348633
    10. '_t' → logprob: -18.625001907348633

Token 183: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.043134383857250214
    2. 'reach' → logprob: -3.1681344509124756
    3. 're' → logprob: -9.168134689331055
    4. ' reach' → logprob: -11.418134689331055
    5. ' _' → logprob: -13.168134689331055
    6. 'ach' → logprob: -13.293134689331055
    7. 'reachable' → logprob: -13.293134689331055
    8. ' ' → logprob: -13.543134689331055
    9. '   ' → logprob: -13.793134689331055
    10. '_' → logprob: -13.918134689331055

Token 184: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0002858881198335439
    2. 'each' → logprob: -8.250286102294922
    3. 'Each' → logprob: -12.750286102294922
    4. 'a' → logprob: -12.875286102294922
    5. 'acht' → logprob: -13.125286102294922
    6. '_' → logprob: -13.250286102294922
    7. 'reach' → logprob: -13.500286102294922
    8. 'Ach' → logprob: -13.500286102294922
    9. '   ' → logprob: -13.875286102294922
    10. 'ac' → logprob: -14.000286102294922

Token 185: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.02374677173793316
    2. '(target' → logprob: -4.398746967315674
    3. 'target' → logprob: -5.023746967315674
    4. '(self' → logprob: -5.648746967315674
    5. '_point' → logprob: -7.398746967315674
    6. '(' → logprob: -8.523746490478516
    7. '_' → logprob: -9.898746490478516
    8. '_card' → logprob: -9.898746490478516
    9. '(card' → logprob: -10.148746490478516
    10. '_(' → logprob: -11.023746490478516

Token 186: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029977839440107346
    2. '(' → logprob: -3.779977798461914
    3. '(card' → logprob: -5.029977798461914
    4. '(
' → logprob: -9.654977798461914
    5. '(c' → logprob: -10.404977798461914
    6. ' (' → logprob: -10.529977798461914
    7. '(

' → logprob: -11.029977798461914
    8. 'self' → logprob: -11.654977798461914
    9. '(i' → logprob: -11.904977798461914
    10. '((' → logprob: -12.029977798461914

Token 187: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.00017624642350710928
    2. '.' → logprob: -8.750176429748535
    3. 'target' → logprob: -11.000176429748535
    4. ' .' → logprob: -13.875176429748535
    5. '.tar' → logprob: -18.12517547607422
    6. ' target' → logprob: -18.25017547607422
    7. '.t' → logprob: -18.50017547607422
    8. '	target' → logprob: -18.62517547607422
    9. '.Target' → logprob: -19.12517547607422
    10. '.targets' → logprob: -19.25017547607422

Token 188: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.3822154111694545e-05
    2. ' )' → logprob: -10.125043869018555
    3. ')
' → logprob: -13.625043869018555
    4. ')]' → logprob: -13.750043869018555
    5. '   ' → logprob: -14.625043869018555
    6. '())' → logprob: -14.750043869018555
    7. '       ' → logprob: -15.375043869018555
    8. '()' → logprob: -16.000043869018555
    9. '))' → logprob: -16.125043869018555
    10. ')`' → logprob: -16.875043869018555

Token 189: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005268384236842394
    2. 'for' → logprob: -6.005268573760986
    3. '       ' → logprob: -6.255268573760986
    4. '        ' → logprob: -7.255268573760986
    5. ' ' → logprob: -9.755268096923828
    6. ')' → logprob: -10.130268096923828
    7. ']' → logprob: -10.630268096923828
    8. ' ]' → logprob: -11.630268096923828
    9. '           ' → logprob: -12.130268096923828
    10. ' )' → logprob: -12.255268096923828

Token 190: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.02361847087740898
    2. 'card' → logprob: -3.773618459701538
    3. ' self' → logprob: -8.148618698120117
    4. 'self' → logprob: -9.523618698120117
    5. '	card' → logprob: -11.773618698120117
    6. ' c' → logprob: -14.023618698120117
    7. ' ' → logprob: -14.648618698120117
    8. '(card' → logprob: -14.773618698120117
    9. 'c' → logprob: -14.898618698120117
    10. ' car' → logprob: -15.148618698120117

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0050066327676177025
    2. 'in' → logprob: -5.505006790161133
    3. 'self' → logprob: -7.755006790161133
    4. 'card' → logprob: -8.505006790161133
    5. ' card' → logprob: -9.255006790161133
    6. ' self' → logprob: -9.755006790161133
    7. ' ' → logprob: -10.130006790161133
    8. ')' → logprob: -10.505006790161133
    9. '.' → logprob: -10.755006790161133
    10. '<|end|>' → logprob: -11.005006790161133

Token 192: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693335115909576
    2. ' self' → logprob: -2.1269333362579346
    3. '(self' → logprob: -13.751933097839355
    4. ' range' → logprob: -13.876933097839355
    5. 'range' → logprob: -14.376933097839355
    6. '	self' → logprob: -14.626933097839355
    7. '[self' → logprob: -14.751933097839355
    8. ' ' → logprob: -15.001933097839355
    9. '
' → logprob: -15.126933097839355
    10. '       ' → logprob: -15.501933097839355

Token 193: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -2.8444881536415778e-05
    2. '.' → logprob: -10.500028610229492
    3. 'cards' → logprob: -15.000028610229492
    4. ' .' → logprob: -15.250028610229492
    5. '.c' → logprob: -15.750028610229492
    6. '.points' → logprob: -15.750028610229492
    7. '.card' → logprob: -16.875028610229492
    8. '.codes' → logprob: -17.625028610229492
    9. '(cards' → logprob: -17.625028610229492
    10. '.cells' → logprob: -17.625028610229492

Token 194: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017791526624932885
    2. ' ]' → logprob: -8.875178337097168
    3. '       ' → logprob: -10.500178337097168
    4. ']
' → logprob: -12.500178337097168
    5. ')]' → logprob: -12.625178337097168
    6. ')' → logprob: -12.750178337097168
    7. '()]' → logprob: -15.625178337097168
    8. '   ' → logprob: -15.875178337097168
    9. ']

' → logprob: -16.50017738342285
    10. '
' → logprob: -16.75017738342285

Token 195: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27507323026657104
    2. ' dp' → logprob: -2.275073289871216
    3. ' costs' → logprob: -2.775073289871216
    4. '       ' → logprob: -3.025073289871216
    5. '
' → logprob: -4.775073051452637
    6. 'cost' → logprob: -5.150073051452637
    7. 'total' → logprob: -5.650073051452637
    8. ' total' → logprob: -6.150073051452637
    9. 'n' → logprob: -6.150073051452637
    10. ' n' → logprob: -6.775073051452637

Token 197: ' Sort' (ID: 25945)
  Prédit: ' costs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.6416873335838318
    2. 'cost' → logprob: -0.8916873335838318
    3. 'dp' → logprob: -3.1416873931884766
    4. ' dp' → logprob: -5.266687393188477
    5. 'import' → logprob: -5.391687393188477
    6. ' import' → logprob: -5.641687393188477
    7. ' cost' → logprob: -5.766687393188477
    8. 'sorted' → logprob: -7.016687393188477
    9. ' sorted' → logprob: -7.141687393188477
    10. '#' → logprob: -8.016687393188477

Token 198: ' costs' (ID: 8959)
  Prédit: ' costs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.22741279006004333
    2. '()' → logprob: -1.8524128198623657
    3. '(cost' → logprob: -3.477412700653076
    4. 'cost' → logprob: -4.352412700653076
    5. '(' → logprob: -6.477412700653076
    6. '_cost' → logprob: -7.352412700653076
    7. 's' → logprob: -8.727413177490234
    8. '()
' → logprob: -8.852413177490234
    9. '       ' → logprob: -9.227413177490234
    10. '(
' → logprob: -9.602413177490234

Token 199: ' to' (ID: 316)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6722618341445923
    2. '.sort' → logprob: -0.7972618341445923
    3. '()
' → logprob: -4.297261714935303
    4. '       ' → logprob: -4.297261714935303
    5. ' =' → logprob: -5.297261714935303
    6. '.' → logprob: -6.172261714935303
    7. ')' → logprob: -6.547261714935303
    8. ',' → logprob: -6.672261714935303
    9. '=' → logprob: -7.047261714935303
    10. '().' → logprob: -8.422262191772461

Token 200: ' pick' (ID: 5230)
  Prédit: ' costs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.10561855882406235
    2. ' get' → logprob: -3.230618476867676
    3. 'ascending' → logprob: -4.980618476867676
    4. 'cost' → logprob: -5.105618476867676
    5. ' prioritize' → logprob: -5.105618476867676
    6. ' ascending' → logprob: -5.230618476867676
    7. ' continue' → logprob: -5.605618476867676
    8. ' minimize' → logprob: -5.730618476867676
    9. ' import' → logprob: -5.730618476867676
    10. ' find' → logprob: -5.980618476867676

Token 201: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.006266250740736723
    2. 'the' → logprob: -5.631266117095947
    3. ' costs' → logprob: -6.131266117095947
    4. ' only' → logprob: -9.131266593933105
    5. ' smallest' → logprob: -9.381266593933105
    6. ' lowest' → logprob: -9.631266593933105
    7. ' top' → logprob: -10.131266593933105
    8. ' cheapest' → logprob: -10.506266593933105
    9. '(' → logprob: -10.756266593933105
    10. ' minimal' → logprob: -11.006266593933105

Token 202: ' cheapest' (ID: 44426)
  Prédit: ' costs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.8529878854751587
    2. 'self' → logprob: -1.9779878854751587
    3. ' lowest' → logprob: -2.102987766265869
    4. 'lowest' → logprob: -2.352987766265869
    5. ' smallest' → logprob: -2.727987766265869
    6. ' self' → logprob: -2.977987766265869
    7. ' N' → logprob: -3.352987766265869
    8. ' minimal' → logprob: -4.477987766265869
    9. ' cheapest' → logprob: -4.477987766265869
    10. 'N' → logprob: -4.852987766265869

Token 203: ' (' (ID: 350)
  Prédit: ' costs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.5489386320114136
    2. '_cost' → logprob: -1.6739386320114136
    3. 'cost' → logprob: -2.673938751220703
    4. ' ones' → logprob: -3.298938751220703
    5. ' for' → logprob: -3.673938751220703
    6. '(cost' → logprob: -3.798938751220703
    7. 's' → logprob: -4.548938751220703
    8. ' 
' → logprob: -4.673938751220703
    9. ' to' → logprob: -4.798938751220703
    10. '(' → logprob: -4.923938751220703

Token 204: 'M' (ID: 44)
  Prédit: ' ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ones' → logprob: -0.8838211297988892
    2. 'k' → logprob: -1.7588211297988892
    3. ' costs' → logprob: -1.7588211297988892
    4. ' k' → logprob: -2.5088210105895996
    5. ')' → logprob: -2.7588210105895996
    6. 'cost' → logprob: -3.0088210105895996
    7. ')
' → logprob: -5.2588210105896
    8. ' K' → logprob: -5.3838210105896
    9. ' first' → logprob: -5.5088210105896
    10. 'self' → logprob: -5.5088210105896

Token 205: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2365611046552658
    2. ' -' → logprob: -2.2365610599517822
    3. ' )' → logprob: -2.3615610599517822
    4. '-' → logprob: -5.361561298370361
    5. ' //' → logprob: -6.736561298370361
    6. '//' → logprob: -6.861561298370361
    7. '-cost' → logprob: -6.986561298370361
    8. '-k' → logprob: -7.736561298370361
    9. '-m' → logprob: -8.611560821533203
    10. '-n' → logprob: -8.736560821533203

Token 206: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3740119934082031
    2. '1' → logprob: -1.8740119934082031
    3. ' self' → logprob: -2.249011993408203
    4. 'N' → logprob: -3.499011993408203
    5. ')' → logprob: -5.249011993408203
    6. ' ' → logprob: -5.499011993408203
    7. 'K' → logprob: -5.874011993408203
    8. ' N' → logprob: -6.124011993408203
    9. ' (' → logprob: -6.124011993408203
    10. 'k' → logprob: -6.249011993408203

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2813414931297302
    2. ' )' → logprob: -1.406341552734375
    3. ' )
' → logprob: -9.781341552734375
    4. ')
' → logprob: -10.656341552734375
    5. ' ' → logprob: -10.781341552734375
    6. ' ones' → logprob: -11.156341552734375
    7. ' +' → logprob: -12.031341552734375
    8. '+' → logprob: -12.031341552734375
    9. ',' → logprob: -12.406341552734375
    10. ')-' → logprob: -12.656341552734375

Token 208: ' cards' (ID: 10541)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.325047254562378
    2. ')' → logprob: -1.700047254562378
    3. ' costs' → logprob: -2.075047254562378
    4. '+' → logprob: -2.325047254562378
    5. '_cost' → logprob: -2.450047254562378
    6. 'cost' → logprob: -3.075047254562378
    7. ']' → logprob: -3.700047254562378
    8. ' )' → logprob: -4.075047492980957
    9. '<|end|>' → logprob: -4.200047492980957
    10. '_' → logprob: -4.200047492980957

Token 209: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35987046360969543
    2. '.sort' → logprob: -2.109870433807373
    3. ' costs' → logprob: -2.984870433807373
    4. ',' → logprob: -3.109870433807373
    5. '
' → logprob: -3.484870433807373
    6. '.' → logprob: -4.234870433807373
    7. 'sorted' → logprob: -4.859870433807373
    8. '        
' → logprob: -5.234870433807373
    9. ' 
' → logprob: -5.859870433807373
    10. 'cost' → logprob: -5.984870433807373

Token 210: ' convert' (ID: 8452)
  Prédit: ' exclude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exclude' → logprob: -1.700883388519287
    2. ' get' → logprob: -2.075883388519287
    3. 'exclude' → logprob: -2.075883388519287
    4. ' cover' → logprob: -2.325883388519287
    5. ' sum' → logprob: -2.325883388519287
    6. ' achieve' → logprob: -3.325883388519287
    7. ' qualify' → logprob: -3.450883388519287
    8. ' skip' → logprob: -3.575883388519287
    9. ' win' → logprob: -3.575883388519287
    10. ' keep' → logprob: -3.700883388519287

Token 211: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5154203176498413
    2. ',' → logprob: -1.7654203176498413
    3. '.sort' → logprob: -2.390420436859131
    4. '.' → logprob: -2.640420436859131
    5. ' costs' → logprob: -2.765420436859131
    6. '[' → logprob: -3.390420436859131
    7. '
' → logprob: -3.640420436859131
    8. 'cost' → logprob: -3.640420436859131
    9. '        
' → logprob: -3.765420436859131
    10. ' +' → logprob: -4.015420436859131

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1732926219701767
    2. ',' → logprob: -3.048292636871338
    3. '
' → logprob: -3.423292636871338
    4. ' costs' → logprob: -3.548292636871338
    5. '.sort' → logprob: -4.548292636871338
    6. 'sorted' → logprob: -4.673292636871338
    7. ' sorted' → logprob: -5.173292636871338
    8. 'cost' → logprob: -5.923292636871338
    9. '[' → logprob: -6.173292636871338
    10. ' and' → logprob: -6.298292636871338

Token 213: ' costs' (ID: 8959)
  Prédit: ' costs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.02185348980128765
    2. 'cost' → logprob: -4.521853446960449
    3. '
' → logprob: -5.646853446960449
    4. ' if' → logprob: -5.896853446960449
    5. ' sorted' → logprob: -6.396853446960449
    6. 'sorted' → logprob: -7.021853446960449
    7. '       ' → logprob: -7.146853446960449
    8. 'if' → logprob: -8.27185344696045
    9. ' 
' → logprob: -8.77185344696045
    10. ' cost' → logprob: -8.89685344696045

Token 214: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.023329682648181915
    2. '.' → logprob: -3.773329734802246
    3. '.sorted' → logprob: -10.273329734802246
    4. '=' → logprob: -11.148329734802246
    5. ' .' → logprob: -11.273329734802246
    6. ' =' → logprob: -11.398329734802246
    7. '_sorted' → logprob: -12.398329734802246
    8. '.s' → logprob: -12.648329734802246
    9. '.=' → logprob: -14.023329734802246
    10. 'sort' → logprob: -14.273329734802246

Token 215: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010619866661727428
    2. '()
' → logprob: -6.876061916351318
    3. '(' → logprob: -10.876062393188477
    4. '(reverse' → logprob: -12.126062393188477
    5. '()

' → logprob: -13.126062393188477
    6. '(
' → logprob: -14.376062393188477
    7. '()
' → logprob: -14.501062393188477
    8. ')' → logprob: -15.001062393188477
    9. '())' → logprob: -15.251062393188477
    10. 'def' → logprob: -15.251062393188477

Token 216: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21838635206222534
    2. '       ' → logprob: -1.8433864116668701
    3. '<|end|>' → logprob: -3.71838641166687
    4. '[' → logprob: -5.593386173248291
    5. ' 
' → logprob: -5.968386173248291
    6. '        
' → logprob: -6.093386173248291
    7. ' if' → logprob: -7.218386173248291
    8. '  
' → logprob: -7.468386173248291
    9. ' return' → logprob: -7.593386173248291
    10. ',' → logprob: -7.593386173248291

Token 217: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0920354127883911
    2. ' return' → logprob: -1.3420354127883911
    3. 'return' → logprob: -1.5920354127883911
    4. '       ' → logprob: -2.4670352935791016
    5. ' total' → logprob: -2.9670352935791016
    6. 'if' → logprob: -3.0920352935791016
    7. 'total' → logprob: -4.967035293579102
    8. 'result' → logprob: -5.842035293579102
    9. '
' → logprob: -6.092035293579102
    10. ' result' → logprob: -6.217035293579102

Token 218: ' We' (ID: 1416)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0358386039733887
    2. 'return' → logprob: -1.5358386039733887
    3. ' if' → logprob: -1.6608386039733887
    4. ' total' → logprob: -1.9108386039733887
    5. 'if' → logprob: -2.7858386039733887
    6. 'total' → logprob: -4.285838603973389
    7. ' result' → logprob: -5.285838603973389
    8. '       ' → logprob: -5.410838603973389
    9. ' cost' → logprob: -6.410838603973389
    10. ' sum' → logprob: -6.785838603973389

Token 219: ' want' (ID: 1682)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.037356972694397
    2. 'return' → logprob: -1.162356972694397
    3. ' want' → logprob: -2.0373568534851074
    4. ' need' → logprob: -2.6623568534851074
    5. 'need' → logprob: -4.037356853485107
    6. ' if' → logprob: -4.287356853485107
    7. '   ' → logprob: -4.662356853485107
    8. ''ll' → logprob: -5.037356853485107
    9. ' ' → logprob: -5.162356853485107
    10. 'import' → logprob: -5.287356853485107

Token 220: ' M' (ID: 391)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04223678633570671
    2. ' sum' → logprob: -3.417236804962158
    3. ' costs' → logprob: -6.042236804962158
    4. 'sum' → logprob: -6.042236804962158
    5. 'to' → logprob: -6.167236804962158
    6. ' self' → logprob: -7.167236804962158
    7. ' the' → logprob: -7.542236804962158
    8. 'self' → logprob: -8.792236328125
    9. ' return' → logprob: -9.417236328125
    10. ' at' → logprob: -10.167236328125

Token 221: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05501452833414078
    2. '-' → logprob: -2.9300146102905273
    3. '<|end|>' → logprob: -9.555014610290527
    4. ' ' → logprob: -9.930014610290527
    5. '
' → logprob: -12.180014610290527
    6. '<|end|>' → logprob: -13.430014610290527
    7. ' ' → logprob: -14.180014610290527
    8. ')' → logprob: -14.555014610290527
    9. '   ' → logprob: -14.617514610290527
    10. '_MINUS' → logprob: -14.680014610290527

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13056983053684235
    2. ' ' → logprob: -2.1305699348449707
    3. '2' → logprob: -5.630569934844971
    4. '   ' → logprob: -11.130569458007812
    5. 'self' → logprob: -11.505569458007812
    6. '-' → logprob: -12.630569458007812
    7. '       ' → logprob: -12.943069458007812
    8. '  ' → logprob: -13.193069458007812
    9. '0' → logprob: -13.318069458007812
    10. '(' → logprob: -13.443069458007812

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004764399025589228
    2. ' ' → logprob: -5.379764556884766
    3. '2' → logprob: -9.004764556884766
    4. 'self' → logprob: -11.129764556884766
    5. '   ' → logprob: -13.254764556884766
    6. '0' → logprob: -14.317264556884766
    7. ' self' → logprob: -14.442264556884766
    8. '(' → logprob: -14.754764556884766
    9. 'k' → logprob: -14.879764556884766
    10. '
' → logprob: -15.192264556884766

Token 224: ' cards' (ID: 10541)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' hits' (ID: 21571)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -2.0360665321350098
    2. ' lowest' → logprob: -2.0360665321350098
    3. ' minimum' → logprob: -2.0360665321350098
    4. 'lowest' → logprob: -2.1610665321350098
    5. ' the' → logprob: -2.2860665321350098
    6. ' costs' → logprob: -2.4110665321350098
    7. 'cost' → logprob: -2.5360665321350098
    8. 'total' → logprob: -2.7860665321350098
    9. 'minimum' → logprob: -3.0360665321350098
    10. ' minimal' → logprob: -3.1610665321350098

Token 227: ' >=' (ID: 5064)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.0010437965393066
    2. ' to' → logprob: -1.3760437965393066
    3. ' >=' → logprob: -2.1260437965393066
    4. ' less' → logprob: -2.1260437965393066
    5. ' or' → logprob: -3.6260437965393066
    6. ' with' → logprob: -3.8760437965393066
    7. ' <' → logprob: -4.001043796539307
    8. '>=' → logprob: -4.626043796539307
    9. ' and' → logprob: -4.751043796539307
    10. 'at' → logprob: -5.001043796539307

Token 228: ' target' (ID: 3783)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5232428908348083
    2. ' self' → logprob: -0.8982428908348083
    3. 'target' → logprob: -9.773242950439453
    4. ' target' → logprob: -9.898242950439453
    5. ' ' → logprob: -12.648242950439453
    6. '	self' → logprob: -12.648242950439453
    7. '(self' → logprob: -14.023242950439453
    8. '   ' → logprob: -14.148242950439453
    9. ' the' → logprob: -14.273242950439453
    10. '```' → logprob: -14.273242950439453

Token 229: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0610296726226807
    2. '       ' → logprob: -1.6860296726226807
    3. ' if' → logprob: -1.6860296726226807
    4. ',' → logprob: -2.3110296726226807
    5. '<|end|>' → logprob: -2.8110296726226807
    6. ' and' → logprob: -3.6860296726226807
    7. '        
' → logprob: -4.436029434204102
    8. ' 
' → logprob: -4.436029434204102
    9. 'return' → logprob: -4.436029434204102
    10. ' +' → logprob: -4.561029434204102

Token 230: ' minimal' (ID: 19957)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.4805396795272827
    2. ' total' → logprob: -1.6055396795272827
    3. ' minimum' → logprob: -1.6055396795272827
    4. ' minimal' → logprob: -2.3555397987365723
    5. 'minimum' → logprob: -2.9805397987365723
    6. 'sum' → logprob: -3.1055397987365723
    7. ' costs' → logprob: -3.1055397987365723
    8. ' a' → logprob: -3.6055397987365723
    9. 'total' → logprob: -3.6055397987365723
    10. ' cost' → logprob: -3.9805397987365723

Token 231: ' total' (ID: 3609)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5732334852218628
    2. ' cost' → logprob: -1.0732334852218628
    3. 'cost' → logprob: -3.1982336044311523
    4. 'sum' → logprob: -3.5732336044311523
    5. ' total' → logprob: -4.073233604431152
    6. ' costs' → logprob: -5.323233604431152
    7. ' cumulative' → logprob: -6.073233604431152
    8. 'total' → logprob: -7.573233604431152
    9. ' ' → logprob: -8.198233604431152
    10. ' sums' → logprob: -8.573233604431152

Token 232: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.18346568942070007
    2. 'cost' → logprob: -2.0584657192230225
    3. '_cost' → logprob: -3.5584657192230225
    4. ' costs' → logprob: -4.933465480804443
    5. '_' → logprob: -5.808465480804443
    6. ' _' → logprob: -7.058465480804443
    7. ' ' → logprob: -8.808465957641602
    8. ' sum' → logprob: -8.933465957641602
    9. ' +' → logprob: -9.683465957641602
    10. '+' → logprob: -11.058465957641602

Token 233: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03538423031568527
    2. '
' → logprob: -3.910384178161621
    3. ',' → logprob: -5.285384178161621
    4. ' if' → logprob: -6.160384178161621
    5. '        
' → logprob: -6.285384178161621
    6. '<|end|>' → logprob: -6.910384178161621
    7. 'return' → logprob: -7.035384178161621
    8. ' return' → logprob: -7.285384178161621
    9. '.' → logprob: -7.285384178161621
    10. ' +' → logprob: -8.285384178161621

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07518026977777481
    2. '
' → logprob: -3.4501802921295166
    3. ' +' → logprob: -3.8251802921295166
    4. ',' → logprob: -5.8251800537109375
    5. '+' → logprob: -5.9501800537109375
    6. 'total' → logprob: -6.3251800537109375
    7. '<|end|>' → logprob: -6.3251800537109375
    8. '        
' → logprob: -6.5751800537109375
    9. 'sum' → logprob: -6.8251800537109375
    10. 'return' → logprob: -6.9501800537109375

Token 235: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3362008333206177
    2. ' if' → logprob: -2.461200714111328
    3. '       ' → logprob: -2.586200714111328
    4. 'return' → logprob: -2.836200714111328
    5. ' total' → logprob: -2.836200714111328
    6. 'total' → logprob: -5.961200714111328
    7. ' cost' → logprob: -6.211200714111328
    8. 'if' → logprob: -6.586200714111328
    9. '
' → logprob: -7.336200714111328
    10. ' result' → logprob: -8.211200714111328

Token 236: ' Select' (ID: 13482)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8411902189254761
    2. 'return' → logprob: -1.591190218925476
    3. ' return' → logprob: -1.716190218925476
    4. 'total' → logprob: -2.2161903381347656
    5. ' if' → logprob: -3.4661903381347656
    6. 'if' → logprob: -3.9661903381347656
    7. '       ' → logprob: -4.591190338134766
    8. ' cost' → logprob: -4.966190338134766
    9. 'cost' → logprob: -5.716190338134766
    10. ' min' → logprob: -6.716190338134766

Token 237: ' smallest' (ID: 42173)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.398788183927536
    2. ' sum' → logprob: -1.1487882137298584
    3. ' costs' → logprob: -4.773787975311279
    4. '_sum' → logprob: -7.023787975311279
    5. '(sum' → logprob: -7.273787975311279
    6. ' the' → logprob: -7.398787975311279
    7. 'cost' → logprob: -7.523787975311279
    8. 's' → logprob: -9.273788452148438
    9. '(' → logprob: -9.773788452148438
    10. 'total' → logprob: -9.898788452148438

Token 238: ' M' (ID: 391)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.33681032061576843
    2. ' M' → logprob: -1.7118103504180908
    3. 'self' → logprob: -3.211810350418091
    4. ' costs' → logprob: -3.586810350418091
    5. ' sum' → logprob: -4.336810111999512
    6. ' (' → logprob: -4.461810111999512
    7. '(M' → logprob: -5.336810111999512
    8. 'M' → logprob: -5.711810111999512
    9. '(self' → logprob: -6.461810111999512
    10. 'sum' → logprob: -6.961810111999512

Token 239: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14277435839176178
    2. '-' → logprob: -2.0177743434906006
    3. ' ' → logprob: -9.64277458190918
    4. '   ' → logprob: -10.89277458190918
    5. '  ' → logprob: -12.39277458190918
    6. '       ' → logprob: -13.01777458190918
    7. '<|end|>' → logprob: -13.39277458190918
    8. '
' → logprob: -14.01777458190918
    9. 'cost' → logprob: -14.14277458190918
    10. '1' → logprob: -14.64277458190918

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07655641436576843
    2. '2' → logprob: -2.701556444168091
    3. '-' → logprob: -5.451556205749512
    4. ' ' → logprob: -6.201556205749512
    5. ' -' → logprob: -8.951556205749512
    6. '   ' → logprob: -10.076556205749512
    7. '<|end|>' → logprob: -10.451556205749512
    8. '```' → logprob: -10.701556205749512
    9. '
' → logprob: -11.889056205749512
    10. '  ' → logprob: -12.139056205749512

Token 241: ' costs' (ID: 8959)
  Prédit: ' costs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.33367788791656494
    2. 'cost' → logprob: -1.333677887916565
    3. '(cost' → logprob: -4.208677768707275
    4. '_cost' → logprob: -5.708677768707275
    5. ' cost' → logprob: -6.708677768707275
    6. ' elements' → logprob: -8.458678245544434
    7. ' for' → logprob: -10.083678245544434
    8. ' (' → logprob: -10.208678245544434
    9. 'sum' → logprob: -10.333678245544434
    10. '
' → logprob: -10.333678245544434

Token 242: '
' (ID: 198)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.022265467792749405
    2. '       ' → logprob: -4.772265434265137
    3. '[' → logprob: -5.522265434265137
    4. '[:-' → logprob: -6.147265434265137
    5. '[-' → logprob: -6.522265434265137
    6. ',' → logprob: -6.522265434265137
    7. '][:' → logprob: -6.772265434265137
    8. '
' → logprob: -7.397265434265137
    9. ')' → logprob: -7.397265434265137
    10. 'sum' → logprob: -7.522265434265137

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059194933623075485
    2. '
' → logprob: -3.059195041656494
    3. 'return' → logprob: -6.309195041656494
    4. ' if' → logprob: -6.684195041656494
    5. '[:' → logprob: -6.684195041656494
    6. ',' → logprob: -6.809195041656494
    7. ' return' → logprob: -6.809195041656494
    8. 'sum' → logprob: -7.059195041656494
    9. '        
' → logprob: -7.309195041656494
    10. '[' → logprob: -7.559195041656494

Token 244: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7328027486801147
    2. 'return' (adapté à ' return') → logprob: -1.6078027486801147
    3. ' sum' → logprob: -1.7328027486801147
    4. 'sum' → logprob: -2.1078028678894043
    5. '       ' → logprob: -4.357802867889404
    6. ' total' → logprob: -5.107802867889404
    7. 'total' → logprob: -6.607802867889404
    8. ' if' → logprob: -8.232802391052246
    9. '
' → logprob: -9.482802391052246
    10. ' cost' → logprob: -9.857802391052246

Token 245: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.0003473825636319816
    2. 'sum' → logprob: -8.000347137451172
    3. ' sums' → logprob: -12.250347137451172
    4. ' costs' → logprob: -12.875347137451172
    5. '(sum' → logprob: -13.125347137451172
    6. ' ' → logprob: -13.875347137451172
    7. '	sum' → logprob: -14.250347137451172
    8. ' cost' → logprob: -14.750347137451172
    9. ' ' → logprob: -15.125347137451172
    10. '=sum' → logprob: -16.250347137451172

Token 246: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0002477502857800573
    2. ' (' → logprob: -8.750247955322266
    3. '(' → logprob: -9.500247955322266
    4. ' costs' → logprob: -11.625247955322266
    5. 'cost' → logprob: -12.750247955322266
    6. '(
' → logprob: -13.250247955322266
    7. '(c' → logprob: -14.250247955322266
    8. '(sorted' → logprob: -16.000247955322266
    9. '(scores' → logprob: -17.000247955322266
    10. ' cost' → logprob: -17.750247955322266

Token 247: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.747814349073451e-05
    2. '[' → logprob: -11.375017166137695
    3. 'st' → logprob: -13.625017166137695
    4. 'cost' → logprob: -14.250017166137695
    5. '[s' → logprob: -14.375017166137695
    6. ')' → logprob: -14.750017166137695
    7. 'sto' → logprob: -14.875017166137695
    8. '(s' → logprob: -15.125017166137695
    9. '(' → logprob: -15.125017166137695
    10. '   ' → logprob: -15.250017166137695

Token 248: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.16113905608654022
    2. '[:-' → logprob: -1.9111390113830566
    3. '[' → logprob: -7.036139011383057
    4. '[self' → logprob: -10.536139488220215
    5. '[-' → logprob: -11.911139488220215
    6. 'self' → logprob: -14.786139488220215
    7. '   ' → logprob: -14.786139488220215
    8. ')' → logprob: -14.911139488220215
    9. '[
' → logprob: -15.411139488220215
    10. ' [:' → logprob: -16.1611385345459

Token 249: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.458980300929397e-05
    2. ' self' → logprob: -10.12508487701416
    3. '   ' → logprob: -10.87508487701416
    4. '-' → logprob: -11.87508487701416
    5. '-self' → logprob: -12.00008487701416
    6. 'len' → logprob: -12.12508487701416
    7. '(self' → logprob: -12.62508487701416
    8. '
' → logprob: -13.37508487701416
    9. '       ' → logprob: -13.50008487701416
    10. '	self' → logprob: -15.50008487701416

Token 250: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -2.7014437364414334e-05
    2. '.cards' → logprob: -11.50002670288086
    3. '.' → logprob: -11.75002670288086
    4. '-' → logprob: -11.87502670288086
    5. '.user' → logprob: -14.37502670288086
    6. ' .' → logprob: -14.50002670288086
    7. 'self' → logprob: -15.75002670288086
    8. 'M' → logprob: -15.75002670288086
    9. '.target' → logprob: -16.37502670288086
    10. 'cards' → logprob: -16.50002670288086

Token 251: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14267948269844055
    2. ' -' → logprob: -2.017679452896118
    3. ' ' → logprob: -13.267679214477539
    4. '   ' → logprob: -13.642679214477539
    5. ']' → logprob: -14.892679214477539
    6. ')' → logprob: -15.142679214477539
    7. '1' → logprob: -15.642679214477539
    8. ']-' → logprob: -15.642679214477539
    9. '−' → logprob: -16.39267921447754
    10. '-
' → logprob: -16.64267921447754

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008128436165861785
    2. ' ' → logprob: -7.125813007354736
    3. '   ' → logprob: -11.750812530517578
    4. '
' → logprob: -16.375812530517578
    5. '  ' → logprob: -16.375812530517578
    6. '       ' → logprob: -16.625812530517578
    7. '```' → logprob: -16.688312530517578
    8. '<|end|>' → logprob: -16.813312530517578
    9. '2' → logprob: -17.188312530517578
    10. '	' → logprob: -17.438312530517578

Token 253: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00010592726175673306
    2. ' ])' → logprob: -9.250105857849121
    3. ')' → logprob: -12.125105857849121
    4. '])
' → logprob: -12.625105857849121
    5. ']' → logprob: -14.500105857849121
    6. ')])' → logprob: -15.625105857849121
    7. ']])' → logprob: -16.250106811523438
    8. ' )' → logprob: -16.500106811523438
    9. ']))' → logprob: -17.375106811523438
    10. '   ' → logprob: -17.500106811523438

Token 254: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' Input' (ID: 10090)
  Prédit: ' Prize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Prize' → logprob: -0.6565531492233276
    2. ' Point' → logprob: -0.9065531492233276
    3. ' Solution' → logprob: -3.656553268432617
    4. 'Prize' → logprob: -4.156553268432617
    5. ' Game' → logprob: -4.281553268432617
    6. 'Point' → logprob: -5.281553268432617
    7. ' Card' → logprob: -5.781553268432617
    8. 'Solution' → logprob: -6.281553268432617
    9. ' Tournament' → logprob: -6.531553268432617
    10. ' Reward' → logprob: -6.656553268432617

Token 256: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.4189153909683228
    2. ':' → logprob: -1.6689153909683228
    3. 'Data' → logprob: -1.6689153909683228
    4. 'Reader' → logprob: -1.7939153909683228
    5. 'Handler' → logprob: -2.168915271759033
    6. 'Processor' → logprob: -2.543915271759033
    7. '():' → logprob: -4.543915271759033
    8. ':
' → logprob: -6.043915271759033
    9. 'Validator' → logprob: -6.543915271759033
    10. 'Generator' → logprob: -6.668915271759033

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008162968442775309
    2. ':
' → logprob: -7.125816345214844
    3. '():' → logprob: -12.625816345214844
    4. ' :' → logprob: -12.875816345214844
    5. '>:' → logprob: -12.875816345214844
    6. '):' → logprob: -14.000816345214844
    7. '<|end|>' → logprob: -14.500816345214844
    8. ':def' → logprob: -14.750816345214844
    9. ':

' → logprob: -14.875816345214844
    10. ':**' → logprob: -15.000816345214844

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2697724997997284
    2. ' def' → logprob: -1.7697725296020508
    3. '<|end|>' → logprob: -2.894772529602051
    4. 'def' → logprob: -5.519772529602051
    5. ':' → logprob: -6.019772529602051
    6. ':
' → logprob: -7.269772529602051
    7. '    
' → logprob: -7.519772529602051
    8. ' ' → logprob: -7.769772529602051
    9. '<|end|>' → logprob: -7.894772529602051
    10. '    ' → logprob: -8.01977252960205

Token 259: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.31357845664024353
    2. 'def' → logprob: -1.313578486442566
    3. '   ' → logprob: -8.063578605651855
    4. 'class' → logprob: -13.813578605651855
    5. '@' (adapté à ' @') → logprob: -15.313578605651855
    6. ' @' → logprob: -15.563578605651855
    7. '```' → logprob: -15.813578605651855
    8. '	def' → logprob: -16.06357765197754
    9. 'staticmethod' → logprob: -16.18857765197754
    10. 'de' → logprob: -17.68857765197754

Token 260: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0007220837287604809
    2. 'classmethod' → logprob: -7.5007219314575195
    3. 'dat' → logprob: -9.00072193145752
    4. 'static' → logprob: -10.00072193145752
    5. 'property' → logprob: -15.50072193145752
    6. ' static' → logprob: -16.875722885131836
    7. 'st' → logprob: -17.125722885131836
    8. 'stat' → logprob: -18.625722885131836
    9. 'sta' → logprob: -19.000722885131836
    10. '@' → logprob: -19.750722885131836

Token 261: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04757564514875412
    2. ' def' → logprob: -3.1725757122039795
    3. '   ' → logprob: -5.7975754737854
    4. '
' → logprob: -6.7975754737854
    5. '<|end|>' → logprob: -8.922575950622559
    6. '(def' → logprob: -9.547575950622559
    7. '(' → logprob: -10.172575950622559
    8. '<|end|>' → logprob: -10.297575950622559
    9. '	def' → logprob: -10.797575950622559
    10. '    
' → logprob: -11.047575950622559

Token 262: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24881203472614288
    2. ' def' → logprob: -1.6238120794296265
    3. '
' → logprob: -3.873811960220337
    4. '   ' → logprob: -6.123812198638916
    5. '    
' → logprob: -9.748811721801758
    6. '<|end|>' → logprob: -10.873811721801758
    7. '  
' → logprob: -11.123811721801758
    8. '	def' → logprob: -11.498811721801758
    9. '(def' → logprob: -11.623811721801758
    10. '(' → logprob: -11.623811721801758

Token 263: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007099286303855479
    2. ' def' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.625709533691406
    4. ' ' → logprob: -20.250709533691406
    5. '	def' → logprob: -21.000709533691406
    6. '
' → logprob: -21.125709533691406
    7. 'de' → logprob: -21.875709533691406
    8. 'from' → logprob: -22.125709533691406
    9. 'class' → logprob: -22.500709533691406
    10. '  ' → logprob: -22.625709533691406

Token 264: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.38706621527671814
    2. ' parse' → logprob: -1.1370662450790405
    3. 'read' → logprob: -8.887065887451172
    4. ' read' → logprob: -10.012065887451172
    5. 'from' → logprob: -11.637065887451172
    6. ' from' → logprob: -13.137065887451172
    7. 'def' → logprob: -14.512065887451172
    8. ' def' → logprob: -14.512065887451172
    9. '	parse' → logprob: -16.137065887451172
    10. '.parse' → logprob: -16.637065887451172

Token 265: '_input' (ID: 12507)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.19834305346012115
    2. '(lines' → logprob: -1.94834303855896
    3. '(line' → logprob: -3.69834303855896
    4. '(text' → logprob: -5.323343276977539
    5. '(data' → logprob: -5.448343276977539
    6. '(' → logprob: -7.073343276977539
    7. ' (' → logprob: -7.448343276977539
    8. '(points' → logprob: -7.698343276977539
    9. '(s' → logprob: -8.448343276977539
    10. '(raw' → logprob: -8.573343276977539

Token 266: '():
' (ID: 8595)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.23824267089366913
    2. '(lines' → logprob: -2.4882426261901855
    3. '(line' → logprob: -2.6132426261901855
    4. '():' → logprob: -3.3632426261901855
    5. '():
' → logprob: -4.3632426261901855
    6. '(' → logprob: -6.3632426261901855
    7. '(data' → logprob: -6.3632426261901855
    8. '(text' → logprob: -6.3632426261901855
    9. '(file' → logprob: -6.6132426261901855
    10. '(s' → logprob: -7.7382426261901855

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004893111996352673
    2. '()' → logprob: -5.5048933029174805
    3. '(' → logprob: -8.00489330291748
    4. '        ' → logprob: -9.87989330291748
    5. 'return' → logprob: -9.87989330291748
    6. 'import' → logprob: -10.00489330291748
    7. '        
' → logprob: -10.37989330291748
    8. ' (' → logprob: -10.50489330291748
    9. 'input' → logprob: -10.50489330291748
    10. ' return' → logprob: -10.50489330291748

Token 268: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7871308326721191
    2. ' import' → logprob: -1.0371308326721191
    3. 'import' (adapté à ' import') → logprob: -2.162130832672119
    4. 'n' → logprob: -3.162130832672119
    5. ' lines' → logprob: -3.662130832672119
    6. ' line' → logprob: -5.787130832672119
    7. ' input' → logprob: -6.912130832672119
    8. ' data' → logprob: -7.537130832672119
    9. ' try' → logprob: -7.537130832672119
    10. 'line' → logprob: -7.787130832672119

Token 269: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.003178782993927598
    2. 'sys' → logprob: -5.753178596496582
    3. '=sys' → logprob: -14.253178596496582
    4. '	sys' → logprob: -14.753178596496582
    5. '_sys' → logprob: -17.3781795501709
    6. '(sys' → logprob: -17.5031795501709
    7. ' ' → logprob: -19.6281795501709
    8. ' json' → logprob: -20.0031795501709
    9. 'json' → logprob: -20.2531795501709
    10. ' ' → logprob: -20.8781795501709

Token 270: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14944475889205933
    2. 'input' → logprob: -3.024444818496704
    3. '.readline' → logprob: -4.149444580078125
    4. 'line' → logprob: -4.274444580078125
    5. 'data' → logprob: -4.399444580078125
    6. '        
' → logprob: -4.524444580078125
    7. ' lines' → logprob: -4.649444580078125
    8. ' line' → logprob: -5.024444580078125
    9. '
' → logprob: -5.524444580078125
    10. 'lines' → logprob: -5.649444580078125

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018113423138856888
    2. '        
' → logprob: -5.393113613128662
    3. '
' → logprob: -5.643113613128662
    4. 'line' → logprob: -6.268113613128662
    5. 'data' → logprob: -6.393113613128662
    6. ' lines' → logprob: -6.643113613128662
    7. ' line' → logprob: -6.893113613128662
    8. '.readline' → logprob: -7.143113613128662
    9. 'input' → logprob: -7.268113613128662
    10. ' readline' → logprob: -7.768113613128662

Token 272: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3811054825782776
    2. ' data' → logprob: -1.7561054229736328
    3. 'data' → logprob: -2.131105422973633
    4. ' input' → logprob: -4.256105422973633
    5. 'lines' (adapté à ' lines') → logprob: -5.131105422973633
    6. 'input' → logprob: -6.131105422973633
    7. '       ' → logprob: -6.381105422973633
    8. ' line' → logprob: -7.381105422973633
    9. ' n' → logprob: -7.506105422973633
    10. 'line' → logprob: -8.381105422973633

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39272284507751465
    2. '=' → logprob: -1.1427228450775146
    3. '()' → logprob: -5.892723083496094
    4. '.' → logprob: -6.642723083496094
    5. '.readline' → logprob: -6.642723083496094
    6. '.=' → logprob: -9.142723083496094
    7. '=[]' → logprob: -9.267723083496094
    8. '_' → logprob: -9.642723083496094
    9. '(' → logprob: -10.392723083496094
    10. '().' → logprob: -10.517723083496094

Token 274: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2519291639328003
    2. 'sys' → logprob: -1.5019291639328003
    3. '=sys' → logprob: -16.626928329467773
    4. '	sys' → logprob: -17.251928329467773
    5. '(sys' → logprob: -17.751928329467773
    6. '[' → logprob: -18.376928329467773
    7. ' [' → logprob: -18.876928329467773
    8. '_sys' → logprob: -20.501928329467773
    9. ' list' → logprob: -20.751928329467773
    10. '/sys' → logprob: -20.751928329467773

Token 275: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0119328573346138
    2. 'stdin' → logprob: -4.761932849884033
    3. '.readlines' → logprob: -7.261932849884033
    4. 'lines' → logprob: -7.386932849884033
    5. '.stdout' → logprob: -8.261933326721191
    6. '   ' → logprob: -8.386933326721191
    7. 'import' → logprob: -8.511933326721191
    8. '.lines' → logprob: -8.511933326721191
    9. '       ' → logprob: -8.636933326721191
    10. 'in' → logprob: -8.636933326721191

Token 276: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3137545883655548
    2. '.readlines' → logprob: -1.3137545585632324
    3. '.read' → logprob: -7.813754558563232
    4. '.' → logprob: -9.43875503540039
    5. 'read' → logprob: -11.68875503540039
    6. '_read' → logprob: -15.68875503540039
    7. ' .' → logprob: -15.93875503540039
    8. 'lines' → logprob: -16.18875503540039
    9. '_lines' → logprob: -16.81375503540039
    10. ' readline' → logprob: -16.93875503540039

Token 277: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008619774132966995
    2. '()' → logprob: -4.758619785308838
    3. '(' → logprob: -12.50861930847168
    4. 'lines' → logprob: -14.50861930847168
    5. '_lines' → logprob: -14.88361930847168
    6. ' ().' → logprob: -15.50861930847168
    7. '()
' → logprob: -16.25861930847168
    8. '()

' → logprob: -16.38361930847168
    9. '()).' → logprob: -16.38361930847168
    10. '()\' → logprob: -16.63361930847168

Token 278: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06254779547452927
    2. 'split' → logprob: -2.8125476837158203
    3. 'decode' → logprob: -7.68754768371582
    4. 'read' → logprob: -9.93754768371582
    5. 'rstrip' → logprob: -10.18754768371582
    6. 'lines' → logprob: -10.31254768371582
    7. '()' → logprob: -14.31254768371582
    8. 'replace' → logprob: -15.06254768371582
    9. '(split' → logprob: -15.18754768371582
    10. '_lines' → logprob: -15.43754768371582

Token 279: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003178306156769395
    2. '()' → logprob: -5.753178119659424
    3. '(' → logprob: -14.628178596496582
    4. '()
' → logprob: -16.003177642822266
    5. '()\' → logprob: -17.378177642822266
    6. ' ().' → logprob: -17.503177642822266
    7. 'split' → logprob: -17.628177642822266
    8. '()

' → logprob: -18.128177642822266
    9. '().'' → logprob: -18.628177642822266
    10. '('' → logprob: -18.628177642822266

Token 280: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -16.75
    3. 'lines' → logprob: -18.75
    4. '(split' → logprob: -19.625
    5. 'decode' → logprob: -22.125
    6. '.split' → logprob: -22.375
    7. 'plit' → logprob: -22.625
    8. 'spl' → logprob: -22.75
    9. '_split' → logprob: -22.875
    10. 'strip' → logprob: -23.625

Token 281: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.045112643390893936
    2. 'lines' → logprob: -3.5451126098632812
    3. '()' → logprob: -4.295112609863281
    4. '("\' → logprob: -6.920112609863281
    5. '(' → logprob: -7.420112609863281
    6. '('' → logprob: -10.920112609863281
    7. '()\' → logprob: -12.670112609863281
    8. '()
' → logprob: -14.170112609863281
    9. '(
' → logprob: -15.045112609863281
    10. '(\' → logprob: -15.170112609863281

Token 282: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0381750650703907
    2. '\n' → logprob: -3.288175106048584
    3. 'lines' → logprob: -9.913174629211426
    4. '
' → logprob: -9.913174629211426
    5. ''\' → logprob: -11.163174629211426
    6. '\' → logprob: -11.413174629211426
    7. 'newline' → logprob: -11.913174629211426
    8. '```' → logprob: -14.163174629211426
    9. '('\' → logprob: -14.538174629211426
    10. 'line' → logprob: -15.413174629211426

Token 283: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03145410120487213
    2. '')' → logprob: -3.531454086303711
    3. '       ' → logprob: -7.031454086303711
    4. ')
' → logprob: -7.281454086303711
    5. '')
' → logprob: -9.531454086303711
    6. '")' → logprob: -10.656454086303711
    7. ']' → logprob: -11.031454086303711
    8. '   ' → logprob: -12.031454086303711
    9. '[' → logprob: -13.031454086303711
    10. ' )' → logprob: -13.406454086303711

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007470945129171014
    2. 'return' → logprob: -8.125746726989746
    3. 'tokens' → logprob: -9.375746726989746
    4. 'n' → logprob: -9.500746726989746
    5. '<|end|>' → logprob: -9.625746726989746
    6. '        
' → logprob: -9.750746726989746
    7. ' n' → logprob: -10.625746726989746
    8. 'data' → logprob: -10.625746726989746
    9. ' return' → logprob: -11.500746726989746
    10. '        ' → logprob: -11.625746726989746

Token 285: ' N' (ID: 478)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.4254818260669708
    2. 't' → logprob: -1.9254817962646484
    3. 'n' → logprob: -2.1754817962646484
    4. ' T' → logprob: -2.9254817962646484
    5. ' t' → logprob: -3.9254817962646484
    6. ' n' → logprob: -4.675481796264648
    7. 'Q' → logprob: -6.425481796264648
    8. 'num' → logprob: -6.675481796264648
    9. '       ' → logprob: -7.800481796264648
    10. 'q' → logprob: -8.300481796264648

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13730038702487946
    2. ' =' → logprob: -2.137300491333008
    3. '=' → logprob: -4.637300491333008
    4. ' ,' → logprob: -7.762300491333008
    5. '=int' → logprob: -9.637300491333008
    6. ',N' → logprob: -10.387300491333008
    7. ',num' → logprob: -10.762300491333008
    8. ' =
' → logprob: -11.387300491333008
    9. '   ' → logprob: -11.762300491333008
    10. ')' → logprob: -11.887300491333008

Token 287: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.015015941113233566
    2. ' M' → logprob: -4.265016078948975
    3. 'K' → logprob: -7.265016078948975
    4. 'Q' → logprob: -10.265015602111816
    5. '<|end|>' → logprob: -10.390015602111816
    6. ' =' → logprob: -10.890015602111816
    7. ' ' → logprob: -11.265015602111816
    8. '=' → logprob: -11.390015602111816
    9. ' K' → logprob: -11.765015602111816
    10. 'T' → logprob: -11.765015602111816

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062086109071969986
    2. '=' → logprob: -2.8120861053466797
    3. ',' → logprob: -9.06208610534668
    4. ')' → logprob: -14.56208610534668
    5. ' ' → logprob: -14.93708610534668
    6. '=line' → logprob: -14.93708610534668
    7. ' =
' → logprob: -15.56208610534668
    8. ' ,' → logprob: -15.93708610534668
    9. '=int' → logprob: -16.06208610534668
    10. '<|end|>' → logprob: -16.18708610534668

Token 289: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1602250337600708
    2. ' map' → logprob: -1.9102250337600708
    3. 'int' → logprob: -14.535224914550781
    4. '(map' → logprob: -15.410224914550781
    5. '   ' → logprob: -16.03522491455078
    6. '	map' → logprob: -17.66022491455078
    7. 'list' → logprob: -17.91022491455078
    8. '[' → logprob: -18.16022491455078
    9. 'm' → logprob: -18.53522491455078
    10. ' ' → logprob: -19.28522491455078

Token 290: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002753522479906678
    2. '(lambda' → logprob: -6.377753734588623
    3. '(' → logprob: -7.002753734588623
    4. '(str' → logprob: -9.127753257751465
    5. 'int' → logprob: -10.627753257751465
    6. '[int' → logprob: -12.877753257751465
    7. ' (' → logprob: -13.627753257751465
    8. '(list' → logprob: -13.627753257751465
    9. 'lambda' → logprob: -13.752753257751465
    10. '(lines' → logprob: -14.002753257751465

Token 291: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0001601539261173457
    2. ',' → logprob: -9.125160217285156
    3. ')' → logprob: -10.750160217285156
    4. '(' → logprob: -10.750160217285156
    5. ' lines' → logprob: -12.750160217285156
    6. 'lines' → logprob: -13.000160217285156
    7. ')(' → logprob: -13.750160217285156
    8. ' (' → logprob: -13.750160217285156
    9. '	lines' → logprob: -14.625160217285156
    10. '(line' → logprob: -16.125160217285156

Token 292: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.038054004311561584
    2. ' lines' → logprob: -3.2880539894104004
    3. '(lines' → logprob: -11.413054466247559
    4. '	lines' → logprob: -13.913054466247559
    5. ')' → logprob: -14.913054466247559
    6. '.lines' → logprob: -16.663053512573242
    7. '   ' → logprob: -16.913053512573242
    8. ' ' → logprob: -17.038053512573242
    9. 'line' → logprob: -17.663053512573242
    10. '-lines' → logprob: -18.163053512573242

Token 293: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. ')[' → logprob: -14.125001907348633
    3. ' [' → logprob: -14.500001907348633
    4. '(' → logprob: -15.750001907348633
    5. '\[' → logprob: -15.750001907348633
    6. '1' → logprob: -16.250001907348633
    7. '()[' → logprob: -16.375001907348633
    8. '[
' → logprob: -16.500001907348633
    9. '   ' → logprob: -16.750001907348633
    10. '[-' → logprob: -17.000001907348633

Token 294: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5242560505867004
    2. '0' → logprob: -0.8992560505867004
    3. '[' → logprob: -6.899256229400635
    4. ' ' → logprob: -9.149255752563477
    5. '   ' → logprob: -11.524255752563477
    6. '][' → logprob: -13.774255752563477
    7. ' [' → logprob: -13.774255752563477
    8. '(' → logprob: -13.899255752563477
    9. ']' → logprob: -14.024255752563477
    10. '
' → logprob: -14.024255752563477

Token 295: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0016604241682216525
    2. '.split' → logprob: -6.876660346984863
    3. '().' → logprob: -7.626660346984863
    4. ' ].' → logprob: -9.876660346984863
    5. '.strip' → logprob: -10.376660346984863
    6. '()].' → logprob: -10.626660346984863
    7. '[' → logprob: -10.876660346984863
    8. ']' → logprob: -12.001660346984863
    9. ''].' → logprob: -12.751660346984863
    10. '])' → logprob: -13.376660346984863

Token 296: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03804229199886322
    2. 'strip' → logprob: -3.2880423069000244
    3. 'rstrip' → logprob: -14.538042068481445
    4. ' split' → logprob: -15.413042068481445
    5. '(split' → logprob: -16.288042068481445
    6. ' strip' → logprob: -18.788042068481445
    7. '.split' → logprob: -19.163042068481445
    8. 'plit' → logprob: -20.038042068481445
    9. 'spl' → logprob: -20.038042068481445
    10. '.strip' → logprob: -20.413042068481445

Token 297: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005247275810688734
    2. '()' → logprob: -5.380247116088867
    3. '('' → logprob: -7.880247116088867
    4. '(' → logprob: -9.130247116088867
    5. ')' → logprob: -9.505247116088867
    6. '())
' → logprob: -9.880247116088867
    7. '(','' → logprob: -11.880247116088867
    8. '()))' → logprob: -12.630247116088867
    9. ' ())' → logprob: -13.505247116088867
    10. '())

' → logprob: -13.880247116088867

Token 298: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.05188584327697754
    2. ' cards' → logprob: -3.4268858432769775
    3. 'points' → logprob: -4.676885604858398
    4. '       ' → logprob: -4.926885604858398
    5. '
' → logprob: -8.051885604858398
    6. ' points' → logprob: -8.426885604858398
    7. '.cards' → logprob: -8.551885604858398
    8. '_cards' → logprob: -8.676885604858398
    9. '```' → logprob: -9.176885604858398
    10. '        
' → logprob: -9.176885604858398

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009784307330846786
    2. '=' → logprob: -4.63478422164917
    3. '=[]' → logprob: -10.509784698486328
    4. ',' → logprob: -14.884784698486328
    5. '=[]
' → logprob: -15.509784698486328
    6. ' =[' → logprob: -15.634784698486328
    7. 's' → logprob: -16.259784698486328
    8. ' =
' → logprob: -16.259784698486328
    9. ' ' → logprob: -16.634784698486328
    10. '   ' → logprob: -17.134784698486328

Token 301: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0929388627409935
    2. '[]
' → logprob: -2.8429388999938965
    3. '[' → logprob: -3.5929388999938965
    4. '[
' → logprob: -5.8429388999938965
    5. '[]

' → logprob: -9.717938423156738
    6. '[class' → logprob: -11.592938423156738
    7. '[int' → logprob: -12.967938423156738
    8. '[line' → logprob: -13.342938423156738
    9. ' []' → logprob: -13.717938423156738
    10. '[]}' → logprob: -14.092938423156738

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3796516954898834
    2. 'for' → logprob: -1.504651665687561
    3. ' for' → logprob: -2.3796517848968506
    4. '	for' → logprob: -7.7546515464782715
    5. '<|end|>' → logprob: -7.7546515464782715
    6. '   ' → logprob: -8.00465202331543
    7. '<|end|>' → logprob: -12.00465202331543
    8. ' ' → logprob: -12.12965202331543
    9. '	   ' → logprob: -12.37965202331543
    10. '```' → logprob: -12.75465202331543

Token 303: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005599645897746086
    2. ' for' → logprob: -5.255599498748779
    3. '       ' → logprob: -8.005599975585938
    4. '	for' → logprob: -10.380599975585938
    5. 'line' → logprob: -14.380599975585938
    6. '   ' → logprob: -15.255599975585938
    7. '```' → logprob: -15.630599975585938
    8. '
' → logprob: -16.505599975585938
    9. 'idx' → logprob: -17.130599975585938
    10. ' ' → logprob: -17.255599975585938

Token 304: '_slots' (ID: 143546)
  Prédit: '_slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_slots' → logprob: -0.0744357481598854
    2. '_lines' → logprob: -2.8244357109069824
    3. 'slots' → logprob: -5.699435710906982
    4. ' =' → logprob: -6.699435710906982
    5. '_tokens' → logprob: -6.699435710906982
    6. 'for' → logprob: -6.824435710906982
    7. ' for' → logprob: -6.824435710906982
    8. '=' → logprob: -6.949435710906982
    9. ' lines' → logprob: -7.074435710906982
    10. '_cards' → logprob: -7.324435710906982

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07135657221078873
    2. '=' → logprob: -2.6963565349578857
    3. 'for' → logprob: -6.946356773376465
    4. ' for' → logprob: -8.821356773376465
    5. ' ' → logprob: -9.696356773376465
    6. ',' → logprob: -9.696356773376465
    7. '    ' → logprob: -10.321356773376465
    8. '<|end|>' → logprob: -10.321356773376465
    9. '_lines' → logprob: -10.696356773376465
    10. '<|end|>' → logprob: -10.821356773376465

Token 306: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11629743874073029
    2. 'int' → logprob: -2.866297483444214
    3. ' ' → logprob: -4.366297245025635
    4. '10' → logprob: -4.616297245025635
    5. '[]' → logprob: -4.866297245025635
    6. '100' → logprob: -5.241297245025635
    7. 'M' → logprob: -5.491297245025635
    8. 'None' → logprob: -6.116297245025635
    9. 'len' → logprob: -6.366297245025635
    10. ' int' → logprob: -6.491297245025635

Token 307: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15621720254421234
    2. '[]' → logprob: -2.281217098236084
    3. 'int' → logprob: -4.156217098236084
    4. 'M' → logprob: -5.281217098236084
    5. '10' → logprob: -5.281217098236084
    6. 'None' → logprob: -5.281217098236084
    7. '20' → logprob: -6.281217098236084
    8. ' ' → logprob: -6.406217098236084
    9. '100' → logprob: -6.656217098236084
    10. '1' → logprob: -6.781217098236084

Token 308: ' *' (ID: 425)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34662213921546936
    2. '
' → logprob: -1.596622109413147
    3. '4' → logprob: -2.8466222286224365
    4. 'for' → logprob: -4.846621990203857
    5. '3' → logprob: -5.346621990203857
    6. '*' → logprob: -5.971621990203857
    7. '<|end|>' → logprob: -6.096621990203857
    8. '1' → logprob: -6.346621990203857
    9. '       ' → logprob: -6.471621990203857
    10. '00' → logprob: -6.596621990203857

Token 309: ' N' (ID: 478)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.08572875708341599
    2. 'N' → logprob: -2.960728645324707
    3. ' M' → logprob: -3.710728645324707
    4. '(M' → logprob: -5.835728645324707
    5. ' (' → logprob: -6.585728645324707
    6. ' N' → logprob: -7.085728645324707
    7. '(' → logprob: -7.960728645324707
    8. '(N' → logprob: -8.335728645324707
    9. 'int' → logprob: -10.335728645324707
    10. '10' → logprob: -10.335728645324707

Token 310: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14562126994132996
    2. '<|end|>' → logprob: -2.2706212997436523
    3. ' for' → logprob: -4.020621299743652
    4. 'for' → logprob: -4.770621299743652
    5. '<|end|>' → logprob: -5.770621299743652
    6. '       ' → logprob: -6.395621299743652
    7. '
' → logprob: -8.145621299743652
    8. '  
' → logprob: -8.645621299743652
    9. '        
' → logprob: -9.145621299743652
    10. '	for' → logprob: -9.395621299743652

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1462771892547607
    2. ' for' → logprob: -1.1462771892547607
    3. '<|end|>' → logprob: -1.2712771892547607
    4. 'for' → logprob: -2.7712771892547607
    5. '
' → logprob: -4.77127742767334
    6. '	for' → logprob: -5.14627742767334
    7. '<|end|>' → logprob: -5.52127742767334
    8. ',' → logprob: -6.39627742767334
    9. '        
' → logprob: -8.39627742767334
    10. '	' → logprob: -8.52127742767334

Token 312: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009662355296313763
    2. ' for' → logprob: -4.75966215133667
    3. '       ' → logprob: -6.88466215133667
    4. '	for' → logprob: -10.759662628173828
    5. '   ' → logprob: -13.134662628173828
    6. '```' → logprob: -15.009662628173828
    7. '
' → logprob: -15.884662628173828
    8. 'line' → logprob: -16.134662628173828
    9. 'i' → logprob: -16.259662628173828
    10. 'idx' → logprob: -16.884662628173828

Token 313: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015605632215738297
    2. 'line' → logprob: -4.765605449676514
    3. ' i' → logprob: -5.015605449676514
    4. ' line' → logprob: -8.015605926513672
    5. '   ' → logprob: -13.515605926513672
    6. 'idx' → logprob: -14.390605926513672
    7. ' ' → logprob: -14.515605926513672
    8. 'l' → logprob: -16.015605926513672
    9. 'index' → logprob: -16.640605926513672
    10. '  ' → logprob: -17.015605926513672

Token 314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016164343804121017
    2. 'in' → logprob: -4.141164302825928
    3. ' ' → logprob: -9.141164779663086
    4. ',' → logprob: -11.516164779663086
    5. 'n' → logprob: -11.891164779663086
    6. 'range' → logprob: -13.641164779663086
    7. '	in' → logprob: -14.016164779663086
    8. '  ' → logprob: -14.266164779663086
    9. '0' → logprob: -14.766164779663086
    10. '1' → logprob: -15.016164779663086

Token 315: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269284337759018
    2. ' range' → logprob: -2.1269283294677734
    3. '	range' → logprob: -16.001928329467773
    4. ' ' → logprob: -16.126928329467773
    5. 'ange' → logprob: -17.126928329467773
    6. '(range' → logprob: -17.501928329467773
    7. '   ' → logprob: -18.001928329467773
    8. '  ' → logprob: -18.501928329467773
    9. 'rang' → logprob: -18.501928329467773
    10. ' xrange' → logprob: -19.001928329467773

Token 316: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.166338137816638e-05
    2. '(M' → logprob: -10.375031471252441
    3. ' (' → logprob: -14.875031471252441
    4. 'range' → logprob: -16.875032424926758
    5. '(
' → logprob: -18.375032424926758
    6. '1' → logprob: -18.500032424926758
    7. '(len' → logprob: -19.750032424926758
    8. '(m' → logprob: -20.000032424926758
    9. '   ' → logprob: -20.000032424926758
    10. ' in' → logprob: -20.125032424926758

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012563333846628666
    2. 'M' → logprob: -4.387563228607178
    3. ' ' → logprob: -10.762563705444336
    4. ' M' → logprob: -10.887563705444336
    5. '   ' → logprob: -11.262563705444336
    6. '       ' → logprob: -15.137563705444336
    7. '    ' → logprob: -15.762563705444336
    8. 'range' → logprob: -15.887563705444336
    9. '2' → logprob: -16.137563705444336
    10. 'len' → logprob: -16.387563705444336

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009344478603452444
    2. ' ,' → logprob: -7.000934600830078
    3. ',len' → logprob: -11.250934600830078
    4. ',M' → logprob: -12.000934600830078
    5. ',N' → logprob: -13.000934600830078
    6. ' ' → logprob: -14.250934600830078
    7. '1' → logprob: -14.625934600830078
    8. '   ' → logprob: -16.125934600830078
    9. ',
' → logprob: -16.375934600830078
    10. '    ' → logprob: -16.875934600830078

Token 319: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01809293031692505
    2. '1' → logprob: -4.768093109130859
    3. 'len' → logprob: -4.768093109130859
    4. ' M' → logprob: -7.018093109130859
    5. ' len' → logprob: -10.39309310913086
    6. ' ' → logprob: -12.14309310913086
    7. 'm' → logprob: -13.26809310913086
    8. '   ' → logprob: -13.39309310913086
    9. 'N' → logprob: -13.89309310913086
    10. '    ' → logprob: -14.89309310913086

Token 320: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04339877516031265
    2. '):
' → logprob: -3.168398857116699
    3. ':' → logprob: -8.4183988571167
    4. '+' → logprob: -8.7933988571167
    5. ' ):' → logprob: -11.1683988571167
    6. '1' → logprob: -12.7933988571167
    7. ')' → logprob: -13.0433988571167
    8. '   ' → logprob: -13.7933988571167
    9. '       ' → logprob: -13.7933988571167
    10. ',' → logprob: -13.9183988571167

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.625003814697266
    4. ')' → logprob: -20.500003814697266
    5. '  ' → logprob: -20.500003814697266
    6. 'i' → logprob: -20.625003814697266
    7. '    ' → logprob: -21.125003814697266
    8. '+' → logprob: -21.375003814697266
    9. '     ' → logprob: -21.375003814697266
    10. '2' → logprob: -21.625003814697266

Token 322: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1340642124414444
    2. '):' → logprob: -2.134064197540283
    3. ':' → logprob: -5.134064197540283
    4. '       ' → logprob: -7.509064197540283
    5. ':
' → logprob: -8.009064674377441
    6. '   ' → logprob: -8.884064674377441
    7. ' ):
' → logprob: -9.509064674377441
    8. '):
' → logprob: -10.009064674377441
    9. '():
' → logprob: -10.759064674377441
    10. ' :' → logprob: -11.134064674377441

Token 323: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.265672504901886
    2. '           ' → logprob: -1.7656724452972412
    3. '        ' → logprob: -4.39067268371582
    4. ',' → logprob: -4.64067268371582
    5. '   ' → logprob: -4.64067268371582
    6. '<|end|>' → logprob: -4.64067268371582
    7. 'tokens' → logprob: -4.89067268371582
    8. ' lines' → logprob: -5.89067268371582
    9. '        
' → logprob: -5.89067268371582
    10. ' tokens' → logprob: -6.14067268371582

Token 324: ' A' (ID: 355)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hit' → logprob: -0.0921211913228035
    2. ' hit' → logprob: -2.967121124267578
    3. 'hits' → logprob: -3.592121124267578
    4. 'h' → logprob: -5.342121124267578
    5. ' hits' → logprob: -6.217121124267578
    6. '           ' → logprob: -6.842121124267578
    7. 'total' → logprob: -8.092121124267578
    8. 'slots' → logprob: -9.342121124267578
    9. ' h' → logprob: -9.779621124267578
    10. 'hi' → logprob: -10.092121124267578

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033903829171322286
    2. ' ,' → logprob: -8.75033950805664
    3. 'hits' → logprob: -10.25033950805664
    4. '_hits' → logprob: -10.25033950805664
    5. '_,' → logprob: -11.00033950805664
    6. 'hit' → logprob: -11.00033950805664
    7. 'i' → logprob: -11.12533950805664
    8. '_hit' → logprob: -11.50033950805664
    9. '_i' → logprob: -11.87533950805664
    10. 'I' → logprob: -12.12533950805664

Token 326: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.038244254887104034
    2. ' B' → logprob: -3.2882442474365234
    3. 'Q' → logprob: -9.788244247436523
    4. ' ' → logprob: -10.538244247436523
    5. 'P' → logprob: -10.788244247436523
    6. 'C' → logprob: -10.913244247436523
    7. 'D' → logprob: -11.038244247436523
    8. 'S' → logprob: -11.288244247436523
    9. 'b' → logprob: -11.288244247436523
    10. 'T' → logprob: -11.538244247436523

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7439538240432739
    2. ' =' → logprob: -1.118953824043274
    3. ',' → logprob: -1.618953824043274
    4. '<|end|>' → logprob: -10.743953704833984
    5. ' ,' → logprob: -11.618953704833984
    6. ' ' → logprob: -12.743953704833984
    7. '<|end|>' → logprob: -13.368953704833984
    8. '=int' → logprob: -13.493953704833984
    9. '  ' → logprob: -14.368953704833984
    10. ')' → logprob: -14.493953704833984

Token 328: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2519371509552002
    2. 'map' → logprob: -1.5019371509552002
    3. '	map' → logprob: -13.626936912536621
    4. '<|end|>' → logprob: -13.626936912536621
    5. '_map' → logprob: -13.876936912536621
    6. '(map' → logprob: -14.001936912536621
    7. ' ' → logprob: -14.001936912536621
    8. 'list' → logprob: -14.251936912536621
    9. ' lines' → logprob: -14.501936912536621
    10. 'int' → logprob: -15.001936912536621

Token 329: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001334559783572331
    2. 'int' → logprob: -9.250133514404297
    3. '(' → logprob: -10.250133514404297
    4. ' (' → logprob: -13.875133514404297
    5. '<int' → logprob: -14.750133514404297
    6. '(
' → logprob: -15.625133514404297
    7. '(str' → logprob: -15.750133514404297
    8. ' int' → logprob: -16.125133514404297
    9. '=int' → logprob: -16.500133514404297
    10. '[int' → logprob: -16.750133514404297

Token 330: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.43054938316345215
    2. ',' → logprob: -1.0555493831634521
    3. '(' → logprob: -6.805549621582031
    4. ' ,' → logprob: -7.930549621582031
    5. ' lines' → logprob: -8.930549621582031
    6. ')' → logprob: -9.305549621582031
    7. '<|end|>' → logprob: -9.555549621582031
    8. '(),' → logprob: -10.930549621582031
    9. ' (' → logprob: -11.055549621582031
    10. '	lines' → logprob: -11.180549621582031

Token 331: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.10024097561836243
    2. ' lines' → logprob: -2.35024094581604
    3. '(lines' → logprob: -10.350240707397461
    4. ')' → logprob: -13.725240707397461
    5. '	lines' → logprob: -13.850240707397461
    6. '           ' → logprob: -15.850240707397461
    7. '.lines' → logprob: -16.60024070739746
    8. '   ' → logprob: -17.22524070739746
    9. ' ' → logprob: -17.60024070739746
    10. '-lines' → logprob: -18.47524070739746

Token 332: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013393278641160578
    2. '()[' → logprob: -9.750133514404297
    3. '(i' → logprob: -10.000133514404297
    4. '[' → logprob: -10.625133514404297
    5. ')[' → logprob: -12.875133514404297
    6. '[I' → logprob: -13.875133514404297
    7. '[
' → logprob: -14.500133514404297
    8. '[line' → logprob: -14.625133514404297
    9. '[A' → logprob: -14.750133514404297
    10. '   ' → logprob: -15.375133514404297

Token 333: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0012442785082384944
    2. '()].' → logprob: -7.376244068145752
    3. '().' → logprob: -8.12624454498291
    4. ']' → logprob: -8.50124454498291
    5. ' ].' → logprob: -10.25124454498291
    6. '[' → logprob: -10.25124454498291
    7. '])' → logprob: -10.75124454498291
    8. ''].' → logprob: -11.75124454498291
    9. '.split' → logprob: -12.25124454498291
    10. '][' → logprob: -13.00124454498291

Token 334: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007270866190083325
    2. 'strip' → logprob: -7.25072717666626
    3. ' split' → logprob: -11.000726699829102
    4. 'rstrip' → logprob: -15.500726699829102
    5. '(split' → logprob: -16.2507266998291
    6. 'plit' → logprob: -16.3757266998291
    7. '.split' → logprob: -16.8757266998291
    8. ' strip' → logprob: -18.5007266998291
    9. ')' → logprob: -18.7507266998291
    10. ' ' → logprob: -19.1257266998291

Token 335: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009806736372411251
    2. '()' → logprob: -4.7598066329956055
    3. ')' → logprob: -7.1348066329956055
    4. '())
' → logprob: -7.8848066329956055
    5. '(' → logprob: -11.759806632995605
    6. '()
' → logprob: -12.134806632995605
    7. '(),' → logprob: -13.509806632995605
    8. ' ())' → logprob: -14.134806632995605
    9. '()))' → logprob: -14.259806632995605
    10. '())

' → logprob: -14.259806632995605

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02894514612853527
    2. '            
' → logprob: -4.403944969177246
    3. '<|end|>' → logprob: -5.403944969177246
    4. '       ' → logprob: -5.528944969177246
    5. '        
' → logprob: -5.653944969177246
    6. '
' → logprob: -6.153944969177246
    7. '               ' → logprob: -7.653944969177246
    8. ',' → logprob: -7.653944969177246
    9. '            ' → logprob: -8.028944969177246
    10. ' 
' → logprob: -8.528944969177246

Token 337: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.3011775612831116
    2. ' cards' → logprob: -1.8011775016784668
    3. '           ' → logprob: -2.801177501678467
    4. 'card' → logprob: -3.926177501678467
    5. ' card' → logprob: -4.926177501678467
    6. '       ' → logprob: -5.551177501678467
    7. 'c' → logprob: -7.551177501678467
    8. 'points' → logprob: -7.801177501678467
    9. '
' → logprob: -7.926177501678467
    10. 'hit' → logprob: -8.176177978515625

Token 338: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000386701402021572
    2. '.' → logprob: -7.875386714935303
    3. ' .' → logprob: -12.500386238098145
    4. '.ap' → logprob: -14.125386238098145
    5. '.app' → logprob: -14.500386238098145
    6. '.push' → logprob: -14.875386238098145
    7. ' =' → logprob: -15.125386238098145
    8. '.py' → logprob: -15.375386238098145
    9. '.p' → logprob: -15.625386238098145
    10. '.extend' → logprob: -15.875386238098145

Token 339: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.875001907348633
    3. 'Point' → logprob: -14.125001907348633
    4. ' Point' → logprob: -14.625001907348633
    5. '	Point' → logprob: -17.500001907348633
    6. '(P' → logprob: -17.625001907348633
    7. '(
' → logprob: -17.750001907348633
    8. '.Point' → logprob: -18.250001907348633
    9. ' (' → logprob: -19.375001907348633
    10. '<Point' → logprob: -19.500001907348633

Token 340: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -5.512236498361744e-07
    2. 'Cards' → logprob: -15.000000953674316
    3. 'Car' → logprob: -16.75
    4. '<Card' → logprob: -17.5
    5. ' Card' → logprob: -17.625
    6. 'Point' → logprob: -17.625
    7. '_card' → logprob: -19.0
    8. '(Card' → logprob: -19.125
    9. 'C' → logprob: -19.875
    10. 'card' → logprob: -19.875

Token 341: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0012479700380936265
    2. 'total' → logprob: -7.001247882843018
    3. '(' → logprob: -8.001248359680176
    4. '2' → logprob: -14.251248359680176
    5. '(
' → logprob: -15.376248359680176
    6. ' total' → logprob: -15.751248359680176
    7. '(t' → logprob: -16.37624740600586
    8. ',total' → logprob: -16.37624740600586
    9. '((' → logprob: -16.62624740600586
    10. ')' → logprob: -17.75124740600586

Token 342: '_slots' (ID: 143546)
  Prédit: '_slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_slots' → logprob: -8.208653162000701e-05
    2. 'slots' → logprob: -9.500082015991211
    3. '_' → logprob: -12.750082015991211
    4. '_cards' → logprob: -13.000082015991211
    5. ' _' → logprob: -15.125082015991211
    6. 'Slots' → logprob: -15.250082015991211
    7. 's' → logprob: -15.375082015991211
    8. '_s' → logprob: -15.500082015991211
    9. '_spaces' → logprob: -15.750082015991211
    10. '_hits' → logprob: -16.25008201599121

Token 343: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006714478367939591
    2. '=' → logprob: -8.12567138671875
    3. ',A' → logprob: -8.50067138671875
    4. ' ,' → logprob: -8.75067138671875
    5. 'A' → logprob: -11.87567138671875
    6. ',B' → logprob: -12.37567138671875
    7. '   ' → logprob: -14.12567138671875
    8. '=A' → logprob: -14.37567138671875
    9. ',
' → logprob: -14.62567138671875
    10. ' A' → logprob: -15.50067138671875

Token 344: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.049843862652778625
    2. ' total' → logprob: -3.0498437881469727
    3. ' ' → logprob: -6.924843788146973
    4. '2' → logprob: -9.424843788146973
    5. '(total' → logprob: -9.799843788146973
    6. '<|end|>' → logprob: -10.049843788146973
    7. ',total' → logprob: -10.674843788146973
    8. '	total' → logprob: -10.924843788146973
    9. ')' → logprob: -11.174843788146973
    10. ',' → logprob: -11.674843788146973

Token 345: '_slots' (ID: 143546)
  Prédit: '_slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_slots' → logprob: -0.00013810492237098515
    2. '_' → logprob: -9.125138282775879
    3. 'slots' → logprob: -11.500138282775879
    4. 'Slots' → logprob: -11.625138282775879
    5. '_cards' → logprob: -12.375138282775879
    6. ' _' → logprob: -12.750138282775879
    7. ')' → logprob: -14.375138282775879
    8. '   ' → logprob: -15.000138282775879
    9. '  ' → logprob: -15.125138282775879
    10. '_s' → logprob: -15.500138282775879

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002599053841549903
    2. ' ,' → logprob: -8.375260353088379
    3. ',A' → logprob: -10.625260353088379
    4. ',B' → logprob: -12.750260353088379
    5. 'A' → logprob: -14.000260353088379
    6. '   ' → logprob: -14.625260353088379
    7. ',
' → logprob: -15.125260353088379
    8. ',b' → logprob: -15.500260353088379
    9. '           ' → logprob: -16.250259399414062
    10. '       ' → logprob: -17.000259399414062

Token 347: ' hit' (ID: 7103)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hit' → logprob: -0.07910304516553879
    2. ' hit' → logprob: -2.5791029930114746
    3. 'total' → logprob: -9.704103469848633
    4. '   ' → logprob: -9.829103469848633
    5. '           ' → logprob: -10.579103469848633
    6. ' ' → logprob: -10.829103469848633
    7. 'A' → logprob: -11.204103469848633
    8. ' total' → logprob: -11.829103469848633
    9. '    ' → logprob: -12.204103469848633
    10. '       ' → logprob: -12.204103469848633

Token 348: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.875000953674316
    3. 'count' → logprob: -15.125000953674316
    4. '_counts' → logprob: -16.000001907348633
    5. ' _' → logprob: -16.500001907348633
    6. '_c' → logprob: -16.875001907348633
    7. 's' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.250001907348633
    9. ' count' → logprob: -18.250001907348633
    10. '_slots' → logprob: -18.750001907348633

Token 349: '=A' (ID: 112591)
  Prédit: '=B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=B' → logprob: -0.3649830222129822
    2. '=A' → logprob: -1.239983081817627
    3. '=' → logprob: -4.114983081817627
    4. ' =' → logprob: -10.114982604980469
    5. 'B' → logprob: -11.114982604980469
    6. ',' → logprob: -12.364982604980469
    7. 'A' → logprob: -12.614982604980469
    8. ')' → logprob: -12.989982604980469
    9. '=b' → logprob: -13.114982604980469
    10. '=
' → logprob: -13.489982604980469

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004487844998948276
    2. ',m' → logprob: -7.875448703765869
    3. ' ,' → logprob: -10.000449180603027
    4. '           ' → logprob: -10.750449180603027
    5. ',
' → logprob: -14.250449180603027
    6. ',b' → logprob: -15.250449180603027
    7. '       ' → logprob: -15.250449180603027
    8. '   ' → logprob: -15.875449180603027
    9. 'm' → logprob: -16.25044822692871
    10. '               ' → logprob: -16.62544822692871

Token 351: ' miss' (ID: 5141)
  Prédit: 'miss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'miss' → logprob: -0.04356769844889641
    2. ' miss' → logprob: -3.168567657470703
    3. '           ' → logprob: -7.668567657470703
    4. '               ' → logprob: -9.918567657470703
    5. '                   ' → logprob: -11.293567657470703
    6. '   ' → logprob: -11.543567657470703
    7. '       ' → logprob: -12.168567657470703
    8. '                               ' → logprob: -12.293567657470703
    9. '                           ' → logprob: -12.793567657470703
    10. '            ' → logprob: -13.168567657470703

Token 352: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.339278580620885e-06
    2. 'count' → logprob: -13.625001907348633
    3. '_c' → logprob: -15.125001907348633
    4. '_' → logprob: -15.250001907348633
    5. ' _' → logprob: -15.875001907348633
    6. ' count' → logprob: -16.500001907348633
    7. '=' → logprob: -16.625001907348633
    8. 's' → logprob: -16.875001907348633
    9. 't' → logprob: -17.125001907348633
    10. '   ' → logprob: -17.500001907348633

Token 353: '=B' (ID: 139140)
  Prédit: '=B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=B' → logprob: -0.034797340631484985
    2. '=' → logprob: -3.784797430038452
    3. 'B' → logprob: -4.534797191619873
    4. '=(' → logprob: -7.784797191619873
    5. ' =' → logprob: -8.534797668457031
    6. 'total' → logprob: -10.284797668457031
    7. ' B' → logprob: -11.034797668457031
    8. ')' → logprob: -11.034797668457031
    9. '=A' → logprob: -11.409797668457031
    10. ' ' → logprob: -11.534797668457031

Token 354: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00016063073417171836
    2. ')' → logprob: -9.375160217285156
    3. '       ' → logprob: -10.500160217285156
    4. '))
' → logprob: -10.625160217285156
    5. '           ' → logprob: -11.125160217285156
    6. ' ))' → logprob: -11.875160217285156
    7. ')))' → logprob: -13.875160217285156
    8. '   ' → logprob: -14.375160217285156
    9. '               ' → logprob: -15.625160217285156
    10. ' ' → logprob: -16.000160217285156

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02484523132443428
    2. '<|end|>' → logprob: -3.7748451232910156
    3. ' return' → logprob: -7.899845123291016
    4. '        
' → logprob: -8.149845123291016
    5. 'return' → logprob: -8.149845123291016
    6. '
' → logprob: -8.649845123291016
    7. '<|end|>' → logprob: -8.899845123291016
    8. '      ' → logprob: -9.399845123291016
    9. ')' → logprob: -9.399845123291016
    10. '        ' → logprob: -9.774845123291016

Token 356: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26610636711120605
    2. '       ' → logprob: -1.516106367111206
    3. ' return' → logprob: -4.266106605529785
    4. '
' → logprob: -10.516106605529785
    5. '   ' → logprob: -11.891106605529785
    6. '        
' → logprob: -13.016106605529785
    7. '	return' → logprob: -13.016106605529785
    8. '```' → logprob: -14.141106605529785
    9. '      ' → logprob: -14.766106605529785
    10. '           ' → logprob: -15.516106605529785

Token 357: ' N' (ID: 478)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.07539454847574234
    2. 'Point' → logprob: -2.700394630432129
    3. ' cards' → logprob: -6.325394630432129
    4. '(cards' → logprob: -6.450394630432129
    5. 'N' → logprob: -6.950394630432129
    6. ' Point' → logprob: -7.075394630432129
    7. 'points' → logprob: -8.575394630432129
    8. 'Input' → logprob: -10.950394630432129
    9. '   ' → logprob: -11.950394630432129
    10. 'coins' → logprob: -11.950394630432129

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.337155355140567e-05
    2. ',M' → logprob: -9.750062942504883
    3. ' ,' → logprob: -12.375062942504883
    4. ',m' → logprob: -14.875062942504883
    5. ',
' → logprob: -16.125062942504883
    6. 'M' → logprob: -16.250062942504883
    7. '<|end|>' → logprob: -16.750062942504883
    8. ',N' → logprob: -16.875062942504883
    9. ',c' → logprob: -17.625062942504883
    10. '‌,' → logprob: -18.250062942504883

Token 359: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.24289736151695251
    2. 'cards' → logprob: -1.617897391319275
    3. ' M' → logprob: -4.4928975105285645
    4. ' cards' → logprob: -5.1178975105285645
    5. '(cards' → logprob: -9.492897033691406
    6. '   ' → logprob: -10.492897033691406
    7. '.cards' → logprob: -11.867897033691406
    8. ' ' → logprob: -12.117897033691406
    9. 'card' → logprob: -12.180397033691406
    10. '    ' → logprob: -12.680397033691406

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006395607255399227
    2. '<|end|>' → logprob: -5.1313958168029785
    3. ',c' → logprob: -8.00639533996582
    4. ' ,' → logprob: -9.63139533996582
    5. ',
' → logprob: -10.25639533996582
    6. '(cards' → logprob: -11.75639533996582
    7. '<|end|>' → logprob: -11.75639533996582
    8. '
' → logprob: -13.13139533996582
    9. '       ' → logprob: -13.25639533996582
    10. ' cards' → logprob: -13.38139533996582

Token 361: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.002477796748280525
    2. ' cards' → logprob: -6.002477645874023
    3. '(cards' → logprob: -13.252477645874023
    4. 'card' → logprob: -15.377477645874023
    5. '.cards' → logprob: -16.002477645874023
    6. '/cards' → logprob: -17.377477645874023
    7. 'cars' → logprob: -17.377477645874023
    8. 'coins' → logprob: -18.377477645874023
    9. '_cards' → logprob: -18.377477645874023
    10. 'points' → logprob: -18.377477645874023

Token 362: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6984924674034119
    2. '<|end|>' → logprob: -0.6984924674034119
    3. '<|end|>' → logprob: -6.073492527008057
    4. '

' → logprob: -6.823492527008057
    5. '```' → logprob: -7.073492527008057
    6. 'def' → logprob: -7.448492527008057
    7. 'N' → logprob: -9.073492050170898
    8. '#' → logprob: -9.448492050170898
    9. '  
' → logprob: -9.823492050170898
    10. 'if' → logprob: -9.948492050170898

Token 363: 'class' (ID: 1444)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.551034152507782
    2. 'class' → logprob: -1.0510342121124268
    3. 'def' → logprob: -2.9260342121124268
    4. '```' → logprob: -3.9260342121124268
    5. '#' → logprob: -7.926033973693848
    6. 'import' → logprob: -8.676033973693848
    7. '<|end|>' → logprob: -9.551033973693848
    8. ' if' → logprob: -9.801033973693848
    9. ' class' → logprob: -9.926033973693848
    10. '``' → logprob: -11.926033973693848

Token 364: ' JO' (ID: 72685)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.6776092052459717
    2. 'Solution' → logprob: -1.5526092052459717
    3. 'Main' → logprob: -1.9276092052459717
    4. 'Game' → logprob: -3.4276092052459717
    5. 'Point' → logprob: -3.8026092052459717
    6. 'Solver' → logprob: -3.9276092052459717
    7. 'Prize' → logprob: -4.427609443664551
    8. ' Output' → logprob: -4.802609443664551
    9. ' Solution' → logprob: -4.802609443664551
    10. ' Game' → logprob: -5.302609443664551

Token 365: 'IS' (ID: 2291)
  Prédit: 'IN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.8271592259407043
    2. 'I' → logprob: -1.3271591663360596
    3. 'INT' → logprob: -2.8271591663360596
    4. 'IC' → logprob: -3.0771591663360596
    5. 'B' → logprob: -3.5771591663360596
    6. 'JO' → logprob: -3.9521591663360596
    7. 'INC' → logprob: -4.577159404754639
    8. 'Y' → logprob: -4.889659404754639
    9. 'YST' → logprob: -4.889659404754639
    10. 'C' → logprob: -5.014659404754639

Token 366: 'olver' (ID: 13941)
  Prédit: '202'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '202' → logprob: -0.9164400696754456
    2. 'olver' → logprob: -1.7914400100708008
    3. '201' → logprob: -2.416440010070801
    4. 'erver' → logprob: -2.791440010070801
    5. 'T' → logprob: -3.666440010070801
    6. 'earch' → logprob: -3.666440010070801
    7. 'Parser' → logprob: -3.916440010070801
    8. 't' → logprob: -4.041440010070801
    9. 'cheduler' → logprob: -4.666440010070801
    10. '200' → logprob: -4.791440010070801

Token 367: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001943984068930149
    2. ':
' → logprob: -6.251944065093994
    3. ' :' → logprob: -11.751943588256836
    4. '<|end|>' → logprob: -13.001943588256836
    5. ':def' → logprob: -13.501943588256836
    6. '():' → logprob: -13.876943588256836
    7. ':

' → logprob: -14.001943588256836
    8. '(' → logprob: -14.751943588256836
    9. '(object' → logprob: -15.376943588256836
    10. '):' → logprob: -15.501943588256836

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003235109616070986
    2. ' def' → logprob: -5.753235340118408
    3. 'def' → logprob: -10.00323486328125
    4. '    
' → logprob: -12.50323486328125
    5. '<|end|>' → logprob: -12.87823486328125
    6. '	def' → logprob: -13.62823486328125
    7. '   ' → logprob: -13.87823486328125
    8. '    ' → logprob: -14.00323486328125
    9. ':' → logprob: -14.50323486328125
    10. '
' → logprob: -14.62823486328125

Token 369: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03670845180749893
    2. 'def' (adapté à ' def') → logprob: -3.536708354949951
    3. '   ' → logprob: -5.036708354949951
    4. ' @' → logprob: -8.16170883178711
    5. '@' → logprob: -8.78670883178711
    6. 'staticmethod' → logprob: -15.41170883178711
    7. '	def' → logprob: -15.53670883178711
    8. '@property' → logprob: -17.03670883178711
    9. 'class' → logprob: -17.16170883178711
    10. ' ' → logprob: -17.16170883178711

Token 370: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.15023371577262878
    2. ' def' → logprob: -2.150233745574951
    3. 'init' → logprob: -4.650233745574951
    4. ' init' → logprob: -4.900233745574951
    5. 'def' → logprob: -6.025233745574951
    6. '__' → logprob: -6.025233745574951
    7. ' solve' → logprob: -8.025233268737793
    8. ' ' → logprob: -8.275233268737793
    9. '_init' → logprob: -9.275233268737793
    10. 'solve' → logprob: -9.275233268737793

Token 371: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'new' → logprob: -15.000000953674316
    3. ' init' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.875
    5. 'main' → logprob: -18.25
    6. 'int' → logprob: -18.375
    7. '```' → logprob: -18.375
    8. 'staticmethod' → logprob: -19.25
    9. '__' → logprob: -19.375
    10. 'ini' → logprob: -19.5

Token 372: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6941035389900208
    2. '__(' → logprob: -0.6941035389900208
    3. '(' → logprob: -7.694103717803955
    4. ' (' → logprob: -7.819103717803955
    5. 'self' → logprob: -10.319103240966797
    6. '_(' → logprob: -10.694103240966797
    7. '__(
' → logprob: -10.944103240966797
    8. '__' → logprob: -11.319103240966797
    9. ')(' → logprob: -13.069103240966797
    10. '<>(' → logprob: -13.069103240966797

Token 373: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.129266067640856e-05
    2. ' self' → logprob: -11.000020980834961
    3. '(self' → logprob: -13.000020980834961
    4. ')' → logprob: -13.500020980834961
    5. '
' → logprob: -14.500020980834961
    6. '   ' → logprob: -15.875020980834961
    7. 'N' → logprob: -16.50002098083496
    8. '	self' → logprob: -17.25002098083496
    9. ',self' → logprob: -17.37502098083496
    10. '       ' → logprob: -17.62502098083496

Token 374: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.236577108502388
    2. 'self' → logprob: -1.6115771532058716
    3. '(self' → logprob: -5.111577033996582
    4. ' self' → logprob: -5.611577033996582
    5. ' (' → logprob: -7.611577033996582
    6. ' ,' → logprob: -7.986577033996582
    7. ',self' → logprob: -8.236577033996582
    8. ')(' → logprob: -8.861577033996582
    9. '__(' → logprob: -9.611577033996582
    10. ')' → logprob: -10.236577033996582

Token 375: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.23917081207037e-05
    2. ' self' → logprob: -10.125041961669922
    3. '       ' → logprob: -13.500041961669922
    4. '   ' → logprob: -14.250041961669922
    5. '(self' → logprob: -15.500041961669922
    6. '	self' → logprob: -17.875041961669922
    7. '
' → logprob: -18.375041961669922
    8. 'N' → logprob: -18.875041961669922
    9. ' ' → logprob: -19.125041961669922
    10. '           ' → logprob: -19.375041961669922

Token 376: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.7994692325592041
    2. 'self' → logprob: -0.9244692325592041
    3. ' pass' → logprob: -2.299469232559204
    4. '       ' → logprob: -3.674469232559204
    5. ' self' → logprob: -4.174468994140625
    6. '   ' → logprob: -4.674468994140625
    7. 'def' → logprob: -5.799468994140625
    8. '	pass' → logprob: -9.424468994140625
    9. 'import' → logprob: -9.924468994140625
    10. ' ' → logprob: -10.049468994140625

Token 377: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3528319001197815
    2. '
' → logprob: -1.2278318405151367
    3. '    
' → logprob: -6.102831840515137
    4. '<|end|>' → logprob: -6.352831840515137
    5. '<|end|>' → logprob: -8.727831840515137
    6. 'def' → logprob: -9.102831840515137
    7. ' def' → logprob: -9.727831840515137
    8. ' 
' → logprob: -10.852831840515137
    9. '        
' → logprob: -11.477831840515137
    10. '  
' → logprob: -11.727831840515137

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20287255942821503
    2. ' def' → logprob: -2.3278725147247314
    3. 'def' → logprob: -2.4528725147247314
    4. '<|end|>' → logprob: -9.827872276306152
    5. '	def' → logprob: -12.452872276306152
    6. ' ' → logprob: -12.452872276306152
    7. '<|end|>' → logprob: -13.327872276306152
    8. '```' → logprob: -13.577872276306152
    9. '    
' → logprob: -14.202872276306152
    10. '    ' → logprob: -14.327872276306152

Token 379: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.52919222577475e-05
    2. ' def' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.875075340270996
    4. '@' → logprob: -19.62507438659668
    5. '	def' → logprob: -21.25007438659668
    6. 'class' → logprob: -21.37507438659668
    7. 'import' → logprob: -22.62507438659668
    8. ' ' → logprob: -22.87507438659668
    9. 'from' → logprob: -24.00007438659668
    10. '  ' → logprob: -24.75007438659668

Token 380: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.004138599149882793
    2. ' solve' → logprob: -5.504138469696045
    3. 'run' → logprob: -10.004138946533203
    4. 'read' → logprob: -11.379138946533203
    5. ' run' → logprob: -13.504138946533203
    6. 'parse' → logprob: -13.629138946533203
    7. 'process' → logprob: -14.879138946533203
    8. 'load' → logprob: -16.004138946533203
    9. 'compute' → logprob: -16.129138946533203
    10. ' read' → logprob: -16.129138946533203

Token 381: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001504982472397387
    2. '(' → logprob: -6.501504898071289
    3. ' (' → logprob: -13.376504898071289
    4. 'self' → logprob: -14.501504898071289
    5. '(
' → logprob: -14.876504898071289
    6. '   ' → logprob: -16.25150489807129
    7. '(Self' → logprob: -17.25150489807129
    8. '(sel' → logprob: -17.75150489807129
    9. ' self' → logprob: -17.87650489807129
    10. '       ' → logprob: -18.00150489807129

Token 382: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014585316239390522
    2. '):
' → logprob: -9.50014591217041
    3. '):' → logprob: -9.75014591217041
    4. ' ,' → logprob: -12.25014591217041
    5. ',self' → logprob: -13.00014591217041
    6. 'self' → logprob: -13.12514591217041
    7. '       ' → logprob: -13.87514591217041
    8. ',input' → logprob: -14.12514591217041
    9. ',n' → logprob: -14.87514591217041
    10. ',N' → logprob: -15.00014591217041

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012570773833431304
    2. 'import' → logprob: -9.125125885009766
    3. 'from' → logprob: -12.500125885009766
    4. '<|end|>' → logprob: -12.500125885009766
    5. '```' → logprob: -12.625125885009766
    6. '   ' → logprob: -13.500125885009766
    7. '        
' → logprob: -14.250125885009766
    8. 'input' → logprob: -14.375125885009766
    9. '#' → logprob: -14.500125885009766
    10. ',' → logprob: -14.625125885009766

Token 384: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.32974910736083984
    2. 'import' → logprob: -1.3297491073608398
    3. '       ' → logprob: -4.57974910736084
    4. 'n' → logprob: -5.20474910736084
    5. ' N' → logprob: -7.95474910736084
    6. ' import' → logprob: -8.95474910736084
    7. '```' → logprob: -10.57974910736084
    8. ',N' → logprob: -10.70474910736084
    9. 'input' → logprob: -10.82974910736084
    10. 'lines' → logprob: -11.20474910736084

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017267030489165336
    2. ',M' → logprob: -8.75017261505127
    3. ' ,' → logprob: -11.25017261505127
    4. ' =' → logprob: -14.50017261505127
    5. 'M' → logprob: -15.37517261505127
    6. '=' → logprob: -15.50017261505127
    7. ',m' → logprob: -16.500173568725586
    8. '   ' → logprob: -17.125173568725586
    9. 'import' → logprob: -17.375173568725586
    10. 'self' → logprob: -17.625173568725586

Token 386: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.4326118230819702
    2. ' M' → logprob: -1.0576118230819702
    3. '<|end|>' → logprob: -5.55761194229126
    4. ' ' → logprob: -10.932611465454102
    5. ',' → logprob: -11.432611465454102
    6. ' =' → logprob: -12.557611465454102
    7. '<|end|>' → logprob: -12.557611465454102
    8. '  ' → logprob: -12.932611465454102
    9. '    ' → logprob: -13.682611465454102
    10. 'self' → logprob: -13.932611465454102

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',c' → logprob: -15.375001907348633
    4. '<|end|>' → logprob: -16.625001907348633
    5. '=' → logprob: -18.750001907348633
    6. '‌,' → logprob: -19.000001907348633
    7. ',
' → logprob: -19.500001907348633
    8. '_,' → logprob: -19.875001907348633
    9. ',class' → logprob: -20.000001907348633
    10. 'c' → logprob: -20.125001907348633

Token 388: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.31328001618385315
    2. ' cards' → logprob: -1.3132799863815308
    3. '(cards' → logprob: -11.81328010559082
    4. '.cards' → logprob: -11.93828010559082
    5. '_cards' → logprob: -13.06328010559082
    6. 'c' → logprob: -14.43828010559082
    7. '/cards' → logprob: -14.81328010559082
    8. 'Cards' → logprob: -15.06328010559082
    9. 'card' → logprob: -15.68828010559082
    10. 'cars' → logprob: -15.68828010559082

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11326020210981369
    2. '=' → logprob: -2.238260269165039
    3. ',' → logprob: -7.738260269165039
    4. ' ' → logprob: -13.613260269165039
    5. '   ' → logprob: -15.488260269165039
    6. '    ' → logprob: -16.11326026916504
    7. '        ' → logprob: -16.23826026916504
    8. '  ' → logprob: -16.98826026916504
    9. '=
' → logprob: -16.98826026916504
    10. '<|end|>' → logprob: -16.98826026916504

Token 390: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0015023599844425917
    2. ' Input' → logprob: -6.501502513885498
    3. '	Input' → logprob: -19.751502990722656
    4. '<Input' → logprob: -21.751502990722656
    5. '_Input' → logprob: -22.626502990722656
    6. '_input' → logprob: -23.251502990722656
    7. '\Input' → logprob: -23.501502990722656
    8. 'input' → logprob: -23.626502990722656
    9. '(Input' → logprob: -23.876502990722656
    10. ' input' → logprob: -24.001502990722656

Token 391: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -18.125
    3. 'Parse' → logprob: -18.875
    4. '_parser' → logprob: -18.875
    5. '.Parser' → logprob: -19.25
    6. '-parser' → logprob: -21.0
    7. ' Parser' → logprob: -21.5
    8. 'Parsed' → logprob: -22.0
    9. '.parse' → logprob: -22.125
    10. '.parser' → logprob: -22.5

Token 392: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00297686830163002
    2. '.' → logprob: -5.877976894378662
    3. ' .' → logprob: -9.002976417541504
    4. '().' → logprob: -10.127976417541504
    5. '.Parser' → logprob: -12.877976417541504
    6. '```' → logprob: -14.127976417541504
    7. '   ' → logprob: -14.752976417541504
    8. ' ' → logprob: -14.752976417541504
    9. '.Parse' → logprob: -14.877976417541504
    10. '.deserialize' → logprob: -14.877976417541504

Token 393: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: 0.0
    2. '_inputs' → logprob: -17.125
    3. '_output' → logprob: -17.5
    4. 'Input' → logprob: -18.375
    5. '_' → logprob: -18.875
    6. 'input' → logprob: -19.125
    7. '_Input' → logprob: -19.875
    8. '_in' → logprob: -20.25
    9. '_INPUT' → logprob: -20.375
    10. '```' → logprob: -20.625

Token 394: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07889584451913834
    2. '()
' → logprob: -2.5788958072662354
    3. '()

' → logprob: -12.953895568847656
    4. '()
' → logprob: -13.328895568847656
    5. '()`' → logprob: -13.703895568847656
    6. ' ()' → logprob: -14.703895568847656
    7. '()\' → logprob: -14.703895568847656
    8. '()]' → logprob: -16.828895568847656
    9. '()"' → logprob: -16.953895568847656
    10. ' ()
' → logprob: -16.953895568847656

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008056916296482086
    2. 'collection' → logprob: -6.133057117462158
    3. 'pc' → logprob: -6.258057117462158
    4. ' point' → logprob: -6.633057117462158
    5. 'point' → logprob: -6.883057117462158
    6. ' pc' → logprob: -7.133057117462158
    7. ' collection' → logprob: -7.633057117462158
    8. '
' → logprob: -9.758056640625
    9. 'result' → logprob: -10.008056640625
    10. '   ' → logprob: -10.008056640625

Token 396: ' collection' (ID: 5801)
  Prédit: 'collection'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collection' (adapté à ' collection') → logprob: -0.15542744100093842
    2. 'p' → logprob: -2.2804274559020996
    3. 'point' → logprob: -4.1554274559021
    4. '       ' → logprob: -4.1554274559021
    5. 'pc' → logprob: -5.2804274559021
    6. ' collection' → logprob: -5.5304274559021
    7. ' p' → logprob: -7.7804274559021
    8. 'solution' → logprob: -8.655426979064941
    9. 'collector' → logprob: -8.780426979064941
    10. 'solver' → logprob: -9.280426979064941

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234475247561932
    2. '=' → logprob: -5.255234241485596
    3. ' =
' → logprob: -14.880234718322754
    4. ' ' → logprob: -16.005233764648438
    5. '.' → logprob: -16.755233764648438
    6. '_collection' → logprob: -16.755233764648438
    7. '<|end|>' → logprob: -17.505233764648438
    8. 'collection' → logprob: -18.255233764648438
    9. '=
' → logprob: -18.380233764648438
    10. '_' → logprob: -18.380233764648438

Token 398: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.07889000326395035
    2. ' Point' → logprob: -2.578890085220337
    3. '	Point' → logprob: -16.453889846801758
    4. '(Point' → logprob: -16.953889846801758
    5. '_Point' → logprob: -18.203889846801758
    6. '_point' → logprob: -18.953889846801758
    7. '<Point' → logprob: -19.203889846801758
    8. '.Point' → logprob: -19.453889846801758
    9. '   ' → logprob: -21.203889846801758
    10. ' ' → logprob: -21.578889846801758

Token 399: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -2.1008713702030946e-06
    2. 'Collection' → logprob: -14.250001907348633
    3. 'card' → logprob: -14.375001907348633
    4. 'Cards' → logprob: -14.875001907348633
    5. 'Point' → logprob: -15.125001907348633
    6. ' Card' → logprob: -16.375001907348633
    7. '<Card' → logprob: -16.750001907348633
    8. 'Car' → logprob: -17.125001907348633
    9. '_card' → logprob: -17.625001907348633
    10. 'C' → logprob: -18.500001907348633

Token 400: 'Collection' (ID: 4160)
  Prédit: 'Collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: -2.2200749754119897e-06
    2. 'collection' → logprob: -13.125001907348633
    3. 'Card' → logprob: -16.375001907348633
    4. '(collection' → logprob: -16.375001907348633
    5. '(Collection' → logprob: -17.125001907348633
    6. 'Point' → logprob: -17.125001907348633
    7. 'Collector' → logprob: -17.500001907348633
    8. '_collection' → logprob: -17.875001907348633
    9. 'Cole' → logprob: -18.625001907348633
    10. 'Col' → logprob: -18.750001907348633

Token 401: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -4.36574100604048e-06
    2. '(c' → logprob: -12.875004768371582
    3. '(points' → logprob: -14.000004768371582
    4. 'cards' → logprob: -14.375004768371582
    5. '(collection' → logprob: -15.500004768371582
    6. '(card' → logprob: -17.625003814697266
    7. '/cards' → logprob: -18.125003814697266
    8. '.cards' → logprob: -18.125003814697266
    9. ' cards' → logprob: -18.250003814697266
    10. '(' → logprob: -19.000003814697266

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002446509897708893
    2. ',N' → logprob: -8.750245094299316
    3. ' ,' → logprob: -9.750245094299316
    4. '=' → logprob: -10.625245094299316
    5. ',M' → logprob: -13.500245094299316
    6. '=N' → logprob: -13.500245094299316
    7. 'N' → logprob: -14.250245094299316
    8. 'M' → logprob: -16.375244140625
    9. ',
' → logprob: -16.750244140625
    10. ',n' → logprob: -17.125244140625

Token 403: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0010337610729038715
    2. ' N' → logprob: -6.876033782958984
    3. 'self' → logprob: -15.626033782958984
    4. 'M' → logprob: -15.876033782958984
    5. '	N' → logprob: -15.876033782958984
    6. ')' → logprob: -16.126033782958984
    7. '2' → logprob: -16.126033782958984
    8. 'target' → logprob: -16.626033782958984
    9. '(N' → logprob: -16.751033782958984
    10. ' ' → logprob: -17.501033782958984

Token 404: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10034479945898056
    2. ')' → logprob: -2.3503448963165283
    3. '       ' → logprob: -9.10034465789795
    4. ')
' → logprob: -10.60034465789795
    5. ' )
' → logprob: -14.35034465789795
    6. ')

' → logprob: -14.60034465789795
    7. '   ' → logprob: -15.10034465789795
    8. ')return' → logprob: -16.225345611572266
    9. ').' → logprob: -16.725345611572266
    10. ' )' → logprob: -16.975345611572266

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004279973451048136
    2. 'return' → logprob: -6.129280090332031
    3. ' return' → logprob: -6.379280090332031
    4. '
' → logprob: -8.504280090332031
    5. 'result' → logprob: -9.004280090332031
    6. 'print' → logprob: -10.629280090332031
    7. ' result' → logprob: -11.254280090332031
    8. '   ' → logprob: -11.629280090332031
    9. '```' → logprob: -11.879280090332031
    10. '<|end|>' → logprob: -12.004280090332031

Token 406: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1663195788860321
    2. 'result' → logprob: -1.9163196086883545
    3. 'return' → logprob: -5.666319370269775
    4. 'cost' → logprob: -6.166319370269775
    5. '       ' → logprob: -7.666319370269775
    6. ' print' → logprob: -11.166319847106934
    7. ' result' → logprob: -11.666319847106934
    8. 'answer' → logprob: -11.666319847106934
    9. 'min' → logprob: -12.291319847106934
    10. 'res' → logprob: -12.416319847106934

Token 407: '(collection' (ID: 67589)
  Prédit: '(collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(collection' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. 'collection' → logprob: -16.500009536743164
    4. '(
' → logprob: -19.125009536743164
    5. '(Collection' → logprob: -20.250009536743164
    6. ' (' → logprob: -21.125009536743164
    7. '(column' → logprob: -21.375009536743164
    8. ' collection' → logprob: -22.000009536743164
    9. '(connection' → logprob: -22.250009536743164
    10. '(container' → logprob: -22.375009536743164

Token 408: '.minimum' (ID: 126839)
  Prédit: '.minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.minimum' → logprob: -3.7697225252486533e-06
    2. '.maximum' → logprob: -13.000003814697266
    3. '.' → logprob: -13.625003814697266
    4. ' .' → logprob: -15.625003814697266
    5. ').' → logprob: -15.875003814697266
    6. '.min' → logprob: -18.000003814697266
    7. 'minimum' → logprob: -18.125003814697266
    8. '.Minimum' → logprob: -19.000003814697266
    9. ')' → logprob: -19.625003814697266
    10. '.average' → logprob: -21.500003814697266

Token 409: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -13.625000953674316
    3. 'cost' → logprob: -17.875001907348633
    4. '_code' → logprob: -18.500001907348633
    5. '_COST' → logprob: -18.625001907348633
    6. ' _' → logprob: -19.125001907348633
    7. '__' → logprob: -20.000001907348633
    8. 'Cost' → logprob: -20.375001907348633
    9. ')_' → logprob: -20.500001907348633
    10. '_cos' → logprob: -20.750001907348633

Token 410: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.981667537620524e-06
    2. 'for' → logprob: -13.250001907348633
    3. ')' → logprob: -16.625001907348633
    4. '_' → logprob: -18.000001907348633
    5. '_to' → logprob: -18.000001907348633
    6. '_FOR' → logprob: -18.250001907348633
    7. 'For' → logprob: -18.750001907348633
    8. ' for' → logprob: -18.875001907348633
    9. '_f' → logprob: -19.125001907348633
    10. '...' → logprob: -19.625001907348633

Token 411: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.0003003081073984504
    2. 'pr' → logprob: -8.125300407409668
    3. '	pr' → logprob: -13.875300407409668
    4. ' prizes' → logprob: -14.375300407409668
    5. 's' → logprob: -14.875300407409668
    6. 'Pr' → logprob: -14.875300407409668
    7. '_' → logprob: -15.250300407409668
    8. '```' → logprob: -15.625300407409668
    9. 'prises' → logprob: -16.00029945373535
    10. '
' → logprob: -16.25029945373535

Token 412: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -0.00036382899270392954
    2. 'ize' → logprob: -8.250364303588867
    3. 'IZES' → logprob: -10.000364303588867
    4. 'zes' → logprob: -10.375364303588867
    5. 'iz' → logprob: -12.500364303588867
    6. 'ises' → logprob: -12.750364303588867
    7. 'azes' → logprob: -12.875364303588867
    8. '[' → logprob: -13.125364303588867
    9. '```' → logprob: -13.625364303588867
    10. 'uzes' → logprob: -13.937864303588867

Token 413: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007251793285831809
    2. '()' → logprob: -7.250725269317627
    3. ')' → logprob: -11.750724792480469
    4. '())
' → logprob: -11.875724792480469
    5. ' ())' → logprob: -15.625724792480469
    6. '()
' → logprob: -16.50072479248047
    7. '()))' → logprob: -17.75072479248047
    8. '())

' → logprob: -17.75072479248047
    9. '())
' → logprob: -17.87572479248047
    10. '();)' → logprob: -18.25072479248047

Token 414: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003291480534244329
    2. 'JO' → logprob: -8.87532901763916
    3. ' if' → logprob: -9.12532901763916
    4. '```' → logprob: -10.00032901763916
    5. '<|end|>' → logprob: -11.50032901763916
    6. 'def' → logprob: -11.50032901763916
    7. 'solver' → logprob: -12.12532901763916
    8. 'import' → logprob: -13.00032901763916
    9. '
' → logprob: -13.12532901763916
    10. '#' → logprob: -13.37532901763916

Token 415: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10021734237670898
    2. '__' → logprob: -2.350217342376709
    3. 'name' → logprob: -11.600217819213867
    4. '_name' → logprob: -14.225217819213867
    5. ' ' → logprob: -15.225217819213867
    6. 'Name' → logprob: -15.350217819213867
    7. '/__' → logprob: -15.725217819213867
    8. ' name' → logprob: -15.850217819213867
    9. ' ' → logprob: -16.600217819213867
    10. '_' → logprob: -17.350217819213867

Token 416: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.40508654713630676
    2. ' __' → logprob: -1.1550865173339844
    3. ' ==' → logprob: -4.030086517333984
    4. '.__' → logprob: -9.155086517333984
    5. '==' → logprob: -9.655086517333984
    6. ' if' → logprob: -10.280086517333984
    7. 'name' → logprob: -10.530086517333984
    8. 'if' → logprob: -11.030086517333984
    9. '__.__' → logprob: -11.905086517333984
    10. '__.' → logprob: -12.655086517333984

Token 417: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010300694266334176
    2. ' ==' → logprob: -7.501029968261719
    3. '==' → logprob: -7.751029968261719
    4. '__.__' → logprob: -10.501029968261719
    5. '=="' → logprob: -11.126029968261719
    6. '__.' → logprob: -13.626029968261719
    7. 'name' → logprob: -14.001029968261719
    8. '=='' → logprob: -14.751029968261719
    9. '___' → logprob: -15.001029968261719
    10. '"' → logprob: -15.001029968261719

Token 418: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006790325045585632
    2. '==' → logprob: -5.6317901611328125
    3. ' ==' → logprob: -5.8817901611328125
    4. '=="' → logprob: -7.8817901611328125
    5. '__.__' → logprob: -11.506790161132812
    6. '=='' → logprob: -12.881790161132812
    7. '____' → logprob: -13.881790161132812
    8. '___' → logprob: -14.006790161132812
    9. '_' → logprob: -14.756790161132812
    10. '=' → logprob: -14.756790161132812

Token 419: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01113625057041645
    2. ''' → logprob: -4.511136054992676
    3. ' "__' → logprob: -9.386136054992676
    4. '__' → logprob: -12.636136054992676
    5. ' '__' → logprob: -14.136136054992676
    6. '"user' → logprob: -15.886136054992676
    7. '"name' → logprob: -16.136137008666992
    8. '"class' → logprob: -16.386137008666992
    9. '("__' → logprob: -16.386137008666992
    10. ''"' → logprob: -17.261137008666992

Token 420: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002067588793579489
    2. '__' → logprob: -8.50020694732666
    3. 'name' → logprob: -13.00020694732666
    4. ' main' → logprob: -14.75020694732666
    5. '"' → logprob: -14.87520694732666
    6. '_main' → logprob: -15.50020694732666
    7. 'Main' → logprob: -18.000205993652344
    8. '-main' → logprob: -18.875205993652344
    9. 'built' → logprob: -18.875205993652344
    10. 'MAIN' → logprob: -18.875205993652344

Token 421: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011304574087262154
    2. '__' → logprob: -4.5113043785095215
    3. '__':
' → logprob: -8.38630485534668
    4. '__:' → logprob: -10.51130485534668
    5. '__.' → logprob: -14.51130485534668
    6. '__
' → logprob: -15.26130485534668
    7. ':' → logprob: -15.38630485534668
    8. '__["' → logprob: -15.63630485534668
    9. '__.__' → logprob: -16.01130485534668
    10. ':
' → logprob: -16.63630485534668

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024447389878332615
    2. ' JO' → logprob: -6.752444744110107
    3. 'JO' → logprob: -6.752444744110107
    4. '	J' → logprob: -10.12744426727295
    5. '   ' → logprob: -10.87744426727295
    6. 'jo' → logprob: -11.50244426727295
    7. ' ' → logprob: -11.62744426727295
    8. 'J' → logprob: -12.37744426727295
    9. ' J' → logprob: -12.62744426727295
    10. '  ' → logprob: -12.62744426727295

Token 423: ' JO' (ID: 72685)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.6080641150474548
    2. 'JO' (adapté à ' JO') → logprob: -0.8580641150474548
    3. ' JO' → logprob: -3.9830641746520996
    4. ' solver' → logprob: -4.9830641746521
    5. 'import' → logprob: -5.7330641746521
    6. 'jo' → logprob: -6.9830641746521
    7. '   ' → logprob: -7.6080641746521
    8. 'solution' → logprob: -7.8580641746521
    9. 'sol' → logprob: -7.8580641746521
    10. 's' → logprob: -7.9830641746521

Token 424: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.012658794410526752
    2. 'Solver' → logprob: -4.387658596038818
    3. 'solver' → logprob: -9.262659072875977
    4. 'I' → logprob: -11.012659072875977
    5. '_solver' → logprob: -11.887659072875977
    6. 'S' → logprob: -12.012659072875977
    7. 'is' → logprob: -12.387659072875977
    8. 'IO' → logprob: -12.512659072875977
    9. 'Is' → logprob: -12.887659072875977
    10. 'SOL' → logprob: -13.137659072875977

Token 425: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.00132976402528584
    2. 'Solver' → logprob: -6.6263298988342285
    3. 'olve' → logprob: -12.87632942199707
    4. 'solver' → logprob: -13.87632942199707
    5. 'erver' → logprob: -16.62632942199707
    6. '_solver' → logprob: -17.37632942199707
    7. 'Resolver' → logprob: -17.37632942199707
    8. 'over' → logprob: -17.37632942199707
    9. '   ' → logprob: -18.25132942199707
    10. '\' → logprob: -18.75132942199707

Token 426: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.007649341132491827
    2. '()' → logprob: -4.8826494216918945
    3. '().__' → logprob: -10.257649421691895
    4. '().'' → logprob: -12.382649421691895
    5. '(' → logprob: -13.632649421691895
    6. '.' → logprob: -14.132649421691895
    7. '();' → logprob: -14.257649421691895
    8. ' ().' → logprob: -15.507649421691895
    9. '()(' → logprob: -15.757649421691895
    10. '.solve' → logprob: -15.757649421691895

Token 427: 'solve' (ID: 117273)
  Prédit: 'solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: 0.0
    2. 'sol' → logprob: -18.5
    3. ' solve' → logprob: -21.375
    4. 'resolve' → logprob: -21.875
    5. '.solve' → logprob: -22.875
    6. 'olve' → logprob: -23.25
    7. 's' → logprob: -23.625
    8. 'save' → logprob: -24.0
    9. 'serve' → logprob: -24.75
    10. 'solver' → logprob: -25.25

Token 428: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1598067283630371
    2. '
' → logprob: -2.159806728363037
    3. '<|end|>' → logprob: -4.034806728363037
    4. '(' → logprob: -4.909806728363037
    5. '()
' → logprob: -5.659806728363037
    6. '\n' → logprob: -6.034806728363037
    7. '#' → logprob: -8.034807205200195
    8. ')' → logprob: -8.034807205200195
    9. '```' → logprob: -8.409807205200195
    10. '(
' → logprob: -9.159807205200195


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 426
Tokens correctement prédits (1ère position, stricte): 206
Tokens correctement prédits (1ère position, avec adaptation): 219
Tokens correctement prédits (top 10): 357
Précision stricte (1ère position): 48.36%
Précision adaptée (1ère position): 51.41%
Précision (top 10): 83.80%
================================================================================
