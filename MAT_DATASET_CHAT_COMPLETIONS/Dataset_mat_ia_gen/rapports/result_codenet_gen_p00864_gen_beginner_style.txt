================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input().strip()
    if line == '0 0':
        break
    parts = line.split()
    n = int(parts[0])
    w = int(parts[1])
    values = []
    for _ in range(n):
        v = int(input())
        values.append(v)
    max_value = max(values)
    intervals_count = max_value // w + 1
    counts = [0]*intervals_count
    for v in values:
        idx = v // w
        counts[idx] += 1
    max_count = max(counts)
    ink = 0.01
    for i in range(intervals_count):
        darkness = 1 - i/(intervals_count -1)
        height = counts[i]/max_count
        area = height * w
        ink += area * darkness
    print(ink)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27719104290008545
    2. '\' → logprob: -2.777191162109375
    3. '```' → logprob: -3.027191162109375
    4. '    ' → logprob: -3.277191162109375
    5. '\n' → logprob: -3.652191162109375
    6. '    
' → logprob: -3.777191162109375
    7. ' ' → logprob: -4.027191162109375
    8. ' 
' → logprob: -5.652191162109375
    9. '  
' → logprob: -6.027191162109375
    10. '`' → logprob: -6.152191162109375

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24714192748069763
    2. '    ' → logprob: -1.87214195728302
    3. '```' → logprob: -3.3721418380737305
    4. ' ' → logprob: -3.9971418380737305
    5. '    
' → logprob: -6.1221418380737305
    6. ' pass' → logprob: -6.4971418380737305
    7. '  ' → logprob: -6.6221418380737305
    8. '       ' → logprob: -6.8721418380737305
    9. 'pass' → logprob: -6.8721418380737305
    10. '\' → logprob: -7.8721418380737305

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7685700058937073
    2. ' =' → logprob: -0.8935700058937073
    3. 's' → logprob: -2.8935699462890625
    4. '.' → logprob: -3.2685699462890625
    5. '[' → logprob: -4.8935699462890625
    6. '_' → logprob: -5.1435699462890625
    7. '[:]' → logprob: -5.3935699462890625
    8. ')' → logprob: -5.5185699462890625
    9. '.startswith' → logprob: -5.8935699462890625
    10. ''s' → logprob: -6.3935699462890625

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08903379738330841
    2. 'input' → logprob: -2.464033842086792
    3. ' ' → logprob: -9.714034080505371
    4. ' f' → logprob: -10.964034080505371
    5. '=input' → logprob: -12.589034080505371
    6. ' file' → logprob: -12.839034080505371
    7. ' readline' → logprob: -12.839034080505371
    8. '   ' → logprob: -13.589034080505371
    9. ' s' → logprob: -14.089034080505371
    10. 'file' → logprob: -14.339034080505371

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01445717178285122
    2. '()' → logprob: -4.5144572257995605
    3. '('' → logprob: -5.8894572257995605
    4. '("("' → logprob: -7.6394572257995605
    5. '("")' → logprob: -10.014456748962402
    6. '```' → logprob: -10.264456748962402
    7. ''' → logprob: -11.264456748962402
    8. '("' → logprob: -11.764456748962402
    9. ')' → logprob: -11.889456748962402
    10. '(`' → logprob: -12.139456748962402

Token 8: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00041065402911044657
    2. 'split' → logprob: -8.500411033630371
    3. 'rstrip' → logprob: -8.500411033630371
    4. 'startswith' → logprob: -13.250411033630371
    5. 'lower' → logprob: -13.875411033630371
    6. ' strip' → logprob: -14.625411033630371
    7. 'replace' → logprob: -14.750411033630371
    8. 'str' → logprob: -17.000410079956055
    9. 'isdigit' → logprob: -17.250410079956055
    10. 'read' → logprob: -17.625410079956055

Token 9: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3870071470737457
    2. '(' → logprob: -1.1370071172714233
    3. '`()' → logprob: -10.262006759643555
    4. '()`' → logprob: -11.512006759643555
    5. '```' → logprob: -11.512006759643555
    6. '()(' → logprob: -11.637006759643555
    7. '(
' → logprob: -11.762006759643555
    8. '()>' → logprob: -11.887006759643555
    9. '(

' → logprob: -12.262006759643555
    10. '(()' → logprob: -12.387006759643555

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9835080504417419
    2. ' if' → logprob: -0.9835080504417419
    3. 'if' → logprob: -1.7335081100463867
    4. '<|end|>' → logprob: -3.2335081100463867
    5. ' ' → logprob: -4.358508110046387
    6. ':' → logprob: -4.358508110046387
    7. '    ' → logprob: -5.983508110046387
    8. '<|end|>' → logprob: -6.233508110046387
    9. '       ' → logprob: -7.358508110046387
    10. ':
' → logprob: -7.358508110046387

Token 11: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02744501642882824
    2. ' if' → logprob: -3.777445077896118
    3. '   ' → logprob: -6.402444839477539
    4. '```' → logprob: -6.652444839477539
    5. 'i' → logprob: -7.277444839477539
    6. ':' → logprob: -9.027444839477539
    7. ' ' → logprob: -9.152444839477539
    8. '#' → logprob: -9.652444839477539
    9. '<|end|>' → logprob: -9.777444839477539
    10. '=' → logprob: -10.027444839477539

Token 12: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.013667053543031216
    2. 'not' → logprob: -4.638667106628418
    3. ' line' → logprob: -5.638667106628418
    4. 'line' → logprob: -8.013667106628418
    5. ' ' → logprob: -11.513667106628418
    6. ' len' → logprob: -12.638667106628418
    7. 'len' → logprob: -15.388667106628418
    8. '   ' → logprob: -15.513667106628418
    9. ' no' → logprob: -15.888667106628418
    10. '  ' → logprob: -15.888667106628418

Token 13: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01660538651049137
    2. '==' → logprob: -4.266605377197266
    3. '.startswith' → logprob: -6.891605377197266
    4. ' ' → logprob: -6.891605377197266
    5. ':' → logprob: -9.266605377197266
    6. ' !=' → logprob: -9.516605377197266
    7. '<|end|>' → logprob: -9.766605377197266
    8. '<|end|>' → logprob: -10.266605377197266
    9. '.' → logprob: -10.891605377197266
    10. '  ' → logprob: -11.016605377197266

Token 14: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.7784483432769775
    2. '""' → logprob: -0.7784483432769775
    3. ''' → logprob: -2.7784483432769775
    4. '"' → logprob: -4.153448104858398
    5. '"":' → logprob: -6.028448104858398
    6. ''ex' → logprob: -7.528448104858398
    7. ' ""' → logprob: -7.903448104858398
    8. ' ''' → logprob: -8.028448104858398
    9. ' '' → logprob: -10.653448104858398
    10. '""""' → logprob: -10.653448104858398

Token 15: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7003353834152222
    2. '':' → logprob: -1.3253353834152222
    3. 'exit' → logprob: -2.7003355026245117
    4. '''' → logprob: -3.4503355026245117
    5. 'quit' → logprob: -3.4503355026245117
    6. '"' → logprob: -3.4503355026245117
    7. ''''' → logprob: -3.9503355026245117
    8. ''ex' → logprob: -3.9503355026245117
    9. '```' → logprob: -4.325335502624512
    10. 'break' → logprob: -5.325335502624512

Token 16: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18641825020313263
    2. '':' → logprob: -1.8114182949066162
    3. ''' → logprob: -5.811418056488037
    4. '\n' → logprob: -7.186418056488037
    5. ' break' → logprob: -7.186418056488037
    6. ':
' → logprob: -7.686418056488037
    7. '":' → logprob: -8.186418533325195
    8. ' or' → logprob: -8.686418533325195
    9. '   ' → logprob: -8.936418533325195
    10. ':return' → logprob: -8.936418533325195

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.056086160242557526
    2. ' ' → logprob: -3.1810860633850098
    3. '':' → logprob: -4.55608606338501
    4. ''' → logprob: -6.68108606338501
    5. '\n' → logprob: -7.93108606338501
    6. ':' → logprob: -8.181086540222168
    7. ' break' → logprob: -9.056086540222168
    8. ''):' → logprob: -9.181086540222168
    9. '":' → logprob: -9.806086540222168
    10. '```' → logprob: -10.056086540222168

Token 18: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.09268561005592346
    2. ':' → logprob: -2.4676856994628906
    3. ''' → logprob: -6.467685699462891
    4. ''):' → logprob: -7.342685699462891
    5. '\n' → logprob: -7.592685699462891
    6. '<|end|>' → logprob: -8.59268569946289
    7. '')' → logprob: -8.71768569946289
    8. '):' → logprob: -8.71768569946289
    9. '   ' → logprob: -9.46768569946289
    10. '<|end|>' → logprob: -9.59268569946289

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005678603425621986
    2. ':' → logprob: -5.255678653717041
    3. '   ' → logprob: -8.755678176879883
    4. '\n' → logprob: -8.755678176879883
    5. ' break' → logprob: -10.380678176879883
    6. ':
' → logprob: -10.630678176879883
    7. '\' → logprob: -10.880678176879883
    8. '    ' → logprob: -11.380678176879883
    9. '      ' → logprob: -11.880678176879883
    10. '     ' → logprob: -12.255678176879883

Token 20: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2752653658390045
    2. '       ' → logprob: -1.5252653360366821
    3. 'break' (adapté à ' break') → logprob: -3.9002654552459717
    4. '   ' → logprob: -6.025265216827393
    5. '	break' → logprob: -7.900265216827393
    6. '\n' → logprob: -11.15026569366455
    7. '           ' → logprob: -11.27526569366455
    8. '_break' → logprob: -12.52526569366455
    9. '```' → logprob: -12.65026569366455
    10. '-break' → logprob: -13.27526569366455

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7734034657478333
    2. '    
' → logprob: -0.7734034657478333
    3. '\n' → logprob: -3.5234034061431885
    4. '
' → logprob: -3.7734034061431885
    5. '  
' → logprob: -4.523403644561768
    6. '        
' → logprob: -5.773403644561768
    7. ' 
' → logprob: -6.023403644561768
    8. '   
' → logprob: -6.023403644561768
    9. '\' → logprob: -6.898403644561768
    10. '```' → logprob: -7.523403644561768

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05460160970687866
    2. '    
' → logprob: -3.1796016693115234
    3. 'n' → logprob: -5.804601669311523
    4. '   
' → logprob: -5.929601669311523
    5. '\n' → logprob: -6.429601669311523
    6. '  
' → logprob: -6.554601669311523
    7. '  ' → logprob: -7.554601669311523
    8. '```' → logprob: -7.679601669311523
    9. '
' → logprob: -8.054601669311523
    10. ' 
' → logprob: -8.304601669311523

Token 23: ' parts' (ID: 7881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8688697218894958
    2. 'a' → logprob: -1.1188697814941406
    3. 'n' → logprob: -2.3688697814941406
    4. 'x' → logprob: -2.8688697814941406
    5. ' n' → logprob: -4.243869781494141
    6. ' a' → logprob: -4.243869781494141
    7. 'w' → logprob: -4.368869781494141
    8. ' x' → logprob: -4.868869781494141
    9. '    
' → logprob: -5.243869781494141
    10. 'm' → logprob: -5.618869781494141

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07046228647232056
    2. '=' → logprob: -2.695462226867676
    3. '[' → logprob: -7.695462226867676
    4. '.' → logprob: -10.320462226867676
    5. '   ' → logprob: -11.820462226867676
    6. ')' → logprob: -11.820462226867676
    7. ' ' → logprob: -12.070462226867676
    8. '[:]' → logprob: -12.570462226867676
    9. '[]' → logprob: -12.695462226867676
    10. '.split' → logprob: -13.320462226867676

Token 25: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7127780914306641
    2. 'line' → logprob: -0.8377780914306641
    3. ' list' → logprob: -3.087778091430664
    4. 'list' → logprob: -3.462778091430664
    5. '[' → logprob: -10.337778091430664
    6. '[line' → logprob: -10.337778091430664
    7. ' [' → logprob: -11.462778091430664
    8. '   ' → logprob: -11.587778091430664
    9. 'map' → logprob: -12.462778091430664
    10. ' map' → logprob: -12.462778091430664

Token 26: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.026384243741631508
    2. '.' → logprob: -3.6513843536376953
    3. ' .' → logprob: -9.651384353637695
    4. '.strip' → logprob: -11.276384353637695
    5. '.rstrip' → logprob: -13.151384353637695
    6. 'split' → logprob: -13.651384353637695
    7. '.s' → logprob: -13.901384353637695
    8. '.startswith' → logprob: -14.026384353637695
    9. '.replace' → logprob: -14.901384353637695
    10. '   ' → logprob: -14.901384353637695

Token 27: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.011823299340903759
    2. '(' → logprob: -5.2618231773376465
    3. '()' → logprob: -5.5118231773376465
    4. '("("' → logprob: -6.0118231773376465
    5. ''' → logprob: -9.886823654174805
    6. '('.')' → logprob: -11.636823654174805
    7. '```' → logprob: -12.386823654174805
    8. '("' → logprob: -12.511823654174805
    9. '('(' → logprob: -13.011823654174805
    10. '(('' → logprob: -13.511823654174805

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.756637692451477
    2. 'n' → logprob: -1.631637692451477
    3. '[' → logprob: -1.881637692451477
    4. '```' → logprob: -3.7566375732421875
    5. ' ' → logprob: -4.2566375732421875
    6. '`' → logprob: -4.2566375732421875
    7. '    
' → logprob: -4.2566375732421875
    8. 'i' → logprob: -4.2566375732421875
    9. '    ' → logprob: -4.5066375732421875
    10. 'x' → logprob: -4.7566375732421875

Token 29: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7547841668128967
    2. 'h' → logprob: -1.879784107208252
    3. 'n' (adapté à ' n') → logprob: -2.004784107208252
    4. 'x' → logprob: -2.379784107208252
    5. 'w' → logprob: -2.629784107208252
    6. 'H' → logprob: -3.629784107208252
    7. 'N' → logprob: -4.379784107208252
    8. 'A' → logprob: -4.504784107208252
    9. 'r' → logprob: -4.754784107208252
    10. 'W' → logprob: -5.004784107208252

Token 30: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7912960648536682
    2. ' =' → logprob: -0.7912960648536682
    3. ' ' → logprob: -3.5412960052490234
    4. '_' → logprob: -3.6662960052490234
    5. ' ,' → logprob: -4.416296005249023
    6. '[' → logprob: -5.041296005249023
    7. '=' → logprob: -5.041296005249023
    8. '_parts' → logprob: -5.416296005249023
    9. ' _' → logprob: -6.166296005249023
    10. ')' → logprob: -6.666296005249023

Token 31: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519325911998749
    2. ' int' → logprob: -1.5019326210021973
    3. ' ' → logprob: -13.876932144165039
    4. '   ' → logprob: -14.001932144165039
    5. '  ' → logprob: -14.126932144165039
    6. 'len' → logprob: -15.251932144165039
    7. '[int' → logprob: -15.626932144165039
    8. ' len' → logprob: -16.00193214416504
    9. '=int' → logprob: -16.12693214416504
    10. '	int' → logprob: -16.25193214416504

Token 32: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.018151583150029182
    2. '(' → logprob: -4.018151760101318
    3. 'parts' → logprob: -14.51815128326416
    4. ' (' → logprob: -15.01815128326416
    5. '(part' → logprob: -15.01815128326416
    6. '('' → logprob: -16.018152236938477
    7. ' parts' → logprob: -16.518152236938477
    8. '(
' → logprob: -16.518152236938477
    9. '(`' → logprob: -16.643152236938477
    10. '(

' → logprob: -16.643152236938477

Token 33: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.165027217415627e-05
    2. ')' → logprob: -11.500021934509277
    3. '0' → logprob: -12.125021934509277
    4. '1' → logprob: -13.125021934509277
    5. ' [' → logprob: -13.125021934509277
    6. '   ' → logprob: -14.125021934509277
    7. ')[' → logprob: -14.625021934509277
    8. ''[' → logprob: -15.500021934509277
    9. '```' → logprob: -16.12502098083496
    10. '[-' → logprob: -16.25002098083496

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.598092684522271e-05
    2. '1' → logprob: -10.250056266784668
    3. ' ' → logprob: -10.875056266784668
    4. '-' → logprob: -14.500056266784668
    5. ')' → logprob: -15.125056266784668
    6. '   ' → logprob: -15.375056266784668
    7. ']' → logprob: -15.500056266784668
    8. '[' → logprob: -16.25005531311035
    9. '  ' → logprob: -16.25005531311035
    10. '])' → logprob: -16.50005531311035

Token 35: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011903966515092179
    2. ' )' → logprob: -9.25011920928955
    3. '])' → logprob: -11.87511920928955
    4. '))' → logprob: -12.37511920928955
    5. ')
' → logprob: -12.75011920928955
    6. ' ' → logprob: -13.37511920928955
    7. ']' → logprob: -13.87511920928955
    8. '),' → logprob: -13.87511920928955
    9. '`)' → logprob: -14.37511920928955
    10. '[' → logprob: -14.62511920928955

Token 36: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4954046308994293
    2. '<|end|>' → logprob: -1.370404601097107
    3. 'm' → logprob: -3.1204047203063965
    4. '   ' → logprob: -3.3704047203063965
    5. ' m' → logprob: -3.6204047203063965
    6. '    ' → logprob: -4.1204047203063965
    7. '  ' → logprob: -5.7454047203063965
    8. ')' → logprob: -6.6204047203063965
    9. '<|end|>' → logprob: -6.7454047203063965
    10. 'n' → logprob: -6.8704047203063965

Token 37: ' w' (ID: 286)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.29793086647987366
    2. 'k' → logprob: -1.5479308366775513
    3. ' m' → logprob: -4.047930717468262
    4. 'd' → logprob: -4.922930717468262
    5. ' k' → logprob: -5.172930717468262
    6. 'h' → logprob: -6.047930717468262
    7. 'a' → logprob: -6.297930717468262
    8. 'w' (adapté à ' w') → logprob: -6.297930717468262
    9. 'x' → logprob: -6.547930717468262
    10. 't' → logprob: -6.672930717468262

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07011060416698456
    2. '=' → logprob: -2.695110559463501
    3. ' ' → logprob: -9.820110321044922
    4. ',' → logprob: -9.945110321044922
    5. 'idth' → logprob: -10.945110321044922
    6. ')' → logprob: -11.570110321044922
    7. '=int' → logprob: -11.695110321044922
    8. '_parts' → logprob: -11.945110321044922
    9. 'hile' → logprob: -12.570110321044922
    10. '  ' → logprob: -12.820110321044922

Token 39: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20143164694309235
    2. ' int' → logprob: -1.7014316320419312
    3. 'float' → logprob: -11.826431274414062
    4. ' ' → logprob: -12.326431274414062
    5. ' float' → logprob: -13.201431274414062
    6. '   ' → logprob: -13.951431274414062
    7. '[int' → logprob: -14.201431274414062
    8. '=int' → logprob: -14.326431274414062
    9. '(int' → logprob: -14.576431274414062
    10. '  ' → logprob: -14.701431274414062

Token 40: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.001044243574142456
    2. '(' → logprob: -6.876044273376465
    3. '(part' → logprob: -11.876044273376465
    4. ' (' → logprob: -13.126044273376465
    5. 'parts' → logprob: -13.876044273376465
    6. ' parts' → logprob: -14.126044273376465
    7. ')' → logprob: -15.251044273376465
    8. '(w' → logprob: -16.12604331970215
    9. '(par' → logprob: -16.75104331970215
    10. ''' → logprob: -17.12604331970215

Token 41: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006017791107296944
    2. '1' → logprob: -5.131017684936523
    3. ' [' → logprob: -10.631017684936523
    4. ')' → logprob: -11.506017684936523
    5. ' ' → logprob: -11.506017684936523
    6. ']' → logprob: -11.631017684936523
    7. '```' → logprob: -11.631017684936523
    8. '][' → logprob: -11.881017684936523
    9. '2' → logprob: -12.006017684936523
    10. ')[' → logprob: -13.131017684936523

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.811348480870947e-05
    2. '0' → logprob: -10.50004768371582
    3. ' ' → logprob: -11.50004768371582
    4. '   ' → logprob: -12.25004768371582
    5. '2' → logprob: -13.68754768371582
    6. '])' → logprob: -13.93754768371582
    7. '```' → logprob: -14.00004768371582
    8. '  ' → logprob: -14.37504768371582
    9. '-' → logprob: -14.81254768371582
    10. '[' → logprob: -15.31254768371582

Token 43: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ')
' → logprob: -13.250003814697266
    3. '))' → logprob: -14.750003814697266
    4. ' )' → logprob: -15.000003814697266
    5. '])' → logprob: -15.250003814697266
    6. '）' → logprob: -15.250003814697266
    7. '`)' → logprob: -15.250003814697266
    8. '})' → logprob: -16.125003814697266
    9. '   ' → logprob: -16.125003814697266
    10. '}' → logprob: -16.375003814697266

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6694414019584656
    2. '<|end|>' → logprob: -1.4194414615631104
    3. ' ' → logprob: -2.5444414615631104
    4. 'n' → logprob: -2.9194414615631104
    5. ')' → logprob: -4.044441223144531
    6. ',' → logprob: -4.169441223144531
    7. '
' → logprob: -4.419441223144531
    8. '#' → logprob: -4.419441223144531
    9. '\n' → logprob: -4.794441223144531
    10. '[' → logprob: -5.044441223144531

Token 45: ' values' (ID: 4824)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3051319122314453
    2. ' ' → logprob: -1.3051319122314453
    3. '#' → logprob: -2.0551319122314453
    4. '<|end|>' → logprob: -2.5551319122314453
    5. '[' → logprob: -3.3051319122314453
    6. ',' → logprob: -3.6801319122314453
    7. 'w' → logprob: -3.6801319122314453
    8. ')' → logprob: -3.9301319122314453
    9. ' 
' → logprob: -4.305131912231445
    10. '\' → logprob: -4.430131912231445

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.426462322473526
    2. '[' → logprob: -1.1764622926712036
    3. '=' → logprob: -4.301462173461914
    4. ',' → logprob: -4.676462173461914
    5. '_' → logprob: -4.801462173461914
    6. '.append' → logprob: -6.301462173461914
    7. '   ' → logprob: -6.676462173461914
    8. '[]' → logprob: -7.176462173461914
    9. ')' → logprob: -7.301462173461914
    10. '<|end|>' → logprob: -7.426462173461914

Token 47: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3603825569152832
    2. ' []' → logprob: -1.3603825569152832
    3. '[' → logprob: -3.985382556915283
    4. ' list' → logprob: -4.610382556915283
    5. 'list' → logprob: -4.610382556915283
    6. ' [' → logprob: -4.985382556915283
    7. '[list' → logprob: -8.110382080078125
    8. '[int' → logprob: -8.610382080078125
    9. '[]
' → logprob: -9.985382080078125
    10. ' []
' → logprob: -10.485382080078125

Token 48: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07806992530822754
    2. '[' → logprob: -3.4530699253082275
    3. ' for' → logprob: -3.7030699253082275
    4. 'values' → logprob: -5.328069686889648
    5. '   ' → logprob: -5.453069686889648
    6. 'while' → logprob: -5.828069686889648
    7. '<|end|>' → logprob: -6.453069686889648
    8. ' ' → logprob: -6.828069686889648
    9. 'n' → logprob: -7.203069686889648
    10. '    
' → logprob: -7.953069686889648

Token 50: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0840133428573608
    2. ' i' → logprob: -1.0840133428573608
    3. ' _' → logprob: -1.2090133428573608
    4. ' ' → logprob: -3.8340134620666504
    5. 'i' → logprob: -5.83401346206665
    6. ' range' → logprob: -7.95901346206665
    7. 'range' → logprob: -10.584012985229492
    8. '  ' → logprob: -10.834012985229492
    9. ' j' → logprob: -11.334012985229492
    10. ' in' → logprob: -11.334012985229492

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04502364620566368
    2. 'in' → logprob: -3.1700236797332764
    3. ' i' → logprob: -7.295023441314697
    4. 'i' → logprob: -7.420023441314697
    5. ' ' → logprob: -7.670023441314697
    6. '  ' → logprob: -9.170023918151855
    7. 'range' → logprob: -9.170023918151855
    8. ' _' → logprob: -11.170023918151855
    9. 's' → logprob: -11.545023918151855
    10. '<|end|>' → logprob: -11.670023918151855

Token 52: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001189510803669691
    2. ' range' → logprob: -6.751189708709717
    3. 'values' → logprob: -12.376189231872559
    4. '(range' → logprob: -12.876189231872559
    5. 'ranges' → logprob: -13.001189231872559
    6. 'parts' → logprob: -13.126189231872559
    7. '	range' → logprob: -13.251189231872559
    8. 'n' → logprob: -13.751189231872559
    9. '   ' → logprob: -13.751189231872559
    10. 'x' → logprob: -14.751189231872559

Token 53: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0048517188988626
    2. '(' → logprob: -5.379851818084717
    3. ' (' → logprob: -8.629851341247559
    4. ' n' → logprob: -10.004851341247559
    5. 'n' → logprob: -11.879851341247559
    6. '(s' → logprob: -15.754851341247559
    7. '	n' → logprob: -16.129852294921875
    8. '(int' → logprob: -16.379852294921875
    9. '(range' → logprob: -16.504852294921875
    10. ' ' → logprob: -16.629852294921875

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026994242798537016
    2. '):
' → logprob: -6.002699375152588
    3. ')' → logprob: -9.377699851989746
    4. ' ):' → logprob: -9.752699851989746
    5. ':' → logprob: -10.127699851989746
    6. '   ' → logprob: -10.502699851989746
    7. '):
' → logprob: -11.752699851989746
    8. ',' → logprob: -13.627699851989746
    9. '-' → logprob: -14.502699851989746
    10. ' ' → logprob: -14.627699851989746

Token 55: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1752607375383377
    2. ' values' → logprob: -2.0502607822418213
    3. '       ' → logprob: -4.050260543823242
    4. 'values' → logprob: -4.925260543823242
    5. '	values' → logprob: -5.300260543823242
    6. '    ' → logprob: -7.300260543823242
    7. '<|end|>' → logprob: -7.925260543823242
    8. ' ' → logprob: -8.300260543823242
    9. '_values' → logprob: -8.550260543823242
    10. '   ' → logprob: -8.800260543823242

Token 56: ' v' (ID: 323)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.7625570893287659
    2. ' val' → logprob: -1.762557029724121
    3. 'values' → logprob: -2.012557029724121
    4. ' line' → logprob: -2.762557029724121
    5. ' v' → logprob: -3.012557029724121
    6. 'v' (adapté à ' v') → logprob: -3.137557029724121
    7. ' parts' → logprob: -3.512557029724121
    8. 'val' → logprob: -4.512557029724121
    9. 'value' → logprob: -4.887557029724121
    10. ' value' → logprob: -4.887557029724121

Token 57: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08320146054029465
    2. ',w' → logprob: -2.7082014083862305
    3. 'al' → logprob: -5.3332014083862305
    4. ' =' → logprob: -5.9582014083862305
    5. 'alue' → logprob: -6.2082014083862305
    6. '=' → logprob: -6.3332014083862305
    7. ',v' → logprob: -7.8332014083862305
    8. 'w' → logprob: -7.9582014083862305
    9. 'als' → logprob: -8.58320140838623
    10. ',a' → logprob: -8.83320140838623

Token 58: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3869248926639557
    2. ' int' → logprob: -1.1369248628616333
    3. 'list' → logprob: -11.136924743652344
    4. '   ' → logprob: -11.636924743652344
    5. ' list' → logprob: -11.886924743652344
    6. '[int' → logprob: -12.386924743652344
    7. ' ' → logprob: -12.511924743652344
    8. 'input' → logprob: -12.511924743652344
    9. '	int' → logprob: -13.136924743652344
    10. '<int' → logprob: -13.386924743652344

Token 59: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004084455315023661
    2. '(' → logprob: -5.504084587097168
    3. 'input' → logprob: -12.254084587097168
    4. '(
' → logprob: -14.879084587097168
    5. ' input' → logprob: -15.129084587097168
    6. '()' → logprob: -15.129084587097168
    7. '(int' → logprob: -15.629084587097168
    8. '(

' → logprob: -15.754084587097168
    9. ' (' → logprob: -16.75408363342285
    10. ',input' → logprob: -17.37908363342285

Token 60: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02033013291656971
    2. '()' → logprob: -4.02032995223999
    3. '().' → logprob: -6.14532995223999
    4. '())
' → logprob: -10.895330429077148
    5. '())

' → logprob: -12.270330429077148
    6. ' ())' → logprob: -12.270330429077148
    7. ')' → logprob: -13.020330429077148
    8. '(' → logprob: -13.645330429077148
    9. '();)' → logprob: -13.895330429077148
    10. '()
' → logprob: -14.270330429077148

Token 61: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1771126687526703
    2. 'values' → logprob: -2.927112579345703
    3. ' values' → logprob: -3.302112579345703
    4. '<|end|>' → logprob: -3.552112579345703
    5. '	values' → logprob: -3.927112579345703
    6. '.values' → logprob: -5.052112579345703
    7. ')' → logprob: -5.427112579345703
    8. '(values' → logprob: -5.552112579345703
    9. '_values' → logprob: -5.802112579345703
    10. '       ' → logprob: -5.927112579345703

Token 62: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.44492679834365845
    2. ' values' → logprob: -1.0699267387390137
    3. '   ' → logprob: -4.194926738739014
    4. '	values' → logprob: -6.944926738739014
    5. ' ' → logprob: -11.319927215576172
    6. 'v' → logprob: -11.319927215576172
    7. '       ' → logprob: -11.944927215576172
    8. '  ' → logprob: -12.319927215576172
    9. '.values' → logprob: -12.319927215576172
    10. 'w' → logprob: -12.444927215576172

Token 63: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03805365785956383
    2. '.' → logprob: -3.2880537509918213
    3. ' .' → logprob: -12.288053512573242
    4. '.app' → logprob: -13.038053512573242
    5. '.extend' → logprob: -13.288053512573242
    6. '.ap' → logprob: -13.913053512573242
    7. '.add' → logprob: -14.038053512573242
    8. '.setdefault' → logprob: -14.413053512573242
    9. '.push' → logprob: -14.913053512573242
    10. '.py' → logprob: -15.288053512573242

Token 64: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0019293478690087795
    2. '(' → logprob: -6.25192928314209
    3. '(value' → logprob: -14.62692928314209
    4. '((' → logprob: -15.75192928314209
    5. ' (' → logprob: -16.126930236816406
    6. '(
' → logprob: -16.876930236816406
    7. '(x' → logprob: -18.376930236816406
    8. '(

' → logprob: -18.751930236816406
    9. '(i' → logprob: -18.876930236816406
    10. '()' → logprob: -18.876930236816406

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.35837464465294e-05
    2. ')
' → logprob: -10.625043869018555
    3. '   ' → logprob: -11.625043869018555
    4. ' )' → logprob: -12.000043869018555
    5. ')v' → logprob: -13.500043869018555
    6. ')return' → logprob: -14.125043869018555
    7. '
' → logprob: -14.500043869018555
    8. ')n' → logprob: -15.000043869018555
    9. 'v' → logprob: -15.500043869018555
    10. '#' → logprob: -15.875043869018555

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7134005427360535
    2. '<|end|>' → logprob: -0.7134005427360535
    3. ' if' → logprob: -6.088400363922119
    4. 'values' → logprob: -6.213400363922119
    5. '
' → logprob: -6.213400363922119
    6. 'total' → logprob: -6.463400363922119
    7. ' ' → logprob: -6.588400363922119
    8. '    
' → logprob: -6.588400363922119
    9. 's' → logprob: -6.838400363922119
    10. '    ' → logprob: -7.088400363922119

Token 67: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7824201583862305
    2. ' max' → logprob: -2.5324201583862305
    3. 'total' → logprob: -2.6574201583862305
    4. 'max' (adapté à ' max') → logprob: -2.6574201583862305
    5. 'dp' → logprob: -2.9074201583862305
    6. 'values' → logprob: -3.1574201583862305
    7. ' total' → logprob: -3.5324201583862305
    8. ' if' → logprob: -3.5324201583862305
    9. ' values' → logprob: -3.7824201583862305
    10. ' dp' → logprob: -3.9074201583862305

Token 68: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.015068531036377
    2. '_weight' → logprob: -1.390068531036377
    3. '_' → logprob: -1.640068531036377
    4. '_sum' → logprob: -2.265068531036377
    5. '_val' → logprob: -3.265068531036377
    6. '_w' → logprob: -3.640068531036377
    7. '_width' → logprob: -4.015068531036377
    8. '_v' → logprob: -5.765068531036377
    9. '_len' → logprob: -6.515068531036377
    10. '_length' → logprob: -6.890068531036377

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016370758414268494
    2. '=' → logprob: -4.26637077331543
    3. 's' → logprob: -6.14137077331543
    4. ',' → logprob: -10.76637077331543
    5. ' ' → logprob: -11.14137077331543
    6. '_' → logprob: -12.14137077331543
    7. '=max' → logprob: -13.26637077331543
    8. '  ' → logprob: -13.76637077331543
    9. ' +=' → logprob: -14.01637077331543
    10. '[' → logprob: -14.26637077331543

Token 70: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.15557989478111267
    2. '0' → logprob: -2.7805798053741455
    3. ' ' → logprob: -3.4055798053741455
    4. ' sum' → logprob: -3.7805798053741455
    5. 'max' → logprob: -4.030580043792725
    6. ' w' → logprob: -5.030580043792725
    7. 'sum' → logprob: -6.905580043792725
    8. ' values' → logprob: -8.280579566955566
    9. 'w' → logprob: -8.655579566955566
    10. ' [' → logprob: -9.155579566955566

Token 71: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.003666467731818557
    2. '(' → logprob: -5.628666400909424
    3. '(value' → logprob: -9.878666877746582
    4. '(max' → logprob: -11.878666877746582
    5. 'values' → logprob: -12.753666877746582
    6. '(
' → logprob: -13.253666877746582
    7. '(v' → logprob: -14.253666877746582
    8. '(numbers' → logprob: -14.753666877746582
    9. '(vals' → logprob: -14.878666877746582
    10. ' (' → logprob: -15.128666877746582

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004639811348170042
    2. ')
' → logprob: -6.129639625549316
    3. ' )' → logprob: -6.504639625549316
    4. '   ' → logprob: -7.379639625549316
    5. '<|end|>' → logprob: -8.754639625549316
    6. ' if' → logprob: -10.504639625549316
    7. ' )
' → logprob: -10.879639625549316
    8. ' ' → logprob: -11.004639625549316
    9. '*' → logprob: -11.004639625549316
    10. ')+' → logprob: -11.379639625549316

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7012956142425537
    2. '<|end|>' → logprob: -0.8262956142425537
    3. '
' → logprob: -3.5762956142425537
    4. ' if' → logprob: -3.8262956142425537
    5. 'print' → logprob: -5.326295852661133
    6. '    
' → logprob: -5.451295852661133
    7. ' ' → logprob: -6.951295852661133
    8. '    ' → logprob: -7.201295852661133
    9. '<|end|>' → logprob: -7.326295852661133
    10. ')' → logprob: -7.326295852661133

Token 74: ' intervals' (ID: 49900)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.947792112827301
    2. 'print' → logprob: -1.4477920532226562
    3. 'if' → logprob: -2.0727920532226562
    4. '   ' → logprob: -2.4477920532226562
    5. ' print' → logprob: -3.0727920532226562
    6. 'max' → logprob: -4.072792053222656
    7. ' for' → logprob: -4.322792053222656
    8. 'dp' → logprob: -4.322792053222656
    9. ' dp' → logprob: -4.447792053222656
    10. ' max' → logprob: -4.572792053222656

Token 75: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008913070894777775
    2. '=' → logprob: -4.758913040161133
    3. '=[]' → logprob: -9.008913040161133
    4. '.append' → logprob: -9.758913040161133
    5. '[' → logprob: -10.883913040161133
    6. '.' → logprob: -10.883913040161133
    7. ' =[' → logprob: -11.133913040161133
    8. ',' → logprob: -11.133913040161133
    9. '_' → logprob: -11.383913040161133
    10. ' ' → logprob: -11.633913040161133

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00596647709608078
    2. '=' → logprob: -5.130966663360596
    3. ' ' → logprob: -11.505966186523438
    4. ',' → logprob: -11.630966186523438
    5. ' +=' → logprob: -12.130966186523438
    6. 's' → logprob: -12.255966186523438
    7. '[' → logprob: -12.380966186523438
    8. '_' → logprob: -14.380966186523438
    9. ' ' → logprob: -14.380966186523438
    10. ' =
' → logprob: -14.630966186523438

Token 77: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7666963338851929
    2. ' max' → logprob: -1.7666963338851929
    3. 'max' → logprob: -2.0166964530944824
    4. ' ' → logprob: -2.3916964530944824
    5. 'w' → logprob: -3.3916964530944824
    6. ' w' → logprob: -3.8916964530944824
    7. 'values' → logprob: -4.266696453094482
    8. '(max' → logprob: -4.266696453094482
    9. ' [' → logprob: -4.641696453094482
    10. ' values' → logprob: -4.891696453094482

Token 78: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.04029044136404991
    2. '(' → logprob: -4.165290355682373
    3. '_values' → logprob: -4.290290355682373
    4. '_' → logprob: -5.415290355682373
    5. '(max' → logprob: -6.040290355682373
    6. 'value' → logprob: -7.790290355682373
    7. '_count' → logprob: -7.915290355682373
    8. '+' → logprob: -8.165290832519531
    9. '(values' → logprob: -8.165290832519531
    10. '_inter' → logprob: -8.290290832519531

Token 79: ' //' (ID: 602)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4222239851951599
    2. ' //' → logprob: -1.5472240447998047
    3. '+' → logprob: -2.0472240447998047
    4. '//' → logprob: -6.547224044799805
    5. ' -' → logprob: -8.422224044799805
    6. '<|end|>' → logprob: -8.422224044799805
    7. ' ' → logprob: -8.547224044799805
    8. '   ' → logprob: -8.922224044799805
    9. '  ' → logprob: -10.359724044799805
    10. 'div' → logprob: -10.484724044799805

Token 80: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00038288687937892973
    2. ' w' → logprob: -8.000382423400879
    3. '2' → logprob: -10.875382423400879
    4. '10' → logprob: -12.000382423400879
    5. '100' → logprob: -12.000382423400879
    6. '(' → logprob: -12.125382423400879
    7. '   ' → logprob: -12.875382423400879
    8. ' ' → logprob: -13.625382423400879
    9. 'n' → logprob: -14.000382423400879
    10. '(w' → logprob: -14.125382423400879

Token 81: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.028375793248414993
    2. ' +' → logprob: -3.7783758640289307
    3. '<|end|>' → logprob: -5.528375625610352
    4. '
' → logprob: -7.528375625610352
    5. '   ' → logprob: -8.153375625610352
    6. '+
' → logprob: -8.278375625610352
    7. '<|end|>' → logprob: -11.028375625610352
    8. '```' → logprob: -11.278375625610352
    9. ' +
' → logprob: -11.528375625610352
    10. '*' → logprob: -12.028375625610352

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010338802821934223
    2. ' ' → logprob: -6.876033782958984
    3. '(' → logprob: -14.251033782958984
    4. '2' → logprob: -15.126033782958984
    5. '+' → logprob: -16.501033782958984
    6. ' (' → logprob: -16.751033782958984
    7. '  ' → logprob: -17.626033782958984
    8. '   ' → logprob: -17.626033782958984
    9. '```' → logprob: -17.751033782958984
    10. ' ' → logprob: -18.876033782958984

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010425841173855588
    2. ' ' → logprob: -9.250103950500488
    3. '2' → logprob: -12.375103950500488
    4. '(' → logprob: -12.500103950500488
    5. ' (' → logprob: -16.625104904174805
    6. '```' → logprob: -16.750104904174805
    7. '+' → logprob: -17.000104904174805
    8. '   ' → logprob: -17.375104904174805
    9. '  ' → logprob: -18.000104904174805
    10. 'int' → logprob: -19.125104904174805

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.291056752204895
    2. '<|end|>' → logprob: -1.416056752204895
    3. '
' → logprob: -5.9160566329956055
    4. 'print' → logprob: -6.6660566329956055
    5. '    
' → logprob: -6.7910566329956055
    6. ')' → logprob: -7.0410566329956055
    7. '<|end|>' → logprob: -7.2910566329956055
    8. '```' → logprob: -7.5410566329956055
    9. ' for' → logprob: -7.5410566329956055
    10. 'for' → logprob: -7.9160566329956055

Token 85: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' counts' (ID: 28991)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.43474358320236206
    2. 'counts' (adapté à ' counts') → logprob: -1.5597436428070068
    3. 'interval' → logprob: -2.809743642807007
    4. 'freq' → logprob: -4.184743404388428
    5. 'count' → logprob: -4.809743404388428
    6. ' dp' → logprob: -4.934743404388428
    7. 'arr' → logprob: -4.934743404388428
    8. 'result' → logprob: -5.059743404388428
    9. 'frequency' → logprob: -5.309743404388428
    10. 'bins' → logprob: -5.809743404388428

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024862384889274836
    2. '=' → logprob: -6.002486228942871
    3. ' ' → logprob: -12.502486228942871
    4. '[' → logprob: -12.752486228942871
    5. ' =[' → logprob: -12.752486228942871
    6. '<|end|>' → logprob: -15.502486228942871
    7. '=[' → logprob: -15.877486228942871
    8. '=[]' → logprob: -16.127487182617188
    9. ' =
' → logprob: -16.502487182617188
    10. ')' → logprob: -16.627487182617188

Token 88: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2519306540489197
    2. ' [' → logprob: -1.5019307136535645
    3. ' ' → logprob: -14.876930236816406
    4. '[len' → logprob: -15.251930236816406
    5. '[int' → logprob: -15.376930236816406
    6. ' ' → logprob: -15.876930236816406
    7. '[count' → logprob: -15.876930236816406
    8. '[]' → logprob: -16.001930236816406
    9. '[n' → logprob: -16.376930236816406
    10. '0' → logprob: -16.876930236816406

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.37507438659668
    4. '[' → logprob: -16.87507438659668
    5. ' ' → logprob: -18.06257438659668
    6. 'int' → logprob: -18.18757438659668
    7. 'False' → logprob: -18.31257438659668
    8. '۰' → logprob: -18.43757438659668
    9. '  ' → logprob: -18.75007438659668
    10. ']' → logprob: -18.81257438659668

Token 90: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018487934721633792
    2. ']*' → logprob: -6.3768486976623535
    3. ' for' → logprob: -9.501849174499512
    4. ' ]' → logprob: -9.751849174499512
    5. ']*(' → logprob: -11.501849174499512
    6. 'for' → logprob: -13.001849174499512
    7. ',' → logprob: -15.376849174499512
    8. ')' → logprob: -15.376849174499512
    9. ']int' → logprob: -15.626849174499512
    10. '   ' → logprob: -16.001848220825195

Token 91: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.00010163593105971813
    2. '(interval' → logprob: -9.625102043151855
    3. ' intervals' → logprob: -10.250102043151855
    4. '   ' → logprob: -16.00010108947754
    5. '(' → logprob: -17.87510108947754
    6. '```' → logprob: -18.12510108947754
    7. 'int' → logprob: -19.87510108947754
    8. '{' → logprob: -20.12510108947754
    9. ' ' → logprob: -20.50010108947754
    10. 'Intervals' → logprob: -20.50010108947754

Token 92: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.939851037808694e-05
    2. '_count' → logprob: -11.250029563903809
    3. 'interval' → logprob: -13.000029563903809
    4. ' s' → logprob: -13.000029563903809
    5. '[' → logprob: -13.500029563903809
    6. '   ' → logprob: -13.625029563903809
    7. 'counts' → logprob: -13.750029563903809
    8. '```' → logprob: -14.125029563903809
    9. '[s' → logprob: -14.500029563903809
    10. '_s' → logprob: -14.875029563903809

Token 93: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6932222843170166
    2. '_count' → logprob: -0.6932222843170166
    3. 'count' → logprob: -10.193222045898438
    4. '_counts' → logprob: -10.818222045898438
    5. '_s' → logprob: -12.193222045898438
    6. '_c' → logprob: -12.443222045898438
    7. '_' → logprob: -12.568222045898438
    8. '```' → logprob: -14.068222045898438
    9. 'с' → logprob: -14.568222045898438
    10. ' s' → logprob: -14.568222045898438

Token 94: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19951853156089783
    2. ' for' → logprob: -2.3245184421539307
    3. '<|end|>' → logprob: -2.8245184421539307
    4. '   ' → logprob: -3.9495184421539307
    5. '
' → logprob: -5.57451868057251
    6. '	for' → logprob: -8.574518203735352
    7. '<|end|>' → logprob: -8.949518203735352
    8. '    
' → logprob: -9.199518203735352
    9. '  
' → logprob: -9.699518203735352
    10. ' ' → logprob: -10.074518203735352

Token 95: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07898364216089249
    2. '   ' → logprob: -2.9539835453033447
    3. ' for' → logprob: -3.9539835453033447
    4. '<|end|>' → logprob: -5.453983783721924
    5. '    
' → logprob: -9.203983306884766
    6. '	for' → logprob: -9.328983306884766
    7. '
' → logprob: -9.328983306884766
    8. '  ' → logprob: -11.078983306884766
    9. '  
' → logprob: -11.078983306884766
    10. ' ' → logprob: -11.203983306884766

Token 96: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003009041247423738
    2. ' for' → logprob: -8.750301361083984
    3. '   ' → logprob: -8.875301361083984
    4. '```' → logprob: -13.750301361083984
    5. '	for' → logprob: -14.125301361083984
    6. '<|end|>' → logprob: -14.750301361083984
    7. 'For' → logprob: -15.625301361083984
    8. '  ' → logprob: -16.125301361083984
    9. '    
' → logprob: -17.000301361083984
    10. ' ' → logprob: -17.125301361083984

Token 97: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12609122693538666
    2. ' v' → logprob: -2.251091241836548
    3. 'value' → logprob: -4.626091003417969
    4. ' value' → logprob: -6.376091003417969
    5. 'val' → logprob: -6.626091003417969
    6. ' val' → logprob: -8.001091003417969
    7. ' ' → logprob: -11.501091003417969
    8. 'num' → logprob: -12.376091003417969
    9. 'x' → logprob: -12.751091003417969
    10. 'i' → logprob: -12.751091003417969

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007646257057785988
    2. 'in' → logprob: -4.882646083831787
    3. ' ' → logprob: -10.382646560668945
    4. 'v' → logprob: -12.882646560668945
    5. 's' → logprob: -13.382646560668945
    6. 'n' → logprob: -13.507646560668945
    7. '  ' → logprob: -14.257646560668945
    8. '	in' → logprob: -14.632646560668945
    9. '   ' → logprob: -14.757646560668945
    10. 'i' → logprob: -14.757646560668945

Token 99: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.003178544342517853
    2. ' values' → logprob: -5.753178596496582
    3. '	values' → logprob: -15.003178596496582
    4. '.values' → logprob: -15.503178596496582
    5. '(values' → logprob: -15.628178596496582
    6. 'value' → logprob: -15.753178596496582
    7. ' ' → logprob: -18.628177642822266
    8. 'v' → logprob: -19.378177642822266
    9. '_values' → logprob: -20.003177642822266
    10. '   ' → logprob: -20.378177642822266

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043019745498895645
    2. ':
' → logprob: -3.1680197715759277
    3. '):
' → logprob: -11.79301929473877
    4. ':
' → logprob: -12.91801929473877
    5. ' :' → logprob: -13.16801929473877
    6. ' :
' → logprob: -13.16801929473877
    7. ':

' → logprob: -13.41801929473877
    8. '):' → logprob: -13.54301929473877
    9. '   ' → logprob: -13.66801929473877
    10. ',' → logprob: -14.66801929473877

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1160837933421135
    2. '   ' → logprob: -2.866083860397339
    3. ' counts' → logprob: -3.241083860397339
    4. '    ' → logprob: -5.36608362197876
    5. ' if' → logprob: -5.36608362197876
    6. ' 
' → logprob: -6.36608362197876
    7. '    
' → logprob: -7.49108362197876
    8. ' ' → logprob: -7.86608362197876
    9. 'counts' → logprob: -7.99108362197876
    10. '```' → logprob: -7.99108362197876

Token 102: ' idx' (ID: 14016)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.5098125338554382
    2. ' index' → logprob: -1.259812593460083
    3. 'index' → logprob: -2.884812593460083
    4. 'counts' → logprob: -3.384812593460083
    5. ' idx' → logprob: -3.759812593460083
    6. 'idx' (adapté à ' idx') → logprob: -6.884812355041504
    7. ' count' → logprob: -7.384812355041504
    8. 'count' → logprob: -7.634812355041504
    9. ' i' → logprob: -8.634812355041504
    10. 'interval' → logprob: -9.634812355041504

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889298349618912
    2. '=' → logprob: -2.578892946243286
    3. ' ' → logprob: -13.453892707824707
    4. ' =
' → logprob: -14.703892707824707
    5. '=int' → logprob: -14.828892707824707
    6. ' +=' → logprob: -14.828892707824707
    7. 'idx' → logprob: -15.828892707824707
    8. '   ' → logprob: -15.828892707824707
    9. 'x' → logprob: -15.953892707824707
    10. '_idx' → logprob: -16.578893661499023

Token 104: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3132627606391907
    2. ' v' → logprob: -1.313262701034546
    3. '   ' → logprob: -14.563262939453125
    4. '	v' → logprob: -15.063262939453125
    5. 'int' → logprob: -16.313262939453125
    6. ' ' → logprob: -16.688262939453125
    7. ' ' → logprob: -17.938262939453125
    8. '0' → logprob: -18.188262939453125
    9. '(v' → logprob: -18.438262939453125
    10. '?v' → logprob: -18.813262939453125

Token 105: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.38692405819892883
    2. '//' → logprob: -1.1369240283966064
    3. ' ' → logprob: -10.636923789978027
    4. '   ' → logprob: -11.011923789978027
    5. 'w' → logprob: -12.261923789978027
    6. '```' → logprob: -13.636923789978027
    7. ' //
' → logprob: -13.761923789978027
    8. '//
' → logprob: -14.386923789978027
    9. ' w' → logprob: -14.386923789978027
    10. '  ' → logprob: -14.636923789978027

Token 106: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0007099286303855479
    2. ' w' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.375709533691406
    4. '	w' → logprob: -18.500709533691406
    5. '_w' → logprob: -20.375709533691406
    6. '>w' → logprob: -20.625709533691406
    7. '<w' → logprob: -20.750709533691406
    8. ' ' → logprob: -20.750709533691406
    9. ''w' → logprob: -21.375709533691406
    10. '*w' → logprob: -22.000709533691406

Token 107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03310877084732056
    2. 'counts' → logprob: -4.033108711242676
    3. ' counts' → logprob: -4.658108711242676
    4. '
' → logprob: -5.658108711242676
    5. '   ' → logprob: -6.783108711242676
    6. '<|end|>' → logprob: -7.908108711242676
    7. 'count' → logprob: -9.658108711242676
    8. ']' → logprob: -9.658108711242676
    9. ')' → logprob: -10.283108711242676
    10. '_counts' → logprob: -10.283108711242676

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03477569669485092
    2. 'counts' → logprob: -4.034775733947754
    3. ' counts' → logprob: -4.409775733947754
    4. '   ' → logprob: -5.784775733947754
    5. '<|end|>' → logprob: -7.409775733947754
    6. 'count' → logprob: -8.909775733947754
    7. '
' → logprob: -9.034775733947754
    8. ')' → logprob: -9.034775733947754
    9. '_counts' → logprob: -9.409775733947754
    10. ']' → logprob: -9.909775733947754

Token 109: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.0031988697592169046
    2. ' counts' → logprob: -5.753199100494385
    3. 'count' → logprob: -11.503198623657227
    4. '   ' → logprob: -11.503198623657227
    5. '       ' → logprob: -14.003198623657227
    6. ' ' → logprob: -16.878198623657227
    7. '_counts' → logprob: -17.253198623657227
    8. '
' → logprob: -17.378198623657227
    9. '           ' → logprob: -18.003198623657227
    10. '```' → logprob: -18.753198623657227

Token 110: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.500004768371582
    3. '```' → logprob: -14.500004768371582
    4. 'idx' → logprob: -16.375003814697266
    5. ' [' → logprob: -17.125003814697266
    6. '	idx' → logprob: -17.625003814697266
    7. '[index' → logprob: -17.750003814697266
    8. '[int' → logprob: -18.000003814697266
    9. '[++' → logprob: -18.125003814697266
    10. '   ' → logprob: -18.125003814697266

Token 111: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06496869772672653
    2. ']+=' → logprob: -2.8149685859680176
    3. '+=' → logprob: -6.314968585968018
    4. ' +=' → logprob: -6.939968585968018
    5. ' ]' → logprob: -8.939969062805176
    6. ')' → logprob: -9.564969062805176
    7. '+' → logprob: -11.689969062805176
    8. '   ' → logprob: -12.689969062805176
    9. '}' → logprob: -13.189969062805176
    10. '[' → logprob: -13.439969062805176

Token 112: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07892878353595734
    2. ' +=' → logprob: -2.5789287090301514
    3. ']+=' → logprob: -10.45392894744873
    4. '=' → logprob: -11.82892894744873
    5. '+' → logprob: -12.95392894744873
    6. '+='' → logprob: -15.57892894744873
    7. '   ' → logprob: -16.453927993774414
    8. ' ' → logprob: -16.453927993774414
    9. '```' → logprob: -16.578927993774414
    10. '++' → logprob: -16.828927993774414

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -21.125
    4. '   ' → logprob: -21.5
    5. '0' → logprob: -22.875
    6. '１' → logprob: -23.375
    7. '<|end|>' → logprob: -23.375
    8. '۱' → logprob: -23.5
    9. '>' → logprob: -23.5
    10. '`' → logprob: -23.5

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -20.375
    4. '<|end|>' → logprob: -22.0
    5. '   ' → logprob: -22.375
    6. '۱' → logprob: -23.5
    7. '１' → logprob: -23.625
    8. '0' → logprob: -23.75
    9. '>' → logprob: -24.25
    10. '`' → logprob: -24.25

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5796032547950745
    2. 'for' → logprob: -1.4546031951904297
    3. 'print' → logprob: -1.8296031951904297
    4. ' for' → logprob: -4.07960319519043
    5. '
' → logprob: -4.70460319519043
    6. 'max' → logprob: -5.07960319519043
    7. '    
' → logprob: -5.45460319519043
    8. '<|end|>' → logprob: -5.95460319519043
    9. '```' → logprob: -6.07960319519043
    10. 'total' → logprob: -6.45460319519043

Token 116: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.575914204120636
    2. 'for' → logprob: -0.950914204120636
    3. '   ' → logprob: -3.075914144515991
    4. ' for' → logprob: -6.07591438293457
    5. '
' → logprob: -7.20091438293457
    6. 'max' → logprob: -7.20091438293457
    7. 'total' → logprob: -7.95091438293457
    8. '    
' → logprob: -8.32591438293457
    9. 'output' → logprob: -9.07591438293457
    10. 'while' → logprob: -9.20091438293457

Token 117: ' max' (ID: 2999)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9619928002357483
    2. 'max' (adapté à ' max') → logprob: -0.9619928002357483
    3. 'for' → logprob: -1.5869927406311035
    4. 'if' → logprob: -4.5869927406311035
    5. 'result' → logprob: -5.2119927406311035
    6. 'output' → logprob: -5.7119927406311035
    7. ' for' → logprob: -6.3369927406311035
    8. 'min' → logprob: -6.5869927406311035
    9. 'total' → logprob: -6.8369927406311035
    10. 'interval' → logprob: -6.8369927406311035

Token 118: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.001921014511026442
    2. '_index' → logprob: -7.7519211769104
    3. '_idx' → logprob: -7.7519211769104
    4. '_counts' → logprob: -8.001920700073242
    5. '_' → logprob: -8.126920700073242
    6. '_value' → logprob: -9.001920700073242
    7. '_freq' → logprob: -9.251920700073242
    8. 'count' → logprob: -9.751920700073242
    9. '_height' → logprob: -10.376920700073242
    10. '_len' → logprob: -10.376920700073242

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693734467029572
    2. '=' → logprob: -2.1269373893737793
    3. '_idx' → logprob: -12.126936912536621
    4. '=max' → logprob: -13.376936912536621
    5. 'idx' → logprob: -13.626936912536621
    6. '_index' → logprob: -15.001936912536621
    7. '_' → logprob: -15.251936912536621
    8. 'index' → logprob: -16.126937866210938
    9. '   ' → logprob: -16.251937866210938
    10. ' ' → logprob: -16.501937866210938

Token 120: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07908090949058533
    2. ' max' → logprob: -2.579080820083618
    3. '0' → logprob: -8.579080581665039
    4. 'counts' → logprob: -13.329080581665039
    5. ' counts' → logprob: -14.454080581665039
    6. ' ' → logprob: -14.579080581665039
    7. '(max' → logprob: -15.704080581665039
    8. '   ' → logprob: -15.829080581665039
    9. '1' → logprob: -16.20408058166504
    10. '	max' → logprob: -16.57908058166504

Token 121: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -4.870950215263292e-05
    2. '(' → logprob: -10.000048637390137
    3. 'counts' → logprob: -13.125048637390137
    4. 'count' → logprob: -14.625048637390137
    5. ' counts' → logprob: -15.250048637390137
    6. '(max' → logprob: -15.500048637390137
    7. ' (' → logprob: -16.125049591064453
    8. '_counts' → logprob: -16.375049591064453
    9. '[count' → logprob: -16.750049591064453
    10. '(values' → logprob: -17.375049591064453

Token 122: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.107425062713446e-06
    2. ')' → logprob: -12.125006675720215
    3. 'counts' → logprob: -13.625006675720215
    4. '(s' → logprob: -15.125006675720215
    5. ')s' → logprob: -16.87500762939453
    6. '[' → logprob: -18.12500762939453
    7. '(count' → logprob: -18.25000762939453
    8. ' s' → logprob: -18.37500762939453
    9. 'ts' → logprob: -18.50000762939453
    10. ' counts' → logprob: -18.75000762939453

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10121102631092072
    2. '   ' → logprob: -2.6012110710144043
    3. '
' → logprob: -4.851211071014404
    4. ')
' → logprob: -4.976211071014404
    5. '<|end|>' → logprob: -5.101211071014404
    6. '    
' → logprob: -7.976211071014404
    7. ' )' → logprob: -8.601210594177246
    8. '<|end|>' → logprob: -8.726210594177246
    9. ' if' → logprob: -8.976210594177246
    10. '  
' → logprob: -9.851210594177246

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032518659718334675
    2. 'print' → logprob: -6.253252029418945
    3. 'for' → logprob: -7.378252029418945
    4. 'indices' → logprob: -8.378252029418945
    5. 'output' → logprob: -9.253252029418945
    6. '    
' → logprob: -9.253252029418945
    7. 'max' → logprob: -9.503252029418945
    8. ' for' → logprob: -10.003252029418945
    9. 'result' → logprob: -10.003252029418945
    10. 'index' → logprob: -11.128252029418945

Token 125: ' ink' (ID: 22045)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1312973499298096
    2. 'for' → logprob: -1.5062973499298096
    3. 'indices' → logprob: -2.0062973499298096
    4. 'print' → logprob: -2.1312973499298096
    5. 'max' → logprob: -2.7562973499298096
    6. '   ' → logprob: -2.7562973499298096
    7. 'interval' → logprob: -3.2562973499298096
    8. 'if' → logprob: -5.2562971115112305
    9. 'results' → logprob: -5.3812971115112305
    10. 'indexes' → logprob: -5.3812971115112305

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8773252964019775
    2. '_needed' → logprob: -1.5023252964019775
    3. ' =' → logprob: -2.5023252964019775
    4. 'ed' → logprob: -2.5023252964019775
    5. '_required' → logprob: -3.3773252964019775
    6. 's' → logprob: -3.5023252964019775
    7. 'print' → logprob: -3.7523252964019775
    8. '=int' → logprob: -4.377325057983398
    9. 'required' → logprob: -4.627325057983398
    10. 'max' → logprob: -5.002325057983398

Token 127: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.26899200677871704
    2. ''' → logprob: -2.8939919471740723
    3. ''*' → logprob: -2.8939919471740723
    4. 'counts' → logprob: -3.1439919471740723
    5. ''#' → logprob: -4.643991947174072
    6. '(max' → logprob: -4.768991947174072
    7. '0' → logprob: -4.768991947174072
    8. '['' → logprob: -4.893991947174072
    9. '''' → logprob: -5.143991947174072
    10. '[max' → logprob: -5.143991947174072

Token 128: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1264924705028534
    2. 'counts' → logprob: -2.501492500305176
    3. 'w' → logprob: -4.751492500305176
    4. ''' → logprob: -5.376492500305176
    5. 'min' → logprob: -5.501492500305176
    6. 'sum' → logprob: -5.626492500305176
    7. 'interval' → logprob: -5.876492500305176
    8. '(max' → logprob: -6.376492500305176
    9. '0' → logprob: -6.501492500305176
    10. 'str' → logprob: -6.751492500305176

Token 129: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2869611382484436
    2. 'for' → logprob: -1.5369610786437988
    3. ' for' → logprob: -3.411961078643799
    4. '
' → logprob: -7.536961078643799
    5. 'while' → logprob: -7.536961078643799
    6. '	for' → logprob: -9.286961555480957
    7. '<|end|>' → logprob: -9.286961555480957
    8. ' while' → logprob: -9.536961555480957
    9. '+' → logprob: -11.161961555480957
    10. ',' → logprob: -11.411961555480957

Token 130: '01' (ID: 2290)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2978589534759521
    2. '.' → logprob: -1.6728589534759521
    3. 'max' → logprob: -2.172858953475952
    4. '0' → logprob: -2.422858953475952
    5. 'for' → logprob: -2.922858953475952
    6. '1' → logprob: -3.172858953475952
    7. '   ' → logprob: -3.672858953475952
    8. 'count' → logprob: -3.797858953475952
    9. '9' → logprob: -4.047859191894531
    10. '25' → logprob: -4.172859191894531

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1217179074883461
    2. '   ' → logprob: -3.496717929840088
    3. ' *' → logprob: -3.496717929840088
    4. '*' → logprob: -3.621717929840088
    5. '<|end|>' → logprob: -4.371717929840088
    6. ' for' → logprob: -4.996717929840088
    7. 'for' → logprob: -5.621717929840088
    8. '    
' → logprob: -7.496717929840088
    9. ' while' → logprob: -7.871717929840088
    10. 'while' → logprob: -8.12171745300293

Token 132: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6925583481788635
    2. '   ' → logprob: -0.9425583481788635
    3. '*' → logprob: -3.4425582885742188
    4. 'print' → logprob: -3.6925582885742188
    5. 'while' → logprob: -3.6925582885742188
    6. ' for' → logprob: -4.567558288574219
    7. '
' → logprob: -4.692558288574219
    8. 'width' → logprob: -6.817558288574219
    9. 'area' → logprob: -6.817558288574219
    10. 'total' → logprob: -7.067558288574219

Token 133: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.019146841019392014
    2. 'max' → logprob: -5.144146919250488
    3. 'total' → logprob: -6.144146919250488
    4. 'print' → logprob: -6.894146919250488
    5. 'while' → logprob: -7.019146919250488
    6. 'bar' → logprob: -7.019146919250488
    7. 'result' → logprob: -7.144146919250488
    8. 'height' → logprob: -7.144146919250488
    9. 'width' → logprob: -7.519146919250488
    10. 'area' → logprob: -7.769146919250488

Token 134: ' i' (ID: 575)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3400295674800873
    2. ' i' → logprob: -1.4650295972824097
    3. ' c' → logprob: -3.59002947807312
    4. 'count' → logprob: -4.090029716491699
    5. ' idx' → logprob: -5.340029716491699
    6. 'i' → logprob: -6.090029716491699
    7. ' cnt' → logprob: -6.215029716491699
    8. ' _' → logprob: -6.715029716491699
    9. ' v' → logprob: -7.090029716491699
    10. 'c' → logprob: -7.215029716491699

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00843573547899723
    2. 'in' → logprob: -5.0084357261657715
    3. ',' → logprob: -6.3834357261657715
    4. ' ' → logprob: -11.00843620300293
    5. ' ,' → logprob: -11.63343620300293
    6. 'range' → logprob: -13.00843620300293
    7. ' range' → logprob: -15.00843620300293
    8. '   ' → logprob: -15.38343620300293
    9. '	in' → logprob: -15.63343620300293
    10. ',in' → logprob: -15.63343620300293

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015029559144750237
    2. ' range' → logprob: -6.501502990722656
    3. '(range' → logprob: -14.251502990722656
    4. '	range' → logprob: -17.751502990722656
    5. '   ' → logprob: -19.251502990722656
    6. ' ' → logprob: -20.126502990722656
    7. 'ange' → logprob: -20.501502990722656
    8. 'ranges' → logprob: -20.626502990722656
    9. '_range' → logprob: -21.126502990722656
    10. 'count' → logprob: -21.126502990722656

Token 137: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.0015585471410304308
    2. '(len' → logprob: -6.501558780670166
    3. '(' → logprob: -10.501558303833008
    4. 'interval' → logprob: -10.626558303833008
    5. ' (' → logprob: -12.626558303833008
    6. 'len' → logprob: -14.501558303833008
    7. '(inter' → logprob: -14.751558303833008
    8. '(max' → logprob: -16.251558303833008
    9. '(indices' → logprob: -16.501558303833008
    10. '(length' → logprob: -16.876558303833008

Token 138: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00012439649435691535
    2. '(interval' → logprob: -10.375123977661133
    3. '_count' → logprob: -10.625123977661133
    4. 'als' → logprob: -10.625123977661133
    5. 'vals' → logprob: -10.750123977661133
    6. 'interval' → logprob: -11.500123977661133
    7. '   ' → logprob: -12.125123977661133
    8. ' intervals' → logprob: -13.125123977661133
    9. '(' → logprob: -13.625123977661133
    10. '(s' → logprob: -14.750123977661133

Token 139: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0004757135466206819
    2. '_counts' → logprob: -8.750475883483887
    3. 's' → logprob: -9.000475883483887
    4. '_inter' → logprob: -9.250475883483887
    5. 'count' → logprob: -10.000475883483887
    6. ')' → logprob: -11.125475883483887
    7. 'inter' → logprob: -11.875475883483887
    8. '   ' → logprob: -12.250475883483887
    9. 'unts' → logprob: -12.750475883483887
    10. 'unt' → logprob: -13.000475883483887

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08911296725273132
    2. '):
' → logprob: -2.4641129970550537
    3. ':' → logprob: -9.839113235473633
    4. '+' → logprob: -10.089113235473633
    5. '):
' → logprob: -10.589113235473633
    6. '-' → logprob: -10.714113235473633
    7. ' ):' → logprob: -11.214113235473633
    8. '   ' → logprob: -11.464113235473633
    9. ')' → logprob: -12.714113235473633
    10. ' ):
' → logprob: -13.964113235473633

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002660435391589999
    2. '   ' → logprob: -6.627660274505615
    3. '<|end|>' → logprob: -7.377660274505615
    4. ' if' → logprob: -7.627660274505615
    5. 'if' → logprob: -10.002660751342773
    6. '    ' → logprob: -10.627660751342773
    7. '	if' → logprob: -10.752660751342773
    8. '        ' → logprob: -10.877660751342773
    9. '     ' → logprob: -10.877660751342773
    10. '        
' → logprob: -11.002660751342773

Token 142: ' darkness' (ID: 44420)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5779396295547485
    2. '       ' → logprob: -1.4529396295547485
    3. ' if' → logprob: -2.327939510345459
    4. 'ink' → logprob: -3.077939510345459
    5. '   ' → logprob: -3.827939510345459
    6. ' ink' → logprob: -3.827939510345459
    7. 'print' → logprob: -4.327939510345459
    8. '           ' → logprob: -6.577939510345459
    9. 'count' → logprob: -6.827939510345459
    10. 'space' → logprob: -7.452939510345459

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2812034487724304
    2. '=' → logprob: -1.4062035083770752
    3. '=int' → logprob: -10.406203269958496
    4. ' +=' → logprob: -11.531203269958496
    5. ' ' → logprob: -13.031203269958496
    6. '+=' → logprob: -13.156203269958496
    7. '   ' → logprob: -13.656203269958496
    8. ')' → logprob: -13.781203269958496
    9. ',' → logprob: -14.281203269958496
    10. ' ' → logprob: -14.406203269958496

Token 144: ' ' (ID: 220)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.49148690700531006
    2. ' counts' → logprob: -1.74148690700531
    3. 'ink' → logprob: -2.4914870262145996
    4. ' ink' → logprob: -3.1164870262145996
    5. 'min' → logprob: -4.1164870262146
    6. '   ' → logprob: -4.1164870262146
    7. ' min' → logprob: -4.2414870262146
    8. '1' → logprob: -4.3664870262146
    9. '0' → logprob: -4.7414870262146
    10. ' ' → logprob: -5.7414870262146

Token 145: '1' (ID: 16)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.1250234991312027
    2. '1' → logprob: -3.375023603439331
    3. 'ink' → logprob: -3.375023603439331
    4. 'min' → logprob: -4.125023365020752
    5. '0' → logprob: -4.375023365020752
    6. '(' → logprob: -4.750023365020752
    7. 'int' → logprob: -5.375023365020752
    8. ' counts' → logprob: -6.375023365020752
    9. 'max' → logprob: -6.750023365020752
    10. 'round' → logprob: -7.125023365020752

Token 146: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34920406341552734
    2. '-' → logprob: -1.2242040634155273
    3. '   ' → logprob: -7.599204063415527
    4. '.' → logprob: -8.974204063415527
    5. '+' → logprob: -9.724204063415527
    6. ' if' → logprob: -11.349204063415527
    7. '-int' → logprob: -11.849204063415527
    8. ' ink' → logprob: -11.974204063415527
    9. '-(' → logprob: -11.974204063415527
    10. ' +' → logprob: -11.974204063415527

Token 147: ' i' (ID: 575)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.9465340375900269
    2. 'ink' → logprob: -1.4465340375900269
    3. '(' → logprob: -1.5715340375900269
    4. '(count' → logprob: -2.3215341567993164
    5. ' ink' → logprob: -3.4465341567993164
    6. ' counts' → logprob: -4.196534156799316
    7. 'count' → logprob: -4.946534156799316
    8. '0' → logprob: -5.071534156799316
    9. ' (' → logprob: -5.446534156799316
    10. '(max' → logprob: -6.946534156799316

Token 148: '/(' (ID: 27334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5021371245384216
    2. ' *' → logprob: -1.5021371841430664
    3. '/' → logprob: -2.2521371841430664
    4. ' /' → logprob: -2.7521371841430664
    5. '/max' → logprob: -5.877137184143066
    6. '/count' → logprob: -8.627137184143066
    7. '*(' → logprob: -10.002137184143066
    8. '   ' → logprob: -11.377137184143066
    9. 'ink' → logprob: -11.502137184143066
    10. ' ' → logprob: -11.502137184143066

Token 149: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.07204418629407883
    2. ' intervals' → logprob: -2.6970441341400146
    3. '(interval' → logprob: -6.447044372558594
    4. 'max' → logprob: -8.072044372558594
    5. ' interval' → logprob: -9.822044372558594
    6. ' max' → logprob: -10.072044372558594
    7. ' (' → logprob: -10.197044372558594
    8. '   ' → logprob: -10.572044372558594
    9. ' ink' → logprob: -10.947044372558594
    10. '(' → logprob: -11.822044372558594

Token 150: 's' (ID: 82)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.1065821573138237
    2. 'vals' → logprob: -2.4815821647644043
    3. 's' → logprob: -4.106582164764404
    4. 'al' → logprob: -7.606582164764404
    5. 'val' → logprob: -7.981582164764404
    6. 'ls' → logprob: -9.231581687927246
    7. 'interval' → logprob: -10.606581687927246
    8. ')' → logprob: -11.606581687927246
    9. '   ' → logprob: -11.981581687927246
    10. '```' → logprob: -12.106581687927246

Token 151: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0018496280536055565
    2. 'count' → logprob: -6.62684965133667
    3. 'ount' → logprob: -8.626849174499512
    4. 'nt' → logprob: -9.626849174499512
    5. '_counts' → logprob: -9.626849174499512
    6. '_inter' → logprob: -10.251849174499512
    7. 's' → logprob: -10.501849174499512
    8. 'Count' → logprob: -10.626849174499512
    9. 'nts' → logprob: -10.626849174499512
    10. 't' → logprob: -10.626849174499512

Token 152: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6665431261062622
    2. ' -' → logprob: -1.0415431261062622
    3. '-' → logprob: -2.0415430068969727
    4. ' )' → logprob: -6.416543006896973
    5. '   ' → logprob: -7.166543006896973
    6. ')
' → logprob: -7.541543006896973
    7. ' ' → logprob: -7.666543006896973
    8. '*' → logprob: -9.041543006896973
    9. ' *' → logprob: -9.916543006896973
    10. ')*' → logprob: -9.916543006896973

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001278534036828205
    2. ' ' → logprob: -9.000127792358398
    3. '   ' → logprob: -13.000127792358398
    4. ')' → logprob: -14.812627792358398
    5. '-' → logprob: -15.312627792358398
    6. '=' → logprob: -15.812627792358398
    7. '...' → logprob: -16.0001277923584
    8. ',' → logprob: -16.2501277923584
    9. '  ' → logprob: -16.3126277923584
    10. '2' → logprob: -16.5626277923584

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006037107668817043
    2. ')*' → logprob: -5.25603723526001
    3. ')
' → logprob: -7.50603723526001
    4. ' )' → logprob: -8.506036758422852
    5. ' if' → logprob: -11.006036758422852
    6. ')**' → logprob: -11.506036758422852
    7. '   ' → logprob: -12.256036758422852
    8. '+' → logprob: -12.631036758422852
    9. ')*(' → logprob: -12.631036758422852
    10. 'if' → logprob: -13.006036758422852

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031192081049084663
    2. ' if' → logprob: -3.7811920642852783
    3. '
' → logprob: -5.531192302703857
    4. '<|end|>' → logprob: -6.906192302703857
    5. 'print' → logprob: -7.156192302703857
    6. '   ' → logprob: -7.156192302703857
    7. 'if' → logprob: -7.781192302703857
    8. ' print' → logprob: -8.0311918258667
    9. '        
' → logprob: -9.0311918258667
    10. ' ink' → logprob: -9.0311918258667

Token 156: ' height' (ID: 4679)
  Prédit: 'ink'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.9097777605056763
    2. 'print' → logprob: -0.9097777605056763
    3. 'if' → logprob: -1.9097777605056763
    4. '       ' → logprob: -3.7847776412963867
    5. '   ' → logprob: -4.284777641296387
    6. 'for' → logprob: -5.409777641296387
    7. ' ink' → logprob: -6.659777641296387
    8. ' if' → logprob: -7.159777641296387
    9. 'opacity' → logprob: -7.159777641296387
    10. 'count' → logprob: -7.909777641296387

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759475827217102
    2. ' =' → logprob: -0.8259475827217102
    3. '   ' → logprob: -12.825947761535645
    4. '=int' → logprob: -13.075947761535645
    5. ' ' → logprob: -13.825947761535645
    6. ')' → logprob: -13.825947761535645
    7. 's' → logprob: -14.950947761535645
    8. '<|end|>' → logprob: -16.200946807861328
    9. '=line' → logprob: -16.450946807861328
    10. '*' → logprob: -16.450946807861328

Token 158: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.31886979937553406
    2. ' counts' → logprob: -1.3188698291778564
    3. ' ink' → logprob: -6.443869590759277
    4. 'ink' → logprob: -6.568869590759277
    5. 'count' → logprob: -7.193869590759277
    6. 'max' → logprob: -7.193869590759277
    7. ' max' → logprob: -8.443869590759277
    8. '   ' → logprob: -8.818869590759277
    9. '100' → logprob: -9.568869590759277
    10. '(count' → logprob: -9.568869590759277

Token 159: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.500000953674316
    3. ' [' → logprob: -15.125000953674316
    4. '```' → logprob: -16.25
    5. '[idx' → logprob: -17.125
    6. '\[' → logprob: -18.0
    7. '[I' → logprob: -18.625
    8. '[index' → logprob: -18.875
    9. '   ' → logprob: -19.25
    10. '`' → logprob: -19.875

Token 160: ']/' (ID: 18500)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012108709663152695
    2. ']*' → logprob: -4.63710880279541
    3. '*' → logprob: -6.88710880279541
    4. ']/' → logprob: -7.13710880279541
    5. ')' → logprob: -8.76210880279541
    6. ' *' → logprob: -9.01210880279541
    7. '/w' → logprob: -9.38710880279541
    8. '/' → logprob: -10.13710880279541
    9. '])' → logprob: -10.38710880279541
    10. ' ]' → logprob: -10.51210880279541

Token 161: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.688212614681106e-05
    2. ' max' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.000017166137695
    4. '(max' → logprob: -17.875017166137695
    5. ' ' → logprob: -19.125017166137695
    6. '	max' → logprob: -19.375017166137695
    7. 'maximum' → logprob: -20.750017166137695
    8. '[max' → logprob: -20.875017166137695
    9. '_max' → logprob: -21.000017166137695
    10. '
' → logprob: -21.250017166137695

Token 162: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0001354824344161898
    2. 'count' → logprob: -9.00013542175293
    3. '(max' → logprob: -11.87513542175293
    4. 'max' → logprob: -13.00013542175293
    5. '(count' → logprob: -13.62513542175293
    6. '_max' → logprob: -13.87513542175293
    7. '_value' → logprob: -15.00013542175293
    8. '(' → logprob: -16.00013542175293
    9. ')' → logprob: -16.50013542175293
    10. '_counts' → logprob: -16.62513542175293

Token 163: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5174898505210876
    2. '<|end|>' → logprob: -2.1424899101257324
    3. '       ' → logprob: -2.3924899101257324
    4. 'print' → logprob: -2.5174899101257324
    5. '   ' → logprob: -2.6424899101257324
    6. ')' → logprob: -4.017489910125732
    7. '*' → logprob: -4.642489910125732
    8. ' *' → logprob: -5.267489910125732
    9. ',' → logprob: -5.892489910125732
    10. ' print' → logprob: -6.767489910125732

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02206842228770256
    2. 'print' → logprob: -4.897068500518799
    3. '<|end|>' → logprob: -5.022068500518799
    4. '   ' → logprob: -5.897068500518799
    5. ')' → logprob: -6.397068500518799
    6. '
' → logprob: -6.522068500518799
    7. ' print' → logprob: -6.647068500518799
    8. ' ink' → logprob: -8.64706802368164
    9. '        
' → logprob: -9.27206802368164
    10. ' if' → logprob: -9.52206802368164

Token 165: ' area' (ID: 3624)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2592920958995819
    2. 'ink' → logprob: -1.6342921257019043
    3. 'if' → logprob: -4.009292125701904
    4. 'for' → logprob: -5.259292125701904
    5. '   ' → logprob: -5.384292125701904
    6. '       ' → logprob: -5.884292125701904
    7. ' ink' → logprob: -7.884292125701904
    8. '#' → logprob: -7.884292125701904
    9. 'import' → logprob: -8.634291648864746
    10. 'line' → logprob: -8.759291648864746

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231506824493408
    2. '=' → logprob: -0.8981506824493408
    3. ')' → logprob: -12.273150444030762
    4. '   ' → logprob: -12.648150444030762
    5. ' +=' → logprob: -13.023150444030762
    6. ' *=' → logprob: -13.023150444030762
    7. '*' → logprob: -13.023150444030762
    8. '*=' → logprob: -13.023150444030762
    9. '_area' → logprob: -13.148150444030762
    10. '<|end|>' → logprob: -13.648150444030762

Token 167: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.6138463020324707
    2. ' height' → logprob: -1.8638463020324707
    3. ' ink' → logprob: -2.4888463020324707
    4. 'w' → logprob: -2.6138463020324707
    5. 'dark' → logprob: -3.1138463020324707
    6. 'ink' → logprob: -3.2388463020324707
    7. ' w' → logprob: -3.8638463020324707
    8. ' dark' → logprob: -4.238846302032471
    9. 'width' → logprob: -4.238846302032471
    10. ' darkness' → logprob: -4.988846302032471

Token 168: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.282488614320755
    2. '*' → logprob: -1.4074885845184326
    3. '*w' → logprob: -6.657488822937012
    4. ' ' → logprob: -10.782488822937012
    5. '*object' → logprob: -11.907488822937012
    6. '   ' → logprob: -12.407488822937012
    7. ' ' → logprob: -12.532488822937012
    8. '**' → logprob: -13.282488822937012
    9. '*out' → logprob: -13.282488822937012
    10. '*(' → logprob: -13.282488822937012

Token 169: ' w' (ID: 286)
  Prédit: 'dark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dark' → logprob: -0.34582990407943726
    2. 'w' → logprob: -1.970829963684082
    3. 'ink' → logprob: -2.095829963684082
    4. ' ink' → logprob: -4.845829963684082
    5. '(' → logprob: -4.970829963684082
    6. ' darkness' → logprob: -5.095829963684082
    7. '(w' → logprob: -5.345829963684082
    8. ' dark' → logprob: -6.095829963684082
    9. ' w' → logprob: -7.095829963684082
    10. 'width' → logprob: -7.720829963684082

Token 170: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.399476557970047
    2. '
' → logprob: -1.1494765281677246
    3. '<|end|>' → logprob: -4.649476528167725
    4. '   ' → logprob: -6.649476528167725
    5. '        
' → logprob: -7.399476528167725
    6. '
' → logprob: -8.149477005004883
    7. ')' → logprob: -8.774477005004883
    8. '    
' → logprob: -9.024477005004883
    9. ' ink' → logprob: -9.774477005004883
    10. '  
' → logprob: -9.899477005004883

Token 172: ' ink' (ID: 22045)
  Prédit: 'ink'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' (adapté à ' ink') → logprob: -0.0021665559615939856
    2. 'if' → logprob: -6.752166748046875
    3. ' ink' → logprob: -7.752166748046875
    4. 'print' → logprob: -8.377166748046875
    5. 'area' → logprob: -8.877166748046875
    6. '   ' → logprob: -9.877166748046875
    7. '
' → logprob: -11.502166748046875
    8. '#' → logprob: -11.502166748046875
    9. 'inks' → logprob: -11.627166748046875
    10. 'inking' → logprob: -11.627166748046875

Token 173: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47409316897392273
    2. '+=' → logprob: -0.9740931987762451
    3. '+=(' → logprob: -11.599093437194824
    4. '+' → logprob: -12.724093437194824
    5. '=' → logprob: -12.849093437194824
    6. ' ' → logprob: -15.224093437194824
    7. '   ' → logprob: -15.349093437194824
    8. ' =' → logprob: -15.599093437194824
    9. ' ' → logprob: -15.599093437194824
    10. ']+=' → logprob: -15.724093437194824

Token 174: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.06881611794233322
    2. ' area' → logprob: -3.0688161849975586
    3. 'dark' → logprob: -3.9438161849975586
    4. ' dark' → logprob: -7.693816184997559
    5. ' darkness' → logprob: -9.193816184997559
    6. 'depth' → logprob: -10.568816184997559
    7. 'areas' → logprob: -11.443816184997559
    8. 'height' → logprob: -11.943816184997559
    9. 'density' → logprob: -12.068816184997559
    10. 'opacity' → logprob: -12.193816184997559

Token 175: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5752726793289185
    2. ' *' → logprob: -1.0752726793289185
    3. '
' → logprob: -2.700272560119629
    4. '*w' → logprob: -4.200272560119629
    5. '<|end|>' → logprob: -4.575272560119629
    6. '\n' → logprob: -6.950272560119629
    7. '**' → logprob: -7.575272560119629
    8. '```' → logprob: -7.700272560119629
    9. 'print' → logprob: -8.075272560119629
    10. '<|end|>' → logprob: -8.575272560119629

Token 176: ' darkness' (ID: 44420)
  Prédit: 'dark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dark' → logprob: -0.0014213069807738066
    2. ' darkness' → logprob: -7.1264214515686035
    3. ' dark' → logprob: -7.6264214515686035
    4. 'height' → logprob: -9.626420974731445
    5. '0' → logprob: -11.626420974731445
    6. 'depth' → logprob: -12.126420974731445
    7. 'density' → logprob: -12.251420974731445
    8. 'ink' → logprob: -12.376420974731445
    9. '.dark' → logprob: -12.751420974731445
    10. ' ' → logprob: -12.876420974731445

Token 177: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02415774017572403
    2. '   ' → logprob: -3.774157762527466
    3. ' print' → logprob: -7.149157524108887
    4. '
' → logprob: -9.899157524108887
    5. '<|end|>' → logprob: -10.024157524108887
    6. '```' → logprob: -11.649157524108887
    7. '	print' → logprob: -11.899157524108887
    8. ')' → logprob: -12.399157524108887
    9. '    
' → logprob: -12.524157524108887
    10. '#print' → logprob: -12.524157524108887

Token 179: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006133314222097397
    2. ' print' → logprob: -5.131133079528809
    3. '   ' → logprob: -8.506133079528809
    4. '	print' → logprob: -14.506133079528809
    5. '#print' → logprob: -14.631133079528809
    6. '
' → logprob: -14.756133079528809
    7. '```' → logprob: -14.881133079528809
    8. '(print' → logprob: -16.006134033203125
    9. ')' → logprob: -16.256134033203125
    10. '<|end|>' → logprob: -16.381134033203125

Token 180: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5150890946388245
    2. '(round' → logprob: -1.2650890350341797
    3. '(f' → logprob: -2.2650890350341797
    4. '(int' → logprob: -4.89008903503418
    5. '("{' → logprob: -5.39008903503418
    6. '(format' → logprob: -5.89008903503418
    7. '("%.' → logprob: -7.01508903503418
    8. '()' → logprob: -8.14008903503418
    9. '('{' → logprob: -8.26508903503418
    10. '(float' → logprob: -9.64008903503418

Token 181: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.08528673648834229
    2. 'round' → logprob: -3.2102866172790527
    3. 'format' → logprob: -4.085286617279053
    4. 'f' → logprob: -4.085286617279053
    5. '"{' → logprob: -5.585286617279053
    6. 'int' → logprob: -6.460286617279053
    7. ' ink' → logprob: -6.710286617279053
    8. ''{' → logprob: -7.085286617279053
    9. '{' → logprob: -9.210287094116211
    10. ' round' → logprob: -10.210287094116211

Token 182: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. '))' → logprob: -14.37500286102295
    3. ')`' → logprob: -14.37500286102295
    4. '*' → logprob: -14.62500286102295
    5. ' )' → logprob: -14.75000286102295
    6. '())' → logprob: -16.250001907348633
    7. '**' → logprob: -16.500001907348633
    8. ')
' → logprob: -16.875001907348633
    9. '()' → logprob: -17.125001907348633
    10. '`)' → logprob: -17.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 180
Tokens correctement prédits (1ère position, stricte): 77
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 154
Précision stricte (1ère position): 42.78%
Précision adaptée (1ère position): 47.22%
Précision (top 10): 85.56%
================================================================================
